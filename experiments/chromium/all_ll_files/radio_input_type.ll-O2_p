; ModuleID = '../../third_party/blink/renderer/core/html/forms/radio_input_type.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/radio_input_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.159", i32, [4 x i8], %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.295", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.311", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.336", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.275", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i64 }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::Worklist.248"* }
%"class.blink::Worklist.248" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.195" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.255", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257", %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { i64 }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { float }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.278", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.287" }
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.303" }
%"class.WTF::VectorBuffer.303" = type { %"class.WTF::VectorBufferBase.304" }
%"class.WTF::VectorBufferBase.304" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.317" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.234"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.567" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.335 }
%class.scoped_refptr.335 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.336" = type { %"struct.std::__1::__atomic_base.337" }
%"struct.std::__1::__atomic_base.337" = type { %"struct.std::__1::__cxx_atomic_impl.338" }
%"struct.std::__1::__cxx_atomic_impl.338" = type { %"struct.std::__1::__cxx_atomic_base_impl.339" }
%"struct.std::__1::__cxx_atomic_base_impl.339" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.112" }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i32 }
%"class.blink::RadioInputType" = type { %"class.blink::BaseCheckableInputType.base", [7 x i8] }
%"class.blink::BaseCheckableInputType.base" = type <{ %"class.blink::InputType", %"class.blink::InputTypeView", i8 }>
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.51", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::Member.57", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.49", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.59", %"class.blink::Member.61", %"class.blink::Member.4", %"class.blink::Member.63", %"class.blink::Member.63", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.90", %"class.blink::HeapVector.92" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.108", %"class.WTF::Vector.108", i8, i32, %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.123", %"class.blink::Member.125", %"class.blink::Member.127", %"class.blink::Member.129", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.132", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.98", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.143", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.77", %"class.blink::Member.75", %"class.blink::Member.352", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::UserActionElementSet", %"class.blink::Member.361", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.368", i16, i8, %"class.blink::Member.375", %"class.blink::Member.377", %"class.blink::Member.379", %"class.blink::Member.381", %"class.blink::TextLinkColors", %"class.blink::Member.383", i8, [7 x i8], %"class.blink::HeapHashMap.385", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.75", %"class.WTF::Vector.392", %"class.blink::Member.397", %"class.blink::Member.399", i8, %"class.blink::Member.75", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.401", %"class.blink::HeapVector.403", %"class.std::__1::unique_ptr.411", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.417", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.430", %"class.WTF::Vector.432", i8, i8, %"class.std::__1::unique_ptr.437", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.77", %"class.blink::HeapVector.443", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.451", i8, i32, %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.459", %"class.WTF::HashMap.461", %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.61", %"class.blink::Member.61", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.474", i8, i32, %"class.blink::Member.481", %"class.blink::Member.483", i32, %"class.blink::Member.485", %"class.blink::Member.487", %"class.blink::Member.489", %"class.std::__1::unique_ptr.491", i64, %"class.std::__1::unique_ptr.497", i32, i32, %"class.blink::Member.503", %"class.blink::Member.505", %"class.blink::Member.507", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.509", %"class.WTF::Vector.511", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.516", %"class.blink::Member.523", %"class.std::__1::unique_ptr.525", %"class.blink::Member.531", i8, i8, %"class.WTF::String", %"class.blink::Member.533", i8, [7 x i8], %"class.blink::HeapHashMap.535", %"class.blink::HeapObserverSet", %"class.blink::Member.549", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.551", i32, i8, i8, %"class.blink::WeakMember.553", %"class.blink::Member.554" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.101" }
%"class.blink::HeapHashMap.101" = type { %"class.WTF::HashMap.104" }
%"class.WTF::HashMap.104" = type { %"class.WTF::HashTable.105" }
%"class.WTF::HashTable.105" = type <{ %"struct.WTF::KeyValuePair.107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.107" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.108" = type { %"class.WTF::VectorBuffer.109" }
%"class.WTF::VectorBuffer.109" = type { %"class.WTF::VectorBufferBase.110" }
%"class.WTF::VectorBufferBase.110" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.112" }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.146 }
%class.scoped_refptr.146 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.147", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.147" = type { %"class.base::RefCounted.148" }
%"class.base::RefCounted.148" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.151" }
%"class.blink::HeapHashMap.151" = type { %"class.WTF::HashMap.154" }
%"class.WTF::HashMap.154" = type { %"class.WTF::HashTable.155" }
%"class.WTF::HashTable.155" = type <{ %"struct.WTF::KeyValuePair.157"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.157" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.354" }
%"class.blink::HeapHashMap.354" = type { %"class.WTF::HashMap.357" }
%"class.WTF::HashMap.357" = type { %"class.WTF::HashTable.358" }
%"class.WTF::HashTable.358" = type <{ %"struct.WTF::KeyValuePair.360"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.360" = type opaque
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.365" }
%"class.WTF::HashTable.365" = type <{ %"class.blink::WeakMember.367"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.367" = type opaque
%"class.blink::HeapHashSet.368" = type { %"class.WTF::HashSet.371" }
%"class.WTF::HashSet.371" = type { %"class.WTF::HashTable.372" }
%"class.WTF::HashTable.372" = type <{ %"class.blink::WeakMember.374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.374" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.385" = type { %"class.WTF::HashMap.388" }
%"class.WTF::HashMap.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"struct.WTF::KeyValuePair.391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.391" = type opaque
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.403" = type { %"class.WTF::Vector.406" }
%"class.WTF::Vector.406" = type { %"class.WTF::VectorBuffer.407" }
%"class.WTF::VectorBuffer.407" = type { %"class.WTF::VectorBufferBase.408" }
%"class.WTF::VectorBufferBase.408" = type { %"class.blink::Member.409"*, i32, i32 }
%"class.blink::Member.409" = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.417" = type { %"class.WTF::HashSet.420" }
%"class.WTF::HashSet.420" = type { %"class.WTF::HashTable.421" }
%"class.WTF::HashTable.421" = type <{ %"class.blink::WeakMember.423"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.423" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.424", i32, [4 x i8] }>
%"class.WTF::Vector.424" = type { %"class.WTF::VectorBuffer.425" }
%"class.WTF::VectorBuffer.425" = type { %"class.WTF::VectorBufferBase.426" }
%"class.WTF::VectorBufferBase.426" = type { %"struct.std::__1::pair.427"*, i32, i32 }
%"struct.std::__1::pair.427" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.77" = type { %"class.WTF::Vector.80" }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.blink::Member.75"*, i32, i32 }
%"class.blink::HeapVector.443" = type { %"class.WTF::Vector.446" }
%"class.WTF::Vector.446" = type { %"class.WTF::VectorBuffer.447" }
%"class.WTF::VectorBuffer.447" = type { %"class.WTF::VectorBufferBase.448" }
%"class.WTF::VectorBufferBase.448" = type { %"class.blink::Member.449"*, i32, i32 }
%"class.blink::Member.449" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.61" }
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.351", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.342, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.342 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.343" }>
%"class.base::RefCountedThreadSafe.343" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.344 }
%class.scoped_refptr.344 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.345", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.345" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.346" }
%"struct.std::__1::atomic.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__cxx_atomic_impl.349" }
%"struct.std::__1::__cxx_atomic_impl.349" = type { %"struct.std::__1::__cxx_atomic_base_impl.350" }
%"struct.std::__1::__cxx_atomic_base_impl.350" = type { i8 }
%"class.blink::WeakMember.351" = type { %"class.blink::MemberBase.62" }
%"class.blink::HeapHashSet.474" = type { %"class.WTF::HashSet.477" }
%"class.WTF::HashSet.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ %"class.blink::Member.480"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.480" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.511" = type { %"class.WTF::VectorBuffer.512" }
%"class.WTF::VectorBuffer.512" = type { %"class.WTF::VectorBufferBase.513" }
%"class.WTF::VectorBufferBase.513" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.516" = type { %"class.WTF::HashMap.519" }
%"class.WTF::HashMap.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.535" = type { %"class.WTF::HashMap.538" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.542" }
%"class.blink::HeapHashSet.542" = type { %"class.WTF::HashSet.545" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"class.blink::WeakMember.548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.548" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.61", %"class.blink::HeapHashSet.558", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.565", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.558" = type { %"class.WTF::HashSet.561" }
%"class.WTF::HashSet.561" = type { %"class.WTF::HashTable.562" }
%"class.WTF::HashTable.562" = type <{ %"class.blink::Member.564"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.564" = type opaque
%"class.blink::HeapTaskRunnerTimer.565" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.566", { i64, i64 } }
%"class.blink::WeakMember.566" = type { %"class.blink::MemberBase.552" }
%"class.blink::WeakMember.553" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.67" }
%"class.blink::HeapHashMap.67" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.75", i32, %"class.blink::HeapVector.77" }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.29" }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::HeapHashMap.31"* }
%"class.blink::HeapHashMap.31" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.92" = type { %"class.WTF::Vector.95" }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.blink::Member.98"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.47", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.27", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.39", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.34" }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %"class.blink::Member.37"*, i32, i32 }
%"class.blink::Member.37" = type opaque
%"class.blink::HeapVector.39" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::Member.45"*, i32, i32 }
%"class.blink::Member.45" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::InputType"* }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::InputTypeView"* }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.848" }
%"class.WTF::Vector.848" = type { %"class.WTF::VectorBuffer.849" }
%"class.WTF::VectorBuffer.849" = type { %"class.WTF::VectorBufferBase.850", [64 x i8] }
%"class.WTF::VectorBufferBase.850" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::MouseEvent" = type <{ %"class.blink::UIEventWithKeyState.base", [4 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i8, [7 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i32, i16, i16, %"class.blink::Member.572", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.578", i32, %"class.blink::Member.784" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.572", %"class.blink::Member.572", %"class.blink::Member.574", %"class.blink::Member.576", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::Event"* }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.601", %"class.blink::Member.603", %"class.blink::Member.605", %"class.blink::Member.607", i8, %"class.WTF::Vector.609" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.594" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.582" }
%"class.blink::HeapVector.582" = type { %"class.WTF::Vector.585" }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587", [32 x i8] }
%"class.WTF::VectorBufferBase.587" = type { %"struct.std::__1::pair.588"*, i32, i32 }
%"struct.std::__1::pair.588" = type { %"class.WTF::AtomicString", %"class.blink::Member.589" }
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::HeapVector.591"* }
%"class.blink::HeapVector.591" = type opaque
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.WTF::Vector.597"* }
%"class.WTF::Vector.597" = type opaque
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.789", %"class.blink::Member.791", %"class.blink::Member.578", i8, i32, i8, i32, %"class.blink::Member.793", %"class.blink::Member.603", %"class.blink::FrameLifecycle", %"class.blink::Member.601", %"class.blink::Member.601", %"class.blink::Member.601", %"class.blink::Member.601", %"class.blink::Member.601", %"class.blink::Member.601", %"class.blink::Member.795", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.805", i8, %"class.base::UnguessableToken", %"class.absl::optional.807", %"class.absl::optional.812", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.601", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.601", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.797" }
%"class.std::__1::vector.797" = type { %"class.std::__1::__vector_base.798" }
%"class.std::__1::__vector_base.798" = type { %"struct.std::__1::pair.799"*, %"struct.std::__1::pair.799"*, %"class.std::__1::__compressed_pair.800" }
%"struct.std::__1::pair.799" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"struct.std::__1::pair.799"* }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.807" = type { %"class.absl::optional_internal::optional_data.808" }
%"class.absl::optional_internal::optional_data.808" = type { %"class.absl::optional_internal::optional_data_base.809" }
%"class.absl::optional_internal::optional_data_base.809" = type { %"class.absl::optional_internal::optional_data_dtor_base.810" }
%"class.absl::optional_internal::optional_data_dtor_base.810" = type { i8, %union.anon.811 }
%union.anon.811 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.617 }
%union.anon.617 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.812" = type { %"class.absl::optional_internal::optional_data.813" }
%"class.absl::optional_internal::optional_data.813" = type { %"class.absl::optional_internal::optional_data_base.814" }
%"class.absl::optional_internal::optional_data_base.814" = type { %"class.absl::optional_internal::optional_data_dtor_base.815" }
%"class.absl::optional_internal::optional_data_dtor_base.815" = type { i8, %union.anon.816 }
%union.anon.816 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.817" }
%"class.blink::HeapHashSet.817" = type { %"class.WTF::HashSet.820" }
%"class.WTF::HashSet.820" = type { %"class.WTF::HashTable.821" }
%"class.WTF::HashTable.821" = type <{ %"class.blink::WeakMember.823"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.823" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.609" = type { %"class.WTF::VectorBuffer.610" }
%"class.WTF::VectorBuffer.610" = type { %"class.WTF::VectorBufferBase.611" }
%"class.WTF::VectorBufferBase.611" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.776" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.612, %"class.std::__1::unique_ptr.726", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.614, i32 }>
%class.scoped_refptr.612 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.614, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.692", %"class.absl::optional.697", %"class.absl::optional.653", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.717", i8, [7 x i8], %class.scoped_refptr.614, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.613" }>
%"class.base::RefCountedThreadSafe.613" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.621", %"class.std::__1::unique_ptr.627", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.633" }
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.633" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.614, %"class.std::__1::unique_ptr.634", %"class.absl::optional.643", %"struct.std::__1::atomic.336", i8, i8, i8, i8, i32, i32, %"class.absl::optional.653", %"class.std::__1::unique_ptr.658", i8, i64, %class.scoped_refptr.688, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.691" }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.614, i8, %"class.mojo::ScopedHandleBase.637", %class.scoped_refptr.638, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.639" }
%"class.mojo::ScopedHandleBase.637" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.638 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.639" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.643" = type { %"class.absl::optional_internal::optional_data.644" }
%"class.absl::optional_internal::optional_data.644" = type { %"class.absl::optional_internal::optional_data_base.645" }
%"class.absl::optional_internal::optional_data_base.645" = type { %"class.absl::optional_internal::optional_data_dtor_base.646" }
%"class.absl::optional_internal::optional_data_dtor_base.646" = type { i8, %union.anon.647 }
%union.anon.647 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.648", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.648" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.661", i8, i64, %class.scoped_refptr.662, %class.scoped_refptr.684 }
%"class.base::RepeatingCallback.661" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.662 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.663", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.673", i8, [7 x i8] }>
%"class.base::RefCounted.663" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.665", %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::map.673" = type { %"class.std::__1::__tree.674" }
%"class.std::__1::__tree.674" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%class.scoped_refptr.684 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.688 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.689 }
%class.scoped_refptr.689 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.786", [4 x i8], %"class.base::RepeatingCallback.729", %class.scoped_refptr.614, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.786" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.729" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.690 }
%class.scoped_refptr.690 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.691" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.692" = type { %"class.absl::optional_internal::optional_data.693" }
%"class.absl::optional_internal::optional_data.693" = type { %"class.absl::optional_internal::optional_data_base.694" }
%"class.absl::optional_internal::optional_data_base.694" = type { %"class.absl::optional_internal::optional_data_dtor_base.695" }
%"class.absl::optional_internal::optional_data_dtor_base.695" = type { i8, %union.anon.696 }
%union.anon.696 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.697" = type { %"class.absl::optional_internal::optional_data.698" }
%"class.absl::optional_internal::optional_data.698" = type { %"class.absl::optional_internal::optional_data_base.699" }
%"class.absl::optional_internal::optional_data_base.699" = type { %"class.absl::optional_internal::optional_data_dtor_base.700" }
%"class.absl::optional_internal::optional_data_dtor_base.700" = type { i8, [7 x i8], %union.anon.701 }
%union.anon.701 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.653" = type { %"class.absl::optional_internal::optional_data.654" }
%"class.absl::optional_internal::optional_data.654" = type { %"class.absl::optional_internal::optional_data_base.655" }
%"class.absl::optional_internal::optional_data_base.655" = type { %"class.absl::optional_internal::optional_data_dtor_base.656" }
%"class.absl::optional_internal::optional_data_dtor_base.656" = type { i8, %union.anon.657 }
%union.anon.657 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.702 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.702 = type { %"class.std::__1::map.705" }
%"class.std::__1::map.705" = type { %"class.std::__1::__tree.706" }
%"class.std::__1::__tree.706" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.707", %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.716"*, i64 }
%"class.std::__1::unique_ptr.716" = type opaque
%"class.std::__1::map.717" = type { %"class.std::__1::__tree.718" }
%"class.std::__1::__tree.718" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.719", %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.729", %"class.base::OnceCallback.730", %"class.absl::optional.731", %"class.absl::optional.736", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.743", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.751", %"class.std::__1::map.762", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.771", i8, %class.scoped_refptr.614, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.772" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.730" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.731" = type { %"class.absl::optional_internal::optional_data.732" }
%"class.absl::optional_internal::optional_data.732" = type { %"class.absl::optional_internal::optional_data_base.733" }
%"class.absl::optional_internal::optional_data_base.733" = type { %"class.absl::optional_internal::optional_data_dtor_base.734" }
%"class.absl::optional_internal::optional_data_dtor_base.734" = type { i8, %union.anon.735 }
%union.anon.735 = type { %"class.base::TimeDelta" }
%"class.absl::optional.736" = type { %"class.absl::optional_internal::optional_data.737" }
%"class.absl::optional_internal::optional_data.737" = type { %"class.absl::optional_internal::optional_data_base.738" }
%"class.absl::optional_internal::optional_data_base.738" = type { %"class.absl::optional_internal::optional_data_dtor_base.739" }
%"class.absl::optional_internal::optional_data_dtor_base.739" = type { i8, %union.anon.740 }
%union.anon.740 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.614, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.741" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.741" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.742 }
%class.scoped_refptr.742 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.746", %class.scoped_refptr.747 }
%"class.base::RepeatingCallback.746" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.747 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.613", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.751" = type { %"class.std::__1::__tree.752" }
%"class.std::__1::__tree.752" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.753", %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::map.762" = type { %"class.std::__1::__tree.763" }
%"class.std::__1::__tree.763" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.764", %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.base::OnceCallback.771" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.772" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.614 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::DoublePoint" = type { double, double }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::EventTarget"* }
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.824", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::FocusParams" = type <{ i32, i32, %"class.blink::InputDeviceCapabilities"*, %"class.blink::FocusOptions"*, i8, [7 x i8] }>
%"class.blink::FocusOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.854", %"class.blink::Member.857", %"class.blink::Member.859", %"class.blink::Member.878", %"class.blink::Member.880" }
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.856 }
%"class.blink::LayoutObject" = type opaque
%class.scoped_refptr.856 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.863", %"class.blink::HeapHashSet.872" }
%"class.blink::HeapVector.863" = type { %"class.WTF::Vector.866" }
%"class.WTF::Vector.866" = type { %"class.WTF::VectorBuffer.867" }
%"class.WTF::VectorBuffer.867" = type { %"class.WTF::VectorBufferBase.868" }
%"class.WTF::VectorBufferBase.868" = type { %"class.blink::Member.869"*, i32, i32 }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.872" = type { %"class.WTF::HashSet.875" }
%"class.WTF::HashSet.875" = type { %"class.WTF::HashTable.876" }
%"class.WTF::HashTable.876" = type <{ %"class.blink::Member.869"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::HeapHashSet.882"* }
%"class.blink::HeapHashSet.882" = type opaque
%"class.blink::BaseCheckableInputType" = type <{ %"class.blink::InputType", %"class.blink::InputTypeView", i8, [7 x i8] }>
%"class.blink::ClickHandlingState" = type { %"class.blink::EventDispatchHandlingState", i8, i8, %"class.blink::Member" }
%"class.blink::EventDispatchHandlingState" = type { i32 (...)** }
%"class.blink::FormData" = type opaque
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, %union.anon.838 }
%union.anon.838 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.839" }
%"class.base::time_internal::TimeBase.839" = type { i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.840" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.840" = type { %"class.v8::TracedReference.841" }
%"class.v8::TracedReference.841" = type { %"class.v8::BasicTracedReference.842" }
%"class.v8::BasicTracedReference.842" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::FileList" = type opaque
%"class.WTF::Vector.843" = type { %"class.WTF::VectorBuffer.844" }
%"class.WTF::VectorBuffer.844" = type { %"class.WTF::VectorBufferBase.845" }
%"class.WTF::VectorBufferBase.845" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::DragData" = type opaque
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FormControlState" = type opaque
%"class.blink::BeforeTextInsertedEvent" = type opaque
%"class.blink::AXObject" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink9TraversalINS_16HTMLInputElementEE20InclusiveFirstWithinERNS_4NodeE = comdat any

$_ZN5blink22BaseCheckableInputTypeD2Ev = comdat any

$_ZN5blink14RadioInputTypeD0Ev = comdat any

$_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv = comdat any

$_ZThn16_N5blink14RadioInputTypeD1Ev = comdat any

$_ZThn16_N5blink14RadioInputTypeD0Ev = comdat any

$_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv = comdat any

$_ZN5blink13InputTypeView21EnsureFallbackContentEv = comdat any

$_ZN5blink13InputTypeView20EnsurePrimaryContentEv = comdat any

$_ZNK5blink13InputTypeView18HasFallbackContentEv = comdat any

$_ZNK5blink13InputTypeView17FocusedFieldIndexEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_26EventDispatchHandlingStateEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_26EventDispatchHandlingStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_26EventDispatchHandlingStateEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink16input_type_names6kRadioE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kRequiredAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [8 x i8] c"ArrowUp\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"ArrowDown\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"ArrowLeft\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"ArrowRight\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Enter\00", align 1
@_ZTVN5blink14RadioInputTypeE = hidden unnamed_addr constant { [101 x i8*], [60 x i8*] } { [101 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*)* @_ZN5blink14RadioInputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*)* @_ZNK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::InputTypeView"* (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType10CreateViewEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::RadioInputType"*)* @_ZNK5blink14RadioInputType15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsInteractiveContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12IsTextButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsTextFieldEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsFormDataAppendableEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormData"*)* @_ZNK5blink22BaseCheckableInputType16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType21ResultForDialogSubmitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24ValueInFilenameValueModeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12DefaultLabelEv to i8*), i8* bitcast (i32 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType12GetValueModeEv to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType11ValueAsDateEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.absl::optional.834"*, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType13ValueAsDoubleEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType14ReadingCheckedEv to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, i1)* @_ZN5blink14RadioInputType21WillUpdateCheckednessEb to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType18SupportsValidationEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsRequiredEv to i8*), i8* bitcast (i1 (%"class.blink::RadioInputType"*, %"class.WTF::String"*)* @_ZNK5blink14RadioInputType12ValueMissingERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*)* @_ZNK5blink9InputType21DefaultValueForStepUpEv to i8*), i8* bitcast (void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)* @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12BadInputTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16TypeMismatchTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::RadioInputType"*)* @_ZNK5blink14RadioInputType16ValueMissingTextEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType17CanSetStringValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12VisibleValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::RadioInputType"*)* @_ZNK5blink14RadioInputType19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20LayoutObjectIsNeededEv to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*)* @_ZN5blink14RadioInputType10CountUsageEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27ShouldRespectAlignAttributeEv to i8*), i8* bitcast (%"class.blink::FileList"* (%"class.blink::InputType"*)* @_ZN5blink9InputType5FilesEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType8SetFilesEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::Vector.843"*)* @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)* @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZN5blink9InputType19DroppedFileSystemIdEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20CanSetSuggestedValueEv to i8*), i8* bitcast (i1 (%"class.blink::RadioInputType"*)* @_ZN5blink14RadioInputType40ShouldSendChangeEventAfterCheckedChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.WTF::String"*, i1, i32, i32)* @_ZN5blink22BaseCheckableInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType26ShouldRespectListAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType14IsEnumeratableEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType11IsCheckableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsSteppableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MaxLengthEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MinLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19SupportsPlaceholderEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsReadOnlyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)* @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType24OnAttachWithLayoutObjectEv to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::RadioInputType"*)* @_ZNK5blink14RadioInputType25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType26SupportsInputModeAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20SupportsSelectionAPIEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType6HeightEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType5WidthEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType19DispatchSearchEventEv to i8*), i8* bitcast (%"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)* @_ZN5blink9InputType21GetColorChooserClientEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink14RadioInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv to i8*), i8* bitcast (void ()* @_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*)* @_ZN5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, i32)* @_ZN5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::MouseEvent"*)* @_ZN5blink14RadioInputType16HandleClickEventERNS_10MouseEventE to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink14RadioInputType16HandleKeyupEventERNS_13KeyboardEventE to i8*), i8* bitcast (%"class.blink::ClickHandlingState"* (%"class.blink::RadioInputType"*)* @_ZN5blink14RadioInputType17WillDispatchClickEv to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)* @_ZN5blink14RadioInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE to i8*)], [60 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*)* @_ZThn16_N5blink14RadioInputTypeD1Ev to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*)* @_ZThn16_N5blink14RadioInputTypeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, i32, i32*)* @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::MouseEvent"*)* @_ZThn16_N5blink14RadioInputType16HandleClickEventERNS_10MouseEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE to i8*), i8* bitcast (%"class.blink::ClickHandlingState"* (%"class.blink::RadioInputType"*)* @_ZThn16_N5blink14RadioInputType17WillDispatchClickEv to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)* @_ZThn16_N5blink14RadioInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink14RadioInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink14RadioInputType16HandleKeyupEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)* @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FormForSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)* @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_N5blink22BaseCheckableInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, i32)* @_ZThn16_N5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView4BlurEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17SubtreeHasChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)* @_ZNK5blink13InputTypeView18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)* @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE to i8*), i8* bitcast (i8 (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ComputedTextDirectionEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView14ClosePopupViewEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14HasOpenedPopupEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19CreateShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv to i8*), i8* bitcast (%"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView12UploadButtonEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14FileStatusTextEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20StepAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19AltAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19SrcAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView10UpdateViewEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MultipleAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ValueAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)* @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView26ListAttributeTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, i1)* @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17PopupRootAXObjectEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21EnsureFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20EnsurePrimaryContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView18HasFallbackContentEv to i8*), i8* bitcast (void ()* @_ZThn16_NK5blink22BaseCheckableInputType20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*)* @_ZThn16_N5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView15IsDraggedSliderEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView11HasBadInputEv to i8*), i8* bitcast (i32 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FocusedFieldIndexEv to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26EventDispatchHandlingStateEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventDispatchHandlingState]\00", align 1
@_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_26EventDispatchHandlingStateEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_26EventDispatchHandlingStateEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink18ClickHandlingStateE = external unnamed_addr constant { [3 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RadioInputType10CountUsageEv(%"class.blink::RadioInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"* %2, i32 2850) #7
  ret void
}

declare void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14RadioInputType15FormControlTypeEv(%"class.blink::RadioInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14RadioInputType12ValueMissingERKN3WTF6StringE(%"class.blink::RadioInputType"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %5 = tail call %"class.blink::RadioButtonGroupScope"* @_ZNK5blink16HTMLInputElement24GetRadioButtonGroupScopeEv(%"class.blink::HTMLInputElement"* %4) #7
  %6 = icmp eq %"class.blink::RadioButtonGroupScope"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZNK5blink21RadioButtonGroupScope17IsInRequiredGroupEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"* nonnull %5, %"class.blink::HTMLInputElement"* %4) #7
  br i1 %8, label %9, label %180

9:                                                ; preds = %7
  %10 = tail call %"class.blink::HTMLInputElement"* @_ZNK5blink14RadioInputType26CheckedRadioButtonForGroupEv(%"class.blink::RadioInputType"* %0)
  %11 = icmp eq %"class.blink::HTMLInputElement"* %10, null
  br label %180

12:                                               ; preds = %2
  %13 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %4) #7
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %180, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %180, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = tail call dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"* %22) #7
  %24 = tail call %"class.blink::HTMLInputElement"* @_ZN5blink9TraversalINS_16HTMLInputElementEE20InclusiveFirstWithinERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %23)
  %25 = icmp eq %"class.blink::HTMLInputElement"* %24, null
  br i1 %25, label %172, label %26

26:                                               ; preds = %21
  %27 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kRequiredAttrE, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %170, %26
  %34 = phi %"class.blink::HTMLInputElement"* [ %24, %26 ], [ %171, %170 ]
  %35 = phi i8 [ 0, %26 ], [ %119, %170 ]
  %36 = phi i8 [ 0, %26 ], [ %118, %170 ]
  %37 = bitcast %"class.blink::HTMLInputElement"* %34 to %"class.blink::HTMLFormControlElement"*
  %38 = bitcast %"class.blink::HTMLInputElement"* %34 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %39 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %39, i64 171
  %41 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %40, align 8
  %42 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %41(%"class.blink::HTMLFormControlElement"* nonnull %37) #7
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %117

47:                                               ; preds = %33
  %48 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* nonnull %34) #7
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %53, label %117

53:                                               ; preds = %47
  %54 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"* nonnull %37) #7
  %55 = icmp eq %"class.blink::HTMLFormElement"* %54, null
  br i1 %55, label %56, label %117

56:                                               ; preds = %53
  %57 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* nonnull %34) #7
  %58 = select i1 %57, i8 1, i8 %35
  %59 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %59, align 8
  %61 = icmp eq %"class.blink::ElementData"* %60, null
  br i1 %61, label %112, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %60, i64 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::ElementData"* %60 to %"class.blink::UniqueElementData"*
  %69 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %60, i64 1, i32 1
  %70 = bitcast %"class.blink::Member.18"* %69 to %"class.blink::Attribute"**
  %71 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %68, i64 0, i32 2, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  br label %79

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %60, i64 1
  %76 = bitcast %"class.blink::ElementData"* %75 to %"class.blink::Attribute"*
  %77 = lshr i32 %64, 1
  %78 = and i32 %77, 268435455
  br label %79

79:                                               ; preds = %74, %67
  %80 = phi %"class.blink::Attribute"* [ %76, %74 ], [ %71, %67 ]
  %81 = phi i32 [ %78, %74 ], [ %73, %67 ]
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %80, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %112, label %85

85:                                               ; preds = %79
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 3, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %105, %85
  %90 = phi %"class.blink::Attribute"* [ %80, %85 ], [ %106, %105 ]
  %91 = phi i32 [ 0, %85 ], [ %107, %105 ]
  %92 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %90, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %94 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %93, %86
  br i1 %94, label %109, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %97, %98
  br i1 %99, label %100, label %105

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 4, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %102, %103
  br i1 %104, label %109, label %105

105:                                              ; preds = %100, %95
  %106 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %90, i64 1
  %107 = add i32 %91, 1
  %108 = icmp eq %"class.blink::Attribute"* %106, %83
  br i1 %108, label %112, label %89

109:                                              ; preds = %89, %100
  %110 = icmp eq i32 %91, -1
  %111 = select i1 %110, i8 %36, i8 1
  br label %112

112:                                              ; preds = %105, %109, %79, %56
  %113 = phi i8 [ %36, %56 ], [ %36, %79 ], [ %111, %109 ], [ %36, %105 ]
  %114 = and i8 %58, 1
  %115 = and i8 %114, %113
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %180

117:                                              ; preds = %47, %33, %112, %53
  %118 = phi i8 [ %36, %33 ], [ %36, %47 ], [ %36, %53 ], [ %113, %112 ]
  %119 = phi i8 [ %35, %33 ], [ %35, %47 ], [ %35, %53 ], [ %58, %112 ]
  %120 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  %122 = icmp eq %"class.blink::Node"* %121, null
  br i1 %122, label %123, label %133

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = icmp eq %"class.blink::Node"* %124, %23
  br i1 %125, label %172, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %128 = load %"class.blink::Node"*, %"class.blink::Node"** %127, align 8
  %129 = icmp eq %"class.blink::Node"* %128, null
  br i1 %129, label %130, label %133

130:                                              ; preds = %126
  %131 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %124, %"class.blink::Node"* %23) #7
  %132 = icmp eq %"class.blink::Node"* %131, null
  br i1 %132, label %172, label %133

133:                                              ; preds = %130, %126, %117
  %134 = phi %"class.blink::Node"* [ %121, %117 ], [ %128, %126 ], [ %131, %130 ]
  br label %135

135:                                              ; preds = %133, %167
  %136 = phi %"class.blink::Node"* [ %168, %167 ], [ %134, %133 ]
  %137 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %136, i64 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 48
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %151

141:                                              ; preds = %135
  %142 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %136, i64 1, i32 2
  %144 = bitcast %"class.blink::Member.2"* %143 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %142, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %147, %149
  br i1 %150, label %170, label %151

151:                                              ; preds = %141, %135
  %152 = and i32 %138, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %136, i64 1
  %156 = bitcast %"class.blink::Node"* %155 to %"class.blink::Node"**
  %157 = load %"class.blink::Node"*, %"class.blink::Node"** %156, align 8
  %158 = icmp eq %"class.blink::Node"* %157, null
  br i1 %158, label %159, label %167

159:                                              ; preds = %154, %151
  %160 = icmp eq %"class.blink::Node"* %136, %23
  br i1 %160, label %172, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %136, i64 0, i32 5, i32 0, i32 0
  %163 = load %"class.blink::Node"*, %"class.blink::Node"** %162, align 8
  %164 = icmp eq %"class.blink::Node"* %163, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  %166 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %136, %"class.blink::Node"* %23) #7
  br label %167

167:                                              ; preds = %165, %161, %154
  %168 = phi %"class.blink::Node"* [ %166, %165 ], [ %163, %161 ], [ %157, %154 ]
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %172, label %135

170:                                              ; preds = %141
  %171 = bitcast %"class.blink::Node"* %136 to %"class.blink::HTMLInputElement"*
  br label %33

172:                                              ; preds = %123, %130, %159, %167, %21
  %173 = phi i8 [ 0, %21 ], [ %118, %167 ], [ %118, %159 ], [ %118, %130 ], [ %118, %123 ]
  %174 = phi i8 [ 0, %21 ], [ %119, %167 ], [ %119, %159 ], [ %119, %130 ], [ %119, %123 ]
  %175 = and i8 %173, 1
  %176 = icmp ne i8 %175, 0
  %177 = and i8 %174, 1
  %178 = icmp eq i8 %177, 0
  %179 = and i1 %176, %178
  br label %180

180:                                              ; preds = %112, %12, %7, %9, %17, %172
  %181 = phi i1 [ false, %17 ], [ %179, %172 ], [ %11, %9 ], [ false, %7 ], [ false, %12 ], [ false, %112 ]
  ret i1 %181
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::RadioButtonGroupScope"* @_ZNK5blink16HTMLInputElement24GetRadioButtonGroupScopeEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink21RadioButtonGroupScope17IsInRequiredGroupEPNS_16HTMLInputElementE(%"class.blink::RadioButtonGroupScope"*, %"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLInputElement"* @_ZNK5blink14RadioInputType26CheckedRadioButtonForGroupEv(%"class.blink::RadioInputType"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %3) #7
  br i1 %4, label %105, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::RadioButtonGroupScope"* @_ZNK5blink16HTMLInputElement24GetRadioButtonGroupScopeEv(%"class.blink::HTMLInputElement"* %3) #7
  %7 = icmp eq %"class.blink::RadioButtonGroupScope"* %6, null
  %8 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %3) #7
  br i1 %7, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call %"class.blink::HTMLInputElement"* @_ZNK5blink21RadioButtonGroupScope21CheckedButtonForGroupERKN3WTF12AtomicStringE(%"class.blink::RadioButtonGroupScope"* nonnull %6, %"class.WTF::AtomicString"* dereferenceable(8) %8) #7
  br label %105

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %105, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %105, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = tail call dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"* %20) #7
  %22 = tail call %"class.blink::HTMLInputElement"* @_ZN5blink9TraversalINS_16HTMLInputElementEE20InclusiveFirstWithinERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %21)
  %23 = icmp eq %"class.blink::HTMLInputElement"* %22, null
  br i1 %23, label %105, label %24

24:                                               ; preds = %19
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %103, %24
  %30 = phi %"class.blink::HTMLInputElement"* [ %22, %24 ], [ %104, %103 ]
  %31 = bitcast %"class.blink::HTMLInputElement"* %30 to %"class.blink::HTMLFormControlElement"*
  %32 = bitcast %"class.blink::HTMLInputElement"* %30 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %33 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %33, i64 171
  %35 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %34, align 8
  %36 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %35(%"class.blink::HTMLFormControlElement"* nonnull %31) #7
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, %39
  br i1 %40, label %41, label %52

41:                                               ; preds = %29
  %42 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* nonnull %30) #7
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  %48 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"* nonnull %31) #7
  %49 = icmp eq %"class.blink::HTMLFormElement"* %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* nonnull %30) #7
  br i1 %51, label %105, label %52

52:                                               ; preds = %41, %29, %47, %50
  %53 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %56, label %66

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = icmp eq %"class.blink::Node"* %57, %21
  br i1 %58, label %105, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %57, %"class.blink::Node"* %21) #7
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %105, label %66

66:                                               ; preds = %63, %59, %52
  %67 = phi %"class.blink::Node"* [ %54, %52 ], [ %61, %59 ], [ %64, %63 ]
  br label %68

68:                                               ; preds = %66, %100
  %69 = phi %"class.blink::Node"* [ %101, %100 ], [ %67, %66 ]
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 48
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %68
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 1, i32 2
  %77 = bitcast %"class.blink::Member.2"* %76 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %80, %82
  br i1 %83, label %103, label %84

84:                                               ; preds = %74, %68
  %85 = and i32 %71, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 1
  %89 = bitcast %"class.blink::Node"* %88 to %"class.blink::Node"**
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %92, label %100

92:                                               ; preds = %87, %84
  %93 = icmp eq %"class.blink::Node"* %69, %21
  br i1 %93, label %105, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 0, i32 5, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %69, %"class.blink::Node"* %21) #7
  br label %100

100:                                              ; preds = %98, %94, %87
  %101 = phi %"class.blink::Node"* [ %99, %98 ], [ %96, %94 ], [ %90, %87 ]
  %102 = icmp eq %"class.blink::Node"* %101, null
  br i1 %102, label %105, label %68

103:                                              ; preds = %74
  %104 = bitcast %"class.blink::Node"* %69 to %"class.blink::HTMLInputElement"*
  br label %29

105:                                              ; preds = %56, %63, %50, %92, %100, %19, %11, %9, %15, %1
  %106 = phi %"class.blink::HTMLInputElement"* [ %10, %9 ], [ %3, %1 ], [ null, %15 ], [ null, %11 ], [ null, %19 ], [ null, %100 ], [ null, %92 ], [ null, %56 ], [ null, %63 ], [ %30, %50 ]
  ret %"class.blink::HTMLInputElement"* %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"*) unnamed_addr #1

declare dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLInputElement"* @_ZN5blink9TraversalINS_16HTMLInputElementEE20InclusiveFirstWithinERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp ne i32 %4, 0
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member.2"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %67, label %20

20:                                               ; preds = %1, %8
  %21 = and i32 %3, 2
  %22 = icmp eq i32 %21, 0
  %23 = or i1 %6, %22
  br i1 %23, label %67, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %26 = bitcast %"class.blink::Node"* %25 to %"class.blink::Node"**
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %67, label %29

29:                                               ; preds = %24
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %64, %29
  %33 = phi %"class.blink::Node"* [ %27, %29 ], [ %65, %64 ]
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 48
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %32
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 2
  %41 = bitcast %"class.blink::Member.2"* %40 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  br i1 %47, label %67, label %48

48:                                               ; preds = %38, %32
  %49 = and i32 %35, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1
  %53 = bitcast %"class.blink::Node"* %52 to %"class.blink::Node"**
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %56, label %64

56:                                               ; preds = %51, %48
  %57 = icmp eq %"class.blink::Node"* %33, %0
  br i1 %57, label %67, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 5, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %33, %"class.blink::Node"* nonnull %0) #7
  br label %64

64:                                               ; preds = %62, %58, %51
  %65 = phi %"class.blink::Node"* [ %63, %62 ], [ %60, %58 ], [ %54, %51 ]
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %67, label %32

67:                                               ; preds = %64, %56, %38, %24, %20, %8
  %68 = phi %"class.blink::Node"* [ %0, %8 ], [ null, %24 ], [ null, %20 ], [ null, %56 ], [ %33, %38 ], [ null, %64 ]
  %69 = bitcast %"class.blink::Node"* %68 to %"class.blink::HTMLInputElement"*
  ret %"class.blink::HTMLInputElement"* %69
}

declare %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14RadioInputType16ValueMissingTextEv(%"class.blink::RadioInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %2) #7
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %3, i32 25044) #7
  ret %"class.WTF::StringImpl"* %4
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14RadioInputType16HandleClickEventERNS_10MouseEventE(%"class.blink::RadioInputType"* nocapture readnone, %"class.blink::MouseEvent"* nocapture dereferenceable(296)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::MouseEvent", %"class.blink::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i16, i16* %3, align 8
  %5 = or i16 %4, 64
  store i16 %5, i16* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RadioInputType16HandleClickEventERNS_10MouseEventE(%"class.blink::RadioInputType"* nocapture readnone, %"class.blink::MouseEvent"* nocapture dereferenceable(296)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::MouseEvent", %"class.blink::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i16, i16* %3, align 8
  %5 = or i16 %4, 64
  store i16 %5, i16* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType35FindNextFocusableRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::RadioInputType"* nocapture readnone, %"class.blink::HTMLInputElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* %1, i1 zeroext %2)
  %5 = icmp eq %"class.blink::HTMLInputElement"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %3, %10
  %7 = phi %"class.blink::HTMLInputElement"* [ %11, %10 ], [ %4, %3 ]
  %8 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %8) #7
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* nonnull %7, i1 zeroext %2)
  %12 = icmp eq %"class.blink::HTMLInputElement"* %11, null
  br i1 %12, label %13, label %6

13:                                               ; preds = %6, %10, %3
  %14 = phi %"class.blink::HTMLInputElement"* [ null, %3 ], [ null, %10 ], [ %7, %6 ]
  ret %"class.blink::HTMLInputElement"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %4 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %3, align 8
  br i1 %1, label %5, label %59

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.blink::Node"* %11, %6
  br i1 %12, label %199, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %11, %"class.blink::Node"* %6) #7
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %199, label %20

20:                                               ; preds = %17, %13, %5
  %21 = phi %"class.blink::Node"* [ %18, %17 ], [ %15, %13 ], [ %8, %5 ]
  %22 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %22, i64 0, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %56, %20
  %25 = phi %"class.blink::Node"* [ %21, %20 ], [ %57, %56 ]
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 48
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %24
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1, i32 2
  %33 = bitcast %"class.blink::Member.2"* %32 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %86, label %40

40:                                               ; preds = %30, %24
  %41 = and i32 %27, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1
  %45 = bitcast %"class.blink::Node"* %44 to %"class.blink::Node"**
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %48, label %56

48:                                               ; preds = %43, %40
  %49 = icmp eq %"class.blink::Node"* %25, %6
  br i1 %49, label %199, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %25, %"class.blink::Node"* %6) #7
  br label %56

56:                                               ; preds = %54, %50, %43
  %57 = phi %"class.blink::Node"* [ %55, %54 ], [ %52, %50 ], [ %46, %43 ]
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %199, label %24

59:                                               ; preds = %2
  %60 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %60, %"class.blink::Node"* %61) #7
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %199, label %64

64:                                               ; preds = %59
  %65 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %65, i64 0, i32 0, i32 0, i32 0
  br label %67

67:                                               ; preds = %83, %64
  %68 = phi %"class.blink::Node"* [ %62, %64 ], [ %84, %83 ]
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 48
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %67
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 1, i32 2
  %76 = bitcast %"class.blink::Member.2"* %75 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %79, %81
  br i1 %82, label %86, label %83

83:                                               ; preds = %73, %67
  %84 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %68, %"class.blink::Node"* %61) #7
  %85 = icmp eq %"class.blink::Node"* %84, null
  br i1 %85, label %199, label %67

86:                                               ; preds = %73, %30
  %87 = phi %"class.blink::Node"* [ %25, %30 ], [ %68, %73 ]
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %91 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %90, i64 0, i32 0, i32 0, i32 0
  br label %94

92:                                               ; preds = %184, %146
  %93 = phi %"class.blink::Node"* [ %141, %146 ], [ %179, %184 ]
  br label %94

94:                                               ; preds = %92, %86
  %95 = phi %"class.blink::Node"* [ %87, %86 ], [ %93, %92 ]
  %96 = bitcast %"class.blink::Node"* %95 to %"class.blink::HTMLInputElement"*
  %97 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %3, align 8
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 2
  %99 = bitcast %"class.blink::Node"* %98 to %"class.blink::HTMLFormElement"**
  %100 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %99, align 8
  %101 = icmp eq %"class.blink::HTMLFormElement"* %97, %100
  br i1 %101, label %102, label %121

102:                                              ; preds = %94
  %103 = bitcast %"class.blink::Node"* %95 to %"class.blink::HTMLFormControlElement"*
  %104 = bitcast %"class.blink::Node"* %95 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %105 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %105, i64 171
  %107 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %106, align 8
  %108 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %107(%"class.blink::HTMLFormControlElement"* nonnull %103) #7
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %110, %111
  br i1 %112, label %113, label %121

113:                                              ; preds = %102
  %114 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* nonnull %96) #7
  %115 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %0) #7
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %114, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %115, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %117, %119
  br i1 %120, label %197, label %121

121:                                              ; preds = %94, %102, %113
  %122 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %3, align 8
  %123 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %1, label %124, label %175

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 1
  %126 = bitcast %"class.blink::Node"* %125 to %"class.blink::Node"**
  %127 = load %"class.blink::Node"*, %"class.blink::Node"** %126, align 8
  %128 = icmp eq %"class.blink::Node"* %127, null
  br i1 %128, label %129, label %138

129:                                              ; preds = %124
  %130 = icmp eq %"class.blink::Node"* %95, %123
  br i1 %130, label %199, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 0, i32 5, i32 0, i32 0
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %138

135:                                              ; preds = %131
  %136 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %95, %"class.blink::Node"* %123) #7
  %137 = icmp eq %"class.blink::Node"* %136, null
  br i1 %137, label %199, label %138

138:                                              ; preds = %135, %131, %124
  %139 = phi %"class.blink::Node"* [ %127, %124 ], [ %133, %131 ], [ %136, %135 ]
  br label %140

140:                                              ; preds = %138, %172
  %141 = phi %"class.blink::Node"* [ %173, %172 ], [ %139, %138 ]
  %142 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = and i32 %143, 48
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %156

146:                                              ; preds = %140
  %147 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %148 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 1, i32 2
  %149 = bitcast %"class.blink::Member.2"* %148 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %150 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 3, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %152, %154
  br i1 %155, label %92, label %156

156:                                              ; preds = %146, %140
  %157 = and i32 %143, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 1
  %161 = bitcast %"class.blink::Node"* %160 to %"class.blink::Node"**
  %162 = load %"class.blink::Node"*, %"class.blink::Node"** %161, align 8
  %163 = icmp eq %"class.blink::Node"* %162, null
  br i1 %163, label %164, label %172

164:                                              ; preds = %159, %156
  %165 = icmp eq %"class.blink::Node"* %141, %123
  br i1 %165, label %199, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 0, i32 5, i32 0, i32 0
  %168 = load %"class.blink::Node"*, %"class.blink::Node"** %167, align 8
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  %171 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %141, %"class.blink::Node"* %123) #7
  br label %172

172:                                              ; preds = %170, %166, %159
  %173 = phi %"class.blink::Node"* [ %171, %170 ], [ %168, %166 ], [ %162, %159 ]
  %174 = icmp eq %"class.blink::Node"* %173, null
  br i1 %174, label %199, label %140

175:                                              ; preds = %121
  %176 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %95, %"class.blink::Node"* %123) #7
  %177 = icmp eq %"class.blink::Node"* %176, null
  br i1 %177, label %199, label %178

178:                                              ; preds = %175, %194
  %179 = phi %"class.blink::Node"* [ %195, %194 ], [ %176, %175 ]
  %180 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %179, i64 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = and i32 %181, 48
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %194

184:                                              ; preds = %178
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %186 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %179, i64 1, i32 2
  %187 = bitcast %"class.blink::Member.2"* %186 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %188 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 3, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %190, %192
  br i1 %193, label %92, label %194

194:                                              ; preds = %184, %178
  %195 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %179, %"class.blink::Node"* %123) #7
  %196 = icmp eq %"class.blink::Node"* %195, null
  br i1 %196, label %199, label %178

197:                                              ; preds = %113
  %198 = bitcast %"class.blink::Node"* %95 to %"class.blink::HTMLInputElement"*
  br label %199

199:                                              ; preds = %83, %48, %56, %197, %135, %129, %175, %194, %164, %172, %59, %10, %17
  %200 = phi %"class.blink::HTMLInputElement"* [ null, %17 ], [ null, %10 ], [ null, %59 ], [ null, %172 ], [ null, %164 ], [ null, %194 ], [ %198, %197 ], [ null, %135 ], [ null, %129 ], [ null, %175 ], [ null, %56 ], [ null, %48 ], [ null, %83 ]
  ret %"class.blink::HTMLInputElement"* %200
}

declare zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RadioInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"struct.blink::FocusParams", align 8
  %18 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %23, label %29, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.blink::NodeData"** %24 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  br label %31

29:                                               ; preds = %2
  %30 = bitcast %"class.blink::NodeData"** %24 to %"class.blink::NodeRenderingData"**
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %"class.blink::NodeRenderingData"** [ %28, %25 ], [ %30, %29 ]
  %33 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %33, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %296, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::RadioInputType"* %0 to %"class.blink::BaseCheckableInputType"*
  tail call void @_ZN5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"* %38, %"class.blink::KeyboardEvent"* dereferenceable(176) %1) #7
  %39 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %41 = load i16, i16* %40, align 8
  %42 = and i16 %41, 64
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %296

44:                                               ; preds = %37
  %45 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #7
  %46 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %51, i64* %52, align 8
  br label %61

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %59, align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %61

61:                                               ; preds = %53, %49
  %62 = phi i64 [ %60, %53 ], [ %51, %49 ]
  %63 = phi i32 [ %56, %53 ], [ 0, %49 ]
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %63, i32* %64, align 8
  %65 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #7
  %66 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %62, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 7, i32* %68, align 8
  %69 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #7
  br i1 %69, label %145, label %70

70:                                               ; preds = %61
  %71 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #7
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %75, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %76, i64* %77, align 8
  br label %86

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %84 = bitcast i8** %83 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %86

86:                                               ; preds = %78, %74
  %87 = phi i64 [ %85, %78 ], [ %76, %74 ]
  %88 = phi i32 [ %81, %78 ], [ 0, %74 ]
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %88, i32* %89, align 8
  %90 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #7
  %91 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %87, i64* %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 9, i32* %93, align 8
  %94 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #7
  br i1 %94, label %145, label %95

95:                                               ; preds = %86
  %96 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #7
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %100, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %102 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %101, i64* %102, align 8
  br label %111

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 1
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %109 = bitcast i8** %108 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %109, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

111:                                              ; preds = %103, %99
  %112 = phi i64 [ %110, %103 ], [ %101, %99 ]
  %113 = phi i32 [ %106, %103 ], [ 0, %99 ]
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %113, i32* %114, align 8
  %115 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #7
  %116 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %112, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 9, i32* %118, align 8
  %119 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #7
  br i1 %119, label %145, label %120

120:                                              ; preds = %111
  %121 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #7
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %125, align 8
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %127 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %126, i64* %127, align 8
  br label %136

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %134 = bitcast i8** %133 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %134, align 8
  %135 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %136

136:                                              ; preds = %128, %124
  %137 = phi i64 [ %135, %128 ], [ %126, %124 ]
  %138 = phi i32 [ %131, %128 ], [ 0, %124 ]
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %138, i32* %139, align 8
  %140 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #7
  %141 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %137, i64* %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 10, i32* %143, align 8
  %144 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #7
  br i1 %144, label %145, label %296

145:                                              ; preds = %136, %111, %86, %61
  %146 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = and i32 %147, 14
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %296

150:                                              ; preds = %145
  %151 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %18, align 8
  %152 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %153 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %153, i64 0, i32 2, i32 0, i32 0
  %155 = load %"class.blink::Document"*, %"class.blink::Document"** %154, align 8
  %156 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %155) #7
  %157 = call zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %156) #7
  br i1 %157, label %296, label %158

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 1
  %160 = call zeroext i8 @_ZN5blink13InputTypeView21ComputedTextDirectionEv(%"class.blink::InputTypeView"* %159) #7
  %161 = icmp eq i8 %160, 1
  %162 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #7
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %165, label %169

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %166, align 8
  %167 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %168 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %167, i64* %168, align 8
  br label %177

169:                                              ; preds = %158
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %170, align 8
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  %174 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %175 = bitcast i8** %174 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %175, align 8
  %176 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %177

177:                                              ; preds = %169, %165
  %178 = phi i64 [ %176, %169 ], [ %167, %165 ]
  %179 = phi i32 [ %172, %169 ], [ 0, %165 ]
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %179, i32* %180, align 8
  %181 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #7
  %182 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %178, i64* %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8** %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 9, i32* %184, align 8
  %185 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #7
  br i1 %161, label %186, label %212

186:                                              ; preds = %177
  br i1 %185, label %238, label %187

187:                                              ; preds = %186
  %188 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #7
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %191, label %195

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %192, align 8
  %193 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %194 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %193, i64* %194, align 8
  br label %203

195:                                              ; preds = %187
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %189, %"class.WTF::StringImpl"** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 1
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %201 = bitcast i8** %200 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %199, %"class.WTF::StringImpl"** %201, align 8
  %202 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %203

203:                                              ; preds = %195, %191
  %204 = phi i64 [ %202, %195 ], [ %193, %191 ]
  %205 = phi i32 [ %198, %195 ], [ 0, %191 ]
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %205, i32* %206, align 8
  %207 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #7
  %208 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %204, i64* %208, align 8
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %209, align 8
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 9, i32* %210, align 8
  %211 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #7
  br label %238

212:                                              ; preds = %177
  br i1 %185, label %238, label %213

213:                                              ; preds = %212
  %214 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #7
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %217, label %221

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %218, align 8
  %219 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %220 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %219, i64* %220, align 8
  br label %229

221:                                              ; preds = %213
  %222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %222, align 8
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 1
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %227 = bitcast i8** %226 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %227, align 8
  %228 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %229

229:                                              ; preds = %221, %217
  %230 = phi i64 [ %228, %221 ], [ %219, %217 ]
  %231 = phi i32 [ %224, %221 ], [ 0, %217 ]
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %231, i32* %232, align 8
  %233 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #7
  %234 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %230, i64* %234, align 8
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8** %235, align 8
  %236 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 10, i32* %236, align 8
  %237 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #7
  br label %238

238:                                              ; preds = %212, %229, %186, %203
  %239 = phi i1 [ true, %186 ], [ %211, %203 ], [ true, %212 ], [ %237, %229 ]
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %155, i32 12) #7
  %240 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %18, align 8
  %241 = call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* %240, i1 zeroext %239) #7
  %242 = icmp eq %"class.blink::HTMLInputElement"* %241, null
  br i1 %242, label %250, label %243

243:                                              ; preds = %238, %247
  %244 = phi %"class.blink::HTMLInputElement"* [ %248, %247 ], [ %241, %238 ]
  %245 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %245) #7
  br i1 %246, label %276, label %247

247:                                              ; preds = %243
  %248 = call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* nonnull %244, i1 zeroext %239) #7
  %249 = icmp eq %"class.blink::HTMLInputElement"* %248, null
  br i1 %249, label %250, label %243

250:                                              ; preds = %247, %238
  %251 = xor i1 %239, true
  %252 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %18, align 8
  %253 = call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* %252, i1 zeroext %251) #7
  %254 = icmp eq %"class.blink::HTMLInputElement"* %253, null
  br i1 %254, label %296, label %255

255:                                              ; preds = %250, %262
  %256 = phi %"class.blink::HTMLInputElement"* [ %259, %262 ], [ %253, %250 ]
  %257 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %257) #7
  %259 = call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* nonnull %256, i1 zeroext %251) #7
  %260 = icmp eq %"class.blink::HTMLInputElement"* %259, null
  br i1 %258, label %261, label %262

261:                                              ; preds = %255
  br i1 %260, label %276, label %264

262:                                              ; preds = %255
  br i1 %260, label %296, label %255

263:                                              ; preds = %267
  br i1 %272, label %276, label %264

264:                                              ; preds = %261, %263
  %265 = phi %"class.blink::HTMLInputElement"* [ %271, %263 ], [ %259, %261 ]
  %266 = phi %"class.blink::HTMLInputElement"* [ %268, %263 ], [ %256, %261 ]
  br label %267

267:                                              ; preds = %264, %273
  %268 = phi %"class.blink::HTMLInputElement"* [ %271, %273 ], [ %265, %264 ]
  %269 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %268, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %269) #7
  %271 = call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* nonnull %268, i1 zeroext %251) #7
  %272 = icmp eq %"class.blink::HTMLInputElement"* %271, null
  br i1 %270, label %263, label %273

273:                                              ; preds = %267
  br i1 %272, label %274, label %267

274:                                              ; preds = %273
  %275 = icmp eq %"class.blink::HTMLInputElement"* %266, null
  br i1 %275, label %296, label %276

276:                                              ; preds = %243, %263, %261, %274
  %277 = phi %"class.blink::HTMLInputElement"* [ %266, %274 ], [ %256, %261 ], [ %268, %263 ], [ %244, %243 ]
  %278 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = bitcast %"struct.blink::FocusParams"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %279) #7
  %280 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 16) #7
  %281 = bitcast i8* %280 to %"class.blink::FocusOptions"*
  call void @_ZN5blink12FocusOptionsC1Ev(%"class.blink::FocusOptions"* %281) #7
  %282 = getelementptr inbounds i8, i8* %280, i64 -4
  %283 = bitcast i8* %282 to i16*
  %284 = load atomic i16, i16* %283 monotonic, align 2
  %285 = or i16 %284, 1
  store atomic i16 %285, i16* %283 release, align 2
  %286 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %17, i64 0, i32 0
  store i32 1, i32* %286, align 8
  %287 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %17, i64 0, i32 1
  store i32 0, i32* %287, align 4
  %288 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %17, i64 0, i32 2
  store %"class.blink::InputDeviceCapabilities"* null, %"class.blink::InputDeviceCapabilities"** %288, align 8
  %289 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %17, i64 0, i32 3
  %290 = bitcast %"class.blink::FocusOptions"** %289 to i8**
  store i8* %280, i8** %290, align 8
  %291 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %17, i64 0, i32 4
  store i8 0, i8* %291, align 8
  %292 = call zeroext i1 @_ZN5blink8Document17SetFocusedElementEPNS_7ElementERKNS_11FocusParamsE(%"class.blink::Document"* %155, %"class.blink::Element"* %278, %"struct.blink::FocusParams"* nonnull dereferenceable(32) %17) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %279) #7
  %293 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"* %293, %"class.blink::Event"* %39, i32 1) #7
  %294 = load i16, i16* %40, align 8
  %295 = or i16 %294, 64
  store i16 %295, i16* %40, align 8
  br label %296

296:                                              ; preds = %262, %250, %136, %145, %37, %276, %274, %150, %31
  ret void
}

declare void @_ZN5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

declare zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i8 @_ZN5blink13InputTypeView21ComputedTextDirectionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink8Document17SetFocusedElementEPNS_7ElementERKNS_11FocusParamsE(%"class.blink::Document"*, %"class.blink::Element"*, %"struct.blink::FocusParams"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN5blink4Node22DispatchSimulatedClickEPKNS_5EventENS_27SimulatedClickCreationScopeE(%"class.blink::Node"*, %"class.blink::Event"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RadioInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::RadioInputType"*
  tail call void @_ZN5blink14RadioInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::RadioInputType"* %4, %"class.blink::KeyboardEvent"* dereferenceable(176) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RadioInputType16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %13, i64* %14, align 8
  br label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %25 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7
  %28 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7
  br i1 %31, label %66, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %38) #7
  %40 = call zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %39) #7
  br i1 %40, label %41, label %79

41:                                               ; preds = %32
  %42 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #7
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %48 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %47, i64* %48, align 8
  br label %57

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %57

57:                                               ; preds = %49, %45
  %58 = phi i64 [ %56, %49 ], [ %47, %45 ]
  %59 = phi i32 [ %52, %49 ], [ 0, %45 ]
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %59, i32* %60, align 8
  %61 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #7
  %62 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %58, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 5, i32* %64, align 8
  %65 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7
  br i1 %65, label %66, label %79

66:                                               ; preds = %57, %23
  %67 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %67, align 8
  %69 = call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %68) #7
  br i1 %69, label %70, label %77

70:                                               ; preds = %66
  %71 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %67, align 8
  %72 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.blink::HTMLInputElement"* %71 to void (%"class.blink::Element"*, i1)***
  %74 = load void (%"class.blink::Element"*, i1)**, void (%"class.blink::Element"*, i1)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %74, i64 140
  %76 = load void (%"class.blink::Element"*, i1)*, void (%"class.blink::Element"*, i1)** %75, align 8
  call void %76(%"class.blink::Element"* %72, i1 zeroext false) #7
  br label %79

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 1
  call void @_ZNK5blink13InputTypeView30DispatchSimulatedClickIfActiveERNS_13KeyboardEventE(%"class.blink::InputTypeView"* %78, %"class.blink::KeyboardEvent"* dereferenceable(176) %1) #7
  br label %79

79:                                               ; preds = %70, %77, %57, %32
  ret void
}

declare void @_ZNK5blink13InputTypeView30DispatchSimulatedClickIfActiveERNS_13KeyboardEventE(%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RadioInputType16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::RadioInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::RadioInputType"*
  tail call void @_ZN5blink14RadioInputType16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::RadioInputType"* %4, %"class.blink::KeyboardEvent"* dereferenceable(176) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14RadioInputType19IsKeyboardFocusableEv(%"class.blink::RadioInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"* %2) #7
  br i1 %3, label %4, label %77

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %10) #7
  %12 = tail call zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %11) #7
  br i1 %12, label %77, label %13

13:                                               ; preds = %4
  %14 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 43, i32 0, i32 0
  %20 = load %"class.blink::Element"*, %"class.blink::Element"** %19, align 8
  %21 = icmp eq %"class.blink::Element"* %20, null
  br i1 %21, label %71, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %20, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 48
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %71

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %20, i64 0, i32 0, i32 0
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1, i32 2
  %33 = bitcast %"class.blink::Member.2"* %32 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  %40 = bitcast %"class.blink::Element"* %20 to %"class.blink::HTMLInputElement"*
  br i1 %39, label %41, label %71

41:                                               ; preds = %27
  %42 = bitcast %"class.blink::Element"* %20 to %"class.blink::HTMLFormControlElement"*
  %43 = bitcast %"class.blink::Element"* %20 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %44 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %44, i64 171
  %46 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %45, align 8
  %47 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %46(%"class.blink::HTMLFormControlElement"* nonnull %42) #7
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, %52
  br i1 %53, label %54, label %71

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %20, i64 1, i32 0, i32 0, i32 2
  %56 = bitcast %"class.blink::Member.2"* %55 to %"class.blink::HTMLFormElement"**
  %57 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %56, align 8
  %58 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %59 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %60 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %59, align 8
  %61 = icmp eq %"class.blink::HTMLFormElement"* %57, %60
  br i1 %61, label %62, label %71

62:                                               ; preds = %54
  %63 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* nonnull %40) #7
  %64 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %65 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %64) #7
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %77, label %71

71:                                               ; preds = %27, %13, %22, %62, %54, %41
  %72 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %5, align 8
  %73 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %72) #7
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = tail call %"class.blink::HTMLInputElement"* @_ZNK5blink14RadioInputType26CheckedRadioButtonForGroupEv(%"class.blink::RadioInputType"* %0)
  %76 = icmp eq %"class.blink::HTMLInputElement"* %75, null
  br label %77

77:                                               ; preds = %62, %74, %71, %4, %1
  %78 = phi i1 [ false, %1 ], [ true, %4 ], [ false, %62 ], [ true, %71 ], [ %76, %74 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14RadioInputType40ShouldSendChangeEventAfterCheckedChangedEv(%"class.blink::RadioInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %3) #7
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClickHandlingState"* @_ZN5blink14RadioInputType17WillDispatchClickEv(%"class.blink::RadioInputType"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_26EventDispatchHandlingStateEEEPhm(i64 24) #7
  %3 = bitcast i8* %2 to %"class.blink::ClickHandlingState"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink18ClickHandlingStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast i8* %7 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* null, %"class.blink::HTMLInputElement"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %14) #7
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %4, align 8
  %17 = tail call %"class.blink::HTMLInputElement"* @_ZNK5blink14RadioInputType26CheckedRadioButtonForGroupEv(%"class.blink::RadioInputType"* %0)
  %18 = ptrtoint %"class.blink::HTMLInputElement"* %17 to i64
  %19 = bitcast i8* %7 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %1
  %23 = bitcast %"class.blink::HTMLInputElement"* %17 to i8*
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #7
  br label %25

25:                                               ; preds = %1, %22
  %26 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %26, i1 zeroext true, i32 1) #7
  %27 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %27, align 8
  ret %"class.blink::ClickHandlingState"* %3
}

declare void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClickHandlingState"* @_ZThn16_N5blink14RadioInputType17WillDispatchClickEv(%"class.blink::RadioInputType"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::RadioInputType"*
  %4 = tail call %"class.blink::ClickHandlingState"* @_ZN5blink14RadioInputType17WillDispatchClickEv(%"class.blink::RadioInputType"* %3)
  ret %"class.blink::ClickHandlingState"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RadioInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::RadioInputType"* nocapture, %"class.blink::Event"* nocapture dereferenceable(104), %"class.blink::ClickHandlingState"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 96
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %46, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::ClickHandlingState", %"class.blink::ClickHandlingState"* %2, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %9, align 8
  %11 = icmp eq %"class.blink::HTMLInputElement"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %14, i1 zeroext false, i32 0) #7
  br label %57

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::HTMLInputElement"* %10 to %"class.blink::HTMLFormControlElement"*
  %17 = bitcast %"class.blink::HTMLInputElement"* %10 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %18 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %18, i64 171
  %20 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %19, align 8
  %21 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %20(%"class.blink::HTMLFormControlElement"* nonnull %16) #7
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %28, label %57

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %30 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %34 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %33, align 8
  %35 = icmp eq %"class.blink::HTMLFormElement"* %30, %34
  br i1 %35, label %36, label %57

36:                                               ; preds = %28
  %37 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* nonnull %10) #7
  %38 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %31, align 8
  %39 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16HTMLInputElement7GetNameEv(%"class.blink::HTMLInputElement"* %38) #7
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %37, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %45, label %57

45:                                               ; preds = %36
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* nonnull %10, i1 zeroext true, i32 0) #7
  br label %57

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.blink::ClickHandlingState", %"class.blink::ClickHandlingState"* %2, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %51 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %50, align 8
  %52 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %51) #7
  %53 = zext i1 %52 to i32
  %54 = icmp eq i32 %49, %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %46
  %56 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %50, align 8
  tail call void @_ZN5blink16HTMLInputElement35DispatchInputAndChangeEventIfNeededEv(%"class.blink::HTMLInputElement"* %56) #7
  br label %57

57:                                               ; preds = %12, %45, %36, %28, %15, %46, %55
  %58 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %58, align 8
  %59 = load i16, i16* %4, align 8
  %60 = or i16 %59, 64
  store i16 %60, i16* %4, align 8
  ret void
}

declare void @_ZN5blink16HTMLInputElement35DispatchInputAndChangeEventIfNeededEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink14RadioInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::RadioInputType"* nocapture, %"class.blink::Event"* nocapture dereferenceable(104), %"class.blink::ClickHandlingState"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %5 = bitcast %"class.blink::Member"* %4 to %"class.blink::RadioInputType"*
  tail call void @_ZN5blink14RadioInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::RadioInputType"* %5, %"class.blink::Event"* dereferenceable(104) %1, %"class.blink::ClickHandlingState"* dereferenceable(24) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14RadioInputType25ShouldAppearIndeterminateEv(%"class.blink::RadioInputType"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLInputElement"* @_ZNK5blink14RadioInputType26CheckedRadioButtonForGroupEv(%"class.blink::RadioInputType"* %0)
  %3 = icmp eq %"class.blink::HTMLInputElement"* %2, null
  ret i1 %3
}

declare %"class.blink::HTMLInputElement"* @_ZNK5blink21RadioButtonGroupScope21CheckedButtonForGroupERKN3WTF12AtomicStringE(%"class.blink::RadioButtonGroupScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14RadioInputType21WillUpdateCheckednessEb(%"class.blink::RadioInputType"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %12

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = tail call %"class.blink::RadioButtonGroupScope"* @_ZNK5blink16HTMLInputElement24GetRadioButtonGroupScopeEv(%"class.blink::HTMLInputElement"* %5) #7
  %7 = icmp eq %"class.blink::RadioButtonGroupScope"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = tail call %"class.blink::HTMLInputElement"* @_ZNK5blink14RadioInputType26CheckedRadioButtonForGroupEv(%"class.blink::RadioInputType"* %0)
  %10 = icmp eq %"class.blink::HTMLInputElement"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* nonnull %9, i1 zeroext false, i32 0) #7
  br label %12

12:                                               ; preds = %11, %8, %3, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22BaseCheckableInputTypeD2Ev(%"class.blink::BaseCheckableInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 1
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %2) #7
  %3 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %3) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14RadioInputTypeD0Ev(%"class.blink::RadioInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %2) #7
  %3 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %3) #7
  ret void
}

declare void @_ZNK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE(%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*) unnamed_addr #1

declare %"class.blink::InputTypeView"* @_ZN5blink22BaseCheckableInputType10CreateViewEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsInteractiveContentEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12IsTextButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsTextFieldEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsFormDataAppendableEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink22BaseCheckableInputType16AppendToFormDataERNS_8FormDataE(%"class.blink::BaseCheckableInputType"*, %"class.blink::FormData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType21ResultForDialogSubmitEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType24ValueInFilenameValueModeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12DefaultLabelEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink22BaseCheckableInputType12GetValueModeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare double @_ZNK5blink9InputType11ValueAsDateEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.absl::optional.834"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare double @_ZNK5blink9InputType13ValueAsDoubleEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink22BaseCheckableInputType14ReadingCheckedEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType18SupportsValidationEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12TypeMismatchEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsRequiredEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9InputType21DefaultValueForStepUpEv(%"class.blink::Decimal"* sret, %"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* sret, %"class.blink::InputType"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12BadInputTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16TypeMismatchTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22BaseCheckableInputType17CanSetStringValueEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12VisibleValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink22BaseCheckableInputType25MatchesDefaultPseudoClassEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20LayoutObjectIsNeededEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27ShouldRespectAlignAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::FileList"* @_ZN5blink9InputType5FilesEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType8SetFilesEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InputType"*, %"class.WTF::Vector.843"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::InputType"*, %"class.blink::DragData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9InputType19DroppedFileSystemIdEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20CanSetSuggestedValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::BaseCheckableInputType"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType26ShouldRespectListAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType14IsEnumeratableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink22BaseCheckableInputType11IsCheckableEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsSteppableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MaxLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MinLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19SupportsPlaceholderEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsReadOnlyEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::InputType"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink9InputType24SubResourceAttributeNameEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE(%"class.blink::InputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN5blink9InputType24OnAttachWithLayoutObjectEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType26SupportsInputModeAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20SupportsSelectionAPIEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType6HeightEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType5WidthEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType19DispatchSearchEventEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::ColorChooserClient"* @_ZN5blink9InputType21GetColorChooserClientEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType15HandleBlurEventEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv() unnamed_addr

declare void @_ZN5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::BaseCheckableInputType"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_NK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE(%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink14RadioInputTypeD1Ev(%"class.blink::RadioInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %4) #7
  %5 = bitcast %"class.blink::Member"* %2 to %"class.blink::InputType"*
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %5) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink14RadioInputTypeD0Ev(%"class.blink::RadioInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RadioInputType", %"class.blink::RadioInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %4) #7
  %5 = bitcast %"class.blink::Member"* %2 to %"class.blink::InputType"*
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %5) #7
  ret void
}

declare zeroext i1 @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi(%"class.blink::InputTypeView"*, i32, i32* dereferenceable(4)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"* dereferenceable(296)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE(%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink13InputTypeView17FormForSubmissionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType15HandleBlurEventEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::BaseCheckableInputType"*, i32) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView4BlurEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView17SubtreeHasChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink13InputTypeView18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare void @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE(%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView14ClosePopupViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView14HasOpenedPopupEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink13InputTypeView19CreateShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.blink::HTMLInputElement"* @_ZNK5blink13InputTypeView12UploadButtonEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13InputTypeView14FileStatusTextEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20StepAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19AltAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19SrcAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView10UpdateViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MultipleAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24DisabledAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24RequiredAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView21ValueAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb(%"class.blink::InputTypeView"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #1

declare void @_ZN5blink13InputTypeView26ListAttributeTargetChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb(%"class.blink::InputTypeView"*, i1 zeroext) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink13InputTypeView17PopupRootAXObjectEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView21EnsureFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView20EnsurePrimaryContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13InputTypeView18HasFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZThn16_NK5blink22BaseCheckableInputType20SaveFormControlStateEv() unnamed_addr

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13InputTypeView15IsDraggedSliderEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView11HasBadInputEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink13InputTypeView17FocusedFieldIndexEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink12FocusOptionsC1Ev(%"class.blink::FocusOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"*) unnamed_addr #6

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_26EventDispatchHandlingStateEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26EventDispatchHandlingStateEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26EventDispatchHandlingStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventDispatchHandlingState"*
  %4 = bitcast i8* %1 to void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)**, void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::EventDispatchHandlingState"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_26EventDispatchHandlingStateEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
