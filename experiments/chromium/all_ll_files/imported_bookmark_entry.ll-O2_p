; ModuleID = '../../chrome/common/importer/imported_bookmark_entry.cc'
source_filename = "../../chrome/common/importer/imported_bookmark_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ImportedBookmarkEntry = type { i8, i8, %class.GURL, %"class.std::__1::vector", %"class.std::__1::basic_string.4", %"class.base::Time" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::basic_string.4"* }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN21ImportedBookmarkEntryC1Ev = hidden unnamed_addr alias void (%struct.ImportedBookmarkEntry*), void (%struct.ImportedBookmarkEntry*)* @_ZN21ImportedBookmarkEntryC2Ev
@_ZN21ImportedBookmarkEntryC1ERKS_ = hidden unnamed_addr alias void (%struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*), void (%struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*)* @_ZN21ImportedBookmarkEntryC2ERKS_
@_ZN21ImportedBookmarkEntryD1Ev = hidden unnamed_addr alias void (%struct.ImportedBookmarkEntry*), void (%struct.ImportedBookmarkEntry*)* @_ZN21ImportedBookmarkEntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21ImportedBookmarkEntryC2Ev(%struct.ImportedBookmarkEntry*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %4) #8
  %5 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21ImportedBookmarkEntryC2ERKS_(%struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry* dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.ImportedBookmarkEntry* %1 to i16*
  %4 = bitcast %struct.ImportedBookmarkEntry* %0 to i16*
  %5 = load i16, i16* %3, align 8
  store i16 %5, i16* %4, align 8
  %6 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #8
  %8 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3
  %9 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #8
  %11 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string.4"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 24
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %233, label %19

19:                                               ; preds = %2
  %20 = icmp ugt i64 %17, 768614336404564650
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #9
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #10
  %25 = bitcast i8* %24 to %"class.std::__1::basic_string.4"*
  %26 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string.4"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %25, i64 %17
  %30 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string.4"* %29, %"class.std::__1::basic_string.4"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %31, align 8
  %33 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %11, align 8
  %34 = bitcast %"class.std::__1::basic_string.4"** %26 to i64*
  %35 = ptrtoint i8* %24 to i64
  %36 = icmp eq %"class.std::__1::basic_string.4"* %32, %33
  br i1 %36, label %231, label %37

37:                                               ; preds = %23
  %38 = bitcast i8* %24 to %"class.std::__1::basic_string.4"*
  br label %39

39:                                               ; preds = %225, %37
  %40 = phi %"class.std::__1::basic_string.4"* [ %227, %225 ], [ %38, %37 ]
  %41 = phi %"class.std::__1::basic_string.4"* [ %226, %225 ], [ %32, %37 ]
  %42 = bitcast %"class.std::__1::basic_string.4"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::basic_string.4"* %40 to i8*
  %48 = bitcast %"class.std::__1::basic_string.4"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #8
  br label %225

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, 11
  br i1 %54, label %55, label %60

55:                                               ; preds = %49
  %56 = bitcast %"class.std::__1::basic_string.4"* %40 to i16*
  %57 = trunc i64 %53 to i8
  %58 = bitcast %"class.std::__1::basic_string.4"* %40 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  store i8 %57, i8* %59, align 1
  br label %77

60:                                               ; preds = %49
  %61 = icmp ugt i64 %53, 9223372036854775791
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::basic_string.4"* %40 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %63) #9
  unreachable

64:                                               ; preds = %60
  %65 = add nuw nsw i64 %53, 8
  %66 = and i64 %65, -8
  %67 = icmp slt i64 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  tail call void @abort() #9
  unreachable

69:                                               ; preds = %64
  %70 = shl i64 %66, 1
  %71 = tail call i8* @_Znwm(i64 %70) #10
  %72 = bitcast i8* %71 to i16*
  %73 = bitcast %"class.std::__1::basic_string.4"* %40 to i8**
  store i8* %71, i8** %73, align 8
  %74 = or i64 %66, -9223372036854775808
  %75 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %53, i64* %76, align 8
  br label %77

77:                                               ; preds = %69, %55
  %78 = phi i16* [ %56, %55 ], [ %72, %69 ]
  %79 = add nuw nsw i64 %53, 1
  %80 = add i64 %53, 1
  %81 = icmp ult i64 %80, 16
  br i1 %81, label %172, label %82

82:                                               ; preds = %77
  %83 = getelementptr i16, i16* %78, i64 1
  %84 = getelementptr i16, i16* %83, i64 %53
  %85 = getelementptr i16, i16* %51, i64 1
  %86 = getelementptr i16, i16* %85, i64 %53
  %87 = icmp ult i16* %78, %86
  %88 = icmp ult i16* %51, %84
  %89 = and i1 %87, %88
  br i1 %89, label %172, label %90

90:                                               ; preds = %82
  %91 = and i64 %80, -16
  %92 = sub i64 %79, %91
  %93 = getelementptr i16, i16* %51, i64 %91
  %94 = getelementptr i16, i16* %78, i64 %91
  %95 = add i64 %91, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp ult i64 %95, 48
  br i1 %99, label %151, label %100

100:                                              ; preds = %90
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %148, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %149, %102 ]
  %105 = getelementptr i16, i16* %51, i64 %103
  %106 = getelementptr i16, i16* %78, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !5, !noalias !2
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !5, !noalias !2
  %115 = or i64 %103, 16
  %116 = getelementptr i16, i16* %51, i64 %115
  %117 = getelementptr i16, i16* %78, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !2
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !2
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !5, !noalias !2
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !5, !noalias !2
  %126 = or i64 %103, 32
  %127 = getelementptr i16, i16* %51, i64 %126
  %128 = getelementptr i16, i16* %78, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !2
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !2
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !5, !noalias !2
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !5, !noalias !2
  %137 = or i64 %103, 48
  %138 = getelementptr i16, i16* %51, i64 %137
  %139 = getelementptr i16, i16* %78, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !2
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !2
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !5, !noalias !2
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !5, !noalias !2
  %148 = add i64 %103, 64
  %149 = add i64 %104, -4
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %102, !llvm.loop !7

151:                                              ; preds = %102, %90
  %152 = phi i64 [ 0, %90 ], [ %148, %102 ]
  %153 = icmp eq i64 %98, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %167, %154 ], [ %152, %151 ]
  %156 = phi i64 [ %168, %154 ], [ %98, %151 ]
  %157 = getelementptr i16, i16* %51, i64 %155
  %158 = getelementptr i16, i16* %78, i64 %155
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !2
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !2
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !5, !noalias !2
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !5, !noalias !2
  %167 = add i64 %155, 16
  %168 = add i64 %156, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %154, !llvm.loop !9

170:                                              ; preds = %154, %151
  %171 = icmp eq i64 %80, %91
  br i1 %171, label %225, label %172

172:                                              ; preds = %170, %82, %77
  %173 = phi i64 [ %79, %82 ], [ %79, %77 ], [ %92, %170 ]
  %174 = phi i16* [ %51, %82 ], [ %51, %77 ], [ %93, %170 ]
  %175 = phi i16* [ %78, %82 ], [ %78, %77 ], [ %94, %170 ]
  %176 = add i64 %173, -1
  %177 = and i64 %173, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %172, %179
  %180 = phi i64 [ %185, %179 ], [ %173, %172 ]
  %181 = phi i16* [ %187, %179 ], [ %174, %172 ]
  %182 = phi i16* [ %186, %179 ], [ %175, %172 ]
  %183 = phi i64 [ %188, %179 ], [ %177, %172 ]
  %184 = load i16, i16* %181, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %180, -1
  %186 = getelementptr inbounds i16, i16* %182, i64 1
  %187 = getelementptr inbounds i16, i16* %181, i64 1
  %188 = add i64 %183, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %179, !llvm.loop !11

190:                                              ; preds = %179, %172
  %191 = phi i64 [ %173, %172 ], [ %185, %179 ]
  %192 = phi i16* [ %174, %172 ], [ %187, %179 ]
  %193 = phi i16* [ %175, %172 ], [ %186, %179 ]
  %194 = icmp ult i64 %176, 7
  br i1 %194, label %225, label %195

195:                                              ; preds = %190, %195
  %196 = phi i64 [ %221, %195 ], [ %191, %190 ]
  %197 = phi i16* [ %223, %195 ], [ %192, %190 ]
  %198 = phi i16* [ %222, %195 ], [ %193, %190 ]
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %198, i64 1
  %201 = getelementptr inbounds i16, i16* %197, i64 1
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %198, i64 2
  %204 = getelementptr inbounds i16, i16* %197, i64 2
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %198, i64 3
  %207 = getelementptr inbounds i16, i16* %197, i64 3
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %198, i64 4
  %210 = getelementptr inbounds i16, i16* %197, i64 4
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %198, i64 5
  %213 = getelementptr inbounds i16, i16* %197, i64 5
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %198, i64 6
  %216 = getelementptr inbounds i16, i16* %197, i64 6
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %198, i64 7
  %219 = getelementptr inbounds i16, i16* %197, i64 7
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %196, -8
  %222 = getelementptr inbounds i16, i16* %198, i64 8
  %223 = getelementptr inbounds i16, i16* %197, i64 8
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %225, label %195, !llvm.loop !12

225:                                              ; preds = %190, %195, %170, %46
  %226 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %41, i64 1
  %227 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %40, i64 1
  %228 = icmp eq %"class.std::__1::basic_string.4"* %226, %33
  br i1 %228, label %229, label %39

229:                                              ; preds = %225
  %230 = ptrtoint %"class.std::__1::basic_string.4"* %227 to i64
  br label %231

231:                                              ; preds = %23, %229
  %232 = phi i64 [ %35, %23 ], [ %230, %229 ]
  store i64 %232, i64* %34, align 8
  br label %233

233:                                              ; preds = %2, %231
  %234 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 4
  %235 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 4
  %236 = bitcast %"class.std::__1::basic_string.4"* %235 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %236, i64 0, i32 1, i32 1
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %243, label %240

240:                                              ; preds = %233
  %241 = bitcast %"class.std::__1::basic_string.4"* %234 to i8*
  %242 = bitcast %"class.std::__1::basic_string.4"* %235 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 24, i1 false) #8
  br label %418

243:                                              ; preds = %233
  %244 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i16*, i16** %244, align 8
  %246 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = icmp ult i64 %247, 11
  br i1 %248, label %249, label %254

249:                                              ; preds = %243
  %250 = bitcast %"class.std::__1::basic_string.4"* %234 to i16*
  %251 = trunc i64 %247 to i8
  %252 = bitcast %"class.std::__1::basic_string.4"* %234 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %252, i64 0, i32 1, i32 1
  store i8 %251, i8* %253, align 1
  br label %271

254:                                              ; preds = %243
  %255 = icmp ugt i64 %247, 9223372036854775791
  br i1 %255, label %256, label %258

256:                                              ; preds = %254
  %257 = bitcast %"class.std::__1::basic_string.4"* %234 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %257) #9
  unreachable

258:                                              ; preds = %254
  %259 = add nuw nsw i64 %247, 8
  %260 = and i64 %259, -8
  %261 = icmp slt i64 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %258
  tail call void @abort() #9
  unreachable

263:                                              ; preds = %258
  %264 = shl i64 %260, 1
  %265 = tail call i8* @_Znwm(i64 %264) #10
  %266 = bitcast i8* %265 to i16*
  %267 = bitcast %"class.std::__1::basic_string.4"* %234 to i8**
  store i8* %265, i8** %267, align 8
  %268 = or i64 %260, -9223372036854775808
  %269 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %247, i64* %270, align 8
  br label %271

271:                                              ; preds = %263, %249
  %272 = phi i16* [ %250, %249 ], [ %266, %263 ]
  %273 = add nuw nsw i64 %247, 1
  %274 = add i64 %247, 1
  %275 = icmp ult i64 %274, 16
  br i1 %275, label %365, label %276

276:                                              ; preds = %271
  %277 = add i64 %247, 1
  %278 = getelementptr i16, i16* %272, i64 %277
  %279 = getelementptr i16, i16* %245, i64 %277
  %280 = icmp ult i16* %272, %279
  %281 = icmp ult i16* %245, %278
  %282 = and i1 %280, %281
  br i1 %282, label %365, label %283

283:                                              ; preds = %276
  %284 = and i64 %274, -16
  %285 = sub i64 %273, %284
  %286 = getelementptr i16, i16* %245, i64 %284
  %287 = getelementptr i16, i16* %272, i64 %284
  %288 = add i64 %284, -16
  %289 = lshr exact i64 %288, 4
  %290 = add nuw nsw i64 %289, 1
  %291 = and i64 %290, 3
  %292 = icmp ult i64 %288, 48
  br i1 %292, label %344, label %293

293:                                              ; preds = %283
  %294 = sub nsw i64 %290, %291
  br label %295

295:                                              ; preds = %295, %293
  %296 = phi i64 [ 0, %293 ], [ %341, %295 ]
  %297 = phi i64 [ %294, %293 ], [ %342, %295 ]
  %298 = getelementptr i16, i16* %245, i64 %296
  %299 = getelementptr i16, i16* %272, i64 %296
  %300 = bitcast i16* %298 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !13
  %302 = getelementptr i16, i16* %298, i64 8
  %303 = bitcast i16* %302 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !13
  %305 = bitcast i16* %299 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %305, align 2, !alias.scope !16, !noalias !13
  %306 = getelementptr i16, i16* %299, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %307, align 2, !alias.scope !16, !noalias !13
  %308 = or i64 %296, 16
  %309 = getelementptr i16, i16* %245, i64 %308
  %310 = getelementptr i16, i16* %272, i64 %308
  %311 = bitcast i16* %309 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !13
  %313 = getelementptr i16, i16* %309, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !13
  %316 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %316, align 2, !alias.scope !16, !noalias !13
  %317 = getelementptr i16, i16* %310, i64 8
  %318 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %318, align 2, !alias.scope !16, !noalias !13
  %319 = or i64 %296, 32
  %320 = getelementptr i16, i16* %245, i64 %319
  %321 = getelementptr i16, i16* %272, i64 %319
  %322 = bitcast i16* %320 to <8 x i16>*
  %323 = load <8 x i16>, <8 x i16>* %322, align 2, !alias.scope !13
  %324 = getelementptr i16, i16* %320, i64 8
  %325 = bitcast i16* %324 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !13
  %327 = bitcast i16* %321 to <8 x i16>*
  store <8 x i16> %323, <8 x i16>* %327, align 2, !alias.scope !16, !noalias !13
  %328 = getelementptr i16, i16* %321, i64 8
  %329 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %329, align 2, !alias.scope !16, !noalias !13
  %330 = or i64 %296, 48
  %331 = getelementptr i16, i16* %245, i64 %330
  %332 = getelementptr i16, i16* %272, i64 %330
  %333 = bitcast i16* %331 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !13
  %335 = getelementptr i16, i16* %331, i64 8
  %336 = bitcast i16* %335 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !alias.scope !13
  %338 = bitcast i16* %332 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %338, align 2, !alias.scope !16, !noalias !13
  %339 = getelementptr i16, i16* %332, i64 8
  %340 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %337, <8 x i16>* %340, align 2, !alias.scope !16, !noalias !13
  %341 = add i64 %296, 64
  %342 = add i64 %297, -4
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %295, !llvm.loop !18

344:                                              ; preds = %295, %283
  %345 = phi i64 [ 0, %283 ], [ %341, %295 ]
  %346 = icmp eq i64 %291, 0
  br i1 %346, label %363, label %347

347:                                              ; preds = %344, %347
  %348 = phi i64 [ %360, %347 ], [ %345, %344 ]
  %349 = phi i64 [ %361, %347 ], [ %291, %344 ]
  %350 = getelementptr i16, i16* %245, i64 %348
  %351 = getelementptr i16, i16* %272, i64 %348
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !13
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !13
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !16, !noalias !13
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !16, !noalias !13
  %360 = add i64 %348, 16
  %361 = add i64 %349, -1
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %347, !llvm.loop !19

363:                                              ; preds = %347, %344
  %364 = icmp eq i64 %274, %284
  br i1 %364, label %418, label %365

365:                                              ; preds = %363, %276, %271
  %366 = phi i64 [ %273, %276 ], [ %273, %271 ], [ %285, %363 ]
  %367 = phi i16* [ %245, %276 ], [ %245, %271 ], [ %286, %363 ]
  %368 = phi i16* [ %272, %276 ], [ %272, %271 ], [ %287, %363 ]
  %369 = add i64 %366, -1
  %370 = and i64 %366, 7
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %383, label %372

372:                                              ; preds = %365, %372
  %373 = phi i64 [ %378, %372 ], [ %366, %365 ]
  %374 = phi i16* [ %380, %372 ], [ %367, %365 ]
  %375 = phi i16* [ %379, %372 ], [ %368, %365 ]
  %376 = phi i64 [ %381, %372 ], [ %370, %365 ]
  %377 = load i16, i16* %374, align 2
  store i16 %377, i16* %375, align 2
  %378 = add i64 %373, -1
  %379 = getelementptr inbounds i16, i16* %375, i64 1
  %380 = getelementptr inbounds i16, i16* %374, i64 1
  %381 = add i64 %376, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %372, !llvm.loop !20

383:                                              ; preds = %372, %365
  %384 = phi i64 [ %366, %365 ], [ %378, %372 ]
  %385 = phi i16* [ %367, %365 ], [ %380, %372 ]
  %386 = phi i16* [ %368, %365 ], [ %379, %372 ]
  %387 = icmp ult i64 %369, 7
  br i1 %387, label %418, label %388

388:                                              ; preds = %383, %388
  %389 = phi i64 [ %414, %388 ], [ %384, %383 ]
  %390 = phi i16* [ %416, %388 ], [ %385, %383 ]
  %391 = phi i16* [ %415, %388 ], [ %386, %383 ]
  %392 = load i16, i16* %390, align 2
  store i16 %392, i16* %391, align 2
  %393 = getelementptr inbounds i16, i16* %391, i64 1
  %394 = getelementptr inbounds i16, i16* %390, i64 1
  %395 = load i16, i16* %394, align 2
  store i16 %395, i16* %393, align 2
  %396 = getelementptr inbounds i16, i16* %391, i64 2
  %397 = getelementptr inbounds i16, i16* %390, i64 2
  %398 = load i16, i16* %397, align 2
  store i16 %398, i16* %396, align 2
  %399 = getelementptr inbounds i16, i16* %391, i64 3
  %400 = getelementptr inbounds i16, i16* %390, i64 3
  %401 = load i16, i16* %400, align 2
  store i16 %401, i16* %399, align 2
  %402 = getelementptr inbounds i16, i16* %391, i64 4
  %403 = getelementptr inbounds i16, i16* %390, i64 4
  %404 = load i16, i16* %403, align 2
  store i16 %404, i16* %402, align 2
  %405 = getelementptr inbounds i16, i16* %391, i64 5
  %406 = getelementptr inbounds i16, i16* %390, i64 5
  %407 = load i16, i16* %406, align 2
  store i16 %407, i16* %405, align 2
  %408 = getelementptr inbounds i16, i16* %391, i64 6
  %409 = getelementptr inbounds i16, i16* %390, i64 6
  %410 = load i16, i16* %409, align 2
  store i16 %410, i16* %408, align 2
  %411 = getelementptr inbounds i16, i16* %391, i64 7
  %412 = getelementptr inbounds i16, i16* %390, i64 7
  %413 = load i16, i16* %412, align 2
  store i16 %413, i16* %411, align 2
  %414 = add i64 %389, -8
  %415 = getelementptr inbounds i16, i16* %391, i64 8
  %416 = getelementptr inbounds i16, i16* %390, i64 8
  %417 = icmp eq i64 %414, 0
  br i1 %417, label %418, label %388, !llvm.loop !21

418:                                              ; preds = %383, %388, %363, %240
  %419 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 5, i32 0, i32 0
  %420 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 5, i32 0, i32 0
  %421 = load i64, i64* %419, align 8
  store i64 %421, i64* %420, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21ImportedBookmarkEntryD2Ev(%struct.ImportedBookmarkEntry*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string.4"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string.4"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string.4"* %13 to i8*
  %17 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string.4"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.std::__1::basic_string.4"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string.4"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = bitcast %"class.std::__1::basic_string.4"* %22 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.std::__1::basic_string.4"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %11 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.std::__1::basic_string.4"* %13, %"class.std::__1::basic_string.4"** %17, align 8
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %10, %35
  %38 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %38) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21ImportedBookmarkEntryeqERKS_(%struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !22
  %5 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !22
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %136

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !22
  %11 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 1, !range !22
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %136

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 2
  %16 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 2
  %17 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %15, %class.GURL* dereferenceable(120) %16) #8
  br i1 %17, label %18, label %136

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3
  %20 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 3
  %21 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 3, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string.4"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %19 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 3, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string.4"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector"* %20 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = icmp eq i64 %26, %32
  %34 = inttoptr i64 %25 to %"class.std::__1::basic_string.4"*
  %35 = inttoptr i64 %23 to %"class.std::__1::basic_string.4"*
  br i1 %33, label %36, label %136

36:                                               ; preds = %18
  %37 = icmp eq %"class.std::__1::basic_string.4"* %34, %35
  br i1 %37, label %87, label %38

38:                                               ; preds = %36
  %39 = inttoptr i64 %31 to %"class.std::__1::basic_string.4"*
  br label %40

40:                                               ; preds = %38, %83
  %41 = phi %"class.std::__1::basic_string.4"* [ %85, %83 ], [ %39, %38 ]
  %42 = phi %"class.std::__1::basic_string.4"* [ %84, %83 ], [ %34, %38 ]
  %43 = bitcast %"class.std::__1::basic_string.4"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = bitcast %"class.std::__1::basic_string.4"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = icmp eq i64 %50, %58
  br i1 %59, label %60, label %136

60:                                               ; preds = %40
  %61 = icmp eq i64 %50, 0
  br i1 %61, label %83, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i16*, i16** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string.4"* %41 to i16*
  %66 = select i1 %54, i16* %64, i16* %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = bitcast %"class.std::__1::basic_string.4"* %42 to i16*
  %70 = select i1 %46, i16* %68, i16* %69
  br label %71

71:                                               ; preds = %78, %62
  %72 = phi i64 [ %79, %78 ], [ %50, %62 ]
  %73 = phi i16* [ %81, %78 ], [ %66, %62 ]
  %74 = phi i16* [ %80, %78 ], [ %70, %62 ]
  %75 = load i16, i16* %74, align 2
  %76 = load i16, i16* %73, align 2
  %77 = icmp eq i16 %76, %75
  br i1 %77, label %78, label %136

78:                                               ; preds = %71
  %79 = add i64 %72, -1
  %80 = getelementptr inbounds i16, i16* %74, i64 1
  %81 = getelementptr inbounds i16, i16* %73, i64 1
  %82 = icmp eq i64 %79, 0
  br i1 %82, label %83, label %71

83:                                               ; preds = %78, %60
  %84 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %42, i64 1
  %85 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %41, i64 1
  %86 = icmp eq %"class.std::__1::basic_string.4"* %84, %35
  br i1 %86, label %87, label %40

87:                                               ; preds = %83, %36
  %88 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 4
  %89 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 4
  %90 = bitcast %"class.std::__1::basic_string.4"* %88 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  %94 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = zext i8 %92 to i64
  %97 = select i1 %93, i64 %95, i64 %96
  %98 = bitcast %"class.std::__1::basic_string.4"* %89 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = zext i8 %100 to i64
  %105 = select i1 %101, i64 %103, i64 %104
  %106 = icmp eq i64 %97, %105
  br i1 %106, label %107, label %136

107:                                              ; preds = %87
  %108 = icmp eq i64 %97, 0
  br i1 %108, label %130, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i16*, i16** %110, align 8
  %112 = bitcast %"class.std::__1::basic_string.4"* %89 to i16*
  %113 = select i1 %101, i16* %111, i16* %112
  %114 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = bitcast %"class.std::__1::basic_string.4"* %88 to i16*
  %117 = select i1 %93, i16* %115, i16* %116
  br label %118

118:                                              ; preds = %125, %109
  %119 = phi i64 [ %126, %125 ], [ %97, %109 ]
  %120 = phi i16* [ %128, %125 ], [ %113, %109 ]
  %121 = phi i16* [ %127, %125 ], [ %117, %109 ]
  %122 = load i16, i16* %121, align 2
  %123 = load i16, i16* %120, align 2
  %124 = icmp eq i16 %123, %122
  br i1 %124, label %125, label %136

125:                                              ; preds = %118
  %126 = add i64 %119, -1
  %127 = getelementptr inbounds i16, i16* %121, i64 1
  %128 = getelementptr inbounds i16, i16* %120, i64 1
  %129 = icmp eq i64 %126, 0
  br i1 %129, label %130, label %118

130:                                              ; preds = %125, %107
  %131 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 0, i32 5, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %0, i64 0, i32 5, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, %132
  br label %136

136:                                              ; preds = %40, %71, %118, %18, %87, %130, %14, %8, %2
  %137 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %135, %130 ], [ false, %87 ], [ false, %18 ], [ false, %118 ], [ false, %71 ], [ false, %40 ]
  ret i1 %137
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
