; ModuleID = '../../third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc'
source_filename = "../../third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.absl::base_internal::SpinLockWaitTransition" = type { i32, i32, i8 }
%"struct.absl::base_internal::LowLevelAlloc::Arena" = type <{ %"class.absl::base_internal::SpinLock", [4 x i8], %"struct.absl::base_internal::(anonymous namespace)::AllocList", i32, i32, i64, i64, i64, i32, [4 x i8] }>
%"class.absl::base_internal::SpinLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.absl::base_internal::(anonymous namespace)::AllocList" = type { %"struct.absl::base_internal::(anonymous namespace)::AllocList::Header", i32, [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*] }
%"struct.absl::base_internal::(anonymous namespace)::AllocList::Header" = type { i64, i64, %"struct.absl::base_internal::LowLevelAlloc::Arena"*, i8* }
%struct.__sigset_t = type { [16 x i64] }
%"class.absl::base_internal::(anonymous namespace)::ArenaLock" = type { i8, i8, %struct.__sigset_t, %"struct.absl::base_internal::LowLevelAlloc::Arena"* }

$_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_ = comdat any

$_ZZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_E5trans = comdat any

@_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE = internal global [328 x i8] zeroinitializer, align 8
@.str = private unnamed_addr constant [67 x i8] c"../../third_party/abseil-cpp/absl/base/internal/low_level_alloc.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Check %s failed: %s\00", align 1
@.str.2 = private unnamed_addr constant [72 x i8] c"arena != nullptr && arena != DefaultArena() && arena != UnhookedArena()\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"may not delete default arena\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"region->header.magic == Magic(kMagicUnallocated, &region->header)\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"bad magic number in DeleteArena()\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"region->header.arena == arena\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"bad arena pointer in DeleteArena()\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"size % arena->pagesize == 0\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"empty arena has non-page-aligned block size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"reinterpret_cast<uintptr_t>(region) % arena->pagesize == 0\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"empty arena has non-page-aligned block\00", align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"LowLevelAlloc::DeleteArena: munmap failed: %d\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"arena->allocation_count > 0\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"nothing in arena to free\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"arena != nullptr\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"must pass a valid arena\00", align 1
@_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE = internal global { { { i32 } } } zeroinitializer, align 4
@_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE = internal global [328 x i8] zeroinitializer, align 8
@_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE = internal global [328 x i8] zeroinitializer, align 8
@.str.18 = private unnamed_addr constant [27 x i8] c"pthread_sigmask failed: %d\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"left_\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"haven't left Arena region\00", align 1
@.str.21 = private unnamed_addr constant [54 x i8] c"f->header.magic == Magic(kMagicAllocated, &f->header)\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"bad magic number in AddToFreelist()\00", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"f->header.arena == arena\00", align 1
@.str.24 = private unnamed_addr constant [37 x i8] c"bad arena pointer in AddToFreelist()\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"level >= 1\00", align 1
@.str.26 = private unnamed_addr constant [40 x i8] c"block not big enough for even one level\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"e == found\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"element not in freelist\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"mmap error: %d\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"s->header.arena == arena\00", align 1
@.str.31 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"sum >= a\00", align 1
@.str.33 = private unnamed_addr constant [34 x i8] c"LowLevelAlloc arithmetic overflow\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"i < prev->levels\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"too few levels in Next()\00", align 1
@.str.36 = private unnamed_addr constant [62 x i8] c"next->header.magic == Magic(kMagicUnallocated, &next->header)\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"bad magic number in Next()\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"next->header.arena == arena\00", align 1
@.str.39 = private unnamed_addr constant [28 x i8] c"bad arena pointer in Next()\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"prev < next\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"unordered freelist\00", align 1
@.str.42 = private unnamed_addr constant [84 x i8] c"reinterpret_cast<char *>(prev) + prev->header.size < reinterpret_cast<char *>(next)\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"malformed freelist\00", align 1
@_ZZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_E5trans = linkonce_odr hidden constant [3 x %"struct.absl::base_internal::SpinLockWaitTransition"] [%"struct.absl::base_internal::SpinLockWaitTransition" { i32 0, i32 1707250555, i8 1 }, %"struct.absl::base_internal::SpinLockWaitTransition" { i32 1707250555, i32 94570706, i8 0 }, %"struct.absl::base_internal::SpinLockWaitTransition" { i32 221, i32 221, i8 1 }], comdat, align 16

@_ZN4absl13base_internal13LowLevelAlloc5ArenaC1Ej = hidden unnamed_addr alias void (%"struct.absl::base_internal::LowLevelAlloc::Arena"*, i32), void (%"struct.absl::base_internal::LowLevelAlloc::Arena"*, i32)* @_ZN4absl13base_internal13LowLevelAlloc5ArenaC2Ej

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.absl::base_internal::LowLevelAlloc::Arena"* @_ZN4absl13base_internal13LowLevelAlloc12DefaultArenaEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %2 = icmp eq i32 %1, 221
  br i1 %2, label %4, label %3, !prof !2

3:                                                ; preds = %0
  tail call void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE to %"struct.std::__1::atomic"*), i32 0, void ()* nonnull @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv) #7
  br label %4

4:                                                ; preds = %0, %3
  ret %"struct.absl::base_internal::LowLevelAlloc::Arena"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv() #0 {
  tail call void @_ZN4absl13base_internal8SpinLockC1ENS0_14SchedulingModeE(%"class.absl::base_internal::SpinLock"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE to %"class.absl::base_internal::SpinLock"*), i32 0) #7
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 288) to i32*), align 8
  store i32 1, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 292) to i32*), align 4
  %1 = tail call i64 @sysconf(i32 30) #7
  store i64 %1, i64* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 296) to i64*), align 8
  store <2 x i64> <i64 32, i64 64>, <2 x i64>* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 304) to <2 x i64>*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 320) to i32*), align 8
  store <2 x i64> <i64 0, i64 xor (i64 ptrtoint (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 8) to i64), i64 -1283669654)>, <2 x i64>* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 8) to <2 x i64>*), align 8
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %"struct.absl::base_internal::LowLevelAlloc::Arena"** bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 24) to %"struct.absl::base_internal::LowLevelAlloc::Arena"**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 40) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE, i64 0, i64 48), i8 0, i64 240, i1 false) #7
  tail call void @_ZN4absl13base_internal8SpinLockC1ENS0_14SchedulingModeE(%"class.absl::base_internal::SpinLock"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE to %"class.absl::base_internal::SpinLock"*), i32 0) #7
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 288) to i32*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 292) to i32*), align 4
  %2 = tail call i64 @sysconf(i32 30) #7
  store i64 %2, i64* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 296) to i64*), align 8
  store <2 x i64> <i64 32, i64 64>, <2 x i64>* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 304) to <2 x i64>*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 320) to i32*), align 8
  store <2 x i64> <i64 0, i64 xor (i64 ptrtoint (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 8) to i64), i64 -1283669654)>, <2 x i64>* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 8) to <2 x i64>*), align 8
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %"struct.absl::base_internal::LowLevelAlloc::Arena"** bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 24) to %"struct.absl::base_internal::LowLevelAlloc::Arena"**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 40) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE, i64 0, i64 48), i8 0, i64 240, i1 false) #7
  tail call void @_ZN4absl13base_internal8SpinLockC1ENS0_14SchedulingModeE(%"class.absl::base_internal::SpinLock"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE to %"class.absl::base_internal::SpinLock"*), i32 0) #7
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 288) to i32*), align 8
  store i32 2, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 292) to i32*), align 4
  %3 = tail call i64 @sysconf(i32 30) #7
  store i64 %3, i64* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 296) to i64*), align 8
  store <2 x i64> <i64 32, i64 64>, <2 x i64>* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 304) to <2 x i64>*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 320) to i32*), align 8
  store <2 x i64> <i64 0, i64 xor (i64 ptrtoint (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 8) to i64), i64 -1283669654)>, <2 x i64>* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 8) to <2 x i64>*), align 8
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %"struct.absl::base_internal::LowLevelAlloc::Arena"** bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 24) to %"struct.absl::base_internal::LowLevelAlloc::Arena"**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 40) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds ([328 x i8], [328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE, i64 0, i64 48), i8 0, i64 240, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13base_internal13LowLevelAlloc5ArenaC2Ej(%"struct.absl::base_internal::LowLevelAlloc::Arena"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 0
  tail call void @_ZN4absl13base_internal8SpinLockC1ENS0_14SchedulingModeE(%"class.absl::base_internal::SpinLock"* %3, i32 0) #7
  %4 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 4
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 5
  %7 = tail call i64 @sysconf(i32 30) #7
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 6
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 32, i64 64>, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 8
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %11, i64 0, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = ptrtoint %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %11 to i64
  %14 = xor i64 %13, -1283669654
  %15 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 2, i32 0, i32 2
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %16, align 8
  %17 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 2, i32 2, i64 0
  %19 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 240, i1 false)
  ret void
}

declare void @_ZN4absl13base_internal8SpinLockC1ENS0_14SchedulingModeE(%"class.absl::base_internal::SpinLock"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.absl::base_internal::LowLevelAlloc::Arena"* @_ZN4absl13base_internal13LowLevelAlloc8NewArenaEi(i32) local_unnamed_addr #0 align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %3 = icmp eq i32 %2, 221
  br i1 %3, label %5, label %4, !prof !2

4:                                                ; preds = %1
  tail call void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE to %"struct.std::__1::atomic"*), i32 0, void ()* nonnull @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv) #7
  br label %5

5:                                                ; preds = %1, %4
  %6 = and i32 %0, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %10 = icmp eq i32 %9, 221
  br i1 %10, label %19, label %11, !prof !2

11:                                               ; preds = %8
  tail call void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE to %"struct.std::__1::atomic"*), i32 0, void ()* nonnull @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv) #7
  br label %19

12:                                               ; preds = %5
  %13 = and i32 %0, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %17 = icmp eq i32 %16, 221
  br i1 %17, label %19, label %18, !prof !2

18:                                               ; preds = %15
  tail call void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE to %"struct.std::__1::atomic"*), i32 0, void ()* nonnull @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv) #7
  br label %19

19:                                               ; preds = %18, %15, %11, %8, %12
  %20 = phi %"struct.absl::base_internal::LowLevelAlloc::Arena"* [ bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %12 ], [ bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %8 ], [ bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_137unhooked_async_sig_safe_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %11 ], [ bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %15 ], [ bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*), %18 ]
  %21 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 328, %"struct.absl::base_internal::LowLevelAlloc::Arena"* nonnull %20)
  %22 = bitcast i8* %21 to %"struct.absl::base_internal::LowLevelAlloc::Arena"*
  %23 = bitcast i8* %21 to %"class.absl::base_internal::SpinLock"*
  tail call void @_ZN4absl13base_internal8SpinLockC1ENS0_14SchedulingModeE(%"class.absl::base_internal::SpinLock"* %23, i32 0) #7
  %24 = getelementptr inbounds i8, i8* %21, i64 288
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 292
  %27 = bitcast i8* %26 to i32*
  store i32 %0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %21, i64 296
  %29 = bitcast i8* %28 to i64*
  %30 = tail call i64 @sysconf(i32 30) #7
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %21, i64 304
  %32 = bitcast i8* %31 to <2 x i64>*
  store <2 x i64> <i64 32, i64 64>, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds i8, i8* %21, i64 320
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %21, i64 8
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = ptrtoint i8* %35 to i64
  %38 = xor i64 %37, -1283669654
  %39 = getelementptr inbounds i8, i8* %21, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %21, i64 24
  %42 = bitcast i8* %41 to i8**
  store i8* %21, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %21, i64 40
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %21, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 240, i1 false) #7
  ret %"struct.absl::base_internal::LowLevelAlloc::Arena"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind ssp uwtable
define hidden i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64, %"struct.absl::base_internal::LowLevelAlloc::Arena"*) local_unnamed_addr #3 section "malloc_hook" align 2 {
  %3 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, null
  br i1 %3, label %4, label %5, !prof !3

4:                                                ; preds = %2
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 611, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #7
  br label %5

5:                                                ; preds = %2, %4
  %6 = tail call fastcc i8* @_ZN4absl13base_internalL16DoAllocWithArenaEmPNS0_13LowLevelAlloc5ArenaE(i64 %0, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1)
  ret i8* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13base_internal13LowLevelAlloc11DeleteArenaEPNS1_5ArenaE(%"struct.absl::base_internal::LowLevelAlloc::Arena"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.__sigset_t, align 8
  %3 = alloca %"class.absl::base_internal::(anonymous namespace)::ArenaLock", align 8
  %4 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, null
  br i1 %4, label %17, label %5, !prof !3

5:                                                ; preds = %1
  %6 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 221
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %5
  tail call void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE to %"struct.std::__1::atomic"*), i32 0, void ()* nonnull @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv) #7
  br label %9

9:                                                ; preds = %5, %8
  %10 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*)
  br i1 %10, label %17, label %11, !prof !3

11:                                               ; preds = %9
  %12 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %13 = icmp eq i32 %12, 221
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %11
  tail call void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE to %"struct.std::__1::atomic"*), i32 0, void ()* nonnull @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv) #7
  br label %15

15:                                               ; preds = %11, %14
  %16 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_122unhooked_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*)
  br i1 %16, label %17, label %18, !prof !3

17:                                               ; preds = %1, %9, %15
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 386, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %18

18:                                               ; preds = %15, %17
  %19 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 136, i1 false)
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 1
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 3
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %21, align 8
  %22 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %18
  %27 = bitcast %struct.__sigset_t* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %27) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 128, i1 false) #7
  %28 = call i32 @sigfillset(%struct.__sigset_t* nonnull %2) #7
  %29 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 2
  %30 = call i32 @pthread_sigmask(i32 0, %struct.__sigset_t* nonnull %2, %struct.__sigset_t* %29) #7
  %31 = icmp eq i32 %30, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %20, align 1
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %27) #7
  %33 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %21, align 8
  br label %34

34:                                               ; preds = %26, %18
  %35 = phi %"struct.absl::base_internal::LowLevelAlloc::Arena"* [ %0, %18 ], [ %33, %26 ]
  %36 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %35, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %34
  %42 = or i32 %38, 1
  %43 = cmpxchg i32* %37, i32 %38, i32 %42 acquire monotonic
  %44 = extractvalue { i32, i1 } %43, 0
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %41, %34
  call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %36) #8
  br label %48

48:                                               ; preds = %41, %47
  %49 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 2, i32 2, i64 0
  %54 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %53, align 8
  %55 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %54, null
  br i1 %55, label %125, label %56

56:                                               ; preds = %52
  %57 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %53 to i64*
  %58 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0, i64 0, i32 5
  br label %77

59:                                               ; preds = %48
  %60 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %21, align 8
  %61 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = atomicrmw xchg i32* %61, i32 %63 release
  %65 = icmp ugt i32 %64, 7
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %60, i64 0, i32 0
  call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %67, i32 %64) #8
  br label %68

68:                                               ; preds = %66, %59
  %69 = load i8, i8* %20, align 1, !range !4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 2
  %73 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* %72, %struct.__sigset_t* null) #7
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 301, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i32 %73) #7
  br label %76

76:                                               ; preds = %75, %71, %68
  store i8 1, i8* %19, align 8
  br label %147

77:                                               ; preds = %56, %122
  %78 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %54, %56 ], [ %123, %122 ]
  %79 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %78, i64 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %78, i64 0, i32 2, i64 0
  %82 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %57, align 8
  %84 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %78, i64 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %78 to i64
  %87 = xor i64 %86, -1283669654
  %88 = icmp eq i64 %85, %87
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %77
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 398, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %90

90:                                               ; preds = %77, %89
  %91 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %78, i64 0, i32 0, i32 2
  %92 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %91, align 8
  %93 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %92, %0
  br i1 %93, label %95, label %94, !prof !2

94:                                               ; preds = %90
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 400, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %95

95:                                               ; preds = %90, %94
  %96 = load i64, i64* %58, align 8
  %97 = urem i64 %80, %96
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %101, label %99, !prof !2

99:                                               ; preds = %95
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 402, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0)) #7
  %100 = load i64, i64* %58, align 8
  br label %101

101:                                              ; preds = %95, %99
  %102 = phi i64 [ %96, %95 ], [ %100, %99 ]
  %103 = urem i64 %86, %102
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %106, label %105, !prof !2

105:                                              ; preds = %101
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 404, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0)) #7
  br label %106

106:                                              ; preds = %101, %105
  %107 = load i32, i32* %22, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %106
  %111 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %78 to i8*
  %112 = call i32 @munmap(i8* nonnull %111, i64 %80) #7
  br label %116

113:                                              ; preds = %106
  %114 = call i64 (i64, ...) @syscall(i64 11, %"struct.absl::base_internal::(anonymous namespace)::AllocList"* nonnull %78, i64 %80) #7
  %115 = trunc i64 %114 to i32
  br label %116

116:                                              ; preds = %113, %110
  %117 = phi i32 [ %112, %110 ], [ %115, %113 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = tail call i32* @__errno_location() #9
  %121 = load i32, i32* %120, align 4
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 422, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0), i32 %121) #7
  br label %122

122:                                              ; preds = %116, %119
  %123 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %53, align 8
  %124 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %123, null
  br i1 %124, label %125, label %77

125:                                              ; preds = %122, %52
  %126 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %21, align 8
  %127 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = atomicrmw xchg i32* %127, i32 %129 release
  %131 = icmp ugt i32 %130, 7
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %126, i64 0, i32 0
  call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %133, i32 %130) #8
  br label %134

134:                                              ; preds = %132, %125
  %135 = load i8, i8* %20, align 1, !range !4
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 2
  %139 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* %138, %struct.__sigset_t* null) #7
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %137
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 301, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i32 %139) #7
  br label %142

142:                                              ; preds = %141, %137, %134
  store i8 1, i8* %19, align 8
  %143 = bitcast %"struct.absl::base_internal::LowLevelAlloc::Arena"* %0 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %143)
  %144 = load i8, i8* %19, align 8
  %145 = icmp eq i8 %144, 1
  br i1 %145, label %147, label %146, !prof !2

146:                                              ; preds = %142
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 294, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0)) #7
  br label %147

147:                                              ; preds = %76, %142, %146
  %148 = phi i1 [ false, %76 ], [ true, %142 ], [ true, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %19) #7
  ret i1 %148
}

declare void @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8*) local_unnamed_addr #3 section "malloc_hook" align 2 {
  %2 = alloca %struct.__sigset_t, align 8
  %3 = alloca %"class.absl::base_internal::(anonymous namespace)::ArenaLock", align 8
  %4 = icmp eq i8* %0, null
  br i1 %4, label %64, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 -16
  %7 = bitcast i8* %6 to %"struct.absl::base_internal::LowLevelAlloc::Arena"**
  %8 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %7, align 8
  %9 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 136, i1 false)
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 1
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 3
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* %8, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %11, align 8
  %12 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %8, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct.__sigset_t* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %17) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 128, i1 false) #7
  %18 = call i32 @sigfillset(%struct.__sigset_t* nonnull %2) #7
  %19 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 2
  %20 = call i32 @pthread_sigmask(i32 0, %struct.__sigset_t* nonnull %2, %struct.__sigset_t* %19) #7
  %21 = icmp eq i32 %20, 0
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %10, align 1
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %17) #7
  %23 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %11, align 8
  br label %24

24:                                               ; preds = %16, %5
  %25 = phi %"struct.absl::base_internal::LowLevelAlloc::Arena"* [ %8, %5 ], [ %23, %16 ]
  %26 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %24
  %32 = or i32 %28, 1
  %33 = cmpxchg i32* %27, i32 %28, i32 %32 acquire monotonic
  %34 = extractvalue { i32, i1 } %33, 0
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %31, %24
  call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %26) #8
  br label %38

38:                                               ; preds = %31, %37
  call fastcc void @_ZN4absl13base_internalL13AddToFreelistEPvPNS0_13LowLevelAlloc5ArenaE(i8* nonnull %0, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %8)
  %39 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %8, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %40, 1
  br i1 %41, label %42, label %44, !prof !3

42:                                               ; preds = %38
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 516, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0)) #7
  %43 = load i32, i32* %39, align 8
  br label %44

44:                                               ; preds = %42, %38
  %45 = phi i32 [ %43, %42 ], [ %40, %38 ]
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %39, align 8
  %47 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %11, align 8
  %48 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = atomicrmw xchg i32* %48, i32 %50 release
  %52 = icmp ugt i32 %51, 7
  br i1 %52, label %53, label %55

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %47, i64 0, i32 0
  call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %54, i32 %51) #8
  br label %55

55:                                               ; preds = %53, %44
  %56 = load i8, i8* %10, align 1, !range !4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %3, i64 0, i32 2
  %60 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* %59, %struct.__sigset_t* null) #7
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 301, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i32 %60) #7
  br label %63

63:                                               ; preds = %62, %58, %55
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %9) #7
  br label %64

64:                                               ; preds = %1, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4absl13base_internalL13AddToFreelistEPvPNS0_13LowLevelAlloc5ArenaE(i8*, %"struct.absl::base_internal::LowLevelAlloc::Arena"*) unnamed_addr #0 {
  %3 = alloca [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], align 16
  %4 = getelementptr inbounds i8, i8* %0, i64 -32
  %5 = bitcast i8* %4 to %"struct.absl::base_internal::(anonymous namespace)::AllocList"*
  %6 = getelementptr inbounds i8, i8* %0, i64 -24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint i8* %4 to i64
  %10 = xor i64 %9, 1283669653
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %2
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 495, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0)) #7
  br label %13

13:                                               ; preds = %2, %12
  %14 = getelementptr inbounds i8, i8* %0, i64 -16
  %15 = bitcast i8* %14 to %"struct.absl::base_internal::LowLevelAlloc::Arena"**
  %16 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %15, align 8
  %17 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %16, %1
  br i1 %17, label %19, label %18, !prof !2

18:                                               ; preds = %13
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 497, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.24, i64 0, i64 0)) #7
  br label %19

19:                                               ; preds = %13, %18
  %20 = bitcast i8* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 7
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 8
  %25 = add i64 %21, -40
  %26 = lshr i64 %25, 3
  %27 = icmp ugt i64 %21, %23
  br i1 %27, label %28, label %34

28:                                               ; preds = %19, %28
  %29 = phi i64 [ %32, %28 ], [ %21, %19 ]
  %30 = phi i32 [ %31, %28 ], [ 0, %19 ]
  %31 = add nuw nsw i32 %30, 1
  %32 = lshr i64 %29, 1
  %33 = icmp ugt i64 %32, %23
  br i1 %33, label %28, label %34

34:                                               ; preds = %28, %19
  %35 = phi i32 [ 0, %19 ], [ %31, %28 ]
  %36 = icmp eq i32* %24, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %24, align 4
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i32 [ %38, %37 ], [ %43, %39 ]
  %41 = phi i32 [ 1, %37 ], [ %46, %39 ]
  %42 = mul i32 %40, 1103515245
  %43 = add i32 %42, 12345
  %44 = and i32 %43, 1073741824
  %45 = icmp eq i32 %44, 0
  %46 = add nuw nsw i32 %41, 1
  br i1 %45, label %39, label %47

47:                                               ; preds = %39
  store i32 %43, i32* %24, align 4
  br label %48

48:                                               ; preds = %47, %34
  %49 = phi i32 [ %41, %47 ], [ 1, %34 ]
  %50 = add nsw i32 %49, %35
  %51 = sext i32 %50 to i64
  %52 = icmp ult i64 %26, %51
  %53 = trunc i64 %26 to i32
  %54 = select i1 %52, i32 %53, i32 %50
  %55 = icmp slt i32 %54, 29
  %56 = select i1 %55, i32 %54, i32 29
  %57 = icmp slt i32 %56, 1
  br i1 %57, label %58, label %59, !prof !3

58:                                               ; preds = %48
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 148, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0)) #7
  br label %59

59:                                               ; preds = %48, %58
  %60 = bitcast i8* %0 to i32*
  store i32 %56, i32* %60, align 8
  %61 = bitcast [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %61) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 -86, i64 240, i1 false)
  %62 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 2
  %63 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %3, i64 0, i64 0
  %64 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 2, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %90

67:                                               ; preds = %59
  %68 = sext i32 %65 to i64
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %67
  %72 = add nsw i64 %68, -1
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %76, %73 ], [ %62, %71 ]
  %75 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %74, i64 0, i32 2, i64 %72
  %76 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %75, align 8
  %77 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %76, null
  %78 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %76, %5
  %79 = and i1 %77, %78
  br i1 %79, label %73, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %3, i64 0, i64 %72
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %74, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %81, align 8
  br label %82

82:                                               ; preds = %67, %80
  %83 = phi i64 [ %68, %67 ], [ %72, %80 ]
  %84 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %62, %67 ], [ %74, %80 ]
  %85 = icmp eq i32 %65, 1
  br i1 %85, label %90, label %86

86:                                               ; preds = %82, %136
  %87 = phi i64 [ %101, %136 ], [ %83, %82 ]
  %88 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %130, %136 ], [ %84, %82 ]
  %89 = add nsw i64 %87, -1
  br label %92

90:                                               ; preds = %82, %136, %59
  %91 = icmp slt i32 %65, %56
  br i1 %91, label %105, label %102

92:                                               ; preds = %92, %86
  %93 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %95, %92 ], [ %88, %86 ]
  %94 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %93, i64 0, i32 2, i64 %89
  %95 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %94, align 8
  %96 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %95, null
  %97 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %95, %5
  %98 = and i1 %96, %97
  br i1 %98, label %92, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %3, i64 0, i64 %89
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %93, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %100, align 8
  %101 = add nsw i64 %87, -2
  br label %129

102:                                              ; preds = %105, %90
  %103 = phi i32 [ %56, %90 ], [ %110, %105 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %126, label %112

105:                                              ; preds = %90, %105
  %106 = phi i32 [ %109, %105 ], [ %65, %90 ]
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %3, i64 0, i64 %107
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %62, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %108, align 8
  %109 = add nsw i32 %106, 1
  store i32 %109, i32* %64, align 8
  %110 = load i32, i32* %60, align 8
  %111 = icmp slt i32 %109, %110
  br i1 %111, label %105, label %102

112:                                              ; preds = %102, %112
  %113 = phi i64 [ %122, %112 ], [ 0, %102 ]
  %114 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %3, i64 0, i64 %113
  %115 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %114, align 8
  %116 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %115, i64 0, i32 2, i64 %113
  %117 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %5, i64 0, i32 2, i64 %113
  %120 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %116 to i8**
  store i8* %4, i8** %121, align 8
  %122 = add nuw i64 %113, 1
  %123 = load i32, i32* %60, align 8
  %124 = zext i32 %123 to i64
  %125 = icmp eq i64 %122, %124
  br i1 %125, label %126, label %112

126:                                              ; preds = %112, %102
  %127 = xor i64 %9, -1283669654
  store i64 %127, i64* %7, align 8
  tail call fastcc void @_ZN4absl13base_internalL8CoalesceEPNS0_12_GLOBAL__N_19AllocListE(%"struct.absl::base_internal::(anonymous namespace)::AllocList"* %5)
  %128 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %63, align 16
  tail call fastcc void @_ZN4absl13base_internalL8CoalesceEPNS0_12_GLOBAL__N_19AllocListE(%"struct.absl::base_internal::(anonymous namespace)::AllocList"* %128)
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %61) #7
  ret void

129:                                              ; preds = %129, %99
  %130 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %132, %129 ], [ %93, %99 ]
  %131 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %130, i64 0, i32 2, i64 %101
  %132 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %131, align 8
  %133 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %132, null
  %134 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %132, %5
  %135 = and i1 %133, %134
  br i1 %135, label %129, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %3, i64 0, i64 %101
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %130, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %137, align 8
  %138 = icmp sgt i64 %101, 0
  br i1 %138, label %86, label %90
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden i8* @_ZN4absl13base_internal13LowLevelAlloc5AllocEm(i64) local_unnamed_addr #3 section "malloc_hook" align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %3 = icmp eq i32 %2, 221
  br i1 %3, label %5, label %4, !prof !2

4:                                                ; preds = %1
  tail call void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"* bitcast ({ { { i32 } } }* @_ZN4absl13base_internal12_GLOBAL__N_119create_globals_onceE to %"struct.std::__1::atomic"*), i32 0, void ()* nonnull @_ZN4absl13base_internal12_GLOBAL__N_118CreateGlobalArenasEv) #7
  br label %5

5:                                                ; preds = %1, %4
  %6 = tail call fastcc i8* @_ZN4absl13base_internalL16DoAllocWithArenaEmPNS0_13LowLevelAlloc5ArenaE(i64 %0, %"struct.absl::base_internal::LowLevelAlloc::Arena"* bitcast ([328 x i8]* @_ZN4absl13base_internal12_GLOBAL__N_121default_arena_storageE to %"struct.absl::base_internal::LowLevelAlloc::Arena"*))
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @_ZN4absl13base_internalL16DoAllocWithArenaEmPNS0_13LowLevelAlloc5ArenaE(i64, %"struct.absl::base_internal::LowLevelAlloc::Arena"*) unnamed_addr #0 {
  %3 = alloca %struct.__sigset_t, align 8
  %4 = alloca %"class.absl::base_internal::(anonymous namespace)::ArenaLock", align 8
  %5 = alloca [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], align 16
  %6 = icmp eq i64 %0, 0
  br i1 %6, label %228, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 136, i1 false)
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %4, i64 0, i32 1
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %4, i64 0, i32 3
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %10, align 8
  %11 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %7
  %16 = bitcast %struct.__sigset_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 128, i1 false) #7
  %17 = call i32 @sigfillset(%struct.__sigset_t* nonnull %3) #7
  %18 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %4, i64 0, i32 2
  %19 = call i32 @pthread_sigmask(i32 0, %struct.__sigset_t* nonnull %3, %struct.__sigset_t* %18) #7
  %20 = icmp eq i32 %19, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %9, align 1
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #7
  %22 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %10, align 8
  br label %23

23:                                               ; preds = %15, %7
  %24 = phi %"struct.absl::base_internal::LowLevelAlloc::Arena"* [ %1, %7 ], [ %22, %15 ]
  %25 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %24, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %23
  %31 = or i32 %27, 1
  %32 = cmpxchg i32* %26, i32 %27, i32 %31 acquire monotonic
  %33 = extractvalue { i32, i1 } %32, 0
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %30, %23
  call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %25) #8
  br label %37

37:                                               ; preds = %30, %36
  %38 = add i64 %0, 32
  %39 = icmp ugt i64 %0, -33
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %37
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 438, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0)) #7
  br label %41

41:                                               ; preds = %37, %40
  %42 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 6
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %0, 31
  %45 = add i64 %44, %43
  %46 = icmp ult i64 %45, %38
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %41
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 438, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0)) #7
  br label %48

48:                                               ; preds = %41, %47
  %49 = sub i64 0, %43
  %50 = and i64 %45, %49
  %51 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 7
  %52 = add i64 %50, -40
  %53 = lshr i64 %52, 3
  %54 = trunc i64 %53 to i32
  %55 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 2
  %56 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 2, i32 1
  %57 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 0
  %58 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 5
  %60 = add i64 %50, -1
  br label %61

61:                                               ; preds = %165, %48
  %62 = load i64, i64* %51, align 8
  %63 = icmp ugt i64 %50, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %61, %64
  %65 = phi i64 [ %68, %64 ], [ %50, %61 ]
  %66 = phi i32 [ %67, %64 ], [ 0, %61 ]
  %67 = add nuw nsw i32 %66, 1
  %68 = lshr i64 %65, 1
  %69 = icmp ugt i64 %68, %62
  br i1 %69, label %64, label %70

70:                                               ; preds = %64, %61
  %71 = phi i32 [ 0, %61 ], [ %67, %64 ]
  %72 = add nsw i32 %71, 1
  %73 = sext i32 %72 to i64
  %74 = icmp ult i64 %53, %73
  %75 = select i1 %74, i32 %54, i32 %72
  %76 = icmp slt i32 %75, 29
  %77 = select i1 %76, i32 %75, i32 29
  %78 = icmp slt i32 %77, 1
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 148, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0)) #7
  br label %80

80:                                               ; preds = %70, %79
  %81 = load i32, i32* %56, align 8
  %82 = icmp sgt i32 %77, %81
  br i1 %82, label %125, label %83

83:                                               ; preds = %80
  %84 = add nsw i32 %77, -1
  %85 = sext i32 %84 to i64
  br label %86

86:                                               ; preds = %83, %121
  %87 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %94, %121 ], [ %55, %83 ]
  %88 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %89, %77
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %86
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 454, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0)) #7
  br label %92

92:                                               ; preds = %86, %91
  %93 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %87, i64 0, i32 2, i64 %85
  %94 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %93, align 8
  %95 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, null
  br i1 %95, label %125, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, i64 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = ptrtoint %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94 to i64
  %100 = xor i64 %99, -1283669654
  %101 = icmp eq i64 %98, %100
  br i1 %101, label %103, label %102, !prof !2

102:                                              ; preds = %96
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 459, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0)) #7
  br label %103

103:                                              ; preds = %102, %96
  %104 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, i64 0, i32 0, i32 2
  %105 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %104, align 8
  %106 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %105, %1
  br i1 %106, label %108, label %107, !prof !2

107:                                              ; preds = %103
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 460, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i64 0, i64 0)) #7
  br label %108

108:                                              ; preds = %107, %103
  %109 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %55, %87
  br i1 %109, label %121, label %110

110:                                              ; preds = %108
  %111 = icmp ugt %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, %87
  br i1 %111, label %113, label %112, !prof !2

112:                                              ; preds = %110
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 462, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i64 0, i64 0)) #7
  br label %113

113:                                              ; preds = %112, %110
  %114 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %87 to i8*
  %115 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %87, i64 0, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds i8, i8* %114, i64 %116
  %118 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94 to i8*
  %119 = icmp ult i8* %117, %118
  br i1 %119, label %121, label %120, !prof !2

120:                                              ; preds = %113
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 465, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0)) #7
  br label %121

121:                                              ; preds = %108, %113, %120
  %122 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, i64 0, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp ult i64 %123, %50
  br i1 %124, label %86, label %174

125:                                              ; preds = %92, %80
  %126 = load atomic i32, i32* %58 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = atomicrmw xchg i32* %58, i32 %127 release
  %129 = icmp ugt i32 %128, 7
  br i1 %129, label %130, label %131

130:                                              ; preds = %125
  call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %57, i32 %128) #8
  br label %131

131:                                              ; preds = %125, %130
  %132 = load i64, i64* %59, align 8
  %133 = shl i64 %132, 4
  %134 = add i64 %60, %133
  %135 = icmp ult i64 %134, %50
  br i1 %135, label %136, label %137, !prof !3

136:                                              ; preds = %131
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 438, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0)) #7
  br label %137

137:                                              ; preds = %131, %136
  %138 = sub i64 0, %133
  %139 = and i64 %134, %138
  %140 = load i32, i32* %11, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %137
  %144 = call i64 (i64, ...) @syscall(i64 9, i64 0, i64 %139, i64 3, i64 34, i64 -1, i64 0) #7
  %145 = inttoptr i64 %144 to i8*
  br label %148

146:                                              ; preds = %137
  %147 = call i8* @mmap64(i8* null, i64 %139, i32 3, i32 34, i32 -1, i64 0) #7
  br label %148

148:                                              ; preds = %146, %143
  %149 = phi i8* [ %145, %143 ], [ %147, %146 ]
  %150 = icmp eq i8* %149, inttoptr (i64 -1 to i8*)
  br i1 %150, label %151, label %154

151:                                              ; preds = %148
  %152 = tail call i32* @__errno_location() #9
  %153 = load i32, i32* %152, align 4
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 570, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i32 %153) #7
  br label %154

154:                                              ; preds = %151, %148
  %155 = load atomic i32, i32* %58 monotonic, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = or i32 %155, 1
  %160 = cmpxchg i32* %58, i32 %155, i32 %159 acquire monotonic
  %161 = extractvalue { i32, i1 } %160, 0
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %165, label %164

164:                                              ; preds = %158, %154
  call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %57) #8
  br label %165

165:                                              ; preds = %164, %158
  %166 = bitcast i8* %149 to i64*
  store i64 %139, i64* %166, align 8
  %167 = ptrtoint i8* %149 to i64
  %168 = xor i64 %167, 1283669653
  %169 = getelementptr inbounds i8, i8* %149, i64 8
  %170 = bitcast i8* %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = getelementptr inbounds i8, i8* %149, i64 16
  %172 = bitcast i8* %171 to %"struct.absl::base_internal::LowLevelAlloc::Arena"**
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %172, align 8
  %173 = getelementptr inbounds i8, i8* %149, i64 32
  call fastcc void @_ZN4absl13base_internalL13AddToFreelistEPvPNS0_13LowLevelAlloc5ArenaE(i8* %173, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1)
  br label %61

174:                                              ; preds = %121
  %175 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, i64 0, i32 0, i32 1
  %176 = ptrtoint %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94 to i64
  %177 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, i64 0, i32 0, i32 2
  %178 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, i64 0, i32 0, i32 0
  %179 = bitcast [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %179) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %179, i8 -86, i64 240, i1 false)
  %180 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %5, i64 0, i64 0
  call fastcc void @_ZN4absl13base_internalL18LLA_SkiplistDeleteEPNS0_12_GLOBAL__N_19AllocListES3_PS3_(%"struct.absl::base_internal::(anonymous namespace)::AllocList"* %55, %"struct.absl::base_internal::(anonymous namespace)::AllocList"* nonnull %94, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** nonnull %180)
  %181 = load i64, i64* %51, align 8
  %182 = add i64 %181, %50
  %183 = icmp ult i64 %182, %50
  br i1 %183, label %184, label %185, !prof !3

184:                                              ; preds = %174
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 438, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0)) #7
  br label %185

185:                                              ; preds = %174, %184
  %186 = load i64, i64* %178, align 8
  %187 = icmp ugt i64 %182, %186
  br i1 %187, label %200, label %188

188:                                              ; preds = %185
  %189 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94 to i8*
  %190 = getelementptr inbounds i8, i8* %189, i64 %50
  %191 = sub i64 %186, %50
  %192 = bitcast i8* %190 to i64*
  store i64 %191, i64* %192, align 8
  %193 = ptrtoint i8* %190 to i64
  %194 = xor i64 %193, 1283669653
  %195 = getelementptr inbounds i8, i8* %190, i64 8
  %196 = bitcast i8* %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = getelementptr inbounds i8, i8* %190, i64 16
  %198 = bitcast i8* %197 to %"struct.absl::base_internal::LowLevelAlloc::Arena"**
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %198, align 8
  store i64 %50, i64* %178, align 8
  %199 = getelementptr inbounds i8, i8* %190, i64 32
  call fastcc void @_ZN4absl13base_internalL13AddToFreelistEPvPNS0_13LowLevelAlloc5ArenaE(i8* %199, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1)
  br label %200

200:                                              ; preds = %185, %188
  %201 = xor i64 %176, 1283669653
  store i64 %201, i64* %175, align 8
  %202 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %177, align 8
  %203 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %202, %1
  br i1 %203, label %205, label %204, !prof !2

204:                                              ; preds = %200
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 596, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31, i64 0, i64 0)) #7
  br label %205

205:                                              ; preds = %200, %204
  %206 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %1, i64 0, i32 3
  %207 = load i32, i32* %206, align 8
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %206, align 8
  %209 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %10, align 8
  %210 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = atomicrmw xchg i32* %210, i32 %212 release
  %214 = icmp ugt i32 %213, 7
  br i1 %214, label %215, label %217

215:                                              ; preds = %205
  %216 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %209, i64 0, i32 0
  call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %216, i32 %213) #8
  br label %217

217:                                              ; preds = %215, %205
  %218 = load i8, i8* %9, align 1, !range !4
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.absl::base_internal::(anonymous namespace)::ArenaLock", %"class.absl::base_internal::(anonymous namespace)::ArenaLock"* %4, i64 0, i32 2
  %222 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* %221, %struct.__sigset_t* null) #7
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %220
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 301, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i32 %222) #7
  br label %225

225:                                              ; preds = %224, %220, %217
  %226 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %94, i64 0, i32 1
  %227 = bitcast i32* %226 to i8*
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %179) #7
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %8) #7
  br label %228

228:                                              ; preds = %2, %225
  %229 = phi i8* [ %227, %225 ], [ null, %2 ]
  ret i8* %229
}

; Function Attrs: nounwind
declare i64 @sysconf(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @sigfillset(%struct.__sigset_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_sigmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) local_unnamed_addr #4

; Function Attrs: cold
declare void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"*) local_unnamed_addr #6

; Function Attrs: cold
declare void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4absl13base_internalL8CoalesceEPNS0_12_GLOBAL__N_19AllocListE(%"struct.absl::base_internal::(anonymous namespace)::AllocList"*) unnamed_addr #0 {
  %2 = alloca [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], align 16
  %3 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, i64 0, i32 2, i64 0
  %4 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %3, align 8
  %5 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %4, null
  br i1 %5, label %126, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0 to i8*
  %8 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, i64 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %4 to i8*
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %13, label %126

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, i64 0, i32 0, i32 2
  %15 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** %14, align 8
  %16 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %4, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %9
  store i64 %18, i64* %8, align 8
  %19 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %4, i64 0, i32 0, i32 1
  %20 = bitcast [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %2 to i8*
  %21 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %20) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 240, i1 false)
  %22 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %15, i64 0, i32 2
  %23 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %2, i64 0, i64 0
  call fastcc void @_ZN4absl13base_internalL18LLA_SkiplistDeleteEPNS0_12_GLOBAL__N_19AllocListES3_PS3_(%"struct.absl::base_internal::(anonymous namespace)::AllocList"* %22, %"struct.absl::base_internal::(anonymous namespace)::AllocList"* nonnull %4, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** nonnull %23)
  call fastcc void @_ZN4absl13base_internalL18LLA_SkiplistDeleteEPNS0_12_GLOBAL__N_19AllocListES3_PS3_(%"struct.absl::base_internal::(anonymous namespace)::AllocList"* %22, %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** nonnull %23)
  %24 = load i64, i64* %8, align 8
  %25 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %15, i64 0, i32 7
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %15, i64 0, i32 8
  %28 = add i64 %24, -40
  %29 = lshr i64 %28, 3
  %30 = icmp ugt i64 %24, %26
  br i1 %30, label %31, label %37

31:                                               ; preds = %13, %31
  %32 = phi i64 [ %35, %31 ], [ %24, %13 ]
  %33 = phi i32 [ %34, %31 ], [ 0, %13 ]
  %34 = add nuw nsw i32 %33, 1
  %35 = lshr i64 %32, 1
  %36 = icmp ugt i64 %35, %26
  br i1 %36, label %31, label %37

37:                                               ; preds = %31, %13
  %38 = phi i32 [ 0, %13 ], [ %34, %31 ]
  %39 = icmp eq i32* %27, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %37
  %41 = load i32, i32* %27, align 4
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i32 [ %41, %40 ], [ %46, %42 ]
  %44 = phi i32 [ 1, %40 ], [ %49, %42 ]
  %45 = mul i32 %43, 1103515245
  %46 = add i32 %45, 12345
  %47 = and i32 %46, 1073741824
  %48 = icmp eq i32 %47, 0
  %49 = add nuw nsw i32 %44, 1
  br i1 %48, label %42, label %50

50:                                               ; preds = %42
  store i32 %46, i32* %27, align 4
  br label %51

51:                                               ; preds = %50, %37
  %52 = phi i32 [ %44, %50 ], [ 1, %37 ]
  %53 = add nsw i32 %52, %38
  %54 = sext i32 %53 to i64
  %55 = icmp ult i64 %29, %54
  %56 = trunc i64 %29 to i32
  %57 = select i1 %55, i32 %56, i32 %53
  %58 = icmp slt i32 %57, 29
  %59 = select i1 %58, i32 %57, i32 29
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %51
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 148, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0)) #7
  br label %62

62:                                               ; preds = %51, %61
  %63 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, i64 0, i32 1
  store i32 %59, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.absl::base_internal::LowLevelAlloc::Arena", %"struct.absl::base_internal::LowLevelAlloc::Arena"* %15, i64 0, i32 2, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %90

67:                                               ; preds = %62
  %68 = sext i32 %65 to i64
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %67
  %72 = add nsw i64 %68, -1
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %76, %73 ], [ %22, %71 ]
  %75 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %74, i64 0, i32 2, i64 %72
  %76 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %75, align 8
  %77 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %76, null
  %78 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %76, %0
  %79 = and i1 %77, %78
  br i1 %79, label %73, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %2, i64 0, i64 %72
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %74, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %81, align 8
  br label %82

82:                                               ; preds = %67, %80
  %83 = phi i64 [ %68, %67 ], [ %72, %80 ]
  %84 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %22, %67 ], [ %74, %80 ]
  %85 = icmp eq i32 %65, 1
  br i1 %85, label %90, label %86

86:                                               ; preds = %82, %134
  %87 = phi i64 [ %101, %134 ], [ %83, %82 ]
  %88 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %128, %134 ], [ %84, %82 ]
  %89 = add nsw i64 %87, -1
  br label %92

90:                                               ; preds = %82, %134, %62
  %91 = icmp slt i32 %65, %59
  br i1 %91, label %105, label %102

92:                                               ; preds = %92, %86
  %93 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %95, %92 ], [ %88, %86 ]
  %94 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %93, i64 0, i32 2, i64 %89
  %95 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %94, align 8
  %96 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %95, null
  %97 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %95, %0
  %98 = and i1 %96, %97
  br i1 %98, label %92, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %2, i64 0, i64 %89
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %93, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %100, align 8
  %101 = add nsw i64 %87, -2
  br label %127

102:                                              ; preds = %105, %90
  %103 = phi i32 [ %59, %90 ], [ %110, %105 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %125, label %112

105:                                              ; preds = %90, %105
  %106 = phi i32 [ %109, %105 ], [ %65, %90 ]
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %2, i64 0, i64 %107
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %22, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %108, align 8
  %109 = add nsw i32 %106, 1
  store i32 %109, i32* %64, align 8
  %110 = load i32, i32* %63, align 8
  %111 = icmp slt i32 %109, %110
  br i1 %111, label %105, label %102

112:                                              ; preds = %102, %112
  %113 = phi i64 [ %121, %112 ], [ 0, %102 ]
  %114 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %2, i64 0, i64 %113
  %115 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %114, align 8
  %116 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %115, i64 0, i32 2, i64 %113
  %117 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, i64 0, i32 2, i64 %113
  %120 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %119 to i64*
  store i64 %118, i64* %120, align 8
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %116, align 8
  %121 = add nuw i64 %113, 1
  %122 = load i32, i32* %63, align 8
  %123 = zext i32 %122 to i64
  %124 = icmp eq i64 %121, %123
  br i1 %124, label %125, label %112

125:                                              ; preds = %112, %102
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %20) #7
  br label %126

126:                                              ; preds = %1, %125, %6
  ret void

127:                                              ; preds = %127, %99
  %128 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %130, %127 ], [ %93, %99 ]
  %129 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %128, i64 0, i32 2, i64 %101
  %130 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %129, align 8
  %131 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %130, null
  %132 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %130, %0
  %133 = and i1 %131, %132
  br i1 %133, label %127, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*], [30 x %"struct.absl::base_internal::(anonymous namespace)::AllocList"*]* %2, i64 0, i64 %101
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %128, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %135, align 8
  %136 = icmp sgt i64 %101, 0
  br i1 %136, label %86, label %90
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4absl13base_internalL18LLA_SkiplistDeleteEPNS0_12_GLOBAL__N_19AllocListES3_PS3_(%"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"* readonly, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** nocapture) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %32

7:                                                ; preds = %3
  %8 = sext i32 %5 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = add nsw i64 %8, -1
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %16, %13 ], [ %0, %11 ]
  %15 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %14, i64 0, i32 2, i64 %12
  %16 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %15, align 8
  %17 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %16, null
  %18 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %16, %1
  %19 = and i1 %17, %18
  br i1 %19, label %13, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %2, i64 %12
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %14, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %21, align 8
  br label %22

22:                                               ; preds = %7, %20
  %23 = phi i64 [ %8, %7 ], [ %12, %20 ]
  %24 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %0, %7 ], [ %14, %20 ]
  %25 = icmp eq i32 %5, 1
  br i1 %25, label %30, label %26

26:                                               ; preds = %22, %95
  %27 = phi i64 [ %44, %95 ], [ %23, %22 ]
  %28 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %89, %95 ], [ %24, %22 ]
  %29 = add nsw i64 %27, -1
  br label %35

30:                                               ; preds = %95, %22
  %31 = load i32, i32* %4, align 8
  br label %32

32:                                               ; preds = %30, %3
  %33 = phi i32 [ %31, %30 ], [ %5, %3 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %49, label %45

35:                                               ; preds = %35, %26
  %36 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %38, %35 ], [ %28, %26 ]
  %37 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %36, i64 0, i32 2, i64 %29
  %38 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %37, align 8
  %39 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %38, null
  %40 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %38, %1
  %41 = and i1 %39, %40
  br i1 %41, label %35, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %2, i64 %29
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %36, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %43, align 8
  %44 = add nsw i64 %27, -2
  br label %88

45:                                               ; preds = %32
  %46 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %2, align 8
  %47 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %46, i64 0, i32 2, i64 0
  %48 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %47, align 8
  br label %49

49:                                               ; preds = %32, %45
  %50 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %48, %45 ], [ null, %32 ]
  %51 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %50, %1
  br i1 %51, label %53, label %52, !prof !2

52:                                               ; preds = %49
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 48), i32 188, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i64 0, i64 0)) #7
  br label %53

53:                                               ; preds = %49, %52
  %54 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %1, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %53, %69
  %58 = phi i64 [ %74, %69 ], [ 0, %53 ]
  %59 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %2, i64 %58
  %60 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %59, align 8
  %61 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %60, i64 0, i32 2, i64 %58
  %62 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %61, align 8
  %63 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %62, %1
  br i1 %63, label %69, label %64

64:                                               ; preds = %57, %69, %53
  %65 = load i32, i32* %4, align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %87

67:                                               ; preds = %64
  %68 = sext i32 %65 to i64
  br label %78

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %1, i64 0, i32 2, i64 %58
  %71 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %61 to i64*
  store i64 %72, i64* %73, align 8
  %74 = add nuw i64 %58, 1
  %75 = load i32, i32* %54, align 8
  %76 = zext i32 %75 to i64
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %64, label %57

78:                                               ; preds = %67, %84
  %79 = phi i64 [ %68, %67 ], [ %80, %84 ]
  %80 = add nsw i64 %79, -1
  %81 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %0, i64 0, i32 2, i64 %80
  %82 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %81, align 8
  %83 = icmp eq %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %82, null
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = trunc i64 %80 to i32
  store i32 %85, i32* %4, align 8
  %86 = icmp sgt i64 %80, 0
  br i1 %86, label %78, label %87

87:                                               ; preds = %78, %84, %64
  ret void

88:                                               ; preds = %88, %42
  %89 = phi %"struct.absl::base_internal::(anonymous namespace)::AllocList"* [ %91, %88 ], [ %36, %42 ]
  %90 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList", %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %89, i64 0, i32 2, i64 %44
  %91 = load %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %90, align 8
  %92 = icmp ne %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %91, null
  %93 = icmp ult %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %91, %1
  %94 = and i1 %92, %93
  br i1 %94, label %88, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"struct.absl::base_internal::(anonymous namespace)::AllocList"*, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %2, i64 %44
  store %"struct.absl::base_internal::(anonymous namespace)::AllocList"* %89, %"struct.absl::base_internal::(anonymous namespace)::AllocList"** %96, align 8
  %97 = icmp sgt i64 %44, 0
  br i1 %97, label %26, label %30
}

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_(%"struct.std::__1::atomic"*, i32, void ()*) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = cmpxchg i32* %4, i32 0, i32 1707250555 monotonic monotonic
  %6 = extractvalue { i32, i1 } %5, 1
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i32 @_ZN4absl13base_internal12SpinLockWaitEPNSt3__16atomicIjEEiPKNS0_22SpinLockWaitTransitionENS0_14SchedulingModeE(%"struct.std::__1::atomic"* %0, i32 3, %"struct.absl::base_internal::SpinLockWaitTransition"* getelementptr inbounds ([3 x %"struct.absl::base_internal::SpinLockWaitTransition"], [3 x %"struct.absl::base_internal::SpinLockWaitTransition"]* @_ZZN4absl13base_internal12CallOnceImplIRFvvEJEEEvPNSt3__16atomicIjEENS0_14SchedulingModeEOT_DpOT0_E5trans, i64 0, i64 0), i32 %1) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3, %7
  tail call void %2() #7
  %11 = atomicrmw xchg i32* %4, i32 221 release
  %12 = icmp eq i32 %11, 94570706
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  tail call void @AbslInternalSpinLockWake(%"struct.std::__1::atomic"* %0, i1 zeroext true) #7
  br label %14

14:                                               ; preds = %10, %13, %7
  ret void
}

declare i32 @_ZN4absl13base_internal12SpinLockWaitEPNSt3__16atomicIjEEiPKNS0_22SpinLockWaitTransitionENS0_14SchedulingModeE(%"struct.std::__1::atomic"*, i32, %"struct.absl::base_internal::SpinLockWaitTransition"*, i32) local_unnamed_addr #1

declare void @AbslInternalSpinLockWake(%"struct.std::__1::atomic"*, i1 zeroext) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { cold nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
