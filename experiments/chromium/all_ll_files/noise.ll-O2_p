; ModuleID = '../../device/fido/cable/noise.cc'
source_filename = "../../device/fido/cable/noise.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::Noise" = type { %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array", i32 }
%"struct.std::__1::array" = type { [32 x i8] }
%struct.sha256_state_st = type { [8 x i32], i32, i32, [64 x i8], i32, i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.0" }
%"class.std::__1::__tuple_leaf" = type { %"struct.std::__1::array" }
%"class.std::__1::__tuple_leaf.0" = type { %"struct.std::__1::array" }
%struct.env_md_st = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.crypto::Aead" = type { %"class.absl::optional", %struct.evp_aead_st* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::span" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%struct.evp_aead_st = type opaque
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.std::__1::vector" }
%struct.ec_point_st = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%struct.ec_group_st = type opaque
%struct.bignum_ctx = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@_ZZN6device5Noise4InitENS0_13HandshakeTypeEE15kKNProtocolName = internal unnamed_addr constant [32 x i8] c"Noise_KNpsk0_P256_AESGCM_SHA256\00", align 16
@_ZZN6device5Noise4InitENS0_13HandshakeTypeEE15kNKProtocolName = internal unnamed_addr constant [32 x i8] c"Noise_NKpsk0_P256_AESGCM_SHA256\00", align 16
@.str = private unnamed_addr constant [114 x i8] c"sizeof(x962) == EC_POINT_point2oct(p256.get(), point, POINT_CONVERSION_UNCOMPRESSED, x962, sizeof(x962), nullptr)\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"../../device/fido/cable/noise.cc\00", align 1

@_ZN6device5NoiseC1Ev = hidden unnamed_addr alias void (%"class.device::Noise"*), void (%"class.device::Noise"*)* @_ZN6device5NoiseC2Ev
@_ZN6device5NoiseD1Ev = hidden unnamed_addr alias void (%"class.device::Noise"*), void (%"class.device::Noise"*)* @_ZN6device5NoiseD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device5NoiseC2Ev(%"class.device::Noise"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device5NoiseD2Ev(%"class.device::Noise"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise4InitENS0_13HandshakeTypeE(%"class.device::Noise"* nocapture, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %7 [
    i32 1, label %3
    i32 0, label %5
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZZN6device5Noise4InitENS0_13HandshakeTypeEE15kNKProtocolName, i64 0, i64 0), i64 32, i1 false)
  br label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZZN6device5Noise4InitENS0_13HandshakeTypeEE15kKNProtocolName, i64 0, i64 0), i64 32, i1 false)
  br label %7

7:                                                ; preds = %2, %5, %3
  %8 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 1, i32 0, i64 0
  %9 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 1 %9, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise7MixHashEN4base4spanIKhLm18446744073709551615EEE(%"class.device::Noise"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.sha256_state_st, align 4
  %5 = bitcast %struct.sha256_state_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 -86, i64 112, i1 false)
  %6 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %4) #5
  %7 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 1, i32 0, i64 0
  %8 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %4, i8* %7, i64 32) #5
  %9 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %4, i8* %2, i64 %1) #5
  %10 = call i32 @SHA256_Final(i8* %7, %struct.sha256_state_st* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @SHA256_Init(%struct.sha256_state_st*) local_unnamed_addr #3

declare i32 @SHA256_Update(%struct.sha256_state_st*, i8*, i64) local_unnamed_addr #3

declare i32 @SHA256_Final(i8*, %struct.sha256_state_st*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise6MixKeyEN4base4spanIKhLm18446744073709551615EEE(%"class.device::Noise"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.std::__1::array", align 1
  %5 = alloca %"class.std::__1::tuple", align 1
  %6 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 0, i32 0, i64 0
  call fastcc void @_ZN12_GLOBAL__N_15HKDF2EN4base4spanIKhLm32EEENS1_IS2_Lm18446744073709551615EEE(%"class.std::__1::tuple"* nonnull sret %5, i8* %8, i64 %1, i8* %2)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* nonnull align 1 %7, i64 32, i1 false) #5
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 %9, i64 32, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #5
  %10 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 2, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* nonnull align 1 %6, i64 32, i1 false) #5
  %11 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 3
  store i32 0, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_15HKDF2EN4base4spanIKhLm32EEENS1_IS2_Lm18446744073709551615EEE(%"class.std::__1::tuple"* noalias nocapture sret, i8*, i64, i8*) unnamed_addr #1 {
  %5 = alloca [64 x i8], align 16
  %6 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 64, i1 false)
  %7 = tail call %struct.env_md_st* @EVP_sha256() #5
  %8 = call i32 @HKDF(i8* nonnull %6, i64 64, %struct.env_md_st* %7, i8* %3, i64 %2, i8* %1, i64 32, i8* null, i64 0) #5
  %9 = bitcast [64 x i8]* %5 to <16 x i8>*
  %10 = load <16 x i8>, <16 x i8>* %9, align 16
  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 16
  %12 = bitcast i8* %11 to <16 x i8>*
  %13 = load <16 x i8>, <16 x i8>* %12, align 16
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 32
  %15 = bitcast i8* %14 to <16 x i8>*
  %16 = load <16 x i8>, <16 x i8>* %15, align 16
  %17 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 48
  %18 = bitcast i8* %17 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 16
  %20 = bitcast %"class.std::__1::tuple"* %0 to <16 x i8>*
  store <16 x i8> %10, <16 x i8>* %20, align 1
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 16
  %22 = bitcast i8* %21 to <16 x i8>*
  store <16 x i8> %13, <16 x i8>* %22, align 1
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %24 = bitcast i8* %23 to <16 x i8>*
  store <16 x i8> %16, <16 x i8>* %24, align 1
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 16
  %26 = bitcast i8* %25 to <16 x i8>*
  store <16 x i8> %19, <16 x i8>* %26, align 1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise13InitializeKeyEN4base4spanIKhLm32EEE(%"class.device::Noise"* nocapture, i8*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 2, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %1, i64 32, i1 false)
  %4 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise13MixKeyAndHashEN4base4spanIKhLm18446744073709551615EEE(%"class.device::Noise"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.sha256_state_st, align 4
  %5 = alloca [96 x i8], align 16
  %6 = getelementptr inbounds [96 x i8], [96 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 96, i1 false)
  %7 = tail call %struct.env_md_st* @EVP_sha256() #5
  %8 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 0, i32 0, i64 0
  %9 = call i32 @HKDF(i8* nonnull %6, i64 96, %struct.env_md_st* %7, i8* %2, i64 %1, i8* %8, i64 32, i8* null, i64 0) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* nonnull align 16 %6, i64 32, i1 false)
  %10 = getelementptr inbounds [96 x i8], [96 x i8]* %5, i64 0, i64 32
  %11 = bitcast %struct.sha256_state_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 112, i1 false) #5
  %12 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %4) #5
  %13 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 1, i32 0, i64 0
  %14 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %4, i8* %13, i64 32) #5
  %15 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %4, i8* %10, i64 32) #5
  %16 = call i32 @SHA256_Final(i8* %13, %struct.sha256_state_st* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #5
  %17 = getelementptr inbounds [96 x i8], [96 x i8]* %5, i64 0, i64 64
  %18 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 2, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 16 %17, i64 32, i1 false) #5
  %19 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 3
  store i32 0, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #5
  ret void
}

declare i32 @HKDF(i8*, i64, %struct.env_md_st*, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #3

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise14EncryptAndHashEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* noalias sret, %"class.device::Noise"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.sha256_state_st, align 4
  %6 = alloca [12 x i8], align 4
  %7 = alloca %"class.crypto::Aead", align 8
  %8 = alloca %"class.base::span", align 8
  %9 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #5
  %10 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 4
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 4
  %12 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 3
  %13 = bitcast [12 x i8]* %6 to i32*
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %12, align 4
  %16 = getelementptr inbounds %"class.crypto::Aead", %"class.crypto::Aead"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN6crypto4AeadC1ENS0_13AeadAlgorithmE(%"class.crypto::Aead"* nonnull %7, i32 1) #5
  %17 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 2, i32 0, i64 0
  call void @_ZN6crypto4Aead4InitEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::Aead"* nonnull %7, i64 32, i8* %17) #5
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 1, i32 0, i64 0
  %20 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -86, i64 24, i1 false)
  store i64 32, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  store i8* %19, i8** %22, align 8
  call void @_ZNK6crypto4Aead4SealEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.std::__1::vector"* sret %0, %"class.crypto::Aead"* nonnull %7, i64 %2, i8* %3, i64 12, i8* nonnull %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %8) #5
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8** %18 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %24
  %28 = inttoptr i64 %24 to i8*
  %29 = bitcast %struct.sha256_state_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %29) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -86, i64 112, i1 false) #5
  %30 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %5) #5
  %31 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* %19, i64 32) #5
  %32 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* %28, i64 %27) #5
  %33 = call i32 @SHA256_Final(i8* %19, %struct.sha256_state_st* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %29) #5
  call void @_ZN6crypto4AeadD1Ev(%"class.crypto::Aead"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #5
  ret void
}

declare void @_ZN6crypto4AeadC1ENS0_13AeadAlgorithmE(%"class.crypto::Aead"*, i32) unnamed_addr #3

declare void @_ZN6crypto4Aead4InitEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::Aead"*, i64, i8*) local_unnamed_addr #3

declare void @_ZNK6crypto4Aead4SealEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.std::__1::vector"* sret, %"class.crypto::Aead"*, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6crypto4AeadD1Ev(%"class.crypto::Aead"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise14DecryptAndHashEN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional.7"* noalias sret, %"class.device::Noise"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.sha256_state_st, align 4
  %6 = alloca [12 x i8], align 4
  %7 = alloca %"class.crypto::Aead", align 8
  %8 = alloca %"class.base::span", align 8
  %9 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #5
  %10 = getelementptr inbounds [12 x i8], [12 x i8]* %6, i64 0, i64 4
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 4
  %12 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 3
  %13 = bitcast [12 x i8]* %6 to i32*
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %12, align 4
  %16 = getelementptr inbounds %"class.crypto::Aead", %"class.crypto::Aead"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN6crypto4AeadC1ENS0_13AeadAlgorithmE(%"class.crypto::Aead"* nonnull %7, i32 1) #5
  %17 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 2, i32 0, i64 0
  call void @_ZN6crypto4Aead4InitEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::Aead"* nonnull %7, i64 32, i8* %17) #5
  %18 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 -86, i64 32, i1 false)
  %19 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 1, i32 0, i64 0
  %20 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  store i64 32, i64* %20, align 8
  %21 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  store i8* %19, i8** %21, align 8
  call void @_ZNK6crypto4Aead4OpenEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.absl::optional.7"* sret %0, %"class.crypto::Aead"* nonnull %7, i64 %2, i8* %3, i64 12, i8* nonnull %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %8) #5
  %22 = load i8, i8* %18, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %4
  %25 = bitcast %struct.sha256_state_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 -86, i64 112, i1 false) #5
  %26 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %5) #5
  %27 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* %19, i64 32) #5
  %28 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* %3, i64 %2) #5
  %29 = call i32 @SHA256_Final(i8* %19, %struct.sha256_state_st* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #5
  br label %30

30:                                               ; preds = %4, %24
  call void @_ZN6crypto4AeadD1Ev(%"class.crypto::Aead"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #5
  ret void
}

declare void @_ZNK6crypto4Aead4OpenEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.absl::optional.7"* sret, %"class.crypto::Aead"*, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6device5Noise14handshake_hashEv(%"struct.std::__1::array"* noalias nocapture sret, %"class.device::Noise"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0
  %4 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device5Noise12MixHashPointEPK11ec_point_st(%"class.device::Noise"*, %struct.ec_point_st*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %struct.sha256_state_st, align 4
  %5 = alloca [65 x i8], align 16
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 65, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 65, i1 false)
  %9 = tail call %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32 415) #5
  %10 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %12 = call i64 @EC_POINT_point2oct(%struct.ec_group_st* %9, %struct.ec_point_st* %1, i32 4, i8* nonnull %8, i64 65, %struct.bignum_ctx* null) #5
  %13 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = icmp eq i64 %12, 65
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %11, align 8
  br label %25

16:                                               ; preds = %2
  %17 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 65) #5
  %18 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %12) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str, i64 0, i64 0), i8* %17, i8* %18) #5
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %20, i8** %11, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %6) #5
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #5
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  %26 = bitcast %struct.sha256_state_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -86, i64 112, i1 false) #5
  %27 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %4) #5
  %28 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %0, i64 0, i32 1, i32 0, i64 0
  %29 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %4, i8* %28, i64 32) #5
  %30 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %4, i8* nonnull %8, i64 65) #5
  %31 = call i32 @SHA256_Final(i8* %28, %struct.sha256_state_st* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #5
  %32 = icmp eq %struct.ec_group_st* %9, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %25
  call void @EC_GROUP_free(%struct.ec_group_st* nonnull %9) #5
  br label %34

34:                                               ; preds = %25, %33
  call void @llvm.lifetime.end.p0i8(i64 65, i8* nonnull %8) #5
  ret void
}

declare %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32) local_unnamed_addr #3

declare i64 @EC_POINT_point2oct(%struct.ec_group_st*, %struct.ec_point_st*, i32, i8*, i64, %struct.bignum_ctx*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6device5Noise12traffic_keysEv(%"class.std::__1::tuple"* noalias nocapture sret, %"class.device::Noise"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.device::Noise", %"class.device::Noise"* %1, i64 0, i32 0, i32 0, i64 0
  tail call fastcc void @_ZN12_GLOBAL__N_15HKDF2EN4base4spanIKhLm32EEENS1_IS2_Lm18446744073709551615EEE(%"class.std::__1::tuple"* sret %0, i8* %3, i64 0, i8* null)
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @EC_GROUP_free(%struct.ec_group_st*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
