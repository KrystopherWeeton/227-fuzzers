; ModuleID = '../../v8/src/runtime/runtime-numbers.cc'
source_filename = "../../v8/src/runtime/runtime-numbers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1133" = type { %"struct.std::__1::__atomic_base.1134" }
%"struct.std::__1::__atomic_base.1134" = type { %"struct.std::__1::__atomic_base.1135" }
%"struct.std::__1::__atomic_base.1135" = type { %"struct.std::__1::__cxx_atomic_impl.1136" }
%"struct.std::__1::__cxx_atomic_impl.1136" = type { %"struct.std::__1::__cxx_atomic_base_impl.1137" }
%"struct.std::__1::__cxx_atomic_base_impl.1137" = type { i32 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1133", align 4
@_ZZN2v88internalL28Stats_Runtime_StringToNumberEiPmPNS0_7IsolateEE27trace_event_unique_atomic16 = internal global i64 0, align 8
@.str = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"V8.Runtime_Runtime_StringToNumber\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"args[0].IsString()\00", align 1
@_ZZN2v88internalL28Stats_Runtime_StringParseIntEiPmPNS0_7IsolateEE27trace_event_unique_atomic25 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [34 x i8] c"V8.Runtime_Runtime_StringParseInt\00", align 1
@_ZZN2v88internalL30Stats_Runtime_StringParseFloatEiPmPNS0_7IsolateEE27trace_event_unique_atomic53 = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [36 x i8] c"V8.Runtime_Runtime_StringParseFloat\00", align 1
@_ZZN2v88internalL32Stats_Runtime_NumberToStringSlowEiPmPNS0_7IsolateEE27trace_event_unique_atomic64 = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [38 x i8] c"V8.Runtime_Runtime_NumberToStringSlow\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"args[0].IsNumber()\00", align 1
@_ZZN2v88internalL20Stats_Runtime_MaxSmiEiPmPNS0_7IsolateEE27trace_event_unique_atomic72 = internal global i64 0, align 8
@.str.10 = private unnamed_addr constant [26 x i8] c"V8.Runtime_Runtime_MaxSmi\00", align 1
@_ZZN2v88internalL19Stats_Runtime_IsSmiEiPmPNS0_7IsolateEE27trace_event_unique_atomic79 = internal global i64 0, align 8
@.str.11 = private unnamed_addr constant [25 x i8] c"V8.Runtime_Runtime_IsSmi\00", align 1
@_ZZN2v88internalL29Stats_Runtime_GetHoleNaNUpperEiPmPNS0_7IsolateEE27trace_event_unique_atomic87 = internal global i64 0, align 8
@.str.12 = private unnamed_addr constant [35 x i8] c"V8.Runtime_Runtime_GetHoleNaNUpper\00", align 1
@_ZZN2v88internalL29Stats_Runtime_GetHoleNaNLowerEiPmPNS0_7IsolateEE27trace_event_unique_atomic94 = internal global i64 0, align 8
@.str.13 = private unnamed_addr constant [35 x i8] c"V8.Runtime_Runtime_GetHoleNaNLower\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal22Runtime_StringToNumberEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL28Stats_Runtime_StringToNumberEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64, i64* %1, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20, !prof !3

20:                                               ; preds = %8
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp ult i16 %29, 64
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %20, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

32:                                               ; preds = %20
  %33 = tail call i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %1) #8
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = inttoptr i64 %11 to i64*
  %38 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %39 = load i64*, i64** %38, align 8
  store i64 %11, i64* %10, align 8
  %40 = load i32, i32* %14, align 8
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %14, align 8
  %42 = load i64*, i64** %12, align 8
  %43 = icmp eq i64* %42, %13
  br i1 %43, label %46, label %44

44:                                               ; preds = %36
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %45 = load i64*, i64** %38, align 8
  br label %46

46:                                               ; preds = %44, %36
  %47 = phi i64* [ %45, %44 ], [ %37, %36 ]
  %48 = phi i64* [ %13, %44 ], [ %39, %36 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %47, i64* %48) #8
  br label %49

49:                                               ; preds = %46, %32, %6
  %50 = phi i64 [ %7, %6 ], [ %34, %32 ], [ %34, %46 ]
  ret i64 %50
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL28Stats_Runtime_StringToNumberEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 433) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL28Stats_Runtime_StringToNumberEiPmPNS0_7IsolateEE27trace_event_unique_atomic16 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL28Stats_Runtime_StringToNumberEiPmPNS0_7IsolateEE27trace_event_unique_atomic16 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %89, label %78, !prof !3

78:                                               ; preds = %66
  %79 = and i64 %75, -4294967296
  %80 = add i64 %75, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp ult i16 %87, 64
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %78, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

90:                                               ; preds = %78
  %91 = call i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %1) #8
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = inttoptr i64 %69 to i64*
  %96 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %97 = load i64*, i64** %96, align 8
  store i64 %69, i64* %68, align 8
  %98 = load i32, i32* %72, align 8
  %99 = add nsw i32 %98, -1
  store i32 %99, i32* %72, align 8
  %100 = load i64*, i64** %70, align 8
  %101 = icmp eq i64* %100, %71
  br i1 %101, label %104, label %102

102:                                              ; preds = %94
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %103 = load i64*, i64** %96, align 8
  br label %104

104:                                              ; preds = %102, %94
  %105 = phi i64* [ %103, %102 ], [ %95, %94 ]
  %106 = phi i64* [ %71, %102 ], [ %97, %94 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %105, i64* %106) #8
  br label %107

107:                                              ; preds = %90, %104
  %108 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %109 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %108, null
  br i1 %109, label %126, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = load atomic i8, i8* %112 monotonic, align 1
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %126, label %115

115:                                              ; preds = %110
  %116 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %117 = load i8*, i8** %111, align 8
  %118 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.v8::TracingController"* %116 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %123 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %123, i64 5
  %125 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %124, align 8
  call void %125(%"class.v8::TracingController"* %116, i8* %117, i8* %119, i64 %121) #8
  br label %126

126:                                              ; preds = %107, %110, %115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %127 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %128 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %127, align 8
  %129 = icmp eq %"class.v8::internal::RuntimeCallStats"* %128, null
  br i1 %129, label %132, label %130, !prof !2

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %128, %"class.v8::internal::RuntimeCallTimer"* %131) #8
  br label %132

132:                                              ; preds = %126, %130
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal22Runtime_StringParseIntEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL28Stats_Runtime_StringParseIntEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %194

8:                                                ; preds = %3
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = add i64 %9, -8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %1, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %8
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp ult i16 %32, 64
  br i1 %33, label %36, label %34

34:                                               ; preds = %23, %8
  %35 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %1) #8
  br label %36

36:                                               ; preds = %34, %23
  %37 = phi i64* [ %35, %34 ], [ %1, %23 ]
  %38 = icmp eq i64* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %177

41:                                               ; preds = %36
  %42 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* nonnull %37, i8 zeroext 0) #8
  %43 = load i64, i64* %19, align 8
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %74, label %46

46:                                               ; preds = %41
  %47 = and i64 %43, -4294967296
  %48 = add i64 %43, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp eq i16 %55, 66
  br i1 %56, label %74, label %57

57:                                               ; preds = %46
  %58 = load atomic i32, i32* %49 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %47, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 66
  br i1 %64, label %67, label %65

65:                                               ; preds = %57
  %66 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %2, i64* %19, i32 0) #8
  br label %67

67:                                               ; preds = %65, %57
  %68 = phi i64* [ %66, %65 ], [ %19, %57 ]
  %69 = icmp eq i64* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %68, align 8
  br label %74

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %177

74:                                               ; preds = %70, %46, %41
  %75 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %71, %70 ]
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = trunc i64 %75 to i32
  %80 = ashr i32 %79, 1
  %81 = sitofp i32 %80 to double
  br label %86

82:                                               ; preds = %74
  %83 = add i64 %75, 3
  %84 = inttoptr i64 %83 to double*
  %85 = load double, double* %84, align 1
  br label %86

86:                                               ; preds = %82, %78
  %87 = phi double [ %81, %78 ], [ %85, %82 ]
  %88 = tail call double @llvm.fabs.f64(double %87) #9
  %89 = fcmp one double %88, 0x7FF0000000000000
  %90 = fcmp ole double %87, 0x41DFFFFFFFC00000
  %91 = and i1 %90, %89
  %92 = fcmp oge double %87, 0xC1E0000000000000
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %98

94:                                               ; preds = %86
  %95 = fptosi double %87 to i32
  %96 = sitofp i32 %95 to double
  %97 = fcmp une double %87, %96
  br i1 %97, label %98, label %130

98:                                               ; preds = %94, %86
  %99 = bitcast double %87 to i64
  %100 = and i64 %99, 9218868437227405312
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %138, label %102

102:                                              ; preds = %98
  %103 = lshr i64 %99, 52
  %104 = trunc i64 %103 to i32
  %105 = and i32 %104, 2047
  %106 = add nsw i32 %105, -1075
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %108, label %116

108:                                              ; preds = %102
  %109 = icmp slt i32 %106, -52
  br i1 %109, label %138, label %110

110:                                              ; preds = %108
  %111 = and i64 %99, 4503599627370495
  %112 = or i64 %111, 4503599627370496
  %113 = sub nuw nsw i32 1075, %105
  %114 = zext i32 %113 to i64
  %115 = lshr i64 %112, %114
  br label %124

116:                                              ; preds = %102
  %117 = icmp sgt i32 %106, 31
  br i1 %117, label %138, label %118

118:                                              ; preds = %116
  %119 = and i64 %99, 4503599627370495
  %120 = or i64 %119, 4503599627370496
  %121 = zext i32 %106 to i64
  %122 = shl i64 %120, %121
  %123 = and i64 %122, 4294967295
  br label %124

124:                                              ; preds = %118, %110
  %125 = phi i64 [ %115, %110 ], [ %123, %118 ]
  %126 = icmp sgt i64 %99, -1
  %127 = select i1 %126, i32 1, i32 -1
  %128 = trunc i64 %125 to i32
  %129 = mul i32 %127, %128
  br label %130

130:                                              ; preds = %124, %94
  %131 = phi i32 [ %95, %94 ], [ %129, %124 ]
  %132 = icmp ne i32 %131, 0
  %133 = add i32 %131, -2
  %134 = icmp ugt i32 %133, 34
  %135 = and i1 %132, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 121
  br label %177

138:                                              ; preds = %130, %116, %108, %98
  %139 = phi i32 [ %131, %130 ], [ 0, %108 ], [ 0, %116 ], [ 0, %98 ]
  %140 = tail call double @_ZN2v88internal11StringToIntEPNS0_7IsolateENS0_6HandleINS0_6StringEEEi(%"class.v8::internal::Isolate"* %2, i64* %42, i32 %139) #8
  %141 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %142 = fcmp ult double %140, 0xC1D0000000000000
  %143 = fcmp ugt double %140, 0x41CFFFFFFF800000
  %144 = or i1 %143, %142
  %145 = bitcast double %140 to i64
  %146 = icmp eq i64 %145, -9223372036854775808
  %147 = or i1 %144, %146
  br i1 %147, label %172, label %148

148:                                              ; preds = %138
  %149 = fptosi double %140 to i32
  %150 = sitofp i32 %149 to double
  %151 = fcmp oeq double %140, %150
  br i1 %151, label %152, label %172

152:                                              ; preds = %148
  %153 = sext i32 %149 to i64
  %154 = shl nsw i64 %153, 1
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %156 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %155, align 8
  %157 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %152
  %159 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %156, i64 %154) #8
  br label %177

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %162 = load i64*, i64** %161, align 8
  %163 = load i64*, i64** %13, align 8
  %164 = icmp eq i64* %162, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #8
  br label %167

167:                                              ; preds = %165, %160
  %168 = phi i64* [ %166, %165 ], [ %162, %160 ]
  %169 = ptrtoint i64* %168 to i64
  %170 = add i64 %169, 8
  %171 = inttoptr i64 %170 to i64*
  store i64* %171, i64** %161, align 8
  store i64 %154, i64* %168, align 8
  br label %177

172:                                              ; preds = %148, %138
  %173 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %141) #8
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, 3
  %176 = inttoptr i64 %175 to double*
  store double %140, double* %176, align 1
  br label %177

177:                                              ; preds = %172, %167, %158, %136, %72, %39
  %178 = phi i64* [ %73, %72 ], [ %40, %39 ], [ %137, %136 ], [ %173, %172 ], [ %159, %158 ], [ %168, %167 ]
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %177
  %182 = inttoptr i64 %12 to i64*
  %183 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %184 = load i64*, i64** %183, align 8
  store i64 %12, i64* %11, align 8
  %185 = load i32, i32* %15, align 8
  %186 = add nsw i32 %185, -1
  store i32 %186, i32* %15, align 8
  %187 = load i64*, i64** %13, align 8
  %188 = icmp eq i64* %187, %14
  br i1 %188, label %191, label %189

189:                                              ; preds = %181
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %190 = load i64*, i64** %183, align 8
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i64* [ %190, %189 ], [ %182, %181 ]
  %193 = phi i64* [ %14, %189 ], [ %184, %181 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %192, i64* %193) #8
  br label %194

194:                                              ; preds = %191, %177, %6
  %195 = phi i64 [ %7, %6 ], [ %179, %177 ], [ %179, %191 ]
  ret i64 %195
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL28Stats_Runtime_StringParseIntEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 432) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL28Stats_Runtime_StringParseIntEiPmPNS0_7IsolateEE27trace_event_unique_atomic25 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL28Stats_Runtime_StringParseIntEiPmPNS0_7IsolateEE27trace_event_unique_atomic25 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = ptrtoint i64* %1 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  %76 = add i64 %67, -8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %1, align 8
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %66
  %82 = and i64 %78, -4294967296
  %83 = add i64 %78, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp ult i16 %90, 64
  br i1 %91, label %94, label %92

92:                                               ; preds = %81, %66
  %93 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %1) #8
  br label %94

94:                                               ; preds = %92, %81
  %95 = phi i64* [ %93, %92 ], [ %1, %81 ]
  %96 = icmp eq i64* %95, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %235

99:                                               ; preds = %94
  %100 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %2, i64* nonnull %95, i8 zeroext 0) #8
  %101 = load i64, i64* %77, align 8
  %102 = and i64 %101, 1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %132, label %104

104:                                              ; preds = %99
  %105 = and i64 %101, -4294967296
  %106 = add i64 %101, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %105, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = icmp eq i16 %113, 66
  br i1 %114, label %132, label %115

115:                                              ; preds = %104
  %116 = load atomic i32, i32* %107 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %105, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = icmp eq i16 %121, 66
  br i1 %122, label %125, label %123

123:                                              ; preds = %115
  %124 = call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %2, i64* %77, i32 0) #8
  br label %125

125:                                              ; preds = %123, %115
  %126 = phi i64* [ %124, %123 ], [ %77, %115 ]
  %127 = icmp eq i64* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = load i64, i64* %126, align 8
  br label %132

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %235

132:                                              ; preds = %128, %104, %99
  %133 = phi i64 [ %101, %104 ], [ %101, %99 ], [ %129, %128 ]
  %134 = and i64 %133, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = trunc i64 %133 to i32
  %138 = ashr i32 %137, 1
  %139 = sitofp i32 %138 to double
  br label %144

140:                                              ; preds = %132
  %141 = add i64 %133, 3
  %142 = inttoptr i64 %141 to double*
  %143 = load double, double* %142, align 1
  br label %144

144:                                              ; preds = %140, %136
  %145 = phi double [ %139, %136 ], [ %143, %140 ]
  %146 = call double @llvm.fabs.f64(double %145) #9
  %147 = fcmp one double %146, 0x7FF0000000000000
  %148 = fcmp ole double %145, 0x41DFFFFFFFC00000
  %149 = and i1 %148, %147
  %150 = fcmp oge double %145, 0xC1E0000000000000
  %151 = and i1 %150, %149
  br i1 %151, label %152, label %156

152:                                              ; preds = %144
  %153 = fptosi double %145 to i32
  %154 = sitofp i32 %153 to double
  %155 = fcmp une double %145, %154
  br i1 %155, label %156, label %188

156:                                              ; preds = %152, %144
  %157 = bitcast double %145 to i64
  %158 = and i64 %157, 9218868437227405312
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %196, label %160

160:                                              ; preds = %156
  %161 = lshr i64 %157, 52
  %162 = trunc i64 %161 to i32
  %163 = and i32 %162, 2047
  %164 = add nsw i32 %163, -1075
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %166, label %174

166:                                              ; preds = %160
  %167 = icmp slt i32 %164, -52
  br i1 %167, label %196, label %168

168:                                              ; preds = %166
  %169 = and i64 %157, 4503599627370495
  %170 = or i64 %169, 4503599627370496
  %171 = sub nuw nsw i32 1075, %163
  %172 = zext i32 %171 to i64
  %173 = lshr i64 %170, %172
  br label %182

174:                                              ; preds = %160
  %175 = icmp sgt i32 %164, 31
  br i1 %175, label %196, label %176

176:                                              ; preds = %174
  %177 = and i64 %157, 4503599627370495
  %178 = or i64 %177, 4503599627370496
  %179 = zext i32 %164 to i64
  %180 = shl i64 %178, %179
  %181 = and i64 %180, 4294967295
  br label %182

182:                                              ; preds = %176, %168
  %183 = phi i64 [ %173, %168 ], [ %181, %176 ]
  %184 = icmp sgt i64 %157, -1
  %185 = select i1 %184, i32 1, i32 -1
  %186 = trunc i64 %183 to i32
  %187 = mul i32 %185, %186
  br label %188

188:                                              ; preds = %182, %152
  %189 = phi i32 [ %153, %152 ], [ %187, %182 ]
  %190 = icmp ne i32 %189, 0
  %191 = add i32 %189, -2
  %192 = icmp ugt i32 %191, 34
  %193 = and i1 %190, %192
  br i1 %193, label %194, label %196

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 121
  br label %235

196:                                              ; preds = %188, %174, %166, %156
  %197 = phi i32 [ %189, %188 ], [ 0, %166 ], [ 0, %174 ], [ 0, %156 ]
  %198 = call double @_ZN2v88internal11StringToIntEPNS0_7IsolateENS0_6HandleINS0_6StringEEEi(%"class.v8::internal::Isolate"* %2, i64* %100, i32 %197) #8
  %199 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %200 = fcmp ult double %198, 0xC1D0000000000000
  %201 = fcmp ugt double %198, 0x41CFFFFFFF800000
  %202 = or i1 %201, %200
  %203 = bitcast double %198 to i64
  %204 = icmp eq i64 %203, -9223372036854775808
  %205 = or i1 %202, %204
  br i1 %205, label %230, label %206

206:                                              ; preds = %196
  %207 = fptosi double %198 to i32
  %208 = sitofp i32 %207 to double
  %209 = fcmp oeq double %198, %208
  br i1 %209, label %210, label %230

210:                                              ; preds = %206
  %211 = sext i32 %207 to i64
  %212 = shl nsw i64 %211, 1
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %214 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %213, align 8
  %215 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %210
  %217 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %214, i64 %212) #8
  br label %235

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %220 = load i64*, i64** %219, align 8
  %221 = load i64*, i64** %71, align 8
  %222 = icmp eq i64* %220, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %218
  %224 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #8
  br label %225

225:                                              ; preds = %223, %218
  %226 = phi i64* [ %224, %223 ], [ %220, %218 ]
  %227 = ptrtoint i64* %226 to i64
  %228 = add i64 %227, 8
  %229 = inttoptr i64 %228 to i64*
  store i64* %229, i64** %219, align 8
  store i64 %212, i64* %226, align 8
  br label %235

230:                                              ; preds = %206, %196
  %231 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %199) #8
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %232, 3
  %234 = inttoptr i64 %233 to double*
  store double %198, double* %234, align 1
  br label %235

235:                                              ; preds = %230, %225, %216, %194, %130, %97
  %236 = phi i64* [ %131, %130 ], [ %98, %97 ], [ %195, %194 ], [ %231, %230 ], [ %217, %216 ], [ %226, %225 ]
  %237 = load i64, i64* %236, align 8
  %238 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %235
  %240 = inttoptr i64 %70 to i64*
  %241 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %242 = load i64*, i64** %241, align 8
  store i64 %70, i64* %69, align 8
  %243 = load i32, i32* %73, align 8
  %244 = add nsw i32 %243, -1
  store i32 %244, i32* %73, align 8
  %245 = load i64*, i64** %71, align 8
  %246 = icmp eq i64* %245, %72
  br i1 %246, label %249, label %247

247:                                              ; preds = %239
  store i64* %72, i64** %71, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %248 = load i64*, i64** %241, align 8
  br label %249

249:                                              ; preds = %247, %239
  %250 = phi i64* [ %248, %247 ], [ %240, %239 ]
  %251 = phi i64* [ %72, %247 ], [ %242, %239 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %250, i64* %251) #8
  br label %252

252:                                              ; preds = %235, %249
  %253 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %254 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %253, null
  br i1 %254, label %271, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = load atomic i8, i8* %257 monotonic, align 1
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %262 = load i8*, i8** %256, align 8
  %263 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %264 = load i8*, i8** %263, align 8
  %265 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.v8::TracingController"* %261 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %268 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %268, i64 5
  %270 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %269, align 8
  call void %270(%"class.v8::TracingController"* %261, i8* %262, i8* %264, i64 %266) #8
  br label %271

271:                                              ; preds = %252, %255, %260
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %272 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %273 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %272, align 8
  %274 = icmp eq %"class.v8::internal::RuntimeCallStats"* %273, null
  br i1 %274, label %277, label %275, !prof !2

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %273, %"class.v8::internal::RuntimeCallTimer"* %276) #8
  br label %277

277:                                              ; preds = %271, %275
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 %237
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal24Runtime_StringParseFloatEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL30Stats_Runtime_StringParseFloatEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %87

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64, i64* %1, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20, !prof !3

20:                                               ; preds = %8
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp ult i16 %29, 64
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %20, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

32:                                               ; preds = %20
  %33 = tail call double @_ZN2v88internal14StringToDoubleEPNS0_7IsolateENS0_6HandleINS0_6StringEEEid(%"class.v8::internal::Isolate"* %2, i64* %1, i32 16, double 0x7FF8000000000000) #8
  %34 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %35 = fcmp ult double %33, 0xC1D0000000000000
  %36 = fcmp ugt double %33, 0x41CFFFFFFF800000
  %37 = or i1 %36, %35
  %38 = bitcast double %33 to i64
  %39 = icmp eq i64 %38, -9223372036854775808
  %40 = or i1 %37, %39
  br i1 %40, label %65, label %41

41:                                               ; preds = %32
  %42 = fptosi double %33 to i32
  %43 = sitofp i32 %42 to double
  %44 = fcmp oeq double %33, %43
  br i1 %44, label %45, label %65

45:                                               ; preds = %41
  %46 = sext i32 %42 to i64
  %47 = shl nsw i64 %46, 1
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %49 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %48, align 8
  %50 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  %52 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %49, i64 %47) #8
  br label %70

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = load i64*, i64** %12, align 8
  %57 = icmp eq i64* %55, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #8
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i64* [ %59, %58 ], [ %55, %53 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %54, align 8
  store i64 %47, i64* %61, align 8
  br label %70

65:                                               ; preds = %41, %32
  %66 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %34) #8
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 3
  %69 = inttoptr i64 %68 to double*
  store double %33, double* %69, align 1
  br label %70

70:                                               ; preds = %65, %60, %51
  %71 = phi i64* [ %66, %65 ], [ %52, %51 ], [ %61, %60 ]
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = inttoptr i64 %11 to i64*
  %76 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %77 = load i64*, i64** %76, align 8
  store i64 %11, i64* %10, align 8
  %78 = load i32, i32* %14, align 8
  %79 = add nsw i32 %78, -1
  store i32 %79, i32* %14, align 8
  %80 = load i64*, i64** %12, align 8
  %81 = icmp eq i64* %80, %13
  br i1 %81, label %84, label %82

82:                                               ; preds = %74
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %83 = load i64*, i64** %76, align 8
  br label %84

84:                                               ; preds = %82, %74
  %85 = phi i64* [ %83, %82 ], [ %75, %74 ]
  %86 = phi i64* [ %13, %82 ], [ %77, %74 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %85, i64* %86) #8
  br label %87

87:                                               ; preds = %84, %70, %6
  %88 = phi i64 [ %7, %6 ], [ %72, %70 ], [ %72, %84 ]
  ret i64 %88
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL30Stats_Runtime_StringParseFloatEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 431) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL30Stats_Runtime_StringParseFloatEiPmPNS0_7IsolateEE27trace_event_unique_atomic53 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL30Stats_Runtime_StringParseFloatEiPmPNS0_7IsolateEE27trace_event_unique_atomic53 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %89, label %78, !prof !3

78:                                               ; preds = %66
  %79 = and i64 %75, -4294967296
  %80 = add i64 %75, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp ult i16 %87, 64
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %78, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

90:                                               ; preds = %78
  %91 = call double @_ZN2v88internal14StringToDoubleEPNS0_7IsolateENS0_6HandleINS0_6StringEEEid(%"class.v8::internal::Isolate"* %2, i64* %1, i32 16, double 0x7FF8000000000000) #8
  %92 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %93 = fcmp ult double %91, 0xC1D0000000000000
  %94 = fcmp ugt double %91, 0x41CFFFFFFF800000
  %95 = or i1 %94, %93
  %96 = bitcast double %91 to i64
  %97 = icmp eq i64 %96, -9223372036854775808
  %98 = or i1 %95, %97
  br i1 %98, label %123, label %99

99:                                               ; preds = %90
  %100 = fptosi double %91 to i32
  %101 = sitofp i32 %100 to double
  %102 = fcmp oeq double %91, %101
  br i1 %102, label %103, label %123

103:                                              ; preds = %99
  %104 = sext i32 %100 to i64
  %105 = shl nsw i64 %104, 1
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %107 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %106, align 8
  %108 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %107, i64 %105) #8
  br label %128

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = load i64*, i64** %70, align 8
  %115 = icmp eq i64* %113, %114
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #8
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i64* [ %117, %116 ], [ %113, %111 ]
  %120 = ptrtoint i64* %119 to i64
  %121 = add i64 %120, 8
  %122 = inttoptr i64 %121 to i64*
  store i64* %122, i64** %112, align 8
  store i64 %105, i64* %119, align 8
  br label %128

123:                                              ; preds = %99, %90
  %124 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %92) #8
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 3
  %127 = inttoptr i64 %126 to double*
  store double %91, double* %127, align 1
  br label %128

128:                                              ; preds = %123, %118, %109
  %129 = phi i64* [ %124, %123 ], [ %110, %109 ], [ %119, %118 ]
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %128
  %133 = inttoptr i64 %69 to i64*
  %134 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %135 = load i64*, i64** %134, align 8
  store i64 %69, i64* %68, align 8
  %136 = load i32, i32* %72, align 8
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %72, align 8
  %138 = load i64*, i64** %70, align 8
  %139 = icmp eq i64* %138, %71
  br i1 %139, label %142, label %140

140:                                              ; preds = %132
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %141 = load i64*, i64** %134, align 8
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i64* [ %141, %140 ], [ %133, %132 ]
  %144 = phi i64* [ %71, %140 ], [ %135, %132 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %143, i64* %144) #8
  br label %145

145:                                              ; preds = %128, %142
  %146 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %147 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %146, null
  br i1 %147, label %164, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = load atomic i8, i8* %150 monotonic, align 1
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %148
  %154 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %155 = load i8*, i8** %149, align 8
  %156 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::TracingController"* %154 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %161 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %161, i64 5
  %163 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %162, align 8
  call void %163(%"class.v8::TracingController"* %154, i8* %155, i8* %157, i64 %159) #8
  br label %164

164:                                              ; preds = %145, %148, %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %165 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %166 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %165, align 8
  %167 = icmp eq %"class.v8::internal::RuntimeCallStats"* %166, null
  br i1 %167, label %170, label %168, !prof !2

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %166, %"class.v8::internal::RuntimeCallTimer"* %169) #8
  br label %170

170:                                              ; preds = %164, %168
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 %130
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal26Runtime_NumberToStringSlowEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL32Stats_Runtime_NumberToStringSlowEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %50

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64, i64* %1, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %8
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 66
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %20
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

32:                                               ; preds = %20, %8
  %33 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %34 = tail call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %33, i64* %1, i32 1) #8
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = inttoptr i64 %11 to i64*
  %39 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %40 = load i64*, i64** %39, align 8
  store i64 %11, i64* %10, align 8
  %41 = load i32, i32* %14, align 8
  %42 = add nsw i32 %41, -1
  store i32 %42, i32* %14, align 8
  %43 = load i64*, i64** %12, align 8
  %44 = icmp eq i64* %43, %13
  br i1 %44, label %47, label %45

45:                                               ; preds = %37
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %46 = load i64*, i64** %39, align 8
  br label %47

47:                                               ; preds = %45, %37
  %48 = phi i64* [ %46, %45 ], [ %38, %37 ]
  %49 = phi i64* [ %13, %45 ], [ %40, %37 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %48, i64* %49) #8
  br label %50

50:                                               ; preds = %47, %32, %6
  %51 = phi i64 [ %7, %6 ], [ %35, %32 ], [ %35, %47 ]
  ret i64 %51
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL32Stats_Runtime_NumberToStringSlowEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 430) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL32Stats_Runtime_NumberToStringSlowEiPmPNS0_7IsolateEE27trace_event_unique_atomic64 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL32Stats_Runtime_NumberToStringSlowEiPmPNS0_7IsolateEE27trace_event_unique_atomic64 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %66
  %79 = and i64 %75, -4294967296
  %80 = add i64 %75, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp eq i16 %87, 66
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %78
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

90:                                               ; preds = %78, %66
  %91 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %92 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %91, i64* %1, i32 1) #8
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %90
  %96 = inttoptr i64 %69 to i64*
  %97 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %98 = load i64*, i64** %97, align 8
  store i64 %69, i64* %68, align 8
  %99 = load i32, i32* %72, align 8
  %100 = add nsw i32 %99, -1
  store i32 %100, i32* %72, align 8
  %101 = load i64*, i64** %70, align 8
  %102 = icmp eq i64* %101, %71
  br i1 %102, label %105, label %103

103:                                              ; preds = %95
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %104 = load i64*, i64** %97, align 8
  br label %105

105:                                              ; preds = %103, %95
  %106 = phi i64* [ %104, %103 ], [ %96, %95 ]
  %107 = phi i64* [ %71, %103 ], [ %98, %95 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %106, i64* %107) #8
  br label %108

108:                                              ; preds = %90, %105
  %109 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %110 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %109, null
  br i1 %110, label %127, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = load atomic i8, i8* %113 monotonic, align 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %111
  %117 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %118 = load i8*, i8** %112, align 8
  %119 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.v8::TracingController"* %117 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %124 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %124, i64 5
  %126 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %125, align 8
  call void %126(%"class.v8::TracingController"* %117, i8* %118, i8* %120, i64 %122) #8
  br label %127

127:                                              ; preds = %108, %111, %116
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %128 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %129 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %128, align 8
  %130 = icmp eq %"class.v8::internal::RuntimeCallStats"* %129, null
  br i1 %130, label %133, label %131, !prof !2

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %129, %"class.v8::internal::RuntimeCallTimer"* %132) #8
  br label %133

133:                                              ; preds = %127, %131
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal14Runtime_MaxSmiEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL20Stats_Runtime_MaxSmiEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i64 [ %7, %6 ], [ 2147483646, %3 ]
  ret i64 %9
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL20Stats_Runtime_MaxSmiEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"* nocapture readonly) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 429) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL20Stats_Runtime_MaxSmiEiPmPNS0_7IsolateEE27trace_event_unique_atomic72 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL20Stats_Runtime_MaxSmiEiPmPNS0_7IsolateEE27trace_event_unique_atomic72 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %83, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %56, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %66 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, null
  br i1 %66, label %83, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = load atomic i8, i8* %69 monotonic, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %83, label %72

72:                                               ; preds = %67
  %73 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %74 = load i8*, i8** %68, align 8
  %75 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.v8::TracingController"* %73 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %80 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %80, i64 5
  %82 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %81, align 8
  call void %82(%"class.v8::TracingController"* %73, i8* %74, i8* %76, i64 %78) #8
  br label %83

83:                                               ; preds = %28, %61, %67, %72
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %84 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %85 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %84, align 8
  %86 = icmp eq %"class.v8::internal::RuntimeCallStats"* %85, null
  br i1 %86, label %89, label %87, !prof !2

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %85, %"class.v8::internal::RuntimeCallTimer"* %88) #8
  br label %89

89:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 2147483646
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13Runtime_IsSmiEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL19Stats_Runtime_IsSmiEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %20

8:                                                ; preds = %3
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %11 = and i64 %9, 1
  %12 = icmp eq i64 %11, 0
  %13 = ptrtoint %"class.v8::internal::Heap"* %10 to i64
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 7
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 7, i32 0, i64 8
  %18 = select i1 %12, i64* %16, i64* %17
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %8, %6
  %21 = phi i64 [ %7, %6 ], [ %19, %8 ]
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL19Stats_Runtime_IsSmiEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 428) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL19Stats_Runtime_IsSmiEiPmPNS0_7IsolateEE27trace_event_unique_atomic79 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL19Stats_Runtime_IsSmiEiPmPNS0_7IsolateEE27trace_event_unique_atomic79 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %67, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %66 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, null
  br label %67

67:                                               ; preds = %28, %61
  %68 = phi i1 [ true, %28 ], [ %66, %61 ]
  %69 = load i64, i64* %1, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %71 = and i64 %69, 1
  %72 = icmp eq i64 %71, 0
  %73 = ptrtoint %"class.v8::internal::Heap"* %70 to i64
  %74 = add i64 %73, -41416
  %75 = inttoptr i64 %74 to %"class.v8::internal::Isolate"*
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 0, i32 7, i32 0, i64 7
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 0, i32 7, i32 0, i64 8
  %78 = select i1 %72, i64* %76, i64* %77
  %79 = load i64, i64* %78, align 8
  br i1 %68, label %96, label %80

80:                                               ; preds = %67
  %81 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = load atomic i8, i8* %82 monotonic, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %96, label %85

85:                                               ; preds = %80
  %86 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %87 = load i8*, i8** %81, align 8
  %88 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.v8::TracingController"* %86 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %93 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %93, i64 5
  %95 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %94, align 8
  call void %95(%"class.v8::TracingController"* %86, i8* %87, i8* %89, i64 %91) #8
  br label %96

96:                                               ; preds = %67, %80, %85
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %97 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %98 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %97, align 8
  %99 = icmp eq %"class.v8::internal::RuntimeCallStats"* %98, null
  br i1 %99, label %102, label %100, !prof !2

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %98, %"class.v8::internal::RuntimeCallTimer"* %101) #8
  br label %102

102:                                              ; preds = %96, %100
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal23Runtime_GetHoleNaNUpperEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL29Stats_Runtime_GetHoleNaNUpperEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %37

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %18 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %17) #8
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 3
  %21 = inttoptr i64 %20 to double*
  store double 0x41EFFEFFFFE00000, double* %21, align 1
  %22 = load i64, i64* %18, align 8
  %23 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %8
  %25 = inttoptr i64 %11 to i64*
  %26 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  store i64 %11, i64* %10, align 8
  %28 = load i32, i32* %14, align 8
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %14, align 8
  %30 = load i64*, i64** %12, align 8
  %31 = icmp eq i64* %30, %13
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %33 = load i64*, i64** %26, align 8
  br label %34

34:                                               ; preds = %32, %24
  %35 = phi i64* [ %33, %32 ], [ %25, %24 ]
  %36 = phi i64* [ %13, %32 ], [ %27, %24 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %35, i64* %36) #8
  br label %37

37:                                               ; preds = %34, %8, %6
  %38 = phi i64 [ %7, %6 ], [ %22, %8 ], [ %22, %34 ]
  ret i64 %38
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL29Stats_Runtime_GetHoleNaNUpperEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 427) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL29Stats_Runtime_GetHoleNaNUpperEiPmPNS0_7IsolateEE27trace_event_unique_atomic87 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL29Stats_Runtime_GetHoleNaNUpperEiPmPNS0_7IsolateEE27trace_event_unique_atomic87 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %76 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %75) #8
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 3
  %79 = inttoptr i64 %78 to double*
  store double 0x41EFFEFFFFE00000, double* %79, align 1
  %80 = load i64, i64* %76, align 8
  %81 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %66
  %83 = inttoptr i64 %69 to i64*
  %84 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %85 = load i64*, i64** %84, align 8
  store i64 %69, i64* %68, align 8
  %86 = load i32, i32* %72, align 8
  %87 = add nsw i32 %86, -1
  store i32 %87, i32* %72, align 8
  %88 = load i64*, i64** %70, align 8
  %89 = icmp eq i64* %88, %71
  br i1 %89, label %92, label %90

90:                                               ; preds = %82
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %91 = load i64*, i64** %84, align 8
  br label %92

92:                                               ; preds = %90, %82
  %93 = phi i64* [ %91, %90 ], [ %83, %82 ]
  %94 = phi i64* [ %71, %90 ], [ %85, %82 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %93, i64* %94) #8
  br label %95

95:                                               ; preds = %66, %92
  %96 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %97 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %96, null
  br i1 %97, label %114, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = load atomic i8, i8* %100 monotonic, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %98
  %104 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %105 = load i8*, i8** %99, align 8
  %106 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::TracingController"* %104 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %111 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %111, i64 5
  %113 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %112, align 8
  call void %113(%"class.v8::TracingController"* %104, i8* %105, i8* %107, i64 %109) #8
  br label %114

114:                                              ; preds = %95, %98, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %115 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %116 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %115, align 8
  %117 = icmp eq %"class.v8::internal::RuntimeCallStats"* %116, null
  br i1 %117, label %120, label %118, !prof !2

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %116, %"class.v8::internal::RuntimeCallTimer"* %119) #8
  br label %120

120:                                              ; preds = %114, %118
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal23Runtime_GetHoleNaNLowerEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL29Stats_Runtime_GetHoleNaNLowerEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %37

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %18 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %17) #8
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 3
  %21 = inttoptr i64 %20 to double*
  store double 0x41EFFEFFFFE00000, double* %21, align 1
  %22 = load i64, i64* %18, align 8
  %23 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %8
  %25 = inttoptr i64 %11 to i64*
  %26 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  store i64 %11, i64* %10, align 8
  %28 = load i32, i32* %14, align 8
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %14, align 8
  %30 = load i64*, i64** %12, align 8
  %31 = icmp eq i64* %30, %13
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %33 = load i64*, i64** %26, align 8
  br label %34

34:                                               ; preds = %32, %24
  %35 = phi i64* [ %33, %32 ], [ %25, %24 ]
  %36 = phi i64* [ %13, %32 ], [ %27, %24 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %35, i64* %36) #8
  br label %37

37:                                               ; preds = %34, %8, %6
  %38 = phi i64 [ %7, %6 ], [ %22, %8 ], [ %22, %34 ]
  ret i64 %38
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL29Stats_Runtime_GetHoleNaNLowerEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #8
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 426) #8
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL29Stats_Runtime_GetHoleNaNLowerEiPmPNS0_7IsolateEE27trace_event_unique_atomic94 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #8
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL29Stats_Runtime_GetHoleNaNLowerEiPmPNS0_7IsolateEE27trace_event_unique_atomic94 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #8
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #8
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #8
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #8
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %76 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %75) #8
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 3
  %79 = inttoptr i64 %78 to double*
  store double 0x41EFFEFFFFE00000, double* %79, align 1
  %80 = load i64, i64* %76, align 8
  %81 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %66
  %83 = inttoptr i64 %69 to i64*
  %84 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %85 = load i64*, i64** %84, align 8
  store i64 %69, i64* %68, align 8
  %86 = load i32, i32* %72, align 8
  %87 = add nsw i32 %86, -1
  store i32 %87, i32* %72, align 8
  %88 = load i64*, i64** %70, align 8
  %89 = icmp eq i64* %88, %71
  br i1 %89, label %92, label %90

90:                                               ; preds = %82
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #8
  %91 = load i64*, i64** %84, align 8
  br label %92

92:                                               ; preds = %90, %82
  %93 = phi i64* [ %91, %90 ], [ %83, %82 ]
  %94 = phi i64* [ %71, %90 ], [ %85, %82 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %93, i64* %94) #8
  br label %95

95:                                               ; preds = %66, %92
  %96 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %97 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %96, null
  br i1 %97, label %114, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = load atomic i8, i8* %100 monotonic, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %98
  %104 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #8
  %105 = load i8*, i8** %99, align 8
  %106 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::TracingController"* %104 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %111 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %111, i64 5
  %113 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %112, align 8
  call void %113(%"class.v8::TracingController"* %104, i8* %105, i8* %107, i64 %109) #8
  br label %114

114:                                              ; preds = %95, %98, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  %115 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %116 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %115, align 8
  %117 = icmp eq %"class.v8::internal::RuntimeCallStats"* %116, null
  br i1 %117, label %120, label %118, !prof !2

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %116, %"class.v8::internal::RuntimeCallTimer"* %119) #8
  br label %120

120:                                              ; preds = %114, %118
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i64 %80
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

declare i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #5 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #8
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #8
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #8
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #8
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

declare double @_ZN2v88internal11StringToIntEPNS0_7IsolateENS0_6HandleINS0_6StringEEEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

declare double @_ZN2v88internal14StringToDoubleEPNS0_7IsolateENS0_6HandleINS0_6StringEEEid(%"class.v8::internal::Isolate"*, i64*, i32, double) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1073205, i32 2146410443}
