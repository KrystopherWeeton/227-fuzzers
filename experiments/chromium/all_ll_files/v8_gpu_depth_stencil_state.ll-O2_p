; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_depth_stencil_state.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_depth_stencil_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.79", i32, [4 x i8], %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.215", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.256", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.195", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i64 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::Worklist.154"* }
%"class.blink::Worklist.154" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::Worklist.161"* }
%"class.blink::Worklist.161" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::Worklist.168"* }
%"class.blink::Worklist.168" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.115" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.189", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { i64 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { float }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.198", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.207" }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.237" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.140"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.147"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.154"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.289" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__cxx_atomic_impl.258" }
%"struct.std::__1::__cxx_atomic_impl.258" = type { %"struct.std::__1::__cxx_atomic_base_impl.259" }
%"struct.std::__1::__cxx_atomic_base_impl.259" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::GPUDepthStencilState" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i32, float, float, %"class.WTF::String", i8, %"class.WTF::String", %"class.blink::Member", %"class.blink::Member", i32, i32 }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::GPUStencilFaceState"* }
%"class.blink::GPUStencilFaceState" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.26", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.73", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.260", %"class.std::__1::unique_ptr.265", %"class.blink::Persistent.271", %"class.blink::Persistent.275", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.10", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", i32, i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.26" = type { %"class.WTF::HashTable.27" }
%"class.WTF::HashTable.27" = type <{ %"struct.WTF::KeyValuePair.30"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.30" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.39", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.34", i8* }
%"class.WTF::HashMap.34" = type { %"class.WTF::HashTable.35" }
%"class.WTF::HashTable.35" = type <{ %"struct.WTF::KeyValuePair.38"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.38" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.39" = type { %"class.v8::PersistentValueMapBase.40" }
%"class.v8::PersistentValueMapBase.40" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.41", i8* }
%"class.WTF::HashMap.41" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"struct.WTF::KeyValuePair.45"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.45" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.46" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.57", %"class.WTF::Vector.63", i8, i32 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.296, %"class.blink::Member.315", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.296 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.297", i32, i32, %"class.blink::Persistent.299" }
%"class.WTF::RefCounted.297" = type { %"class.base::RefCounted.298" }
%"class.base::RefCounted.298" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.299" = type { %"class.blink::PersistentBase.300" }
%"class.blink::PersistentBase.300" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.305" }
%"class.WTF::HashMap.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.312" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.309" }
%"class.blink::MemberBase.309" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.312" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.312" = type { %"class.v8::TracedReference.313" }
%"class.v8::TracedReference.313" = type { %"class.v8::BasicTracedReference.314" }
%"class.v8::BasicTracedReference.314" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.260" = type { %"class.WTF::VectorBuffer.261" }
%"class.WTF::VectorBuffer.261" = type { %"class.WTF::VectorBufferBase.262" }
%"class.WTF::VectorBufferBase.262" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.271" = type { %"class.blink::PersistentBase.272" }
%"class.blink::PersistentBase.272" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.275" = type { %"class.blink::PersistentBase.276" }
%"class.blink::PersistentBase.276" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"struct.std::__1::pair.284"*, i32, i32 }
%"struct.std::__1::pair.284" = type { %"class.blink::UntracedMember", %"class.blink::Member.286" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.285" }
%"class.blink::MemberBase.285" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.317" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Int32" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [36 x i8] c"Missing required member(s): format.\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink22V8GPUDepthStencilState6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUDepthStencilStateERNS_14ExceptionStateEE12kValidValues = internal constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"less\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"equal\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"less-equal\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"greater\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"not-equal\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"greater-equal\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"GPUCompareFunction\00", align 1
@.str.11 = private unnamed_addr constant [37 x i8] c"required member format is undefined.\00", align 1
@_ZZN5blink22V8GPUDepthStencilState6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUDepthStencilStateERNS_14ExceptionStateEE12kValidValues_0 = internal constant [53 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.64, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [8 x i8] c"r8unorm\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"r8snorm\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"r8uint\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"r8sint\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"r16uint\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"r16sint\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"r16float\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"rg8unorm\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"rg8snorm\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"rg8uint\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"rg8sint\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"r32uint\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"r32sint\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"r32float\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"rg16uint\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"rg16sint\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"rg16float\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"rgba8unorm\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"rgba8unorm-srgb\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"rgba8snorm\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"rgba8uint\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"rgba8sint\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"bgra8unorm\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"bgra8unorm-srgb\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"rgb9e5ufloat\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"rgb10a2unorm\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"rg11b10ufloat\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"rg32uint\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"rg32sint\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"rg32float\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"rgba16uint\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"rgba16sint\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"rgba16float\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"rgba32uint\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"rgba32sint\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"rgba32float\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"depth32float\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"depth24plus\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"depth24plus-stencil8\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"bc1-rgba-unorm\00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"bc1-rgba-unorm-srgb\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"bc2-rgba-unorm\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"bc2-rgba-unorm-srgb\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"bc3-rgba-unorm\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"bc3-rgba-unorm-srgb\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"bc4-r-unorm\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"bc4-r-snorm\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"bc5-rg-unorm\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"bc5-rg-snorm\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"bc6h-rgb-ufloat\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"bc6h-rgb-float\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"bc7-rgba-unorm\00", align 1
@.str.64 = private unnamed_addr constant [20 x i8] c"bc7-rgba-unorm-srgb\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"GPUTextureFormat\00", align 1
@_ZZN5blinkL33eternalV8GPUDepthStencilStateKeysEPN2v87IsolateEE5kKeys = internal constant [10 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.75, i32 0, i32 0)], align 16
@.str.66 = private unnamed_addr constant [10 x i8] c"depthBias\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"depthBiasClamp\00", align 1
@.str.68 = private unnamed_addr constant [20 x i8] c"depthBiasSlopeScale\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"depthCompare\00", align 1
@.str.70 = private unnamed_addr constant [18 x i8] c"depthWriteEnabled\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"stencilBack\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"stencilFront\00", align 1
@.str.74 = private unnamed_addr constant [16 x i8] c"stencilReadMask\00", align 1
@.str.75 = private unnamed_addr constant [17 x i8] c"stencilWriteMask\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 10, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZZN5blinkL33eternalV8GPUDepthStencilStateKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.77 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.78 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8GPUDepthStencilState6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUDepthStencilStateERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::GPUDepthStencilState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::V8StringResource", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = icmp eq %"class.v8::Value"* %1, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.v8::Value"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = add i64 %17, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = and i64 %17, -4294967296
  %25 = zext i32 %23 to i64
  %26 = or i64 %24, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 67
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = add i64 %17, 23
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = ashr i32 %34, 1
  switch i32 %35, label %37 [
    i32 5, label %36
    i32 3, label %36
  ]

36:                                               ; preds = %31, %31, %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #7
  br label %924

37:                                               ; preds = %31, %20, %15
  %38 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %924

40:                                               ; preds = %37
  %41 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %42 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to %"class.blink::V8PerIsolateData"**
  %45 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %44, align 8
  %46 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %45, i8* bitcast ([10 x i8*]* @_ZZN5blinkL33eternalV8GPUDepthStencilStateKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.317"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.317"*)) #7
  %47 = extractvalue { i64, %"class.v8::Eternal"* } %46, 1
  %48 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %0) #7
  %49 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %50 = bitcast %"class.v8::Eternal"* %47 to %"class.v8::Value"**
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %51) #7
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %54, label %60

54:                                               ; preds = %40
  %55 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %56 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, i64 5
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %55) #7
  br label %923

60:                                               ; preds = %40
  %61 = bitcast %"class.v8::Value"* %52 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 3
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %65, label %82

65:                                               ; preds = %60
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i64 %62, -4294967296
  %70 = zext i32 %68 to i64
  %71 = or i64 %69, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load i16, i16* %73, align 2
  %75 = icmp eq i16 %74, 67
  br i1 %75, label %76, label %82

76:                                               ; preds = %65
  %77 = add i64 %62, 23
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, -2
  %81 = icmp eq i32 %80, 10
  br i1 %81, label %97, label %82

82:                                               ; preds = %65, %60, %76
  %83 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %52) #7
  br i1 %83, label %84, label %87, !prof !2

84:                                               ; preds = %82
  %85 = bitcast %"class.v8::Value"* %52 to %"class.v8::Int32"*
  %86 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %85) #7
  br label %89

87:                                               ; preds = %82
  %88 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %52, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi i32 [ %86, %84 ], [ %88, %87 ]
  %91 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %923

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 7
  store i32 %90, i32* %95, align 8
  %96 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 1
  store i8 1, i8* %96, align 8
  br label %97

97:                                               ; preds = %94, %76
  %98 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 1, i32 0
  %99 = bitcast %"class.v8::Name"** %98 to %"class.v8::Value"**
  %100 = load %"class.v8::Value"*, %"class.v8::Value"** %99, align 8
  %101 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %100) #7
  %102 = icmp eq %"class.v8::Value"* %101, null
  br i1 %102, label %103, label %109

103:                                              ; preds = %97
  %104 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %105 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %106 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %106, i64 5
  %108 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %107, align 8
  call void %108(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %104) #7
  br label %923

109:                                              ; preds = %97
  %110 = bitcast %"class.v8::Value"* %101 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 3
  %113 = icmp eq i64 %112, 1
  br i1 %113, label %114, label %131

114:                                              ; preds = %109
  %115 = add i64 %111, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = and i64 %111, -4294967296
  %119 = zext i32 %117 to i64
  %120 = or i64 %118, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load i16, i16* %122, align 2
  %124 = icmp eq i16 %123, 67
  br i1 %124, label %125, label %131

125:                                              ; preds = %114
  %126 = add i64 %111, 23
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, -2
  %130 = icmp eq i32 %129, 10
  br i1 %130, label %139, label %131

131:                                              ; preds = %114, %109, %125
  %132 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %101, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %133 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %923

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 8
  store float %132, float* %137, align 4
  %138 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 2
  store i8 1, i8* %138, align 1
  br label %139

139:                                              ; preds = %136, %125
  %140 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 2, i32 0
  %141 = bitcast %"class.v8::Name"** %140 to %"class.v8::Value"**
  %142 = load %"class.v8::Value"*, %"class.v8::Value"** %141, align 8
  %143 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %142) #7
  %144 = icmp eq %"class.v8::Value"* %143, null
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %147 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %148 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %148, i64 5
  %150 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %149, align 8
  call void %150(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %146) #7
  br label %923

151:                                              ; preds = %139
  %152 = bitcast %"class.v8::Value"* %143 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = and i64 %153, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %173

156:                                              ; preds = %151
  %157 = add i64 %153, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %153, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %173

167:                                              ; preds = %156
  %168 = add i64 %153, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = and i32 %170, -2
  %172 = icmp eq i32 %171, 10
  br i1 %172, label %181, label %173

173:                                              ; preds = %156, %151, %167
  %174 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %143, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %175 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %923

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 9
  store float %174, float* %179, align 8
  %180 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 3
  store i8 1, i8* %180, align 2
  br label %181

181:                                              ; preds = %178, %167
  %182 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 3, i32 0
  %183 = bitcast %"class.v8::Name"** %182 to %"class.v8::Value"**
  %184 = load %"class.v8::Value"*, %"class.v8::Value"** %183, align 8
  %185 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %184) #7
  %186 = icmp eq %"class.v8::Value"* %185, null
  br i1 %186, label %187, label %193

187:                                              ; preds = %181
  %188 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %189 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %190 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %190, i64 5
  %192 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %191, align 8
  call void %192(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %188) #7
  br label %923

193:                                              ; preds = %181
  %194 = bitcast %"class.v8::Value"* %185 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = and i64 %195, 3
  %197 = icmp eq i64 %196, 1
  br i1 %197, label %198, label %215

198:                                              ; preds = %193
  %199 = add i64 %195, -1
  %200 = inttoptr i64 %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = and i64 %195, -4294967296
  %203 = zext i32 %201 to i64
  %204 = or i64 %202, %203
  %205 = add i64 %204, 7
  %206 = inttoptr i64 %205 to i16*
  %207 = load i16, i16* %206, align 2
  %208 = icmp eq i16 %207, 67
  br i1 %208, label %209, label %215

209:                                              ; preds = %198
  %210 = add i64 %195, 23
  %211 = inttoptr i64 %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = and i32 %212, -2
  %214 = icmp eq i32 %213, 10
  br i1 %214, label %437, label %215

215:                                              ; preds = %198, %193, %209
  %216 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %216) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 152, i1 false)
  %217 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %185, %"class.v8::Value"** %217, align 8
  %218 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %218, align 8
  %219 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %219, align 8
  %220 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %221 = bitcast %"class.std::__1::unique_ptr"* %220 to i64*
  store i64 0, i64* %221, align 8
  %222 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %8) #7
  br i1 %222, label %239, label %223

223:                                              ; preds = %215
  %224 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %225 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %225) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %224) #7
  %226 = load %"class.v8::Value"*, %"class.v8::Value"** %217, align 8
  %227 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %224) #7
  %228 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %226, %"class.v8::Context"* %227) #7
  %229 = ptrtoint %"class.v8::String"* %228 to i64
  %230 = bitcast %"class.blink::V8StringResource"* %8 to i64*
  store i64 %229, i64* %230, align 8
  %231 = icmp eq %"class.v8::String"* %228, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %223
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %225) #7
  br label %239

233:                                              ; preds = %223
  %234 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %235 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %236 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %236, i64 5
  %238 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %237, align 8
  call void %238(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %234) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %225) #7
  br label %415

239:                                              ; preds = %215, %232
  %240 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #7
  %241 = load %"class.v8::Value"*, %"class.v8::Value"** %217, align 8
  %242 = icmp eq %"class.v8::Value"* %241, null
  br i1 %242, label %247, label %243, !prof !3

243:                                              ; preds = %239
  %244 = bitcast %"class.v8::Value"* %241 to %"class.v8::String"*
  %245 = load i32, i32* %218, align 8
  %246 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %244, i32 %245) #7
  br label %267

247:                                              ; preds = %239
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %249, label %267, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %267

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i33
  %259 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %258, i33 1) #7
  %260 = extractvalue { i33, i1 } %259, 1
  %261 = extractvalue { i33, i1 } %259, 0
  %262 = icmp slt i33 %261, 0
  %263 = or i1 %260, %262
  br i1 %263, label %264, label %265, !prof !3

264:                                              ; preds = %255
  call void @llvm.trap() #7
  unreachable

265:                                              ; preds = %255
  %266 = trunc i33 %261 to i32
  store i32 %266, i32* %256, align 4
  br label %267

267:                                              ; preds = %243, %247, %250, %265
  %268 = phi %"class.WTF::StringImpl"* [ %246, %243 ], [ null, %247 ], [ %248, %250 ], [ %248, %265 ]
  %269 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %268, %"class.WTF::StringImpl"** %269, align 8
  %270 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18) #7
  %271 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %9, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @_ZZN5blink22V8GPUDepthStencilState6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUDepthStencilStateERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 8, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %272 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %267
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #7
  br label %288

288:                                              ; preds = %267, %284, %287
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #7
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #7
  br label %304

304:                                              ; preds = %288, %300, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #7
  br i1 %271, label %305, label %415

305:                                              ; preds = %304
  %306 = load %"class.v8::Value"*, %"class.v8::Value"** %217, align 8
  %307 = icmp eq %"class.v8::Value"* %306, null
  br i1 %307, label %308, label %332, !prof !3

308:                                              ; preds = %305
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %311, label %313

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 10
  br label %357

313:                                              ; preds = %308
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %330

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  %321 = zext i32 %320 to i33
  %322 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %321, i33 1) #7
  %323 = extractvalue { i33, i1 } %322, 1
  %324 = extractvalue { i33, i1 } %322, 0
  %325 = icmp slt i33 %324, 0
  %326 = or i1 %323, %325
  br i1 %326, label %327, label %328, !prof !3

327:                                              ; preds = %318
  call void @llvm.trap() #7
  unreachable

328:                                              ; preds = %318
  %329 = trunc i33 %324 to i32
  store i32 %329, i32* %319, align 4
  br label %330

330:                                              ; preds = %313, %328
  %331 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 10
  br label %338

332:                                              ; preds = %305
  %333 = bitcast %"class.v8::Value"* %306 to %"class.v8::String"*
  %334 = load i32, i32* %218, align 8
  %335 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %333, i32 %334) #7
  %336 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 10
  %337 = icmp eq %"class.WTF::StringImpl"* %335, null
  br i1 %337, label %357, label %338

338:                                              ; preds = %330, %332
  %339 = phi %"class.WTF::String"* [ %331, %330 ], [ %336, %332 ]
  %340 = phi %"class.WTF::StringImpl"* [ %309, %330 ], [ %335, %332 ]
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %357

345:                                              ; preds = %338
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = zext i32 %347 to i33
  %349 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %348, i33 1) #7
  %350 = extractvalue { i33, i1 } %349, 1
  %351 = extractvalue { i33, i1 } %349, 0
  %352 = icmp slt i33 %351, 0
  %353 = or i1 %350, %352
  br i1 %353, label %354, label %355, !prof !3

354:                                              ; preds = %345
  call void @llvm.trap() #7
  unreachable

355:                                              ; preds = %345
  %356 = trunc i33 %351 to i32
  store i32 %356, i32* %346, align 4
  br label %357

357:                                              ; preds = %311, %355, %338, %332
  %358 = phi i1 [ false, %355 ], [ false, %338 ], [ true, %332 ], [ true, %311 ]
  %359 = phi %"class.WTF::String"* [ %339, %355 ], [ %339, %338 ], [ %336, %332 ], [ %312, %311 ]
  %360 = phi %"class.WTF::StringImpl"* [ %340, %355 ], [ %340, %338 ], [ null, %332 ], [ null, %311 ]
  %361 = ptrtoint %"class.WTF::StringImpl"* %360 to i64
  %362 = bitcast %"class.WTF::String"* %359 to i64*
  %363 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %359, i64 0, i32 0, i32 0
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  store i64 %361, i64* %362, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %379, label %366

366:                                              ; preds = %357
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load atomic i32, i32* %367 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  br i1 %370, label %373, label %375

373:                                              ; preds = %366
  %374 = add i32 %372, -1
  store i32 %374, i32* %371, align 4
  br label %375

375:                                              ; preds = %373, %366
  %376 = phi i32 [ %374, %373 ], [ %372, %366 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %364) #7
  br label %379

379:                                              ; preds = %357, %375, %378
  br i1 %358, label %393, label %380

380:                                              ; preds = %379
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = and i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  br i1 %384, label %387, label %389

387:                                              ; preds = %380
  %388 = add i32 %386, -1
  store i32 %388, i32* %385, align 4
  br label %389

389:                                              ; preds = %387, %380
  %390 = phi i32 [ %388, %387 ], [ %386, %380 ]
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %393

392:                                              ; preds = %389
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #7
  br label %393

393:                                              ; preds = %379, %389, %392
  %394 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  store i8* null, i8** %394, align 8
  %396 = icmp eq i8* %395, null
  br i1 %396, label %398, label %397

397:                                              ; preds = %393
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %395) #7
  br label %398

398:                                              ; preds = %397, %393
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %400, label %414, label %401

401:                                              ; preds = %398
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %407 = load i32, i32* %406, align 4
  br i1 %405, label %408, label %410

408:                                              ; preds = %401
  %409 = add i32 %407, -1
  store i32 %409, i32* %406, align 4
  br label %410

410:                                              ; preds = %408, %401
  %411 = phi i32 [ %409, %408 ], [ %407, %401 ]
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %414

413:                                              ; preds = %410
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #7
  br label %414

414:                                              ; preds = %398, %410, %413
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %216) #7
  br label %437

415:                                              ; preds = %233, %304
  %416 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %417 = load i8*, i8** %416, align 8
  store i8* null, i8** %416, align 8
  %418 = icmp eq i8* %417, null
  br i1 %418, label %420, label %419

419:                                              ; preds = %415
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %417) #7
  br label %420

420:                                              ; preds = %419, %415
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %436, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #7
  br label %436

436:                                              ; preds = %420, %432, %435
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %216) #7
  br label %923

437:                                              ; preds = %414, %209
  %438 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 4, i32 0
  %439 = bitcast %"class.v8::Name"** %438 to %"class.v8::Value"**
  %440 = load %"class.v8::Value"*, %"class.v8::Value"** %439, align 8
  %441 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %440) #7
  %442 = icmp eq %"class.v8::Value"* %441, null
  br i1 %442, label %443, label %449

443:                                              ; preds = %437
  %444 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %445 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %446 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %445, align 8
  %447 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %446, i64 5
  %448 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %447, align 8
  call void %448(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %444) #7
  br label %923

449:                                              ; preds = %437
  %450 = bitcast %"class.v8::Value"* %441 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = and i64 %451, 3
  %453 = icmp eq i64 %452, 1
  br i1 %453, label %454, label %471

454:                                              ; preds = %449
  %455 = add i64 %451, -1
  %456 = inttoptr i64 %455 to i32*
  %457 = load i32, i32* %456, align 4
  %458 = and i64 %451, -4294967296
  %459 = zext i32 %457 to i64
  %460 = or i64 %458, %459
  %461 = add i64 %460, 7
  %462 = inttoptr i64 %461 to i16*
  %463 = load i16, i16* %462, align 2
  %464 = icmp eq i16 %463, 67
  br i1 %464, label %465, label %471

465:                                              ; preds = %454
  %466 = add i64 %451, 23
  %467 = inttoptr i64 %466 to i32*
  %468 = load i32, i32* %467, align 4
  %469 = and i32 %468, -2
  %470 = icmp eq i32 %469, 10
  br i1 %470, label %487, label %471

471:                                              ; preds = %454, %449, %465
  %472 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %441) #7
  br i1 %472, label %473, label %476, !prof !2

473:                                              ; preds = %471
  %474 = bitcast %"class.v8::Value"* %441 to %"class.v8::Boolean"*
  %475 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %474) #7
  br label %478

476:                                              ; preds = %471
  %477 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %441, %"class.v8::Isolate"* %0) #7
  br label %478

478:                                              ; preds = %473, %476
  %479 = phi i1 [ %475, %473 ], [ %477, %476 ]
  %480 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %481 = load i32, i32* %480, align 8
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %923

483:                                              ; preds = %478
  %484 = zext i1 %479 to i8
  %485 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 11
  store i8 %484, i8* %485, align 8
  %486 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 4
  store i8 1, i8* %486, align 1
  br label %487

487:                                              ; preds = %483, %465
  %488 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 5, i32 0
  %489 = bitcast %"class.v8::Name"** %488 to %"class.v8::Value"**
  %490 = load %"class.v8::Value"*, %"class.v8::Value"** %489, align 8
  %491 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %490) #7
  %492 = icmp eq %"class.v8::Value"* %491, null
  br i1 %492, label %493, label %499

493:                                              ; preds = %487
  %494 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %495 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %496 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %495, align 8
  %497 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %496, i64 5
  %498 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %497, align 8
  call void %498(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %494) #7
  br label %923

499:                                              ; preds = %487
  %500 = bitcast %"class.v8::Value"* %491 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = and i64 %501, 3
  %503 = icmp eq i64 %502, 1
  br i1 %503, label %504, label %522

504:                                              ; preds = %499
  %505 = add i64 %501, -1
  %506 = inttoptr i64 %505 to i32*
  %507 = load i32, i32* %506, align 4
  %508 = and i64 %501, -4294967296
  %509 = zext i32 %507 to i64
  %510 = or i64 %508, %509
  %511 = add i64 %510, 7
  %512 = inttoptr i64 %511 to i16*
  %513 = load i16, i16* %512, align 2
  %514 = icmp eq i16 %513, 67
  br i1 %514, label %515, label %522

515:                                              ; preds = %504
  %516 = add i64 %501, 23
  %517 = inttoptr i64 %516 to i32*
  %518 = load i32, i32* %517, align 4
  %519 = and i32 %518, -2
  %520 = icmp eq i32 %519, 10
  br i1 %520, label %521, label %522

521:                                              ; preds = %515
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #7
  br label %923

522:                                              ; preds = %504, %499, %515
  %523 = bitcast %"class.blink::V8StringResource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %523) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %523, i8 -86, i64 152, i1 false)
  %524 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %491, %"class.v8::Value"** %524, align 8
  %525 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 1
  store i32 0, i32* %525, align 8
  %526 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %526, align 8
  %527 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1
  %528 = bitcast %"class.std::__1::unique_ptr"* %527 to i64*
  store i64 0, i64* %528, align 8
  %529 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %11) #7
  br i1 %529, label %546, label %530

530:                                              ; preds = %522
  %531 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %532 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %532) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %532, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %531) #7
  %533 = load %"class.v8::Value"*, %"class.v8::Value"** %524, align 8
  %534 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %531) #7
  %535 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %533, %"class.v8::Context"* %534) #7
  %536 = ptrtoint %"class.v8::String"* %535 to i64
  %537 = bitcast %"class.blink::V8StringResource"* %11 to i64*
  store i64 %536, i64* %537, align 8
  %538 = icmp eq %"class.v8::String"* %535, null
  br i1 %538, label %540, label %539

539:                                              ; preds = %530
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %532) #7
  br label %546

540:                                              ; preds = %530
  %541 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %542 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %543 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %542, align 8
  %544 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %543, i64 5
  %545 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %544, align 8
  call void %545(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %541) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %532) #7
  br label %727

546:                                              ; preds = %522, %539
  %547 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #7
  %548 = load %"class.v8::Value"*, %"class.v8::Value"** %524, align 8
  %549 = icmp eq %"class.v8::Value"* %548, null
  br i1 %549, label %554, label %550, !prof !3

550:                                              ; preds = %546
  %551 = bitcast %"class.v8::Value"* %548 to %"class.v8::String"*
  %552 = load i32, i32* %525, align 8
  %553 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %551, i32 %552) #7
  br label %574

554:                                              ; preds = %546
  %555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %526, align 8
  %556 = icmp eq %"class.WTF::StringImpl"* %555, null
  br i1 %556, label %574, label %557

557:                                              ; preds = %554
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = load atomic i32, i32* %558 monotonic, align 4
  %560 = and i32 %559, 2
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %574

562:                                              ; preds = %557
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 0
  %564 = load i32, i32* %563, align 4
  %565 = zext i32 %564 to i33
  %566 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %565, i33 1) #7
  %567 = extractvalue { i33, i1 } %566, 1
  %568 = extractvalue { i33, i1 } %566, 0
  %569 = icmp slt i33 %568, 0
  %570 = or i1 %567, %569
  br i1 %570, label %571, label %572, !prof !3

571:                                              ; preds = %562
  call void @llvm.trap() #7
  unreachable

572:                                              ; preds = %562
  %573 = trunc i33 %568 to i32
  store i32 %573, i32* %563, align 4
  br label %574

574:                                              ; preds = %550, %554, %557, %572
  %575 = phi %"class.WTF::StringImpl"* [ %553, %550 ], [ null, %554 ], [ %555, %557 ], [ %555, %572 ]
  %576 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %575, %"class.WTF::StringImpl"** %576, align 8
  %577 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %577) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0), i64 16) #7
  %578 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i8** getelementptr inbounds ([53 x i8*], [53 x i8*]* @_ZZN5blink22V8GPUDepthStencilState6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUDepthStencilStateERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 53, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %579 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %579, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %595, label %582

582:                                              ; preds = %574
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  br i1 %586, label %589, label %591

589:                                              ; preds = %582
  %590 = add i32 %588, -1
  store i32 %590, i32* %587, align 4
  br label %591

591:                                              ; preds = %589, %582
  %592 = phi i32 [ %590, %589 ], [ %588, %582 ]
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %595

594:                                              ; preds = %591
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %580) #7
  br label %595

595:                                              ; preds = %574, %591, %594
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %577) #7
  %596 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %576, align 8
  %597 = icmp eq %"class.WTF::StringImpl"* %596, null
  br i1 %597, label %611, label %598

598:                                              ; preds = %595
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  br i1 %602, label %605, label %607

605:                                              ; preds = %598
  %606 = add i32 %604, -1
  store i32 %606, i32* %603, align 4
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi i32 [ %606, %605 ], [ %604, %598 ]
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %596) #7
  br label %611

611:                                              ; preds = %595, %607, %610
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #7
  br i1 %578, label %612, label %727

612:                                              ; preds = %611
  %613 = load %"class.v8::Value"*, %"class.v8::Value"** %524, align 8
  %614 = icmp eq %"class.v8::Value"* %613, null
  br i1 %614, label %615, label %639, !prof !3

615:                                              ; preds = %612
  %616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %526, align 8
  %617 = icmp eq %"class.WTF::StringImpl"* %616, null
  br i1 %617, label %618, label %620

618:                                              ; preds = %615
  %619 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 12
  br label %664

620:                                              ; preds = %615
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %622 = load atomic i32, i32* %621 monotonic, align 4
  %623 = and i32 %622, 2
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %625, label %637

625:                                              ; preds = %620
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 0
  %627 = load i32, i32* %626, align 4
  %628 = zext i32 %627 to i33
  %629 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %628, i33 1) #7
  %630 = extractvalue { i33, i1 } %629, 1
  %631 = extractvalue { i33, i1 } %629, 0
  %632 = icmp slt i33 %631, 0
  %633 = or i1 %630, %632
  br i1 %633, label %634, label %635, !prof !3

634:                                              ; preds = %625
  call void @llvm.trap() #7
  unreachable

635:                                              ; preds = %625
  %636 = trunc i33 %631 to i32
  store i32 %636, i32* %626, align 4
  br label %637

637:                                              ; preds = %620, %635
  %638 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 12
  br label %645

639:                                              ; preds = %612
  %640 = bitcast %"class.v8::Value"* %613 to %"class.v8::String"*
  %641 = load i32, i32* %525, align 8
  %642 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %640, i32 %641) #7
  %643 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 12
  %644 = icmp eq %"class.WTF::StringImpl"* %642, null
  br i1 %644, label %664, label %645

645:                                              ; preds = %637, %639
  %646 = phi %"class.WTF::String"* [ %638, %637 ], [ %643, %639 ]
  %647 = phi %"class.WTF::StringImpl"* [ %616, %637 ], [ %642, %639 ]
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %664

652:                                              ; preds = %645
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 0
  %654 = load i32, i32* %653, align 4
  %655 = zext i32 %654 to i33
  %656 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %655, i33 1) #7
  %657 = extractvalue { i33, i1 } %656, 1
  %658 = extractvalue { i33, i1 } %656, 0
  %659 = icmp slt i33 %658, 0
  %660 = or i1 %657, %659
  br i1 %660, label %661, label %662, !prof !3

661:                                              ; preds = %652
  call void @llvm.trap() #7
  unreachable

662:                                              ; preds = %652
  %663 = trunc i33 %658 to i32
  store i32 %663, i32* %653, align 4
  br label %664

664:                                              ; preds = %618, %662, %645, %639
  %665 = phi i1 [ false, %662 ], [ false, %645 ], [ true, %639 ], [ true, %618 ]
  %666 = phi %"class.WTF::String"* [ %646, %662 ], [ %646, %645 ], [ %643, %639 ], [ %619, %618 ]
  %667 = phi %"class.WTF::StringImpl"* [ %647, %662 ], [ %647, %645 ], [ null, %639 ], [ null, %618 ]
  %668 = ptrtoint %"class.WTF::StringImpl"* %667 to i64
  %669 = bitcast %"class.WTF::String"* %666 to i64*
  %670 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %666, i64 0, i32 0, i32 0
  %671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %670, align 8
  store i64 %668, i64* %669, align 8
  %672 = icmp eq %"class.WTF::StringImpl"* %671, null
  br i1 %672, label %686, label %673

673:                                              ; preds = %664
  %674 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %675 = load atomic i32, i32* %674 monotonic, align 4
  %676 = and i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 0
  %679 = load i32, i32* %678, align 4
  br i1 %677, label %680, label %682

680:                                              ; preds = %673
  %681 = add i32 %679, -1
  store i32 %681, i32* %678, align 4
  br label %682

682:                                              ; preds = %680, %673
  %683 = phi i32 [ %681, %680 ], [ %679, %673 ]
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %686

685:                                              ; preds = %682
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %671) #7
  br label %686

686:                                              ; preds = %664, %682, %685
  br i1 %665, label %700, label %687

687:                                              ; preds = %686
  %688 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %667, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %689 = load atomic i32, i32* %688 monotonic, align 4
  %690 = and i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %667, i64 0, i32 0
  %693 = load i32, i32* %692, align 4
  br i1 %691, label %694, label %696

694:                                              ; preds = %687
  %695 = add i32 %693, -1
  store i32 %695, i32* %692, align 4
  br label %696

696:                                              ; preds = %694, %687
  %697 = phi i32 [ %695, %694 ], [ %693, %687 ]
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %699, label %700

699:                                              ; preds = %696
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %667) #7
  br label %700

700:                                              ; preds = %686, %696, %699
  %701 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %702 = load i8*, i8** %701, align 8
  store i8* null, i8** %701, align 8
  %703 = icmp eq i8* %702, null
  br i1 %703, label %705, label %704

704:                                              ; preds = %700
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %702) #7
  br label %705

705:                                              ; preds = %704, %700
  %706 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %526, align 8
  %707 = icmp eq %"class.WTF::StringImpl"* %706, null
  br i1 %707, label %721, label %708

708:                                              ; preds = %705
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %706, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %710 = load atomic i32, i32* %709 monotonic, align 4
  %711 = and i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %706, i64 0, i32 0
  %714 = load i32, i32* %713, align 4
  br i1 %712, label %715, label %717

715:                                              ; preds = %708
  %716 = add i32 %714, -1
  store i32 %716, i32* %713, align 4
  br label %717

717:                                              ; preds = %715, %708
  %718 = phi i32 [ %716, %715 ], [ %714, %708 ]
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %720, label %721

720:                                              ; preds = %717
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %706) #7
  br label %721

721:                                              ; preds = %705, %717, %720
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %523) #7
  %722 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 6, i32 0
  %723 = bitcast %"class.v8::Name"** %722 to %"class.v8::Value"**
  %724 = load %"class.v8::Value"*, %"class.v8::Value"** %723, align 8
  %725 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %724) #7
  %726 = icmp eq %"class.v8::Value"* %725, null
  br i1 %726, label %749, label %755

727:                                              ; preds = %540, %611
  %728 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %729 = load i8*, i8** %728, align 8
  store i8* null, i8** %728, align 8
  %730 = icmp eq i8* %729, null
  br i1 %730, label %732, label %731

731:                                              ; preds = %727
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %729) #7
  br label %732

732:                                              ; preds = %731, %727
  %733 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %526, align 8
  %734 = icmp eq %"class.WTF::StringImpl"* %733, null
  br i1 %734, label %748, label %735

735:                                              ; preds = %732
  %736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %737 = load atomic i32, i32* %736 monotonic, align 4
  %738 = and i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 0
  %741 = load i32, i32* %740, align 4
  br i1 %739, label %742, label %744

742:                                              ; preds = %735
  %743 = add i32 %741, -1
  store i32 %743, i32* %740, align 4
  br label %744

744:                                              ; preds = %742, %735
  %745 = phi i32 [ %743, %742 ], [ %741, %735 ]
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %748

747:                                              ; preds = %744
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %733) #7
  br label %748

748:                                              ; preds = %732, %744, %747
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %523) #7
  br label %923

749:                                              ; preds = %721
  %750 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %751 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %752 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %751, align 8
  %753 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %752, i64 5
  %754 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %753, align 8
  call void %754(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %750) #7
  br label %923

755:                                              ; preds = %721
  %756 = bitcast %"class.v8::Value"* %725 to i64*
  %757 = load i64, i64* %756, align 8
  %758 = and i64 %757, 3
  %759 = icmp eq i64 %758, 1
  br i1 %759, label %760, label %777

760:                                              ; preds = %755
  %761 = add i64 %757, -1
  %762 = inttoptr i64 %761 to i32*
  %763 = load i32, i32* %762, align 4
  %764 = and i64 %757, -4294967296
  %765 = zext i32 %763 to i64
  %766 = or i64 %764, %765
  %767 = add i64 %766, 7
  %768 = inttoptr i64 %767 to i16*
  %769 = load i16, i16* %768, align 2
  %770 = icmp eq i16 %769, 67
  br i1 %770, label %771, label %777

771:                                              ; preds = %760
  %772 = add i64 %757, 23
  %773 = inttoptr i64 %772 to i32*
  %774 = load i32, i32* %773, align 4
  %775 = and i32 %774, -2
  %776 = icmp eq i32 %775, 10
  br i1 %776, label %783, label %777

777:                                              ; preds = %760, %755, %771
  %778 = call %"class.blink::GPUStencilFaceState"* @_ZN5blink17NativeValueTraitsINS_19GPUStencilFaceStateEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %725, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %779 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %780 = load i32, i32* %779, align 8
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %923

782:                                              ; preds = %777
  call void @_ZN5blink20GPUDepthStencilState14setStencilBackEPNS_19GPUStencilFaceStateE(%"class.blink::GPUDepthStencilState"* %2, %"class.blink::GPUStencilFaceState"* %778) #7
  br label %783

783:                                              ; preds = %782, %771
  %784 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 7, i32 0
  %785 = bitcast %"class.v8::Name"** %784 to %"class.v8::Value"**
  %786 = load %"class.v8::Value"*, %"class.v8::Value"** %785, align 8
  %787 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %786) #7
  %788 = icmp eq %"class.v8::Value"* %787, null
  br i1 %788, label %789, label %795

789:                                              ; preds = %783
  %790 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %791 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %792 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %791, align 8
  %793 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %792, i64 5
  %794 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %793, align 8
  call void %794(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %790) #7
  br label %923

795:                                              ; preds = %783
  %796 = bitcast %"class.v8::Value"* %787 to i64*
  %797 = load i64, i64* %796, align 8
  %798 = and i64 %797, 3
  %799 = icmp eq i64 %798, 1
  br i1 %799, label %800, label %817

800:                                              ; preds = %795
  %801 = add i64 %797, -1
  %802 = inttoptr i64 %801 to i32*
  %803 = load i32, i32* %802, align 4
  %804 = and i64 %797, -4294967296
  %805 = zext i32 %803 to i64
  %806 = or i64 %804, %805
  %807 = add i64 %806, 7
  %808 = inttoptr i64 %807 to i16*
  %809 = load i16, i16* %808, align 2
  %810 = icmp eq i16 %809, 67
  br i1 %810, label %811, label %817

811:                                              ; preds = %800
  %812 = add i64 %797, 23
  %813 = inttoptr i64 %812 to i32*
  %814 = load i32, i32* %813, align 4
  %815 = and i32 %814, -2
  %816 = icmp eq i32 %815, 10
  br i1 %816, label %823, label %817

817:                                              ; preds = %800, %795, %811
  %818 = call %"class.blink::GPUStencilFaceState"* @_ZN5blink17NativeValueTraitsINS_19GPUStencilFaceStateEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %787, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %819 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %820 = load i32, i32* %819, align 8
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %822, label %923

822:                                              ; preds = %817
  call void @_ZN5blink20GPUDepthStencilState15setStencilFrontEPNS_19GPUStencilFaceStateE(%"class.blink::GPUDepthStencilState"* %2, %"class.blink::GPUStencilFaceState"* %818) #7
  br label %823

823:                                              ; preds = %822, %811
  %824 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 8, i32 0
  %825 = bitcast %"class.v8::Name"** %824 to %"class.v8::Value"**
  %826 = load %"class.v8::Value"*, %"class.v8::Value"** %825, align 8
  %827 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %826) #7
  %828 = icmp eq %"class.v8::Value"* %827, null
  br i1 %828, label %829, label %835

829:                                              ; preds = %823
  %830 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %831 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %832 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %831, align 8
  %833 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %832, i64 5
  %834 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %833, align 8
  call void %834(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %830) #7
  br label %923

835:                                              ; preds = %823
  %836 = bitcast %"class.v8::Value"* %827 to i64*
  %837 = load i64, i64* %836, align 8
  %838 = and i64 %837, 3
  %839 = icmp eq i64 %838, 1
  br i1 %839, label %840, label %857

840:                                              ; preds = %835
  %841 = add i64 %837, -1
  %842 = inttoptr i64 %841 to i32*
  %843 = load i32, i32* %842, align 4
  %844 = and i64 %837, -4294967296
  %845 = zext i32 %843 to i64
  %846 = or i64 %844, %845
  %847 = add i64 %846, 7
  %848 = inttoptr i64 %847 to i16*
  %849 = load i16, i16* %848, align 2
  %850 = icmp eq i16 %849, 67
  br i1 %850, label %851, label %857

851:                                              ; preds = %840
  %852 = add i64 %837, 23
  %853 = inttoptr i64 %852 to i32*
  %854 = load i32, i32* %853, align 4
  %855 = and i32 %854, -2
  %856 = icmp eq i32 %855, 10
  br i1 %856, label %873, label %857

857:                                              ; preds = %840, %835, %851
  %858 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %827) #7
  br i1 %858, label %859, label %862, !prof !2

859:                                              ; preds = %857
  %860 = bitcast %"class.v8::Value"* %827 to %"class.v8::Uint32"*
  %861 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %860) #7
  br label %865

862:                                              ; preds = %857
  %863 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %827) #7
  %864 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %827, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %865

865:                                              ; preds = %859, %862
  %866 = phi i32 [ %861, %859 ], [ %864, %862 ]
  %867 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %868 = load i32, i32* %867, align 8
  %869 = icmp eq i32 %868, 0
  br i1 %869, label %870, label %923

870:                                              ; preds = %865
  %871 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 15
  store i32 %866, i32* %871, align 8
  %872 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 5
  store i8 1, i8* %872, align 4
  br label %873

873:                                              ; preds = %870, %851
  %874 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 9, i32 0
  %875 = bitcast %"class.v8::Name"** %874 to %"class.v8::Value"**
  %876 = load %"class.v8::Value"*, %"class.v8::Value"** %875, align 8
  %877 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %876) #7
  %878 = icmp eq %"class.v8::Value"* %877, null
  br i1 %878, label %879, label %885

879:                                              ; preds = %873
  %880 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %881 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %882 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %881, align 8
  %883 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %882, i64 5
  %884 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %883, align 8
  call void %884(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %880) #7
  br label %923

885:                                              ; preds = %873
  %886 = bitcast %"class.v8::Value"* %877 to i64*
  %887 = load i64, i64* %886, align 8
  %888 = and i64 %887, 3
  %889 = icmp eq i64 %888, 1
  br i1 %889, label %890, label %907

890:                                              ; preds = %885
  %891 = add i64 %887, -1
  %892 = inttoptr i64 %891 to i32*
  %893 = load i32, i32* %892, align 4
  %894 = and i64 %887, -4294967296
  %895 = zext i32 %893 to i64
  %896 = or i64 %894, %895
  %897 = add i64 %896, 7
  %898 = inttoptr i64 %897 to i16*
  %899 = load i16, i16* %898, align 2
  %900 = icmp eq i16 %899, 67
  br i1 %900, label %901, label %907

901:                                              ; preds = %890
  %902 = add i64 %887, 23
  %903 = inttoptr i64 %902 to i32*
  %904 = load i32, i32* %903, align 4
  %905 = and i32 %904, -2
  %906 = icmp eq i32 %905, 10
  br i1 %906, label %923, label %907

907:                                              ; preds = %890, %885, %901
  %908 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %877) #7
  br i1 %908, label %909, label %912, !prof !2

909:                                              ; preds = %907
  %910 = bitcast %"class.v8::Value"* %877 to %"class.v8::Uint32"*
  %911 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %910) #7
  br label %915

912:                                              ; preds = %907
  %913 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %877) #7
  %914 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %877, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %915

915:                                              ; preds = %909, %912
  %916 = phi i32 [ %911, %909 ], [ %914, %912 ]
  %917 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %918 = load i32, i32* %917, align 8
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %920, label %923

920:                                              ; preds = %915
  %921 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 16
  store i32 %916, i32* %921, align 4
  %922 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %2, i64 0, i32 6
  store i8 1, i8* %922, align 1
  br label %923

923:                                              ; preds = %915, %865, %817, %777, %478, %173, %131, %89, %103, %187, %436, %493, %521, %748, %789, %879, %920, %901, %829, %749, %443, %145, %54
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #7
  br label %924

924:                                              ; preds = %923, %36, %39
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::GPUStencilFaceState"* @_ZN5blink17NativeValueTraitsINS_19GPUStencilFaceStateEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink20GPUDepthStencilState14setStencilBackEPNS_19GPUStencilFaceStateE(%"class.blink::GPUDepthStencilState"*, %"class.blink::GPUStencilFaceState"*) local_unnamed_addr #1

declare void @_ZN5blink20GPUDepthStencilState15setStencilFrontEPNS_19GPUStencilFaceStateE(%"class.blink::GPUDepthStencilState"*, %"class.blink::GPUStencilFaceState"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink20GPUDepthStencilState8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::GPUDepthStencilState"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink24toV8GPUDepthStencilStateEPKNS_20GPUDepthStencilStateEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUDepthStencilState"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24toV8GPUDepthStencilStateEPKNS_20GPUDepthStencilStateEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUDepthStencilState"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %8 = add i64 %7, 8
  %9 = inttoptr i64 %8 to %"class.blink::V8PerIsolateData"**
  %10 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %9, align 8
  %11 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %10, i8* bitcast ([10 x i8*]* @_ZZN5blinkL33eternalV8GPUDepthStencilStateKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.317"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.317"*)) #7
  %12 = extractvalue { i64, %"class.v8::Eternal"* } %11, 1
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %14 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %4, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %4 ]
  %22 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %21) #7
  %23 = bitcast %"class.v8::Integer"* %22 to %"class.v8::Value"*
  %24 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 0, i32 0
  %25 = load %"class.v8::Name"*, %"class.v8::Name"** %24, align 8
  %26 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %25, %"class.v8::Value"* %23) #7
  %27 = trunc i16 %26 to i8
  %28 = icmp ne i8 %27, 0
  %29 = icmp ugt i16 %26, 255
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %253

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 2
  %33 = load i8, i8* %32, align 1, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 8
  %37 = load float, float* %36, align 4
  %38 = fpext float %37 to double
  br label %39

39:                                               ; preds = %31, %35
  %40 = phi double [ %38, %35 ], [ 0.000000e+00, %31 ]
  %41 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %40) #7
  %42 = bitcast %"class.v8::Number"* %41 to %"class.v8::Value"*
  %43 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 1, i32 0
  %44 = load %"class.v8::Name"*, %"class.v8::Name"** %43, align 8
  %45 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %44, %"class.v8::Value"* %42) #7
  %46 = trunc i16 %45 to i8
  %47 = icmp ne i8 %46, 0
  %48 = icmp ugt i16 %45, 255
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %253

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 3
  %52 = load i8, i8* %51, align 2, !range !4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 9
  %56 = load float, float* %55, align 8
  %57 = fpext float %56 to double
  br label %58

58:                                               ; preds = %50, %54
  %59 = phi double [ %57, %54 ], [ 0.000000e+00, %50 ]
  %60 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %59) #7
  %61 = bitcast %"class.v8::Number"* %60 to %"class.v8::Value"*
  %62 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 2, i32 0
  %63 = load %"class.v8::Name"*, %"class.v8::Name"** %62, align 8
  %64 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %63, %"class.v8::Value"* %61) #7
  %65 = trunc i16 %64 to i8
  %66 = icmp ne i8 %65, 0
  %67 = icmp ugt i16 %64, 255
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %253

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 10, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #7
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 1
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %80 = bitcast i8** %79 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %77, i32* %81, align 8
  %82 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #7
  br label %87

83:                                               ; preds = %69
  %84 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i32 0, i32 6) #7
  %85 = icmp eq %"class.v8::String"* %84, null
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %83
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %87

87:                                               ; preds = %86, %83, %73
  %88 = phi %"class.v8::String"* [ %82, %73 ], [ %84, %83 ], [ null, %86 ]
  %89 = bitcast %"class.v8::String"* %88 to %"class.v8::Value"*
  %90 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 3, i32 0
  %91 = load %"class.v8::Name"*, %"class.v8::Name"** %90, align 8
  %92 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %91, %"class.v8::Value"* %89) #7
  %93 = trunc i16 %92 to i8
  %94 = icmp ne i8 %93, 0
  %95 = icmp ugt i16 %92, 255
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %253

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !4
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 11
  %103 = load i8, i8* %102, align 8, !range !4
  %104 = icmp eq i8 %103, 0
  %105 = select i1 %104, i64 192, i64 184
  %106 = add i64 %105, %7
  br label %109

107:                                              ; preds = %97
  %108 = add i64 %7, 192
  br label %109

109:                                              ; preds = %101, %107
  %110 = phi i64 [ %106, %101 ], [ %108, %107 ]
  %111 = inttoptr i64 %110 to %"class.v8::Value"*
  %112 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 4, i32 0
  %113 = load %"class.v8::Name"*, %"class.v8::Name"** %112, align 8
  %114 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %113, %"class.v8::Value"* %111) #7
  %115 = trunc i16 %114 to i8
  %116 = icmp ne i8 %115, 0
  %117 = icmp ugt i16 %114, 255
  %118 = and i1 %117, %116
  br i1 %118, label %119, label %253

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 12, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %141, label %123

123:                                              ; preds = %119
  %124 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #7
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %130 = bitcast i8** %129 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %127, i32* %131, align 8
  %132 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #7
  %133 = bitcast %"class.v8::String"* %132 to %"class.v8::Value"*
  %134 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 5, i32 0
  %135 = load %"class.v8::Name"*, %"class.v8::Name"** %134, align 8
  %136 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %135, %"class.v8::Value"* %133) #7
  %137 = trunc i16 %136 to i8
  %138 = icmp ne i8 %137, 0
  %139 = icmp ugt i16 %136, 255
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %253

141:                                              ; preds = %119, %123
  %142 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 13, i32 0, i32 0
  %143 = load %"class.blink::GPUStencilFaceState"*, %"class.blink::GPUStencilFaceState"** %142, align 8
  %144 = icmp eq %"class.blink::GPUStencilFaceState"* %143, null
  br i1 %144, label %152, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %143, i64 0, i32 0
  %147 = bitcast %"class.blink::GPUStencilFaceState"* %143 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %148 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %147, align 8
  %149 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %148, i64 2
  %150 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %149, align 8
  %151 = call %"class.v8::Value"* %150(%"class.blink::IDLDictionaryBase"* nonnull %146, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  br label %170

152:                                              ; preds = %141
  %153 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #7
  %154 = bitcast i8* %153 to %"class.blink::GPUStencilFaceState"*
  call void @_ZN5blink19GPUStencilFaceStateC1Ev(%"class.blink::GPUStencilFaceState"* %154) #7
  %155 = getelementptr inbounds i8, i8* %153, i64 -4
  %156 = bitcast i8* %155 to i16*
  %157 = load atomic i16, i16* %156 monotonic, align 2
  %158 = or i16 %157, 1
  store atomic i16 %158, i16* %156 release, align 2
  %159 = icmp eq i8* %153, null
  br i1 %159, label %160, label %163

160:                                              ; preds = %152
  %161 = add i64 %7, 176
  %162 = inttoptr i64 %161 to %"class.v8::Value"*
  br label %170

163:                                              ; preds = %152
  %164 = bitcast i8* %153 to %"class.blink::IDLDictionaryBase"*
  %165 = bitcast i8* %153 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %166 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %165, align 8
  %167 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %166, i64 2
  %168 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %167, align 8
  %169 = call %"class.v8::Value"* %168(%"class.blink::IDLDictionaryBase"* nonnull %164, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  br label %170

170:                                              ; preds = %163, %160, %145
  %171 = phi %"class.v8::Value"* [ %151, %145 ], [ %162, %160 ], [ %169, %163 ]
  %172 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 6, i32 0
  %173 = load %"class.v8::Name"*, %"class.v8::Name"** %172, align 8
  %174 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %173, %"class.v8::Value"* %171) #7
  %175 = trunc i16 %174 to i8
  %176 = icmp ne i8 %175, 0
  %177 = icmp ugt i16 %174, 255
  %178 = and i1 %177, %176
  br i1 %178, label %179, label %253

179:                                              ; preds = %170
  %180 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 14, i32 0, i32 0
  %181 = load %"class.blink::GPUStencilFaceState"*, %"class.blink::GPUStencilFaceState"** %180, align 8
  %182 = icmp eq %"class.blink::GPUStencilFaceState"* %181, null
  br i1 %182, label %190, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.blink::GPUStencilFaceState", %"class.blink::GPUStencilFaceState"* %181, i64 0, i32 0
  %185 = bitcast %"class.blink::GPUStencilFaceState"* %181 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %186 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %185, align 8
  %187 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %186, i64 2
  %188 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %187, align 8
  %189 = call %"class.v8::Value"* %188(%"class.blink::IDLDictionaryBase"* nonnull %184, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  br label %208

190:                                              ; preds = %179
  %191 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #7
  %192 = bitcast i8* %191 to %"class.blink::GPUStencilFaceState"*
  call void @_ZN5blink19GPUStencilFaceStateC1Ev(%"class.blink::GPUStencilFaceState"* %192) #7
  %193 = getelementptr inbounds i8, i8* %191, i64 -4
  %194 = bitcast i8* %193 to i16*
  %195 = load atomic i16, i16* %194 monotonic, align 2
  %196 = or i16 %195, 1
  store atomic i16 %196, i16* %194 release, align 2
  %197 = icmp eq i8* %191, null
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = add i64 %7, 176
  %200 = inttoptr i64 %199 to %"class.v8::Value"*
  br label %208

201:                                              ; preds = %190
  %202 = bitcast i8* %191 to %"class.blink::IDLDictionaryBase"*
  %203 = bitcast i8* %191 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %204 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %203, align 8
  %205 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %204, i64 2
  %206 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %205, align 8
  %207 = call %"class.v8::Value"* %206(%"class.blink::IDLDictionaryBase"* nonnull %202, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  br label %208

208:                                              ; preds = %201, %198, %183
  %209 = phi %"class.v8::Value"* [ %189, %183 ], [ %200, %198 ], [ %207, %201 ]
  %210 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 7, i32 0
  %211 = load %"class.v8::Name"*, %"class.v8::Name"** %210, align 8
  %212 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %211, %"class.v8::Value"* %209) #7
  %213 = trunc i16 %212 to i8
  %214 = icmp ne i8 %213, 0
  %215 = icmp ugt i16 %212, 255
  %216 = and i1 %215, %214
  br i1 %216, label %217, label %253

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 5
  %219 = load i8, i8* %218, align 4, !range !4
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 15
  %223 = load i32, i32* %222, align 8
  br label %224

224:                                              ; preds = %217, %221
  %225 = phi i32 [ %223, %221 ], [ -1, %217 ]
  %226 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %225) #7
  %227 = bitcast %"class.v8::Integer"* %226 to %"class.v8::Value"*
  %228 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 8, i32 0
  %229 = load %"class.v8::Name"*, %"class.v8::Name"** %228, align 8
  %230 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %229, %"class.v8::Value"* %227) #7
  %231 = trunc i16 %230 to i8
  %232 = icmp ne i8 %231, 0
  %233 = icmp ugt i16 %230, 255
  %234 = and i1 %233, %232
  br i1 %234, label %235, label %253

235:                                              ; preds = %224
  %236 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 6
  %237 = load i8, i8* %236, align 1, !range !4
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %242, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.blink::GPUDepthStencilState", %"class.blink::GPUDepthStencilState"* %0, i64 0, i32 16
  %241 = load i32, i32* %240, align 4
  br label %242

242:                                              ; preds = %235, %239
  %243 = phi i32 [ %241, %239 ], [ -1, %235 ]
  %244 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %243) #7
  %245 = bitcast %"class.v8::Integer"* %244 to %"class.v8::Value"*
  %246 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 9, i32 0
  %247 = load %"class.v8::Name"*, %"class.v8::Name"** %246, align 8
  %248 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %247, %"class.v8::Value"* %245) #7
  %249 = trunc i16 %248 to i8
  %250 = icmp ne i8 %249, 0
  %251 = icmp ugt i16 %248, 255
  %252 = and i1 %251, %250
  br label %253

253:                                              ; preds = %39, %87, %123, %208, %224, %242, %170, %109, %58, %20
  %254 = phi i1 [ false, %20 ], [ false, %39 ], [ false, %58 ], [ false, %87 ], [ false, %109 ], [ false, %123 ], [ false, %170 ], [ false, %208 ], [ %252, %242 ], [ false, %224 ]
  ret i1 %254
}

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUDepthStencilState"* @_ZN5blink17NativeValueTraitsINS_20GPUDepthStencilStateEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 80) #7
  %5 = bitcast i8* %4 to %"class.blink::GPUDepthStencilState"*
  tail call void @_ZN5blink20GPUDepthStencilStateC1Ev(%"class.blink::GPUDepthStencilState"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink22V8GPUDepthStencilState6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_20GPUDepthStencilStateERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::GPUDepthStencilState"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::GPUDepthStencilState"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.317"* dereferenceable(16)) local_unnamed_addr #1

declare float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink20GPUDepthStencilStateC1Ev(%"class.blink::GPUDepthStencilState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.77, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink19GPUStencilFaceStateC1Ev(%"class.blink::GPUStencilFaceState"*) unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
