; ModuleID = '../../ui/events/gesture_detection/gesture_event_data_packet.cc'
source_filename = "../../ui/events/gesture_detection/gesture_event_data_packet.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::GestureEventDataPacket" = type <{ %"class.base::TimeTicks", %"class.base::StackVector", %"class.gfx::PointF", %"class.gfx::PointF", i32, i32, i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<ui::GestureEventData, 5>::Source" = type { [440 x i8], i8, [7 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"*, %"class.std::__1::__compressed_pair" }
%"struct.ui::GestureEventData" = type { %"struct.ui::GestureEventDetails", i32, i32, %"class.base::TimeTicks", float, float, float, float, i32, i32 }
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::GestureEventData"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::StackAllocator" }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE7reserveEm = comdat any

$_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ = comdat any

$_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@__const._ZN2ui22GestureEventDataPacket4PushERKNS_16GestureEventDataE.gesture = private unnamed_addr constant { { i32, { { float, float, i8, [3 x i8] } }, i32, i8, [3 x i8], i32, i32, %"class.gfx::RectF" }, i32, i32, %"class.base::TimeTicks", float, float, float, float, i32, i32 } { { i32, { { float, float, i8, [3 x i8] } }, i32, i8, [3 x i8], i32, i32, %"class.gfx::RectF" } { i32 -1431655766, { { float, float, i8, [3 x i8] } } { { float, float, i8, [3 x i8] } { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } }, i32 -1431655766, i32 -1431655766, %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }, align 8
@__const._ZN2ui22GestureEventDataPacket16FromTouchTimeoutERKNS_16GestureEventDataE.packet = private unnamed_addr constant %"class.ui::GestureEventDataPacket" <{ %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, %"class.base::StackVector" { %"class.base::StackContainer" { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source" { [440 x i8] ci8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }, %"class.base::StackAllocator" { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* inttoptr (i64 -6148914691236517206 to %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*) }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.ui::GestureEventData"* inttoptr (i64 -6148914691236517206 to %"struct.ui::GestureEventData"*), %"struct.ui::GestureEventData"* inttoptr (i64 -6148914691236517206 to %"struct.ui::GestureEventData"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.ui::GestureEventData"* inttoptr (i64 -6148914691236517206 to %"struct.ui::GestureEventData"*) }, %"struct.std::__1::__compressed_pair_elem.4" { %"class.base::StackAllocator" { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* inttoptr (i64 -6148914691236517206 to %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*) } } } } } } }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@switch.table._ZN2ui22GestureEventDataPacket9FromTouchERKNS_11MotionEventE = private unnamed_addr constant [12 x i32] [i32 0, i32 1, i32 2, i32 5, i32 3, i32 4, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0], align 4

@_ZN2ui22GestureEventDataPacketC1Ev = hidden unnamed_addr alias void (%"class.ui::GestureEventDataPacket"*), void (%"class.ui::GestureEventDataPacket"*)* @_ZN2ui22GestureEventDataPacketC2Ev
@_ZN2ui22GestureEventDataPacketC1EN4base9TimeTicksENS0_13GestureSourceERKN3gfx6PointFES7_j = hidden unnamed_addr alias void (%"class.ui::GestureEventDataPacket"*, i64, i32, %"class.gfx::PointF"*, %"class.gfx::PointF"*, i32), void (%"class.ui::GestureEventDataPacket"*, i64, i32, %"class.gfx::PointF"*, %"class.gfx::PointF"*, i32)* @_ZN2ui22GestureEventDataPacketC2EN4base9TimeTicksENS0_13GestureSourceERKN3gfx6PointFES7_j
@_ZN2ui22GestureEventDataPacketC1ERKS0_ = hidden unnamed_addr alias void (%"class.ui::GestureEventDataPacket"*, %"class.ui::GestureEventDataPacket"*), void (%"class.ui::GestureEventDataPacket"*, %"class.ui::GestureEventDataPacket"*)* @_ZN2ui22GestureEventDataPacketC2ERKS0_
@_ZN2ui22GestureEventDataPacketD1Ev = hidden unnamed_addr alias void (%"class.ui::GestureEventDataPacket"*), void (%"class.ui::GestureEventDataPacket"*)* @_ZN2ui22GestureEventDataPacketD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacketC2Ev(%"class.ui::GestureEventDataPacket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %4, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %6, align 8
  %7 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2
  %8 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1
  %9 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #8
  %10 = ptrtoint %"class.base::StackVector"* %3 to i64
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.4"* %8 to i64*
  store i64 %10, i64* %11, align 8
  tail call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE7reserveEm(%"class.std::__1::vector"* %7, i64 5) #8
  %12 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 4
  %14 = bitcast float* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 16, i1 false)
  store i32 -1, i32* %13, align 8
  %15 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 5
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 6
  store i32 0, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacketC2EN4base9TimeTicksENS0_13GestureSourceERKN3gfx6PointFES7_j(%"class.ui::GestureEventDataPacket"*, i64, i32, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %9, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %11, align 8
  %12 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2
  %13 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1
  %14 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #8
  %15 = ptrtoint %"class.base::StackVector"* %8 to i64
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.4"* %13 to i64*
  store i64 %15, i64* %16, align 8
  tail call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE7reserveEm(%"class.std::__1::vector"* %12, i64 5) #8
  %17 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 2
  %18 = bitcast %"class.gfx::PointF"* %3 to i64*
  %19 = bitcast %"class.gfx::PointF"* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 3
  %22 = bitcast %"class.gfx::PointF"* %4 to i64*
  %23 = bitcast %"class.gfx::PointF"* %21 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 4
  store i32 %2, i32* %25, align 8
  %26 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 5
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 6
  store i32 %5, i32* %27, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacketC2ERKS0_(%"class.ui::GestureEventDataPacket"*, %"class.ui::GestureEventDataPacket"* nocapture readonly dereferenceable(528)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %7, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %9, align 8
  %10 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2
  %11 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #8
  %13 = ptrtoint %"class.base::StackVector"* %6 to i64
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.4"* %11 to i64*
  store i64 %13, i64* %14, align 8
  tail call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE7reserveEm(%"class.std::__1::vector"* %10, i64 5) #8
  %15 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %15, align 8
  %17 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %18 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %17, align 8
  tail call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"* %10, %"struct.ui::GestureEventData"* %16, %"struct.ui::GestureEventData"* %18) #8
  %19 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 2
  %21 = bitcast %"class.gfx::PointF"* %20 to i64*
  %22 = bitcast %"class.gfx::PointF"* %19 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 3
  %26 = bitcast %"class.gfx::PointF"* %25 to i64*
  %27 = bitcast %"class.gfx::PointF"* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %32, align 4
  %35 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 6
  %36 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacketD2Ev(%"class.ui::GestureEventDataPacket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %2, align 8
  %4 = icmp eq %"struct.ui::GestureEventData"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.ui::GestureEventData"* %3 to i64
  %7 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.ui::GestureEventData"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %10 = load %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %9, align 8
  %11 = icmp ne %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %10, null
  %12 = bitcast %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %10 to %"struct.ui::GestureEventData"*
  %13 = icmp eq %"struct.ui::GestureEventData"* %3, %12
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %10, i64 0, i32 1
  store i8 0, i8* %16, align 8
  br label %19

17:                                               ; preds = %5
  %18 = bitcast %"struct.ui::GestureEventData"* %3 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %1, %15, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(528) %"class.ui::GestureEventDataPacket"* @_ZN2ui22GestureEventDataPacketaSERKS0_(%"class.ui::GestureEventDataPacket"* returned, %"class.ui::GestureEventDataPacket"* nocapture readonly dereferenceable(528)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 4
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 2
  %11 = bitcast %"class.gfx::PointF"* %9 to i64*
  %12 = bitcast %"class.gfx::PointF"* %10 to i64*
  %13 = load i64, i64* %11, align 4
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 3
  %16 = bitcast %"class.gfx::PointF"* %14 to i64*
  %17 = bitcast %"class.gfx::PointF"* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2
  %20 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %20, align 8
  %22 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %23 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %22, align 8
  tail call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"* %19, %"struct.ui::GestureEventData"* %21, %"struct.ui::GestureEventData"* %23) #8
  %24 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 5
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %1, i64 0, i32 6
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 6
  store i32 %28, i32* %29, align 8
  ret %"class.ui::GestureEventDataPacket"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacket4PushERKNS_16GestureEventDataE(%"class.ui::GestureEventDataPacket"*, %"struct.ui::GestureEventData"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::GestureEventData", align 8
  %4 = bitcast %"struct.ui::GestureEventData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ { i32, { { float, float, i8, [3 x i8] } }, i32, i8, [3 x i8], i32, i32, %"class.gfx::RectF" }, i32, i32, %"class.base::TimeTicks", float, float, float, float, i32, i32 }* @__const._ZN2ui22GestureEventDataPacket4PushERKNS_16GestureEventDataE.gesture to i8*), i64 88, i1 false)
  call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* nonnull %3, %"struct.ui::GestureEventData"* dereferenceable(88) %1) #8
  %5 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %3, i64 0, i32 9
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %9 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %8, align 8
  %10 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %10, align 8
  %12 = icmp eq %"struct.ui::GestureEventData"* %9, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* %9, %"struct.ui::GestureEventData"* nonnull dereferenceable(88) %3) #8
  %14 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %9, i64 1
  %15 = ptrtoint %"struct.ui::GestureEventData"* %14 to i64
  %16 = bitcast %"struct.ui::GestureEventData"** %8 to i64*
  store i64 %15, i64* %16, align 8
  br label %19

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2
  call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %18, %"struct.ui::GestureEventData"* nonnull dereferenceable(88) %3) #8
  br label %19

19:                                               ; preds = %13, %17
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"* dereferenceable(88)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacket9FromTouchERKNS_11MotionEventE(%"class.ui::GestureEventDataPacket"* noalias sret, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %4 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %4, i64 22
  %6 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %5, align 8
  %7 = tail call i64 %6(%"class.ui::MotionEvent"* %1) #8
  %8 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %9 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %9, i64 3
  %11 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %10, align 8
  %12 = tail call i32 %11(%"class.ui::MotionEvent"* %1) #8
  %13 = icmp ult i32 %12, 12
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds [12 x i32], [12 x i32]* @switch.table._ZN2ui22GestureEventDataPacket9FromTouchERKNS_11MotionEventE, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %2, %14
  %19 = phi i32 [ %17, %14 ], [ 0, %2 ]
  %20 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  %21 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %20, align 8
  %22 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %21, i64 7
  %23 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %22, align 8
  %24 = tail call float %23(%"class.ui::MotionEvent"* %1, i64 0) #8
  %25 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %20, align 8
  %26 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %25, i64 8
  %27 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %26, align 8
  %28 = tail call float %27(%"class.ui::MotionEvent"* %1, i64 0) #8
  %29 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %20, align 8
  %30 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %29, i64 9
  %31 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %30, align 8
  %32 = tail call float %31(%"class.ui::MotionEvent"* %1, i64 0) #8
  %33 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %20, align 8
  %34 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %33, i64 10
  %35 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %34, align 8
  %36 = tail call float %35(%"class.ui::MotionEvent"* %1, i64 0) #8
  %37 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %8, align 8
  %38 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %37, i64 2
  %39 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %38, align 8
  %40 = tail call i32 %39(%"class.ui::MotionEvent"* %1) #8
  %41 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %7, i64* %41, align 8
  %42 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %42, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %43, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %45, align 8
  %46 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2
  %47 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1
  %48 = bitcast %"class.std::__1::vector"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #8
  %49 = ptrtoint %"class.base::StackVector"* %42 to i64
  %50 = bitcast %"struct.std::__1::__compressed_pair_elem.4"* %47 to i64*
  store i64 %49, i64* %50, align 8
  tail call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE7reserveEm(%"class.std::__1::vector"* %46, i64 5) #8
  %51 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 2, i32 0
  store float %24, float* %51, align 8
  %52 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 2, i32 1
  store float %28, float* %52, align 4
  %53 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 3, i32 0
  store float %32, float* %53, align 8
  %54 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 3, i32 1
  store float %36, float* %54, align 4
  %55 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 4
  store i32 %19, i32* %55, align 8
  %56 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 5
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 6
  store i32 %40, i32* %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacket16FromTouchTimeoutERKNS_16GestureEventDataE(%"class.ui::GestureEventDataPacket"* noalias sret, %"struct.ui::GestureEventData"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::GestureEventData", align 8
  %4 = bitcast %"class.ui::GestureEventDataPacket"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 bitcast (%"class.ui::GestureEventDataPacket"* @__const._ZN2ui22GestureEventDataPacket16FromTouchTimeoutERKNS_16GestureEventDataE.packet to i8*), i64 528, i1 false)
  %5 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 4
  %8 = bitcast float* %7 to <4 x i32>*
  %9 = load <4 x i32>, <4 x i32>* %8, align 8
  %10 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 9
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %13, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %14, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %16, align 8
  %17 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2
  %18 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 1
  %19 = bitcast %"class.std::__1::vector"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #8
  %20 = ptrtoint %"class.base::StackVector"* %13 to i64
  %21 = bitcast %"struct.std::__1::__compressed_pair_elem.4"* %18 to i64*
  store i64 %20, i64* %21, align 8
  tail call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE7reserveEm(%"class.std::__1::vector"* %17, i64 5) #8
  %22 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 2
  %23 = bitcast %"class.gfx::PointF"* %22 to <4 x i32>*
  store <4 x i32> %9, <4 x i32>* %23, align 8
  %24 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 4
  store i32 7, i32* %24, align 8
  %25 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 5
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 6
  store i32 %11, i32* %26, align 8
  %27 = bitcast %"struct.ui::GestureEventData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %27) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 bitcast ({ { i32, { { float, float, i8, [3 x i8] } }, i32, i8, [3 x i8], i32, i32, %"class.gfx::RectF" }, i32, i32, %"class.base::TimeTicks", float, float, float, float, i32, i32 }* @__const._ZN2ui22GestureEventDataPacket4PushERKNS_16GestureEventDataE.gesture to i8*), i64 88, i1 false) #8
  call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* nonnull %3, %"struct.ui::GestureEventData"* dereferenceable(88) %1) #8
  %28 = load i32, i32* %26, align 8
  %29 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %3, i64 0, i32 9
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %31 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %30, align 8
  %32 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %33 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %32, align 8
  %34 = icmp eq %"struct.ui::GestureEventData"* %31, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %2
  call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* %31, %"struct.ui::GestureEventData"* nonnull dereferenceable(88) %3) #8
  %36 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %31, i64 1
  %37 = ptrtoint %"struct.ui::GestureEventData"* %36 to i64
  %38 = bitcast %"struct.ui::GestureEventData"** %30 to i64*
  store i64 %37, i64* %38, align 8
  br label %40

39:                                               ; preds = %2
  call void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %17, %"struct.ui::GestureEventData"* nonnull dereferenceable(88) %3) #8
  br label %40

40:                                               ; preds = %35, %39
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %27) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22GestureEventDataPacket3AckEbb(%"class.ui::GestureEventDataPacket"* nocapture, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = select i1 %1, i32 1, i32 2
  %5 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 5
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %6, align 8
  %8 = getelementptr inbounds %"class.ui::GestureEventDataPacket", %"class.ui::GestureEventDataPacket"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 1
  %9 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %8, align 8
  %10 = icmp eq %"struct.ui::GestureEventData"* %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = zext i1 %2 to i8
  br label %14

13:                                               ; preds = %14, %3
  ret void

14:                                               ; preds = %11, %14
  %15 = phi %"struct.ui::GestureEventData"* [ %7, %11 ], [ %17, %14 ]
  %16 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %15, i64 0, i32 0, i32 3
  store i8 %12, i8* %16, align 4
  %17 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %15, i64 1
  %18 = icmp eq %"struct.ui::GestureEventData"* %17, %9
  br i1 %18, label %13, label %14
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.ui::GestureEventData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.ui::GestureEventData"*
  br i1 %10, label %12, label %77

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.ui::GestureEventData"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %7
  %18 = sdiv exact i64 %17, 88
  %19 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %13, i64 0, i32 0
  %20 = load %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %19, align 8
  %21 = icmp eq %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %20, null
  %22 = inttoptr i64 %16 to %"struct.ui::GestureEventData"*
  br i1 %21, label %35, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %20, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = icmp ult i64 %1, 6
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  store i8 1, i8* %24, align 8
  %30 = bitcast %"class.base::StackAllocator"* %13 to %"struct.ui::GestureEventData"**
  %31 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %33 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %32, align 8
  %34 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %14, align 8
  br label %42

35:                                               ; preds = %23, %12
  %36 = icmp ugt i64 %1, 209622091746699450
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %35
  %39 = mul i64 %1, 88
  %40 = tail call i8* @_Znwm(i64 %39) #9
  %41 = bitcast i8* %40 to %"struct.ui::GestureEventData"*
  br label %42

42:                                               ; preds = %29, %38
  %43 = phi %"struct.ui::GestureEventData"* [ %34, %29 ], [ %22, %38 ]
  %44 = phi %"struct.ui::GestureEventData"* [ %33, %29 ], [ %11, %38 ]
  %45 = phi %"struct.ui::GestureEventData"* [ %31, %29 ], [ %41, %38 ]
  %46 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %45, i64 %18
  %47 = ptrtoint %"struct.ui::GestureEventData"* %46 to i64
  %48 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %45, i64 %1
  %49 = ptrtoint %"struct.ui::GestureEventData"* %48 to i64
  %50 = icmp eq %"struct.ui::GestureEventData"* %43, %44
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = ptrtoint %"struct.ui::GestureEventData"* %43 to i64
  br label %62

53:                                               ; preds = %42, %53
  %54 = phi %"struct.ui::GestureEventData"* [ %56, %53 ], [ %46, %42 ]
  %55 = phi %"struct.ui::GestureEventData"* [ %57, %53 ], [ %43, %42 ]
  %56 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %54, i64 -1
  %57 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %55, i64 -1
  tail call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* %56, %"struct.ui::GestureEventData"* dereferenceable(88) %57) #8
  %58 = icmp eq %"struct.ui::GestureEventData"* %57, %44
  br i1 %58, label %59, label %53

59:                                               ; preds = %53
  %60 = ptrtoint %"struct.ui::GestureEventData"* %56 to i64
  %61 = load i64, i64* %6, align 8
  br label %62

62:                                               ; preds = %51, %59
  %63 = phi i64 [ %47, %51 ], [ %60, %59 ]
  %64 = phi i64 [ %52, %51 ], [ %61, %59 ]
  store i64 %63, i64* %6, align 8
  store i64 %47, i64* %15, align 8
  store i64 %49, i64* %4, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %62
  %67 = inttoptr i64 %64 to %"struct.ui::GestureEventData"*
  %68 = load %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %19, align 8
  %69 = icmp ne %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %68, null
  %70 = bitcast %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %68 to %"struct.ui::GestureEventData"*
  %71 = icmp eq %"struct.ui::GestureEventData"* %67, %70
  %72 = and i1 %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %68, i64 0, i32 1
  store i8 0, i8* %74, align 8
  br label %77

75:                                               ; preds = %66
  %76 = inttoptr i64 %64 to i8*
  tail call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %75, %73, %62, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"*, %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.ui::GestureEventData"* %1 to i64
  %5 = ptrtoint %"struct.ui::GestureEventData"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 88
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.ui::GestureEventData"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 88
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.ui::GestureEventData"*
  br i1 %15, label %51, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.ui::GestureEventData"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 88
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 %22
  %25 = select i1 %23, %"struct.ui::GestureEventData"* %24, %"struct.ui::GestureEventData"* %2
  %26 = ptrtoint %"struct.ui::GestureEventData"* %25 to i64
  %27 = sub i64 %26, %4
  %28 = sdiv exact i64 %27, 88
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.ui::GestureEventData"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #8
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %49

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"struct.ui::GestureEventData"* %25, %2
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to %"struct.ui::GestureEventData"*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.ui::GestureEventData"* [ %43, %39 ], [ %38, %37 ]
  %41 = phi %"struct.ui::GestureEventData"* [ %42, %39 ], [ %24, %37 ]
  tail call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* %40, %"struct.ui::GestureEventData"* dereferenceable(88) %41) #8
  %42 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %41, i64 1
  %43 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %40, i64 1
  %44 = icmp eq %"struct.ui::GestureEventData"* %42, %2
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = ptrtoint %"struct.ui::GestureEventData"* %43 to i64
  br label %47

47:                                               ; preds = %34, %45
  %48 = phi i64 [ %35, %34 ], [ %46, %45 ]
  store i64 %48, i64* %19, align 8
  br label %115

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %16, i64 %28
  store %"struct.ui::GestureEventData"* %50, %"struct.ui::GestureEventData"** %18, align 8
  br label %115

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = icmp eq i64 %12, 0
  br i1 %53, label %69, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %56 = bitcast %"struct.ui::GestureEventData"** %55 to i64*
  store i64 %12, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %58 = load %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %57, align 8
  %59 = icmp ne %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %58, null
  %60 = bitcast %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %58 to %"struct.ui::GestureEventData"*
  %61 = icmp eq %"struct.ui::GestureEventData"* %16, %60
  %62 = and i1 %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %58, i64 0, i32 1
  store i8 0, i8* %64, align 8
  br label %67

65:                                               ; preds = %54
  %66 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %66) #9
  br label %67

67:                                               ; preds = %65, %63
  %68 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #8
  br label %69

69:                                               ; preds = %51, %67
  %70 = phi i64 [ %10, %51 ], [ 0, %67 ]
  %71 = icmp ugt i64 %7, 209622091746699450
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #10
  unreachable

74:                                               ; preds = %69
  %75 = sdiv exact i64 %70, 88
  %76 = icmp ult i64 %75, 104811045873349725
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  %78 = shl nsw i64 %75, 1
  %79 = icmp ult i64 %78, %7
  %80 = select i1 %79, i64 %7, i64 %78
  br label %81

81:                                               ; preds = %77, %74
  %82 = phi i64 [ %80, %77 ], [ 209622091746699450, %74 ]
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %84 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %83, i64 0, i32 0
  %85 = load %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %84, align 8
  %86 = icmp eq %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %85, null
  br i1 %86, label %96, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %85, i64 0, i32 1
  %89 = load i8, i8* %88, align 8, !range !2
  %90 = icmp eq i8 %89, 0
  %91 = icmp ult i64 %82, 6
  %92 = and i1 %91, %90
  br i1 %92, label %93, label %96

93:                                               ; preds = %87
  store i8 1, i8* %88, align 8
  %94 = bitcast %"class.base::StackAllocator"* %83 to %"struct.ui::GestureEventData"**
  %95 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %94, align 8
  br label %100

96:                                               ; preds = %87, %81
  %97 = mul i64 %82, 88
  %98 = tail call i8* @_Znwm(i64 %97) #9
  %99 = bitcast i8* %98 to %"struct.ui::GestureEventData"*
  br label %100

100:                                              ; preds = %93, %96
  %101 = phi %"struct.ui::GestureEventData"* [ %95, %93 ], [ %99, %96 ]
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store %"struct.ui::GestureEventData"* %101, %"struct.ui::GestureEventData"** %102, align 8
  store %"struct.ui::GestureEventData"* %101, %"struct.ui::GestureEventData"** %52, align 8
  %103 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %101, i64 %82
  store %"struct.ui::GestureEventData"* %103, %"struct.ui::GestureEventData"** %8, align 8
  %104 = bitcast %"struct.ui::GestureEventData"** %102 to i64*
  %105 = icmp eq %"struct.ui::GestureEventData"* %1, %2
  br i1 %105, label %112, label %106

106:                                              ; preds = %100, %106
  %107 = phi %"struct.ui::GestureEventData"* [ %110, %106 ], [ %101, %100 ]
  %108 = phi %"struct.ui::GestureEventData"* [ %109, %106 ], [ %1, %100 ]
  tail call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* %107, %"struct.ui::GestureEventData"* dereferenceable(88) %108) #8
  %109 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %108, i64 1
  %110 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %107, i64 1
  %111 = icmp eq %"struct.ui::GestureEventData"* %109, %2
  br i1 %111, label %112, label %106

112:                                              ; preds = %106, %100
  %113 = phi %"struct.ui::GestureEventData"* [ %101, %100 ], [ %110, %106 ]
  %114 = ptrtoint %"struct.ui::GestureEventData"* %113 to i64
  store i64 %114, i64* %104, align 8
  br label %115

115:                                              ; preds = %47, %49, %112
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui16GestureEventDataEN4base14StackAllocatorIS2_Lm5EEEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"struct.ui::GestureEventData"* dereferenceable(88)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.ui::GestureEventData"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 88
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 209622091746699450
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #10
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.ui::GestureEventData"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 88
  %21 = icmp ult i64 %20, 104811045873349725
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 209622091746699450, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 6
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %39 = bitcast %"class.base::StackAllocator"* %3 to %"struct.ui::GestureEventData"**
  %40 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %39, align 8
  br label %45

41:                                               ; preds = %27, %32
  %42 = mul i64 %28, 88
  %43 = tail call i8* @_Znwm(i64 %42) #9
  %44 = bitcast i8* %43 to %"struct.ui::GestureEventData"*
  br label %45

45:                                               ; preds = %22, %38, %41
  %46 = phi i64 [ 0, %22 ], [ %28, %38 ], [ %28, %41 ]
  %47 = phi %"struct.ui::GestureEventData"* [ null, %22 ], [ %40, %38 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %47, i64 %10
  %49 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %47, i64 %46
  %50 = ptrtoint %"struct.ui::GestureEventData"* %49 to i64
  tail call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* %48, %"struct.ui::GestureEventData"* dereferenceable(88) %1) #8
  %51 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %48, i64 1
  %52 = ptrtoint %"struct.ui::GestureEventData"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %53, align 8
  %55 = load %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"** %4, align 8
  %56 = icmp eq %"struct.ui::GestureEventData"* %55, %54
  br i1 %56, label %57, label %59

57:                                               ; preds = %45
  %58 = ptrtoint %"struct.ui::GestureEventData"* %54 to i64
  br label %67

59:                                               ; preds = %45, %59
  %60 = phi %"struct.ui::GestureEventData"* [ %62, %59 ], [ %48, %45 ]
  %61 = phi %"struct.ui::GestureEventData"* [ %63, %59 ], [ %55, %45 ]
  %62 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %60, i64 -1
  %63 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %61, i64 -1
  tail call void @_ZN2ui16GestureEventDataC1ERKS0_(%"struct.ui::GestureEventData"* %62, %"struct.ui::GestureEventData"* dereferenceable(88) %63) #8
  %64 = icmp eq %"struct.ui::GestureEventData"* %63, %54
  br i1 %64, label %65, label %59

65:                                               ; preds = %59
  %66 = load i64, i64* %7, align 8
  br label %67

67:                                               ; preds = %57, %65
  %68 = phi %"struct.ui::GestureEventData"* [ %48, %57 ], [ %62, %65 ]
  %69 = phi i64 [ %58, %57 ], [ %66, %65 ]
  %70 = ptrtoint %"struct.ui::GestureEventData"* %68 to i64
  store i64 %70, i64* %7, align 8
  store i64 %52, i64* %5, align 8
  store i64 %50, i64* %17, align 8
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %84, label %72

72:                                               ; preds = %67
  %73 = inttoptr i64 %69 to %"struct.ui::GestureEventData"*
  %74 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %75 = load %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"*, %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"** %74, align 8
  %76 = icmp ne %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %75, null
  %77 = bitcast %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %75 to %"struct.ui::GestureEventData"*
  %78 = icmp eq %"struct.ui::GestureEventData"* %73, %77
  %79 = and i1 %76, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* %75, i64 0, i32 1
  store i8 0, i8* %81, align 8
  br label %84

82:                                               ; preds = %72
  %83 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %67, %80, %82
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
