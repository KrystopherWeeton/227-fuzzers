; ModuleID = '../../cc/paint/record_paint_canvas.cc'
source_filename = "../../cc/paint/record_paint_canvas.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.110, %class.sk_sp.146, %class.sk_sp.141, %class.sk_sp.142, %class.sk_sp.147, %struct.SkRGBA4f, float, float, %union.anon.148, [4 x i8] }>
%class.sk_sp.110 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.146 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.141 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.142 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.147 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.148 = type { %struct.anon }
%struct.anon = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.89", %struct.SkRect }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.94, [384 x i64], %class.sk_sp.95, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.96", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.100" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.94 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.95 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.68", %"class.std::__1::vector.75", %"class.std::__1::vector.82", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.9", %"class.base::flat_map.23", i8, i8, [6 x i8], %"class.cc::RTree.33", %"class.std::__1::vector.60" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.18" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.11", i32, i32 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.13" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.23" = type { %"class.base::internal::flat_tree.24" }
%"class.base::internal::flat_tree.24" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type { i32, i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.cc::RTree.33" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.52", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.47", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.40, %"class.gfx::Rect", i32, %class.sk_sp.44, %class.sk_sp.45, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%class.sk_sp.40 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.44 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.11" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.34, i32, i32 }
%class.sk_sp.34 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.45 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.46", [4 x i8] }>
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair.62" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair.62"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { i64*, i64*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.84" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%struct.SkIPoint = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::PaintOp" = type { i32 }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.110, %class.sk_sp.111, %class.sk_sp.141, %class.sk_sp.142, %class.sk_sp.143, %class.sk_sp.144, i32, float, float, i32, %union.anon.145, [4 x i8] }>
%class.sk_sp.111 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.112", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.40, i32, %"class.absl::optional.117", %"class.std::__1::vector.122", %"class.std::__1::vector.129", %class.sk_sp.136, %class.sk_sp, i32, [4 x i8] }>
%"class.absl::optional.112" = type { %"class.absl::optional_internal::optional_data.113" }
%"class.absl::optional_internal::optional_data.113" = type { %"class.absl::optional_internal::optional_data_base.114" }
%"class.absl::optional_internal::optional_data_base.114" = type { %"class.absl::optional_internal::optional_data_dtor_base.115" }
%"class.absl::optional_internal::optional_data_dtor_base.115" = type { i8, %union.anon.116 }
%union.anon.116 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, %union.anon.121 }
%union.anon.121 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { i32*, i32*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { i32* }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { float*, float*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { float* }
%class.sk_sp.136 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.137", [7 x i8] }>
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i8 }
%class.sk_sp.143 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.144 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.145 = type { i32 }
%"class.cc::SaveLayerOp" = type { %"class.cc::PaintOpWithFlags", %struct.SkRect }
%"class.cc::PaintOpWithFlags" = type { %"class.cc::PaintOp", [4 x i8], %"class.cc::PaintFlags" }
%class.SkM44 = type { [16 x float] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkPath = type <{ %class.sk_sp.149, i32, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", i8, i8 }>
%class.sk_sp.149 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.150, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.151, %class.SkTDArray.152, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.150 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.151 = type { i8*, i32, i32 }
%class.SkTDArray.152 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.153 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.153 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.137", [3 x i8] }
%"class.cc::ClipPathOp" = type <{ %"class.cc::PaintOp", [4 x i8], %"class.cc::ThreadsafePath", i32, i8, [3 x i8] }>
%"class.cc::ThreadsafePath" = type { %class.SkPath.base, i8 }
%class.SkPath.base = type <{ %class.sk_sp.149, i32, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", i8 }>
%"class.cc::DrawLineOp" = type { %"class.cc::PaintOpWithFlags", float, float, float, float }
%"class.cc::DrawPathOp" = type <{ %"class.cc::PaintOpWithFlags", %"class.cc::ThreadsafePath", i8, [7 x i8] }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.cc::DrawImageOp" = type <{ %"class.cc::PaintOpWithFlags", %"class.cc::PaintImage", float, float, %struct.SkSamplingOptions, %struct.SkSize, [4 x i8] }>
%"class.cc::DrawImageRectOp" = type { %"class.cc::PaintOpWithFlags", %"class.cc::PaintImage", %struct.SkRect, %struct.SkRect, %struct.SkSamplingOptions, i32, %struct.SkSize }
%"class.cc::SkottieWrapper" = type <{ %"class.base::RefCountedThreadSafe.155", [4 x i8], %"class.base::Lock", %class.sk_sp.156, %"class.std::__1::vector.173", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.155" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.sk_sp.156 = type { %"class.skottie::Animation"* }
%"class.skottie::Animation" = type <{ %class.SkNVRefCnt.157, [4 x i8], %"class.std::__1::unique_ptr.158", %"class.std::__1::vector.164", %class.SkString, %struct.SkSize, double, double, double, double, i32, [4 x i8] }>
%class.SkNVRefCnt.157 = type { %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.sksg::Scene"* }
%"class.sksg::Scene" = type opaque
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %class.sk_sp.166*, %class.sk_sp.166*, %"class.std::__1::__compressed_pair.167" }
%class.sk_sp.166 = type opaque
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %class.sk_sp.166* }
%class.SkString = type { %class.sk_sp.172 }
%class.sk_sp.172 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { i8*, i8*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { i8* }
%"class.cc::DrawSkottieOp" = type <{ %"class.cc::PaintOp", [4 x i8], %class.scoped_refptr.154, %struct.SkRect, float, [4 x i8] }>
%class.scoped_refptr.154 = type { %"class.cc::SkottieWrapper"* }
%class.sk_sp.180 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.181, %struct.SkRect, i32, %"struct.std::__1::atomic.182" }
%class.SkNVRefCnt.181 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i32 }
%"class.cc::DrawTextBlobOp" = type <{ %"class.cc::PaintOpWithFlags", %class.sk_sp.180, float, float, i32, [4 x i8] }>
%class.sk_sp.187 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::DrawRecordOp" = type { %"class.cc::PaintOp", %class.sk_sp.187 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.188 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.189, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.189 = type { %"struct.std::__1::atomic" }
%"class.cc::AnnotateOp" = type { %"class.cc::PaintOp", i32, %struct.SkRect, %class.sk_sp.188 }

$_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJRPK6SkRectRPKNS_10PaintFlagsEEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_16SaveLayerAlphaOpEJRPK6SkRectRhEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJRfS3_EEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_7ScaleOpEJRfS3_EEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJRK6SkRectR8SkClipOpRbEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRjR11SkBlendModeEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRj11SkBlendModeEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_10DrawLineOpEJRfS3_S3_S3_RKNS_10PaintFlagsEEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_11DrawImageOpEJRKNS_10PaintImageERfS6_RK17SkSamplingOptionsRPKNS_10PaintFlagsEEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_15DrawImageRectOpEJRKNS_10PaintImageERK6SkRectS8_RK17SkSamplingOptionsRPKNS_10PaintFlagsERN8SkCanvas17SrcRectConstraintEEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RiRKNS_10PaintFlagsEEEEmDpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_11SaveLayerOpEJRPK6SkRectRPKNS_10PaintFlagsEEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPathR8SkClipOpRbEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_10DrawLineOpEJRfS3_S3_S3_RKNS_10PaintFlagsEEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_10DrawPathOpEJRK6SkPathRKNS_10PaintFlagsEEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_11DrawImageOpEJRKNS_10PaintImageERfS6_RK17SkSamplingOptionsRPKNS_10PaintFlagsEEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_15DrawImageRectOpEJRKNS_10PaintImageERK6SkRectS8_RK17SkSamplingOptionsRPKNS_10PaintFlagsERN8SkCanvas17SrcRectConstraintEEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RKNS_10PaintFlagsEEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RiRKNS_10PaintFlagsEEEEPKT_DpOT0_ = comdat any

$_ZN2cc13PaintOpBuffer14AnalyzeAddedOpINS_12DrawRecordOpEEEvPKT_ = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_10AnnotateOpEJRNS_11PaintCanvas14AnnotationTypeERK6SkRectR5sk_spI6SkDataEEEEPKT_DpOT0_ = comdat any

@_ZTVN2cc17RecordPaintCanvasE = hidden unnamed_addr constant { [49 x i8*] } { [49 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvasD2Ev to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvasD0Ev to i8*), i8* bitcast (void (%struct.SkImageInfo*, %"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas9imageInfoEv to i8*), i8* bitcast (i8* (%"class.cc::RecordPaintCanvas"*, %struct.SkImageInfo*, i64*, %struct.SkIPoint*)* @_ZN2cc17RecordPaintCanvas20accessTopLayerPixelsEP11SkImageInfoPmP8SkIPoint to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvas5flushEv to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvas4saveEv to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas9saveLayerEPK6SkRectPKNS_10PaintFlagsE to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)* @_ZN2cc17RecordPaintCanvas14saveLayerAlphaEPK6SkRecth to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvas7restoreEv to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas12getSaveCountEv to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas14restoreToCountEi to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float, float)* @_ZN2cc17RecordPaintCanvas9translateEff to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float, float)* @_ZN2cc17RecordPaintCanvas5scaleEff to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float)* @_ZN2cc17RecordPaintCanvas6rotateEf to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkMatrix*)* @_ZN2cc17RecordPaintCanvas6concatERK8SkMatrix to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkMatrix*)* @_ZN2cc17RecordPaintCanvas9setMatrixERK8SkMatrix to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkM44*)* @_ZN2cc17RecordPaintCanvas6concatERK5SkM44 to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkM44*)* @_ZN2cc17RecordPaintCanvas9setMatrixERK5SkM44 to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)* @_ZN2cc17RecordPaintCanvas8clipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)* @_ZN2cc17RecordPaintCanvas9clipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkPath*, i32, i1)* @_ZN2cc17RecordPaintCanvas8clipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEv to i8*), i8* bitcast (i1 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*)* @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEP6SkRect to i8*), i8* bitcast ({ i64, i64 } (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEv to i8*), i8* bitcast (i1 (%"class.cc::RecordPaintCanvas"*, %struct.SkIRect*)* @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEP7SkIRect to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32, i32)* @_ZN2cc17RecordPaintCanvas9drawColorEj11SkBlendMode to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas5clearEj to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawLineEffffRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawRectERK6SkRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkIRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas9drawIRectERK7SkIRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawOvalERK6SkRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas9drawRRectERK7SkRRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %class.SkRRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas10drawDRRectERK7SkRRectS3_RKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas13drawRoundRectERK6SkRectffRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawPathERK6SkPathRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas9drawImageERKNS_10PaintImageEffRK17SkSamplingOptionsPKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)* @_ZN2cc17RecordPaintCanvas13drawImageRectERKNS_10PaintImageERK6SkRectS6_RK17SkSamplingOptionsPKNS_10PaintFlagsEN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)* @_ZN2cc17RecordPaintCanvas11drawSkottieE13scoped_refptrINS_14SkottieWrapperEERK6SkRectf to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.180*, float, float, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.180*, float, float, i32, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffiRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.187*)* @_ZN2cc17RecordPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE to i8*), i8* bitcast (i1 (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas11isClipEmptyEv to i8*), i8* bitcast (void (%class.SkMatrix*, %"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas14getTotalMatrixEv to i8*), i8* bitcast (void (%class.SkM44*, %"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas16getLocalToDeviceEv to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32, %struct.SkRect*, %class.sk_sp.188*)* @_ZN2cc17RecordPaintCanvas8AnnotateENS_11PaintCanvas14AnnotationTypeERK6SkRect5sk_spI6SkDataE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas16recordCustomDataEj to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas9setNodeIdEi to i8*)] }, align 8
@__const._ZN2cc17RecordPaintCanvas9saveLayerEPK6SkRectPKNS_10PaintFlagsE.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.110 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.146 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.141 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.142 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.147 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.148 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN2cc7PaintOp10kUnsetRectE = external local_unnamed_addr global %struct.SkRect, align 4

@_ZN2cc17RecordPaintCanvasC1EPNS_15DisplayItemListERK6SkRect = hidden unnamed_addr alias void (%"class.cc::RecordPaintCanvas"*, %"class.cc::DisplayItemList"*, %struct.SkRect*), void (%"class.cc::RecordPaintCanvas"*, %"class.cc::DisplayItemList"*, %struct.SkRect*)* @_ZN2cc17RecordPaintCanvasC2EPNS_15DisplayItemListERK6SkRect
@_ZN2cc17RecordPaintCanvasD1Ev = hidden unnamed_addr alias void (%"class.cc::RecordPaintCanvas"*), void (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvasD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvasC2EPNS_15DisplayItemListERK6SkRect(%"class.cc::RecordPaintCanvas"* nocapture, %"class.cc::DisplayItemList"*, %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.printing::MetafileSkia"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*] }, { [49 x i8*] }* @_ZTVN2cc17RecordPaintCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  store %"class.cc::DisplayItemList"* %1, %"class.cc::DisplayItemList"** %7, align 8
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon.93* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 3232, i1 false) #13
  %11 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %12 = bitcast %struct.SkRect* %11 to i8*
  %13 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvasD2Ev(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*] }, { [49 x i8*] }* @_ZTVN2cc17RecordPaintCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* %7) #13
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvasD0Ev(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*] }, { [49 x i8*] }* @_ZTVN2cc17RecordPaintCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.cc::RecordPaintCanvas"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17RecordPaintCanvas9imageInfoEv(%struct.SkImageInfo* noalias sret, %"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3, i32 2
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.ceil.f32(float %9) #13
  %11 = fcmp olt float %10, 0x41DFFFFFE0000000
  %12 = select i1 %11, float %10, float 0x41DFFFFFE0000000
  %13 = fcmp ogt float %12, 0xC1DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0xC1DFFFFFE0000000
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3, i32 3
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.ceil.f32(float %17) #13
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %24, i32 %15, i32 %23) #13
  store i8 1, i8* %3, align 8
  %25 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %24, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %25, %struct.SkRect* dereferenceable(16) %7, i32 1, i1 zeroext false) #13
  %26 = load i8, i8* %3, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %6
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %2, %6
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* sret %0, %class.SkCanvas* %30) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkNoDrawCanvas* @_ZNK2cc17RecordPaintCanvas9GetCanvasEv(%"class.cc::RecordPaintCanvas"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %30

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.ceil.f32(float %10) #13
  %12 = fcmp olt float %11, 0x41DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0x41DFFFFFE0000000
  %14 = fcmp ogt float %13, 0xC1DFFFFFE0000000
  %15 = select i1 %14, float %13, float 0xC1DFFFFFE0000000
  %16 = fptosi float %15 to i32
  %17 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %18 = load float, float* %17, align 4
  %19 = tail call float @llvm.ceil.f32(float %18) #13
  %20 = fcmp olt float %19, 0x41DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0x41DFFFFFE0000000
  %22 = fcmp ogt float %21, 0xC1DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0xC1DFFFFFE0000000
  %24 = fptosi float %23 to i32
  %25 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %25, i32 %16, i32 %24) #13
  store i8 1, i8* %2, align 8
  %26 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %25, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %26, %struct.SkRect* dereferenceable(16) %8, i32 1, i1 zeroext false) #13
  %27 = load i8, i8* %2, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %5, %7
  %31 = phi %class.SkNoDrawCanvas* [ %6, %5 ], [ %25, %7 ]
  ret %class.SkNoDrawCanvas* %31
}

declare void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @_ZN2cc17RecordPaintCanvas20accessTopLayerPixelsEP11SkImageInfoPmP8SkIPoint(%"class.cc::RecordPaintCanvas"* nocapture readnone, %struct.SkImageInfo* nocapture readnone, i64* nocapture readnone, %struct.SkIPoint* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas5flushEv(%"class.cc::RecordPaintCanvas"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc17RecordPaintCanvas4saveEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %3 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %1
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 8) #13
  %80 = bitcast i8* %79 to i32*
  store i32 2070, i32* %80, align 4
  %81 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %82 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 4, i32 9
  %83 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %81) #13
  %84 = zext i1 %83 to i8
  %85 = load i8, i8* %82, align 4
  %86 = shl nuw nsw i8 %84, 2
  %87 = and i8 %85, 4
  %88 = or i8 %87, %86
  %89 = and i8 %85, -61
  %90 = or i8 %88, %89
  %91 = and i8 %85, 8
  %92 = or i8 %90, %91
  %93 = and i8 %85, 16
  %94 = and i8 %85, 32
  %95 = or i8 %92, %93
  %96 = or i8 %95, %94
  store i8 %96, i8* %82, align 4
  %97 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %123

100:                                              ; preds = %78
  %101 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %102 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %103 = load float, float* %102, align 4
  %104 = tail call float @llvm.ceil.f32(float %103) #13
  %105 = fcmp olt float %104, 0x41DFFFFFE0000000
  %106 = select i1 %105, float %104, float 0x41DFFFFFE0000000
  %107 = fcmp ogt float %106, 0xC1DFFFFFE0000000
  %108 = select i1 %107, float %106, float 0xC1DFFFFFE0000000
  %109 = fptosi float %108 to i32
  %110 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %111 = load float, float* %110, align 4
  %112 = tail call float @llvm.ceil.f32(float %111) #13
  %113 = fcmp olt float %112, 0x41DFFFFFE0000000
  %114 = select i1 %113, float %112, float 0x41DFFFFFE0000000
  %115 = fcmp ogt float %114, 0xC1DFFFFFE0000000
  %116 = select i1 %115, float %114, float 0xC1DFFFFFE0000000
  %117 = fptosi float %116 to i32
  %118 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %118, i32 %109, i32 %117) #13
  store i8 1, i8* %97, align 8
  %119 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %118, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %119, %struct.SkRect* dereferenceable(16) %101, i32 1, i1 zeroext false) #13
  %120 = load i8, i8* %97, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %100
  tail call void @llvm.trap() #13
  unreachable

123:                                              ; preds = %78, %100
  %124 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %125 = tail call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %124) #13
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkNoDrawCanvas* @_ZN2cc17RecordPaintCanvas9GetCanvasEv(%"class.cc::RecordPaintCanvas"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %30

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.ceil.f32(float %10) #13
  %12 = fcmp olt float %11, 0x41DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0x41DFFFFFE0000000
  %14 = fcmp ogt float %13, 0xC1DFFFFFE0000000
  %15 = select i1 %14, float %13, float 0xC1DFFFFFE0000000
  %16 = fptosi float %15 to i32
  %17 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %18 = load float, float* %17, align 4
  %19 = tail call float @llvm.ceil.f32(float %18) #13
  %20 = fcmp olt float %19, 0x41DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0x41DFFFFFE0000000
  %22 = fcmp ogt float %21, 0xC1DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0xC1DFFFFFE0000000
  %24 = fptosi float %23 to i32
  %25 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %25, i32 %16, i32 %24) #13
  store i8 1, i8* %2, align 8
  %26 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %25, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %26, %struct.SkRect* dereferenceable(16) %8, i32 1, i1 zeroext false) #13
  %27 = load i8, i8* %2, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %7, %5
  %31 = phi %class.SkNoDrawCanvas* [ %6, %5 ], [ %25, %7 ]
  ret %class.SkNoDrawCanvas* %31
}

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc17RecordPaintCanvas9saveLayerEPK6SkRectPKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkRect*, align 8
  %5 = alloca %"class.cc::PaintFlags"*, align 8
  %6 = alloca %class.SkPaint, align 8
  store %struct.SkRect* %1, %struct.SkRect** %4, align 8
  store %"class.cc::PaintFlags"* %2, %"class.cc::PaintFlags"** %5, align 8
  %7 = icmp eq %"class.cc::PaintFlags"* %2, null
  br i1 %7, label %56, label %8

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZNK2cc10PaintFlags15IsSimpleOpacityEv(%"class.cc::PaintFlags"* nonnull %2) #13
  br i1 %9, label %10, label %20

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %2, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 24
  %14 = trunc i32 %13 to i8
  %15 = bitcast %"class.cc::RecordPaintCanvas"* %0 to i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)***
  %16 = load i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)**, i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)*, i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)** %16, i64 7
  %18 = load i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)*, i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)** %17, align 8
  %19 = tail call i32 %18(%"class.cc::RecordPaintCanvas"* %0, %struct.SkRect* %1, i8 zeroext %14) #13
  br label %90

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %22 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %21, align 8
  %23 = call i64 @_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJRPK6SkRectRPKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"* %22, %struct.SkRect** nonnull dereferenceable(8) %4, %"class.cc::PaintFlags"** nonnull dereferenceable(8) %5)
  %24 = bitcast %class.SkPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 bitcast (%class.SkPaint* @__const._ZN2cc17RecordPaintCanvas9saveLayerEPK6SkRectPKNS_10PaintFlagsE.paint to i8*), i64 72, i1 false)
  %25 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %5, align 8
  call void @_ZNK2cc10PaintFlags9ToSkPaintEv(%class.SkPaint* nonnull sret %6, %"class.cc::PaintFlags"* %25) #13
  %26 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %32 = load float, float* %31, align 4
  %33 = call float @llvm.ceil.f32(float %32) #13
  %34 = fcmp olt float %33, 0x41DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0x41DFFFFFE0000000
  %36 = fcmp ogt float %35, 0xC1DFFFFFE0000000
  %37 = select i1 %36, float %35, float 0xC1DFFFFFE0000000
  %38 = fptosi float %37 to i32
  %39 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %40 = load float, float* %39, align 4
  %41 = call float @llvm.ceil.f32(float %40) #13
  %42 = fcmp olt float %41, 0x41DFFFFFE0000000
  %43 = select i1 %42, float %41, float 0x41DFFFFFE0000000
  %44 = fcmp ogt float %43, 0xC1DFFFFFE0000000
  %45 = select i1 %44, float %43, float 0xC1DFFFFFE0000000
  %46 = fptosi float %45 to i32
  %47 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %47, i32 %38, i32 %46) #13
  store i8 1, i8* %26, align 8
  %48 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %47, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %48, %struct.SkRect* dereferenceable(16) %30, i32 1, i1 zeroext false) #13
  %49 = load i8, i8* %26, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %29
  call void @llvm.trap() #13
  unreachable

52:                                               ; preds = %20, %29
  %53 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %struct.SkRect*, %struct.SkRect** %4, align 8
  %55 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %53, %struct.SkRect* %54, %class.SkPaint* nonnull %6) #13
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #13
  br label %90

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %58 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %57, align 8
  %59 = call i64 @_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJRPK6SkRectRPKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"* %58, %struct.SkRect** nonnull dereferenceable(8) %4, %"class.cc::PaintFlags"** nonnull dereferenceable(8) %5)
  %60 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %86

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %65 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %66 = load float, float* %65, align 4
  %67 = call float @llvm.ceil.f32(float %66) #13
  %68 = fcmp olt float %67, 0x41DFFFFFE0000000
  %69 = select i1 %68, float %67, float 0x41DFFFFFE0000000
  %70 = fcmp ogt float %69, 0xC1DFFFFFE0000000
  %71 = select i1 %70, float %69, float 0xC1DFFFFFE0000000
  %72 = fptosi float %71 to i32
  %73 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %74 = load float, float* %73, align 4
  %75 = call float @llvm.ceil.f32(float %74) #13
  %76 = fcmp olt float %75, 0x41DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0x41DFFFFFE0000000
  %78 = fcmp ogt float %77, 0xC1DFFFFFE0000000
  %79 = select i1 %78, float %77, float 0xC1DFFFFFE0000000
  %80 = fptosi float %79 to i32
  %81 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %81, i32 %72, i32 %80) #13
  store i8 1, i8* %60, align 8
  %82 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %81, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %82, %struct.SkRect* dereferenceable(16) %64, i32 1, i1 zeroext false) #13
  %83 = load i8, i8* %60, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %86, !prof !3

85:                                               ; preds = %63
  call void @llvm.trap() #13
  unreachable

86:                                               ; preds = %56, %63
  %87 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %struct.SkRect*, %struct.SkRect** %4, align 8
  %89 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %87, %struct.SkRect* %88, %class.SkPaint* null) #13
  br label %90

90:                                               ; preds = %86, %52, %10
  %91 = phi i32 [ %19, %10 ], [ %55, %52 ], [ %89, %86 ]
  ret i32 %91
}

declare zeroext i1 @_ZNK2cc10PaintFlags15IsSimpleOpacityEv(%"class.cc::PaintFlags"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11SaveLayerOpEJRPK6SkRectRPKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"*, %struct.SkRect** dereferenceable(8), %"class.cc::PaintFlags"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call %"class.cc::SaveLayerOp"* @_ZN2cc13PaintOpBuffer4pushINS_11SaveLayerOpEJRPK6SkRectRPKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %4, %struct.SkRect** dereferenceable(8) %1, %"class.cc::PaintFlags"** dereferenceable(8) %2)
  ret i64 %6
}

declare void @_ZNK2cc10PaintFlags9ToSkPaintEv(%class.SkPaint* sret, %"class.cc::PaintFlags"*) local_unnamed_addr #3

declare i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc17RecordPaintCanvas14saveLayerAlphaEPK6SkRecth(%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkRect*, align 8
  %5 = alloca i8, align 1
  store %struct.SkRect* %1, %struct.SkRect** %4, align 8
  store i8 %2, i8* %5, align 1
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %7 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  %8 = call i64 @_ZN2cc15DisplayItemList4pushINS_16SaveLayerAlphaOpEJRPK6SkRectRhEEEmDpOT0_(%"class.cc::DisplayItemList"* %7, %struct.SkRect** nonnull dereferenceable(8) %4, i8* nonnull dereferenceable(1) %5)
  %9 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %35

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %15 = load float, float* %14, align 4
  %16 = call float @llvm.ceil.f32(float %15) #13
  %17 = fcmp olt float %16, 0x41DFFFFFE0000000
  %18 = select i1 %17, float %16, float 0x41DFFFFFE0000000
  %19 = fcmp ogt float %18, 0xC1DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0xC1DFFFFFE0000000
  %21 = fptosi float %20 to i32
  %22 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %23 = load float, float* %22, align 4
  %24 = call float @llvm.ceil.f32(float %23) #13
  %25 = fcmp olt float %24, 0x41DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0x41DFFFFFE0000000
  %27 = fcmp ogt float %26, 0xC1DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0xC1DFFFFFE0000000
  %29 = fptosi float %28 to i32
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %30, i32 %21, i32 %29) #13
  store i8 1, i8* %9, align 8
  %31 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %30, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %31, %struct.SkRect* dereferenceable(16) %13, i32 1, i1 zeroext false) #13
  %32 = load i8, i8* %9, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %12
  call void @llvm.trap() #13
  unreachable

35:                                               ; preds = %3, %12
  %36 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %struct.SkRect*, %struct.SkRect** %4, align 8
  %38 = load i8, i8* %5, align 1
  %39 = zext i8 %38 to i32
  %40 = call i32 @_ZN8SkCanvas14saveLayerAlphaEPK6SkRectj(%class.SkCanvas* %36, %struct.SkRect* %37, i32 %39) #13
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_16SaveLayerAlphaOpEJRPK6SkRectRhEEEmDpOT0_(%"class.cc::DisplayItemList"*, %struct.SkRect** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 24) #13
  %80 = load %struct.SkRect*, %struct.SkRect** %1, align 8
  %81 = load i8, i8* %2, align 1
  %82 = bitcast i8* %79 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -256
  %85 = or i32 %84, 24
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds i8, i8* %79, i64 4
  %87 = icmp eq %struct.SkRect* %80, null
  %88 = select i1 %87, %struct.SkRect* @_ZN2cc7PaintOp10kUnsetRectE, %struct.SkRect* %80
  %89 = bitcast %struct.SkRect* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %89, i64 16, i1 false) #13
  %90 = getelementptr inbounds i8, i8* %79, i64 20
  store i8 %81, i8* %90, align 4
  store i32 6168, i32* %82, align 4
  %91 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %92 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %93 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %91) #13
  %94 = zext i1 %93 to i8
  %95 = load i8, i8* %92, align 4
  %96 = shl nuw nsw i8 %94, 2
  %97 = and i8 %95, 4
  %98 = and i8 %95, -61
  %99 = and i8 %95, 8
  %100 = and i8 %95, 32
  %101 = or i8 %96, %97
  %102 = or i8 %101, %98
  %103 = or i8 %102, %99
  %104 = or i8 %103, %100
  %105 = or i8 %104, 16
  store i8 %105, i8* %92, align 4
  ret i64 %6
}

declare i32 @_ZN8SkCanvas14saveLayerAlphaEPK6SkRectj(%class.SkCanvas*, %struct.SkRect*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas7restoreEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %3 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %1
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 8) #13
  %80 = bitcast i8* %79 to i32*
  store i32 2068, i32* %80, align 4
  %81 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %82 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %3, i64 0, i32 4, i32 9
  %83 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %81) #13
  %84 = zext i1 %83 to i8
  %85 = load i8, i8* %82, align 4
  %86 = shl nuw nsw i8 %84, 2
  %87 = and i8 %85, 4
  %88 = or i8 %87, %86
  %89 = and i8 %85, -61
  %90 = or i8 %88, %89
  %91 = and i8 %85, 8
  %92 = or i8 %90, %91
  %93 = and i8 %85, 16
  %94 = and i8 %85, 32
  %95 = or i8 %92, %93
  %96 = or i8 %95, %94
  store i8 %96, i8* %82, align 4
  %97 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %123

100:                                              ; preds = %78
  %101 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %102 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %103 = load float, float* %102, align 4
  %104 = tail call float @llvm.ceil.f32(float %103) #13
  %105 = fcmp olt float %104, 0x41DFFFFFE0000000
  %106 = select i1 %105, float %104, float 0x41DFFFFFE0000000
  %107 = fcmp ogt float %106, 0xC1DFFFFFE0000000
  %108 = select i1 %107, float %106, float 0xC1DFFFFFE0000000
  %109 = fptosi float %108 to i32
  %110 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %111 = load float, float* %110, align 4
  %112 = tail call float @llvm.ceil.f32(float %111) #13
  %113 = fcmp olt float %112, 0x41DFFFFFE0000000
  %114 = select i1 %113, float %112, float 0x41DFFFFFE0000000
  %115 = fcmp ogt float %114, 0xC1DFFFFFE0000000
  %116 = select i1 %115, float %114, float 0xC1DFFFFFE0000000
  %117 = fptosi float %116 to i32
  %118 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %118, i32 %109, i32 %117) #13
  store i8 1, i8* %97, align 8
  %119 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %118, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %119, %struct.SkRect* dereferenceable(16) %101, i32 1, i1 zeroext false) #13
  %120 = load i8, i8* %97, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %100
  tail call void @llvm.trap() #13
  unreachable

123:                                              ; preds = %78, %100
  %124 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %124) #13
  ret void
}

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc17RecordPaintCanvas12getSaveCountEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %8 = load float, float* %7, align 4
  %9 = tail call float @llvm.ceil.f32(float %8) #13
  %10 = fcmp olt float %9, 0x41DFFFFFE0000000
  %11 = select i1 %10, float %9, float 0x41DFFFFFE0000000
  %12 = fcmp ogt float %11, 0xC1DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0xC1DFFFFFE0000000
  %14 = fptosi float %13 to i32
  %15 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %16 = load float, float* %15, align 4
  %17 = tail call float @llvm.ceil.f32(float %16) #13
  %18 = fcmp olt float %17, 0x41DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0x41DFFFFFE0000000
  %20 = fcmp ogt float %19, 0xC1DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0xC1DFFFFFE0000000
  %22 = fptosi float %21 to i32
  %23 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %23, i32 %14, i32 %22) #13
  store i8 1, i8* %2, align 8
  %24 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %23, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %24, %struct.SkRect* dereferenceable(16) %6, i32 1, i1 zeroext false) #13
  %25 = load i8, i8* %2, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %5
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %1, %5
  %29 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = tail call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* %29) #13
  ret i32 %30
}

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas14restoreToCountEi(%"class.cc::RecordPaintCanvas"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = tail call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* %7) #13
  %9 = sub i32 %8, %1
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %6
  %12 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*)***
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i32 [ 0, %11 ], [ %18, %13 ]
  %15 = load void (%"class.cc::RecordPaintCanvas"*)**, void (%"class.cc::RecordPaintCanvas"*)*** %12, align 8
  %16 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*)*, void (%"class.cc::RecordPaintCanvas"*)** %15, i64 8
  %17 = load void (%"class.cc::RecordPaintCanvas"*)*, void (%"class.cc::RecordPaintCanvas"*)** %16, align 8
  tail call void %17(%"class.cc::RecordPaintCanvas"* %0) #13
  %18 = add nuw nsw i32 %14, 1
  %19 = icmp eq i32 %18, %9
  br i1 %19, label %20, label %13

20:                                               ; preds = %13, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9translateEff(%"class.cc::RecordPaintCanvas"*, float, float) unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  store float %1, float* %4, align 4
  store float %2, float* %5, align 4
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %7 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  %8 = call i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJRfS3_EEEmDpOT0_(%"class.cc::DisplayItemList"* %7, float* nonnull dereferenceable(4) %4, float* nonnull dereferenceable(4) %5)
  %9 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %35

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %15 = load float, float* %14, align 4
  %16 = call float @llvm.ceil.f32(float %15) #13
  %17 = fcmp olt float %16, 0x41DFFFFFE0000000
  %18 = select i1 %17, float %16, float 0x41DFFFFFE0000000
  %19 = fcmp ogt float %18, 0xC1DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0xC1DFFFFFE0000000
  %21 = fptosi float %20 to i32
  %22 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %23 = load float, float* %22, align 4
  %24 = call float @llvm.ceil.f32(float %23) #13
  %25 = fcmp olt float %24, 0x41DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0x41DFFFFFE0000000
  %27 = fcmp ogt float %26, 0xC1DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0xC1DFFFFFE0000000
  %29 = fptosi float %28 to i32
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %30, i32 %21, i32 %29) #13
  store i8 1, i8* %9, align 8
  %31 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %30, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %31, %struct.SkRect* dereferenceable(16) %13, i32 1, i1 zeroext false) #13
  %32 = load i8, i8* %9, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %12
  call void @llvm.trap() #13
  unreachable

35:                                               ; preds = %3, %12
  %36 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load float, float* %4, align 4
  %38 = load float, float* %5, align 4
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %36, float %37, float %38) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11TranslateOpEJRfS3_EEEmDpOT0_(%"class.cc::DisplayItemList"*, float* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #13
  %80 = bitcast float* %1 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = bitcast float* %2 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = bitcast i8* %79 to i32*
  %85 = getelementptr inbounds i8, i8* %79, i64 4
  %86 = bitcast i8* %85 to i32*
  store i32 %81, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %79, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %83, i32* %88, align 4
  store i32 4124, i32* %84, align 4
  %89 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %90 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %91 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %89) #13
  %92 = zext i1 %91 to i8
  %93 = load i8, i8* %90, align 4
  %94 = shl nuw nsw i8 %92, 2
  %95 = and i8 %93, 4
  %96 = or i8 %95, %94
  %97 = and i8 %93, -61
  %98 = or i8 %96, %97
  %99 = and i8 %93, 8
  %100 = or i8 %98, %99
  %101 = and i8 %93, 16
  %102 = and i8 %93, 32
  %103 = or i8 %100, %101
  %104 = or i8 %103, %102
  store i8 %104, i8* %90, align 4
  ret i64 %6
}

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas5scaleEff(%"class.cc::RecordPaintCanvas"*, float, float) unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  store float %1, float* %4, align 4
  store float %2, float* %5, align 4
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %7 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  %8 = call i64 @_ZN2cc15DisplayItemList4pushINS_7ScaleOpEJRfS3_EEEmDpOT0_(%"class.cc::DisplayItemList"* %7, float* nonnull dereferenceable(4) %4, float* nonnull dereferenceable(4) %5)
  %9 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %35

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %15 = load float, float* %14, align 4
  %16 = call float @llvm.ceil.f32(float %15) #13
  %17 = fcmp olt float %16, 0x41DFFFFFE0000000
  %18 = select i1 %17, float %16, float 0x41DFFFFFE0000000
  %19 = fcmp ogt float %18, 0xC1DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0xC1DFFFFFE0000000
  %21 = fptosi float %20 to i32
  %22 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %23 = load float, float* %22, align 4
  %24 = call float @llvm.ceil.f32(float %23) #13
  %25 = fcmp olt float %24, 0x41DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0x41DFFFFFE0000000
  %27 = fcmp ogt float %26, 0xC1DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0xC1DFFFFFE0000000
  %29 = fptosi float %28 to i32
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %30, i32 %21, i32 %29) #13
  store i8 1, i8* %9, align 8
  %31 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %30, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %31, %struct.SkRect* dereferenceable(16) %13, i32 1, i1 zeroext false) #13
  %32 = load i8, i8* %9, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %12
  call void @llvm.trap() #13
  unreachable

35:                                               ; preds = %3, %12
  %36 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load float, float* %4, align 4
  %38 = load float, float* %5, align 4
  call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %36, float %37, float %38) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_7ScaleOpEJRfS3_EEEmDpOT0_(%"class.cc::DisplayItemList"*, float* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #13
  %80 = bitcast float* %1 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = bitcast float* %2 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = bitcast i8* %79 to i32*
  %85 = getelementptr inbounds i8, i8* %79, i64 4
  %86 = bitcast i8* %85 to i32*
  store i32 %81, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %79, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %83, i32* %88, align 4
  store i32 4121, i32* %84, align 4
  %89 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %90 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %91 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %89) #13
  %92 = zext i1 %91 to i8
  %93 = load i8, i8* %90, align 4
  %94 = shl nuw nsw i8 %92, 2
  %95 = and i8 %93, 4
  %96 = or i8 %95, %94
  %97 = and i8 %93, -61
  %98 = or i8 %96, %97
  %99 = and i8 %93, 8
  %100 = or i8 %98, %99
  %101 = and i8 %93, 16
  %102 = and i8 %93, 32
  %103 = or i8 %100, %101
  %104 = or i8 %103, %102
  store i8 %104, i8* %90, align 4
  ret i64 %6
}

declare void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas6rotateEf(%"class.cc::RecordPaintCanvas"*, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #13
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %77, %74, %19, %2
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 8) #13
  %81 = bitcast i8* %80 to i32*
  %82 = getelementptr inbounds i8, i8* %80, i64 4
  %83 = bitcast i8* %82 to float*
  store float %1, float* %83, align 4
  store i32 2069, i32* %81, align 4
  %84 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %85 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 9
  %86 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %84) #13
  %87 = zext i1 %86 to i8
  %88 = load i8, i8* %85, align 4
  %89 = shl nuw nsw i8 %87, 2
  %90 = and i8 %88, 4
  %91 = or i8 %90, %89
  %92 = and i8 %88, -61
  %93 = or i8 %91, %92
  %94 = and i8 %88, 8
  %95 = or i8 %93, %94
  %96 = and i8 %88, 16
  %97 = and i8 %88, 32
  %98 = or i8 %95, %96
  %99 = or i8 %98, %97
  store i8 %99, i8* %85, align 4
  %100 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %126

103:                                              ; preds = %79
  %104 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %105 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %106 = load float, float* %105, align 4
  %107 = tail call float @llvm.ceil.f32(float %106) #13
  %108 = fcmp olt float %107, 0x41DFFFFFE0000000
  %109 = select i1 %108, float %107, float 0x41DFFFFFE0000000
  %110 = fcmp ogt float %109, 0xC1DFFFFFE0000000
  %111 = select i1 %110, float %109, float 0xC1DFFFFFE0000000
  %112 = fptosi float %111 to i32
  %113 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %114 = load float, float* %113, align 4
  %115 = tail call float @llvm.ceil.f32(float %114) #13
  %116 = fcmp olt float %115, 0x41DFFFFFE0000000
  %117 = select i1 %116, float %115, float 0x41DFFFFFE0000000
  %118 = fcmp ogt float %117, 0xC1DFFFFFE0000000
  %119 = select i1 %118, float %117, float 0xC1DFFFFFE0000000
  %120 = fptosi float %119 to i32
  %121 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %121, i32 %112, i32 %120) #13
  store i8 1, i8* %100, align 8
  %122 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %121, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %122, %struct.SkRect* dereferenceable(16) %104, i32 1, i1 zeroext false) #13
  %123 = load i8, i8* %100, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %103
  tail call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %79, %103
  %127 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas6rotateEf(%class.SkCanvas* %127, float %1) #13
  ret void
}

declare void @_ZN8SkCanvas6rotateEf(%class.SkCanvas*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas6concatERK8SkMatrix(%"class.cc::RecordPaintCanvas"*, %class.SkMatrix* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #13
  %5 = bitcast %class.SkMatrix* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 2
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 5
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 6
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 7
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 8
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %class.SkM44* %3 to i32*
  store i32 %6, i32* %31, align 4
  %32 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 1
  %33 = bitcast float* %32 to i32*
  store i32 %15, i32* %33, align 4
  %34 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 3
  %36 = bitcast float* %35 to i32*
  store i32 %24, i32* %36, align 4
  %37 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 4
  %38 = bitcast float* %37 to i32*
  store i32 %9, i32* %38, align 4
  %39 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 5
  %40 = bitcast float* %39 to i32*
  store i32 %18, i32* %40, align 4
  %41 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %41, align 4
  %42 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 7
  %43 = bitcast float* %42 to i32*
  store i32 %27, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 8
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %45, align 4
  %46 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 12
  %47 = bitcast float* %46 to i32*
  store i32 %12, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 13
  %49 = bitcast float* %48 to i32*
  store i32 %21, i32* %49, align 4
  %50 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 15
  %52 = bitcast float* %51 to i32*
  store i32 %30, i32* %52, align 4
  %53 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %54 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %53, align 8
  %55 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 4
  %56 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 4, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %129

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 6
  %63 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 6, i32 0, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  %68 = ptrtoint i64* %66 to i64
  br i1 %67, label %73, label %69

69:                                               ; preds = %61
  store i64 %57, i64* %64, align 8
  %70 = getelementptr inbounds i64, i64* %64, i64 1
  %71 = ptrtoint i64* %70 to i64
  %72 = bitcast i64** %63 to i64*
  store i64 %71, i64* %72, align 8
  br label %129

73:                                               ; preds = %61
  %74 = ptrtoint i64* %64 to i64
  %75 = bitcast i64** %63 to i64*
  %76 = bitcast %"class.std::__1::vector.75"* %62 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %74, %77
  %79 = ashr exact i64 %78, 3
  %80 = add nsw i64 %79, 1
  %81 = icmp ugt i64 %80, 2305843009213693951
  br i1 %81, label %82, label %84

82:                                               ; preds = %73
  %83 = bitcast %"class.std::__1::vector.75"* %62 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #15
  unreachable

84:                                               ; preds = %73
  %85 = bitcast i64** %65 to i64*
  %86 = sub i64 %68, %77
  %87 = ashr exact i64 %86, 3
  %88 = icmp ult i64 %87, 1152921504606846975
  br i1 %88, label %89, label %97

89:                                               ; preds = %84
  %90 = ashr exact i64 %86, 2
  %91 = icmp ult i64 %90, %80
  %92 = select i1 %91, i64 %80, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %89
  %95 = icmp ugt i64 %92, 2305843009213693951
  br i1 %95, label %96, label %97

96:                                               ; preds = %94
  tail call void @abort() #15
  unreachable

97:                                               ; preds = %94, %84
  %98 = phi i64 [ %92, %94 ], [ 2305843009213693951, %84 ]
  %99 = shl i64 %98, 3
  %100 = tail call i8* @_Znwm(i64 %99) #14
  %101 = bitcast i8* %100 to i64*
  br label %102

102:                                              ; preds = %97, %89
  %103 = phi i64 [ %98, %97 ], [ 0, %89 ]
  %104 = phi i64* [ %101, %97 ], [ null, %89 ]
  %105 = getelementptr inbounds i64, i64* %104, i64 %79
  %106 = getelementptr inbounds i64, i64* %104, i64 %103
  %107 = ptrtoint i64* %106 to i64
  store i64 %57, i64* %105, align 8
  %108 = getelementptr inbounds i64, i64* %105, i64 1
  %109 = ptrtoint i64* %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %62, i64 0, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = load i64, i64* %75, align 8
  %113 = ptrtoint i64* %111 to i64
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds i64, i64* %105, i64 %116
  %118 = ptrtoint i64* %117 to i64
  %119 = icmp sgt i64 %114, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %102
  %121 = bitcast i64* %117 to i8*
  %122 = bitcast i64* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 %114, i1 false) #13
  %123 = load i64*, i64** %110, align 8
  br label %124

124:                                              ; preds = %120, %102
  %125 = phi i64* [ %111, %102 ], [ %123, %120 ]
  store i64 %118, i64* %76, align 8
  store i64 %109, i64* %75, align 8
  store i64 %107, i64* %85, align 8
  %126 = icmp eq i64* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = bitcast i64* %125 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %127, %124, %69, %2
  %130 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %55, i64 72) #13
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, -256
  %134 = or i32 %133, 4
  store i32 %134, i32* %131, align 4
  %135 = getelementptr inbounds i8, i8* %130, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %135, i8* nonnull align 4 %4, i64 64, i1 false) #13
  store i32 18436, i32* %131, align 4
  %136 = bitcast i8* %130 to %"class.cc::PaintOp"*
  %137 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 4, i32 9
  %138 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %136) #13
  %139 = zext i1 %138 to i8
  %140 = load i8, i8* %137, align 4
  %141 = shl nuw nsw i8 %139, 2
  %142 = and i8 %140, 4
  %143 = or i8 %142, %141
  %144 = and i8 %140, -61
  %145 = or i8 %143, %144
  %146 = and i8 %140, 8
  %147 = or i8 %145, %146
  %148 = and i8 %140, 16
  %149 = and i8 %140, 32
  %150 = or i8 %147, %148
  %151 = or i8 %150, %149
  store i8 %151, i8* %137, align 4
  %152 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %153 = load i8, i8* %152, align 8, !range !2
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %178

155:                                              ; preds = %129
  %156 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %157 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %158 = load float, float* %157, align 4
  %159 = tail call float @llvm.ceil.f32(float %158) #13
  %160 = fcmp olt float %159, 0x41DFFFFFE0000000
  %161 = select i1 %160, float %159, float 0x41DFFFFFE0000000
  %162 = fcmp ogt float %161, 0xC1DFFFFFE0000000
  %163 = select i1 %162, float %161, float 0xC1DFFFFFE0000000
  %164 = fptosi float %163 to i32
  %165 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %166 = load float, float* %165, align 4
  %167 = tail call float @llvm.ceil.f32(float %166) #13
  %168 = fcmp olt float %167, 0x41DFFFFFE0000000
  %169 = select i1 %168, float %167, float 0x41DFFFFFE0000000
  %170 = fcmp ogt float %169, 0xC1DFFFFFE0000000
  %171 = select i1 %170, float %169, float 0xC1DFFFFFE0000000
  %172 = fptosi float %171 to i32
  %173 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %173, i32 %164, i32 %172) #13
  store i8 1, i8* %152, align 8
  %174 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %173, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %174, %struct.SkRect* dereferenceable(16) %156, i32 1, i1 zeroext false) #13
  %175 = load i8, i8* %152, align 8, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %178, !prof !3

177:                                              ; preds = %155
  tail call void @llvm.trap() #13
  unreachable

178:                                              ; preds = %129, %155
  %179 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %179, %class.SkM44* nonnull dereferenceable(64) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas6concatERK5SkM44(%"class.cc::RecordPaintCanvas"*, %class.SkM44* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #13
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %77, %74, %19, %2
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 72) #13
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -256
  %84 = or i32 %83, 4
  store i32 %84, i32* %81, align 4
  %85 = getelementptr inbounds i8, i8* %80, i64 4
  %86 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %86, i64 64, i1 false) #13
  store i32 18436, i32* %81, align 4
  %87 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %88 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 9
  %89 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %87) #13
  %90 = zext i1 %89 to i8
  %91 = load i8, i8* %88, align 4
  %92 = shl nuw nsw i8 %90, 2
  %93 = and i8 %91, 4
  %94 = or i8 %93, %92
  %95 = and i8 %91, -61
  %96 = or i8 %94, %95
  %97 = and i8 %91, 8
  %98 = or i8 %96, %97
  %99 = and i8 %91, 16
  %100 = and i8 %91, 32
  %101 = or i8 %98, %99
  %102 = or i8 %101, %100
  store i8 %102, i8* %88, align 4
  %103 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %129

106:                                              ; preds = %79
  %107 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %108 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %109 = load float, float* %108, align 4
  %110 = tail call float @llvm.ceil.f32(float %109) #13
  %111 = fcmp olt float %110, 0x41DFFFFFE0000000
  %112 = select i1 %111, float %110, float 0x41DFFFFFE0000000
  %113 = fcmp ogt float %112, 0xC1DFFFFFE0000000
  %114 = select i1 %113, float %112, float 0xC1DFFFFFE0000000
  %115 = fptosi float %114 to i32
  %116 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %117 = load float, float* %116, align 4
  %118 = tail call float @llvm.ceil.f32(float %117) #13
  %119 = fcmp olt float %118, 0x41DFFFFFE0000000
  %120 = select i1 %119, float %118, float 0x41DFFFFFE0000000
  %121 = fcmp ogt float %120, 0xC1DFFFFFE0000000
  %122 = select i1 %121, float %120, float 0xC1DFFFFFE0000000
  %123 = fptosi float %122 to i32
  %124 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %124, i32 %115, i32 %123) #13
  store i8 1, i8* %103, align 8
  %125 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %124, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %125, %struct.SkRect* dereferenceable(16) %107, i32 1, i1 zeroext false) #13
  %126 = load i8, i8* %103, align 8, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %106
  tail call void @llvm.trap() #13
  unreachable

129:                                              ; preds = %79, %106
  %130 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %130, %class.SkM44* dereferenceable(64) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9setMatrixERK8SkMatrix(%"class.cc::RecordPaintCanvas"*, %class.SkMatrix* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #13
  %5 = bitcast %class.SkMatrix* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 2
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 5
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 6
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 7
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 8
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %class.SkM44* %3 to i32*
  store i32 %6, i32* %31, align 4
  %32 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 1
  %33 = bitcast float* %32 to i32*
  store i32 %15, i32* %33, align 4
  %34 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 3
  %36 = bitcast float* %35 to i32*
  store i32 %24, i32* %36, align 4
  %37 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 4
  %38 = bitcast float* %37 to i32*
  store i32 %9, i32* %38, align 4
  %39 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 5
  %40 = bitcast float* %39 to i32*
  store i32 %18, i32* %40, align 4
  %41 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %41, align 4
  %42 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 7
  %43 = bitcast float* %42 to i32*
  store i32 %27, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 8
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %45, align 4
  %46 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 12
  %47 = bitcast float* %46 to i32*
  store i32 %12, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 13
  %49 = bitcast float* %48 to i32*
  store i32 %21, i32* %49, align 4
  %50 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 15
  %52 = bitcast float* %51 to i32*
  store i32 %30, i32* %52, align 4
  %53 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %54 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %53, align 8
  %55 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 4
  %56 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 4, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %129

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 6
  %63 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 6, i32 0, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  %68 = ptrtoint i64* %66 to i64
  br i1 %67, label %73, label %69

69:                                               ; preds = %61
  store i64 %57, i64* %64, align 8
  %70 = getelementptr inbounds i64, i64* %64, i64 1
  %71 = ptrtoint i64* %70 to i64
  %72 = bitcast i64** %63 to i64*
  store i64 %71, i64* %72, align 8
  br label %129

73:                                               ; preds = %61
  %74 = ptrtoint i64* %64 to i64
  %75 = bitcast i64** %63 to i64*
  %76 = bitcast %"class.std::__1::vector.75"* %62 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %74, %77
  %79 = ashr exact i64 %78, 3
  %80 = add nsw i64 %79, 1
  %81 = icmp ugt i64 %80, 2305843009213693951
  br i1 %81, label %82, label %84

82:                                               ; preds = %73
  %83 = bitcast %"class.std::__1::vector.75"* %62 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #15
  unreachable

84:                                               ; preds = %73
  %85 = bitcast i64** %65 to i64*
  %86 = sub i64 %68, %77
  %87 = ashr exact i64 %86, 3
  %88 = icmp ult i64 %87, 1152921504606846975
  br i1 %88, label %89, label %97

89:                                               ; preds = %84
  %90 = ashr exact i64 %86, 2
  %91 = icmp ult i64 %90, %80
  %92 = select i1 %91, i64 %80, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %89
  %95 = icmp ugt i64 %92, 2305843009213693951
  br i1 %95, label %96, label %97

96:                                               ; preds = %94
  tail call void @abort() #15
  unreachable

97:                                               ; preds = %94, %84
  %98 = phi i64 [ %92, %94 ], [ 2305843009213693951, %84 ]
  %99 = shl i64 %98, 3
  %100 = tail call i8* @_Znwm(i64 %99) #14
  %101 = bitcast i8* %100 to i64*
  br label %102

102:                                              ; preds = %97, %89
  %103 = phi i64 [ %98, %97 ], [ 0, %89 ]
  %104 = phi i64* [ %101, %97 ], [ null, %89 ]
  %105 = getelementptr inbounds i64, i64* %104, i64 %79
  %106 = getelementptr inbounds i64, i64* %104, i64 %103
  %107 = ptrtoint i64* %106 to i64
  store i64 %57, i64* %105, align 8
  %108 = getelementptr inbounds i64, i64* %105, i64 1
  %109 = ptrtoint i64* %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %62, i64 0, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = load i64, i64* %75, align 8
  %113 = ptrtoint i64* %111 to i64
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds i64, i64* %105, i64 %116
  %118 = ptrtoint i64* %117 to i64
  %119 = icmp sgt i64 %114, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %102
  %121 = bitcast i64* %117 to i8*
  %122 = bitcast i64* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 %114, i1 false) #13
  %123 = load i64*, i64** %110, align 8
  br label %124

124:                                              ; preds = %120, %102
  %125 = phi i64* [ %111, %102 ], [ %123, %120 ]
  store i64 %118, i64* %76, align 8
  store i64 %109, i64* %75, align 8
  store i64 %107, i64* %85, align 8
  %126 = icmp eq i64* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = bitcast i64* %125 to i8*
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %127, %124, %69, %2
  %130 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %55, i64 72) #13
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, -256
  %134 = or i32 %133, 26
  store i32 %134, i32* %131, align 4
  %135 = getelementptr inbounds i8, i8* %130, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %135, i8* nonnull align 4 %4, i64 64, i1 false) #13
  store i32 18458, i32* %131, align 4
  %136 = bitcast i8* %130 to %"class.cc::PaintOp"*
  %137 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %54, i64 0, i32 4, i32 9
  %138 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %136) #13
  %139 = zext i1 %138 to i8
  %140 = load i8, i8* %137, align 4
  %141 = shl nuw nsw i8 %139, 2
  %142 = and i8 %140, 4
  %143 = or i8 %142, %141
  %144 = and i8 %140, -61
  %145 = or i8 %143, %144
  %146 = and i8 %140, 8
  %147 = or i8 %145, %146
  %148 = and i8 %140, 16
  %149 = and i8 %140, 32
  %150 = or i8 %147, %148
  %151 = or i8 %150, %149
  store i8 %151, i8* %137, align 4
  %152 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %153 = load i8, i8* %152, align 8, !range !2
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %178

155:                                              ; preds = %129
  %156 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %157 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %158 = load float, float* %157, align 4
  %159 = tail call float @llvm.ceil.f32(float %158) #13
  %160 = fcmp olt float %159, 0x41DFFFFFE0000000
  %161 = select i1 %160, float %159, float 0x41DFFFFFE0000000
  %162 = fcmp ogt float %161, 0xC1DFFFFFE0000000
  %163 = select i1 %162, float %161, float 0xC1DFFFFFE0000000
  %164 = fptosi float %163 to i32
  %165 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %166 = load float, float* %165, align 4
  %167 = tail call float @llvm.ceil.f32(float %166) #13
  %168 = fcmp olt float %167, 0x41DFFFFFE0000000
  %169 = select i1 %168, float %167, float 0x41DFFFFFE0000000
  %170 = fcmp ogt float %169, 0xC1DFFFFFE0000000
  %171 = select i1 %170, float %169, float 0xC1DFFFFFE0000000
  %172 = fptosi float %171 to i32
  %173 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %173, i32 %164, i32 %172) #13
  store i8 1, i8* %152, align 8
  %174 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %173, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %174, %struct.SkRect* dereferenceable(16) %156, i32 1, i1 zeroext false) #13
  %175 = load i8, i8* %152, align 8, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %178, !prof !3

177:                                              ; preds = %155
  tail call void @llvm.trap() #13
  unreachable

178:                                              ; preds = %129, %155
  %179 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @_ZN8SkCanvas9setMatrixERK5SkM44(%class.SkCanvas* %179, %class.SkM44* nonnull dereferenceable(64) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #13
  ret void
}

declare void @_ZN8SkCanvas9setMatrixERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9setMatrixERK5SkM44(%"class.cc::RecordPaintCanvas"*, %class.SkM44* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #13
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %77, %74, %19, %2
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 72) #13
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -256
  %84 = or i32 %83, 26
  store i32 %84, i32* %81, align 4
  %85 = getelementptr inbounds i8, i8* %80, i64 4
  %86 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %86, i64 64, i1 false) #13
  store i32 18458, i32* %81, align 4
  %87 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %88 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 9
  %89 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %87) #13
  %90 = zext i1 %89 to i8
  %91 = load i8, i8* %88, align 4
  %92 = shl nuw nsw i8 %90, 2
  %93 = and i8 %91, 4
  %94 = or i8 %93, %92
  %95 = and i8 %91, -61
  %96 = or i8 %94, %95
  %97 = and i8 %91, 8
  %98 = or i8 %96, %97
  %99 = and i8 %91, 16
  %100 = and i8 %91, 32
  %101 = or i8 %98, %99
  %102 = or i8 %101, %100
  store i8 %102, i8* %88, align 4
  %103 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %129

106:                                              ; preds = %79
  %107 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %108 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %109 = load float, float* %108, align 4
  %110 = tail call float @llvm.ceil.f32(float %109) #13
  %111 = fcmp olt float %110, 0x41DFFFFFE0000000
  %112 = select i1 %111, float %110, float 0x41DFFFFFE0000000
  %113 = fcmp ogt float %112, 0xC1DFFFFFE0000000
  %114 = select i1 %113, float %112, float 0xC1DFFFFFE0000000
  %115 = fptosi float %114 to i32
  %116 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %117 = load float, float* %116, align 4
  %118 = tail call float @llvm.ceil.f32(float %117) #13
  %119 = fcmp olt float %118, 0x41DFFFFFE0000000
  %120 = select i1 %119, float %118, float 0x41DFFFFFE0000000
  %121 = fcmp ogt float %120, 0xC1DFFFFFE0000000
  %122 = select i1 %121, float %120, float 0xC1DFFFFFE0000000
  %123 = fptosi float %122 to i32
  %124 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %124, i32 %115, i32 %123) #13
  store i8 1, i8* %103, align 8
  %125 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %124, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %125, %struct.SkRect* dereferenceable(16) %107, i32 1, i1 zeroext false) #13
  %126 = load i8, i8* %103, align 8, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %106
  tail call void @llvm.trap() #13
  unreachable

129:                                              ; preds = %79, %106
  %130 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas9setMatrixERK5SkM44(%class.SkCanvas* %130, %class.SkM44* dereferenceable(64) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas8clipRectERK6SkRect8SkClipOpb(%"class.cc::RecordPaintCanvas"*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %2, i32* %5, align 4
  %7 = zext i1 %3 to i8
  store i8 %7, i8* %6, align 1
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %9 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %8, align 8
  %10 = call i64 @_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJRK6SkRectR8SkClipOpRbEEEmDpOT0_(%"class.cc::DisplayItemList"* %9, %struct.SkRect* dereferenceable(16) %1, i32* nonnull dereferenceable(4) %5, i8* nonnull dereferenceable(1) %6)
  %11 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %17 = load float, float* %16, align 4
  %18 = call float @llvm.ceil.f32(float %17) #13
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %25 = load float, float* %24, align 4
  %26 = call float @llvm.ceil.f32(float %25) #13
  %27 = fcmp olt float %26, 0x41DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0x41DFFFFFE0000000
  %29 = fcmp ogt float %28, 0xC1DFFFFFE0000000
  %30 = select i1 %29, float %28, float 0xC1DFFFFFE0000000
  %31 = fptosi float %30 to i32
  %32 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %32, i32 %23, i32 %31) #13
  store i8 1, i8* %11, align 8
  %33 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %32, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %33, %struct.SkRect* dereferenceable(16) %15, i32 1, i1 zeroext false) #13
  %34 = load i8, i8* %11, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %14
  call void @llvm.trap() #13
  unreachable

37:                                               ; preds = %4, %14
  %38 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load i32, i32* %5, align 4
  %40 = load i8, i8* %6, align 1, !range !2
  %41 = icmp ne i8 %40, 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %38, %struct.SkRect* dereferenceable(16) %1, i32 %39, i1 zeroext %41) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJRK6SkRectR8SkClipOpRbEEEmDpOT0_(%"class.cc::DisplayItemList"*, %struct.SkRect* dereferenceable(16), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #13
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %77, %74, %19, %4
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 32) #13
  %81 = load i32, i32* %2, align 4
  %82 = load i8, i8* %3, align 1, !range !2
  %83 = bitcast i8* %80 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, -256
  %86 = or i32 %85, 2
  store i32 %86, i32* %83, align 4
  %87 = getelementptr inbounds i8, i8* %80, i64 4
  %88 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 16, i1 false) #13
  %89 = getelementptr inbounds i8, i8* %80, i64 20
  %90 = bitcast i8* %89 to i32*
  store i32 %81, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %80, i64 24
  store i8 %82, i8* %91, align 4
  store i32 8194, i32* %83, align 4
  %92 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %93 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %94 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %92) #13
  %95 = zext i1 %94 to i8
  %96 = load i8, i8* %93, align 4
  %97 = shl nuw nsw i8 %95, 2
  %98 = and i8 %96, 4
  %99 = or i8 %98, %97
  %100 = and i8 %96, -61
  %101 = or i8 %99, %100
  %102 = and i8 %96, 8
  %103 = or i8 %101, %102
  %104 = and i8 %96, 16
  %105 = and i8 %96, 32
  %106 = or i8 %103, %104
  %107 = or i8 %106, %105
  store i8 %107, i8* %93, align 4
  ret i64 %7
}

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9clipRRectERK7SkRRect8SkClipOpb(%"class.cc::RecordPaintCanvas"*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %11 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)***
  %12 = load void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)**, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)** %12, i64 18
  %14 = load void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)** %13, align 8
  tail call void %14(%"class.cc::RecordPaintCanvas"* %0, %struct.SkRect* dereferenceable(16) %10, i32 %2, i1 zeroext %3) #13
  br label %155

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %17 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %16, align 8
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %17, i64 0, i32 4
  %19 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %17, i64 0, i32 4, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %17, i64 0, i32 8
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %92

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %17, i64 0, i32 6
  %26 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %17, i64 0, i32 6, i32 0, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %17, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  %31 = ptrtoint i64* %29 to i64
  br i1 %30, label %36, label %32

32:                                               ; preds = %24
  store i64 %20, i64* %27, align 8
  %33 = getelementptr inbounds i64, i64* %27, i64 1
  %34 = ptrtoint i64* %33 to i64
  %35 = bitcast i64** %26 to i64*
  store i64 %34, i64* %35, align 8
  br label %92

36:                                               ; preds = %24
  %37 = ptrtoint i64* %27 to i64
  %38 = bitcast i64** %26 to i64*
  %39 = bitcast %"class.std::__1::vector.75"* %25 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %37, %40
  %42 = ashr exact i64 %41, 3
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::vector.75"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #15
  unreachable

47:                                               ; preds = %36
  %48 = bitcast i64** %28 to i64*
  %49 = sub i64 %31, %40
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, 1152921504606846975
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = ashr exact i64 %49, 2
  %54 = icmp ult i64 %53, %43
  %55 = select i1 %54, i64 %43, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %52
  %58 = icmp ugt i64 %55, 2305843009213693951
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void @abort() #15
  unreachable

60:                                               ; preds = %57, %47
  %61 = phi i64 [ %55, %57 ], [ 2305843009213693951, %47 ]
  %62 = shl i64 %61, 3
  %63 = tail call i8* @_Znwm(i64 %62) #14
  %64 = bitcast i8* %63 to i64*
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %61, %60 ], [ 0, %52 ]
  %67 = phi i64* [ %64, %60 ], [ null, %52 ]
  %68 = getelementptr inbounds i64, i64* %67, i64 %42
  %69 = getelementptr inbounds i64, i64* %67, i64 %66
  %70 = ptrtoint i64* %69 to i64
  store i64 %20, i64* %68, align 8
  %71 = getelementptr inbounds i64, i64* %68, i64 1
  %72 = ptrtoint i64* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %25, i64 0, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = load i64, i64* %38, align 8
  %76 = ptrtoint i64* %74 to i64
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 3
  %79 = sub nsw i64 0, %78
  %80 = getelementptr inbounds i64, i64* %68, i64 %79
  %81 = ptrtoint i64* %80 to i64
  %82 = icmp sgt i64 %77, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %65
  %84 = bitcast i64* %80 to i8*
  %85 = bitcast i64* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 %77, i1 false) #13
  %86 = load i64*, i64** %73, align 8
  br label %87

87:                                               ; preds = %83, %65
  %88 = phi i64* [ %74, %65 ], [ %86, %83 ]
  store i64 %81, i64* %39, align 8
  store i64 %72, i64* %38, align 8
  store i64 %70, i64* %48, align 8
  %89 = icmp eq i64* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = bitcast i64* %88 to i8*
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %90, %87, %32, %15
  %93 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %18, i64 64) #13
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = and i32 %95, -256
  %97 = or i32 %96, 3
  store i32 %97, i32* %94, align 4
  %98 = getelementptr inbounds i8, i8* %93, i64 4
  %99 = bitcast %class.SkRRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 52, i1 false) #13
  %100 = getelementptr inbounds i8, i8* %93, i64 56
  %101 = bitcast i8* %100 to i32*
  store i32 %2, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %93, i64 60
  store i8 %5, i8* %102, align 4
  store i32 16387, i32* %94, align 4
  %103 = bitcast i8* %93 to %"class.cc::PaintOp"*
  %104 = xor i8 %5, 1
  %105 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %17, i64 0, i32 4, i32 9
  %106 = load i8, i8* %105, align 4
  %107 = and i8 %106, 1
  %108 = or i8 %107, %104
  %109 = and i8 %106, -4
  %110 = or i8 %108, %109
  %111 = and i8 %106, 2
  %112 = or i8 %110, %111
  store i8 %112, i8* %105, align 4
  %113 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %103) #13
  %114 = zext i1 %113 to i8
  %115 = load i8, i8* %105, align 4
  %116 = shl nuw nsw i8 %114, 2
  %117 = and i8 %115, 4
  %118 = or i8 %117, %116
  %119 = and i8 %115, -61
  %120 = or i8 %118, %119
  %121 = and i8 %115, 8
  %122 = or i8 %120, %121
  %123 = and i8 %115, 16
  %124 = and i8 %115, 32
  %125 = or i8 %122, %123
  %126 = or i8 %125, %124
  store i8 %126, i8* %105, align 4
  %127 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %153

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %132 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %133 = load float, float* %132, align 4
  %134 = tail call float @llvm.ceil.f32(float %133) #13
  %135 = fcmp olt float %134, 0x41DFFFFFE0000000
  %136 = select i1 %135, float %134, float 0x41DFFFFFE0000000
  %137 = fcmp ogt float %136, 0xC1DFFFFFE0000000
  %138 = select i1 %137, float %136, float 0xC1DFFFFFE0000000
  %139 = fptosi float %138 to i32
  %140 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %141 = load float, float* %140, align 4
  %142 = tail call float @llvm.ceil.f32(float %141) #13
  %143 = fcmp olt float %142, 0x41DFFFFFE0000000
  %144 = select i1 %143, float %142, float 0x41DFFFFFE0000000
  %145 = fcmp ogt float %144, 0xC1DFFFFFE0000000
  %146 = select i1 %145, float %144, float 0xC1DFFFFFE0000000
  %147 = fptosi float %146 to i32
  %148 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %148, i32 %139, i32 %147) #13
  store i8 1, i8* %127, align 8
  %149 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %148, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %149, %struct.SkRect* dereferenceable(16) %131, i32 1, i1 zeroext false) #13
  %150 = load i8, i8* %127, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %153, !prof !3

152:                                              ; preds = %130
  tail call void @llvm.trap() #13
  unreachable

153:                                              ; preds = %92, %130
  %154 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas* %154, %class.SkRRect* dereferenceable(52) %1, i32 %2, i1 zeroext %3) #13
  br label %155

155:                                              ; preds = %153, %9
  ret void
}

declare void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas8clipPathERK6SkPath8SkClipOpb(%"class.cc::RecordPaintCanvas"*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca %struct.SkRect, align 4
  %9 = alloca %class.SkRRect, align 4
  store i32 %2, i32* %5, align 4
  %10 = zext i1 %3 to i8
  store i8 %10, i8* %6, align 1
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %12 = load i8, i8* %11, align 2
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  %15 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  br i1 %14, label %16, label %91

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %23 = load float, float* %22, align 4
  %24 = tail call float @llvm.ceil.f32(float %23) #13
  %25 = fcmp olt float %24, 0x41DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0x41DFFFFFE0000000
  %27 = fcmp ogt float %26, 0xC1DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0xC1DFFFFFE0000000
  %29 = fptosi float %28 to i32
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %31 = load float, float* %30, align 4
  %32 = tail call float @llvm.ceil.f32(float %31) #13
  %33 = fcmp olt float %32, 0x41DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0x41DFFFFFE0000000
  %35 = fcmp ogt float %34, 0xC1DFFFFFE0000000
  %36 = select i1 %35, float %34, float 0xC1DFFFFFE0000000
  %37 = fptosi float %36 to i32
  %38 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %38, i32 %29, i32 %37) #13
  store i8 1, i8* %17, align 8
  %39 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %38, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %39, %struct.SkRect* dereferenceable(16) %21, i32 1, i1 zeroext false) #13
  %40 = load i8, i8* %17, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %43, !prof !3

42:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

43:                                               ; preds = %16, %20
  %44 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %7, %class.SkCanvas* %44) #13
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = trunc i32 %46 to i8
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %7) #13
  %51 = zext i8 %50 to i32
  store i32 %51, i32* %45, align 4
  br label %52

52:                                               ; preds = %43, %49
  %53 = phi i32 [ %51, %49 ], [ %46, %43 ]
  %54 = and i32 %53, 16
  %55 = icmp eq i32 %54, 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  br i1 %55, label %92, label %56

56:                                               ; preds = %52
  %57 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #13
  %58 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %58, i8 -1, i64 16, i1 false)
  %59 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %1, %struct.SkRect* nonnull %8, i8* null, i32* null) #13
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = load i32, i32* %5, align 4
  %62 = load i8, i8* %6, align 1, !range !2
  %63 = icmp ne i8 %62, 0
  %64 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)***
  %65 = load void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)**, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)** %65, i64 18
  %67 = load void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)** %66, align 8
  call void %67(%"class.cc::RecordPaintCanvas"* %0, %struct.SkRect* nonnull dereferenceable(16) %8, i32 %61, i1 zeroext %63) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #13
  br label %202

68:                                               ; preds = %56
  %69 = bitcast %class.SkRRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %69) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %69, i8 0, i64 52, i1 false) #13
  %70 = call zeroext i1 @_ZNK6SkPath6isOvalEP6SkRect(%class.SkPath* %1, %struct.SkRect* nonnull %8) #13
  br i1 %70, label %71, label %79

71:                                               ; preds = %68
  call void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %8) #13
  %72 = load i32, i32* %5, align 4
  %73 = load i8, i8* %6, align 1, !range !2
  %74 = icmp ne i8 %73, 0
  %75 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)***
  %76 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)**, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)** %76, i64 19
  %78 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)** %77, align 8
  call void %78(%"class.cc::RecordPaintCanvas"* %0, %class.SkRRect* nonnull dereferenceable(52) %9, i32 %72, i1 zeroext %74) #13
  br label %89

79:                                               ; preds = %68
  %80 = call zeroext i1 @_ZNK6SkPath7isRRectEP7SkRRect(%class.SkPath* %1, %class.SkRRect* nonnull %9) #13
  br i1 %80, label %81, label %90

81:                                               ; preds = %79
  %82 = load i32, i32* %5, align 4
  %83 = load i8, i8* %6, align 1, !range !2
  %84 = icmp ne i8 %83, 0
  %85 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)***
  %86 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)**, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)** %86, i64 19
  %88 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)** %87, align 8
  call void %88(%"class.cc::RecordPaintCanvas"* %0, %class.SkRRect* nonnull dereferenceable(52) %9, i32 %82, i1 zeroext %84) #13
  br label %89

89:                                               ; preds = %71, %81
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #13
  br label %202

90:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %69) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #13
  br label %92

91:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  br label %92

92:                                               ; preds = %52, %90, %91
  %93 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %94 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %93, align 8
  %95 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %94, i64 0, i32 4
  %96 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %94, i64 0, i32 4, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %94, i64 0, i32 8
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %169

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %94, i64 0, i32 6
  %103 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %94, i64 0, i32 6, i32 0, i32 1
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %94, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = icmp eq i64* %104, %106
  %108 = ptrtoint i64* %106 to i64
  br i1 %107, label %113, label %109

109:                                              ; preds = %101
  store i64 %97, i64* %104, align 8
  %110 = getelementptr inbounds i64, i64* %104, i64 1
  %111 = ptrtoint i64* %110 to i64
  %112 = bitcast i64** %103 to i64*
  store i64 %111, i64* %112, align 8
  br label %169

113:                                              ; preds = %101
  %114 = ptrtoint i64* %104 to i64
  %115 = bitcast i64** %103 to i64*
  %116 = bitcast %"class.std::__1::vector.75"* %102 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %114, %117
  %119 = ashr exact i64 %118, 3
  %120 = add nsw i64 %119, 1
  %121 = icmp ugt i64 %120, 2305843009213693951
  br i1 %121, label %122, label %124

122:                                              ; preds = %113
  %123 = bitcast %"class.std::__1::vector.75"* %102 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %123) #15
  unreachable

124:                                              ; preds = %113
  %125 = bitcast i64** %105 to i64*
  %126 = sub i64 %108, %117
  %127 = ashr exact i64 %126, 3
  %128 = icmp ult i64 %127, 1152921504606846975
  br i1 %128, label %129, label %137

129:                                              ; preds = %124
  %130 = ashr exact i64 %126, 2
  %131 = icmp ult i64 %130, %120
  %132 = select i1 %131, i64 %120, i64 %130
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %129
  %135 = icmp ugt i64 %132, 2305843009213693951
  br i1 %135, label %136, label %137

136:                                              ; preds = %134
  call void @abort() #15
  unreachable

137:                                              ; preds = %134, %124
  %138 = phi i64 [ %132, %134 ], [ 2305843009213693951, %124 ]
  %139 = shl i64 %138, 3
  %140 = call i8* @_Znwm(i64 %139) #14
  %141 = bitcast i8* %140 to i64*
  br label %142

142:                                              ; preds = %137, %129
  %143 = phi i64 [ %138, %137 ], [ 0, %129 ]
  %144 = phi i64* [ %141, %137 ], [ null, %129 ]
  %145 = getelementptr inbounds i64, i64* %144, i64 %119
  %146 = getelementptr inbounds i64, i64* %144, i64 %143
  %147 = ptrtoint i64* %146 to i64
  store i64 %97, i64* %145, align 8
  %148 = getelementptr inbounds i64, i64* %145, i64 1
  %149 = ptrtoint i64* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %102, i64 0, i32 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = load i64, i64* %115, align 8
  %153 = ptrtoint i64* %151 to i64
  %154 = sub i64 %152, %153
  %155 = ashr exact i64 %154, 3
  %156 = sub nsw i64 0, %155
  %157 = getelementptr inbounds i64, i64* %145, i64 %156
  %158 = ptrtoint i64* %157 to i64
  %159 = icmp sgt i64 %154, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %142
  %161 = bitcast i64* %157 to i8*
  %162 = bitcast i64* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 %154, i1 false) #13
  %163 = load i64*, i64** %150, align 8
  br label %164

164:                                              ; preds = %160, %142
  %165 = phi i64* [ %151, %142 ], [ %163, %160 ]
  store i64 %158, i64* %116, align 8
  store i64 %149, i64* %115, align 8
  store i64 %147, i64* %125, align 8
  %166 = icmp eq i64* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %164
  %168 = bitcast i64* %165 to i8*
  call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %167, %164, %109, %92
  %170 = call %"class.cc::ClipPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPathR8SkClipOpRbEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %95, %class.SkPath* dereferenceable(16) %1, i32* nonnull dereferenceable(4) %5, i8* nonnull dereferenceable(1) %6) #13
  %171 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %172 = load i8, i8* %171, align 8, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %197

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %176 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %177 = load float, float* %176, align 4
  %178 = call float @llvm.ceil.f32(float %177) #13
  %179 = fcmp olt float %178, 0x41DFFFFFE0000000
  %180 = select i1 %179, float %178, float 0x41DFFFFFE0000000
  %181 = fcmp ogt float %180, 0xC1DFFFFFE0000000
  %182 = select i1 %181, float %180, float 0xC1DFFFFFE0000000
  %183 = fptosi float %182 to i32
  %184 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %185 = load float, float* %184, align 4
  %186 = call float @llvm.ceil.f32(float %185) #13
  %187 = fcmp olt float %186, 0x41DFFFFFE0000000
  %188 = select i1 %187, float %186, float 0x41DFFFFFE0000000
  %189 = fcmp ogt float %188, 0xC1DFFFFFE0000000
  %190 = select i1 %189, float %188, float 0xC1DFFFFFE0000000
  %191 = fptosi float %190 to i32
  %192 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %192, i32 %183, i32 %191) #13
  store i8 1, i8* %171, align 8
  %193 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %192, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %193, %struct.SkRect* dereferenceable(16) %175, i32 1, i1 zeroext false) #13
  %194 = load i8, i8* %171, align 8, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %196, label %197, !prof !3

196:                                              ; preds = %174
  call void @llvm.trap() #13
  unreachable

197:                                              ; preds = %169, %174
  %198 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %199 = load i32, i32* %5, align 4
  %200 = load i8, i8* %6, align 1, !range !2
  %201 = icmp ne i8 %200, 0
  call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %198, %class.SkPath* dereferenceable(16) %1, i32 %199, i1 zeroext %201) #13
  br label %202

202:                                              ; preds = %89, %60, %197
  ret void
}

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #3

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZNK6SkPath6isOvalEP6SkRect(%class.SkPath*, %struct.SkRect*) local_unnamed_addr #3

declare void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK6SkPath7isRRectEP7SkRRect(%class.SkPath*, %class.SkRRect*) local_unnamed_addr #3

declare void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %8 = load float, float* %7, align 4
  %9 = tail call float @llvm.ceil.f32(float %8) #13
  %10 = fcmp olt float %9, 0x41DFFFFFE0000000
  %11 = select i1 %10, float %9, float 0x41DFFFFFE0000000
  %12 = fcmp ogt float %11, 0xC1DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0xC1DFFFFFE0000000
  %14 = fptosi float %13 to i32
  %15 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %16 = load float, float* %15, align 4
  %17 = tail call float @llvm.ceil.f32(float %16) #13
  %18 = fcmp olt float %17, 0x41DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0x41DFFFFFE0000000
  %20 = fcmp ogt float %19, 0xC1DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0xC1DFFFFFE0000000
  %22 = fptosi float %21 to i32
  %23 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %23, i32 %14, i32 %22) #13
  store i8 1, i8* %2, align 8
  %24 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %23, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %24, %struct.SkRect* dereferenceable(16) %6, i32 1, i1 zeroext false) #13
  %25 = load i8, i8* %2, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %5
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %1, %5
  %29 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = tail call { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas* %29) #13
  ret { <2 x float>, <2 x float> } %30
}

declare { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEP6SkRect(%"class.cc::RecordPaintCanvas"*, %struct.SkRect* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.ceil.f32(float %9) #13
  %11 = fcmp olt float %10, 0x41DFFFFFE0000000
  %12 = select i1 %11, float %10, float 0x41DFFFFFE0000000
  %13 = fcmp ogt float %12, 0xC1DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0xC1DFFFFFE0000000
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.ceil.f32(float %17) #13
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %24, i32 %15, i32 %23) #13
  store i8 1, i8* %3, align 8
  %25 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %24, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %25, %struct.SkRect* dereferenceable(16) %7, i32 1, i1 zeroext false) #13
  %26 = load i8, i8* %3, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %6
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %2, %6
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = tail call { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas* %30) #13
  %32 = extractvalue { <2 x float>, <2 x float> } %31, 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 1
  %34 = bitcast %struct.SkRect* %1 to <2 x float>*
  store <2 x float> %32, <2 x float>* %34, align 4
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %36 = bitcast float* %35 to <2 x float>*
  store <2 x float> %33, <2 x float>* %36, align 4
  %37 = extractelement <2 x float> %32, i32 0
  %38 = extractelement <2 x float> %33, i32 0
  %39 = fcmp olt float %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %29
  %41 = extractelement <2 x float> %33, i32 1
  %42 = extractelement <2 x float> %32, i32 1
  %43 = fcmp olt float %42, %41
  br label %44

44:                                               ; preds = %29, %40
  %45 = phi i1 [ false, %29 ], [ %43, %40 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %8 = load float, float* %7, align 4
  %9 = tail call float @llvm.ceil.f32(float %8) #13
  %10 = fcmp olt float %9, 0x41DFFFFFE0000000
  %11 = select i1 %10, float %9, float 0x41DFFFFFE0000000
  %12 = fcmp ogt float %11, 0xC1DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0xC1DFFFFFE0000000
  %14 = fptosi float %13 to i32
  %15 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %16 = load float, float* %15, align 4
  %17 = tail call float @llvm.ceil.f32(float %16) #13
  %18 = fcmp olt float %17, 0x41DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0x41DFFFFFE0000000
  %20 = fcmp ogt float %19, 0xC1DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0xC1DFFFFFE0000000
  %22 = fptosi float %21 to i32
  %23 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %23, i32 %14, i32 %22) #13
  store i8 1, i8* %2, align 8
  %24 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %23, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %24, %struct.SkRect* dereferenceable(16) %6, i32 1, i1 zeroext false) #13
  %25 = load i8, i8* %2, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %5
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %1, %5
  %29 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = tail call { i64, i64 } @_ZNK8SkCanvas19getDeviceClipBoundsEv(%class.SkCanvas* %29) #13
  ret { i64, i64 } %30
}

declare { i64, i64 } @_ZNK8SkCanvas19getDeviceClipBoundsEv(%class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEP7SkIRect(%"class.cc::RecordPaintCanvas"*, %struct.SkIRect* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.ceil.f32(float %9) #13
  %11 = fcmp olt float %10, 0x41DFFFFFE0000000
  %12 = select i1 %11, float %10, float 0x41DFFFFFE0000000
  %13 = fcmp ogt float %12, 0xC1DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0xC1DFFFFFE0000000
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.ceil.f32(float %17) #13
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %24, i32 %15, i32 %23) #13
  store i8 1, i8* %3, align 8
  %25 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %24, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %25, %struct.SkRect* dereferenceable(16) %7, i32 1, i1 zeroext false) #13
  %26 = load i8, i8* %3, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %6
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %2, %6
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = tail call { i64, i64 } @_ZNK8SkCanvas19getDeviceClipBoundsEv(%class.SkCanvas* %30) #13
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = extractvalue { i64, i64 } %31, 1
  %34 = bitcast %struct.SkIRect* %1 to i64*
  store i64 %32, i64* %34, align 4
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %36 = bitcast i32* %35 to i64*
  store i64 %33, i64* %36, align 4
  %37 = shl i64 %33, 32
  %38 = ashr exact i64 %37, 32
  %39 = shl i64 %32, 32
  %40 = ashr exact i64 %39, 32
  %41 = sub nsw i64 %38, %40
  %42 = ashr i64 %33, 32
  %43 = ashr i64 %32, 32
  %44 = sub nsw i64 %42, %43
  %45 = icmp slt i64 %41, 1
  %46 = icmp slt i64 %44, 1
  %47 = or i1 %46, %45
  br i1 %47, label %52, label %48

48:                                               ; preds = %29
  %49 = or i64 %41, %44
  %50 = add nsw i64 %49, 2147483648
  %51 = icmp ult i64 %50, 4294967296
  br label %52

52:                                               ; preds = %29, %48
  %53 = phi i1 [ %51, %48 ], [ false, %29 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9drawColorEj11SkBlendMode(%"class.cc::RecordPaintCanvas"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %7 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  %8 = call i64 @_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRjR11SkBlendModeEEEmDpOT0_(%"class.cc::DisplayItemList"* %7, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRjR11SkBlendModeEEEmDpOT0_(%"class.cc::DisplayItemList"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #13
  %80 = load i32, i32* %1, align 4
  %81 = load i32, i32* %2, align 4
  %82 = bitcast i8* %79 to i32*
  %83 = getelementptr inbounds i8, i8* %79, i64 4
  %84 = bitcast i8* %83 to i32*
  store i32 %80, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %79, i64 8
  %86 = bitcast i8* %85 to i32*
  store i32 %81, i32* %86, align 4
  store i32 4102, i32* %82, align 4
  %87 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %88 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %89 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %87) #13
  %90 = zext i1 %89 to i8
  %91 = load i8, i8* %88, align 4
  %92 = shl nuw nsw i8 %90, 2
  %93 = and i8 %91, 4
  %94 = or i8 %93, %92
  %95 = and i8 %91, -61
  %96 = or i8 %94, %95
  %97 = and i8 %91, 8
  %98 = or i8 %96, %97
  %99 = and i8 %91, 16
  %100 = and i8 %91, 32
  %101 = or i8 %98, %99
  %102 = or i8 %101, %100
  store i8 %102, i8* %88, align 4
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas5clearEj(%"class.cc::RecordPaintCanvas"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %5 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %6 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %5, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  store i32 1, i32* %4, align 4
  %8 = call i64 @_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRj11SkBlendModeEEEmDpOT0_(%"class.cc::DisplayItemList"* %6, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11DrawColorOpEJRj11SkBlendModeEEEmDpOT0_(%"class.cc::DisplayItemList"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  %17 = ptrtoint i64* %15 to i64
  br i1 %16, label %22, label %18

18:                                               ; preds = %10
  store i64 %6, i64* %13, align 8
  %19 = getelementptr inbounds i64, i64* %13, i64 1
  %20 = ptrtoint i64* %19 to i64
  %21 = bitcast i64** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %78

22:                                               ; preds = %10
  %23 = ptrtoint i64* %13 to i64
  %24 = bitcast i64** %12 to i64*
  %25 = bitcast %"class.std::__1::vector.75"* %11 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.75"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #15
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i64** %14 to i64*
  %35 = sub i64 %17, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %28
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  store i64 %6, i64* %54, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 1
  %58 = ptrtoint i64* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %11, i64 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %24, align 8
  %62 = ptrtoint i64* %60 to i64
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds i64, i64* %54, i64 %65
  %67 = ptrtoint i64* %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %51
  %70 = bitcast i64* %66 to i8*
  %71 = bitcast i64* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #13
  %72 = load i64*, i64** %59, align 8
  br label %73

73:                                               ; preds = %69, %51
  %74 = phi i64* [ %60, %51 ], [ %72, %69 ]
  store i64 %67, i64* %25, align 8
  store i64 %58, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %75 = icmp eq i64* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = bitcast i64* %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %76, %73, %18, %3
  %79 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %4, i64 16) #13
  %80 = load i32, i32* %1, align 4
  %81 = load i32, i32* %2, align 4
  %82 = bitcast i8* %79 to i32*
  %83 = getelementptr inbounds i8, i8* %79, i64 4
  %84 = bitcast i8* %83 to i32*
  store i32 %80, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %79, i64 8
  %86 = bitcast i8* %85 to i32*
  store i32 %81, i32* %86, align 4
  store i32 4102, i32* %82, align 4
  %87 = bitcast i8* %79 to %"class.cc::PaintOp"*
  %88 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %89 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %87) #13
  %90 = zext i1 %89 to i8
  %91 = load i8, i8* %88, align 4
  %92 = shl nuw nsw i8 %90, 2
  %93 = and i8 %91, 4
  %94 = or i8 %93, %92
  %95 = and i8 %91, -61
  %96 = or i8 %94, %95
  %97 = and i8 %91, 8
  %98 = or i8 %96, %97
  %99 = and i8 %91, 16
  %100 = and i8 %91, 32
  %101 = or i8 %98, %99
  %102 = or i8 %101, %100
  store i8 %102, i8* %88, align 4
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas8drawLineEffffRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, float, float, float, float, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  store float %1, float* %7, align 4
  store float %2, float* %8, align 4
  store float %3, float* %9, align 4
  store float %4, float* %10, align 4
  %11 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %12 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %11, align 8
  %13 = call i64 @_ZN2cc15DisplayItemList4pushINS_10DrawLineOpEJRfS3_S3_S3_RKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"* %12, float* nonnull dereferenceable(4) %7, float* nonnull dereferenceable(4) %8, float* nonnull dereferenceable(4) %9, float* nonnull dereferenceable(4) %10, %"class.cc::PaintFlags"* dereferenceable(72) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_10DrawLineOpEJRfS3_S3_S3_RKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"*, float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %81

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %16, %18
  %20 = ptrtoint i64* %18 to i64
  br i1 %19, label %25, label %21

21:                                               ; preds = %13
  store i64 %9, i64* %16, align 8
  %22 = getelementptr inbounds i64, i64* %16, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = bitcast i64** %15 to i64*
  store i64 %23, i64* %24, align 8
  br label %81

25:                                               ; preds = %13
  %26 = ptrtoint i64* %16 to i64
  %27 = bitcast i64** %15 to i64*
  %28 = bitcast %"class.std::__1::vector.75"* %14 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.75"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #15
  unreachable

36:                                               ; preds = %25
  %37 = bitcast i64** %17 to i64*
  %38 = sub i64 %20, %29
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #15
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %36 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #14
  %53 = bitcast i8* %52 to i64*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi i64* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds i64, i64* %56, i64 %31
  %58 = getelementptr inbounds i64, i64* %56, i64 %55
  %59 = ptrtoint i64* %58 to i64
  store i64 %9, i64* %57, align 8
  %60 = getelementptr inbounds i64, i64* %57, i64 1
  %61 = ptrtoint i64* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %14, i64 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = load i64, i64* %27, align 8
  %65 = ptrtoint i64* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i64, i64* %57, i64 %68
  %70 = ptrtoint i64* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %54
  %73 = bitcast i64* %69 to i8*
  %74 = bitcast i64* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #13
  %75 = load i64*, i64** %62, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi i64* [ %63, %54 ], [ %75, %72 ]
  store i64 %70, i64* %28, align 8
  store i64 %61, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i64* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %79, %76, %21, %6
  %82 = tail call %"class.cc::DrawLineOp"* @_ZN2cc13PaintOpBuffer4pushINS_10DrawLineOpEJRfS3_S3_S3_RKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %7, float* dereferenceable(4) %1, float* dereferenceable(4) %2, float* dereferenceable(4) %3, float* dereferenceable(4) %4, %"class.cc::PaintFlags"* dereferenceable(72) %5)
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas8drawRectERK6SkRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %80

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  %19 = ptrtoint i64* %17 to i64
  br i1 %18, label %24, label %20

20:                                               ; preds = %12
  store i64 %8, i64* %15, align 8
  %21 = getelementptr inbounds i64, i64* %15, i64 1
  %22 = ptrtoint i64* %21 to i64
  %23 = bitcast i64** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %80

24:                                               ; preds = %12
  %25 = ptrtoint i64* %15 to i64
  %26 = bitcast i64** %14 to i64*
  %27 = bitcast %"class.std::__1::vector.75"* %13 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.75"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #15
  unreachable

35:                                               ; preds = %24
  %36 = bitcast i64** %16 to i64*
  %37 = sub i64 %19, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #15
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #14
  %52 = bitcast i8* %51 to i64*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi i64* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds i64, i64* %55, i64 %30
  %57 = getelementptr inbounds i64, i64* %55, i64 %54
  %58 = ptrtoint i64* %57 to i64
  store i64 %8, i64* %56, align 8
  %59 = getelementptr inbounds i64, i64* %56, i64 1
  %60 = ptrtoint i64* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %26, align 8
  %64 = ptrtoint i64* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds i64, i64* %56, i64 %67
  %69 = ptrtoint i64* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  %72 = bitcast i64* %68 to i8*
  %73 = bitcast i64* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #13
  %74 = load i64*, i64** %61, align 8
  br label %75

75:                                               ; preds = %71, %53
  %76 = phi i64* [ %62, %53 ], [ %74, %71 ]
  store i64 %69, i64* %27, align 8
  store i64 %60, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast i64* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %75, %20, %3
  %81 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %6, i64 96) #13
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -256
  %85 = or i32 %84, 15
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds i8, i8* %81, i64 8
  %87 = bitcast i8* %86 to %"class.cc::PaintFlags"*
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %87, %"class.cc::PaintFlags"* dereferenceable(72) %2) #13
  %88 = getelementptr inbounds i8, i8* %81, i64 80
  %89 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %89, i64 16, i1 false) #13
  %90 = load i32, i32* %82, align 8
  %91 = and i32 %90, 255
  %92 = or i32 %91, 24576
  store i32 %92, i32* %82, align 8
  %93 = bitcast i8* %81 to %"class.cc::PaintOpWithFlags"*
  %94 = bitcast i8* %86 to %class.SkPathEffect**
  %95 = load %class.SkPathEffect*, %class.SkPathEffect** %94, align 8
  %96 = icmp ne %class.SkPathEffect* %95, null
  %97 = zext i1 %96 to i32
  %98 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 8
  %99 = load i32, i32* %98, align 8
  %100 = add nsw i32 %99, %97
  %101 = bitcast i8* %81 to %"class.cc::PaintOp"*
  store i32 %100, i32* %98, align 8
  %102 = getelementptr inbounds i8, i8* %81, i64 72
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 8
  %105 = trunc i16 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 9
  %109 = load i8, i8* %108, align 4
  %110 = or i8 %107, %109
  store i8 %110, i8* %108, align 4
  %111 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %93) #13
  %112 = zext i1 %111 to i8
  %113 = load i8, i8* %108, align 4
  %114 = shl nuw nsw i8 %112, 1
  %115 = and i8 %113, 2
  %116 = or i8 %115, %114
  %117 = and i8 %113, -3
  %118 = or i8 %116, %117
  store i8 %118, i8* %108, align 4
  %119 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %101) #13
  %120 = zext i1 %119 to i8
  %121 = load i8, i8* %108, align 4
  %122 = shl nuw nsw i8 %120, 2
  %123 = and i8 %121, 4
  %124 = or i8 %123, %122
  %125 = and i8 %121, -61
  %126 = or i8 %124, %125
  %127 = and i8 %121, 8
  %128 = or i8 %126, %127
  %129 = and i8 %121, 16
  %130 = and i8 %121, 32
  %131 = or i8 %128, %129
  %132 = or i8 %131, %130
  store i8 %132, i8* %108, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9drawIRectERK7SkIRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %80

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  %19 = ptrtoint i64* %17 to i64
  br i1 %18, label %24, label %20

20:                                               ; preds = %12
  store i64 %8, i64* %15, align 8
  %21 = getelementptr inbounds i64, i64* %15, i64 1
  %22 = ptrtoint i64* %21 to i64
  %23 = bitcast i64** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %80

24:                                               ; preds = %12
  %25 = ptrtoint i64* %15 to i64
  %26 = bitcast i64** %14 to i64*
  %27 = bitcast %"class.std::__1::vector.75"* %13 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.75"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #15
  unreachable

35:                                               ; preds = %24
  %36 = bitcast i64** %16 to i64*
  %37 = sub i64 %19, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #15
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #14
  %52 = bitcast i8* %51 to i64*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi i64* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds i64, i64* %55, i64 %30
  %57 = getelementptr inbounds i64, i64* %55, i64 %54
  %58 = ptrtoint i64* %57 to i64
  store i64 %8, i64* %56, align 8
  %59 = getelementptr inbounds i64, i64* %56, i64 1
  %60 = ptrtoint i64* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %26, align 8
  %64 = ptrtoint i64* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds i64, i64* %56, i64 %67
  %69 = ptrtoint i64* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  %72 = bitcast i64* %68 to i8*
  %73 = bitcast i64* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #13
  %74 = load i64*, i64** %61, align 8
  br label %75

75:                                               ; preds = %71, %53
  %76 = phi i64* [ %62, %53 ], [ %74, %71 ]
  store i64 %69, i64* %27, align 8
  store i64 %60, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast i64* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %75, %20, %3
  %81 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %6, i64 96) #13
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -256
  %85 = or i32 %84, 10
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds i8, i8* %81, i64 8
  %87 = bitcast i8* %86 to %"class.cc::PaintFlags"*
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %87, %"class.cc::PaintFlags"* dereferenceable(72) %2) #13
  %88 = getelementptr inbounds i8, i8* %81, i64 80
  %89 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %89, i64 16, i1 false) #13
  %90 = load i32, i32* %82, align 8
  %91 = and i32 %90, 255
  %92 = or i32 %91, 24576
  store i32 %92, i32* %82, align 8
  %93 = bitcast i8* %81 to %"class.cc::PaintOpWithFlags"*
  %94 = bitcast i8* %86 to %class.SkPathEffect**
  %95 = load %class.SkPathEffect*, %class.SkPathEffect** %94, align 8
  %96 = icmp ne %class.SkPathEffect* %95, null
  %97 = zext i1 %96 to i32
  %98 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 8
  %99 = load i32, i32* %98, align 8
  %100 = add nsw i32 %99, %97
  %101 = bitcast i8* %81 to %"class.cc::PaintOp"*
  store i32 %100, i32* %98, align 8
  %102 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 9
  %103 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %93) #13
  %104 = zext i1 %103 to i8
  %105 = load i8, i8* %102, align 4
  %106 = shl nuw nsw i8 %104, 1
  %107 = and i8 %105, 2
  %108 = or i8 %107, %106
  %109 = and i8 %105, -3
  %110 = or i8 %108, %109
  store i8 %110, i8* %102, align 4
  %111 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %101) #13
  %112 = zext i1 %111 to i8
  %113 = load i8, i8* %102, align 4
  %114 = shl nuw nsw i8 %112, 2
  %115 = and i8 %113, 4
  %116 = or i8 %115, %114
  %117 = and i8 %113, -61
  %118 = or i8 %116, %117
  %119 = and i8 %113, 8
  %120 = or i8 %118, %119
  %121 = and i8 %113, 16
  %122 = and i8 %113, 32
  %123 = or i8 %120, %121
  %124 = or i8 %123, %122
  store i8 %124, i8* %102, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas8drawOvalERK6SkRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %80

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  %19 = ptrtoint i64* %17 to i64
  br i1 %18, label %24, label %20

20:                                               ; preds = %12
  store i64 %8, i64* %15, align 8
  %21 = getelementptr inbounds i64, i64* %15, i64 1
  %22 = ptrtoint i64* %21 to i64
  %23 = bitcast i64** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %80

24:                                               ; preds = %12
  %25 = ptrtoint i64* %15 to i64
  %26 = bitcast i64** %14 to i64*
  %27 = bitcast %"class.std::__1::vector.75"* %13 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.75"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #15
  unreachable

35:                                               ; preds = %24
  %36 = bitcast i64** %16 to i64*
  %37 = sub i64 %19, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #15
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #14
  %52 = bitcast i8* %51 to i64*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi i64* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds i64, i64* %55, i64 %30
  %57 = getelementptr inbounds i64, i64* %55, i64 %54
  %58 = ptrtoint i64* %57 to i64
  store i64 %8, i64* %56, align 8
  %59 = getelementptr inbounds i64, i64* %56, i64 1
  %60 = ptrtoint i64* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %26, align 8
  %64 = ptrtoint i64* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds i64, i64* %56, i64 %67
  %69 = ptrtoint i64* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  %72 = bitcast i64* %68 to i8*
  %73 = bitcast i64* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #13
  %74 = load i64*, i64** %61, align 8
  br label %75

75:                                               ; preds = %71, %53
  %76 = phi i64* [ %62, %53 ], [ %74, %71 ]
  store i64 %69, i64* %27, align 8
  store i64 %60, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast i64* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %75, %20, %3
  %81 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %6, i64 96) #13
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -256
  %85 = or i32 %84, 12
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds i8, i8* %81, i64 8
  %87 = bitcast i8* %86 to %"class.cc::PaintFlags"*
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %87, %"class.cc::PaintFlags"* dereferenceable(72) %2) #13
  %88 = getelementptr inbounds i8, i8* %81, i64 80
  %89 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %89, i64 16, i1 false) #13
  %90 = load i32, i32* %82, align 8
  %91 = and i32 %90, 255
  %92 = or i32 %91, 24576
  store i32 %92, i32* %82, align 8
  %93 = bitcast i8* %81 to %"class.cc::PaintOpWithFlags"*
  %94 = bitcast i8* %86 to %class.SkPathEffect**
  %95 = load %class.SkPathEffect*, %class.SkPathEffect** %94, align 8
  %96 = icmp ne %class.SkPathEffect* %95, null
  %97 = zext i1 %96 to i32
  %98 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 8
  %99 = load i32, i32* %98, align 8
  %100 = add nsw i32 %99, %97
  %101 = bitcast i8* %81 to %"class.cc::PaintOp"*
  store i32 %100, i32* %98, align 8
  %102 = getelementptr inbounds i8, i8* %81, i64 72
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 8
  %105 = trunc i16 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 9
  %109 = load i8, i8* %108, align 4
  %110 = or i8 %107, %109
  store i8 %110, i8* %108, align 4
  %111 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %93) #13
  %112 = zext i1 %111 to i8
  %113 = load i8, i8* %108, align 4
  %114 = shl nuw nsw i8 %112, 1
  %115 = and i8 %113, 2
  %116 = or i8 %115, %114
  %117 = and i8 %113, -3
  %118 = or i8 %116, %117
  store i8 %118, i8* %108, align 4
  %119 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %101) #13
  %120 = zext i1 %119 to i8
  %121 = load i8, i8* %108, align 4
  %122 = shl nuw nsw i8 %120, 2
  %123 = and i8 %121, 4
  %124 = or i8 %123, %122
  %125 = and i8 %121, -61
  %126 = or i8 %124, %125
  %127 = and i8 %121, 8
  %128 = or i8 %126, %127
  %129 = and i8 %121, 16
  %130 = and i8 %121, 32
  %131 = or i8 %128, %129
  %132 = or i8 %131, %130
  store i8 %132, i8* %108, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9drawRRectERK7SkRRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %class.SkRRect* nocapture readonly dereferenceable(52), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %80

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  %19 = ptrtoint i64* %17 to i64
  br i1 %18, label %24, label %20

20:                                               ; preds = %12
  store i64 %8, i64* %15, align 8
  %21 = getelementptr inbounds i64, i64* %15, i64 1
  %22 = ptrtoint i64* %21 to i64
  %23 = bitcast i64** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %80

24:                                               ; preds = %12
  %25 = ptrtoint i64* %15 to i64
  %26 = bitcast i64** %14 to i64*
  %27 = bitcast %"class.std::__1::vector.75"* %13 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.75"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #15
  unreachable

35:                                               ; preds = %24
  %36 = bitcast i64** %16 to i64*
  %37 = sub i64 %19, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #15
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #14
  %52 = bitcast i8* %51 to i64*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi i64* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds i64, i64* %55, i64 %30
  %57 = getelementptr inbounds i64, i64* %55, i64 %54
  %58 = ptrtoint i64* %57 to i64
  store i64 %8, i64* %56, align 8
  %59 = getelementptr inbounds i64, i64* %56, i64 1
  %60 = ptrtoint i64* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %26, align 8
  %64 = ptrtoint i64* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds i64, i64* %56, i64 %67
  %69 = ptrtoint i64* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  %72 = bitcast i64* %68 to i8*
  %73 = bitcast i64* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #13
  %74 = load i64*, i64** %61, align 8
  br label %75

75:                                               ; preds = %71, %53
  %76 = phi i64* [ %62, %53 ], [ %74, %71 ]
  store i64 %69, i64* %27, align 8
  store i64 %60, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast i64* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %75, %20, %3
  %81 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %6, i64 136) #13
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -256
  %85 = or i32 %84, 16
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds i8, i8* %81, i64 8
  %87 = bitcast i8* %86 to %"class.cc::PaintFlags"*
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %87, %"class.cc::PaintFlags"* dereferenceable(72) %2) #13
  %88 = getelementptr inbounds i8, i8* %81, i64 80
  %89 = bitcast %class.SkRRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %89, i64 52, i1 false) #13
  %90 = load i32, i32* %82, align 8
  %91 = and i32 %90, 255
  %92 = or i32 %91, 34816
  store i32 %92, i32* %82, align 8
  %93 = bitcast i8* %81 to %"class.cc::PaintOpWithFlags"*
  %94 = bitcast i8* %86 to %class.SkPathEffect**
  %95 = load %class.SkPathEffect*, %class.SkPathEffect** %94, align 8
  %96 = icmp ne %class.SkPathEffect* %95, null
  %97 = zext i1 %96 to i32
  %98 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 8
  %99 = load i32, i32* %98, align 8
  %100 = add nsw i32 %99, %97
  %101 = bitcast i8* %81 to %"class.cc::PaintOp"*
  store i32 %100, i32* %98, align 8
  %102 = getelementptr inbounds i8, i8* %81, i64 72
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 8
  %105 = trunc i16 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 9
  %109 = load i8, i8* %108, align 4
  %110 = or i8 %107, %109
  store i8 %110, i8* %108, align 4
  %111 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %93) #13
  %112 = zext i1 %111 to i8
  %113 = load i8, i8* %108, align 4
  %114 = shl nuw nsw i8 %112, 1
  %115 = and i8 %113, 2
  %116 = or i8 %115, %114
  %117 = and i8 %113, -3
  %118 = or i8 %116, %117
  store i8 %118, i8* %108, align 4
  %119 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %101) #13
  %120 = zext i1 %119 to i8
  %121 = load i8, i8* %108, align 4
  %122 = shl nuw nsw i8 %120, 2
  %123 = and i8 %121, 4
  %124 = or i8 %123, %122
  %125 = and i8 %121, -61
  %126 = or i8 %124, %125
  %127 = and i8 %121, 8
  %128 = or i8 %126, %127
  %129 = and i8 %121, 16
  %130 = and i8 %121, 32
  %131 = or i8 %128, %129
  %132 = or i8 %131, %130
  store i8 %132, i8* %108, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas10drawDRRectERK7SkRRectS3_RKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %class.SkRRect* dereferenceable(52), %class.SkRRect* nocapture readonly dereferenceable(52), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %149, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)***
  %14 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %14, i64 31
  %16 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %15, align 8
  tail call void %16(%"class.cc::RecordPaintCanvas"* %0, %class.SkRRect* dereferenceable(52) %1, %"class.cc::PaintFlags"* dereferenceable(72) %3) #13
  br label %149

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %19 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %18, align 8
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 4
  %21 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 4, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 8
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %94

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 6
  %28 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 6, i32 0, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  %33 = ptrtoint i64* %31 to i64
  br i1 %32, label %38, label %34

34:                                               ; preds = %26
  store i64 %22, i64* %29, align 8
  %35 = getelementptr inbounds i64, i64* %29, i64 1
  %36 = ptrtoint i64* %35 to i64
  %37 = bitcast i64** %28 to i64*
  store i64 %36, i64* %37, align 8
  br label %94

38:                                               ; preds = %26
  %39 = ptrtoint i64* %29 to i64
  %40 = bitcast i64** %28 to i64*
  %41 = bitcast %"class.std::__1::vector.75"* %27 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::vector.75"* %27 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #15
  unreachable

49:                                               ; preds = %38
  %50 = bitcast i64** %30 to i64*
  %51 = sub i64 %33, %42
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, 1152921504606846975
  br i1 %53, label %54, label %62

54:                                               ; preds = %49
  %55 = ashr exact i64 %51, 2
  %56 = icmp ult i64 %55, %45
  %57 = select i1 %56, i64 %45, i64 %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %54
  %60 = icmp ugt i64 %57, 2305843009213693951
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  tail call void @abort() #15
  unreachable

62:                                               ; preds = %59, %49
  %63 = phi i64 [ %57, %59 ], [ 2305843009213693951, %49 ]
  %64 = shl i64 %63, 3
  %65 = tail call i8* @_Znwm(i64 %64) #14
  %66 = bitcast i8* %65 to i64*
  br label %67

67:                                               ; preds = %62, %54
  %68 = phi i64 [ %63, %62 ], [ 0, %54 ]
  %69 = phi i64* [ %66, %62 ], [ null, %54 ]
  %70 = getelementptr inbounds i64, i64* %69, i64 %44
  %71 = getelementptr inbounds i64, i64* %69, i64 %68
  %72 = ptrtoint i64* %71 to i64
  store i64 %22, i64* %70, align 8
  %73 = getelementptr inbounds i64, i64* %70, i64 1
  %74 = ptrtoint i64* %73 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %27, i64 0, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = load i64, i64* %40, align 8
  %78 = ptrtoint i64* %76 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds i64, i64* %70, i64 %81
  %83 = ptrtoint i64* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %67
  %86 = bitcast i64* %82 to i8*
  %87 = bitcast i64* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 %79, i1 false) #13
  %88 = load i64*, i64** %75, align 8
  br label %89

89:                                               ; preds = %85, %67
  %90 = phi i64* [ %76, %67 ], [ %88, %85 ]
  store i64 %83, i64* %41, align 8
  store i64 %74, i64* %40, align 8
  store i64 %72, i64* %50, align 8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = bitcast i64* %90 to i8*
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %92, %89, %34, %17
  %95 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %20, i64 184) #13
  %96 = bitcast i8* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, -256
  %99 = or i32 %98, 7
  store i32 %99, i32* %96, align 4
  %100 = getelementptr inbounds i8, i8* %95, i64 8
  %101 = bitcast i8* %100 to %"class.cc::PaintFlags"*
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %101, %"class.cc::PaintFlags"* dereferenceable(72) %3) #13
  %102 = getelementptr inbounds i8, i8* %95, i64 80
  %103 = bitcast %class.SkRRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 4 %103, i64 52, i1 false) #13
  %104 = getelementptr inbounds i8, i8* %95, i64 132
  %105 = bitcast %class.SkRRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 52, i1 false) #13
  %106 = load i32, i32* %96, align 8
  %107 = and i32 %106, 255
  %108 = or i32 %107, 47104
  store i32 %108, i32* %96, align 8
  %109 = bitcast i8* %95 to %"class.cc::PaintOpWithFlags"*
  %110 = bitcast i8* %100 to %class.SkPathEffect**
  %111 = load %class.SkPathEffect*, %class.SkPathEffect** %110, align 8
  %112 = icmp ne %class.SkPathEffect* %111, null
  %113 = zext i1 %112 to i32
  %114 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 4, i32 8
  %115 = load i32, i32* %114, align 8
  %116 = add nsw i32 %115, %113
  %117 = bitcast i8* %95 to %"class.cc::PaintOp"*
  store i32 %116, i32* %114, align 8
  %118 = getelementptr inbounds i8, i8* %95, i64 72
  %119 = bitcast i8* %118 to i16*
  %120 = load i16, i16* %119, align 8
  %121 = trunc i16 %120 to i8
  %122 = and i8 %121, 1
  %123 = xor i8 %122, 1
  %124 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %19, i64 0, i32 4, i32 9
  %125 = load i8, i8* %124, align 4
  %126 = or i8 %123, %125
  store i8 %126, i8* %124, align 4
  %127 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %109) #13
  %128 = zext i1 %127 to i8
  %129 = load i8, i8* %124, align 4
  %130 = shl nuw nsw i8 %128, 1
  %131 = and i8 %129, 2
  %132 = or i8 %131, %130
  %133 = and i8 %129, -3
  %134 = or i8 %132, %133
  store i8 %134, i8* %124, align 4
  %135 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %117) #13
  %136 = zext i1 %135 to i8
  %137 = load i8, i8* %124, align 4
  %138 = shl nuw nsw i8 %136, 2
  %139 = and i8 %137, 4
  %140 = or i8 %139, %138
  %141 = and i8 %137, -61
  %142 = or i8 %140, %141
  %143 = and i8 %137, 8
  %144 = or i8 %142, %143
  %145 = and i8 %137, 16
  %146 = and i8 %137, 32
  %147 = or i8 %144, %145
  %148 = or i8 %147, %146
  store i8 %148, i8* %124, align 4
  br label %149

149:                                              ; preds = %4, %94, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas13drawRoundRectERK6SkRectffRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %struct.SkRect* dereferenceable(16), float, float, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkRRect, align 4
  %7 = fcmp ogt float %2, 0.000000e+00
  %8 = fcmp ogt float %3, 0.000000e+00
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = bitcast %class.SkRRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 52, i1 false) #13
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %6, %struct.SkRect* dereferenceable(16) %1, float %2, float %3) #13
  %12 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)***
  %13 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %13, i64 31
  %15 = load void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %14, align 8
  call void %15(%"class.cc::RecordPaintCanvas"* %0, %class.SkRRect* nonnull dereferenceable(52) %6, %"class.cc::PaintFlags"* dereferenceable(72) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #13
  br label %21

16:                                               ; preds = %5
  %17 = bitcast %"class.cc::RecordPaintCanvas"* %0 to void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)***
  %18 = load void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %18, i64 28
  %20 = load void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)** %19, align 8
  tail call void %20(%"class.cc::RecordPaintCanvas"* %0, %struct.SkRect* dereferenceable(16) %1, %"class.cc::PaintFlags"* dereferenceable(72) %4) #13
  br label %21

21:                                               ; preds = %16, %10
  ret void
}

declare void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas8drawPathERK6SkPathRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %80

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  %19 = ptrtoint i64* %17 to i64
  br i1 %18, label %24, label %20

20:                                               ; preds = %12
  store i64 %8, i64* %15, align 8
  %21 = getelementptr inbounds i64, i64* %15, i64 1
  %22 = ptrtoint i64* %21 to i64
  %23 = bitcast i64** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %80

24:                                               ; preds = %12
  %25 = ptrtoint i64* %15 to i64
  %26 = bitcast i64** %14 to i64*
  %27 = bitcast %"class.std::__1::vector.75"* %13 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.75"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #15
  unreachable

35:                                               ; preds = %24
  %36 = bitcast i64** %16 to i64*
  %37 = sub i64 %19, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #15
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #14
  %52 = bitcast i8* %51 to i64*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi i64* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds i64, i64* %55, i64 %30
  %57 = getelementptr inbounds i64, i64* %55, i64 %54
  %58 = ptrtoint i64* %57 to i64
  store i64 %8, i64* %56, align 8
  %59 = getelementptr inbounds i64, i64* %56, i64 1
  %60 = ptrtoint i64* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %26, align 8
  %64 = ptrtoint i64* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds i64, i64* %56, i64 %67
  %69 = ptrtoint i64* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  %72 = bitcast i64* %68 to i8*
  %73 = bitcast i64* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #13
  %74 = load i64*, i64** %61, align 8
  br label %75

75:                                               ; preds = %71, %53
  %76 = phi i64* [ %62, %53 ], [ %74, %71 ]
  store i64 %69, i64* %27, align 8
  store i64 %60, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast i64* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %75, %20, %3
  %81 = tail call %"class.cc::DrawPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10DrawPathOpEJRK6SkPathRKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %6, %class.SkPath* dereferenceable(16) %1, %"class.cc::PaintFlags"* dereferenceable(72) %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9drawImageERKNS_10PaintImageEffRK17SkSamplingOptionsPKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %"class.cc::PaintImage"* dereferenceable(104), float, float, %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*) unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca %"class.cc::PaintFlags"*, align 8
  store float %2, float* %7, align 4
  store float %3, float* %8, align 4
  store %"class.cc::PaintFlags"* %5, %"class.cc::PaintFlags"** %9, align 8
  %10 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %11 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %10, align 8
  %12 = call i64 @_ZN2cc15DisplayItemList4pushINS_11DrawImageOpEJRKNS_10PaintImageERfS6_RK17SkSamplingOptionsRPKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"* %11, %"class.cc::PaintImage"* dereferenceable(104) %1, float* nonnull dereferenceable(4) %7, float* nonnull dereferenceable(4) %8, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"** nonnull dereferenceable(8) %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_11DrawImageOpEJRKNS_10PaintImageERfS6_RK17SkSamplingOptionsRPKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"*, %"class.cc::PaintImage"* dereferenceable(104), float* dereferenceable(4), float* dereferenceable(4), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %81

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %16, %18
  %20 = ptrtoint i64* %18 to i64
  br i1 %19, label %25, label %21

21:                                               ; preds = %13
  store i64 %9, i64* %16, align 8
  %22 = getelementptr inbounds i64, i64* %16, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = bitcast i64** %15 to i64*
  store i64 %23, i64* %24, align 8
  br label %81

25:                                               ; preds = %13
  %26 = ptrtoint i64* %16 to i64
  %27 = bitcast i64** %15 to i64*
  %28 = bitcast %"class.std::__1::vector.75"* %14 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.75"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #15
  unreachable

36:                                               ; preds = %25
  %37 = bitcast i64** %17 to i64*
  %38 = sub i64 %20, %29
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #15
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %36 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #14
  %53 = bitcast i8* %52 to i64*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi i64* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds i64, i64* %56, i64 %31
  %58 = getelementptr inbounds i64, i64* %56, i64 %55
  %59 = ptrtoint i64* %58 to i64
  store i64 %9, i64* %57, align 8
  %60 = getelementptr inbounds i64, i64* %57, i64 1
  %61 = ptrtoint i64* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %14, i64 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = load i64, i64* %27, align 8
  %65 = ptrtoint i64* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i64, i64* %57, i64 %68
  %70 = ptrtoint i64* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %54
  %73 = bitcast i64* %69 to i8*
  %74 = bitcast i64* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #13
  %75 = load i64*, i64** %62, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi i64* [ %63, %54 ], [ %75, %72 ]
  store i64 %70, i64* %28, align 8
  store i64 %61, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i64* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %79, %76, %21, %6
  %82 = tail call %"class.cc::DrawImageOp"* @_ZN2cc13PaintOpBuffer4pushINS_11DrawImageOpEJRKNS_10PaintImageERfS6_RK17SkSamplingOptionsRPKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %7, %"class.cc::PaintImage"* dereferenceable(104) %1, float* dereferenceable(4) %2, float* dereferenceable(4) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"** dereferenceable(8) %5)
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas13drawImageRectERKNS_10PaintImageERK6SkRectS6_RK17SkSamplingOptionsPKNS_10PaintFlagsEN8SkCanvas17SrcRectConstraintE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %"class.cc::PaintImage"* dereferenceable(104), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.cc::PaintFlags"*, align 8
  %9 = alloca i32, align 4
  store %"class.cc::PaintFlags"* %5, %"class.cc::PaintFlags"** %8, align 8
  store i32 %6, i32* %9, align 4
  %10 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %11 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %10, align 8
  %12 = call i64 @_ZN2cc15DisplayItemList4pushINS_15DrawImageRectOpEJRKNS_10PaintImageERK6SkRectS8_RK17SkSamplingOptionsRPKNS_10PaintFlagsERN8SkCanvas17SrcRectConstraintEEEEmDpOT0_(%"class.cc::DisplayItemList"* %11, %"class.cc::PaintImage"* dereferenceable(104) %1, %struct.SkRect* dereferenceable(16) %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"** nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_15DrawImageRectOpEJRKNS_10PaintImageERK6SkRectS8_RK17SkSamplingOptionsRPKNS_10PaintFlagsERN8SkCanvas17SrcRectConstraintEEEEmDpOT0_(%"class.cc::DisplayItemList"*, %"class.cc::PaintImage"* dereferenceable(104), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %82

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %17, %19
  %21 = ptrtoint i64* %19 to i64
  br i1 %20, label %26, label %22

22:                                               ; preds = %14
  store i64 %10, i64* %17, align 8
  %23 = getelementptr inbounds i64, i64* %17, i64 1
  %24 = ptrtoint i64* %23 to i64
  %25 = bitcast i64** %16 to i64*
  store i64 %24, i64* %25, align 8
  br label %82

26:                                               ; preds = %14
  %27 = ptrtoint i64* %17 to i64
  %28 = bitcast i64** %16 to i64*
  %29 = bitcast %"class.std::__1::vector.75"* %15 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.75"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #15
  unreachable

37:                                               ; preds = %26
  %38 = bitcast i64** %18 to i64*
  %39 = sub i64 %21, %30
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %37 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i64*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i64* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i64, i64* %57, i64 %32
  %59 = getelementptr inbounds i64, i64* %57, i64 %56
  %60 = ptrtoint i64* %59 to i64
  store i64 %10, i64* %58, align 8
  %61 = getelementptr inbounds i64, i64* %58, i64 1
  %62 = ptrtoint i64* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %15, i64 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i64, i64* %28, align 8
  %66 = ptrtoint i64* %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 3
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds i64, i64* %58, i64 %69
  %71 = ptrtoint i64* %70 to i64
  %72 = icmp sgt i64 %67, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %55
  %74 = bitcast i64* %70 to i8*
  %75 = bitcast i64* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 %67, i1 false) #13
  %76 = load i64*, i64** %63, align 8
  br label %77

77:                                               ; preds = %73, %55
  %78 = phi i64* [ %64, %55 ], [ %76, %73 ]
  store i64 %71, i64* %29, align 8
  store i64 %62, i64* %28, align 8
  store i64 %60, i64* %38, align 8
  %79 = icmp eq i64* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = bitcast i64* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %80, %77, %22, %7
  %83 = tail call %"class.cc::DrawImageRectOp"* @_ZN2cc13PaintOpBuffer4pushINS_15DrawImageRectOpEJRKNS_10PaintImageERK6SkRectS8_RK17SkSamplingOptionsRPKNS_10PaintFlagsERN8SkCanvas17SrcRectConstraintEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %8, %"class.cc::PaintImage"* dereferenceable(104) %1, %struct.SkRect* dereferenceable(16) %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"** dereferenceable(8) %5, i32* dereferenceable(4) %6)
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas11drawSkottieE13scoped_refptrINS_14SkottieWrapperEERK6SkRectf(%"class.cc::RecordPaintCanvas"* nocapture readonly, %"class.cc::SkottieWrapper"*, %struct.SkRect* nocapture readonly dereferenceable(16), float) unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %6 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %6, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %6, i64 0, i32 4, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %6, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %81

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %6, i64 0, i32 6
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %6, i64 0, i32 6, i32 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %6, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %16, %18
  %20 = ptrtoint i64* %18 to i64
  br i1 %19, label %25, label %21

21:                                               ; preds = %13
  store i64 %9, i64* %16, align 8
  %22 = getelementptr inbounds i64, i64* %16, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = bitcast i64** %15 to i64*
  store i64 %23, i64* %24, align 8
  br label %81

25:                                               ; preds = %13
  %26 = ptrtoint i64* %16 to i64
  %27 = bitcast i64** %15 to i64*
  %28 = bitcast %"class.std::__1::vector.75"* %14 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.75"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #15
  unreachable

36:                                               ; preds = %25
  %37 = bitcast i64** %17 to i64*
  %38 = sub i64 %20, %29
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #15
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %36 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #14
  %53 = bitcast i8* %52 to i64*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi i64* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds i64, i64* %56, i64 %31
  %58 = getelementptr inbounds i64, i64* %56, i64 %55
  %59 = ptrtoint i64* %58 to i64
  store i64 %9, i64* %57, align 8
  %60 = getelementptr inbounds i64, i64* %57, i64 1
  %61 = ptrtoint i64* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %14, i64 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = load i64, i64* %27, align 8
  %65 = ptrtoint i64* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i64, i64* %57, i64 %68
  %70 = ptrtoint i64* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %54
  %73 = bitcast i64* %69 to i8*
  %74 = bitcast i64* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #13
  %75 = load i64*, i64** %62, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi i64* [ %63, %54 ], [ %75, %72 ]
  store i64 %70, i64* %28, align 8
  store i64 %61, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i64* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %4, %21, %76, %79
  %82 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %7, i64 40) #13
  %83 = bitcast i8* %82 to %"class.cc::DrawSkottieOp"*
  %84 = bitcast %struct.SkRect* %2 to <2 x float>*
  %85 = load <2 x float>, <2 x float>* %84, align 4
  %86 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %87 = bitcast float* %86 to <2 x float>*
  %88 = load <2 x float>, <2 x float>* %87, align 4
  tail call void @_ZN2cc13DrawSkottieOpC1E13scoped_refptrINS_14SkottieWrapperEE6SkRectf(%"class.cc::DrawSkottieOp"* %83, %"class.cc::SkottieWrapper"* %1, <2 x float> %85, <2 x float> %88, float %3) #13
  %89 = bitcast i8* %82 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 255
  %92 = or i32 %91, 10240
  store i32 %92, i32* %89, align 8
  %93 = bitcast i8* %82 to %"class.cc::PaintOp"*
  %94 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %6, i64 0, i32 4, i32 9
  %95 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %93) #13
  %96 = zext i1 %95 to i8
  %97 = load i8, i8* %94, align 4
  %98 = shl nuw nsw i8 %96, 2
  %99 = and i8 %97, 4
  %100 = or i8 %99, %98
  %101 = and i8 %97, -61
  %102 = or i8 %100, %101
  %103 = and i8 %97, 8
  %104 = or i8 %102, %103
  %105 = and i8 %97, 16
  %106 = and i8 %97, 32
  %107 = or i8 %104, %105
  %108 = or i8 %107, %106
  store i8 %108, i8* %94, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %class.sk_sp.180*, float, float, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  store float %2, float* %6, align 4
  store float %3, float* %7, align 4
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %9 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 4
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 4, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %84

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 6
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 6, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  %23 = ptrtoint i64* %21 to i64
  br i1 %22, label %28, label %24

24:                                               ; preds = %16
  store i64 %12, i64* %19, align 8
  %25 = getelementptr inbounds i64, i64* %19, i64 1
  %26 = ptrtoint i64* %25 to i64
  %27 = bitcast i64** %18 to i64*
  store i64 %26, i64* %27, align 8
  br label %84

28:                                               ; preds = %16
  %29 = ptrtoint i64* %19 to i64
  %30 = bitcast i64** %18 to i64*
  %31 = bitcast %"class.std::__1::vector.75"* %17 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 2305843009213693951
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::vector.75"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #15
  unreachable

39:                                               ; preds = %28
  %40 = bitcast i64** %20 to i64*
  %41 = sub i64 %23, %32
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, 1152921504606846975
  br i1 %43, label %44, label %52

44:                                               ; preds = %39
  %45 = ashr exact i64 %41, 2
  %46 = icmp ult i64 %45, %35
  %47 = select i1 %46, i64 %35, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i64 %47, 2305843009213693951
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @abort() #15
  unreachable

52:                                               ; preds = %49, %39
  %53 = phi i64 [ %47, %49 ], [ 2305843009213693951, %39 ]
  %54 = shl i64 %53, 3
  %55 = tail call i8* @_Znwm(i64 %54) #14
  %56 = bitcast i8* %55 to i64*
  br label %57

57:                                               ; preds = %52, %44
  %58 = phi i64 [ %53, %52 ], [ 0, %44 ]
  %59 = phi i64* [ %56, %52 ], [ null, %44 ]
  %60 = getelementptr inbounds i64, i64* %59, i64 %34
  %61 = getelementptr inbounds i64, i64* %59, i64 %58
  %62 = ptrtoint i64* %61 to i64
  store i64 %12, i64* %60, align 8
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = ptrtoint i64* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %17, i64 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = load i64, i64* %30, align 8
  %68 = ptrtoint i64* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i64, i64* %60, i64 %71
  %73 = ptrtoint i64* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %57
  %76 = bitcast i64* %72 to i8*
  %77 = bitcast i64* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #13
  %78 = load i64*, i64** %65, align 8
  br label %79

79:                                               ; preds = %75, %57
  %80 = phi i64* [ %66, %57 ], [ %78, %75 ]
  store i64 %73, i64* %31, align 8
  store i64 %64, i64* %30, align 8
  store i64 %62, i64* %40, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i64* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %24, %5
  %85 = call %"class.cc::DrawTextBlobOp"* @_ZN2cc13PaintOpBuffer4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %10, %class.sk_sp.180* dereferenceable(8) %1, float* nonnull dereferenceable(4) %6, float* nonnull dereferenceable(4) %7, %"class.cc::PaintFlags"* dereferenceable(72) %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffiRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %class.sk_sp.180*, float, float, i32, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  store float %2, float* %7, align 4
  store float %3, float* %8, align 4
  store i32 %4, i32* %9, align 4
  %10 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %11 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %10, align 8
  %12 = call i64 @_ZN2cc15DisplayItemList4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RiRKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"* %11, %class.sk_sp.180* dereferenceable(8) %1, float* nonnull dereferenceable(4) %7, float* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9, %"class.cc::PaintFlags"* dereferenceable(72) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RiRKNS_10PaintFlagsEEEEmDpOT0_(%"class.cc::DisplayItemList"*, %class.sk_sp.180* dereferenceable(8), float* dereferenceable(4), float* dereferenceable(4), i32* dereferenceable(4), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %81

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %16, %18
  %20 = ptrtoint i64* %18 to i64
  br i1 %19, label %25, label %21

21:                                               ; preds = %13
  store i64 %9, i64* %16, align 8
  %22 = getelementptr inbounds i64, i64* %16, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = bitcast i64** %15 to i64*
  store i64 %23, i64* %24, align 8
  br label %81

25:                                               ; preds = %13
  %26 = ptrtoint i64* %16 to i64
  %27 = bitcast i64** %15 to i64*
  %28 = bitcast %"class.std::__1::vector.75"* %14 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.75"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #15
  unreachable

36:                                               ; preds = %25
  %37 = bitcast i64** %17 to i64*
  %38 = sub i64 %20, %29
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #15
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %36 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #14
  %53 = bitcast i8* %52 to i64*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi i64* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds i64, i64* %56, i64 %31
  %58 = getelementptr inbounds i64, i64* %56, i64 %55
  %59 = ptrtoint i64* %58 to i64
  store i64 %9, i64* %57, align 8
  %60 = getelementptr inbounds i64, i64* %57, i64 1
  %61 = ptrtoint i64* %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %14, i64 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = load i64, i64* %27, align 8
  %65 = ptrtoint i64* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i64, i64* %57, i64 %68
  %70 = ptrtoint i64* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %54
  %73 = bitcast i64* %69 to i8*
  %74 = bitcast i64* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #13
  %75 = load i64*, i64** %62, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi i64* [ %63, %54 ], [ %75, %72 ]
  store i64 %70, i64* %28, align 8
  store i64 %61, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i64* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %79, %76, %21, %6
  %82 = tail call %"class.cc::DrawTextBlobOp"* @_ZN2cc13PaintOpBuffer4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RiRKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %7, %class.sk_sp.180* dereferenceable(8) %1, float* dereferenceable(4) %2, float* dereferenceable(4) %3, i32* dereferenceable(4) %4, %"class.cc::PaintFlags"* dereferenceable(72) %5)
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE(%"class.cc::RecordPaintCanvas"* nocapture readonly, %class.sk_sp.187* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.187, align 8
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 4, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %80

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  %19 = ptrtoint i64* %17 to i64
  br i1 %18, label %24, label %20

20:                                               ; preds = %12
  store i64 %8, i64* %15, align 8
  %21 = getelementptr inbounds i64, i64* %15, i64 1
  %22 = ptrtoint i64* %21 to i64
  %23 = bitcast i64** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %80

24:                                               ; preds = %12
  %25 = ptrtoint i64* %15 to i64
  %26 = bitcast i64** %14 to i64*
  %27 = bitcast %"class.std::__1::vector.75"* %13 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.75"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #15
  unreachable

35:                                               ; preds = %24
  %36 = bitcast i64** %16 to i64*
  %37 = sub i64 %19, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #15
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #14
  %52 = bitcast i8* %51 to i64*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi i64* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds i64, i64* %55, i64 %30
  %57 = getelementptr inbounds i64, i64* %55, i64 %54
  %58 = ptrtoint i64* %57 to i64
  store i64 %8, i64* %56, align 8
  %59 = getelementptr inbounds i64, i64* %56, i64 1
  %60 = ptrtoint i64* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %26, align 8
  %64 = ptrtoint i64* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds i64, i64* %56, i64 %67
  %69 = ptrtoint i64* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %53
  %72 = bitcast i64* %68 to i8*
  %73 = bitcast i64* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #13
  %74 = load i64*, i64** %61, align 8
  br label %75

75:                                               ; preds = %71, %53
  %76 = phi i64* [ %62, %53 ], [ %74, %71 ]
  store i64 %69, i64* %27, align 8
  store i64 %60, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast i64* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %75, %20, %2
  %81 = bitcast %class.sk_sp.187* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  %82 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %6, i64 16) #13
  %83 = bitcast i8* %82 to %"class.cc::DrawRecordOp"*
  %84 = getelementptr inbounds %class.sk_sp.187, %class.sk_sp.187* %3, i64 0, i32 0
  %85 = getelementptr inbounds %class.sk_sp.187, %class.sk_sp.187* %1, i64 0, i32 0
  %86 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %85, align 8
  %87 = icmp eq %"class.cc::PaintOpBuffer"* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %86, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 1 monotonic
  br label %91

91:                                               ; preds = %88, %80
  store %"class.cc::PaintOpBuffer"* %86, %"class.cc::PaintOpBuffer"** %84, align 8
  call void @_ZN2cc12DrawRecordOpC1E5sk_spIKNS_13PaintOpBufferEE(%"class.cc::DrawRecordOp"* %83, %class.sk_sp.187* nonnull %3) #13
  %92 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %84, align 8
  %93 = icmp eq %"class.cc::PaintOpBuffer"* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %92, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = bitcast %"class.cc::PaintOpBuffer"* %92 to %class.SkRefCntBase*
  %100 = bitcast %"class.cc::PaintOpBuffer"* %92 to void (%class.SkRefCntBase*)***
  %101 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, i64 2
  %103 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, align 8
  call void %103(%class.SkRefCntBase* nonnull %99) #13
  br label %104

104:                                              ; preds = %91, %94, %98
  %105 = bitcast i8* %82 to i32*
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 255
  %108 = or i32 %107, 4096
  store i32 %108, i32* %105, align 8
  call void @_ZN2cc13PaintOpBuffer14AnalyzeAddedOpINS_12DrawRecordOpEEEvPKT_(%"class.cc::PaintOpBuffer"* %6, %"class.cc::DrawRecordOp"* %83) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17RecordPaintCanvas11isClipEmptyEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %30

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.ceil.f32(float %10) #13
  %12 = fcmp olt float %11, 0x41DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0x41DFFFFFE0000000
  %14 = fcmp ogt float %13, 0xC1DFFFFFE0000000
  %15 = select i1 %14, float %13, float 0xC1DFFFFFE0000000
  %16 = fptosi float %15 to i32
  %17 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %18 = load float, float* %17, align 4
  %19 = tail call float @llvm.ceil.f32(float %18) #13
  %20 = fcmp olt float %19, 0x41DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0x41DFFFFFE0000000
  %22 = fcmp ogt float %21, 0xC1DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0xC1DFFFFFE0000000
  %24 = fptosi float %23 to i32
  %25 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %25, i32 %16, i32 %24) #13
  store i8 1, i8* %2, align 8
  %26 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %25, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %26, %struct.SkRect* dereferenceable(16) %8, i32 1, i1 zeroext false) #13
  %27 = load i8, i8* %2, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %5, %7
  %31 = phi %class.SkNoDrawCanvas* [ %6, %5 ], [ %25, %7 ]
  %32 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = bitcast %class.SkNoDrawCanvas* %31 to i1 (%class.SkCanvas*)***
  %34 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %34, i64 4
  %36 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %35, align 8
  %37 = tail call zeroext i1 %36(%class.SkCanvas* %32) #13
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17RecordPaintCanvas14getTotalMatrixEv(%class.SkMatrix* noalias sret, %"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3, i32 2
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.ceil.f32(float %9) #13
  %11 = fcmp olt float %10, 0x41DFFFFFE0000000
  %12 = select i1 %11, float %10, float 0x41DFFFFFE0000000
  %13 = fcmp ogt float %12, 0xC1DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0xC1DFFFFFE0000000
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3, i32 3
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.ceil.f32(float %17) #13
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %24, i32 %15, i32 %23) #13
  store i8 1, i8* %3, align 8
  %25 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %24, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %25, %struct.SkRect* dereferenceable(16) %7, i32 1, i1 zeroext false) #13
  %26 = load i8, i8* %3, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %6
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %2, %6
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret %0, %class.SkCanvas* %30) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc17RecordPaintCanvas16getLocalToDeviceEv(%class.SkM44* noalias sret, %"class.cc::RecordPaintCanvas"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3, i32 2
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.ceil.f32(float %9) #13
  %11 = fcmp olt float %10, 0x41DFFFFFE0000000
  %12 = select i1 %11, float %10, float 0x41DFFFFFE0000000
  %13 = fcmp ogt float %12, 0xC1DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0xC1DFFFFFE0000000
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 3, i32 3
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.ceil.f32(float %17) #13
  %19 = fcmp olt float %18, 0x41DFFFFFE0000000
  %20 = select i1 %19, float %18, float 0x41DFFFFFE0000000
  %21 = fcmp ogt float %20, 0xC1DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0xC1DFFFFFE0000000
  %23 = fptosi float %22 to i32
  %24 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas* %24, i32 %15, i32 %23) #13
  store i8 1, i8* %3, align 8
  %25 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %24, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %25, %struct.SkRect* dereferenceable(16) %7, i32 1, i1 zeroext false) #13
  %26 = load i8, i8* %3, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %6
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %2, %6
  %30 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* sret %0, %class.SkCanvas* %30) #13
  ret void
}

declare void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* sret, %class.SkCanvas*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas8AnnotateENS_11PaintCanvas14AnnotationTypeERK6SkRect5sk_spI6SkDataE(%"class.cc::RecordPaintCanvas"* nocapture readonly, i32, %struct.SkRect* dereferenceable(16), %class.sk_sp.188*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %7 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %7, i64 0, i32 4
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %7, i64 0, i32 4, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %7, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %82

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %7, i64 0, i32 6
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %7, i64 0, i32 6, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %7, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %17, %19
  %21 = ptrtoint i64* %19 to i64
  br i1 %20, label %26, label %22

22:                                               ; preds = %14
  store i64 %10, i64* %17, align 8
  %23 = getelementptr inbounds i64, i64* %17, i64 1
  %24 = ptrtoint i64* %23 to i64
  %25 = bitcast i64** %16 to i64*
  store i64 %24, i64* %25, align 8
  br label %82

26:                                               ; preds = %14
  %27 = ptrtoint i64* %17 to i64
  %28 = bitcast i64** %16 to i64*
  %29 = bitcast %"class.std::__1::vector.75"* %15 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 3
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 2305843009213693951
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.75"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #15
  unreachable

37:                                               ; preds = %26
  %38 = bitcast i64** %18 to i64*
  %39 = sub i64 %21, %30
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %37 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i64*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i64* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i64, i64* %57, i64 %32
  %59 = getelementptr inbounds i64, i64* %57, i64 %56
  %60 = ptrtoint i64* %59 to i64
  store i64 %10, i64* %58, align 8
  %61 = getelementptr inbounds i64, i64* %58, i64 1
  %62 = ptrtoint i64* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %15, i64 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i64, i64* %28, align 8
  %66 = ptrtoint i64* %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 3
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds i64, i64* %58, i64 %69
  %71 = ptrtoint i64* %70 to i64
  %72 = icmp sgt i64 %67, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %55
  %74 = bitcast i64* %70 to i8*
  %75 = bitcast i64* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 %67, i1 false) #13
  %76 = load i64*, i64** %63, align 8
  br label %77

77:                                               ; preds = %73, %55
  %78 = phi i64* [ %64, %55 ], [ %76, %73 ]
  store i64 %71, i64* %29, align 8
  store i64 %62, i64* %28, align 8
  store i64 %60, i64* %38, align 8
  %79 = icmp eq i64* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = bitcast i64* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %80, %77, %22, %4
  %83 = call %"class.cc::AnnotateOp"* @_ZN2cc13PaintOpBuffer4pushINS_10AnnotateOpEJRNS_11PaintCanvas14AnnotationTypeERK6SkRectR5sk_spI6SkDataEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %8, i32* nonnull dereferenceable(4) %5, %struct.SkRect* dereferenceable(16) %2, %class.sk_sp.188* dereferenceable(8) %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas16recordCustomDataEj(%"class.cc::RecordPaintCanvas"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #13
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %77, %74, %19, %2
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 8) #13
  %81 = bitcast i8* %80 to i32*
  %82 = getelementptr inbounds i8, i8* %80, i64 4
  %83 = bitcast i8* %82 to i32*
  store i32 %1, i32* %83, align 4
  store i32 2053, i32* %81, align 4
  %84 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %85 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 9
  %86 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %84) #13
  %87 = zext i1 %86 to i8
  %88 = load i8, i8* %85, align 4
  %89 = shl nuw nsw i8 %87, 2
  %90 = and i8 %88, 4
  %91 = or i8 %90, %89
  %92 = and i8 %88, -61
  %93 = or i8 %91, %92
  %94 = and i8 %88, 8
  %95 = or i8 %93, %94
  %96 = and i8 %88, 16
  %97 = and i8 %88, 32
  %98 = or i8 %95, %96
  %99 = or i8 %98, %97
  store i8 %99, i8* %85, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17RecordPaintCanvas9setNodeIdEi(%"class.cc::RecordPaintCanvas"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 1
  %4 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #13
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %77, %74, %19, %2
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 8) #13
  %81 = bitcast i8* %80 to i32*
  %82 = getelementptr inbounds i8, i8* %80, i64 4
  %83 = bitcast i8* %82 to i32*
  store i32 %1, i32* %83, align 4
  store i32 2075, i32* %81, align 4
  %84 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %85 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %4, i64 0, i32 4, i32 9
  %86 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %84) #13
  %87 = zext i1 %86 to i8
  %88 = load i8, i8* %85, align 4
  %89 = shl nuw nsw i8 %87, 2
  %90 = and i8 %88, 4
  %91 = or i8 %90, %89
  %92 = and i8 %88, -61
  %93 = or i8 %91, %92
  %94 = and i8 %88, 8
  %95 = or i8 %93, %94
  %96 = and i8 %88, 16
  %97 = and i8 %88, 32
  %98 = or i8 %95, %96
  %99 = or i8 %98, %97
  store i8 %99, i8* %85, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc17RecordPaintCanvas30InitializedWithRecordingBoundsEv(%"class.cc::RecordPaintCanvas"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 2
  %5 = load float, float* %4, align 4
  %6 = fcmp olt float %3, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.cc::RecordPaintCanvas", %"class.cc::RecordPaintCanvas"* %0, i64 0, i32 3, i32 3
  %11 = load float, float* %10, align 4
  %12 = fcmp olt float %9, %11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i1 [ false, %1 ], [ %12, %7 ]
  ret i1 %14
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD2Ev(%class.SkCanvas*) unnamed_addr #5

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::SaveLayerOp"* @_ZN2cc13PaintOpBuffer4pushINS_11SaveLayerOpEJRPK6SkRectRPKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %struct.SkRect** dereferenceable(8), %"class.cc::PaintFlags"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.cc::PaintFlags", align 8
  %5 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 96) #13
  %6 = bitcast i8* %5 to %"class.cc::SaveLayerOp"*
  %7 = load %struct.SkRect*, %struct.SkRect** %1, align 8
  %8 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %2, align 8
  %9 = bitcast %"class.cc::PaintFlags"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #13
  %10 = icmp eq %"class.cc::PaintFlags"* %8, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* nonnull %4, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %8) #13
  br label %13

12:                                               ; preds = %3
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %4) #13
  br label %13

13:                                               ; preds = %11, %12
  %14 = bitcast i8* %5 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, -256
  %17 = or i32 %16, 23
  store i32 %17, i32* %14, align 4
  %18 = getelementptr inbounds i8, i8* %5, i64 8
  %19 = bitcast i8* %18 to %"class.cc::PaintFlags"*
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %19, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %4) #13
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #13
  %20 = getelementptr inbounds i8, i8* %5, i64 80
  %21 = icmp eq %struct.SkRect* %7, null
  %22 = select i1 %21, %struct.SkRect* @_ZN2cc7PaintOp10kUnsetRectE, %struct.SkRect* %7
  %23 = bitcast %struct.SkRect* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 4 %23, i64 16, i1 false) #13
  %24 = load i32, i32* %14, align 8
  %25 = and i32 %24, 255
  %26 = or i32 %25, 24576
  store i32 %26, i32* %14, align 8
  %27 = bitcast i8* %5 to %"class.cc::PaintOpWithFlags"*
  %28 = bitcast i8* %18 to %class.SkPathEffect**
  %29 = load %class.SkPathEffect*, %class.SkPathEffect** %28, align 8
  %30 = icmp ne %class.SkPathEffect* %29, null
  %31 = zext i1 %30 to i32
  %32 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, %31
  %35 = bitcast i8* %5 to %"class.cc::PaintOp"*
  store i32 %34, i32* %32, align 8
  %36 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %37 = call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %27) #13
  %38 = zext i1 %37 to i8
  %39 = load i8, i8* %36, align 4
  %40 = shl nuw nsw i8 %38, 1
  %41 = and i8 %39, 2
  %42 = or i8 %41, %40
  %43 = and i8 %39, -3
  %44 = or i8 %42, %43
  store i8 %44, i8* %36, align 4
  %45 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %35) #13
  %46 = zext i1 %45 to i8
  %47 = load i8, i8* %36, align 4
  %48 = shl nuw nsw i8 %46, 2
  %49 = and i8 %47, 4
  %50 = and i8 %47, -61
  %51 = and i8 %47, 8
  %52 = and i8 %47, 16
  %53 = or i8 %49, %48
  %54 = or i8 %53, %50
  %55 = or i8 %54, %51
  %56 = or i8 %55, %52
  %57 = or i8 %56, 32
  store i8 %57, i8* %36, align 4
  ret %"class.cc::SaveLayerOp"* %6
}

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #3

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #5

declare zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::ClipPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPathR8SkClipOpRbEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %class.SkPath* dereferenceable(16), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 32) #13
  %7 = bitcast i8* %6 to %"class.cc::ClipPathOp"*
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %5, %class.SkPath* dereferenceable(16) %1) #13
  %8 = load i32, i32* %2, align 4
  %9 = load i8, i8* %3, align 1, !range !2
  %10 = bitcast i8* %6 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, -256
  %13 = or i32 %12, 1
  store i32 %13, i32* %10, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to %class.SkPath*
  call void @_ZN6SkPathC2ERKS_(%class.SkPath* %15, %class.SkPath* nonnull dereferenceable(16) %5) #13
  %16 = bitcast i8* %14 to %class.SkPathRef**
  %17 = load %class.SkPathRef*, %class.SkPathRef** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 1
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 3, i32 0
  %24 = load %struct.SkPoint*, %struct.SkPoint** %23, align 8
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 3, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %22, %struct.SkPoint* %24, i32 %26) #13
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 10
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 1
  store i8 0, i8* %18, align 8
  br label %30

30:                                               ; preds = %4, %21
  %31 = getelementptr inbounds i8, i8* %6, i64 24
  %32 = bitcast i8* %31 to i32*
  store i32 %8, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %6, i64 28
  store i8 %9, i8* %33, align 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #13
  %34 = load i32, i32* %10, align 8
  %35 = and i32 %34, 255
  %36 = or i32 %35, 8192
  store i32 %36, i32* %10, align 8
  %37 = bitcast i8* %6 to %"class.cc::PaintOp"*
  %38 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %39 = call i32 @_ZNK2cc10ClipPathOp14CountSlowPathsEv(%"class.cc::ClipPathOp"* %7) #13
  %40 = load i32, i32* %38, align 8
  %41 = add nsw i32 %40, %39
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %33, align 4, !range !2
  %43 = xor i8 %42, 1
  %44 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %45 = load i8, i8* %44, align 4
  %46 = and i8 %45, 1
  %47 = or i8 %46, %43
  %48 = and i8 %45, -4
  %49 = or i8 %47, %48
  %50 = and i8 %45, 2
  %51 = or i8 %49, %50
  store i8 %51, i8* %44, align 4
  %52 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %37) #13
  %53 = zext i1 %52 to i8
  %54 = load i8, i8* %44, align 4
  %55 = shl nuw nsw i8 %53, 2
  %56 = and i8 %54, 4
  %57 = or i8 %56, %55
  %58 = and i8 %54, -61
  %59 = or i8 %57, %58
  %60 = and i8 %54, 8
  %61 = or i8 %59, %60
  %62 = and i8 %54, 16
  %63 = and i8 %54, 32
  %64 = or i8 %61, %62
  %65 = or i8 %64, %63
  store i8 %65, i8* %44, align 4
  ret %"class.cc::ClipPathOp"* %7
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #5

declare void @_ZN6SkPathC2ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare i32 @_ZNK2cc10ClipPathOp14CountSlowPathsEv(%"class.cc::ClipPathOp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::DrawLineOp"* @_ZN2cc13PaintOpBuffer4pushINS_10DrawLineOpEJRfS3_S3_S3_RKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4), float* dereferenceable(4), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %7 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 96) #13
  %8 = bitcast i8* %7 to %"class.cc::DrawLineOp"*
  %9 = bitcast float* %1 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast float* %2 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = bitcast float* %3 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = bitcast float* %4 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = bitcast i8* %7 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, -256
  %20 = or i32 %19, 11
  store i32 %20, i32* %17, align 4
  %21 = getelementptr inbounds i8, i8* %7, i64 8
  %22 = bitcast i8* %21 to %"class.cc::PaintFlags"*
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %22, %"class.cc::PaintFlags"* dereferenceable(72) %5) #13
  %23 = getelementptr inbounds i8, i8* %7, i64 80
  %24 = bitcast i8* %23 to i32*
  store i32 %10, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %7, i64 84
  %26 = bitcast i8* %25 to i32*
  store i32 %12, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %7, i64 88
  %28 = bitcast i8* %27 to i32*
  store i32 %14, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %7, i64 92
  %30 = bitcast i8* %29 to i32*
  store i32 %16, i32* %30, align 4
  %31 = load i32, i32* %17, align 8
  %32 = and i32 %31, 255
  %33 = or i32 %32, 24576
  store i32 %33, i32* %17, align 8
  %34 = bitcast i8* %7 to %"class.cc::PaintOpWithFlags"*
  %35 = bitcast i8* %21 to %class.SkPathEffect**
  %36 = load %class.SkPathEffect*, %class.SkPathEffect** %35, align 8
  %37 = icmp ne %class.SkPathEffect* %36, null
  %38 = zext i1 %37 to i32
  %39 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %40 = load i32, i32* %39, align 8
  %41 = add nsw i32 %40, %38
  store i32 %41, i32* %39, align 8
  %42 = tail call i32 @_ZNK2cc10DrawLineOp14CountSlowPathsEv(%"class.cc::DrawLineOp"* %8) #13
  %43 = load i32, i32* %39, align 8
  %44 = add nsw i32 %43, %42
  store i32 %44, i32* %39, align 8
  %45 = getelementptr inbounds i8, i8* %7, i64 72
  %46 = bitcast i8* %45 to i16*
  %47 = load i16, i16* %46, align 8
  %48 = trunc i16 %47 to i8
  %49 = and i8 %48, 1
  %50 = xor i8 %49, 1
  %51 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %52 = load i8, i8* %51, align 4
  %53 = bitcast i8* %7 to %"class.cc::PaintOp"*
  %54 = or i8 %50, %52
  store i8 %54, i8* %51, align 4
  %55 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %34) #13
  %56 = zext i1 %55 to i8
  %57 = load i8, i8* %51, align 4
  %58 = shl nuw nsw i8 %56, 1
  %59 = and i8 %57, 2
  %60 = or i8 %59, %58
  %61 = and i8 %57, -3
  %62 = or i8 %60, %61
  store i8 %62, i8* %51, align 4
  %63 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %53) #13
  %64 = zext i1 %63 to i8
  %65 = load i8, i8* %51, align 4
  %66 = shl nuw nsw i8 %64, 2
  %67 = and i8 %65, 4
  %68 = or i8 %67, %66
  %69 = and i8 %65, -61
  %70 = or i8 %68, %69
  %71 = and i8 %65, 8
  %72 = or i8 %70, %71
  %73 = and i8 %65, 16
  %74 = and i8 %65, 32
  %75 = or i8 %72, %73
  %76 = or i8 %75, %74
  store i8 %76, i8* %51, align 4
  ret %"class.cc::DrawLineOp"* %8
}

declare i32 @_ZNK2cc10DrawLineOp14CountSlowPathsEv(%"class.cc::DrawLineOp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::DrawPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10DrawPathOpEJRK6SkPathRKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 104) #13
  %5 = bitcast i8* %4 to %"class.cc::DrawPathOp"*
  %6 = bitcast i8* %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -256
  %9 = or i32 %8, 13
  store i32 %9, i32* %6, align 4
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to %"class.cc::PaintFlags"*
  tail call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %11, %"class.cc::PaintFlags"* dereferenceable(72) %2) #13
  %12 = getelementptr inbounds i8, i8* %4, i64 80
  %13 = bitcast i8* %12 to %class.SkPath*
  tail call void @_ZN6SkPathC2ERKS_(%class.SkPath* %13, %class.SkPath* dereferenceable(16) %1) #13
  %14 = bitcast i8* %12 to %class.SkPathRef**
  %15 = load %class.SkPathRef*, %class.SkPathRef** %14, align 8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 1
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 3, i32 0
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 3, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %20, %struct.SkPoint* %22, i32 %24) #13
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 10
  %27 = zext i1 %25 to i8
  store i8 %27, i8* %26, align 1
  store i8 0, i8* %16, align 8
  br label %28

28:                                               ; preds = %3, %19
  %29 = getelementptr inbounds i8, i8* %4, i64 96
  %30 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %31 = load i8, i8* %30, align 2
  %32 = and i8 %31, 3
  store i8 %32, i8* %29, align 8
  %33 = load i32, i32* %6, align 8
  %34 = and i32 %33, 255
  %35 = or i32 %34, 26624
  store i32 %35, i32* %6, align 8
  %36 = bitcast i8* %4 to %"class.cc::PaintOpWithFlags"*
  %37 = bitcast i8* %10 to %class.SkPathEffect**
  %38 = load %class.SkPathEffect*, %class.SkPathEffect** %37, align 8
  %39 = icmp ne %class.SkPathEffect* %38, null
  %40 = zext i1 %39 to i32
  %41 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, %40
  store i32 %43, i32* %41, align 8
  %44 = tail call i32 @_ZNK2cc10DrawPathOp14CountSlowPathsEv(%"class.cc::DrawPathOp"* %5) #13
  %45 = load i32, i32* %41, align 8
  %46 = add nsw i32 %45, %44
  store i32 %46, i32* %41, align 8
  %47 = getelementptr inbounds i8, i8* %4, i64 72
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 8
  %50 = trunc i16 %49 to i8
  %51 = and i8 %50, 1
  %52 = xor i8 %51, 1
  %53 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %54 = load i8, i8* %53, align 4
  %55 = bitcast i8* %4 to %"class.cc::PaintOp"*
  %56 = or i8 %52, %54
  store i8 %56, i8* %53, align 4
  %57 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %36) #13
  %58 = zext i1 %57 to i8
  %59 = load i8, i8* %53, align 4
  %60 = shl nuw nsw i8 %58, 1
  %61 = and i8 %59, 2
  %62 = or i8 %61, %60
  %63 = and i8 %59, -3
  %64 = or i8 %62, %63
  store i8 %64, i8* %53, align 4
  %65 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %55) #13
  %66 = zext i1 %65 to i8
  %67 = load i8, i8* %53, align 4
  %68 = shl nuw nsw i8 %66, 2
  %69 = and i8 %67, 4
  %70 = or i8 %69, %68
  %71 = and i8 %67, -61
  %72 = or i8 %70, %71
  %73 = and i8 %67, 8
  %74 = or i8 %72, %73
  %75 = and i8 %67, 16
  %76 = and i8 %67, 32
  %77 = or i8 %74, %75
  %78 = or i8 %77, %76
  store i8 %78, i8* %53, align 4
  ret %"class.cc::DrawPathOp"* %5
}

declare i32 @_ZNK2cc10DrawPathOp14CountSlowPathsEv(%"class.cc::DrawPathOp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::DrawImageOp"* @_ZN2cc13PaintOpBuffer4pushINS_11DrawImageOpEJRKNS_10PaintImageERfS6_RK17SkSamplingOptionsRPKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %"class.cc::PaintImage"* dereferenceable(104), float* dereferenceable(4), float* dereferenceable(4), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %7 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 224) #13
  %8 = bitcast i8* %7 to %"class.cc::DrawImageOp"*
  %9 = load float, float* %2, align 4
  %10 = load float, float* %3, align 4
  %11 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %5, align 8
  tail call void @_ZN2cc11DrawImageOpC1ERKNS_10PaintImageEffRK17SkSamplingOptionsPKNS_10PaintFlagsE(%"class.cc::DrawImageOp"* %8, %"class.cc::PaintImage"* dereferenceable(104) %1, float %9, float %10, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"* %11) #13
  %12 = bitcast i8* %7 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 255
  %15 = or i32 %14, 57344
  store i32 %15, i32* %12, align 8
  %16 = bitcast i8* %7 to %"class.cc::PaintOpWithFlags"*
  %17 = getelementptr inbounds i8, i8* %7, i64 8
  %18 = bitcast i8* %17 to %class.SkPathEffect**
  %19 = load %class.SkPathEffect*, %class.SkPathEffect** %18, align 8
  %20 = icmp ne %class.SkPathEffect* %19, null
  %21 = zext i1 %20 to i32
  %22 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, %21
  %25 = bitcast i8* %7 to %"class.cc::PaintOp"*
  store i32 %24, i32* %22, align 8
  %26 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %27 = tail call zeroext i1 @_ZNK2cc11DrawImageOp20HasDiscardableImagesEv(%"class.cc::DrawImageOp"* %8) #13
  %28 = zext i1 %27 to i8
  %29 = load i8, i8* %26, align 4
  %30 = shl nuw nsw i8 %28, 1
  %31 = and i8 %29, 2
  %32 = or i8 %31, %30
  %33 = and i8 %29, -3
  %34 = or i8 %32, %33
  store i8 %34, i8* %26, align 4
  %35 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %16) #13
  %36 = zext i1 %35 to i8
  %37 = load i8, i8* %26, align 4
  %38 = shl nuw nsw i8 %36, 1
  %39 = and i8 %37, 2
  %40 = or i8 %39, %38
  %41 = and i8 %37, -3
  %42 = or i8 %40, %41
  store i8 %42, i8* %26, align 4
  %43 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %25) #13
  %44 = zext i1 %43 to i8
  %45 = load i8, i8* %26, align 4
  %46 = shl nuw nsw i8 %44, 2
  %47 = and i8 %45, 4
  %48 = or i8 %47, %46
  %49 = and i8 %45, -61
  %50 = or i8 %48, %49
  %51 = and i8 %45, 8
  %52 = or i8 %50, %51
  %53 = and i8 %45, 16
  %54 = and i8 %45, 32
  %55 = or i8 %52, %53
  %56 = or i8 %55, %54
  store i8 %56, i8* %26, align 4
  ret %"class.cc::DrawImageOp"* %8
}

declare void @_ZN2cc11DrawImageOpC1ERKNS_10PaintImageEffRK17SkSamplingOptionsPKNS_10PaintFlagsE(%"class.cc::DrawImageOp"*, %"class.cc::PaintImage"* dereferenceable(104), float, float, %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*) unnamed_addr #3

declare zeroext i1 @_ZNK2cc11DrawImageOp20HasDiscardableImagesEv(%"class.cc::DrawImageOp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::DrawImageRectOp"* @_ZN2cc13PaintOpBuffer4pushINS_15DrawImageRectOpEJRKNS_10PaintImageERK6SkRectS8_RK17SkSamplingOptionsRPKNS_10PaintFlagsERN8SkCanvas17SrcRectConstraintEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %"class.cc::PaintImage"* dereferenceable(104), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %8 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 248) #13
  %9 = bitcast i8* %8 to %"class.cc::DrawImageRectOp"*
  %10 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %5, align 8
  %11 = load i32, i32* %6, align 4
  tail call void @_ZN2cc15DrawImageRectOpC1ERKNS_10PaintImageERK6SkRectS6_RK17SkSamplingOptionsPKNS_10PaintFlagsEN8SkCanvas17SrcRectConstraintE(%"class.cc::DrawImageRectOp"* %9, %"class.cc::PaintImage"* dereferenceable(104) %1, %struct.SkRect* dereferenceable(16) %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"* %10, i32 %11) #13
  %12 = bitcast i8* %8 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 255
  %15 = or i32 %14, 63488
  store i32 %15, i32* %12, align 8
  %16 = bitcast i8* %8 to %"class.cc::PaintOpWithFlags"*
  %17 = getelementptr inbounds i8, i8* %8, i64 8
  %18 = bitcast i8* %17 to %class.SkPathEffect**
  %19 = load %class.SkPathEffect*, %class.SkPathEffect** %18, align 8
  %20 = icmp ne %class.SkPathEffect* %19, null
  %21 = zext i1 %20 to i32
  %22 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, %21
  %25 = bitcast i8* %8 to %"class.cc::PaintOp"*
  store i32 %24, i32* %22, align 8
  %26 = getelementptr inbounds i8, i8* %8, i64 72
  %27 = bitcast i8* %26 to i16*
  %28 = load i16, i16* %27, align 8
  %29 = trunc i16 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %33 = load i8, i8* %32, align 4
  %34 = or i8 %31, %33
  store i8 %34, i8* %32, align 4
  %35 = tail call zeroext i1 @_ZNK2cc15DrawImageRectOp20HasDiscardableImagesEv(%"class.cc::DrawImageRectOp"* %9) #13
  %36 = zext i1 %35 to i8
  %37 = load i8, i8* %32, align 4
  %38 = shl nuw nsw i8 %36, 1
  %39 = and i8 %37, 2
  %40 = or i8 %39, %38
  %41 = and i8 %37, -3
  %42 = or i8 %40, %41
  store i8 %42, i8* %32, align 4
  %43 = tail call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %16) #13
  %44 = zext i1 %43 to i8
  %45 = load i8, i8* %32, align 4
  %46 = shl nuw nsw i8 %44, 1
  %47 = and i8 %45, 2
  %48 = or i8 %47, %46
  %49 = and i8 %45, -3
  %50 = or i8 %48, %49
  store i8 %50, i8* %32, align 4
  %51 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %25) #13
  %52 = zext i1 %51 to i8
  %53 = load i8, i8* %32, align 4
  %54 = shl nuw nsw i8 %52, 2
  %55 = and i8 %53, 4
  %56 = or i8 %55, %54
  %57 = and i8 %53, -61
  %58 = or i8 %56, %57
  %59 = and i8 %53, 8
  %60 = or i8 %58, %59
  %61 = and i8 %53, 16
  %62 = and i8 %53, 32
  %63 = or i8 %60, %61
  %64 = or i8 %63, %62
  store i8 %64, i8* %32, align 4
  ret %"class.cc::DrawImageRectOp"* %9
}

declare void @_ZN2cc15DrawImageRectOpC1ERKNS_10PaintImageERK6SkRectS6_RK17SkSamplingOptionsPKNS_10PaintFlagsEN8SkCanvas17SrcRectConstraintE(%"class.cc::DrawImageRectOp"*, %"class.cc::PaintImage"* dereferenceable(104), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*, i32) unnamed_addr #3

declare zeroext i1 @_ZNK2cc15DrawImageRectOp20HasDiscardableImagesEv(%"class.cc::DrawImageRectOp"*) local_unnamed_addr #3

declare void @_ZN2cc13DrawSkottieOpC1E13scoped_refptrINS_14SkottieWrapperEE6SkRectf(%"class.cc::DrawSkottieOp"*, %"class.cc::SkottieWrapper"*, <2 x float>, <2 x float>, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::DrawTextBlobOp"* @_ZN2cc13PaintOpBuffer4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %class.sk_sp.180* dereferenceable(8), float* dereferenceable(4), float* dereferenceable(4), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.sk_sp.180, align 8
  %7 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 104) #13
  %8 = bitcast i8* %7 to %"class.cc::DrawTextBlobOp"*
  %9 = getelementptr inbounds %class.sk_sp.180, %class.sk_sp.180* %1, i64 0, i32 0
  %10 = bitcast %class.sk_sp.180* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %9, align 8
  %12 = bitcast %class.sk_sp.180* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load float, float* %2, align 4
  %14 = load float, float* %3, align 4
  call void @_ZN2cc14DrawTextBlobOpC1E5sk_spI10SkTextBlobEffRKNS_10PaintFlagsE(%"class.cc::DrawTextBlobOp"* %8, %class.sk_sp.180* nonnull %6, float %13, float %14, %"class.cc::PaintFlags"* dereferenceable(72) %4) #13
  %15 = getelementptr inbounds %class.sk_sp.180, %class.sk_sp.180* %6, i64 0, i32 0
  %16 = load %class.SkTextBlob*, %class.SkTextBlob** %15, align 8
  %17 = icmp eq %class.SkTextBlob* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %16) #13
  %23 = bitcast %class.SkTextBlob* %16 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %23) #13
  br label %24

24:                                               ; preds = %5, %18, %22
  %25 = bitcast i8* %7 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 255
  %28 = or i32 %27, 26624
  store i32 %28, i32* %25, align 8
  %29 = bitcast i8* %7 to %"class.cc::PaintOpWithFlags"*
  %30 = getelementptr inbounds i8, i8* %7, i64 8
  %31 = bitcast i8* %30 to %class.SkPathEffect**
  %32 = load %class.SkPathEffect*, %class.SkPathEffect** %31, align 8
  %33 = icmp ne %class.SkPathEffect* %32, null
  %34 = zext i1 %33 to i32
  %35 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %36 = load i32, i32* %35, align 8
  %37 = add nsw i32 %36, %34
  %38 = bitcast i8* %7 to %"class.cc::PaintOp"*
  store i32 %37, i32* %35, align 8
  %39 = getelementptr inbounds i8, i8* %7, i64 72
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 8
  %42 = trunc i16 %41 to i8
  %43 = and i8 %42, 1
  %44 = xor i8 %43, 1
  %45 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %46 = load i8, i8* %45, align 4
  %47 = or i8 %44, %46
  store i8 %47, i8* %45, align 4
  %48 = call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %29) #13
  %49 = zext i1 %48 to i8
  %50 = load i8, i8* %45, align 4
  %51 = shl nuw nsw i8 %49, 1
  %52 = and i8 %50, 2
  %53 = or i8 %52, %51
  %54 = and i8 %50, -3
  %55 = or i8 %53, %54
  store i8 %55, i8* %45, align 4
  %56 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %38) #13
  %57 = zext i1 %56 to i8
  %58 = load i8, i8* %45, align 4
  %59 = shl nuw nsw i8 %57, 2
  %60 = and i8 %58, 4
  %61 = and i8 %58, -61
  %62 = and i8 %58, 16
  %63 = and i8 %58, 32
  %64 = or i8 %60, %59
  %65 = or i8 %64, %61
  %66 = or i8 %65, %62
  %67 = or i8 %66, %63
  %68 = or i8 %67, 8
  store i8 %68, i8* %45, align 4
  ret %"class.cc::DrawTextBlobOp"* %8
}

declare void @_ZN2cc14DrawTextBlobOpC1E5sk_spI10SkTextBlobEffRKNS_10PaintFlagsE(%"class.cc::DrawTextBlobOp"*, %class.sk_sp.180*, float, float, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::DrawTextBlobOp"* @_ZN2cc13PaintOpBuffer4pushINS_14DrawTextBlobOpEJ5sk_spI10SkTextBlobERfS6_RiRKNS_10PaintFlagsEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %class.sk_sp.180* dereferenceable(8), float* dereferenceable(4), float* dereferenceable(4), i32* dereferenceable(4), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %class.sk_sp.180, align 8
  %8 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 104) #13
  %9 = bitcast i8* %8 to %"class.cc::DrawTextBlobOp"*
  %10 = getelementptr inbounds %class.sk_sp.180, %class.sk_sp.180* %1, i64 0, i32 0
  %11 = bitcast %class.sk_sp.180* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %10, align 8
  %13 = bitcast %class.sk_sp.180* %7 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load float, float* %2, align 4
  %15 = load float, float* %3, align 4
  %16 = load i32, i32* %4, align 4
  call void @_ZN2cc14DrawTextBlobOpC1E5sk_spI10SkTextBlobEffiRKNS_10PaintFlagsE(%"class.cc::DrawTextBlobOp"* %9, %class.sk_sp.180* nonnull %7, float %14, float %15, i32 %16, %"class.cc::PaintFlags"* dereferenceable(72) %5) #13
  %17 = getelementptr inbounds %class.sk_sp.180, %class.sk_sp.180* %7, i64 0, i32 0
  %18 = load %class.SkTextBlob*, %class.SkTextBlob** %17, align 8
  %19 = icmp eq %class.SkTextBlob* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %18) #13
  %25 = bitcast %class.SkTextBlob* %18 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %25) #13
  br label %26

26:                                               ; preds = %6, %20, %24
  %27 = bitcast i8* %8 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 255
  %30 = or i32 %29, 26624
  store i32 %30, i32* %27, align 8
  %31 = bitcast i8* %8 to %"class.cc::PaintOpWithFlags"*
  %32 = getelementptr inbounds i8, i8* %8, i64 8
  %33 = bitcast i8* %32 to %class.SkPathEffect**
  %34 = load %class.SkPathEffect*, %class.SkPathEffect** %33, align 8
  %35 = icmp ne %class.SkPathEffect* %34, null
  %36 = zext i1 %35 to i32
  %37 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, %36
  %40 = bitcast i8* %8 to %"class.cc::PaintOp"*
  store i32 %39, i32* %37, align 8
  %41 = getelementptr inbounds i8, i8* %8, i64 72
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 8
  %44 = trunc i16 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  %47 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %48 = load i8, i8* %47, align 4
  %49 = or i8 %46, %48
  store i8 %49, i8* %47, align 4
  %50 = call zeroext i1 @_ZNK2cc16PaintOpWithFlags29HasDiscardableImagesFromFlagsEv(%"class.cc::PaintOpWithFlags"* %31) #13
  %51 = zext i1 %50 to i8
  %52 = load i8, i8* %47, align 4
  %53 = shl nuw nsw i8 %51, 1
  %54 = and i8 %52, 2
  %55 = or i8 %54, %53
  %56 = and i8 %52, -3
  %57 = or i8 %55, %56
  store i8 %57, i8* %47, align 4
  %58 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %40) #13
  %59 = zext i1 %58 to i8
  %60 = load i8, i8* %47, align 4
  %61 = shl nuw nsw i8 %59, 2
  %62 = and i8 %60, 4
  %63 = and i8 %60, -61
  %64 = and i8 %60, 16
  %65 = and i8 %60, 32
  %66 = or i8 %62, %61
  %67 = or i8 %66, %63
  %68 = or i8 %67, %64
  %69 = or i8 %68, %65
  %70 = or i8 %69, 8
  store i8 %70, i8* %47, align 4
  ret %"class.cc::DrawTextBlobOp"* %9
}

declare void @_ZN2cc14DrawTextBlobOpC1E5sk_spI10SkTextBlobEffiRKNS_10PaintFlagsE(%"class.cc::DrawTextBlobOp"*, %class.sk_sp.180*, float, float, i32, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #3

declare void @_ZN2cc12DrawRecordOpC1E5sk_spIKNS_13PaintOpBufferEE(%"class.cc::DrawRecordOp"*, %class.sk_sp.187*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13PaintOpBuffer14AnalyzeAddedOpINS_12DrawRecordOpEEEvPKT_(%"class.cc::PaintOpBuffer"*, %"class.cc::DrawRecordOp"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.cc::DrawRecordOp", %"class.cc::DrawRecordOp"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %5 = tail call i32 @_ZNK2cc12DrawRecordOp14CountSlowPathsEv(%"class.cc::DrawRecordOp"* %1) #13
  %6 = load i32, i32* %4, align 8
  %7 = add nsw i32 %6, %5
  store i32 %7, i32* %4, align 8
  %8 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp13HasNonAAPaintEv(%"class.cc::DrawRecordOp"* %1) #13
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = or i8 %12, %9
  %14 = and i8 %11, -2
  %15 = or i8 %13, %14
  store i8 %15, i8* %10, align 4
  %16 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp20HasDiscardableImagesEv(%"class.cc::DrawRecordOp"* %1) #13
  %17 = zext i1 %16 to i8
  %18 = load i8, i8* %10, align 4
  %19 = shl nuw nsw i8 %17, 1
  %20 = and i8 %18, 2
  %21 = or i8 %20, %19
  %22 = and i8 %18, -3
  %23 = or i8 %21, %22
  store i8 %23, i8* %10, align 4
  %24 = tail call i64 @_ZNK2cc12DrawRecordOp19AdditionalBytesUsedEv(%"class.cc::DrawRecordOp"* %1) #13
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %24
  store i64 %27, i64* %25, align 8
  %28 = tail call i64 @_ZNK2cc12DrawRecordOp17AdditionalOpCountEv(%"class.cc::DrawRecordOp"* %1) #13
  %29 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 7
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %28
  store i64 %31, i64* %29, align 8
  %32 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %3) #13
  %33 = zext i1 %32 to i8
  %34 = load i8, i8* %10, align 4
  %35 = shl nuw nsw i8 %33, 2
  %36 = and i8 %34, 4
  %37 = or i8 %36, %35
  %38 = and i8 %34, -5
  %39 = or i8 %37, %38
  store i8 %39, i8* %10, align 4
  %40 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp14HasDrawTextOpsEv(%"class.cc::DrawRecordOp"* %1) #13
  %41 = zext i1 %40 to i8
  %42 = load i8, i8* %10, align 4
  %43 = shl nuw nsw i8 %41, 3
  %44 = and i8 %42, 8
  %45 = or i8 %44, %43
  %46 = and i8 %42, -9
  %47 = or i8 %45, %46
  store i8 %47, i8* %10, align 4
  %48 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp20HasSaveLayerAlphaOpsEv(%"class.cc::DrawRecordOp"* %1) #13
  %49 = zext i1 %48 to i8
  %50 = load i8, i8* %10, align 4
  %51 = shl nuw nsw i8 %49, 4
  %52 = and i8 %50, 16
  %53 = or i8 %52, %51
  %54 = and i8 %50, -17
  %55 = or i8 %53, %54
  store i8 %55, i8* %10, align 4
  %56 = tail call zeroext i1 @_ZNK2cc12DrawRecordOp44HasEffectsPreventingLCDTextForSaveLayerAlphaEv(%"class.cc::DrawRecordOp"* %1) #13
  %57 = zext i1 %56 to i8
  %58 = load i8, i8* %10, align 4
  %59 = shl nuw nsw i8 %57, 5
  %60 = and i8 %58, 32
  %61 = or i8 %60, %59
  %62 = and i8 %58, -33
  %63 = or i8 %61, %62
  store i8 %63, i8* %10, align 4
  ret void
}

declare i32 @_ZNK2cc12DrawRecordOp14CountSlowPathsEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc12DrawRecordOp13HasNonAAPaintEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc12DrawRecordOp20HasDiscardableImagesEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

declare i64 @_ZNK2cc12DrawRecordOp19AdditionalBytesUsedEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

declare i64 @_ZNK2cc12DrawRecordOp17AdditionalOpCountEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc12DrawRecordOp14HasDrawTextOpsEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc12DrawRecordOp20HasSaveLayerAlphaOpsEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc12DrawRecordOp44HasEffectsPreventingLCDTextForSaveLayerAlphaEv(%"class.cc::DrawRecordOp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::AnnotateOp"* @_ZN2cc13PaintOpBuffer4pushINS_10AnnotateOpEJRNS_11PaintCanvas14AnnotationTypeERK6SkRectR5sk_spI6SkDataEEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, i32* dereferenceable(4), %struct.SkRect* dereferenceable(16), %class.sk_sp.188* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.sk_sp.188, align 8
  %6 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 32) #13
  %7 = bitcast i8* %6 to %"class.cc::AnnotateOp"*
  %8 = load i32, i32* %1, align 4
  %9 = getelementptr inbounds %class.sk_sp.188, %class.sk_sp.188* %5, i64 0, i32 0
  %10 = getelementptr inbounds %class.sk_sp.188, %class.sk_sp.188* %3, i64 0, i32 0
  %11 = load %class.SkData*, %class.SkData** %10, align 8
  %12 = icmp eq %class.SkData* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %4, %13
  store %class.SkData* %11, %class.SkData** %9, align 8
  call void @_ZN2cc10AnnotateOpC1ENS_11PaintCanvas14AnnotationTypeERK6SkRect5sk_spI6SkDataE(%"class.cc::AnnotateOp"* %7, i32 %8, %struct.SkRect* dereferenceable(16) %2, %class.sk_sp.188* nonnull %5) #13
  %17 = load %class.SkData*, %class.SkData** %9, align 8
  %18 = icmp eq %class.SkData* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.SkData, %class.SkData* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %17) #13
  %24 = bitcast %class.SkData* %17 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %24) #13
  br label %25

25:                                               ; preds = %16, %19, %23
  %26 = bitcast i8* %6 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 255
  %29 = or i32 %28, 8192
  store i32 %29, i32* %26, align 8
  %30 = bitcast i8* %6 to %"class.cc::PaintOp"*
  %31 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %32 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %30) #13
  %33 = zext i1 %32 to i8
  %34 = load i8, i8* %31, align 4
  %35 = shl nuw nsw i8 %33, 2
  %36 = and i8 %34, 4
  %37 = or i8 %36, %35
  %38 = and i8 %34, -61
  %39 = or i8 %37, %38
  %40 = and i8 %34, 8
  %41 = or i8 %39, %40
  %42 = and i8 %34, 16
  %43 = and i8 %34, 32
  %44 = or i8 %41, %42
  %45 = or i8 %44, %43
  store i8 %45, i8* %31, align 4
  ret %"class.cc::AnnotateOp"* %7
}

declare void @_ZN2cc10AnnotateOpC1ENS_11PaintCanvas14AnnotationTypeERK6SkRect5sk_spI6SkDataE(%"class.cc::AnnotateOp"*, i32, %struct.SkRect* dereferenceable(16), %class.sk_sp.188*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

declare void @_ZN14SkNoDrawCanvasC1Eii(%class.SkNoDrawCanvas*, i32, i32) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
