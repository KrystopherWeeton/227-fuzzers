; ModuleID = '../../base/third_party/xdg_mime/xdgmimeicon.c'
source_filename = "../../base/third_party/xdg_mime/xdgmimeicon.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.XdgIconList = type { %struct.XdgIcon*, i32 }
%struct.XdgIcon = type { i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct.XdgIconList* @_xdg_mime_icon_list_new() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @malloc(i64 16) #9
  %2 = bitcast i8* %1 to %struct.XdgIconList*
  %3 = bitcast i8* %1 to %struct.XdgIcon**
  store %struct.XdgIcon* null, %struct.XdgIcon** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 8
  ret %struct.XdgIconList* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_xdg_mime_icon_list_free(%struct.XdgIconList* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.XdgIconList, %struct.XdgIconList* %0, i64 0, i32 0
  %3 = load %struct.XdgIcon*, %struct.XdgIcon** %2, align 8
  %4 = icmp eq %struct.XdgIcon* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.XdgIconList, %struct.XdgIconList* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %5, %9
  %10 = phi i64 [ %17, %9 ], [ 0, %5 ]
  %11 = phi %struct.XdgIcon* [ %21, %9 ], [ %3, %5 ]
  %12 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %11, i64 %10, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @free(i8* %13) #9
  %14 = load %struct.XdgIcon*, %struct.XdgIcon** %2, align 8
  %15 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %14, i64 %10, i32 1
  %16 = load i8*, i8** %15, align 8
  tail call void @free(i8* %16) #9
  %17 = add nuw nsw i64 %10, 1
  %18 = load i32, i32* %6, align 8
  %19 = sext i32 %18 to i64
  %20 = icmp slt i64 %17, %19
  %21 = load %struct.XdgIcon*, %struct.XdgIcon** %2, align 8
  br i1 %20, label %9, label %22

22:                                               ; preds = %9, %5
  %23 = phi %struct.XdgIcon* [ %3, %5 ], [ %21, %9 ]
  %24 = bitcast %struct.XdgIcon* %23 to i8*
  tail call void @free(i8* %24) #9
  br label %25

25:                                               ; preds = %1, %22
  %26 = bitcast %struct.XdgIconList* %0 to i8*
  tail call void @free(i8* %26) #9
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_xdg_mime_icon_list_lookup(%struct.XdgIconList* nocapture readonly, i8*) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.XdgIconList, %struct.XdgIconList* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %35

6:                                                ; preds = %2
  %7 = bitcast %struct.XdgIconList* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  br label %10

10:                                               ; preds = %6, %25
  %11 = phi i64 [ %27, %25 ], [ %9, %6 ]
  %12 = phi i64 [ %26, %25 ], [ 0, %6 ]
  %13 = add i64 %12, %11
  %14 = lshr i64 %13, 1
  %15 = shl i64 %14, 4
  %16 = getelementptr inbounds i8, i8* %8, i64 %15
  %17 = bitcast i8* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 @strcmp(i8* %1, i8* %18) #10
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %10
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %14, 1
  br label %25

25:                                               ; preds = %23, %10
  %26 = phi i64 [ %24, %23 ], [ %12, %10 ]
  %27 = phi i64 [ %11, %23 ], [ %14, %10 ]
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %10, label %35

29:                                               ; preds = %21
  %30 = icmp eq i8* %16, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %16, i64 8
  %33 = bitcast i8* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %25, %2, %29, %31
  %36 = phi i8* [ %34, %31 ], [ null, %29 ], [ null, %2 ], [ null, %25 ]
  ret i8* %36
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @icon_entry_cmp(i8* nocapture readonly, i8* nocapture readonly) #5 {
  %3 = bitcast i8* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @strcmp(i8* %4, i8* %6) #10
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_xdg_mime_icon_read_from_file(%struct.XdgIconList* nocapture, i8* nocapture readonly) local_unnamed_addr #3 {
  %3 = alloca [255 x i8], align 16
  %4 = getelementptr inbounds [255 x i8], [255 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 255, i1 false)
  %5 = tail call %struct._IO_FILE* @fopen64(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %6 = icmp eq %struct._IO_FILE* %5, null
  br i1 %6, label %68, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.XdgIconList, %struct.XdgIconList* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 16
  %11 = getelementptr inbounds %struct.XdgIconList, %struct.XdgIconList* %0, i64 0, i32 0
  %12 = bitcast %struct.XdgIconList* %0 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %10 to i64
  %15 = shl nsw i64 %14, 4
  %16 = tail call i8* @realloc(i8* %13, i64 %15) #9
  store i8* %16, i8** %12, align 8
  %17 = call i8* @fgets(i8* nonnull %4, i32 255, %struct._IO_FILE* nonnull %5)
  %18 = icmp eq i8* %17, null
  br i1 %18, label %56, label %19

19:                                               ; preds = %7, %52
  %20 = phi i32 [ %53, %52 ], [ %10, %7 ]
  %21 = load i8, i8* %4, align 16
  %22 = icmp eq i8 %21, 35
  br i1 %22, label %52, label %23

23:                                               ; preds = %19
  %24 = call i8* @strchr(i8* nonnull %4, i32 58) #10
  %25 = icmp eq i8* %24, null
  br i1 %25, label %52, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 0, i8* %24, align 1
  %28 = call i64 @strlen(i8* %27) #10
  %29 = getelementptr inbounds i8, i8* %24, i64 %28
  store i8 0, i8* %29, align 1
  %30 = load i32, i32* %8, align 8
  %31 = icmp eq i32 %30, %20
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = shl i32 %20, 1
  %34 = load i8*, i8** %12, align 8
  %35 = sext i32 %33 to i64
  %36 = shl nsw i64 %35, 4
  %37 = call i8* @realloc(i8* %34, i64 %36) #9
  store i8* %37, i8** %12, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i32 [ %33, %32 ], [ %20, %26 ]
  %40 = call noalias i8* @strdup(i8* nonnull %4) #9
  %41 = load %struct.XdgIcon*, %struct.XdgIcon** %11, align 8
  %42 = load i32, i32* %8, align 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %41, i64 %43, i32 0
  store i8* %40, i8** %44, align 8
  %45 = call noalias i8* @strdup(i8* %27) #9
  %46 = load %struct.XdgIcon*, %struct.XdgIcon** %11, align 8
  %47 = load i32, i32* %8, align 8
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %46, i64 %48, i32 1
  store i8* %45, i8** %49, align 8
  %50 = load i32, i32* %8, align 8
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %8, align 8
  br label %52

52:                                               ; preds = %23, %19, %38
  %53 = phi i32 [ %39, %38 ], [ %20, %19 ], [ %20, %23 ]
  %54 = call i8* @fgets(i8* nonnull %4, i32 255, %struct._IO_FILE* nonnull %5)
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %19

56:                                               ; preds = %52, %7
  %57 = load i8*, i8** %12, align 8
  %58 = load i32, i32* %8, align 8
  %59 = sext i32 %58 to i64
  %60 = shl nsw i64 %59, 4
  %61 = call i8* @realloc(i8* %57, i64 %60) #9
  store i8* %61, i8** %12, align 8
  %62 = call i32 @fclose(%struct._IO_FILE* nonnull %5)
  %63 = load i32, i32* %8, align 8
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = load i8*, i8** %12, align 8
  %67 = sext i32 %63 to i64
  call void @qsort(i8* %66, i64 %67, i64 16, i32 (i8*, i8*)* nonnull @icon_entry_cmp) #9
  br label %68

68:                                               ; preds = %56, %65, %2
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_xdg_mime_icon_list_dump(%struct.XdgIconList* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.XdgIconList, %struct.XdgIconList* %0, i64 0, i32 0
  %3 = load %struct.XdgIcon*, %struct.XdgIcon** %2, align 8
  %4 = icmp eq %struct.XdgIcon* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.XdgIconList, %struct.XdgIconList* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %3, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %3, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %13)
  %15 = load i32, i32* %6, align 8
  %16 = icmp sgt i32 %15, 1
  br i1 %16, label %17, label %29

17:                                               ; preds = %9, %17
  %18 = phi i64 [ %25, %17 ], [ 1, %9 ]
  %19 = load %struct.XdgIcon*, %struct.XdgIcon** %2, align 8
  %20 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %19, i64 %18, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %struct.XdgIcon, %struct.XdgIcon* %19, i64 %18, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %21, i8* %23)
  %25 = add nuw nsw i64 %18, 1
  %26 = load i32, i32* %6, align 8
  %27 = sext i32 %26 to i64
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %17, label %29

29:                                               ; preds = %17, %9, %5, %1
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
