; ModuleID = 'gen/third_party/blink/public/mojom/service_worker/service_worker_fetch_response_callback.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/service_worker/service_worker_fetch_response_callback.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter" = type { %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* }
%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting" = type { %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::FetchAPIResponse"* }
%"class.blink::mojom::blink::FetchAPIResponse" = type { %"class.WTF::Vector", i16, %"class.WTF::String", i32, i64, i32, [4 x i8], %"class.WTF::HashMap", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.7, i32, %"class.base::Time", %"class.WTF::String", %"class.WTF::Vector.13", %class.scoped_refptr.7, %class.scoped_refptr.7, %"class.mojo::StructPtr.18", i32, %"class.WTF::String", i8, i8, %"class.absl::optional.102" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.WTF::String"*, i32, i32 }
%class.scoped_refptr.7 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::StructPtr.18" = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.network::mojom::blink::ParsedHeaders"* }
%"class.network::mojom::blink::ParsedHeaders" = type <{ %"class.WTF::Vector.22", %"class.mojo::StructPtr.58", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.70", %"class.base::TimeDelta", %"class.absl::optional.70", i32, [4 x i8], %"class.WTF::Vector.80", %"class.mojo::StructPtr.92", i8, [7 x i8] }>
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { %"class.mojo::StructPtr.25"*, i32, i32 }
%"class.mojo::StructPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.29", %"class.WTF::HashMap.36", %"class.WTF::HashMap.41", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.13", i32, %"class.mojo::StructPtr.46", %"class.WTF::Vector.13" }
%"class.mojo::StructPtr.29" = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ %"struct.WTF::KeyValuePair.40"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.40" = type opaque
%"class.WTF::HashMap.41" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"struct.WTF::KeyValuePair.45"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.45" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.46" = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.13", i8, i8, [6 x i8] }>
%"class.mojo::StructPtr.58" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.network::mojom::blink::AllowCSPFromHeaderValue"* }
%"class.network::mojom::blink::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" = type { %class.scoped_refptr.62* }
%class.scoped_refptr.62 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.107", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.62 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.107" = type { %"class.absl::optional_internal::optional_data.108" }
%"class.absl::optional_internal::optional_data.108" = type { %"class.absl::optional_internal::optional_data_base.109" }
%"class.absl::optional_internal::optional_data_base.109" = type { %"class.absl::optional_internal::optional_data_dtor_base.110" }
%"class.absl::optional_internal::optional_data_dtor_base.110" = type { i8, %union.anon.111 }
%union.anon.111 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional", i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.68 }
%union.anon.68 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional", i32, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.70" = type { %"class.absl::optional_internal::optional_data.71" }
%"class.absl::optional_internal::optional_data.71" = type { %"class.absl::optional_internal::optional_data_base.72" }
%"class.absl::optional_internal::optional_data_base.72" = type { %"class.absl::optional_internal::optional_data_dtor_base.73" }
%"class.absl::optional_internal::optional_data_dtor_base.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"class.WTF::Vector.75" }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { i32*, i32, i32 }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.mojo::StructPtr.83"*, i32, i32 }
%"class.mojo::StructPtr.83" = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.network::mojom::blink::LinkHeader"* }
%"class.network::mojom::blink::LinkHeader" = type { %"class.blink::KURL", i32, i32, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.92" = type { %"class.std::__1::unique_ptr.93" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector.13"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.102" = type { %"class.absl::optional_internal::optional_data.103" }
%"class.absl::optional_internal::optional_data.103" = type { %"class.absl::optional_internal::optional_data_base.104" }
%"class.absl::optional_internal::optional_data_base.104" = type { %"class.absl::optional_internal::optional_data_dtor_base.105" }
%"class.absl::optional_internal::optional_data_dtor_base.105" = type { i8, %union.anon.106 }
%union.anon.106 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.107" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.mojo::StructPtr.115" = type { %"class.std::__1::unique_ptr.116" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* }
%"class.blink::mojom::blink::ServiceWorkerFetchEventTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.119" }
%"class.base::time_internal::TimeBase.119" = type { i64 }
%"class.mojo::StructPtr.123" = type { %"class.std::__1::unique_ptr.124" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* }
%"class.blink::mojom::blink::ServiceWorkerStreamHandle" = type { %"class.mojo::ScopedHandleBase.127", %"class.mojo::PendingReceiver" }
%"class.mojo::ScopedHandleBase.127" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.128 }
%class.scoped_refptr.128 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.132", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.135, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.132" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.133 }
%class.scoped_refptr.133 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.134", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.134" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.135 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.136" }>
%"class.base::RefCountedThreadSafe.136" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

$_ZN5blink5mojom5blink34ServiceWorkerFetchResponseCallbackD2Ev = comdat any

$_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*)* @_ZN5blink5mojom5blink34ServiceWorkerFetchResponseCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)* @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)* @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTesting10OnResponseEN4mojo9StructPtrINS1_16FetchAPIResponseEEENS4_INS1_29ServiceWorkerFetchEventTimingEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)* @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTesting16OnResponseStreamEN4mojo9StructPtrINS1_16FetchAPIResponseEEENS4_INS1_25ServiceWorkerStreamHandleEEENS4_INS1_29ServiceWorkerFetchEventTimingEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr.115"*)* @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTesting10OnFallbackEN4mojo9StructPtrINS1_29ServiceWorkerFetchEventTimingEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink45ServiceWorkerFetchResponseCallbackAsyncWaiterC1EPNS1_34ServiceWorkerFetchResponseCallbackE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*), void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter"*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*)* @_ZN5blink5mojom5blink45ServiceWorkerFetchResponseCallbackAsyncWaiterC2EPNS1_34ServiceWorkerFetchResponseCallbackE
@_ZN5blink5mojom5blink45ServiceWorkerFetchResponseCallbackAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter"*), void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter"*)* @_ZN5blink5mojom5blink45ServiceWorkerFetchResponseCallbackAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTesting10OnResponseEN4mojo9StructPtrINS1_16FetchAPIResponseEEENS4_INS1_29ServiceWorkerFetchEventTimingEEE(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.115"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = alloca %"class.mojo::StructPtr.115", align 8
  %6 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)** %7, i64 5
  %9 = load %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %9(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"* %0) #7
  %11 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  %15 = bitcast %"class.mojo::StructPtr.115"* %5 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr.115", %"class.mojo::StructPtr.115"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr.115"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %10 to void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)***
  %20 = load void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)**, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)*, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)** %20, i64 2
  %22 = load void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)*, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.115"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %10, %"class.mojo::StructPtr"* nonnull %4, %"class.mojo::StructPtr.115"* nonnull %5) #7
  %23 = load %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"*, %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"** %16, align 8
  store %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* null, %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"** %16, align 8
  %24 = icmp eq %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink29ServiceWorkerFetchEventTimingD1Ev(%"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* nonnull %23) #7
  %26 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* %23 to i8*
  call void @_ZdlPv(i8* %26) #8
  br label %27

27:                                               ; preds = %3, %25
  %28 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %12, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %12, align 8
  %29 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %28) #7
  %31 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %28 to i8*
  call void @_ZdlPv(i8* %31) #8
  br label %32

32:                                               ; preds = %27, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTesting16OnResponseStreamEN4mojo9StructPtrINS1_16FetchAPIResponseEEENS4_INS1_25ServiceWorkerStreamHandleEEENS4_INS1_29ServiceWorkerFetchEventTimingEEE(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.123"* nocapture, %"class.mojo::StructPtr.115"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.mojo::StructPtr.123", align 8
  %7 = alloca %"class.mojo::StructPtr.115", align 8
  %8 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)** %9, i64 5
  %11 = load %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %11(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"* %0) #7
  %13 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %14 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 0, i64* %15, align 8
  %17 = bitcast %"class.mojo::StructPtr.123"* %6 to i64*
  %18 = getelementptr inbounds %"class.mojo::StructPtr.123", %"class.mojo::StructPtr.123"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.mojo::StructPtr.123"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 0, i64* %19, align 8
  %21 = bitcast %"class.mojo::StructPtr.115"* %7 to i64*
  %22 = getelementptr inbounds %"class.mojo::StructPtr.115", %"class.mojo::StructPtr.115"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.mojo::StructPtr.115"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 0, i64* %23, align 8
  %25 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %12 to void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)***
  %26 = load void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)**, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)*, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)** %26, i64 3
  %28 = load void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)*, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.123"*, %"class.mojo::StructPtr.115"*)** %27, align 8
  call void %28(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %12, %"class.mojo::StructPtr"* nonnull %5, %"class.mojo::StructPtr.123"* nonnull %6, %"class.mojo::StructPtr.115"* nonnull %7) #7
  %29 = load %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"*, %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"** %22, align 8
  store %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* null, %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"** %22, align 8
  %30 = icmp eq %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink29ServiceWorkerFetchEventTimingD1Ev(%"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* nonnull %29) #7
  %32 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* %29 to i8*
  call void @_ZdlPv(i8* %32) #8
  br label %33

33:                                               ; preds = %4, %31
  %34 = load %"class.blink::mojom::blink::ServiceWorkerStreamHandle"*, %"class.blink::mojom::blink::ServiceWorkerStreamHandle"** %18, align 8
  store %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* null, %"class.blink::mojom::blink::ServiceWorkerStreamHandle"** %18, align 8
  %35 = icmp eq %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  call void @_ZN5blink5mojom5blink25ServiceWorkerStreamHandleD1Ev(%"class.blink::mojom::blink::ServiceWorkerStreamHandle"* nonnull %34) #7
  %37 = bitcast %"class.blink::mojom::blink::ServiceWorkerStreamHandle"* %34 to i8*
  call void @_ZdlPv(i8* %37) #8
  br label %38

38:                                               ; preds = %33, %36
  %39 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %14, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %14, align 8
  %40 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %39) #7
  %42 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %39 to i8*
  call void @_ZdlPv(i8* %42) #8
  br label %43

43:                                               ; preds = %38, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTesting10OnFallbackEN4mojo9StructPtrINS1_29ServiceWorkerFetchEventTimingEEE(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*, %"class.mojo::StructPtr.115"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr.115", align 8
  %4 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)**, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)*, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %7(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.mojo::StructPtr.115"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr.115", %"class.mojo::StructPtr.115"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr.115"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %8 to void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr.115"*)***
  %14 = load void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr.115"*)**, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr.115"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr.115"*)*, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr.115"*)** %14, i64 4
  %16 = load void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr.115"*)*, void (%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*, %"class.mojo::StructPtr.115"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %8, %"class.mojo::StructPtr.115"* nonnull %3) #7
  %17 = load %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"*, %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"** %10, align 8
  store %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* null, %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"** %10, align 8
  %18 = icmp eq %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN5blink5mojom5blink29ServiceWorkerFetchEventTimingD1Ev(%"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* nonnull %17) #7
  %20 = bitcast %"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"* %17 to i8*
  call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink45ServiceWorkerFetchResponseCallbackAsyncWaiterC2EPNS1_34ServiceWorkerFetchResponseCallbackE(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter", %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"* %1, %"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink45ServiceWorkerFetchResponseCallbackAsyncWaiterD2Ev(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink34ServiceWorkerFetchResponseCallbackD2Ev(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink55ServiceWorkerFetchResponseCallbackInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ServiceWorkerFetchResponseCallbackInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink29ServiceWorkerFetchEventTimingD1Ev(%"class.blink::mojom::blink::ServiceWorkerFetchEventTiming"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink25ServiceWorkerStreamHandleD1Ev(%"class.blink::mojom::blink::ServiceWorkerStreamHandle"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
