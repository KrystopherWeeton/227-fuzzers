; ModuleID = '../../components/performance_manager/graph/worker_node_impl.cc'
source_filename = "../../components/performance_manager/graph/worker_node_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.performance_manager::WorkerNodeImpl" = type { %"class.performance_manager::PublicNodeImpl", %"class.performance_manager::TypedNodeBase", %"class.std::__1::basic_string", i32, %"class.performance_manager::ProcessNodeImpl"*, %"class.blink::MultiToken", %class.GURL, %"class.base::internal::flat_tree.298", %"class.base::internal::flat_tree.306", %"class.base::internal::flat_tree.306", %"class.performance_manager::ObservedPropertyImpl<performance_manager::WorkerNodeImpl, performance_manager::WorkerNode, performance_manager::WorkerNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", %"class.std::__1::unique_ptr.314", %"class.base::WeakPtrFactory.328" }
%"class.performance_manager::PublicNodeImpl" = type { %"class.performance_manager::WorkerNode" }
%"class.performance_manager::WorkerNode" = type { %"class.performance_manager::Node" }
%"class.performance_manager::Node" = type { i32 (...)** }
%"class.performance_manager::TypedNodeBase" = type { %"class.performance_manager::NodeBase" }
%"class.performance_manager::NodeBase" = type { i32 (...)**, i8, %"class.performance_manager::GraphImpl"* }
%"class.performance_manager::GraphImpl" = type <{ %"class.performance_manager::Graph", %"class.std::__1::unique_ptr", %"class.std::__1::unordered_set", %"class.std::__1::map", %"class.std::__1::map.26", %"class.ukm::UkmRecorder"*, %"class.std::__1::vector", %"class.std::__1::vector.42", %"class.std::__1::vector.49", %"class.std::__1::vector.56", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %"class.performance_manager::OwnedObjects", %"class.std::__1::unique_ptr.85", %"class.std::__1::map.91", %"class.performance_manager::RegisteredObjects", i64, %"class.performance_manager::NodeBase"*, i32, [4 x i8] }>
%"class.performance_manager::Graph" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.performance_manager::SystemNodeImpl"* }
%"class.performance_manager::SystemNodeImpl" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.performance_manager::GraphObserver"**, %"class.performance_manager::GraphObserver"**, %"class.std::__1::__compressed_pair.37" }
%"class.performance_manager::GraphObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.performance_manager::GraphObserver"** }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.performance_manager::FrameNodeObserver"**, %"class.performance_manager::FrameNodeObserver"**, %"class.std::__1::__compressed_pair.44" }
%"class.performance_manager::FrameNodeObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.performance_manager::FrameNodeObserver"** }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.performance_manager::PageNodeObserver"**, %"class.performance_manager::PageNodeObserver"**, %"class.std::__1::__compressed_pair.51" }
%"class.performance_manager::PageNodeObserver" = type opaque
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.performance_manager::PageNodeObserver"** }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.performance_manager::ProcessNodeObserver"**, %"class.performance_manager::ProcessNodeObserver"**, %"class.std::__1::__compressed_pair.58" }
%"class.performance_manager::ProcessNodeObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.performance_manager::ProcessNodeObserver"** }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.performance_manager::SystemNodeObserver"**, %"class.performance_manager::SystemNodeObserver"**, %"class.std::__1::__compressed_pair.65" }
%"class.performance_manager::SystemNodeObserver" = type opaque
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.performance_manager::SystemNodeObserver"** }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"**, %"class.std::__1::__compressed_pair.72" }
%"class.performance_manager::WorkerNodeObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.performance_manager::WorkerNodeObserver"** }
%"class.performance_manager::OwnedObjects" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.performance_manager::GraphOwned"* }
%"class.performance_manager::GraphOwned" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::unique_ptr.79"* }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.performance_manager::NodeDataDescriberRegistry"* }
%"class.performance_manager::NodeDataDescriberRegistry" = type opaque
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.performance_manager::RegisteredObjects" = type { %"class.base::internal::flat_tree.102" }
%"class.base::internal::flat_tree.102" = type { %"class.std::__1::vector.103" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.performance_manager::GraphRegistered"**, %"class.performance_manager::GraphRegistered"**, %"class.std::__1::__compressed_pair.105" }
%"class.performance_manager::GraphRegistered" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.performance_manager::GraphRegistered"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.322" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %class.GURL* }
%"class.base::internal::flat_tree.298" = type { %"class.std::__1::vector.299" }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"**, %"class.std::__1::__compressed_pair.301" }
%"class.performance_manager::FrameNodeImpl" = type { %"class.performance_manager::PublicNodeImpl.329", %"class.performance_manager::TypedNodeBase.330", %"class.performance_manager::mojom::DocumentCoordinationUnit", %"class.mojo::Receiver.331", %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::PageNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"*, i32, i32, %"class.util::TokenType", i32, i32, %"class.performance_manager::RenderFrameHostProxy", %"class.base::internal::flat_tree.298", %"class.base::internal::flat_tree.334", %"class.base::internal::flat_tree.334", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.342", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.343", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.344", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.345", %"struct.performance_manager::FrameNodeImpl::DocumentProperties", %"class.base::internal::flat_tree.306", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.348", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.349", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.350", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.356", %"class.std::__1::unique_ptr.314", %"class.base::WeakPtr.357", %"class.base::WeakPtrFactory.358" }
%"class.performance_manager::PublicNodeImpl.329" = type { %"class.performance_manager::FrameNode" }
%"class.performance_manager::FrameNode" = type { %"class.performance_manager::Node" }
%"class.performance_manager::TypedNodeBase.330" = type { %"class.performance_manager::NodeBase" }
%"class.performance_manager::mojom::DocumentCoordinationUnit" = type { i32 (...)** }
%"class.mojo::Receiver.331" = type { %"class.mojo::internal::BindingState.332" }
%"class.mojo::internal::BindingState.332" = type { %"class.mojo::internal::BindingStateBase", %"class.performance_manager::mojom::DocumentCoordinationUnitStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.241", %"class.base::WeakPtrFactory.291" }
%class.scoped_refptr = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.118, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.204", %"class.absl::optional.209", %"class.absl::optional.156", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.232", i8, [7 x i8], %class.scoped_refptr.118, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.132 }
%class.scoped_refptr.132 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.133", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.133" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.134" }
%"struct.std::__1::atomic.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.118, %"class.std::__1::unique_ptr.141", %"class.absl::optional", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i32, i32, %"class.absl::optional.156", %"class.std::__1::unique_ptr.161", i8, i64, %class.scoped_refptr.193, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.203" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.139 }
%class.scoped_refptr.139 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.140", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.140" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.118, i8, %"class.mojo::ScopedHandleBase.144", %class.scoped_refptr.145, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.146" }
%"class.mojo::ScopedHandleBase.144" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.145 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.146" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.151", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.151" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.164", i8, i64, %class.scoped_refptr.165, %class.scoped_refptr.189 }
%"class.base::RepeatingCallback.164" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.165 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.167", %"class.std::__1::map.178", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.167" = type { %"class.std::__1::__tree.168" }
%"class.std::__1::__tree.168" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.178" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%class.scoped_refptr.189 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.193 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.194", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.196", %"struct.std::__1::atomic.196", %"struct.std::__1::atomic.196", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.194" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.201 }
%class.scoped_refptr.201 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.359", [4 x i8], %"class.base::RepeatingCallback.244", %class.scoped_refptr.118, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.360", [4 x i8] }>
%"class.base::RefCountedThreadSafe.359" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.244" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.360" = type { %"struct.std::__1::__atomic_base.361" }
%"struct.std::__1::__atomic_base.361" = type { %"struct.std::__1::__atomic_base.362" }
%"struct.std::__1::__atomic_base.362" = type { %"struct.std::__1::__cxx_atomic_impl.363" }
%"struct.std::__1::__cxx_atomic_impl.363" = type { %"struct.std::__1::__cxx_atomic_base_impl.364" }
%"struct.std::__1::__cxx_atomic_base_impl.364" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.202 }
%class.scoped_refptr.202 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.203" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.absl::optional.204" = type { %"class.absl::optional_internal::optional_data.205" }
%"class.absl::optional_internal::optional_data.205" = type { %"class.absl::optional_internal::optional_data_base.206" }
%"class.absl::optional_internal::optional_data_base.206" = type { %"class.absl::optional_internal::optional_data_dtor_base.207" }
%"class.absl::optional_internal::optional_data_dtor_base.207" = type { i8, %union.anon.208 }
%union.anon.208 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.209" = type { %"class.absl::optional_internal::optional_data.210" }
%"class.absl::optional_internal::optional_data.210" = type { %"class.absl::optional_internal::optional_data_base.211" }
%"class.absl::optional_internal::optional_data_base.211" = type { %"class.absl::optional_internal::optional_data_dtor_base.212" }
%"class.absl::optional_internal::optional_data_dtor_base.212" = type { i8, [7 x i8], %union.anon.213 }
%union.anon.213 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.156" = type { %"class.absl::optional_internal::optional_data.157" }
%"class.absl::optional_internal::optional_data.157" = type { %"class.absl::optional_internal::optional_data_base.158" }
%"class.absl::optional_internal::optional_data_base.158" = type { %"class.absl::optional_internal::optional_data_dtor_base.159" }
%"class.absl::optional_internal::optional_data_dtor_base.159" = type { i8, %union.anon.160 }
%union.anon.160 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.218 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.218 = type { %"class.std::__1::map.220" }
%"class.std::__1::map.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.231"*, i64 }
%"class.std::__1::unique_ptr.231" = type opaque
%"class.std::__1::map.232" = type { %"class.std::__1::__tree.233" }
%"class.std::__1::__tree.233" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%class.scoped_refptr.118 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.119" }>
%"class.base::RefCountedThreadSafe.119" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.244", %"class.base::OnceCallback.245", %"class.absl::optional.246", %"class.absl::optional.251", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.258", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.266", %"class.std::__1::map.277", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.286", i8, %class.scoped_refptr.118, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.287" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.245" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.246" = type { %"class.absl::optional_internal::optional_data.247" }
%"class.absl::optional_internal::optional_data.247" = type { %"class.absl::optional_internal::optional_data_base.248" }
%"class.absl::optional_internal::optional_data_base.248" = type { %"class.absl::optional_internal::optional_data_dtor_base.249" }
%"class.absl::optional_internal::optional_data_dtor_base.249" = type { i8, %union.anon.250 }
%union.anon.250 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.251" = type { %"class.absl::optional_internal::optional_data.252" }
%"class.absl::optional_internal::optional_data.252" = type { %"class.absl::optional_internal::optional_data_base.253" }
%"class.absl::optional_internal::optional_data_base.253" = type { %"class.absl::optional_internal::optional_data_dtor_base.254" }
%"class.absl::optional_internal::optional_data_dtor_base.254" = type { i8, %union.anon.255 }
%union.anon.255 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.118, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.256" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.256" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.257 }
%class.scoped_refptr.257 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.261", %class.scoped_refptr.262 }
%"class.base::RepeatingCallback.261" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.262 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.266" = type { %"class.std::__1::__tree.267" }
%"class.std::__1::__tree.267" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.277" = type { %"class.std::__1::__tree.278" }
%"class.std::__1::__tree.278" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.base::OnceCallback.286" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.287" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.291" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.performance_manager::mojom::DocumentCoordinationUnitStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.performance_manager::mojom::DocumentCoordinationUnit"* }
%"class.performance_manager::PageNodeImpl" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias.333" }
%"class.base::StrongAlias.333" = type { %"class.base::UnguessableToken" }
%"class.performance_manager::RenderFrameHostProxy" = type { %"struct.content::GlobalFrameRoutingId" }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"class.base::internal::flat_tree.334" = type { %"class.std::__1::vector.335" }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %"class.performance_manager::PageNodeImpl"**, %"class.performance_manager::PageNodeImpl"**, %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.performance_manager::PageNodeImpl"** }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges" = type { i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.342" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.343" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.344" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.345" = type { i8 }
%"struct.performance_manager::FrameNodeImpl::DocumentProperties" = type <{ %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", i8, %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.346", %"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.347", [5 x i8] }>
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue" = type { %class.GURL }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.346" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.347" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.348" = type { %"class.performance_manager::execution_context_priority::PriorityAndReason" }
%"class.performance_manager::execution_context_priority::PriorityAndReason" = type { i8, i8* }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.349" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChanges.350" = type { %"class.absl::optional.351" }
%"class.absl::optional.351" = type { %"class.absl::optional_internal::optional_data.352" }
%"class.absl::optional_internal::optional_data.352" = type { %"class.absl::optional_internal::optional_data_base.353" }
%"class.absl::optional_internal::optional_data_base.353" = type { %"class.absl::optional_internal::optional_data_dtor_base.354" }
%"class.absl::optional_internal::optional_data_dtor_base.354" = type { i8, %union.anon.355 }
%union.anon.355 = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::FrameNodeImpl, performance_manager::FrameNode, performance_manager::FrameNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue.356" = type { i32 }
%"class.base::WeakPtr.357" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.358" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.performance_manager::FrameNodeImpl"** }
%"class.base::internal::flat_tree.306" = type { %"class.std::__1::vector.307" }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"**, %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.performance_manager::WorkerNodeImpl"** }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::WorkerNodeImpl, performance_manager::WorkerNode, performance_manager::WorkerNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue" = type { %"class.performance_manager::execution_context_priority::PriorityAndReason" }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.performance_manager::NodeAttachedData"* }
%"class.performance_manager::NodeAttachedData" = type { i32 (...)** }
%"class.base::WeakPtrFactory.328" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.performance_manager::ProcessNodeImpl" = type { %"class.performance_manager::PublicNodeImpl.115", %"class.performance_manager::TypedNodeBase.116", %"class.performance_manager::mojom::ProcessCoordinationUnit", %"class.mojo::Receiver", i64, i64, i32, %"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesAlways", %"class.base::Time", %"class.absl::optional.293", i32, %"class.performance_manager::RenderProcessHostProxy", %"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChanges", %"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", %"class.base::internal::flat_tree.298", %"class.base::internal::flat_tree.306", %"class.performance_manager::InternalNodeAttachedDataStorage", %"class.std::__1::unique_ptr.314", %"class.base::WeakPtr.320", %"class.base::WeakPtrFactory.321" }
%"class.performance_manager::PublicNodeImpl.115" = type { %"class.performance_manager::ProcessNode" }
%"class.performance_manager::ProcessNode" = type { %"class.performance_manager::Node" }
%"class.performance_manager::TypedNodeBase.116" = type { %"class.performance_manager::NodeBase" }
%"class.performance_manager::mojom::ProcessCoordinationUnit" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.performance_manager::mojom::ProcessCoordinationUnitStub" }
%"class.performance_manager::mojom::ProcessCoordinationUnitStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.performance_manager::mojom::ProcessCoordinationUnit"* }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesAlways" = type { %"class.base::Process" }
%"class.base::Process" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.292" }
%"class.base::time_internal::TimeBase.292" = type { i64 }
%"class.absl::optional.293" = type { %"class.absl::optional_internal::optional_data.294" }
%"class.absl::optional_internal::optional_data.294" = type { %"class.absl::optional_internal::optional_data_base.295" }
%"class.absl::optional_internal::optional_data_base.295" = type { %"class.absl::optional_internal::optional_data_dtor_base.296" }
%"class.absl::optional_internal::optional_data_dtor_base.296" = type { i8, %union.anon.297 }
%union.anon.297 = type { i32 }
%"class.performance_manager::RenderProcessHostProxy" = type { %"class.performance_manager::RenderProcessHostId" }
%"class.performance_manager::RenderProcessHostId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChanges" = type { i8 }
%"class.performance_manager::ObservedPropertyImpl<performance_manager::ProcessNodeImpl, performance_manager::ProcessNode, performance_manager::ProcessNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue" = type { i8 }
%"class.performance_manager::InternalNodeAttachedDataStorage" = type { %"class.performance_manager::NodeAttachedData"*, [16 x i8] }
%"class.base::WeakPtr.320" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.321" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::internal::flat_tree.370" = type { %"class.std::__1::vector.371" }
%"class.std::__1::vector.371" = type { %"class.std::__1::__vector_base.372" }
%"class.std::__1::__vector_base.372" = type { %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"**, %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.performance_manager::FrameNode"** }
%"class.base::internal::flat_tree.382" = type { %"class.std::__1::vector.383" }
%"class.std::__1::vector.383" = type { %"class.std::__1::__vector_base.384" }
%"class.std::__1::__vector_base.384" = type { %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"**, %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.performance_manager::WorkerNode"** }
%"class.base::RepeatingCallback.394" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::__split_buffer" = type { %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"**, %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.302", %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.std::__1::allocator.304"* }
%"class.std::__1::allocator.304" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.411" = type { %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"**, %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.310", %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.std::__1::allocator.312"* }
%"class.std::__1::allocator.312" = type { i8 }
%"struct.std::__1::__split_buffer.420" = type { %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"**, %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.374", %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.std::__1::allocator.376"* }
%"class.std::__1::allocator.376" = type { i8 }
%"struct.std::__1::__split_buffer.427" = type { %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"**, %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.386", %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.std::__1::allocator.388"* }
%"class.std::__1::allocator.388" = type { i8 }

$_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE8GetGraphEv = comdat any

$_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE12GetNodeStateEv = comdat any

$_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE11GetImplTypeEv = comdat any

$_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE7GetImplEv = comdat any

$_ZNK19performance_manager13TypedNodeBaseINS_14WorkerNodeImplENS_10WorkerNodeENS_18WorkerNodeObserverEE6ToNodeEv = comdat any

$_ZN19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEED0Ev = comdat any

$_ZNSt3__16vectorIPN19performance_manager13FrameNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN19performance_manager13FrameNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIPN19performance_manager14WorkerNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN19performance_manager14WorkerNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIPKN19performance_manager9FrameNodeENS_9allocatorIS4_EEE7emplaceIJS4_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPKN19performance_manager9FrameNodeERNS_9allocatorIS4_EEE12emplace_backIJS4_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIPKN19performance_manager10WorkerNodeENS_9allocatorIS4_EEE7emplaceIJS4_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPKN19performance_manager10WorkerNodeERNS_9allocatorIS4_EEE12emplace_backIJS4_EEEvDpOT_ = comdat any

$_ZTVN19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEEE = comdat any

@_ZN19performance_manager14WorkerNodeImpl22kDefaultPriorityReasonE = hidden constant [24 x i8] c"default worker priority\00", align 16
@_ZTVN19performance_manager14WorkerNodeImplE = hidden unnamed_addr constant { [21 x i8*], [8 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZN19performance_manager14WorkerNodeImplD2Ev to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZN19performance_manager14WorkerNodeImplD0Ev to i8*), i8* bitcast (%"class.performance_manager::Graph"* (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE8GetGraphEv to i8*), i8* bitcast (i32 (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE12GetNodeStateEv to i8*), i8* bitcast (i64 (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE11GetImplTypeEv to i8*), i8* bitcast (i8* (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE7GetImplEv to i8*), i8* bitcast (i32 (%"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl13GetWorkerTypeEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl19GetBrowserContextIDEv to i8*), i8* bitcast (%"class.performance_manager::ProcessNode"* (%"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl14GetProcessNodeEv to i8*), i8* bitcast (%"class.blink::MultiToken"* (%"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl14GetWorkerTokenEv to i8*), i8* bitcast (%class.GURL* (%"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl6GetURLEv to i8*), i8* bitcast (void (%"class.base::internal::flat_tree.370"*, %"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl15GetClientFramesEv to i8*), i8* bitcast (void (%"class.base::internal::flat_tree.382"*, %"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl16GetClientWorkersEv to i8*), i8* bitcast (void (%"class.base::internal::flat_tree.382"*, %"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl15GetChildWorkersEv to i8*), i8* bitcast (i1 (%"class.performance_manager::WorkerNodeImpl"*, %"class.base::RepeatingCallback.394"*)* @_ZNK19performance_manager14WorkerNodeImpl26VisitChildDedicatedWorkersERKN4base17RepeatingCallbackIFbPKNS_10WorkerNodeEEEE to i8*), i8* bitcast (%"class.performance_manager::execution_context_priority::PriorityAndReason"* (%"class.performance_manager::WorkerNodeImpl"*)* @_ZNK19performance_manager14WorkerNodeImpl20GetPriorityAndReasonEv to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZN19performance_manager14WorkerNodeImpl14OnJoiningGraphEv to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZN19performance_manager14WorkerNodeImpl20OnBeforeLeavingGraphEv to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZN19performance_manager14WorkerNodeImpl22RemoveNodeAttachedDataEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZThn8_N19performance_manager14WorkerNodeImplD1Ev to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZThn8_N19performance_manager14WorkerNodeImplD0Ev to i8*), i8* bitcast (%"class.performance_manager::Node"* (%"class.performance_manager::TypedNodeBase"*)* @_ZNK19performance_manager13TypedNodeBaseINS_14WorkerNodeImplENS_10WorkerNodeENS_18WorkerNodeObserverEE6ToNodeEv to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZThn8_N19performance_manager14WorkerNodeImpl14OnJoiningGraphEv to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZThn8_N19performance_manager14WorkerNodeImpl20OnBeforeLeavingGraphEv to i8*), i8* bitcast (void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZThn8_N19performance_manager14WorkerNodeImpl22RemoveNodeAttachedDataEv to i8*)] }, align 8
@_ZTVN19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEEE = linkonce_odr hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.performance_manager::WorkerNode"*)* @_ZN19performance_manager10WorkerNodeD2Ev to i8*), i8* bitcast (void (%"class.performance_manager::PublicNodeImpl"*)* @_ZN19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEED0Ev to i8*), i8* bitcast (%"class.performance_manager::Graph"* (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE8GetGraphEv to i8*), i8* bitcast (i32 (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE12GetNodeStateEv to i8*), i8* bitcast (i64 (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE11GetImplTypeEv to i8*), i8* bitcast (i8* (%"class.performance_manager::PublicNodeImpl"*)* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE7GetImplEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN19performance_manager8NodeBase13kNodeBaseTypeE = external local_unnamed_addr constant i64, align 8

@_ZN19performance_manager14WorkerNodeImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_10WorkerNode10WorkerTypeEPNS_15ProcessNodeImplERKN5blink10MultiTokenIN4util9TokenTypeINSE_30DedicatedWorkerTokenTypeMarkerEEENSH_INSE_28ServiceWorkerTokenTypeMarkerEEEJNSH_INSE_27SharedWorkerTokenTypeMarkerEEEEEE = hidden unnamed_addr alias void (%"class.performance_manager::WorkerNodeImpl"*, %"class.std::__1::basic_string"*, i32, %"class.performance_manager::ProcessNodeImpl"*, %"class.blink::MultiToken"*), void (%"class.performance_manager::WorkerNodeImpl"*, %"class.std::__1::basic_string"*, i32, %"class.performance_manager::ProcessNodeImpl"*, %"class.blink::MultiToken"*)* @_ZN19performance_manager14WorkerNodeImplC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_10WorkerNode10WorkerTypeEPNS_15ProcessNodeImplERKN5blink10MultiTokenIN4util9TokenTypeINSE_30DedicatedWorkerTokenTypeMarkerEEENSH_INSE_28ServiceWorkerTokenTypeMarkerEEEJNSH_INSE_27SharedWorkerTokenTypeMarkerEEEEEE
@_ZN19performance_manager14WorkerNodeImplD1Ev = hidden unnamed_addr alias void (%"class.performance_manager::WorkerNodeImpl"*), void (%"class.performance_manager::WorkerNodeImpl"*)* @_ZN19performance_manager14WorkerNodeImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImplC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_10WorkerNode10WorkerTypeEPNS_15ProcessNodeImplERKN5blink10MultiTokenIN4util9TokenTypeINSE_30DedicatedWorkerTokenTypeMarkerEEENSH_INSE_28ServiceWorkerTokenTypeMarkerEEEJNSH_INSE_27SharedWorkerTokenTypeMarkerEEEEEE(%"class.performance_manager::WorkerNodeImpl"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, %"class.performance_manager::ProcessNodeImpl"*, %"class.blink::MultiToken"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN19performance_manager10WorkerNodeC2Ev(%"class.performance_manager::WorkerNode"* %6) #12
  %7 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN19performance_manager8NodeBaseC2ENS_12NodeTypeEnumE(%"class.performance_manager::NodeBase"* %8, i8 zeroext 5) #12
  %9 = bitcast %"class.performance_manager::WorkerNodeImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [8 x i8*] }, { [21 x i8*], [8 x i8*] }* @_ZTVN19performance_manager14WorkerNodeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [8 x i8*] }, { [21 x i8*], [8 x i8*] }* @_ZTVN19performance_manager14WorkerNodeImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #12
  br label %23

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %20, i64 %22) #12
  br label %23

23:                                               ; preds = %15, %18
  %24 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 3
  store i32 %2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 4
  store %"class.performance_manager::ProcessNodeImpl"* %3, %"class.performance_manager::ProcessNodeImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 5
  %27 = bitcast %"class.blink::MultiToken"* %26 to i8*
  %28 = bitcast %"class.blink::MultiToken"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false)
  %29 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 6
  tail call void @_ZN4GURLC1Ev(%class.GURL* %29) #12
  %30 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7
  %31 = bitcast %"class.base::internal::flat_tree.298"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 72, i1 false)
  %32 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 10, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 10, i32 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN19performance_manager14WorkerNodeImpl22kDefaultPriorityReasonE, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 11
  %35 = bitcast %"class.std::__1::unique_ptr.314"* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 12, i32 0
  %37 = ptrtoint %"class.performance_manager::WorkerNodeImpl"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %36, i64 %37) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImplD2Ev(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.performance_manager::WorkerNodeImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [8 x i8*] }, { [21 x i8*], [8 x i8*] }* @_ZTVN19performance_manager14WorkerNodeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [8 x i8*] }, { [21 x i8*], [8 x i8*] }* @_ZTVN19performance_manager14WorkerNodeImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.performance_manager::NodeAttachedData"*, %"class.performance_manager::NodeAttachedData"** %4, align 8
  store %"class.performance_manager::NodeAttachedData"* null, %"class.performance_manager::NodeAttachedData"** %4, align 8
  %6 = icmp eq %"class.performance_manager::NodeAttachedData"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.performance_manager::NodeAttachedData"* %5 to void (%"class.performance_manager::NodeAttachedData"*)***
  %9 = load void (%"class.performance_manager::NodeAttachedData"*)**, void (%"class.performance_manager::NodeAttachedData"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.performance_manager::NodeAttachedData"*)*, void (%"class.performance_manager::NodeAttachedData"*)** %9, i64 1
  %11 = load void (%"class.performance_manager::NodeAttachedData"*)*, void (%"class.performance_manager::NodeAttachedData"*)** %10, align 8
  tail call void %11(%"class.performance_manager::NodeAttachedData"* nonnull %5) #12
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %14 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %13, align 8
  %15 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %14 to i64
  %18 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %19 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.performance_manager::WorkerNodeImpl"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %22, align 8
  %24 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %23 to i64
  %27 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %28 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"class.performance_manager::WorkerNodeImpl"** %23 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %32 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %31, align 8
  %33 = icmp eq %"class.performance_manager::FrameNodeImpl"** %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %32 to i64
  %36 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %37 = bitcast %"class.performance_manager::FrameNodeImpl"*** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.performance_manager::FrameNodeImpl"** %32 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 6
  tail call void @_ZN4GURLD1Ev(%class.GURL* %40) #12
  %41 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %39, %46
  %50 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN19performance_manager8NodeBaseD2Ev(%"class.performance_manager::NodeBase"* %50) #12
  %51 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN19performance_manager10WorkerNodeD2Ev(%"class.performance_manager::WorkerNode"* %51) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N19performance_manager14WorkerNodeImplD1Ev(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.performance_manager::WorkerNodeImpl"*
  tail call void @_ZN19performance_manager14WorkerNodeImplD2Ev(%"class.performance_manager::WorkerNodeImpl"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImplD0Ev(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN19performance_manager14WorkerNodeImplD2Ev(%"class.performance_manager::WorkerNodeImpl"* %0) #12
  %2 = bitcast %"class.performance_manager::WorkerNodeImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N19performance_manager14WorkerNodeImplD0Ev(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.performance_manager::WorkerNodeImpl"*
  tail call void @_ZN19performance_manager14WorkerNodeImplD2Ev(%"class.performance_manager::WorkerNodeImpl"* %3) #12
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl14AddClientFrameEPNS_13FrameNodeImplE(%"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::FrameNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::FrameNodeImpl"*, align 8
  store %"class.performance_manager::FrameNodeImpl"* %1, %"class.performance_manager::FrameNodeImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.298", %"class.base::internal::flat_tree.298"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %5, align 8
  %7 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %8 = bitcast %"class.performance_manager::FrameNodeImpl"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"class.performance_manager::FrameNodeImpl"**
  br i1 %12, label %29, label %14

14:                                               ; preds = %2
  %15 = ashr exact i64 %11, 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.performance_manager::FrameNodeImpl"** [ %6, %14 ], [ %27, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %26, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %17, i64 %19
  %21 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %20, align 8
  %22 = icmp ult %"class.performance_manager::FrameNodeImpl"* %21, %1
  %23 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %20, i64 1
  %24 = xor i64 %19, -1
  %25 = add i64 %18, %24
  %26 = select i1 %22, i64 %25, i64 %19
  %27 = select i1 %22, %"class.performance_manager::FrameNodeImpl"** %23, %"class.performance_manager::FrameNodeImpl"** %17
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %16

29:                                               ; preds = %16, %2
  %30 = phi %"class.performance_manager::FrameNodeImpl"** [ %6, %2 ], [ %27, %16 ]
  %31 = icmp eq %"class.performance_manager::FrameNodeImpl"** %30, %13
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %30, align 8
  %34 = icmp ugt %"class.performance_manager::FrameNodeImpl"* %33, %1
  br i1 %34, label %35, label %39

35:                                               ; preds = %32, %29
  %36 = getelementptr inbounds %"class.base::internal::flat_tree.298", %"class.base::internal::flat_tree.298"* %4, i64 0, i32 0
  %37 = call %"class.performance_manager::FrameNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager13FrameNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.299"* %36, %"class.performance_manager::FrameNodeImpl"** %30, %"class.performance_manager::FrameNodeImpl"** nonnull dereferenceable(8) %3) #12
  %38 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %3, align 8
  br label %39

39:                                               ; preds = %32, %35
  %40 = phi %"class.performance_manager::FrameNodeImpl"* [ %1, %32 ], [ %38, %35 ]
  call void @_ZN19performance_manager13FrameNodeImpl14AddChildWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::FrameNodeImpl"* %40, %"class.performance_manager::WorkerNodeImpl"* %0) #12
  %41 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %42 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %41, align 8
  %43 = call dereferenceable(24) %"class.std::__1::vector.70"* @_ZNK19performance_manager9GraphImpl12GetObserversINS_18WorkerNodeObserverEEERKNSt3__16vectorIPT_NS3_9allocatorIS6_EEEEv(%"class.performance_manager::GraphImpl"* %42) #12
  %44 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %43, i64 0, i32 0, i32 1
  %47 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %46, align 8
  %48 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %45, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  %51 = bitcast %"class.performance_manager::FrameNodeImpl"** %3 to %"class.performance_manager::FrameNode"**
  br label %53

52:                                               ; preds = %53, %39
  ret void

53:                                               ; preds = %49, %53
  %54 = phi %"class.performance_manager::WorkerNodeObserver"** [ %45, %49 ], [ %61, %53 ]
  %55 = load %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %54, align 8
  %56 = load %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %51, align 8
  %57 = bitcast %"class.performance_manager::WorkerNodeObserver"* %55 to void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)***
  %58 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)**, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)** %58, i64 5
  %60 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)** %59, align 8
  call void %60(%"class.performance_manager::WorkerNodeObserver"* %55, %"class.performance_manager::WorkerNode"* %50, %"class.performance_manager::FrameNode"* %56) #12
  %61 = getelementptr inbounds %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %54, i64 1
  %62 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %61, %47
  br i1 %62, label %52, label %53
}

declare void @_ZN19performance_manager13FrameNodeImpl14AddChildWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl17RemoveClientFrameEPNS_13FrameNodeImplE(%"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::FrameNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %3, align 8
  %5 = tail call dereferenceable(24) %"class.std::__1::vector.70"* @_ZNK19performance_manager9GraphImpl12GetObserversINS_18WorkerNodeObserverEEERKNSt3__16vectorIPT_NS3_9allocatorIS6_EEEEv(%"class.performance_manager::GraphImpl"* %4) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %9 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %8, align 8
  %10 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %7, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl", %"class.performance_manager::FrameNodeImpl"* %1, i64 0, i32 0, i32 0
  br label %65

14:                                               ; preds = %65, %2
  tail call void @_ZN19performance_manager13FrameNodeImpl17RemoveChildWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::FrameNodeImpl"* %1, %"class.performance_manager::WorkerNodeImpl"* %0) #12
  %15 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %15, align 8
  %17 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %18 = bitcast %"class.performance_manager::FrameNodeImpl"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %16 to i64
  %21 = sub i64 %19, %20
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %19 to %"class.performance_manager::FrameNodeImpl"**
  br i1 %22, label %41, label %24

24:                                               ; preds = %14
  %25 = ashr exact i64 %21, 3
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi %"class.performance_manager::FrameNodeImpl"** [ %16, %24 ], [ %37, %26 ]
  %28 = phi i64 [ %25, %24 ], [ %36, %26 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %27, i64 %29
  %31 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %30, align 8
  %32 = icmp ult %"class.performance_manager::FrameNodeImpl"* %31, %1
  %33 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %30, i64 1
  %34 = xor i64 %29, -1
  %35 = add i64 %28, %34
  %36 = select i1 %32, i64 %35, i64 %29
  %37 = select i1 %32, %"class.performance_manager::FrameNodeImpl"** %33, %"class.performance_manager::FrameNodeImpl"** %27
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %39, label %26

39:                                               ; preds = %26
  %40 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %37 to i64
  br label %41

41:                                               ; preds = %39, %14
  %42 = phi i64 [ %40, %39 ], [ %20, %14 ]
  %43 = phi %"class.performance_manager::FrameNodeImpl"** [ %37, %39 ], [ %16, %14 ]
  %44 = icmp eq %"class.performance_manager::FrameNodeImpl"** %43, %23
  br i1 %44, label %51, label %45

45:                                               ; preds = %41
  %46 = load %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %43, align 8
  %47 = icmp ugt %"class.performance_manager::FrameNodeImpl"* %46, %1
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %43, i64 1
  %50 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %49 to i64
  br label %51

51:                                               ; preds = %48, %45, %41
  %52 = phi i64 [ %50, %48 ], [ %42, %41 ], [ %42, %45 ]
  %53 = inttoptr i64 %52 to %"class.performance_manager::FrameNodeImpl"**
  %54 = icmp eq %"class.performance_manager::FrameNodeImpl"** %43, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = sub i64 %19, %52
  %57 = ashr exact i64 %56, 3
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.performance_manager::FrameNodeImpl"** %43 to i8*
  %61 = inttoptr i64 %52 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 %56, i1 false) #12
  br label %62

62:                                               ; preds = %59, %55
  %63 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %43, i64 %57
  store %"class.performance_manager::FrameNodeImpl"** %63, %"class.performance_manager::FrameNodeImpl"*** %17, align 8
  br label %64

64:                                               ; preds = %51, %62
  ret void

65:                                               ; preds = %11, %65
  %66 = phi %"class.performance_manager::WorkerNodeObserver"** [ %7, %11 ], [ %72, %65 ]
  %67 = load %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %66, align 8
  %68 = bitcast %"class.performance_manager::WorkerNodeObserver"* %67 to void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)***
  %69 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)**, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)** %69, i64 6
  %71 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::FrameNode"*)** %70, align 8
  tail call void %71(%"class.performance_manager::WorkerNodeObserver"* %67, %"class.performance_manager::WorkerNode"* %12, %"class.performance_manager::FrameNode"* %13) #12
  %72 = getelementptr inbounds %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %66, i64 1
  %73 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %72, %9
  br i1 %73, label %14, label %65
}

declare void @_ZN19performance_manager13FrameNodeImpl17RemoveChildWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl15AddClientWorkerEPS0_(%"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::WorkerNodeImpl"*, align 8
  %4 = alloca %"class.performance_manager::WorkerNodeImpl"*, align 8
  store %"class.performance_manager::WorkerNodeImpl"* %1, %"class.performance_manager::WorkerNodeImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree.306", %"class.base::internal::flat_tree.306"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %6, align 8
  %8 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %9 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"class.performance_manager::WorkerNodeImpl"**
  br i1 %13, label %30, label %15

15:                                               ; preds = %2
  %16 = ashr exact i64 %12, 3
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"class.performance_manager::WorkerNodeImpl"** [ %7, %15 ], [ %28, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %27, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %18, i64 %20
  %22 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %21, align 8
  %23 = icmp ult %"class.performance_manager::WorkerNodeImpl"* %22, %1
  %24 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %21, i64 1
  %25 = xor i64 %20, -1
  %26 = add i64 %19, %25
  %27 = select i1 %23, i64 %26, i64 %20
  %28 = select i1 %23, %"class.performance_manager::WorkerNodeImpl"** %24, %"class.performance_manager::WorkerNodeImpl"** %18
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %17

30:                                               ; preds = %17, %2
  %31 = phi %"class.performance_manager::WorkerNodeImpl"** [ %7, %2 ], [ %28, %17 ]
  %32 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %31, %14
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %31, align 8
  %35 = icmp ugt %"class.performance_manager::WorkerNodeImpl"* %34, %1
  br i1 %35, label %36, label %40

36:                                               ; preds = %33, %30
  %37 = getelementptr inbounds %"class.base::internal::flat_tree.306", %"class.base::internal::flat_tree.306"* %5, i64 0, i32 0
  %38 = call %"class.performance_manager::WorkerNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager14WorkerNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.307"* %37, %"class.performance_manager::WorkerNodeImpl"** %31, %"class.performance_manager::WorkerNodeImpl"** nonnull dereferenceable(8) %4) #12
  %39 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %4, align 8
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi %"class.performance_manager::WorkerNodeImpl"* [ %1, %33 ], [ %39, %36 ]
  %42 = bitcast %"class.performance_manager::WorkerNodeImpl"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  store %"class.performance_manager::WorkerNodeImpl"* %0, %"class.performance_manager::WorkerNodeImpl"** %3, align 8
  %43 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %41, i64 0, i32 9
  %44 = getelementptr inbounds %"class.base::internal::flat_tree.306", %"class.base::internal::flat_tree.306"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %44, align 8
  %46 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %41, i64 0, i32 9, i32 0, i32 0, i32 1
  %47 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %45 to i64
  %50 = sub i64 %48, %49
  %51 = icmp eq i64 %50, 0
  %52 = inttoptr i64 %48 to %"class.performance_manager::WorkerNodeImpl"**
  br i1 %51, label %68, label %53

53:                                               ; preds = %40
  %54 = ashr exact i64 %50, 3
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi %"class.performance_manager::WorkerNodeImpl"** [ %45, %53 ], [ %66, %55 ]
  %57 = phi i64 [ %54, %53 ], [ %65, %55 ]
  %58 = lshr i64 %57, 1
  %59 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %56, i64 %58
  %60 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %59, align 8
  %61 = icmp ult %"class.performance_manager::WorkerNodeImpl"* %60, %0
  %62 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %59, i64 1
  %63 = xor i64 %58, -1
  %64 = add i64 %57, %63
  %65 = select i1 %61, i64 %64, i64 %58
  %66 = select i1 %61, %"class.performance_manager::WorkerNodeImpl"** %62, %"class.performance_manager::WorkerNodeImpl"** %56
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %68, label %55

68:                                               ; preds = %55, %40
  %69 = phi %"class.performance_manager::WorkerNodeImpl"** [ %45, %40 ], [ %66, %55 ]
  %70 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %69, %52
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %69, align 8
  %73 = icmp ugt %"class.performance_manager::WorkerNodeImpl"* %72, %0
  br i1 %73, label %74, label %77

74:                                               ; preds = %71, %68
  %75 = getelementptr inbounds %"class.base::internal::flat_tree.306", %"class.base::internal::flat_tree.306"* %43, i64 0, i32 0
  %76 = call %"class.performance_manager::WorkerNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager14WorkerNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.307"* %75, %"class.performance_manager::WorkerNodeImpl"** %69, %"class.performance_manager::WorkerNodeImpl"** nonnull dereferenceable(8) %3) #12
  br label %77

77:                                               ; preds = %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %78 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %79 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %78, align 8
  %80 = call dereferenceable(24) %"class.std::__1::vector.70"* @_ZNK19performance_manager9GraphImpl12GetObserversINS_18WorkerNodeObserverEEERKNSt3__16vectorIPT_NS3_9allocatorIS6_EEEEv(%"class.performance_manager::GraphImpl"* %79) #12
  %81 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %80, i64 0, i32 0, i32 1
  %84 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %83, align 8
  %85 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %82, %84
  br i1 %85, label %89, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  %88 = bitcast %"class.performance_manager::WorkerNodeImpl"** %4 to %"class.performance_manager::WorkerNode"**
  br label %90

89:                                               ; preds = %90, %77
  ret void

90:                                               ; preds = %86, %90
  %91 = phi %"class.performance_manager::WorkerNodeObserver"** [ %82, %86 ], [ %98, %90 ]
  %92 = load %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %91, align 8
  %93 = load %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %88, align 8
  %94 = bitcast %"class.performance_manager::WorkerNodeObserver"* %92 to void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)***
  %95 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)**, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)** %95, i64 7
  %97 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)** %96, align 8
  call void %97(%"class.performance_manager::WorkerNodeObserver"* %92, %"class.performance_manager::WorkerNode"* %87, %"class.performance_manager::WorkerNode"* %93) #12
  %98 = getelementptr inbounds %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %91, i64 1
  %99 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %98, %84
  br i1 %99, label %89, label %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl14AddChildWorkerEPS0_(%"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::WorkerNodeImpl"*, align 8
  store %"class.performance_manager::WorkerNodeImpl"* %1, %"class.performance_manager::WorkerNodeImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.306", %"class.base::internal::flat_tree.306"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %5, align 8
  %7 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %8 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"class.performance_manager::WorkerNodeImpl"**
  br i1 %12, label %29, label %14

14:                                               ; preds = %2
  %15 = ashr exact i64 %11, 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.performance_manager::WorkerNodeImpl"** [ %6, %14 ], [ %27, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %26, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %17, i64 %19
  %21 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %20, align 8
  %22 = icmp ult %"class.performance_manager::WorkerNodeImpl"* %21, %1
  %23 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %20, i64 1
  %24 = xor i64 %19, -1
  %25 = add i64 %18, %24
  %26 = select i1 %22, i64 %25, i64 %19
  %27 = select i1 %22, %"class.performance_manager::WorkerNodeImpl"** %23, %"class.performance_manager::WorkerNodeImpl"** %17
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %16

29:                                               ; preds = %16, %2
  %30 = phi %"class.performance_manager::WorkerNodeImpl"** [ %6, %2 ], [ %27, %16 ]
  %31 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %30, %13
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %30, align 8
  %34 = icmp ugt %"class.performance_manager::WorkerNodeImpl"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %32, %29
  %36 = getelementptr inbounds %"class.base::internal::flat_tree.306", %"class.base::internal::flat_tree.306"* %4, i64 0, i32 0
  %37 = call %"class.performance_manager::WorkerNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager14WorkerNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.307"* %36, %"class.performance_manager::WorkerNodeImpl"** %30, %"class.performance_manager::WorkerNodeImpl"** nonnull dereferenceable(8) %3) #12
  br label %38

38:                                               ; preds = %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl18RemoveClientWorkerEPS0_(%"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %3, align 8
  %5 = tail call dereferenceable(24) %"class.std::__1::vector.70"* @_ZNK19performance_manager9GraphImpl12GetObserversINS_18WorkerNodeObserverEEERKNSt3__16vectorIPT_NS3_9allocatorIS6_EEEEv(%"class.performance_manager::GraphImpl"* %4) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %9 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %8, align 8
  %10 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %7, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 0, i32 0
  br label %115

14:                                               ; preds = %115, %2
  %15 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %16 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %15, align 8
  %17 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 9, i32 0, i32 0, i32 1
  %18 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %16 to i64
  %21 = sub i64 %19, %20
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %19 to %"class.performance_manager::WorkerNodeImpl"**
  br i1 %22, label %41, label %24

24:                                               ; preds = %14
  %25 = ashr exact i64 %21, 3
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi %"class.performance_manager::WorkerNodeImpl"** [ %16, %24 ], [ %37, %26 ]
  %28 = phi i64 [ %25, %24 ], [ %36, %26 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %27, i64 %29
  %31 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %30, align 8
  %32 = icmp ult %"class.performance_manager::WorkerNodeImpl"* %31, %0
  %33 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %30, i64 1
  %34 = xor i64 %29, -1
  %35 = add i64 %28, %34
  %36 = select i1 %32, i64 %35, i64 %29
  %37 = select i1 %32, %"class.performance_manager::WorkerNodeImpl"** %33, %"class.performance_manager::WorkerNodeImpl"** %27
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %39, label %26

39:                                               ; preds = %26
  %40 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %37 to i64
  br label %41

41:                                               ; preds = %39, %14
  %42 = phi i64 [ %40, %39 ], [ %20, %14 ]
  %43 = phi %"class.performance_manager::WorkerNodeImpl"** [ %37, %39 ], [ %16, %14 ]
  %44 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %43, %23
  br i1 %44, label %51, label %45

45:                                               ; preds = %41
  %46 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %43, align 8
  %47 = icmp ugt %"class.performance_manager::WorkerNodeImpl"* %46, %0
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %43, i64 1
  %50 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %49 to i64
  br label %51

51:                                               ; preds = %48, %45, %41
  %52 = phi i64 [ %50, %48 ], [ %42, %41 ], [ %42, %45 ]
  %53 = inttoptr i64 %52 to %"class.performance_manager::WorkerNodeImpl"**
  %54 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %43, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = sub i64 %19, %52
  %57 = ashr exact i64 %56, 3
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.performance_manager::WorkerNodeImpl"** %43 to i8*
  %61 = inttoptr i64 %52 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 %56, i1 false) #12
  br label %62

62:                                               ; preds = %59, %55
  %63 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %43, i64 %57
  store %"class.performance_manager::WorkerNodeImpl"** %63, %"class.performance_manager::WorkerNodeImpl"*** %17, align 8
  br label %64

64:                                               ; preds = %51, %62
  %65 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %66 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %65, align 8
  %67 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %68 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %66 to i64
  %71 = sub i64 %69, %70
  %72 = icmp eq i64 %71, 0
  %73 = inttoptr i64 %69 to %"class.performance_manager::WorkerNodeImpl"**
  br i1 %72, label %91, label %74

74:                                               ; preds = %64
  %75 = ashr exact i64 %71, 3
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi %"class.performance_manager::WorkerNodeImpl"** [ %66, %74 ], [ %87, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %86, %76 ]
  %79 = lshr i64 %78, 1
  %80 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %77, i64 %79
  %81 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %80, align 8
  %82 = icmp ult %"class.performance_manager::WorkerNodeImpl"* %81, %1
  %83 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %80, i64 1
  %84 = xor i64 %79, -1
  %85 = add i64 %78, %84
  %86 = select i1 %82, i64 %85, i64 %79
  %87 = select i1 %82, %"class.performance_manager::WorkerNodeImpl"** %83, %"class.performance_manager::WorkerNodeImpl"** %77
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %76
  %90 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %87 to i64
  br label %91

91:                                               ; preds = %89, %64
  %92 = phi i64 [ %90, %89 ], [ %70, %64 ]
  %93 = phi %"class.performance_manager::WorkerNodeImpl"** [ %87, %89 ], [ %66, %64 ]
  %94 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %93, %73
  br i1 %94, label %101, label %95

95:                                               ; preds = %91
  %96 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %93, align 8
  %97 = icmp ugt %"class.performance_manager::WorkerNodeImpl"* %96, %1
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %93, i64 1
  %100 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %99 to i64
  br label %101

101:                                              ; preds = %98, %95, %91
  %102 = phi i64 [ %100, %98 ], [ %92, %91 ], [ %92, %95 ]
  %103 = inttoptr i64 %102 to %"class.performance_manager::WorkerNodeImpl"**
  %104 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %93, %103
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = sub i64 %69, %102
  %107 = ashr exact i64 %106, 3
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.performance_manager::WorkerNodeImpl"** %93 to i8*
  %111 = inttoptr i64 %102 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 %106, i1 false) #12
  br label %112

112:                                              ; preds = %109, %105
  %113 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %93, i64 %107
  store %"class.performance_manager::WorkerNodeImpl"** %113, %"class.performance_manager::WorkerNodeImpl"*** %67, align 8
  br label %114

114:                                              ; preds = %101, %112
  ret void

115:                                              ; preds = %11, %115
  %116 = phi %"class.performance_manager::WorkerNodeObserver"** [ %7, %11 ], [ %122, %115 ]
  %117 = load %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %116, align 8
  %118 = bitcast %"class.performance_manager::WorkerNodeObserver"* %117 to void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)***
  %119 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)**, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)** %119, i64 8
  %121 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"*)** %120, align 8
  tail call void %121(%"class.performance_manager::WorkerNodeObserver"* %117, %"class.performance_manager::WorkerNode"* %12, %"class.performance_manager::WorkerNode"* %13) #12
  %122 = getelementptr inbounds %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %116, i64 1
  %123 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %122, %9
  br i1 %123, label %14, label %115
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl17RemoveChildWorkerEPS0_(%"class.performance_manager::WorkerNodeImpl"* nocapture, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %3, align 8
  %5 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %6 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.performance_manager::WorkerNodeImpl"**
  br i1 %10, label %29, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.performance_manager::WorkerNodeImpl"** [ %4, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %15, i64 %17
  %19 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %18, align 8
  %20 = icmp ult %"class.performance_manager::WorkerNodeImpl"* %19, %1
  %21 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %23, i64 %17
  %25 = select i1 %20, %"class.performance_manager::WorkerNodeImpl"** %21, %"class.performance_manager::WorkerNodeImpl"** %15
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14
  %28 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %25 to i64
  br label %29

29:                                               ; preds = %27, %2
  %30 = phi i64 [ %28, %27 ], [ %8, %2 ]
  %31 = phi %"class.performance_manager::WorkerNodeImpl"** [ %25, %27 ], [ %4, %2 ]
  %32 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %31, %11
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = load %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %31, align 8
  %35 = icmp ugt %"class.performance_manager::WorkerNodeImpl"* %34, %1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %31, i64 1
  %38 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %37 to i64
  br label %39

39:                                               ; preds = %36, %33, %29
  %40 = phi i64 [ %38, %36 ], [ %30, %29 ], [ %30, %33 ]
  %41 = inttoptr i64 %40 to %"class.performance_manager::WorkerNodeImpl"**
  %42 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %31, %41
  br i1 %42, label %52, label %43

43:                                               ; preds = %39
  %44 = sub i64 %7, %40
  %45 = ashr exact i64 %44, 3
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.performance_manager::WorkerNodeImpl"** %31 to i8*
  %49 = inttoptr i64 %40 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 %44, i1 false) #12
  br label %50

50:                                               ; preds = %47, %43
  %51 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %31, i64 %45
  store %"class.performance_manager::WorkerNodeImpl"** %51, %"class.performance_manager::WorkerNodeImpl"*** %5, align 8
  br label %52

52:                                               ; preds = %39, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl20SetPriorityAndReasonERKNS_26execution_context_priority17PriorityAndReasonE(%"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::execution_context_priority::PriorityAndReason"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::execution_context_priority::PriorityAndReason", align 8
  %4 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 10
  %5 = getelementptr inbounds %"class.performance_manager::ObservedPropertyImpl<performance_manager::WorkerNodeImpl, performance_manager::WorkerNode, performance_manager::WorkerNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", %"class.performance_manager::ObservedPropertyImpl<performance_manager::WorkerNodeImpl, performance_manager::WorkerNode, performance_manager::WorkerNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue"* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK19performance_manager26execution_context_priority17PriorityAndReasoneqERKS1_(%"class.performance_manager::execution_context_priority::PriorityAndReason"* %5, %"class.performance_manager::execution_context_priority::PriorityAndReason"* dereferenceable(16) %1) #12
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.performance_manager::execution_context_priority::PriorityAndReason", %"class.performance_manager::execution_context_priority::PriorityAndReason"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.performance_manager::ObservedPropertyImpl<performance_manager::WorkerNodeImpl, performance_manager::WorkerNode, performance_manager::WorkerNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue", %"class.performance_manager::ObservedPropertyImpl<performance_manager::WorkerNodeImpl, performance_manager::WorkerNode, performance_manager::WorkerNodeObserver>::NotifiesOnlyOnChangesWithPreviousValue"* %4, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false) #12
  %10 = getelementptr inbounds %"class.performance_manager::execution_context_priority::PriorityAndReason", %"class.performance_manager::execution_context_priority::PriorityAndReason"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false) #12
  %11 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %12 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %11, align 8
  %13 = tail call dereferenceable(24) %"class.std::__1::vector.70"* @_ZNK19performance_manager9GraphImpl12GetObserversINS_18WorkerNodeObserverEEERKNSt3__16vectorIPT_NS3_9allocatorIS6_EEEEv(%"class.performance_manager::GraphImpl"* %12) #12
  %14 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %13, i64 0, i32 0, i32 1
  %17 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %16, align 8
  %18 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %15, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  br label %22

21:                                               ; preds = %22, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br label %32

22:                                               ; preds = %22, %19
  %23 = phi %"class.performance_manager::WorkerNodeObserver"** [ %15, %19 ], [ %30, %22 ]
  %24 = load %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %23, align 8
  %25 = bitcast %"class.performance_manager::WorkerNodeObserver"* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr i8, i8* %26, i64 72
  %28 = bitcast i8* %27 to void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::execution_context_priority::PriorityAndReason"*)**
  %29 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::execution_context_priority::PriorityAndReason"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*, %"class.performance_manager::execution_context_priority::PriorityAndReason"*)** %28, align 8
  call void %29(%"class.performance_manager::WorkerNodeObserver"* %24, %"class.performance_manager::WorkerNode"* %20, %"class.performance_manager::execution_context_priority::PriorityAndReason"* nonnull dereferenceable(16) %3) #12
  %30 = getelementptr inbounds %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %23, i64 1
  %31 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %30, %17
  br i1 %31, label %21, label %22

32:                                               ; preds = %2, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl28OnFinalResponseURLDeterminedERK4GURL(%"class.performance_manager::WorkerNodeImpl"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 6
  %4 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %1) #12
  %5 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %6 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %5, align 8
  %7 = tail call dereferenceable(24) %"class.std::__1::vector.70"* @_ZNK19performance_manager9GraphImpl12GetObserversINS_18WorkerNodeObserverEEERKNSt3__16vectorIPT_NS3_9allocatorIS6_EEEEv(%"class.performance_manager::GraphImpl"* %6) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %7, i64 0, i32 0, i32 1
  %11 = load %"class.performance_manager::WorkerNodeObserver"**, %"class.performance_manager::WorkerNodeObserver"*** %10, align 8
  %12 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %9, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %16, %2
  ret void

16:                                               ; preds = %13, %16
  %17 = phi %"class.performance_manager::WorkerNodeObserver"** [ %9, %13 ], [ %23, %16 ]
  %18 = load %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %17, align 8
  %19 = bitcast %"class.performance_manager::WorkerNodeObserver"* %18 to void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*)***
  %20 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*)**, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*)** %20, i64 4
  %22 = load void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*)*, void (%"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNode"*)** %21, align 8
  tail call void %22(%"class.performance_manager::WorkerNodeObserver"* %18, %"class.performance_manager::WorkerNode"* %14) #12
  %23 = getelementptr inbounds %"class.performance_manager::WorkerNodeObserver"*, %"class.performance_manager::WorkerNodeObserver"** %17, i64 1
  %24 = icmp eq %"class.performance_manager::WorkerNodeObserver"** %23, %11
  br i1 %24, label %15, label %16
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK19performance_manager14WorkerNodeImpl18browser_context_idEv(%"class.performance_manager::WorkerNodeImpl"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 2
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK19performance_manager14WorkerNodeImpl11worker_typeEv(%"class.performance_manager::WorkerNodeImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.performance_manager::ProcessNodeImpl"* @_ZNK19performance_manager14WorkerNodeImpl12process_nodeEv(%"class.performance_manager::WorkerNodeImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 4
  %3 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %2, align 8
  ret %"class.performance_manager::ProcessNodeImpl"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(120) %class.GURL* @_ZNK19performance_manager14WorkerNodeImpl3urlEv(%"class.performance_manager::WorkerNodeImpl"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 6
  ret %class.GURL* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.blink::MultiToken"* @_ZNK19performance_manager14WorkerNodeImpl12worker_tokenEv(%"class.performance_manager::WorkerNodeImpl"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 5
  ret %"class.blink::MultiToken"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.base::internal::flat_tree.298"* @_ZNK19performance_manager14WorkerNodeImpl13client_framesEv(%"class.performance_manager::WorkerNodeImpl"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 7
  ret %"class.base::internal::flat_tree.298"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.base::internal::flat_tree.306"* @_ZNK19performance_manager14WorkerNodeImpl14client_workersEv(%"class.performance_manager::WorkerNodeImpl"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 8
  ret %"class.base::internal::flat_tree.306"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.base::internal::flat_tree.306"* @_ZNK19performance_manager14WorkerNodeImpl13child_workersEv(%"class.performance_manager::WorkerNodeImpl"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9
  ret %"class.base::internal::flat_tree.306"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.performance_manager::execution_context_priority::PriorityAndReason"* @_ZNK19performance_manager14WorkerNodeImpl19priority_and_reasonEv(%"class.performance_manager::WorkerNodeImpl"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 10, i32 0
  ret %"class.performance_manager::execution_context_priority::PriorityAndReason"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl14OnJoiningGraphEv(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 4
  %3 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %2, align 8
  tail call void @_ZN19performance_manager15ProcessNodeImpl9AddWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::ProcessNodeImpl"* %3, %"class.performance_manager::WorkerNodeImpl"* %0) #12
  ret void
}

declare void @_ZN19performance_manager15ProcessNodeImpl9AddWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N19performance_manager14WorkerNodeImpl14OnJoiningGraphEv(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.performance_manager::WorkerNodeImpl"*
  %4 = getelementptr inbounds i64, i64* %2, i64 8
  %5 = bitcast i64* %4 to %"class.performance_manager::ProcessNodeImpl"**
  %6 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %5, align 8
  tail call void @_ZN19performance_manager15ProcessNodeImpl9AddWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::ProcessNodeImpl"* %6, %"class.performance_manager::WorkerNodeImpl"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl20OnBeforeLeavingGraphEv(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 4
  %3 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %2, align 8
  tail call void @_ZN19performance_manager15ProcessNodeImpl12RemoveWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::ProcessNodeImpl"* %3, %"class.performance_manager::WorkerNodeImpl"* %0) #12
  ret void
}

declare void @_ZN19performance_manager15ProcessNodeImpl12RemoveWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N19performance_manager14WorkerNodeImpl20OnBeforeLeavingGraphEv(%"class.performance_manager::WorkerNodeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.performance_manager::WorkerNodeImpl"*
  %4 = getelementptr inbounds i64, i64* %2, i64 8
  %5 = bitcast i64* %4 to %"class.performance_manager::ProcessNodeImpl"**
  %6 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %5, align 8
  tail call void @_ZN19performance_manager15ProcessNodeImpl12RemoveWorkerEPNS_14WorkerNodeImplE(%"class.performance_manager::ProcessNodeImpl"* %6, %"class.performance_manager::WorkerNodeImpl"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19performance_manager14WorkerNodeImpl22RemoveNodeAttachedDataEv(%"class.performance_manager::WorkerNodeImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.performance_manager::NodeAttachedData"*, %"class.performance_manager::NodeAttachedData"** %2, align 8
  store %"class.performance_manager::NodeAttachedData"* null, %"class.performance_manager::NodeAttachedData"** %2, align 8
  %4 = icmp eq %"class.performance_manager::NodeAttachedData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.performance_manager::NodeAttachedData"* %3 to void (%"class.performance_manager::NodeAttachedData"*)***
  %7 = load void (%"class.performance_manager::NodeAttachedData"*)**, void (%"class.performance_manager::NodeAttachedData"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.performance_manager::NodeAttachedData"*)*, void (%"class.performance_manager::NodeAttachedData"*)** %7, i64 1
  %9 = load void (%"class.performance_manager::NodeAttachedData"*)*, void (%"class.performance_manager::NodeAttachedData"*)** %8, align 8
  tail call void %9(%"class.performance_manager::NodeAttachedData"* nonnull %3) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N19performance_manager14WorkerNodeImpl22RemoveNodeAttachedDataEv(%"class.performance_manager::WorkerNodeImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 38
  %4 = bitcast i64* %3 to %"class.performance_manager::NodeAttachedData"**
  %5 = load %"class.performance_manager::NodeAttachedData"*, %"class.performance_manager::NodeAttachedData"** %4, align 8
  store %"class.performance_manager::NodeAttachedData"* null, %"class.performance_manager::NodeAttachedData"** %4, align 8
  %6 = icmp eq %"class.performance_manager::NodeAttachedData"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.performance_manager::NodeAttachedData"* %5 to void (%"class.performance_manager::NodeAttachedData"*)***
  %9 = load void (%"class.performance_manager::NodeAttachedData"*)**, void (%"class.performance_manager::NodeAttachedData"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.performance_manager::NodeAttachedData"*)*, void (%"class.performance_manager::NodeAttachedData"*)** %9, i64 1
  %11 = load void (%"class.performance_manager::NodeAttachedData"*)*, void (%"class.performance_manager::NodeAttachedData"*)** %10, align 8
  tail call void %11(%"class.performance_manager::NodeAttachedData"* nonnull %5) #12
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK19performance_manager14WorkerNodeImpl13GetWorkerTypeEv(%"class.performance_manager::WorkerNodeImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK19performance_manager14WorkerNodeImpl19GetBrowserContextIDEv(%"class.performance_manager::WorkerNodeImpl"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 2
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.performance_manager::ProcessNode"* @_ZNK19performance_manager14WorkerNodeImpl14GetProcessNodeEv(%"class.performance_manager::WorkerNodeImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 4
  %3 = load %"class.performance_manager::ProcessNodeImpl"*, %"class.performance_manager::ProcessNodeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.performance_manager::ProcessNodeImpl", %"class.performance_manager::ProcessNodeImpl"* %3, i64 0, i32 0, i32 0
  ret %"class.performance_manager::ProcessNode"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(120) %class.GURL* @_ZNK19performance_manager14WorkerNodeImpl6GetURLEv(%"class.performance_manager::WorkerNodeImpl"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 6
  ret %class.GURL* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.blink::MultiToken"* @_ZNK19performance_manager14WorkerNodeImpl14GetWorkerTokenEv(%"class.performance_manager::WorkerNodeImpl"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 5
  ret %"class.blink::MultiToken"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager14WorkerNodeImpl15GetClientFramesEv(%"class.base::internal::flat_tree.370"* noalias sret, %"class.performance_manager::WorkerNodeImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::FrameNode"*, align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.370", %"class.base::internal::flat_tree.370"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.base::internal::flat_tree.370"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %6, align 8
  %8 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 7, i32 0, i32 0, i32 1
  %9 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %8, align 8
  %10 = icmp eq %"class.performance_manager::FrameNodeImpl"** %7, %9
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::internal::flat_tree.370", %"class.base::internal::flat_tree.370"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.performance_manager::FrameNode"** %3 to i8*
  %14 = bitcast %"class.performance_manager::FrameNode"** %3 to i64*
  %15 = bitcast %"class.performance_manager::FrameNode"*** %12 to i64*
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.370", %"class.base::internal::flat_tree.370"* %0, i64 0, i32 0
  br label %18

17:                                               ; preds = %52, %2
  ret void

18:                                               ; preds = %55, %11
  %19 = phi i64 [ 0, %11 ], [ %57, %55 ]
  %20 = phi %"class.performance_manager::FrameNode"** [ null, %11 ], [ %56, %55 ]
  %21 = phi %"class.performance_manager::FrameNodeImpl"** [ %7, %11 ], [ %53, %55 ]
  %22 = bitcast %"class.performance_manager::FrameNodeImpl"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  store i64 %23, i64* %14, align 8
  %24 = ptrtoint %"class.performance_manager::FrameNode"** %20 to i64
  %25 = sub i64 %19, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %19 to %"class.performance_manager::FrameNode"**
  %28 = inttoptr i64 %23 to %"class.performance_manager::FrameNode"*
  br i1 %26, label %44, label %29

29:                                               ; preds = %18
  %30 = ashr exact i64 %25, 3
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi %"class.performance_manager::FrameNode"** [ %20, %29 ], [ %42, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %41, %31 ]
  %34 = lshr i64 %33, 1
  %35 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %32, i64 %34
  %36 = load %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %35, align 8
  %37 = icmp ult %"class.performance_manager::FrameNode"* %36, %28
  %38 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %35, i64 1
  %39 = xor i64 %34, -1
  %40 = add i64 %33, %39
  %41 = select i1 %37, i64 %40, i64 %34
  %42 = select i1 %37, %"class.performance_manager::FrameNode"** %38, %"class.performance_manager::FrameNode"** %32
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %31

44:                                               ; preds = %31, %18
  %45 = phi %"class.performance_manager::FrameNode"** [ %20, %18 ], [ %42, %31 ]
  %46 = icmp eq %"class.performance_manager::FrameNode"** %45, %27
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = load %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %45, align 8
  %49 = icmp ugt %"class.performance_manager::FrameNode"* %48, %28
  br i1 %49, label %50, label %52

50:                                               ; preds = %47, %44
  %51 = call %"class.performance_manager::FrameNode"** @_ZNSt3__16vectorIPKN19performance_manager9FrameNodeENS_9allocatorIS4_EEE7emplaceIJS4_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.371"* %16, %"class.performance_manager::FrameNode"** %45, %"class.performance_manager::FrameNode"** nonnull dereferenceable(8) %3) #12
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %53 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %21, i64 1
  %54 = icmp eq %"class.performance_manager::FrameNodeImpl"** %53, %9
  br i1 %54, label %17, label %55

55:                                               ; preds = %52
  %56 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %4, align 8
  %57 = load i64, i64* %15, align 8
  br label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager14WorkerNodeImpl16GetClientWorkersEv(%"class.base::internal::flat_tree.382"* noalias sret, %"class.performance_manager::WorkerNodeImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::WorkerNode"*, align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.382", %"class.base::internal::flat_tree.382"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.base::internal::flat_tree.382"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %6, align 8
  %8 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %9 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %8, align 8
  %10 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %7, %9
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::internal::flat_tree.382", %"class.base::internal::flat_tree.382"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.performance_manager::WorkerNode"** %3 to i8*
  %14 = bitcast %"class.performance_manager::WorkerNode"** %3 to i64*
  %15 = bitcast %"class.performance_manager::WorkerNode"*** %12 to i64*
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.382", %"class.base::internal::flat_tree.382"* %0, i64 0, i32 0
  br label %18

17:                                               ; preds = %52, %2
  ret void

18:                                               ; preds = %55, %11
  %19 = phi i64 [ 0, %11 ], [ %57, %55 ]
  %20 = phi %"class.performance_manager::WorkerNode"** [ null, %11 ], [ %56, %55 ]
  %21 = phi %"class.performance_manager::WorkerNodeImpl"** [ %7, %11 ], [ %53, %55 ]
  %22 = bitcast %"class.performance_manager::WorkerNodeImpl"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  store i64 %23, i64* %14, align 8
  %24 = ptrtoint %"class.performance_manager::WorkerNode"** %20 to i64
  %25 = sub i64 %19, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %19 to %"class.performance_manager::WorkerNode"**
  %28 = inttoptr i64 %23 to %"class.performance_manager::WorkerNode"*
  br i1 %26, label %44, label %29

29:                                               ; preds = %18
  %30 = ashr exact i64 %25, 3
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi %"class.performance_manager::WorkerNode"** [ %20, %29 ], [ %42, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %41, %31 ]
  %34 = lshr i64 %33, 1
  %35 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %32, i64 %34
  %36 = load %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %35, align 8
  %37 = icmp ult %"class.performance_manager::WorkerNode"* %36, %28
  %38 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %35, i64 1
  %39 = xor i64 %34, -1
  %40 = add i64 %33, %39
  %41 = select i1 %37, i64 %40, i64 %34
  %42 = select i1 %37, %"class.performance_manager::WorkerNode"** %38, %"class.performance_manager::WorkerNode"** %32
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %31

44:                                               ; preds = %31, %18
  %45 = phi %"class.performance_manager::WorkerNode"** [ %20, %18 ], [ %42, %31 ]
  %46 = icmp eq %"class.performance_manager::WorkerNode"** %45, %27
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = load %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %45, align 8
  %49 = icmp ugt %"class.performance_manager::WorkerNode"* %48, %28
  br i1 %49, label %50, label %52

50:                                               ; preds = %47, %44
  %51 = call %"class.performance_manager::WorkerNode"** @_ZNSt3__16vectorIPKN19performance_manager10WorkerNodeENS_9allocatorIS4_EEE7emplaceIJS4_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.383"* %16, %"class.performance_manager::WorkerNode"** %45, %"class.performance_manager::WorkerNode"** nonnull dereferenceable(8) %3) #12
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %53 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %21, i64 1
  %54 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %53, %9
  br i1 %54, label %17, label %55

55:                                               ; preds = %52
  %56 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %4, align 8
  %57 = load i64, i64* %15, align 8
  br label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager14WorkerNodeImpl15GetChildWorkersEv(%"class.base::internal::flat_tree.382"* noalias sret, %"class.performance_manager::WorkerNodeImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.performance_manager::WorkerNode"*, align 8
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.382", %"class.base::internal::flat_tree.382"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.base::internal::flat_tree.382"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %6, align 8
  %8 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %1, i64 0, i32 9, i32 0, i32 0, i32 1
  %9 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %8, align 8
  %10 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %7, %9
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::internal::flat_tree.382", %"class.base::internal::flat_tree.382"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.performance_manager::WorkerNode"** %3 to i8*
  %14 = bitcast %"class.performance_manager::WorkerNode"** %3 to i64*
  %15 = bitcast %"class.performance_manager::WorkerNode"*** %12 to i64*
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.382", %"class.base::internal::flat_tree.382"* %0, i64 0, i32 0
  br label %18

17:                                               ; preds = %52, %2
  ret void

18:                                               ; preds = %55, %11
  %19 = phi i64 [ 0, %11 ], [ %57, %55 ]
  %20 = phi %"class.performance_manager::WorkerNode"** [ null, %11 ], [ %56, %55 ]
  %21 = phi %"class.performance_manager::WorkerNodeImpl"** [ %7, %11 ], [ %53, %55 ]
  %22 = bitcast %"class.performance_manager::WorkerNodeImpl"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  store i64 %23, i64* %14, align 8
  %24 = ptrtoint %"class.performance_manager::WorkerNode"** %20 to i64
  %25 = sub i64 %19, %24
  %26 = icmp eq i64 %25, 0
  %27 = inttoptr i64 %19 to %"class.performance_manager::WorkerNode"**
  %28 = inttoptr i64 %23 to %"class.performance_manager::WorkerNode"*
  br i1 %26, label %44, label %29

29:                                               ; preds = %18
  %30 = ashr exact i64 %25, 3
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi %"class.performance_manager::WorkerNode"** [ %20, %29 ], [ %42, %31 ]
  %33 = phi i64 [ %30, %29 ], [ %41, %31 ]
  %34 = lshr i64 %33, 1
  %35 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %32, i64 %34
  %36 = load %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %35, align 8
  %37 = icmp ult %"class.performance_manager::WorkerNode"* %36, %28
  %38 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %35, i64 1
  %39 = xor i64 %34, -1
  %40 = add i64 %33, %39
  %41 = select i1 %37, i64 %40, i64 %34
  %42 = select i1 %37, %"class.performance_manager::WorkerNode"** %38, %"class.performance_manager::WorkerNode"** %32
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %31

44:                                               ; preds = %31, %18
  %45 = phi %"class.performance_manager::WorkerNode"** [ %20, %18 ], [ %42, %31 ]
  %46 = icmp eq %"class.performance_manager::WorkerNode"** %45, %27
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = load %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %45, align 8
  %49 = icmp ugt %"class.performance_manager::WorkerNode"* %48, %28
  br i1 %49, label %50, label %52

50:                                               ; preds = %47, %44
  %51 = call %"class.performance_manager::WorkerNode"** @_ZNSt3__16vectorIPKN19performance_manager10WorkerNodeENS_9allocatorIS4_EEE7emplaceIJS4_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.383"* %16, %"class.performance_manager::WorkerNode"** %45, %"class.performance_manager::WorkerNode"** nonnull dereferenceable(8) %3) #12
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %53 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %21, i64 1
  %54 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %53, %9
  br i1 %54, label %17, label %55

55:                                               ; preds = %52
  %56 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %4, align 8
  %57 = load i64, i64* %15, align 8
  br label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19performance_manager14WorkerNodeImpl26VisitChildDedicatedWorkersERKN4base17RepeatingCallbackIFbPKNS_10WorkerNodeEEEE(%"class.performance_manager::WorkerNodeImpl"* nocapture readonly, %"class.base::RepeatingCallback.394"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %3, align 8
  %5 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %6 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %5, align 8
  %7 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %4, %6
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::RepeatingCallback.394", %"class.base::RepeatingCallback.394"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %8, %26
  %11 = phi %"class.performance_manager::WorkerNodeImpl"** [ %4, %8 ], [ %27, %26 ]
  %12 = bitcast %"class.performance_manager::WorkerNodeImpl"** %11 to %"class.performance_manager::WorkerNode"**
  %13 = load %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %12, align 8
  %14 = bitcast %"class.performance_manager::WorkerNode"* %13 to i32 (%"class.performance_manager::WorkerNode"*)***
  %15 = load i32 (%"class.performance_manager::WorkerNode"*)**, i32 (%"class.performance_manager::WorkerNode"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.performance_manager::WorkerNode"*)*, i32 (%"class.performance_manager::WorkerNode"*)** %15, i64 6
  %17 = load i32 (%"class.performance_manager::WorkerNode"*)*, i32 (%"class.performance_manager::WorkerNode"*)** %16, align 8
  %18 = tail call i32 %17(%"class.performance_manager::WorkerNode"* %13) #12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %10
  %21 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %9, align 8
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %21, i64 0, i32 1
  %23 = bitcast void ()** %22 to i1 (%"class.base::internal::BindStateBase"*, %"class.performance_manager::WorkerNode"*)**
  %24 = load i1 (%"class.base::internal::BindStateBase"*, %"class.performance_manager::WorkerNode"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.performance_manager::WorkerNode"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.base::internal::BindStateBase"* %21, %"class.performance_manager::WorkerNode"* %13) #12
  br i1 %25, label %26, label %29

26:                                               ; preds = %10, %20
  %27 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %11, i64 1
  %28 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %27, %6
  br i1 %28, label %29, label %10

29:                                               ; preds = %20, %26, %2
  %30 = phi i1 [ true, %2 ], [ true, %26 ], [ false, %20 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.performance_manager::execution_context_priority::PriorityAndReason"* @_ZNK19performance_manager14WorkerNodeImpl20GetPriorityAndReasonEv(%"class.performance_manager::WorkerNodeImpl"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl", %"class.performance_manager::WorkerNodeImpl"* %0, i64 0, i32 10, i32 0
  ret %"class.performance_manager::execution_context_priority::PriorityAndReason"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::Graph"* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE8GetGraphEv(%"class.performance_manager::PublicNodeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::PublicNodeImpl", %"class.performance_manager::PublicNodeImpl"* %0, i64 3
  %3 = bitcast %"class.performance_manager::PublicNodeImpl"* %2 to %"class.performance_manager::GraphImpl"**
  %4 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.performance_manager::GraphImpl", %"class.performance_manager::GraphImpl"* %4, i64 0, i32 0
  ret %"class.performance_manager::Graph"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE12GetNodeStateEv(%"class.performance_manager::PublicNodeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %"class.performance_manager::PublicNodeImpl"* %0, null
  %3 = getelementptr inbounds %"class.performance_manager::PublicNodeImpl", %"class.performance_manager::PublicNodeImpl"* %0, i64 1
  %4 = bitcast %"class.performance_manager::PublicNodeImpl"* %3 to %"class.performance_manager::NodeBase"*
  %5 = select i1 %2, %"class.performance_manager::NodeBase"* null, %"class.performance_manager::NodeBase"* %4
  %6 = getelementptr inbounds %"class.performance_manager::NodeBase", %"class.performance_manager::NodeBase"* %5, i64 0, i32 2
  %7 = load %"class.performance_manager::GraphImpl"*, %"class.performance_manager::GraphImpl"** %6, align 8
  %8 = icmp eq %"class.performance_manager::GraphImpl"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK19performance_manager9GraphImpl12GetNodeStateEPKNS_8NodeBaseE(%"class.performance_manager::GraphImpl"* nonnull %7, %"class.performance_manager::NodeBase"* %5) #12
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE11GetImplTypeEv(%"class.performance_manager::PublicNodeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = load i64, i64* @_ZN19performance_manager8NodeBase13kNodeBaseTypeE, align 8
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEE7GetImplEv(%"class.performance_manager::PublicNodeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %"class.performance_manager::PublicNodeImpl"* %0, null
  %3 = getelementptr inbounds %"class.performance_manager::PublicNodeImpl", %"class.performance_manager::PublicNodeImpl"* %0, i64 1
  %4 = bitcast %"class.performance_manager::PublicNodeImpl"* %3 to i8*
  %5 = select i1 %2, i8* null, i8* %4
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::Node"* @_ZNK19performance_manager13TypedNodeBaseINS_14WorkerNodeImplENS_10WorkerNodeENS_18WorkerNodeObserverEE6ToNodeEv(%"class.performance_manager::TypedNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.performance_manager::TypedNodeBase", %"class.performance_manager::TypedNodeBase"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.performance_manager::GraphImpl"** %2 to %"class.performance_manager::Node"*
  ret %"class.performance_manager::Node"* %3
}

declare void @_ZN19performance_manager10WorkerNodeC2Ev(%"class.performance_manager::WorkerNode"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN19performance_manager10WorkerNodeD2Ev(%"class.performance_manager::WorkerNode"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19performance_manager14PublicNodeImplINS_14WorkerNodeImplENS_10WorkerNodeEED0Ev(%"class.performance_manager::PublicNodeImpl"*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN19performance_manager8NodeBaseC2ENS_12NodeTypeEnumE(%"class.performance_manager::NodeBase"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN19performance_manager8NodeBaseD2Ev(%"class.performance_manager::NodeBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::FrameNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager13FrameNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.299"*, %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.299", %"class.std::__1::vector.299"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.299", %"class.std::__1::vector.299"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.299", %"class.std::__1::vector.299"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %9, align 8
  %11 = icmp ult %"class.performance_manager::FrameNodeImpl"** %8, %10
  %12 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %8 to i64
  %13 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.performance_manager::FrameNodeImpl"** %8, %1
  %16 = bitcast %"class.performance_manager::FrameNodeImpl"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.performance_manager::FrameNodeImpl"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %1, i64 1
  %21 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %20 to i64
  %22 = bitcast %"class.performance_manager::FrameNodeImpl"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %1, i64 1
  %25 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %1, i64 %27
  %29 = bitcast %"class.performance_manager::FrameNodeImpl"*** %7 to i64*
  %30 = icmp ult %"class.performance_manager::FrameNodeImpl"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %32
  %34 = bitcast %"class.performance_manager::FrameNodeImpl"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.performance_manager::FrameNodeImpl"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.performance_manager::FrameNodeImpl"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %45
  %47 = bitcast %"class.performance_manager::FrameNodeImpl"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %1, i64 %55
  %57 = icmp ult %"class.performance_manager::FrameNodeImpl"** %8, %56
  %58 = icmp ult %"class.performance_manager::FrameNodeImpl"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %61
  %63 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %72
  %75 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %28, i64 %72
  %76 = bitcast %"class.performance_manager::FrameNodeImpl"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !2
  %78 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %75, i64 2
  %79 = bitcast %"class.performance_manager::FrameNodeImpl"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !2
  %81 = bitcast %"class.performance_manager::FrameNodeImpl"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !5, !noalias !2
  %82 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %74, i64 2
  %83 = bitcast %"class.performance_manager::FrameNodeImpl"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !5, !noalias !2
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %84
  %86 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %28, i64 %84
  %87 = bitcast %"class.performance_manager::FrameNodeImpl"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !2
  %89 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %86, i64 2
  %90 = bitcast %"class.performance_manager::FrameNodeImpl"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !2
  %92 = bitcast %"class.performance_manager::FrameNodeImpl"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !5, !noalias !2
  %93 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %85, i64 2
  %94 = bitcast %"class.performance_manager::FrameNodeImpl"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !5, !noalias !2
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %95
  %97 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %28, i64 %95
  %98 = bitcast %"class.performance_manager::FrameNodeImpl"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !2
  %100 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %97, i64 2
  %101 = bitcast %"class.performance_manager::FrameNodeImpl"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !2
  %103 = bitcast %"class.performance_manager::FrameNodeImpl"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !5, !noalias !2
  %104 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %96, i64 2
  %105 = bitcast %"class.performance_manager::FrameNodeImpl"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !5, !noalias !2
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %106
  %108 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %28, i64 %106
  %109 = bitcast %"class.performance_manager::FrameNodeImpl"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !2
  %111 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %108, i64 2
  %112 = bitcast %"class.performance_manager::FrameNodeImpl"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !2
  %114 = bitcast %"class.performance_manager::FrameNodeImpl"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !5, !noalias !2
  %115 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %107, i64 2
  %116 = bitcast %"class.performance_manager::FrameNodeImpl"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !5, !noalias !2
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !7

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %124
  %127 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %28, i64 %124
  %128 = bitcast %"class.performance_manager::FrameNodeImpl"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !2
  %130 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %127, i64 2
  %131 = bitcast %"class.performance_manager::FrameNodeImpl"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !2
  %133 = bitcast %"class.performance_manager::FrameNodeImpl"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !5, !noalias !2
  %134 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %126, i64 2
  %135 = bitcast %"class.performance_manager::FrameNodeImpl"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !5, !noalias !2
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !9

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.performance_manager::FrameNodeImpl"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %8, i64 %148
  %150 = bitcast %"class.performance_manager::FrameNodeImpl"** %149 to i8*
  %151 = bitcast %"class.performance_manager::FrameNodeImpl"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #12
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.performance_manager::FrameNodeImpl"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.performance_manager::FrameNodeImpl"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.performance_manager::FrameNodeImpl"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.performance_manager::FrameNodeImpl"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %154, i64 1
  %159 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %153, i64 1
  %160 = icmp ult %"class.performance_manager::FrameNodeImpl"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !11

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.performance_manager::FrameNodeImpl"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.299", %"class.std::__1::vector.299"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #12
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.performance_manager::FrameNodeImpl"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.299"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.299"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #14
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.performance_manager::FrameNodeImpl"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.performance_manager::FrameNodeImpl"** null, %"class.performance_manager::FrameNodeImpl"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.304"** %170 to %"class.std::__1::__compressed_pair.301"**
  store %"class.std::__1::__compressed_pair.301"* %164, %"class.std::__1::__compressed_pair.301"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.performance_manager::FrameNodeImpl"** null, %"class.performance_manager::FrameNodeImpl"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.304"** %170 to %"class.std::__1::__compressed_pair.301"**
  store %"class.std::__1::__compressed_pair.301"* %164, %"class.std::__1::__compressed_pair.301"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #14
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #13
  %206 = bitcast i8* %205 to %"class.performance_manager::FrameNodeImpl"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.performance_manager::FrameNodeImpl"** [ %206, %201 ], [ null, %190 ]
  store %"class.performance_manager::FrameNodeImpl"** %210, %"class.performance_manager::FrameNodeImpl"*** %166, align 8
  %211 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %210, i64 %208
  store %"class.performance_manager::FrameNodeImpl"** %211, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  store %"class.performance_manager::FrameNodeImpl"** %211, %"class.performance_manager::FrameNodeImpl"*** %167, align 8
  %212 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %210, i64 %209
  store %"class.performance_manager::FrameNodeImpl"** %212, %"class.performance_manager::FrameNodeImpl"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN19performance_manager13FrameNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.performance_manager::FrameNodeImpl"** dereferenceable(8) %2)
  %213 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %167, align 8
  %214 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %6, align 8
  %215 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %213, i64 %218
  store %"class.performance_manager::FrameNodeImpl"** %219, %"class.performance_manager::FrameNodeImpl"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.performance_manager::FrameNodeImpl"** %219 to i8*
  %223 = bitcast %"class.performance_manager::FrameNodeImpl"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #12
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %7, align 8
  %226 = icmp eq %"class.performance_manager::FrameNodeImpl"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %225 to i64
  %229 = bitcast %"class.performance_manager::FrameNodeImpl"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.performance_manager::FrameNodeImpl"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %225, i64 -1
  %235 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.performance_manager::FrameNodeImpl"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.performance_manager::FrameNodeImpl"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %243, i64 1
  %248 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %249 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %248, i64 1
  store %"class.performance_manager::FrameNodeImpl"** %249, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %250 = bitcast %"class.performance_manager::FrameNodeImpl"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !12

253:                                              ; preds = %241
  %254 = bitcast %"class.performance_manager::FrameNodeImpl"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.performance_manager::FrameNodeImpl"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.performance_manager::FrameNodeImpl"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.performance_manager::FrameNodeImpl"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.performance_manager::FrameNodeImpl"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %262, i64 1
  %266 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %267 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %266, i64 1
  store %"class.performance_manager::FrameNodeImpl"** %267, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %268 = bitcast %"class.performance_manager::FrameNodeImpl"** %267 to i64*
  %269 = bitcast %"class.performance_manager::FrameNodeImpl"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %262, i64 2
  %272 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %273 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %272, i64 1
  store %"class.performance_manager::FrameNodeImpl"** %273, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %274 = bitcast %"class.performance_manager::FrameNodeImpl"** %273 to i64*
  %275 = bitcast %"class.performance_manager::FrameNodeImpl"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %262, i64 3
  %278 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %279 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %278, i64 1
  store %"class.performance_manager::FrameNodeImpl"** %279, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %280 = bitcast %"class.performance_manager::FrameNodeImpl"** %279 to i64*
  %281 = bitcast %"class.performance_manager::FrameNodeImpl"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %262, i64 4
  %284 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %285 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %284, i64 1
  store %"class.performance_manager::FrameNodeImpl"** %285, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  %286 = icmp eq %"class.performance_manager::FrameNodeImpl"** %283, %225
  %287 = bitcast %"class.performance_manager::FrameNodeImpl"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.performance_manager::FrameNodeImpl"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.performance_manager::FrameNodeImpl"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.performance_manager::FrameNodeImpl"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.performance_manager::FrameNodeImpl"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.performance_manager::FrameNodeImpl"**
  %305 = inttoptr i64 %296 to %"class.performance_manager::FrameNodeImpl"**
  %306 = icmp eq %"class.performance_manager::FrameNodeImpl"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %305, i64 -1
  %309 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %305, i64 %312
  store %"class.performance_manager::FrameNodeImpl"** %313, %"class.performance_manager::FrameNodeImpl"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #13
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #12
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.performance_manager::FrameNodeImpl"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.performance_manager::FrameNodeImpl"** %320
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN19performance_manager13FrameNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.performance_manager::FrameNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %5, align 8
  %7 = icmp eq %"class.performance_manager::FrameNodeImpl"** %4, %6
  %8 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %6 to i64
  %9 = bitcast %"class.performance_manager::FrameNodeImpl"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %13, align 8
  %15 = icmp ugt %"class.performance_manager::FrameNodeImpl"** %12, %14
  %16 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %12, i64 %22
  %24 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.performance_manager::FrameNodeImpl"** %23 to i8*
  %30 = bitcast %"class.performance_manager::FrameNodeImpl"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.performance_manager::FrameNodeImpl"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %23, i64 %26
  store %"class.performance_manager::FrameNodeImpl"** %34, %"class.performance_manager::FrameNodeImpl"*** %3, align 8
  %35 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %33, i64 %22
  store %"class.performance_manager::FrameNodeImpl"** %35, %"class.performance_manager::FrameNodeImpl"*** %11, align 8
  %36 = bitcast %"class.performance_manager::FrameNodeImpl"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.performance_manager::FrameNodeImpl"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.performance_manager::FrameNodeImpl"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %50, i64 %47
  %53 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %52 to i64
  %54 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %50, i64 %43
  %55 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %54 to i64
  %56 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %12 to i64
  %57 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.performance_manager::FrameNodeImpl"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.performance_manager::FrameNodeImpl"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.performance_manager::FrameNodeImpl"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %69, i64 1
  %77 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %76 to i64
  %78 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !13

81:                                               ; preds = %68
  %82 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.performance_manager::FrameNodeImpl"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.performance_manager::FrameNodeImpl"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.performance_manager::FrameNodeImpl"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.performance_manager::FrameNodeImpl"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.performance_manager::FrameNodeImpl"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 1
  %96 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 1
  %97 = bitcast %"class.performance_manager::FrameNodeImpl"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.performance_manager::FrameNodeImpl"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 2
  %101 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 2
  %102 = bitcast %"class.performance_manager::FrameNodeImpl"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.performance_manager::FrameNodeImpl"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 3
  %106 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 3
  %107 = bitcast %"class.performance_manager::FrameNodeImpl"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.performance_manager::FrameNodeImpl"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 4
  %111 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 4
  %112 = bitcast %"class.performance_manager::FrameNodeImpl"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.performance_manager::FrameNodeImpl"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 5
  %116 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 5
  %117 = bitcast %"class.performance_manager::FrameNodeImpl"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.performance_manager::FrameNodeImpl"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 6
  %121 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 6
  %122 = bitcast %"class.performance_manager::FrameNodeImpl"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.performance_manager::FrameNodeImpl"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 7
  %126 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 7
  %127 = bitcast %"class.performance_manager::FrameNodeImpl"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.performance_manager::FrameNodeImpl"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %89, i64 8
  %131 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %130 to i64
  %132 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %91, i64 8
  %133 = icmp eq %"class.performance_manager::FrameNodeImpl"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.performance_manager::FrameNodeImpl"** %60 to i64
  %136 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.performance_manager::FrameNodeImpl"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.performance_manager::FrameNodeImpl"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.performance_manager::FrameNodeImpl"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.performance_manager::FrameNodeImpl"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.performance_manager::FrameNodeImpl"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"class.performance_manager::FrameNodeImpl"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.performance_manager::FrameNodeImpl"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.performance_manager::FrameNodeImpl"**, %"class.performance_manager::FrameNodeImpl"*** %3, align 8
  %153 = getelementptr inbounds %"class.performance_manager::FrameNodeImpl"*, %"class.performance_manager::FrameNodeImpl"** %152, i64 1
  store %"class.performance_manager::FrameNodeImpl"** %153, %"class.performance_manager::FrameNodeImpl"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare dereferenceable(24) %"class.std::__1::vector.70"* @_ZNK19performance_manager9GraphImpl12GetObserversINS_18WorkerNodeObserverEEERKNSt3__16vectorIPT_NS3_9allocatorIS6_EEEEv(%"class.performance_manager::GraphImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::WorkerNodeImpl"** @_ZNSt3__16vectorIPN19performance_manager14WorkerNodeImplENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.307"*, %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.411", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.307", %"class.std::__1::vector.307"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.307", %"class.std::__1::vector.307"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.307", %"class.std::__1::vector.307"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %9, align 8
  %11 = icmp ult %"class.performance_manager::WorkerNodeImpl"** %8, %10
  %12 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %8 to i64
  %13 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %8, %1
  %16 = bitcast %"class.performance_manager::WorkerNodeImpl"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.performance_manager::WorkerNodeImpl"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %1, i64 1
  %21 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %20 to i64
  %22 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %1, i64 1
  %25 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %1, i64 %27
  %29 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %7 to i64*
  %30 = icmp ult %"class.performance_manager::WorkerNodeImpl"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %32
  %34 = bitcast %"class.performance_manager::WorkerNodeImpl"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.performance_manager::WorkerNodeImpl"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.performance_manager::WorkerNodeImpl"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %45
  %47 = bitcast %"class.performance_manager::WorkerNodeImpl"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %1, i64 %55
  %57 = icmp ult %"class.performance_manager::WorkerNodeImpl"** %8, %56
  %58 = icmp ult %"class.performance_manager::WorkerNodeImpl"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %61
  %63 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %72
  %75 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %28, i64 %72
  %76 = bitcast %"class.performance_manager::WorkerNodeImpl"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !14
  %78 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %75, i64 2
  %79 = bitcast %"class.performance_manager::WorkerNodeImpl"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !14
  %81 = bitcast %"class.performance_manager::WorkerNodeImpl"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !17, !noalias !14
  %82 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %74, i64 2
  %83 = bitcast %"class.performance_manager::WorkerNodeImpl"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !17, !noalias !14
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %84
  %86 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %28, i64 %84
  %87 = bitcast %"class.performance_manager::WorkerNodeImpl"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !14
  %89 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %86, i64 2
  %90 = bitcast %"class.performance_manager::WorkerNodeImpl"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !14
  %92 = bitcast %"class.performance_manager::WorkerNodeImpl"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !17, !noalias !14
  %93 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %85, i64 2
  %94 = bitcast %"class.performance_manager::WorkerNodeImpl"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !17, !noalias !14
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %95
  %97 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %28, i64 %95
  %98 = bitcast %"class.performance_manager::WorkerNodeImpl"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !14
  %100 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %97, i64 2
  %101 = bitcast %"class.performance_manager::WorkerNodeImpl"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !14
  %103 = bitcast %"class.performance_manager::WorkerNodeImpl"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !17, !noalias !14
  %104 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %96, i64 2
  %105 = bitcast %"class.performance_manager::WorkerNodeImpl"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !17, !noalias !14
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %106
  %108 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %28, i64 %106
  %109 = bitcast %"class.performance_manager::WorkerNodeImpl"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !14
  %111 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %108, i64 2
  %112 = bitcast %"class.performance_manager::WorkerNodeImpl"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !14
  %114 = bitcast %"class.performance_manager::WorkerNodeImpl"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !17, !noalias !14
  %115 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %107, i64 2
  %116 = bitcast %"class.performance_manager::WorkerNodeImpl"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !17, !noalias !14
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !19

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %124
  %127 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %28, i64 %124
  %128 = bitcast %"class.performance_manager::WorkerNodeImpl"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !14
  %130 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %127, i64 2
  %131 = bitcast %"class.performance_manager::WorkerNodeImpl"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !14
  %133 = bitcast %"class.performance_manager::WorkerNodeImpl"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !17, !noalias !14
  %134 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %126, i64 2
  %135 = bitcast %"class.performance_manager::WorkerNodeImpl"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !17, !noalias !14
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !20

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.performance_manager::WorkerNodeImpl"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %8, i64 %148
  %150 = bitcast %"class.performance_manager::WorkerNodeImpl"** %149 to i8*
  %151 = bitcast %"class.performance_manager::WorkerNodeImpl"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #12
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.performance_manager::WorkerNodeImpl"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.performance_manager::WorkerNodeImpl"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.performance_manager::WorkerNodeImpl"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.performance_manager::WorkerNodeImpl"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %154, i64 1
  %159 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %153, i64 1
  %160 = icmp ult %"class.performance_manager::WorkerNodeImpl"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !21

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.performance_manager::WorkerNodeImpl"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.307", %"class.std::__1::vector.307"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer.411"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #12
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.307"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer.411"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.307"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #14
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.performance_manager::WorkerNodeImpl"** null, %"class.performance_manager::WorkerNodeImpl"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.312"** %170 to %"class.std::__1::__compressed_pair.309"**
  store %"class.std::__1::__compressed_pair.309"* %164, %"class.std::__1::__compressed_pair.309"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.performance_manager::WorkerNodeImpl"** null, %"class.performance_manager::WorkerNodeImpl"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.312"** %170 to %"class.std::__1::__compressed_pair.309"**
  store %"class.std::__1::__compressed_pair.309"* %164, %"class.std::__1::__compressed_pair.309"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #14
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #13
  %206 = bitcast i8* %205 to %"class.performance_manager::WorkerNodeImpl"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.performance_manager::WorkerNodeImpl"** [ %206, %201 ], [ null, %190 ]
  store %"class.performance_manager::WorkerNodeImpl"** %210, %"class.performance_manager::WorkerNodeImpl"*** %166, align 8
  %211 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %210, i64 %208
  store %"class.performance_manager::WorkerNodeImpl"** %211, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  store %"class.performance_manager::WorkerNodeImpl"** %211, %"class.performance_manager::WorkerNodeImpl"*** %167, align 8
  %212 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %210, i64 %209
  store %"class.performance_manager::WorkerNodeImpl"** %212, %"class.performance_manager::WorkerNodeImpl"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN19performance_manager14WorkerNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.411"* nonnull %5, %"class.performance_manager::WorkerNodeImpl"** dereferenceable(8) %2)
  %213 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %167, align 8
  %214 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %6, align 8
  %215 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %213, i64 %218
  store %"class.performance_manager::WorkerNodeImpl"** %219, %"class.performance_manager::WorkerNodeImpl"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.performance_manager::WorkerNodeImpl"** %219 to i8*
  %223 = bitcast %"class.performance_manager::WorkerNodeImpl"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #12
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %7, align 8
  %226 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %225 to i64
  %229 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %225, i64 -1
  %235 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.performance_manager::WorkerNodeImpl"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.performance_manager::WorkerNodeImpl"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %243, i64 1
  %248 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %249 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %248, i64 1
  store %"class.performance_manager::WorkerNodeImpl"** %249, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %250 = bitcast %"class.performance_manager::WorkerNodeImpl"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !22

253:                                              ; preds = %241
  %254 = bitcast %"class.performance_manager::WorkerNodeImpl"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.performance_manager::WorkerNodeImpl"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.performance_manager::WorkerNodeImpl"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.performance_manager::WorkerNodeImpl"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.performance_manager::WorkerNodeImpl"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %262, i64 1
  %266 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %267 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %266, i64 1
  store %"class.performance_manager::WorkerNodeImpl"** %267, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %268 = bitcast %"class.performance_manager::WorkerNodeImpl"** %267 to i64*
  %269 = bitcast %"class.performance_manager::WorkerNodeImpl"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %262, i64 2
  %272 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %273 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %272, i64 1
  store %"class.performance_manager::WorkerNodeImpl"** %273, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %274 = bitcast %"class.performance_manager::WorkerNodeImpl"** %273 to i64*
  %275 = bitcast %"class.performance_manager::WorkerNodeImpl"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %262, i64 3
  %278 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %279 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %278, i64 1
  store %"class.performance_manager::WorkerNodeImpl"** %279, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %280 = bitcast %"class.performance_manager::WorkerNodeImpl"** %279 to i64*
  %281 = bitcast %"class.performance_manager::WorkerNodeImpl"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %262, i64 4
  %284 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %285 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %284, i64 1
  store %"class.performance_manager::WorkerNodeImpl"** %285, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  %286 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %283, %225
  %287 = bitcast %"class.performance_manager::WorkerNodeImpl"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.performance_manager::WorkerNodeImpl"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer.411"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.performance_manager::WorkerNodeImpl"**
  %305 = inttoptr i64 %296 to %"class.performance_manager::WorkerNodeImpl"**
  %306 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %305, i64 -1
  %309 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %305, i64 %312
  store %"class.performance_manager::WorkerNodeImpl"** %313, %"class.performance_manager::WorkerNodeImpl"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #13
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #12
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.performance_manager::WorkerNodeImpl"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.performance_manager::WorkerNodeImpl"** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN19performance_manager14WorkerNodeImplERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.411"*, %"class.performance_manager::WorkerNodeImpl"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 2
  %4 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %5, align 8
  %7 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %4, %6
  %8 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %6 to i64
  %9 = bitcast %"class.performance_manager::WorkerNodeImpl"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 1
  %12 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.411", %"struct.std::__1::__split_buffer.411"* %0, i64 0, i32 0
  %14 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %13, align 8
  %15 = icmp ugt %"class.performance_manager::WorkerNodeImpl"** %12, %14
  %16 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %12, i64 %22
  %24 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.performance_manager::WorkerNodeImpl"** %23 to i8*
  %30 = bitcast %"class.performance_manager::WorkerNodeImpl"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.performance_manager::WorkerNodeImpl"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %23, i64 %26
  store %"class.performance_manager::WorkerNodeImpl"** %34, %"class.performance_manager::WorkerNodeImpl"*** %3, align 8
  %35 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %33, i64 %22
  store %"class.performance_manager::WorkerNodeImpl"** %35, %"class.performance_manager::WorkerNodeImpl"*** %11, align 8
  %36 = bitcast %"class.performance_manager::WorkerNodeImpl"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.411"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.performance_manager::WorkerNodeImpl"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %50, i64 %47
  %53 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %52 to i64
  %54 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %50, i64 %43
  %55 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %54 to i64
  %56 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %12 to i64
  %57 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.performance_manager::WorkerNodeImpl"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.performance_manager::WorkerNodeImpl"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.performance_manager::WorkerNodeImpl"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %69, i64 1
  %77 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %76 to i64
  %78 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !23

81:                                               ; preds = %68
  %82 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.performance_manager::WorkerNodeImpl"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.performance_manager::WorkerNodeImpl"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.performance_manager::WorkerNodeImpl"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.performance_manager::WorkerNodeImpl"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.performance_manager::WorkerNodeImpl"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 1
  %96 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 1
  %97 = bitcast %"class.performance_manager::WorkerNodeImpl"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.performance_manager::WorkerNodeImpl"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 2
  %101 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 2
  %102 = bitcast %"class.performance_manager::WorkerNodeImpl"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.performance_manager::WorkerNodeImpl"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 3
  %106 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 3
  %107 = bitcast %"class.performance_manager::WorkerNodeImpl"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.performance_manager::WorkerNodeImpl"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 4
  %111 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 4
  %112 = bitcast %"class.performance_manager::WorkerNodeImpl"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.performance_manager::WorkerNodeImpl"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 5
  %116 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 5
  %117 = bitcast %"class.performance_manager::WorkerNodeImpl"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.performance_manager::WorkerNodeImpl"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 6
  %121 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 6
  %122 = bitcast %"class.performance_manager::WorkerNodeImpl"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.performance_manager::WorkerNodeImpl"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 7
  %126 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 7
  %127 = bitcast %"class.performance_manager::WorkerNodeImpl"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.performance_manager::WorkerNodeImpl"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %89, i64 8
  %131 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %130 to i64
  %132 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %91, i64 8
  %133 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.performance_manager::WorkerNodeImpl"** %60 to i64
  %136 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.performance_manager::WorkerNodeImpl"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.performance_manager::WorkerNodeImpl"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.performance_manager::WorkerNodeImpl"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"class.performance_manager::WorkerNodeImpl"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.performance_manager::WorkerNodeImpl"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.performance_manager::WorkerNodeImpl"**, %"class.performance_manager::WorkerNodeImpl"*** %3, align 8
  %153 = getelementptr inbounds %"class.performance_manager::WorkerNodeImpl"*, %"class.performance_manager::WorkerNodeImpl"** %152, i64 1
  store %"class.performance_manager::WorkerNodeImpl"** %153, %"class.performance_manager::WorkerNodeImpl"*** %3, align 8
  ret void
}

declare zeroext i1 @_ZNK19performance_manager26execution_context_priority17PriorityAndReasoneqERKS1_(%"class.performance_manager::execution_context_priority::PriorityAndReason"*, %"class.performance_manager::execution_context_priority::PriorityAndReason"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::FrameNode"** @_ZNSt3__16vectorIPKN19performance_manager9FrameNodeENS_9allocatorIS4_EEE7emplaceIJS4_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.371"*, %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.performance_manager::FrameNode"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.420", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %9, align 8
  %11 = icmp ult %"class.performance_manager::FrameNode"** %8, %10
  %12 = ptrtoint %"class.performance_manager::FrameNode"** %8 to i64
  %13 = ptrtoint %"class.performance_manager::FrameNode"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.performance_manager::FrameNode"** %8, %1
  %16 = bitcast %"class.performance_manager::FrameNode"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.performance_manager::FrameNode"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %1, i64 1
  %21 = ptrtoint %"class.performance_manager::FrameNode"** %20 to i64
  %22 = bitcast %"class.performance_manager::FrameNode"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %1, i64 1
  %25 = ptrtoint %"class.performance_manager::FrameNode"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %1, i64 %27
  %29 = bitcast %"class.performance_manager::FrameNode"*** %7 to i64*
  %30 = icmp ult %"class.performance_manager::FrameNode"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %32
  %34 = bitcast %"class.performance_manager::FrameNode"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.performance_manager::FrameNode"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.performance_manager::FrameNode"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %45
  %47 = bitcast %"class.performance_manager::FrameNode"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %1, i64 %55
  %57 = icmp ult %"class.performance_manager::FrameNode"** %8, %56
  %58 = icmp ult %"class.performance_manager::FrameNode"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %61
  %63 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %72
  %75 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %28, i64 %72
  %76 = bitcast %"class.performance_manager::FrameNode"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !24
  %78 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %75, i64 2
  %79 = bitcast %"class.performance_manager::FrameNode"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !24
  %81 = bitcast %"class.performance_manager::FrameNode"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !27, !noalias !24
  %82 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %74, i64 2
  %83 = bitcast %"class.performance_manager::FrameNode"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !27, !noalias !24
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %84
  %86 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %28, i64 %84
  %87 = bitcast %"class.performance_manager::FrameNode"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !24
  %89 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %86, i64 2
  %90 = bitcast %"class.performance_manager::FrameNode"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !24
  %92 = bitcast %"class.performance_manager::FrameNode"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !27, !noalias !24
  %93 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %85, i64 2
  %94 = bitcast %"class.performance_manager::FrameNode"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !27, !noalias !24
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %95
  %97 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %28, i64 %95
  %98 = bitcast %"class.performance_manager::FrameNode"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !24
  %100 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %97, i64 2
  %101 = bitcast %"class.performance_manager::FrameNode"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !24
  %103 = bitcast %"class.performance_manager::FrameNode"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !27, !noalias !24
  %104 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %96, i64 2
  %105 = bitcast %"class.performance_manager::FrameNode"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !27, !noalias !24
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %106
  %108 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %28, i64 %106
  %109 = bitcast %"class.performance_manager::FrameNode"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !24
  %111 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %108, i64 2
  %112 = bitcast %"class.performance_manager::FrameNode"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !24
  %114 = bitcast %"class.performance_manager::FrameNode"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !27, !noalias !24
  %115 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %107, i64 2
  %116 = bitcast %"class.performance_manager::FrameNode"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !27, !noalias !24
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !29

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %124
  %127 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %28, i64 %124
  %128 = bitcast %"class.performance_manager::FrameNode"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !24
  %130 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %127, i64 2
  %131 = bitcast %"class.performance_manager::FrameNode"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !24
  %133 = bitcast %"class.performance_manager::FrameNode"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !27, !noalias !24
  %134 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %126, i64 2
  %135 = bitcast %"class.performance_manager::FrameNode"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !27, !noalias !24
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !30

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.performance_manager::FrameNode"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.performance_manager::FrameNode"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %8, i64 %148
  %150 = bitcast %"class.performance_manager::FrameNode"** %149 to i8*
  %151 = bitcast %"class.performance_manager::FrameNode"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #12
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.performance_manager::FrameNode"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.performance_manager::FrameNode"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.performance_manager::FrameNode"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.performance_manager::FrameNode"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %154, i64 1
  %159 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %153, i64 1
  %160 = icmp ult %"class.performance_manager::FrameNode"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !31

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.performance_manager::FrameNode"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.371", %"class.std::__1::vector.371"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer.420"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #12
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.performance_manager::FrameNode"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.371"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer.420"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.371"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #14
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.performance_manager::FrameNode"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.performance_manager::FrameNode"** null, %"class.performance_manager::FrameNode"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.376"** %170 to %"class.std::__1::__compressed_pair.373"**
  store %"class.std::__1::__compressed_pair.373"* %164, %"class.std::__1::__compressed_pair.373"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.performance_manager::FrameNode"** null, %"class.performance_manager::FrameNode"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.376"** %170 to %"class.std::__1::__compressed_pair.373"**
  store %"class.std::__1::__compressed_pair.373"* %164, %"class.std::__1::__compressed_pair.373"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #14
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #13
  %206 = bitcast i8* %205 to %"class.performance_manager::FrameNode"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.performance_manager::FrameNode"** [ %206, %201 ], [ null, %190 ]
  store %"class.performance_manager::FrameNode"** %210, %"class.performance_manager::FrameNode"*** %166, align 8
  %211 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %210, i64 %208
  store %"class.performance_manager::FrameNode"** %211, %"class.performance_manager::FrameNode"*** %168, align 8
  store %"class.performance_manager::FrameNode"** %211, %"class.performance_manager::FrameNode"*** %167, align 8
  %212 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %210, i64 %209
  store %"class.performance_manager::FrameNode"** %212, %"class.performance_manager::FrameNode"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPKN19performance_manager9FrameNodeERNS_9allocatorIS4_EEE12emplace_backIJS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.420"* nonnull %5, %"class.performance_manager::FrameNode"** dereferenceable(8) %2)
  %213 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %167, align 8
  %214 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %6, align 8
  %215 = ptrtoint %"class.performance_manager::FrameNode"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %213, i64 %218
  store %"class.performance_manager::FrameNode"** %219, %"class.performance_manager::FrameNode"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.performance_manager::FrameNode"** %219 to i8*
  %223 = bitcast %"class.performance_manager::FrameNode"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #12
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %7, align 8
  %226 = icmp eq %"class.performance_manager::FrameNode"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.performance_manager::FrameNode"** %225 to i64
  %229 = bitcast %"class.performance_manager::FrameNode"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.performance_manager::FrameNode"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %225, i64 -1
  %235 = ptrtoint %"class.performance_manager::FrameNode"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.performance_manager::FrameNode"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.performance_manager::FrameNode"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %243, i64 1
  %248 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %168, align 8
  %249 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %248, i64 1
  store %"class.performance_manager::FrameNode"** %249, %"class.performance_manager::FrameNode"*** %168, align 8
  %250 = bitcast %"class.performance_manager::FrameNode"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !32

253:                                              ; preds = %241
  %254 = bitcast %"class.performance_manager::FrameNode"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.performance_manager::FrameNode"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.performance_manager::FrameNode"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.performance_manager::FrameNode"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.performance_manager::FrameNode"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %262, i64 1
  %266 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %168, align 8
  %267 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %266, i64 1
  store %"class.performance_manager::FrameNode"** %267, %"class.performance_manager::FrameNode"*** %168, align 8
  %268 = bitcast %"class.performance_manager::FrameNode"** %267 to i64*
  %269 = bitcast %"class.performance_manager::FrameNode"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %262, i64 2
  %272 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %168, align 8
  %273 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %272, i64 1
  store %"class.performance_manager::FrameNode"** %273, %"class.performance_manager::FrameNode"*** %168, align 8
  %274 = bitcast %"class.performance_manager::FrameNode"** %273 to i64*
  %275 = bitcast %"class.performance_manager::FrameNode"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %262, i64 3
  %278 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %168, align 8
  %279 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %278, i64 1
  store %"class.performance_manager::FrameNode"** %279, %"class.performance_manager::FrameNode"*** %168, align 8
  %280 = bitcast %"class.performance_manager::FrameNode"** %279 to i64*
  %281 = bitcast %"class.performance_manager::FrameNode"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %262, i64 4
  %284 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %168, align 8
  %285 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %284, i64 1
  store %"class.performance_manager::FrameNode"** %285, %"class.performance_manager::FrameNode"*** %168, align 8
  %286 = icmp eq %"class.performance_manager::FrameNode"** %283, %225
  %287 = bitcast %"class.performance_manager::FrameNode"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.performance_manager::FrameNode"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.performance_manager::FrameNode"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.performance_manager::FrameNode"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.performance_manager::FrameNode"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.performance_manager::FrameNode"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer.420"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.performance_manager::FrameNode"**
  %305 = inttoptr i64 %296 to %"class.performance_manager::FrameNode"**
  %306 = icmp eq %"class.performance_manager::FrameNode"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %305, i64 -1
  %309 = ptrtoint %"class.performance_manager::FrameNode"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %305, i64 %312
  store %"class.performance_manager::FrameNode"** %313, %"class.performance_manager::FrameNode"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #13
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #12
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.performance_manager::FrameNode"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.performance_manager::FrameNode"** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPKN19performance_manager9FrameNodeERNS_9allocatorIS4_EEE12emplace_backIJS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.420"*, %"class.performance_manager::FrameNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 2
  %4 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %5, align 8
  %7 = icmp eq %"class.performance_manager::FrameNode"** %4, %6
  %8 = ptrtoint %"class.performance_manager::FrameNode"** %6 to i64
  %9 = bitcast %"class.performance_manager::FrameNode"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 1
  %12 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 0
  %14 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %13, align 8
  %15 = icmp ugt %"class.performance_manager::FrameNode"** %12, %14
  %16 = ptrtoint %"class.performance_manager::FrameNode"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.performance_manager::FrameNode"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %12, i64 %22
  %24 = ptrtoint %"class.performance_manager::FrameNode"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.performance_manager::FrameNode"** %23 to i8*
  %30 = bitcast %"class.performance_manager::FrameNode"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.performance_manager::FrameNode"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %23, i64 %26
  store %"class.performance_manager::FrameNode"** %34, %"class.performance_manager::FrameNode"*** %3, align 8
  %35 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %33, i64 %22
  store %"class.performance_manager::FrameNode"** %35, %"class.performance_manager::FrameNode"*** %11, align 8
  %36 = bitcast %"class.performance_manager::FrameNode"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.performance_manager::FrameNode"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.420"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.performance_manager::FrameNode"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %50, i64 %47
  %53 = ptrtoint %"class.performance_manager::FrameNode"** %52 to i64
  %54 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %50, i64 %43
  %55 = ptrtoint %"class.performance_manager::FrameNode"** %54 to i64
  %56 = ptrtoint %"class.performance_manager::FrameNode"** %12 to i64
  %57 = ptrtoint %"class.performance_manager::FrameNode"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.performance_manager::FrameNode"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.performance_manager::FrameNode"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.performance_manager::FrameNode"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %69, i64 1
  %77 = ptrtoint %"class.performance_manager::FrameNode"** %76 to i64
  %78 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !33

81:                                               ; preds = %68
  %82 = ptrtoint %"class.performance_manager::FrameNode"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.performance_manager::FrameNode"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.performance_manager::FrameNode"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.performance_manager::FrameNode"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.performance_manager::FrameNode"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.performance_manager::FrameNode"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 1
  %96 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 1
  %97 = bitcast %"class.performance_manager::FrameNode"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.performance_manager::FrameNode"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 2
  %101 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 2
  %102 = bitcast %"class.performance_manager::FrameNode"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.performance_manager::FrameNode"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 3
  %106 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 3
  %107 = bitcast %"class.performance_manager::FrameNode"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.performance_manager::FrameNode"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 4
  %111 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 4
  %112 = bitcast %"class.performance_manager::FrameNode"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.performance_manager::FrameNode"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 5
  %116 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 5
  %117 = bitcast %"class.performance_manager::FrameNode"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.performance_manager::FrameNode"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 6
  %121 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 6
  %122 = bitcast %"class.performance_manager::FrameNode"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.performance_manager::FrameNode"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 7
  %126 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 7
  %127 = bitcast %"class.performance_manager::FrameNode"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.performance_manager::FrameNode"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %89, i64 8
  %131 = ptrtoint %"class.performance_manager::FrameNode"** %130 to i64
  %132 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %91, i64 8
  %133 = icmp eq %"class.performance_manager::FrameNode"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.performance_manager::FrameNode"** %60 to i64
  %136 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.performance_manager::FrameNode"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.performance_manager::FrameNode"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.performance_manager::FrameNode"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.performance_manager::FrameNode"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.performance_manager::FrameNode"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"class.performance_manager::FrameNode"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.performance_manager::FrameNode"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.performance_manager::FrameNode"**, %"class.performance_manager::FrameNode"*** %3, align 8
  %153 = getelementptr inbounds %"class.performance_manager::FrameNode"*, %"class.performance_manager::FrameNode"** %152, i64 1
  store %"class.performance_manager::FrameNode"** %153, %"class.performance_manager::FrameNode"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.performance_manager::WorkerNode"** @_ZNSt3__16vectorIPKN19performance_manager10WorkerNodeENS_9allocatorIS4_EEE7emplaceIJS4_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.383"*, %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.performance_manager::WorkerNode"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.427", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.383", %"class.std::__1::vector.383"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.383", %"class.std::__1::vector.383"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.383", %"class.std::__1::vector.383"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %9, align 8
  %11 = icmp ult %"class.performance_manager::WorkerNode"** %8, %10
  %12 = ptrtoint %"class.performance_manager::WorkerNode"** %8 to i64
  %13 = ptrtoint %"class.performance_manager::WorkerNode"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.performance_manager::WorkerNode"** %8, %1
  %16 = bitcast %"class.performance_manager::WorkerNode"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.performance_manager::WorkerNode"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %1, i64 1
  %21 = ptrtoint %"class.performance_manager::WorkerNode"** %20 to i64
  %22 = bitcast %"class.performance_manager::WorkerNode"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %1, i64 1
  %25 = ptrtoint %"class.performance_manager::WorkerNode"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %1, i64 %27
  %29 = bitcast %"class.performance_manager::WorkerNode"*** %7 to i64*
  %30 = icmp ult %"class.performance_manager::WorkerNode"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %32
  %34 = bitcast %"class.performance_manager::WorkerNode"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.performance_manager::WorkerNode"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.performance_manager::WorkerNode"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %45
  %47 = bitcast %"class.performance_manager::WorkerNode"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %1, i64 %55
  %57 = icmp ult %"class.performance_manager::WorkerNode"** %8, %56
  %58 = icmp ult %"class.performance_manager::WorkerNode"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %61
  %63 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %72
  %75 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %28, i64 %72
  %76 = bitcast %"class.performance_manager::WorkerNode"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !34
  %78 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %75, i64 2
  %79 = bitcast %"class.performance_manager::WorkerNode"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !34
  %81 = bitcast %"class.performance_manager::WorkerNode"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !37, !noalias !34
  %82 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %74, i64 2
  %83 = bitcast %"class.performance_manager::WorkerNode"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !37, !noalias !34
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %84
  %86 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %28, i64 %84
  %87 = bitcast %"class.performance_manager::WorkerNode"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !34
  %89 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %86, i64 2
  %90 = bitcast %"class.performance_manager::WorkerNode"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !34
  %92 = bitcast %"class.performance_manager::WorkerNode"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !37, !noalias !34
  %93 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %85, i64 2
  %94 = bitcast %"class.performance_manager::WorkerNode"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !37, !noalias !34
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %95
  %97 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %28, i64 %95
  %98 = bitcast %"class.performance_manager::WorkerNode"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !34
  %100 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %97, i64 2
  %101 = bitcast %"class.performance_manager::WorkerNode"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !34
  %103 = bitcast %"class.performance_manager::WorkerNode"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !37, !noalias !34
  %104 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %96, i64 2
  %105 = bitcast %"class.performance_manager::WorkerNode"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !37, !noalias !34
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %106
  %108 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %28, i64 %106
  %109 = bitcast %"class.performance_manager::WorkerNode"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !34
  %111 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %108, i64 2
  %112 = bitcast %"class.performance_manager::WorkerNode"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !34
  %114 = bitcast %"class.performance_manager::WorkerNode"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !37, !noalias !34
  %115 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %107, i64 2
  %116 = bitcast %"class.performance_manager::WorkerNode"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !37, !noalias !34
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !39

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %124
  %127 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %28, i64 %124
  %128 = bitcast %"class.performance_manager::WorkerNode"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !34
  %130 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %127, i64 2
  %131 = bitcast %"class.performance_manager::WorkerNode"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !34
  %133 = bitcast %"class.performance_manager::WorkerNode"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !37, !noalias !34
  %134 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %126, i64 2
  %135 = bitcast %"class.performance_manager::WorkerNode"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !37, !noalias !34
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !40

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.performance_manager::WorkerNode"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.performance_manager::WorkerNode"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %8, i64 %148
  %150 = bitcast %"class.performance_manager::WorkerNode"** %149 to i8*
  %151 = bitcast %"class.performance_manager::WorkerNode"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #12
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.performance_manager::WorkerNode"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.performance_manager::WorkerNode"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.performance_manager::WorkerNode"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.performance_manager::WorkerNode"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %154, i64 1
  %159 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %153, i64 1
  %160 = icmp ult %"class.performance_manager::WorkerNode"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !41

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.performance_manager::WorkerNode"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.383", %"class.std::__1::vector.383"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer.427"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #12
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.performance_manager::WorkerNode"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.383"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer.427"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.383"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #14
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.performance_manager::WorkerNode"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.performance_manager::WorkerNode"** null, %"class.performance_manager::WorkerNode"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.388"** %170 to %"class.std::__1::__compressed_pair.385"**
  store %"class.std::__1::__compressed_pair.385"* %164, %"class.std::__1::__compressed_pair.385"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.performance_manager::WorkerNode"** null, %"class.performance_manager::WorkerNode"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.388"** %170 to %"class.std::__1::__compressed_pair.385"**
  store %"class.std::__1::__compressed_pair.385"* %164, %"class.std::__1::__compressed_pair.385"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #14
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #13
  %206 = bitcast i8* %205 to %"class.performance_manager::WorkerNode"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.performance_manager::WorkerNode"** [ %206, %201 ], [ null, %190 ]
  store %"class.performance_manager::WorkerNode"** %210, %"class.performance_manager::WorkerNode"*** %166, align 8
  %211 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %210, i64 %208
  store %"class.performance_manager::WorkerNode"** %211, %"class.performance_manager::WorkerNode"*** %168, align 8
  store %"class.performance_manager::WorkerNode"** %211, %"class.performance_manager::WorkerNode"*** %167, align 8
  %212 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %210, i64 %209
  store %"class.performance_manager::WorkerNode"** %212, %"class.performance_manager::WorkerNode"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPKN19performance_manager10WorkerNodeERNS_9allocatorIS4_EEE12emplace_backIJS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.427"* nonnull %5, %"class.performance_manager::WorkerNode"** dereferenceable(8) %2)
  %213 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %167, align 8
  %214 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %6, align 8
  %215 = ptrtoint %"class.performance_manager::WorkerNode"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %213, i64 %218
  store %"class.performance_manager::WorkerNode"** %219, %"class.performance_manager::WorkerNode"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.performance_manager::WorkerNode"** %219 to i8*
  %223 = bitcast %"class.performance_manager::WorkerNode"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #12
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %7, align 8
  %226 = icmp eq %"class.performance_manager::WorkerNode"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.performance_manager::WorkerNode"** %225 to i64
  %229 = bitcast %"class.performance_manager::WorkerNode"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.performance_manager::WorkerNode"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %225, i64 -1
  %235 = ptrtoint %"class.performance_manager::WorkerNode"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.performance_manager::WorkerNode"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.performance_manager::WorkerNode"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %243, i64 1
  %248 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %168, align 8
  %249 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %248, i64 1
  store %"class.performance_manager::WorkerNode"** %249, %"class.performance_manager::WorkerNode"*** %168, align 8
  %250 = bitcast %"class.performance_manager::WorkerNode"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !42

253:                                              ; preds = %241
  %254 = bitcast %"class.performance_manager::WorkerNode"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.performance_manager::WorkerNode"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.performance_manager::WorkerNode"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.performance_manager::WorkerNode"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.performance_manager::WorkerNode"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %262, i64 1
  %266 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %168, align 8
  %267 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %266, i64 1
  store %"class.performance_manager::WorkerNode"** %267, %"class.performance_manager::WorkerNode"*** %168, align 8
  %268 = bitcast %"class.performance_manager::WorkerNode"** %267 to i64*
  %269 = bitcast %"class.performance_manager::WorkerNode"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %262, i64 2
  %272 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %168, align 8
  %273 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %272, i64 1
  store %"class.performance_manager::WorkerNode"** %273, %"class.performance_manager::WorkerNode"*** %168, align 8
  %274 = bitcast %"class.performance_manager::WorkerNode"** %273 to i64*
  %275 = bitcast %"class.performance_manager::WorkerNode"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %262, i64 3
  %278 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %168, align 8
  %279 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %278, i64 1
  store %"class.performance_manager::WorkerNode"** %279, %"class.performance_manager::WorkerNode"*** %168, align 8
  %280 = bitcast %"class.performance_manager::WorkerNode"** %279 to i64*
  %281 = bitcast %"class.performance_manager::WorkerNode"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %262, i64 4
  %284 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %168, align 8
  %285 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %284, i64 1
  store %"class.performance_manager::WorkerNode"** %285, %"class.performance_manager::WorkerNode"*** %168, align 8
  %286 = icmp eq %"class.performance_manager::WorkerNode"** %283, %225
  %287 = bitcast %"class.performance_manager::WorkerNode"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.performance_manager::WorkerNode"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.performance_manager::WorkerNode"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.performance_manager::WorkerNode"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.performance_manager::WorkerNode"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.performance_manager::WorkerNode"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer.427"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.performance_manager::WorkerNode"**
  %305 = inttoptr i64 %296 to %"class.performance_manager::WorkerNode"**
  %306 = icmp eq %"class.performance_manager::WorkerNode"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %305, i64 -1
  %309 = ptrtoint %"class.performance_manager::WorkerNode"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %305, i64 %312
  store %"class.performance_manager::WorkerNode"** %313, %"class.performance_manager::WorkerNode"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #13
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #12
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.performance_manager::WorkerNode"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.performance_manager::WorkerNode"** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPKN19performance_manager10WorkerNodeERNS_9allocatorIS4_EEE12emplace_backIJS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.427"*, %"class.performance_manager::WorkerNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %0, i64 0, i32 2
  %4 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %5, align 8
  %7 = icmp eq %"class.performance_manager::WorkerNode"** %4, %6
  %8 = ptrtoint %"class.performance_manager::WorkerNode"** %6 to i64
  %9 = bitcast %"class.performance_manager::WorkerNode"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %0, i64 0, i32 1
  %12 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.427", %"struct.std::__1::__split_buffer.427"* %0, i64 0, i32 0
  %14 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %13, align 8
  %15 = icmp ugt %"class.performance_manager::WorkerNode"** %12, %14
  %16 = ptrtoint %"class.performance_manager::WorkerNode"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.performance_manager::WorkerNode"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %12, i64 %22
  %24 = ptrtoint %"class.performance_manager::WorkerNode"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.performance_manager::WorkerNode"** %23 to i8*
  %30 = bitcast %"class.performance_manager::WorkerNode"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.performance_manager::WorkerNode"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %23, i64 %26
  store %"class.performance_manager::WorkerNode"** %34, %"class.performance_manager::WorkerNode"*** %3, align 8
  %35 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %33, i64 %22
  store %"class.performance_manager::WorkerNode"** %35, %"class.performance_manager::WorkerNode"*** %11, align 8
  %36 = bitcast %"class.performance_manager::WorkerNode"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.performance_manager::WorkerNode"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.427"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.performance_manager::WorkerNode"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %50, i64 %47
  %53 = ptrtoint %"class.performance_manager::WorkerNode"** %52 to i64
  %54 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %50, i64 %43
  %55 = ptrtoint %"class.performance_manager::WorkerNode"** %54 to i64
  %56 = ptrtoint %"class.performance_manager::WorkerNode"** %12 to i64
  %57 = ptrtoint %"class.performance_manager::WorkerNode"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.performance_manager::WorkerNode"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.performance_manager::WorkerNode"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.performance_manager::WorkerNode"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %69, i64 1
  %77 = ptrtoint %"class.performance_manager::WorkerNode"** %76 to i64
  %78 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !43

81:                                               ; preds = %68
  %82 = ptrtoint %"class.performance_manager::WorkerNode"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.performance_manager::WorkerNode"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.performance_manager::WorkerNode"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.performance_manager::WorkerNode"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.performance_manager::WorkerNode"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.performance_manager::WorkerNode"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 1
  %96 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 1
  %97 = bitcast %"class.performance_manager::WorkerNode"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.performance_manager::WorkerNode"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 2
  %101 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 2
  %102 = bitcast %"class.performance_manager::WorkerNode"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.performance_manager::WorkerNode"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 3
  %106 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 3
  %107 = bitcast %"class.performance_manager::WorkerNode"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.performance_manager::WorkerNode"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 4
  %111 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 4
  %112 = bitcast %"class.performance_manager::WorkerNode"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.performance_manager::WorkerNode"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 5
  %116 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 5
  %117 = bitcast %"class.performance_manager::WorkerNode"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.performance_manager::WorkerNode"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 6
  %121 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 6
  %122 = bitcast %"class.performance_manager::WorkerNode"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.performance_manager::WorkerNode"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 7
  %126 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 7
  %127 = bitcast %"class.performance_manager::WorkerNode"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.performance_manager::WorkerNode"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %89, i64 8
  %131 = ptrtoint %"class.performance_manager::WorkerNode"** %130 to i64
  %132 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %91, i64 8
  %133 = icmp eq %"class.performance_manager::WorkerNode"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.performance_manager::WorkerNode"** %60 to i64
  %136 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.performance_manager::WorkerNode"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.performance_manager::WorkerNode"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.performance_manager::WorkerNode"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.performance_manager::WorkerNode"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.performance_manager::WorkerNode"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"class.performance_manager::WorkerNode"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.performance_manager::WorkerNode"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.performance_manager::WorkerNode"**, %"class.performance_manager::WorkerNode"*** %3, align 8
  %153 = getelementptr inbounds %"class.performance_manager::WorkerNode"*, %"class.performance_manager::WorkerNode"** %152, i64 1
  store %"class.performance_manager::WorkerNode"** %153, %"class.performance_manager::WorkerNode"*** %3, align 8
  ret void
}

declare i32 @_ZNK19performance_manager9GraphImpl12GetNodeStateEPKNS_8NodeBaseE(%"class.performance_manager::GraphImpl"*, %"class.performance_manager::NodeBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !8}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !10}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !8}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = distinct !{!32, !10}
!33 = distinct !{!33, !10}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !8}
!40 = distinct !{!40, !10}
!41 = distinct !{!41, !8}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !10}
