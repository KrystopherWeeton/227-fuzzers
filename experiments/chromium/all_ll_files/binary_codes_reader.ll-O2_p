; ModuleID = '../../third_party/libaom/source/libaom/aom_dsp/binary_codes_reader.c'
source_filename = "../../third_party/libaom/source/libaom/aom_dsp/binary_codes_reader.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.aom_reader = type { i8*, i8*, %struct.od_ec_dec, i8 }
%struct.od_ec_dec = type { i8*, i32, i8*, i8*, i32, i16, i16 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @aom_read_primitive_quniform_(%struct.aom_reader*, i16 zeroext) local_unnamed_addr #0 {
  %3 = zext i16 %1 to i32
  %4 = icmp ult i16 %1, 2
  br i1 %4, label %33, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @llvm.ctlz.i32(i32 %3, i1 true) #3, !range !2
  %7 = xor i32 %6, 31
  %8 = shl i32 2, %7
  %9 = sub nsw i32 %8, %3
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.aom_reader, %struct.aom_reader* %0, i64 0, i32 2
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i32 [ %7, %11 ], [ %16, %13 ]
  %15 = phi i32 [ 0, %11 ], [ %19, %13 ]
  %16 = add nsw i32 %14, -1
  %17 = tail call i32 @od_ec_decode_bool_q15(%struct.od_ec_dec* %12, i32 16384) #3
  %18 = shl i32 %17, %16
  %19 = or i32 %18, %15
  %20 = icmp sgt i32 %16, 0
  br i1 %20, label %13, label %21

21:                                               ; preds = %13, %5
  %22 = phi i32 [ 0, %5 ], [ %19, %13 ]
  %23 = icmp slt i32 %22, %9
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = shl i32 %22, 1
  %26 = sub i32 %25, %9
  %27 = getelementptr inbounds %struct.aom_reader, %struct.aom_reader* %0, i64 0, i32 2
  %28 = tail call i32 @od_ec_decode_bool_q15(%struct.od_ec_dec* %27, i32 16384) #3
  %29 = add nsw i32 %26, %28
  br label %30

30:                                               ; preds = %21, %24
  %31 = phi i32 [ %29, %24 ], [ %22, %21 ]
  %32 = trunc i32 %31 to i16
  br label %33

33:                                               ; preds = %2, %30
  %34 = phi i16 [ %32, %30 ], [ 0, %2 ]
  ret i16 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @aom_read_primitive_subexpfin_(%struct.aom_reader*, i16 zeroext, i16 zeroext) local_unnamed_addr #0 {
  %4 = zext i16 %2 to i32
  %5 = zext i16 %1 to i32
  %6 = shl i32 3, %4
  %7 = icmp slt i32 %6, %5
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.aom_reader, %struct.aom_reader* %0, i64 0, i32 2
  br label %48

10:                                               ; preds = %68
  %11 = trunc i32 %71 to i16
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi i16 [ 0, %3 ], [ %11, %10 ]
  %14 = sub i16 %1, %13
  %15 = zext i16 %14 to i32
  %16 = icmp ult i16 %14, 2
  br i1 %16, label %45, label %17

17:                                               ; preds = %12
  %18 = tail call i32 @llvm.ctlz.i32(i32 %15, i1 true) #3, !range !2
  %19 = xor i32 %18, 31
  %20 = shl i32 2, %19
  %21 = sub nsw i32 %20, %15
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.aom_reader, %struct.aom_reader* %0, i64 0, i32 2
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i32 [ %19, %23 ], [ %28, %25 ]
  %27 = phi i32 [ 0, %23 ], [ %31, %25 ]
  %28 = add nsw i32 %26, -1
  %29 = tail call i32 @od_ec_decode_bool_q15(%struct.od_ec_dec* %24, i32 16384) #3
  %30 = shl i32 %29, %28
  %31 = or i32 %30, %27
  %32 = icmp sgt i32 %28, 0
  br i1 %32, label %25, label %33

33:                                               ; preds = %25, %17
  %34 = phi i32 [ 0, %17 ], [ %31, %25 ]
  %35 = icmp slt i32 %34, %21
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = shl i32 %34, 1
  %38 = sub i32 %37, %21
  %39 = getelementptr inbounds %struct.aom_reader, %struct.aom_reader* %0, i64 0, i32 2
  %40 = tail call i32 @od_ec_decode_bool_q15(%struct.od_ec_dec* %39, i32 16384) #3
  %41 = add nsw i32 %38, %40
  br label %42

42:                                               ; preds = %36, %33
  %43 = phi i32 [ %41, %36 ], [ %34, %33 ]
  %44 = trunc i32 %43 to i16
  br label %45

45:                                               ; preds = %12, %42
  %46 = phi i16 [ %44, %42 ], [ 0, %12 ]
  %47 = add i16 %46, %13
  br label %76

48:                                               ; preds = %8, %68
  %49 = phi i32 [ %4, %8 ], [ %72, %68 ]
  %50 = phi i32 [ 0, %8 ], [ %71, %68 ]
  %51 = phi i32 [ 0, %8 ], [ %70, %68 ]
  %52 = tail call i32 @od_ec_decode_bool_q15(%struct.od_ec_dec* %9, i32 16384) #3
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %68

54:                                               ; preds = %48
  %55 = icmp sgt i32 %49, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %54, %56
  %57 = phi i32 [ %59, %56 ], [ %49, %54 ]
  %58 = phi i32 [ %62, %56 ], [ 0, %54 ]
  %59 = add nsw i32 %57, -1
  %60 = tail call i32 @od_ec_decode_bool_q15(%struct.od_ec_dec* %9, i32 16384) #3
  %61 = shl i32 %60, %59
  %62 = or i32 %61, %58
  %63 = icmp sgt i32 %59, 0
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %54
  %65 = phi i32 [ 0, %54 ], [ %62, %56 ]
  %66 = add nsw i32 %65, %50
  %67 = trunc i32 %66 to i16
  br label %76

68:                                               ; preds = %48
  %69 = shl i32 1, %49
  %70 = add nuw nsw i32 %51, 1
  %71 = add nsw i32 %69, %50
  %72 = add nuw i32 %51, %4
  %73 = shl i32 3, %72
  %74 = add nsw i32 %73, %71
  %75 = icmp slt i32 %74, %5
  br i1 %75, label %48, label %10

76:                                               ; preds = %45, %64
  %77 = phi i16 [ %67, %64 ], [ %47, %45 ]
  ret i16 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @aom_read_primitive_refsubexpfin_(%struct.aom_reader*, i16 zeroext, i16 zeroext, i16 zeroext) local_unnamed_addr #0 {
  %5 = tail call zeroext i16 @aom_read_primitive_subexpfin_(%struct.aom_reader* %0, i16 zeroext %1, i16 zeroext %2)
  %6 = zext i16 %3 to i32
  %7 = shl nuw nsw i32 %6, 1
  %8 = zext i16 %1 to i32
  %9 = icmp ugt i32 %7, %8
  br i1 %9, label %24, label %10

10:                                               ; preds = %4
  %11 = zext i16 %5 to i32
  %12 = icmp ult i32 %7, %11
  br i1 %12, label %45, label %13

13:                                               ; preds = %10
  %14 = and i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = lshr i16 %5, 1
  %18 = add i16 %17, %3
  br label %45

19:                                               ; preds = %13
  %20 = add nuw nsw i32 %11, 1
  %21 = lshr i32 %20, 1
  %22 = trunc i32 %21 to i16
  %23 = sub i16 %3, %22
  br label %45

24:                                               ; preds = %4
  %25 = add i16 %1, -1
  %26 = sub i16 %25, %3
  %27 = zext i16 %5 to i32
  %28 = zext i16 %26 to i32
  %29 = shl nuw nsw i32 %28, 1
  %30 = icmp ult i32 %29, %27
  br i1 %30, label %42, label %31

31:                                               ; preds = %24
  %32 = and i32 %27, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = lshr i16 %5, 1
  %36 = add i16 %35, %26
  br label %42

37:                                               ; preds = %31
  %38 = add nuw nsw i32 %27, 1
  %39 = lshr i32 %38, 1
  %40 = trunc i32 %39 to i16
  %41 = sub i16 %26, %40
  br label %42

42:                                               ; preds = %37, %34, %24
  %43 = phi i16 [ %36, %34 ], [ %41, %37 ], [ %5, %24 ]
  %44 = sub i16 %25, %43
  br label %45

45:                                               ; preds = %10, %16, %19, %42
  %46 = phi i16 [ %44, %42 ], [ %18, %16 ], [ %23, %19 ], [ %5, %10 ]
  ret i16 %46
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #1

declare i32 @od_ec_decode_bool_q15(%struct.od_ec_dec*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
