; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_simplefont.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_simplefont.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_SimpleFont = type { %class.CPDF_Font, %class.CPDF_FontEncoding, i32, i8, %"class.std::__1::vector.105", [256 x i16], [256 x i16], [256 x %struct.FX_RECT] }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.46", %"class.fxcrt::RetainPtr.54", %"class.fxcrt::RetainPtr.93", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.99", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.7", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.15", %"class.fxcrt::RetainPtr.19" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.45", i64 }
%"class.fxcrt::UnownedPtr.45" = type { i8* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.48" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.48"* }
%"class.fxcrt::RetainPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.64", %"class.fxcrt::RetainPtr.85" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.39", %"class.fxcrt::UnownedPtr.45" }
%"class.fxcrt::RetainPtr.64" = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.135" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.138", %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.153", [4 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140", %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.93" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.58" }
%"class.fxcrt::RetainPtr.58" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CPDF_FontEncoding = type { [256 x i32] }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.fxcrt::ByteString"* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.112", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.fxcrt::RetainPtr.114"*, %"class.fxcrt::RetainPtr.114"*, %"class.std::__1::__compressed_pair.120" }
%"class.fxcrt::RetainPtr.114" = type { %"class.std::__1::unique_ptr.115" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.fxcrt::RetainPtr.114"* }
%class.CPDF_Name = type { %class.CPDF_Object, %"class.fxcrt::ByteString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.125" }
%"class.fxcrt::RetainPtr.125" = type { %"class.std::__1::unique_ptr.126" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.fxcrt::StringDataTemplate.129"* }
%"class.fxcrt::StringDataTemplate.129" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPDF_Type1Font = type opaque
%class.CPDF_TrueTypeFont = type opaque
%class.CPDF_Type3Font = type opaque
%class.CPDF_CIDFont = type opaque
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.133" }
%"class.pdfium::span.133" = type { %"class.fxcrt::UnownedPtr.134", i64 }
%"class.fxcrt::UnownedPtr.134" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN5fxcrt10ByteStringENS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZTV15CPDF_SimpleFont = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_SimpleFont*)* @_ZN15CPDF_SimpleFontD2Ev to i8*), i8* bitcast (void (%class.CPDF_SimpleFont*)* @_ZN15CPDF_SimpleFontD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType1FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font14IsTrueTypeFontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType3FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font9IsCIDFontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (void (%class.CPDF_Font*)* @_ZN9CPDF_Font15WillBeDestroyedEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font13IsVertWritingEv to i8*), i8* bitcast (i1 (%class.CPDF_SimpleFont*)* @_ZNK15CPDF_SimpleFont19IsUnicodeCompatibleEv to i8*), i8* bitcast (i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)* @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm to i8*), i8* bitcast (i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)* @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (i32 (%class.CPDF_Font*, i8*, i32)* @_ZNK9CPDF_Font10AppendCharEPcj to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32, i8*)* @_ZN15CPDF_SimpleFont17GlyphFromCharCodeEjPb to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPDF_SimpleFont*, i32)* @_ZNK15CPDF_SimpleFont19UnicodeFromCharCodeEj to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32)* @_ZNK15CPDF_SimpleFont19CharCodeFromUnicodeEw to i8*), i8* bitcast (i1 (%class.CPDF_SimpleFont*)* @_ZNK15CPDF_SimpleFont13HasFontWidthsEv to i8*), i8* bitcast (i32 (%class.CPDF_SimpleFont*, i32)* @_ZN15CPDF_SimpleFont13GetCharWidthFEj to i8*), i8* bitcast ({ i64, i64 } (%class.CPDF_SimpleFont*, i32)* @_ZN15CPDF_SimpleFont11GetCharBBoxEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Symbol\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"MacExpertEncoding\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"WinAnsiEncoding\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"BaseEncoding\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"Differences\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"FontDescriptor\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"Widths\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"MissingWidth\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"FirstChar\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"LastChar\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"MacRomanEncoding\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"PDFDocEncoding\00", align 1

@_ZN15CPDF_SimpleFontD1Ev = hidden unnamed_addr alias void (%class.CPDF_SimpleFont*), void (%class.CPDF_SimpleFont*)* @_ZN15CPDF_SimpleFontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_SimpleFontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_SimpleFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0
  tail call void @_ZN9CPDF_FontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Font* %4, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #12
  %5 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV15CPDF_SimpleFont, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 1
  tail call void @_ZN17CPDF_FontEncodingC1Ei(%class.CPDF_FontEncoding* %6, i32 0) #12
  %7 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::vector.105"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 0
  %11 = bitcast i16* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -1, i64 5120, i1 false)
  ret void
}

declare void @_ZN9CPDF_FontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

declare void @_ZN17CPDF_FontEncodingC1Ei(%class.CPDF_FontEncoding*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_SimpleFontD2Ev(%class.CPDF_SimpleFont*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV15CPDF_SimpleFont, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %4, align 8
  %6 = icmp eq %"class.fxcrt::ByteString"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  %9 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %9, align 8
  %11 = icmp eq %"class.fxcrt::ByteString"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.fxcrt::ByteString"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %13, i64 -1
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %14) #12
  %15 = icmp eq %"class.fxcrt::ByteString"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.105"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.fxcrt::ByteString"* %5, %"class.fxcrt::ByteString"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0
  tail call void @_ZN9CPDF_FontD2Ev(%class.CPDF_Font* %22) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9CPDF_FontD2Ev(%class.CPDF_Font*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN15CPDF_SimpleFontD0Ev(%class.CPDF_SimpleFont* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN15CPDF_SimpleFont17GlyphFromCharCodeEjPb(%class.CPDF_SimpleFont* nocapture readonly, i32, i8*) unnamed_addr #6 align 2 {
  %4 = icmp eq i8* %2, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i8 0, i8* %2, align 1
  br label %6

6:                                                ; preds = %3, %5
  %7 = icmp ugt i32 %1, 255
  br i1 %7, label %15, label %8

8:                                                ; preds = %6
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i16 %11, -1
  %13 = zext i16 %11 to i32
  %14 = select i1 %12, i32 -1, i32 %13
  br label %15

15:                                               ; preds = %8, %6
  %16 = phi i32 [ -1, %6 ], [ %14, %8 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_SimpleFont15LoadCharMetricsEi(%class.CPDF_SimpleFont*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Face*, %class.CFX_Face** %4, align 8
  %6 = icmp eq %class.CFX_Face* %5, null
  br i1 %6, label %104, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = icmp eq %struct.FT_FaceRec_* %9, null
  %11 = icmp ugt i32 %1, 255
  %12 = or i1 %11, %10
  br i1 %12, label %104, label %13

13:                                               ; preds = %7
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, -1
  br i1 %17, label %18, label %36

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %19, align 8
  %21 = icmp eq %class.CPDF_StreamAcc* %20, null
  %22 = icmp ne i32 %1, 32
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %104

24:                                               ; preds = %18
  tail call void @_ZN15CPDF_SimpleFont15LoadCharMetricsEi(%class.CPDF_SimpleFont* %0, i32 32)
  %25 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 32
  %26 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %14
  %27 = bitcast %struct.FX_RECT* %26 to i8*
  %28 = bitcast %struct.FX_RECT* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 4 %28, i64 16, i1 false)
  %29 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %104, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 32
  %34 = load i16, i16* %33, align 8
  %35 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %14
  store i16 %34, i16* %35, align 2
  br label %104

36:                                               ; preds = %13
  %37 = zext i16 %16 to i32
  %38 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* nonnull %9, i32 %37, i32 513) #12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %104

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 21
  %42 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %41, align 8
  %43 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %42, i64 0, i32 5, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %42, i64 0, i32 5, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = tail call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %45, %struct.FT_FaceRec_* nonnull %9) #12
  %50 = tail call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %48, %struct.FT_FaceRec_* nonnull %9) #12
  %51 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %41, align 8
  %52 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %51, i64 0, i32 5, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, %44
  %55 = trunc i64 %54 to i32
  %56 = tail call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %55, %struct.FT_FaceRec_* nonnull %9) #12
  %57 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %41, align 8
  %58 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %57, i64 0, i32 5, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %47, %59
  %61 = trunc i64 %60 to i32
  %62 = tail call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %61, %struct.FT_FaceRec_* nonnull %9) #12
  %63 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %14, i32 0
  store i32 %49, i32* %63, align 8
  %64 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %14, i32 1
  store i32 %50, i32* %64, align 4
  %65 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %14, i32 2
  store i32 %56, i32* %65, align 8
  %66 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %14, i32 3
  store i32 %62, i32* %66, align 4
  %67 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 3
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %104, label %70

70:                                               ; preds = %40
  %71 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %41, align 8
  %72 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %71, i64 0, i32 5, i32 4
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = tail call i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32 %74, %struct.FT_FaceRec_* nonnull %9) #12
  %76 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %14
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, -1
  br i1 %78, label %79, label %81

79:                                               ; preds = %70
  %80 = trunc i32 %75 to i16
  store i16 %80, i16* %76, align 2
  br label %104

81:                                               ; preds = %70
  %82 = icmp eq i32 %75, 0
  br i1 %82, label %104, label %83

83:                                               ; preds = %81
  %84 = bitcast %class.CPDF_SimpleFont* %0 to i1 (%class.CPDF_Font*)***
  %85 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %85, i64 4
  %87 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %86, align 8
  %88 = tail call zeroext i1 %87(%class.CPDF_Font* %3) #12
  br i1 %88, label %104, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %91 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %90, align 8
  %92 = icmp eq %class.CPDF_StreamAcc* %91, null
  br i1 %92, label %93, label %104

93:                                               ; preds = %89
  %94 = load i32, i32* %65, align 8
  %95 = load i16, i16* %76, align 2
  %96 = zext i16 %95 to i32
  %97 = mul nsw i32 %94, %96
  %98 = sdiv i32 %97, %75
  store i32 %98, i32* %65, align 8
  %99 = load i32, i32* %63, align 8
  %100 = load i16, i16* %76, align 2
  %101 = zext i16 %100 to i32
  %102 = mul nsw i32 %99, %101
  %103 = sdiv i32 %102, %75
  store i32 %103, i32* %63, align 8
  br label %104

104:                                              ; preds = %89, %83, %2, %24, %32, %18, %40, %81, %93, %79, %36, %7
  ret void
}

declare i32 @FT_Load_Glyph(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #1

declare i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32, %struct.FT_FaceRec_*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_SimpleFont15LoadPDFEncodingEbb(%class.CPDF_SimpleFont*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %12 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #12
  %13 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %11, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %14 = icmp eq %class.CPDF_Object* %13, null
  br i1 %14, label %15, label %27

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 7
  %17 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = select i1 %2, i32 8, i32 5
  %20 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 2
  store i32 %19, i32* %20, align 8
  br label %183

21:                                               ; preds = %15
  br i1 %1, label %183, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %183

26:                                               ; preds = %22
  store i32 1, i32* %23, align 8
  br label %183

27:                                               ; preds = %3
  %28 = bitcast %class.CPDF_Object* %13 to i1 (%class.CPDF_Object*)***
  %29 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %29, i64 17
  %31 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %30, align 8
  %32 = call zeroext i1 %31(%class.CPDF_Object* nonnull %13) #12
  br i1 %32, label %33, label %69

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %35, -5
  %37 = icmp ult i32 %36, 2
  br i1 %37, label %183, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 7
  %45 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  br i1 %2, label %183, label %47

47:                                               ; preds = %46
  store i32 5, i32* %34, align 8
  br label %183

48:                                               ; preds = %38, %43
  %49 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %50, align 8
  %51 = bitcast %class.CPDF_Object* %13 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %52 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %52, i64 7
  %54 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %53, align 8
  call void %54(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CPDF_Object* nonnull %13) #12
  %55 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %55, label %56, label %58

56:                                               ; preds = %48
  %57 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %58

58:                                               ; preds = %56, %48
  %59 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #12
  br i1 %59, label %66, label %60

60:                                               ; preds = %58
  %61 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  br i1 %61, label %66, label %62

62:                                               ; preds = %60
  %63 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #12
  br i1 %65, label %66, label %68

66:                                               ; preds = %64, %62, %60, %58
  %67 = phi i32 [ 1, %58 ], [ 2, %60 ], [ 3, %62 ], [ 7, %64 ]
  store i32 %67, i32* %34, align 4
  br label %68

68:                                               ; preds = %66, %64
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  br label %183

69:                                               ; preds = %27
  %70 = bitcast %class.CPDF_Object* %13 to %class.CPDF_Dictionary* (%class.CPDF_Object*)***
  %71 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)**, %class.CPDF_Dictionary* (%class.CPDF_Object*)*** %70, align 8
  %72 = getelementptr inbounds %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %71, i64 28
  %73 = load %class.CPDF_Dictionary* (%class.CPDF_Object*)*, %class.CPDF_Dictionary* (%class.CPDF_Object*)** %72, align 8
  %74 = call %class.CPDF_Dictionary* %73(%class.CPDF_Object* nonnull %13) #12
  %75 = icmp eq %class.CPDF_Dictionary* %74, null
  br i1 %75, label %183, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, -5
  %80 = icmp ult i32 %79, 2
  br i1 %80, label %100, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  %83 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %83, align 8
  %84 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #12
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %6, %class.CPDF_Dictionary* nonnull %74, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12
  br i1 %2, label %85, label %89

85:                                               ; preds = %81
  %86 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %89

89:                                               ; preds = %87, %85, %81
  %90 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #12
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  br i1 %92, label %97, label %93

93:                                               ; preds = %91
  %94 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #12
  br i1 %96, label %97, label %99

97:                                               ; preds = %95, %93, %91, %89
  %98 = phi i32 [ 1, %89 ], [ 2, %91 ], [ 3, %93 ], [ 7, %95 ]
  store i32 %98, i32* %77, align 4
  br label %99

99:                                               ; preds = %97, %95
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  br label %100

100:                                              ; preds = %76, %99
  %101 = xor i1 %1, true
  %102 = or i1 %101, %2
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = load i32, i32* %77, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  store i32 4, i32* %77, align 8
  br label %107

107:                                              ; preds = %100, %106, %103
  %108 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)) #12
  %109 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %74, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #12
  %110 = icmp eq %class.CPDF_Array* %109, null
  br i1 %110, label %183, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 4
  %113 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 4, i32 0, i32 1
  %114 = bitcast %"class.fxcrt::ByteString"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.std::__1::vector.105"* %112 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %115, %117
  %119 = ashr exact i64 %118, 3
  %120 = icmp ult i64 %119, 256
  %121 = inttoptr i64 %117 to %"class.fxcrt::ByteString"*
  %122 = inttoptr i64 %115 to %"class.fxcrt::ByteString"*
  br i1 %120, label %123, label %125

123:                                              ; preds = %111
  %124 = sub nuw nsw i64 256, %119
  call void @_ZNSt3__16vectorIN5fxcrt10ByteStringENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.105"* %112, i64 %124) #12
  br label %135

125:                                              ; preds = %111
  %126 = icmp eq i64 %118, 2048
  br i1 %126, label %135, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %121, i64 256
  %129 = icmp eq %"class.fxcrt::ByteString"* %128, %122
  br i1 %129, label %134, label %130

130:                                              ; preds = %127, %130
  %131 = phi %"class.fxcrt::ByteString"* [ %132, %130 ], [ %122, %127 ]
  %132 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %131, i64 -1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %132) #12
  %133 = icmp eq %"class.fxcrt::ByteString"* %132, %128
  br i1 %133, label %134, label %130

134:                                              ; preds = %130, %127
  store %"class.fxcrt::ByteString"* %128, %"class.fxcrt::ByteString"** %113, align 8
  br label %135

135:                                              ; preds = %125, %123, %134
  %136 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %109, i64 0, i32 1
  %137 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %109, i64 0, i32 1, i32 0, i32 1
  %138 = bitcast %"class.fxcrt::RetainPtr.114"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.std::__1::vector.112"* %136 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %139, %141
  br i1 %142, label %183, label %143

143:                                              ; preds = %135
  %144 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  %145 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %112, i64 0, i32 0, i32 0
  br label %146

146:                                              ; preds = %143, %174
  %147 = phi i64 [ 0, %143 ], [ %177, %174 ]
  %148 = phi i32 [ 0, %143 ], [ %176, %174 ]
  %149 = phi i32 [ 0, %143 ], [ %175, %174 ]
  %150 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %109, i64 %147) #12
  %151 = icmp eq %class.CPDF_Object* %150, null
  br i1 %151, label %174, label %152

152:                                              ; preds = %146
  %153 = bitcast %class.CPDF_Object* %150 to %class.CPDF_Name* (%class.CPDF_Object*)***
  %154 = load %class.CPDF_Name* (%class.CPDF_Object*)**, %class.CPDF_Name* (%class.CPDF_Object*)*** %153, align 8
  %155 = getelementptr inbounds %class.CPDF_Name* (%class.CPDF_Object*)*, %class.CPDF_Name* (%class.CPDF_Object*)** %154, i64 30
  %156 = load %class.CPDF_Name* (%class.CPDF_Object*)*, %class.CPDF_Name* (%class.CPDF_Object*)** %155, align 8
  %157 = call %class.CPDF_Name* %156(%class.CPDF_Object* nonnull %150) #12
  %158 = icmp eq %class.CPDF_Name* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %152
  %160 = icmp ult i32 %149, 256
  br i1 %160, label %161, label %166

161:                                              ; preds = %159
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #12
  call void @_ZNK9CPDF_Name9GetStringEv(%"class.fxcrt::ByteString"* nonnull sret %9, %class.CPDF_Name* nonnull %157) #12
  %162 = zext i32 %149 to i64
  %163 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %145, align 8
  %164 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %163, i64 %162
  %165 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %164, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #12
  br label %166

166:                                              ; preds = %161, %159
  %167 = add i32 %149, 1
  br label %174

168:                                              ; preds = %152
  %169 = bitcast %class.CPDF_Object* %150 to i32 (%class.CPDF_Object*)***
  %170 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %169, align 8
  %171 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %170, i64 10
  %172 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %171, align 8
  %173 = call i32 %172(%class.CPDF_Object* nonnull %150) #12
  br label %174

174:                                              ; preds = %166, %168, %146
  %175 = phi i32 [ %149, %146 ], [ %167, %166 ], [ %173, %168 ]
  %176 = add i32 %148, 1
  %177 = zext i32 %176 to i64
  %178 = load i64, i64* %138, align 8
  %179 = load i64, i64* %140, align 8
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 3
  %182 = icmp ugt i64 %181, %177
  br i1 %182, label %146, label %183

183:                                              ; preds = %174, %135, %33, %69, %107, %46, %47, %18, %26, %22, %21, %68
  ret void
}

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare void @_ZNK9CPDF_Name9GetStringEv(%"class.fxcrt::ByteString"* sret, %class.CPDF_Name*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15CPDF_SimpleFont13GetCharWidthFEj(%class.CPDF_SimpleFont*, i32) unnamed_addr #0 align 2 {
  %3 = icmp ugt i32 %1, 255
  %4 = select i1 %3, i32 0, i32 %1
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %5
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, -1
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  tail call void @_ZN15CPDF_SimpleFont15LoadCharMetricsEi(%class.CPDF_SimpleFont* %0, i32 %4)
  %10 = load i16, i16* %6, align 2
  %11 = icmp eq i16 %10, -1
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  store i16 0, i16* %6, align 2
  br label %13

13:                                               ; preds = %9, %12, %2
  %14 = phi i16 [ %10, %9 ], [ 0, %12 ], [ %7, %2 ]
  %15 = zext i16 %14 to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN15CPDF_SimpleFont11GetCharBBoxEj(%class.CPDF_SimpleFont*, i32) unnamed_addr #0 align 2 {
  %3 = icmp ugt i32 %1, 255
  %4 = select i1 %3, i32 0, i32 %1
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %5
  %7 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZN15CPDF_SimpleFont15LoadCharMetricsEi(%class.CPDF_SimpleFont* %0, i32 %4)
  br label %11

11:                                               ; preds = %10, %2
  %12 = bitcast %struct.FX_RECT* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %5, i32 2
  %15 = bitcast i32* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %13, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_SimpleFont10LoadCommonEv(%class.CPDF_SimpleFont*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %12 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #12
  %13 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %11, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %14 = icmp ne %class.CPDF_Dictionary* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  call void @_ZN9CPDF_Font18LoadFontDescriptorEPK15CPDF_Dictionary(%class.CPDF_Font* %9, %class.CPDF_Dictionary* nonnull %13) #12
  br label %16

16:                                               ; preds = %15, %1
  %17 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %18 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #12
  %19 = call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %17, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %20 = icmp ne %class.CPDF_Array* %19, null
  %21 = xor i1 %20, true
  %22 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 3
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 4
  br i1 %20, label %24, label %149

24:                                               ; preds = %16
  br i1 %14, label %25, label %100

25:                                               ; preds = %24
  %26 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #12
  %27 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %13, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br i1 %27, label %28, label %100

28:                                               ; preds = %25
  %29 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #12
  %30 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %13, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  %31 = trunc i32 %30 to i16
  %32 = insertelement <8 x i16> undef, i16 %31, i32 0
  %33 = shufflevector <8 x i16> %32, <8 x i16> undef, <8 x i32> zeroinitializer
  %34 = insertelement <8 x i16> undef, i16 %31, i32 0
  %35 = shufflevector <8 x i16> %34, <8 x i16> undef, <8 x i32> zeroinitializer
  %36 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 0
  %37 = bitcast i16* %36 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %37, align 2
  %38 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 8
  %39 = bitcast i16* %38 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %39, align 2
  %40 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 16
  %41 = bitcast i16* %40 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %41, align 2
  %42 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 24
  %43 = bitcast i16* %42 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %43, align 2
  %44 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 32
  %45 = bitcast i16* %44 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %45, align 2
  %46 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 40
  %47 = bitcast i16* %46 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %47, align 2
  %48 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 48
  %49 = bitcast i16* %48 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %49, align 2
  %50 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 56
  %51 = bitcast i16* %50 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %51, align 2
  %52 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 64
  %53 = bitcast i16* %52 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %53, align 2
  %54 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 72
  %55 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %55, align 2
  %56 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 80
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %57, align 2
  %58 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 88
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %59, align 2
  %60 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 96
  %61 = bitcast i16* %60 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %61, align 2
  %62 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 104
  %63 = bitcast i16* %62 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %63, align 2
  %64 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 112
  %65 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %65, align 2
  %66 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 120
  %67 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %67, align 2
  %68 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 128
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %69, align 2
  %70 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 136
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %71, align 2
  %72 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 144
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %73, align 2
  %74 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 152
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %75, align 2
  %76 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 160
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %77, align 2
  %78 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 168
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %79, align 2
  %80 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 176
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %81, align 2
  %82 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 184
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %83, align 2
  %84 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 192
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %85, align 2
  %86 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 200
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %87, align 2
  %88 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 208
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %89, align 2
  %90 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 216
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %91, align 2
  %92 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 224
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %93, align 2
  %94 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 232
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %95, align 2
  %96 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 240
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %97, align 2
  %98 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 248
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %35, <8 x i16>* %99, align 2
  br label %100

100:                                              ; preds = %28, %24, %25
  %101 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %102 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #12
  %103 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %101, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6, i32 0) #12
  %104 = sext i32 %103 to i64
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #12
  %105 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %10, align 8
  %106 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #12
  %107 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %105, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, i32 0) #12
  %108 = sext i32 %107 to i64
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #12
  %109 = icmp ult i32 %103, 256
  br i1 %109, label %110, label %149

110:                                              ; preds = %100
  %111 = icmp eq i32 %107, 0
  br i1 %111, label %112, label %121

112:                                              ; preds = %110
  %113 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %19, i64 0, i32 1, i32 0, i32 1
  %114 = bitcast %"class.fxcrt::RetainPtr.114"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %19, i64 0, i32 1
  %117 = bitcast %"class.std::__1::vector.112"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %115, %118
  %120 = ashr exact i64 %119, 3
  br label %132

121:                                              ; preds = %110
  %122 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %19, i64 0, i32 1
  %123 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %19, i64 0, i32 1, i32 0, i32 1
  %124 = bitcast %"class.fxcrt::RetainPtr.114"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.std::__1::vector.112"* %122 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %125, %127
  %129 = ashr exact i64 %128, 3
  %130 = add nsw i64 %129, %104
  %131 = icmp ugt i64 %130, %108
  br i1 %131, label %136, label %132

132:                                              ; preds = %112, %121
  %133 = phi i64 [ %120, %112 ], [ %129, %121 ]
  %134 = add nsw i64 %104, -1
  %135 = add nsw i64 %134, %133
  br label %136

136:                                              ; preds = %121, %132
  %137 = phi i64 [ %135, %132 ], [ %108, %121 ]
  %138 = icmp ult i64 %137, 255
  %139 = select i1 %138, i64 %137, i64 255
  %140 = icmp ult i64 %139, %104
  br i1 %140, label %149, label %141

141:                                              ; preds = %136, %141
  %142 = phi i64 [ %147, %141 ], [ %104, %136 ]
  %143 = sub i64 %142, %104
  %144 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %19, i64 %143) #12
  %145 = trunc i32 %144 to i16
  %146 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %142
  store i16 %145, i16* %146, align 2
  %147 = add i64 %142, 1
  %148 = icmp ugt i64 %147, %139
  br i1 %148, label %149, label %141

149:                                              ; preds = %141, %136, %100, %16
  %150 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %151 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %152 = icmp eq %class.CPDF_StreamAcc* %151, null
  br i1 %152, label %170, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 7
  %155 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %155, align 8
  %157 = icmp eq %"class.fxcrt::StringDataTemplate"* %156, null
  br i1 %157, label %211, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %156, i64 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = icmp ugt i64 %160, 8
  br i1 %161, label %162, label %211

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %156, i64 0, i32 3, i64 7
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 43
  br i1 %165, label %166, label %211

166:                                              ; preds = %162
  %167 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #12
  %168 = add i64 %160, -8
  call void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* nonnull sret %8, %"class.fxcrt::ByteString"* %154, i64 %168) #12
  %169 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %154, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #12
  br label %211

170:                                              ; preds = %149
  %171 = load i8, i8* %22, align 4, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %198

173:                                              ; preds = %170
  %174 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 10
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %198

178:                                              ; preds = %173, %416
  %179 = phi i64 [ %418, %416 ], [ 0, %173 ]
  %180 = phi i32 [ %417, %416 ], [ 0, %173 ]
  %181 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %179
  %182 = load i16, i16* %181, align 2
  %183 = zext i16 %182 to i32
  switch i16 %182, label %184 [
    i16 0, label %188
    i16 -1, label %188
  ]

184:                                              ; preds = %178
  %185 = icmp eq i32 %180, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = icmp eq i32 %180, %183
  br i1 %187, label %188, label %198

188:                                              ; preds = %186, %184, %178, %178
  %189 = phi i32 [ %180, %178 ], [ %180, %186 ], [ %180, %178 ], [ %183, %184 ]
  %190 = or i64 %179, 1
  %191 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %190
  %192 = load i16, i16* %191, align 2
  %193 = zext i16 %192 to i32
  switch i16 %192, label %412 [
    i16 0, label %416
    i16 -1, label %416
  ]

194:                                              ; preds = %416
  %195 = icmp eq i32 %417, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %194
  %197 = or i32 %175, 1
  store i32 %197, i32* %174, align 4
  br label %198

198:                                              ; preds = %186, %414, %170, %173, %194, %196
  %199 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 3
  %200 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 7
  %201 = bitcast %class.CPDF_SimpleFont* %0 to i1 (%class.CPDF_Font*)***
  %202 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %201, align 8
  %203 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %202, i64 3
  %204 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %203, align 8
  %205 = call zeroext i1 %204(%class.CPDF_Font* %9) #12
  %206 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 10
  %207 = load i32, i32* %206, align 4
  %208 = call i32 @_ZNK9CPDF_Font13GetFontWeightEv(%class.CPDF_Font* %9) #12
  %209 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 14
  %210 = load i32, i32* %209, align 4
  call void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font* %199, %"class.fxcrt::ByteString"* dereferenceable(8) %200, i1 zeroext %205, i32 %207, i32 %208, i32 %210, i32 0, i1 zeroext false) #12
  br label %211

211:                                              ; preds = %153, %158, %162, %166, %198
  %212 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 10
  %213 = load i32, i32* %212, align 4
  %214 = and i32 %213, 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %211
  %217 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 2
  store i32 4, i32* %217, align 8
  br label %218

218:                                              ; preds = %211, %216
  %219 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %220 = icmp ne %class.CPDF_StreamAcc* %219, null
  %221 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 3
  %222 = call zeroext i1 @_ZNK8CFX_Font8IsTTFontEv(%class.CFX_Font* %221) #12
  call void @_ZN15CPDF_SimpleFont15LoadPDFEncodingEbb(%class.CPDF_SimpleFont* %0, i1 zeroext %220, i1 zeroext %222)
  %223 = bitcast %class.CPDF_SimpleFont* %0 to void (%class.CPDF_SimpleFont*)***
  %224 = load void (%class.CPDF_SimpleFont*)**, void (%class.CPDF_SimpleFont*)*** %223, align 8
  %225 = getelementptr inbounds void (%class.CPDF_SimpleFont*)*, void (%class.CPDF_SimpleFont*)** %224, i64 27
  %226 = load void (%class.CPDF_SimpleFont*)*, void (%class.CPDF_SimpleFont*)** %225, align 8
  call void %226(%class.CPDF_SimpleFont* %0) #12
  %227 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 4, i32 0, i32 0
  %228 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %227, align 8
  %229 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 4, i32 0, i32 1
  %230 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %229, align 8
  %231 = icmp eq %"class.fxcrt::ByteString"* %230, %228
  br i1 %231, label %236, label %232

232:                                              ; preds = %218, %232
  %233 = phi %"class.fxcrt::ByteString"* [ %234, %232 ], [ %230, %218 ]
  %234 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %233, i64 -1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %234) #12
  %235 = icmp eq %"class.fxcrt::ByteString"* %234, %228
  br i1 %235, label %236, label %232

236:                                              ; preds = %232, %218
  store %"class.fxcrt::ByteString"* %228, %"class.fxcrt::ByteString"** %229, align 8
  %237 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %238 = load %class.CFX_Face*, %class.CFX_Face** %237, align 8
  %239 = icmp eq %class.CFX_Face* %238, null
  br i1 %239, label %273, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %238, i64 0, i32 2, i32 0, i32 0, i32 0
  %242 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %241, align 8
  %243 = icmp eq %struct.FT_FaceRec_* %242, null
  br i1 %243, label %273, label %244

244:                                              ; preds = %240
  %245 = load i32, i32* %212, align 4
  %246 = and i32 %245, 65536
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %272, label %248

248:                                              ; preds = %244, %269
  %249 = phi i64 [ %270, %269 ], [ 97, %244 ]
  %250 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 %249
  %251 = load i16, i16* %250, align 2
  %252 = icmp eq i16 %251, -1
  br i1 %252, label %256, label %253

253:                                              ; preds = %248
  %254 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %255 = icmp eq %class.CPDF_StreamAcc* %254, null
  br i1 %255, label %256, label %269

256:                                              ; preds = %253, %248
  %257 = add nsw i64 %249, -32
  %258 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 %257
  %259 = load i16, i16* %258, align 2
  store i16 %259, i16* %250, align 2
  %260 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %257
  %261 = load i16, i16* %260, align 2
  %262 = icmp eq i16 %261, 0
  br i1 %262, label %269, label %263

263:                                              ; preds = %256
  %264 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %249
  store i16 %261, i16* %264, align 2
  %265 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %257
  %266 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %249
  %267 = bitcast %struct.FX_RECT* %266 to i8*
  %268 = bitcast %struct.FX_RECT* %265 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 4 %268, i64 16, i1 false)
  br label %269

269:                                              ; preds = %253, %263, %256
  %270 = add nuw nsw i64 %249, 1
  %271 = icmp ult i64 %249, 122
  br i1 %271, label %248, label %274

272:                                              ; preds = %397, %400, %406, %244
  call void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font* %9) #12
  br label %273

273:                                              ; preds = %236, %240, %272
  ret i1 true

274:                                              ; preds = %269, %295
  %275 = phi i64 [ %296, %295 ], [ 224, %269 ]
  %276 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 %275
  %277 = load i16, i16* %276, align 2
  %278 = icmp eq i16 %277, -1
  br i1 %278, label %282, label %279

279:                                              ; preds = %274
  %280 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %281 = icmp eq %class.CPDF_StreamAcc* %280, null
  br i1 %281, label %282, label %295

282:                                              ; preds = %279, %274
  %283 = add nsw i64 %275, -32
  %284 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 %283
  %285 = load i16, i16* %284, align 2
  store i16 %285, i16* %276, align 2
  %286 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %283
  %287 = load i16, i16* %286, align 2
  %288 = icmp eq i16 %287, 0
  br i1 %288, label %295, label %289

289:                                              ; preds = %282
  %290 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %275
  store i16 %287, i16* %290, align 2
  %291 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %283
  %292 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 %275
  %293 = bitcast %struct.FX_RECT* %292 to i8*
  %294 = bitcast %struct.FX_RECT* %291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 4 %294, i64 16, i1 false)
  br label %295

295:                                              ; preds = %289, %282, %279
  %296 = add nuw nsw i64 %275, 1
  %297 = icmp ult i64 %275, 246
  br i1 %297, label %274, label %298

298:                                              ; preds = %295
  %299 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 248
  %300 = load i16, i16* %299, align 2
  %301 = icmp eq i16 %300, -1
  br i1 %301, label %305, label %302

302:                                              ; preds = %298
  %303 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %304 = icmp eq %class.CPDF_StreamAcc* %303, null
  br i1 %304, label %305, label %317

305:                                              ; preds = %302, %298
  %306 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 216
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %299, align 2
  %308 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 216
  %309 = load i16, i16* %308, align 2
  %310 = icmp eq i16 %309, 0
  br i1 %310, label %317, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 248
  store i16 %309, i16* %312, align 2
  %313 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 216
  %314 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 248
  %315 = bitcast %struct.FX_RECT* %314 to i8*
  %316 = bitcast %struct.FX_RECT* %313 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %315, i8* align 4 %316, i64 16, i1 false)
  br label %317

317:                                              ; preds = %311, %305, %302
  %318 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 249
  %319 = load i16, i16* %318, align 2
  %320 = icmp eq i16 %319, -1
  br i1 %320, label %324, label %321

321:                                              ; preds = %317
  %322 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %323 = icmp eq %class.CPDF_StreamAcc* %322, null
  br i1 %323, label %324, label %336

324:                                              ; preds = %321, %317
  %325 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 217
  %326 = load i16, i16* %325, align 2
  store i16 %326, i16* %318, align 2
  %327 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 217
  %328 = load i16, i16* %327, align 2
  %329 = icmp eq i16 %328, 0
  br i1 %329, label %336, label %330

330:                                              ; preds = %324
  %331 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 249
  store i16 %328, i16* %331, align 2
  %332 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 217
  %333 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 249
  %334 = bitcast %struct.FX_RECT* %333 to i8*
  %335 = bitcast %struct.FX_RECT* %332 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 4 %335, i64 16, i1 false)
  br label %336

336:                                              ; preds = %330, %324, %321
  %337 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 250
  %338 = load i16, i16* %337, align 2
  %339 = icmp eq i16 %338, -1
  br i1 %339, label %343, label %340

340:                                              ; preds = %336
  %341 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %342 = icmp eq %class.CPDF_StreamAcc* %341, null
  br i1 %342, label %343, label %355

343:                                              ; preds = %340, %336
  %344 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 218
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %337, align 2
  %346 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 218
  %347 = load i16, i16* %346, align 2
  %348 = icmp eq i16 %347, 0
  br i1 %348, label %355, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 250
  store i16 %347, i16* %350, align 2
  %351 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 218
  %352 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 250
  %353 = bitcast %struct.FX_RECT* %352 to i8*
  %354 = bitcast %struct.FX_RECT* %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %353, i8* align 4 %354, i64 16, i1 false)
  br label %355

355:                                              ; preds = %349, %343, %340
  %356 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 251
  %357 = load i16, i16* %356, align 2
  %358 = icmp eq i16 %357, -1
  br i1 %358, label %362, label %359

359:                                              ; preds = %355
  %360 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %361 = icmp eq %class.CPDF_StreamAcc* %360, null
  br i1 %361, label %362, label %374

362:                                              ; preds = %359, %355
  %363 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 219
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %356, align 2
  %365 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 219
  %366 = load i16, i16* %365, align 2
  %367 = icmp eq i16 %366, 0
  br i1 %367, label %374, label %368

368:                                              ; preds = %362
  %369 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 251
  store i16 %366, i16* %369, align 2
  %370 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 219
  %371 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 251
  %372 = bitcast %struct.FX_RECT* %371 to i8*
  %373 = bitcast %struct.FX_RECT* %370 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* align 4 %373, i64 16, i1 false)
  br label %374

374:                                              ; preds = %368, %362, %359
  %375 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 252
  %376 = load i16, i16* %375, align 2
  %377 = icmp eq i16 %376, -1
  br i1 %377, label %381, label %378

378:                                              ; preds = %374
  %379 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %380 = icmp eq %class.CPDF_StreamAcc* %379, null
  br i1 %380, label %381, label %393

381:                                              ; preds = %378, %374
  %382 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 220
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %375, align 2
  %384 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 220
  %385 = load i16, i16* %384, align 2
  %386 = icmp eq i16 %385, 0
  br i1 %386, label %393, label %387

387:                                              ; preds = %381
  %388 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 252
  store i16 %385, i16* %388, align 2
  %389 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 220
  %390 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 252
  %391 = bitcast %struct.FX_RECT* %390 to i8*
  %392 = bitcast %struct.FX_RECT* %389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %391, i8* align 4 %392, i64 16, i1 false)
  br label %393

393:                                              ; preds = %387, %381, %378
  %394 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 253
  %395 = load i16, i16* %394, align 2
  %396 = icmp eq i16 %395, -1
  br i1 %396, label %400, label %397

397:                                              ; preds = %393
  %398 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %150, align 8
  %399 = icmp eq %class.CPDF_StreamAcc* %398, null
  br i1 %399, label %400, label %272

400:                                              ; preds = %397, %393
  %401 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 5, i64 221
  %402 = load i16, i16* %401, align 2
  store i16 %402, i16* %394, align 2
  %403 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 221
  %404 = load i16, i16* %403, align 2
  %405 = icmp eq i16 %404, 0
  br i1 %405, label %272, label %406

406:                                              ; preds = %400
  %407 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 253
  store i16 %404, i16* %407, align 2
  %408 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 221
  %409 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 7, i64 253
  %410 = bitcast %struct.FX_RECT* %409 to i8*
  %411 = bitcast %struct.FX_RECT* %408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %410, i8* align 4 %411, i64 16, i1 false)
  br label %272

412:                                              ; preds = %188
  %413 = icmp eq i32 %189, 0
  br i1 %413, label %416, label %414

414:                                              ; preds = %412
  %415 = icmp eq i32 %189, %193
  br i1 %415, label %416, label %198

416:                                              ; preds = %414, %412, %188, %188
  %417 = phi i32 [ %189, %188 ], [ %189, %414 ], [ %189, %188 ], [ %193, %412 ]
  %418 = add nuw nsw i64 %179, 2
  %419 = icmp eq i64 %418, 256
  br i1 %419, label %194, label %178
}

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN9CPDF_Font18LoadFontDescriptorEPK15CPDF_Dictionary(%class.CPDF_Font*, %class.CPDF_Dictionary*) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #1

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare void @_ZNK5fxcrt10ByteString4LastEm(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::ByteString"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_SimpleFont13LoadSubstFontEv(%class.CPDF_SimpleFont*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %30

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 10
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %30

10:                                               ; preds = %5, %48
  %11 = phi i64 [ %50, %48 ], [ 0, %5 ]
  %12 = phi i32 [ %49, %48 ], [ 0, %5 ]
  %13 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %11
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  switch i16 %14, label %16 [
    i16 0, label %20
    i16 -1, label %20
  ]

16:                                               ; preds = %10
  %17 = icmp eq i32 %12, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = icmp eq i32 %12, %15
  br i1 %19, label %20, label %30

20:                                               ; preds = %16, %10, %10, %18
  %21 = phi i32 [ %12, %10 ], [ %12, %18 ], [ %12, %10 ], [ %15, %16 ]
  %22 = or i64 %11, 1
  %23 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 6, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  switch i16 %24, label %44 [
    i16 0, label %48
    i16 -1, label %48
  ]

26:                                               ; preds = %48
  %27 = icmp eq i32 %49, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = or i32 %7, 1
  store i32 %29, i32* %6, align 4
  br label %30

30:                                               ; preds = %18, %46, %26, %5, %28, %1
  %31 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0
  %32 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 3
  %33 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 7
  %34 = bitcast %class.CPDF_SimpleFont* %0 to i1 (%class.CPDF_Font*)***
  %35 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %35, i64 3
  %37 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %36, align 8
  %38 = tail call zeroext i1 %37(%class.CPDF_Font* %31) #12
  %39 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = tail call i32 @_ZNK9CPDF_Font13GetFontWeightEv(%class.CPDF_Font* %31) #12
  %42 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0, i32 14
  %43 = load i32, i32* %42, align 4
  tail call void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font* %32, %"class.fxcrt::ByteString"* dereferenceable(8) %33, i1 zeroext %38, i32 %40, i32 %41, i32 %43, i32 0, i1 zeroext false) #12
  ret void

44:                                               ; preds = %20
  %45 = icmp eq i32 %21, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = icmp eq i32 %21, %25
  br i1 %47, label %48, label %30

48:                                               ; preds = %46, %44, %20, %20
  %49 = phi i32 [ %21, %20 ], [ %21, %46 ], [ %21, %20 ], [ %25, %44 ]
  %50 = add nuw nsw i64 %11, 2
  %51 = icmp eq i64 %50, 256
  br i1 %51, label %26, label %10
}

declare zeroext i1 @_ZNK8CFX_Font8IsTTFontEv(%class.CFX_Font*) local_unnamed_addr #1

declare void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font*) local_unnamed_addr #1

declare void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZNK9CPDF_Font13GetFontWeightEv(%class.CPDF_Font*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_SimpleFont19IsUnicodeCompatibleEv(%class.CPDF_SimpleFont* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 7
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = trunc i32 %3 to i7
  %7 = lshr i7 30, %6
  %8 = and i7 %7, 1
  %9 = icmp ne i7 %8, 0
  ret i1 %9

10:                                               ; preds = %1
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_SimpleFont19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* noalias sret, %class.CPDF_SimpleFont*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.129"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.129"*), %"class.fxcrt::StringDataTemplate.129"** %6, align 8
  %7 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %1, i64 0, i32 0
  call void @_ZNK9CPDF_Font19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* nonnull sret %4, %class.CPDF_Font* %7, i32 %2) #12
  %8 = load %"class.fxcrt::StringDataTemplate.129"*, %"class.fxcrt::StringDataTemplate.129"** %6, align 8
  %9 = icmp eq %"class.fxcrt::StringDataTemplate.129"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.129", %"class.fxcrt::StringDataTemplate.129"* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #12
  br label %23

15:                                               ; preds = %3, %10
  %16 = and i32 %2, 255
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %1, i64 0, i32 1, i32 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #12
  br label %23

22:                                               ; preds = %15
  call void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"* %0, i32 signext %19) #12
  br label %23

23:                                               ; preds = %21, %22, %14
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

declare void @_ZNK9CPDF_Font19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* sret, %class.CPDF_Font*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1Ew(%"class.fxcrt::WideString"*, i32 signext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15CPDF_SimpleFont19CharCodeFromUnicodeEw(%class.CPDF_SimpleFont*, i32 signext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK9CPDF_Font19CharCodeFromUnicodeEw(%class.CPDF_Font* %3, i32 signext %1) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 1
  %8 = tail call i32 @_ZNK17CPDF_FontEncoding19CharCodeFromUnicodeEw(%class.CPDF_FontEncoding* %7, i32 signext %1) #12
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %2 ]
  ret i32 %10
}

declare i32 @_ZNK9CPDF_Font19CharCodeFromUnicodeEw(%class.CPDF_Font*, i32 signext) unnamed_addr #1

declare i32 @_ZNK17CPDF_FontEncoding19CharCodeFromUnicodeEw(%class.CPDF_FontEncoding*, i32 signext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_SimpleFont13HasFontWidthsEv(%class.CPDF_SimpleFont* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SimpleFont, %class.CPDF_SimpleFont* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

declare zeroext i1 @_ZNK9CPDF_Font11IsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font14IsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font11IsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font9IsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZNK9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type1Font* @_ZN9CPDF_Font11AsType1FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_TrueTypeFont* @_ZNK9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_TrueTypeFont* @_ZN9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type3Font* @_ZNK9CPDF_Font11AsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_Type3Font* @_ZN9CPDF_Font11AsType3FontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_CIDFont* @_ZNK9CPDF_Font9AsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare %class.CPDF_CIDFont* @_ZN9CPDF_Font9AsCIDFontEv(%class.CPDF_Font*) unnamed_addr #1

declare void @_ZN9CPDF_Font15WillBeDestroyedEv(%class.CPDF_Font*) unnamed_addr #1

declare zeroext i1 @_ZNK9CPDF_Font13IsVertWritingEv(%class.CPDF_Font*) unnamed_addr #1

declare i32 @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*) unnamed_addr #1

declare i64 @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

declare i32 @_ZNK9CPDF_Font10AppendCharEPcj(%class.CPDF_Font*, i8*, i32) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt10ByteStringENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.105"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.fxcrt::ByteString"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.fxcrt::ByteString"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.fxcrt::ByteString"*
  %14 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"class.fxcrt::ByteString"* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %"class.fxcrt::ByteString"* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %19) #12
  %20 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %19, i64 1
  %21 = icmp eq %"class.fxcrt::ByteString"* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %93

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector.105"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = ashr exact i64 %27, 3
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector.105"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #14
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, 1152921504606846975
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = ashr exact i64 %34, 2
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 2305843009213693951
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #14
  unreachable

45:                                               ; preds = %33, %42
  %46 = phi i64 [ %40, %42 ], [ 2305843009213693951, %33 ]
  %47 = shl i64 %46, 3
  %48 = tail call i8* @_Znwm(i64 %47) #13
  %49 = bitcast i8* %48 to %"class.fxcrt::ByteString"*
  br label %50

50:                                               ; preds = %37, %45
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi %"class.fxcrt::ByteString"* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %52, i64 %28
  %54 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %52, i64 %51
  %55 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %53, i64 %1
  br label %56

56:                                               ; preds = %50, %56
  %57 = phi %"class.fxcrt::ByteString"* [ %58, %56 ], [ %53, %50 ]
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %57) #12
  %58 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %57, i64 1
  %59 = icmp eq %"class.fxcrt::ByteString"* %55, %58
  br i1 %59, label %60, label %56

60:                                               ; preds = %56
  %61 = ptrtoint %"class.fxcrt::ByteString"* %54 to i64
  %62 = ptrtoint %"class.fxcrt::ByteString"* %55 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 0
  %64 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %63, align 8
  %65 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %6, align 8
  %66 = icmp eq %"class.fxcrt::ByteString"* %65, %64
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = ptrtoint %"class.fxcrt::ByteString"* %64 to i64
  br label %78

69:                                               ; preds = %60, %69
  %70 = phi %"class.fxcrt::ByteString"* [ %72, %69 ], [ %53, %60 ]
  %71 = phi %"class.fxcrt::ByteString"* [ %73, %69 ], [ %65, %60 ]
  %72 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %70, i64 -1
  %73 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %71, i64 -1
  tail call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %72, %"class.fxcrt::ByteString"* dereferenceable(8) %73) #12
  %74 = icmp eq %"class.fxcrt::ByteString"* %73, %64
  br i1 %74, label %75, label %69

75:                                               ; preds = %69
  %76 = load i64, i64* %25, align 8
  %77 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %6, align 8
  br label %78

78:                                               ; preds = %67, %75
  %79 = phi %"class.fxcrt::ByteString"* [ %64, %67 ], [ %77, %75 ]
  %80 = phi %"class.fxcrt::ByteString"* [ %53, %67 ], [ %72, %75 ]
  %81 = phi i64 [ %68, %67 ], [ %76, %75 ]
  %82 = ptrtoint %"class.fxcrt::ByteString"* %80 to i64
  store i64 %82, i64* %25, align 8
  store i64 %62, i64* %7, align 8
  store i64 %61, i64* %4, align 8
  %83 = inttoptr i64 %81 to %"class.fxcrt::ByteString"*
  %84 = icmp eq %"class.fxcrt::ByteString"* %79, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %78, %85
  %86 = phi %"class.fxcrt::ByteString"* [ %87, %85 ], [ %79, %78 ]
  %87 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %86, i64 -1
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %87) #12
  %88 = icmp eq %"class.fxcrt::ByteString"* %87, %83
  br i1 %88, label %89, label %85

89:                                               ; preds = %85, %78
  %90 = icmp eq i64 %81, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %91, %89, %22
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
