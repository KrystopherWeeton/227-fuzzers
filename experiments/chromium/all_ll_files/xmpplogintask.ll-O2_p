; ModuleID = '../../third_party/libjingle_xmpp/xmpp/xmpplogintask.cc'
source_filename = "../../third_party/libjingle_xmpp/xmpp/xmpplogintask.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.jingle_xmpp::StaticQName" = type { i8*, i8* }
%"class.jingle_xmpp::XmppLoginTask" = type { %"class.jingle_xmpp::XmppEngineImpl"*, i8, i8, i32, %"class.jingle_xmpp::XmlElement"*, i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.16", %"class.jingle_xmpp::Jid", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.67" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.jingle_xmpp::XmlElement"* }
%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::vector.25"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.jingle_xmpp::XmlElement"** }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.jingle_xmpp::SaslMechanism"* }
%"class.jingle_xmpp::SaslMechanism" = type { i32 (...)** }
%"class.jingle_xmpp::XmppEngineImpl" = type { %"class.jingle_xmpp::XmppEngine", %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler", %"class.jingle_xmpp::XmppStanzaParser", i32, %"class.jingle_xmpp::Jid", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.35", %"class.std::__1::basic_string", i32, %"class.jingle_xmpp::Jid", i32, i8, i32, i32, %"class.std::__1::unique_ptr.16", i8, %"class.jingle_xmpp::XmppOutputHandler"*, %"class.jingle_xmpp::XmppSessionHandler"*, %"class.jingle_xmpp::XmlnsStack", [6 x %"class.std::__1::unique_ptr.41"], %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61" }
%"class.jingle_xmpp::XmppEngine" = type { i32 (...)** }
%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler" = type { %"class.jingle_xmpp::XmppStanzaParseHandler", %"class.jingle_xmpp::XmppEngineImpl"* }
%"class.jingle_xmpp::XmppStanzaParseHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmppStanzaParser" = type { %"class.jingle_xmpp::XmppStanzaParseHandler"*, %"class.jingle_xmpp::XmppStanzaParser::ParseHandler", %"class.jingle_xmpp::XmlParser", i32, %"class.jingle_xmpp::XmlBuilder" }
%"class.jingle_xmpp::XmppStanzaParser::ParseHandler" = type { %"class.jingle_xmpp::XmlParseHandler", %"class.jingle_xmpp::XmppStanzaParser"* }
%"class.jingle_xmpp::XmlParseHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmlParser" = type <{ i32 (...)**, %"class.jingle_xmpp::XmlParser::ParseContext", %struct.XML_ParserStruct*, %"class.jingle_xmpp::XmlParseHandler"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlParser::ParseContext" = type { %"class.jingle_xmpp::XmlParseContext", %"class.jingle_xmpp::XmlnsStack", i32, i64, i64, i64 }
%"class.jingle_xmpp::XmlParseContext" = type { i32 (...)** }
%struct.XML_ParserStruct = type opaque
%"class.jingle_xmpp::XmlBuilder" = type { %"class.jingle_xmpp::XmlParseHandler", %"class.jingle_xmpp::XmlElement"*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.jingle_xmpp::XmppLoginTask"* }
%"class.jingle_xmpp::XmppOutputHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmppSessionHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmlnsStack" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::vector.12"* }
%"class.std::__1::vector.12" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::vector.44"* }
%"class.std::__1::vector.44" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::vector.51"* }
%"class.std::__1::vector.51" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.jingle_xmpp::SaslHandler"* }
%"class.jingle_xmpp::SaslHandler" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN11jingle_xmpp3JidaSERKS0_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1
@_ZN11jingle_xmpp15QN_TLS_STARTTLSE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp14QN_TLS_PROCEEDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp18QN_SASL_MECHANISMSE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp17QN_SASL_MECHANISME = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp40QN_GOOGLE_ALLOW_NON_GOOGLE_ID_XMPP_LOGINE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp43QN_GOOGLE_AUTH_CLIENT_USES_FULL_BIND_RESULTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp7NS_SASLE = external constant [0 x i8], align 1
@_ZN11jingle_xmpp17QN_SASL_CHALLENGEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp15QN_SASL_SUCCESSE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp12QN_BIND_BINDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp18QN_SESSION_SESSIONE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp5QN_IQE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp7QN_TYPEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@_ZN11jingle_xmpp5QN_IDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp16QN_BIND_RESOURCEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"result\00", align 1
@_ZN11jingle_xmpp11QN_BIND_JIDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp16QN_STREAM_STREAME = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp8QN_XMLNSE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"jabber:client\00", align 1
@_ZN11jingle_xmpp10QN_VERSIONE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.5 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@_ZN11jingle_xmpp18QN_STREAM_FEATURESE = external global %"struct.jingle_xmpp::StaticQName", align 8

@_ZN11jingle_xmpp13XmppLoginTaskC1EPNS_14XmppEngineImplE = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppEngineImpl"*), void (%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp13XmppLoginTaskC2EPNS_14XmppEngineImplE
@_ZN11jingle_xmpp13XmppLoginTaskD1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppLoginTask"*), void (%"class.jingle_xmpp::XmppLoginTask"*)* @_ZN11jingle_xmpp13XmppLoginTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp13XmppLoginTaskC2EPNS_14XmppEngineImplE(%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 0
  store %"class.jingle_xmpp::XmppEngineImpl"* %1, %"class.jingle_xmpp::XmppEngineImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 1
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 2
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 4
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %8, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 6
  %11 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #12
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %14) #13
  unreachable

15:                                               ; preds = %2
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %25, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  br label %31

25:                                               ; preds = %15
  %26 = trunc i64 %11 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25, %17
  %32 = phi i8* [ %20, %17 ], [ %29, %25 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %11, i1 false) #12
  br label %33

33:                                               ; preds = %25, %31
  %34 = phi i8* [ %29, %25 ], [ %32, %31 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %11
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 7
  %37 = bitcast %"class.std::__1::unique_ptr.16"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 8
  %39 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %40 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #12
  %41 = icmp ugt i64 %40, -17
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %43) #13
  unreachable

44:                                               ; preds = %33
  %45 = icmp ult i64 %40, 23
  br i1 %45, label %55, label %46

46:                                               ; preds = %44
  %47 = add nuw i64 %40, 16
  %48 = and i64 %47, -16
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = or i64 %48, -9223372036854775808
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %53, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %60

55:                                               ; preds = %44
  %56 = trunc i64 %40 to i8
  %57 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 %56, i8* %58, align 1
  %59 = icmp eq i64 %40, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %55, %46
  %61 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %57, %55 ], [ %54, %46 ]
  %62 = phi i8* [ %39, %55 ], [ %49, %46 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %40, i1 false) #12
  br label %63

63:                                               ; preds = %55, %60
  %64 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %57, %55 ], [ %61, %60 ]
  %65 = phi i8* [ %39, %55 ], [ %62, %60 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 %40
  store i8 0, i8* %66, align 1
  call void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::Jid"* %38, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %63, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  %74 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 9
  %75 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #12
  %76 = icmp ugt i64 %75, -17
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = bitcast %"class.std::__1::basic_string"* %74 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %78) #13
  unreachable

79:                                               ; preds = %73
  %80 = icmp ult i64 %75, 23
  br i1 %80, label %89, label %81

81:                                               ; preds = %79
  %82 = add nuw i64 %75, 16
  %83 = and i64 %82, -16
  %84 = call i8* @_Znwm(i64 %83) #14
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %84, i8** %85, align 8
  %86 = or i64 %83, -9223372036854775808
  %87 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %75, i64* %88, align 8
  br label %95

89:                                               ; preds = %79
  %90 = trunc i64 %75 to i8
  %91 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  store i8 %90, i8* %92, align 1
  %93 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %94 = icmp eq i64 %75, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %89, %81
  %96 = phi i8* [ %84, %81 ], [ %93, %89 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %75, i1 false) #12
  br label %97

97:                                               ; preds = %89, %95
  %98 = phi i8* [ %93, %89 ], [ %96, %95 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %75
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 10
  %101 = call i8* @_Znwm(i64 24) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 24, i1 false) #12
  %102 = ptrtoint i8* %101 to i64
  %103 = bitcast %"class.std::__1::unique_ptr.22"* %100 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 11
  %105 = bitcast %"class.std::__1::unique_ptr.67"* %104 to i64*
  store i64 0, i64* %105, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp13XmppLoginTaskD2Ev(%"class.jingle_xmpp::XmppLoginTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 1
  %5 = bitcast %"class.jingle_xmpp::XmlElement"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.25"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %10, label %64

10:                                               ; preds = %78, %1
  %11 = phi %"class.std::__1::vector.25"* [ %3, %1 ], [ %79, %78 ]
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %13 = load %"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::SaslMechanism"** %12, align 8
  store %"class.jingle_xmpp::SaslMechanism"* null, %"class.jingle_xmpp::SaslMechanism"** %12, align 8
  %14 = icmp eq %"class.jingle_xmpp::SaslMechanism"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.jingle_xmpp::SaslMechanism"* %13 to void (%"class.jingle_xmpp::SaslMechanism"*)***
  %17 = load void (%"class.jingle_xmpp::SaslMechanism"*)**, void (%"class.jingle_xmpp::SaslMechanism"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.jingle_xmpp::SaslMechanism"*)*, void (%"class.jingle_xmpp::SaslMechanism"*)** %17, i64 1
  %19 = load void (%"class.jingle_xmpp::SaslMechanism"*)*, void (%"class.jingle_xmpp::SaslMechanism"*)** %18, align 8
  tail call void %19(%"class.jingle_xmpp::SaslMechanism"* nonnull %13) #12
  %20 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %2, align 8
  br label %21

21:                                               ; preds = %10, %15
  %22 = phi %"class.std::__1::vector.25"* [ %11, %10 ], [ %20, %15 ]
  store %"class.std::__1::vector.25"* null, %"class.std::__1::vector.25"** %2, align 8
  %23 = icmp eq %"class.std::__1::vector.25"* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %22, i64 0, i32 0, i32 0
  %26 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %25, align 8
  %27 = icmp eq %"class.jingle_xmpp::XmlElement"** %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"class.jingle_xmpp::XmlElement"** %26 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %22, i64 0, i32 0, i32 1
  %31 = bitcast %"class.jingle_xmpp::XmlElement"*** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"class.jingle_xmpp::XmlElement"** %26 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %28, %24
  %34 = bitcast %"class.std::__1::vector.25"* %22 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %21, %33
  %36 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 9
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %35, %41
  %45 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 8
  tail call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* %45) #12
  %46 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %47 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %46, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %46, align 8
  %48 = icmp eq %"class.jingle_xmpp::XmlElement"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.jingle_xmpp::XmlElement"* %47 to void (%"class.jingle_xmpp::XmlElement"*)***
  %51 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %51, i64 4
  %53 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %52, align 8
  tail call void %53(%"class.jingle_xmpp::XmlElement"* nonnull %47) #12
  br label %54

54:                                               ; preds = %44, %49
  %55 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 6
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %54, %60
  ret void

64:                                               ; preds = %1, %78
  %65 = phi %"class.std::__1::vector.25"* [ %79, %78 ], [ %3, %1 ]
  %66 = phi i64 [ %80, %78 ], [ 0, %1 ]
  %67 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %65, i64 0, i32 0, i32 0
  %68 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %67, align 8
  %69 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %68, i64 %66
  %70 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %69, align 8
  %71 = icmp eq %"class.jingle_xmpp::XmlElement"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %64
  %73 = bitcast %"class.jingle_xmpp::XmlElement"* %70 to void (%"class.jingle_xmpp::XmlElement"*)***
  %74 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %74, i64 4
  %76 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %75, align 8
  tail call void %76(%"class.jingle_xmpp::XmlElement"* nonnull %70) #12
  %77 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %2, align 8
  br label %78

78:                                               ; preds = %64, %72
  %79 = phi %"class.std::__1::vector.25"* [ %65, %64 ], [ %77, %72 ]
  %80 = add nuw i64 %66, 1
  %81 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %79, i64 0, i32 0, i32 1
  %82 = bitcast %"class.jingle_xmpp::XmlElement"*** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.25"* %79 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ult i64 %80, %87
  br i1 %88, label %64, label %10
}

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp13XmppLoginTask14IncomingStanzaEPKNS_10XmlElementEb(%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmlElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 4
  store %"class.jingle_xmpp::XmlElement"* %1, %"class.jingle_xmpp::XmlElement"** %5, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 5
  store i8 %4, i8* %6, align 8
  %7 = tail call zeroext i1 @_ZN11jingle_xmpp13XmppLoginTask7AdvanceEv(%"class.jingle_xmpp::XmppLoginTask"* %0)
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %5, align 8
  store i8 0, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11jingle_xmpp13XmppLoginTask7AdvanceEv(%"class.jingle_xmpp::XmppLoginTask"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.jingle_xmpp::QName", align 8
  %3 = alloca %"class.jingle_xmpp::QName", align 8
  %4 = alloca %"class.jingle_xmpp::XmlElement", align 8
  %5 = alloca %"class.jingle_xmpp::QName", align 8
  %6 = alloca %"class.jingle_xmpp::QName", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.jingle_xmpp::QName", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.jingle_xmpp::QName", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.jingle_xmpp::QName", align 8
  %15 = alloca %"class.jingle_xmpp::QName", align 8
  %16 = alloca %"class.jingle_xmpp::XmlElement", align 8
  %17 = alloca %"class.jingle_xmpp::QName", align 8
  %18 = alloca %"class.jingle_xmpp::QName", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.jingle_xmpp::QName", align 8
  %22 = alloca %"class.jingle_xmpp::QName", align 8
  %23 = alloca %"class.jingle_xmpp::QName", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.jingle_xmpp::Jid", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.jingle_xmpp::QName", align 8
  %31 = alloca %"class.jingle_xmpp::XmlElement", align 8
  %32 = alloca %"class.jingle_xmpp::QName", align 8
  %33 = alloca %"class.jingle_xmpp::QName", align 8
  %34 = alloca %"class.std::__1::basic_string", align 8
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.jingle_xmpp::QName", align 8
  %37 = alloca %"class.jingle_xmpp::QName", align 8
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = alloca %"class.std::__1::basic_string", align 8
  %42 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 4
  %44 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %45 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 6
  %46 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.jingle_xmpp::Jid"* %28 to i8*
  %71 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %72 = bitcast %"class.jingle_xmpp::QName"* %30 to i8*
  %73 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 8
  %74 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.jingle_xmpp::XmlElement"* %31 to i8*
  %78 = bitcast %"class.jingle_xmpp::QName"* %32 to i8*
  %79 = bitcast %"class.jingle_xmpp::QName"* %33 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %81 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds i8, i8* %80, i64 3
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %86 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 0
  %87 = bitcast %"class.jingle_xmpp::QName"* %36 to i8*
  %88 = bitcast %"class.jingle_xmpp::QName"* %37 to i8*
  %89 = bitcast %"class.jingle_xmpp::QName"* %14 to i8*
  %90 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %91 = bitcast %"class.jingle_xmpp::QName"* %15 to i8*
  %92 = bitcast %"class.jingle_xmpp::XmlElement"* %16 to i8*
  %93 = bitcast %"class.jingle_xmpp::QName"* %17 to i8*
  %94 = bitcast %"class.jingle_xmpp::QName"* %18 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %96 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds i8, i8* %95, i64 3
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %101 = bitcast %"class.jingle_xmpp::QName"* %21 to i8*
  %102 = bitcast %"class.jingle_xmpp::QName"* %22 to i8*
  %103 = bitcast %"class.jingle_xmpp::QName"* %23 to i8*
  %104 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %106 = bitcast %"class.jingle_xmpp::QName"* %6 to i8*
  %107 = bitcast %"class.std::__1::vector"* %7 to i8*
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = bitcast %"class.std::__1::basic_string"** %109 to i64*
  %117 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 2
  %123 = bitcast %"class.jingle_xmpp::QName"* %10 to i8*
  %124 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %125 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = bitcast %"class.std::__1::basic_string"* %11 to i32*
  %128 = getelementptr inbounds i8, i8* %124, i64 4
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.jingle_xmpp::QName"* %12 to i8*
  %131 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %132 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = bitcast %"class.std::__1::basic_string"* %13 to i32*
  %135 = getelementptr inbounds i8, i8* %131, i64 4
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = bitcast %"class.std::__1::vector"* %7 to i8**
  %138 = bitcast %"class.jingle_xmpp::QName"* %3 to i8*
  %139 = bitcast %"class.jingle_xmpp::XmlElement"* %4 to i8*
  %140 = bitcast %"class.jingle_xmpp::QName"* %5 to i8*
  %141 = bitcast %"class.jingle_xmpp::XmlElement"** %90 to i8**
  %142 = bitcast %"class.jingle_xmpp::QName"* %2 to i8*
  %143 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %144

144:                                              ; preds = %790, %1
  %145 = load i32, i32* %42, align 4
  switch i32 %145, label %790 [
    i32 0, label %146
    i32 1, label %159
    i32 2, label %171
    i32 3, label %211
    i32 6, label %219
    i32 4, label %233
    i32 7, label %357
    i32 5, label %403
    i32 8, label %453
    i32 9, label %612
    i32 10, label %798
  ]

146:                                              ; preds = %144
  %147 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %148 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %147, i64 0, i32 19
  store i8 1, i8* %148, align 8
  %149 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %90, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %90, align 8
  %150 = icmp eq %"class.jingle_xmpp::XmlElement"* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %146
  %152 = bitcast %"class.jingle_xmpp::XmlElement"* %149 to void (%"class.jingle_xmpp::XmlElement"*)***
  %153 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %153, i64 4
  %155 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %154, align 8
  call void %155(%"class.jingle_xmpp::XmlElement"* nonnull %149) #12
  br label %156

156:                                              ; preds = %146, %151
  %157 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %158 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %157, i64 0, i32 4, i32 1
  call void @_ZN11jingle_xmpp14XmppEngineImpl17InternalSendStartERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"* %157, %"class.std::__1::basic_string"* dereferenceable(24) %158) #12
  store i32 1, i32* %42, align 4
  br label %790

159:                                              ; preds = %144
  %160 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %43, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %43, align 8
  %161 = icmp eq %"class.jingle_xmpp::XmlElement"* %160, null
  br i1 %161, label %798, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 5
  %164 = load i8, i8* %163, align 8, !range !2
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %162
  %167 = call zeroext i1 @_ZN11jingle_xmpp13XmppLoginTask17HandleStartStreamEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppLoginTask"* %0, %"class.jingle_xmpp::XmlElement"* nonnull %160)
  br i1 %167, label %170, label %168

168:                                              ; preds = %162, %166
  store i32 10, i32* %42, align 4
  %169 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %169, i32 3, i32 0) #12
  br label %798

170:                                              ; preds = %166
  store i32 2, i32* %42, align 4
  br label %798

171:                                              ; preds = %144
  %172 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %43, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %43, align 8
  %173 = icmp eq %"class.jingle_xmpp::XmlElement"* %172, null
  br i1 %173, label %798, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %172, i64 0, i32 1
  %176 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %175, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp18QN_STREAM_FEATURESE) #12
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %188

178:                                              ; preds = %174
  %179 = call i8* @_Znwm(i64 104) #14
  %180 = bitcast i8* %179 to %"class.jingle_xmpp::XmlElement"*
  call void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"* nonnull %180, %"class.jingle_xmpp::XmlElement"* nonnull dereferenceable(104) %172) #12
  %181 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %90, align 8
  store i8* %179, i8** %141, align 8
  %182 = icmp eq %"class.jingle_xmpp::XmlElement"* %181, null
  br i1 %182, label %190, label %183

183:                                              ; preds = %178
  %184 = bitcast %"class.jingle_xmpp::XmlElement"* %181 to void (%"class.jingle_xmpp::XmlElement"*)***
  %185 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %185, i64 4
  %187 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %186, align 8
  call void %187(%"class.jingle_xmpp::XmlElement"* nonnull %181) #12
  br label %190

188:                                              ; preds = %174
  store i32 10, i32* %42, align 4
  %189 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %189, i32 3, i32 0) #12
  br label %798

190:                                              ; preds = %178, %183
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %142) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %2, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp15QN_TLS_STARTTLSE) #12
  %191 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %90, align 8
  %192 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* %191, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %2) #12
  %193 = icmp ne %"class.jingle_xmpp::XmlElement"* %192, null
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %142) #12
  %194 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %195 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %194, i64 0, i32 7
  %196 = load i32, i32* %195, align 8
  %197 = icmp ne i32 %196, 2
  %198 = or i1 %193, %197
  br i1 %198, label %200, label %199

199:                                              ; preds = %190
  store i32 10, i32* %42, align 4
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %194, i32 5, i32 0) #12
  br label %798

200:                                              ; preds = %190
  %201 = add i32 %196, -1
  %202 = icmp ugt i32 %201, 1
  %203 = xor i1 %193, true
  %204 = or i1 %202, %203
  br i1 %204, label %206, label %205

205:                                              ; preds = %200
  store i32 3, i32* %42, align 4
  br label %790

206:                                              ; preds = %200
  %207 = load i8, i8* %104, align 8, !range !2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %206
  store i32 4, i32* %42, align 4
  br label %790

210:                                              ; preds = %206
  store i32 5, i32* %42, align 4
  br label %790

211:                                              ; preds = %144
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %138) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %3, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp15QN_TLS_STARTTLSE) #12
  %212 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %90, align 8
  %213 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* %212, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %3) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %138) #12
  %214 = icmp eq %"class.jingle_xmpp::XmlElement"* %213, null
  br i1 %214, label %215, label %217

215:                                              ; preds = %211
  store i32 10, i32* %42, align 4
  %216 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %216, i32 5, i32 0) #12
  br label %798

217:                                              ; preds = %211
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %139) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 104, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %140) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %5, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp15QN_TLS_STARTTLSE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"* nonnull %4, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %5, i1 zeroext true) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %140) #12
  %218 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %218, %"class.jingle_xmpp::XmlElement"* nonnull %4) #12
  store i32 6, i32* %42, align 4
  call void @_ZN11jingle_xmpp10XmlElementD1Ev(%"class.jingle_xmpp::XmlElement"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %139) #12
  br label %790

219:                                              ; preds = %144
  %220 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %43, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %43, align 8
  %221 = icmp eq %"class.jingle_xmpp::XmlElement"* %220, null
  br i1 %221, label %798, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %220, i64 0, i32 1
  %224 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %223, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp14QN_TLS_PROCEEDE) #12
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %222
  store i32 10, i32* %42, align 4
  %227 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %227, i32 5, i32 0) #12
  br label %798

228:                                              ; preds = %222
  %229 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %230 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %229, i64 0, i32 4, i32 1
  call void @_ZN11jingle_xmpp14XmppEngineImpl8StartTlsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"* %229, %"class.std::__1::basic_string"* dereferenceable(24) %230) #12
  %231 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %232 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %231, i64 0, i32 7
  store i32 1, i32* %232, align 8
  store i32 0, i32* %42, align 4
  br label %790

233:                                              ; preds = %144
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %106) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %6, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp18QN_SASL_MECHANISMSE) #12
  %234 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %90, align 8
  %235 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* %234, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %6) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %106) #12
  %236 = icmp eq %"class.jingle_xmpp::XmlElement"* %235, null
  br i1 %236, label %237, label %239

237:                                              ; preds = %233
  store i32 10, i32* %42, align 4
  %238 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %238, i32 6, i32 0) #12
  br label %798

239:                                              ; preds = %233
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 0, i64 24, i1 false) #12
  %240 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"* nonnull %235, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp17QN_SASL_MECHANISME) #12
  %241 = icmp eq %"class.jingle_xmpp::XmlElement"* %240, null
  br i1 %241, label %242, label %255

242:                                              ; preds = %277, %239
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 24, i1 false)
  %243 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %244 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %243 to i1 (%"class.jingle_xmpp::XmppEngineImpl"*)***
  %245 = load i1 (%"class.jingle_xmpp::XmppEngineImpl"*)**, i1 (%"class.jingle_xmpp::XmppEngineImpl"*)*** %244, align 8
  %246 = getelementptr inbounds i1 (%"class.jingle_xmpp::XmppEngineImpl"*)*, i1 (%"class.jingle_xmpp::XmppEngineImpl"*)** %245, i64 17
  %247 = load i1 (%"class.jingle_xmpp::XmppEngineImpl"*)*, i1 (%"class.jingle_xmpp::XmppEngineImpl"*)** %246, align 8
  %248 = call zeroext i1 %247(%"class.jingle_xmpp::XmppEngineImpl"* %243) #12
  call void @_ZN11jingle_xmpp14XmppEngineImpl23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.std::__1::basic_string"* nonnull sret %9, %"class.jingle_xmpp::XmppEngineImpl"* %243, %"class.std::__1::vector"* nonnull dereferenceable(24) %7, i1 zeroext %248) #12
  %249 = load i8, i8* %121, align 1
  %250 = icmp slt i8 %249, 0
  %251 = load i64, i64* %119, align 8
  %252 = zext i8 %249 to i64
  %253 = select i1 %250, i64 %251, i64 %252
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %280, label %282

255:                                              ; preds = %239, %277
  %256 = phi %"class.jingle_xmpp::XmlElement"* [ %278, %277 ], [ %240, %239 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #12
  call void @_ZNK11jingle_xmpp10XmlElement8BodyTextEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.jingle_xmpp::XmlElement"* nonnull %256) #12
  %257 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %109, align 8
  %258 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %110, align 8
  %259 = icmp eq %"class.std::__1::basic_string"* %257, %258
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = load i8, i8* %113, align 1
  %262 = icmp slt i8 %261, 0
  br i1 %262, label %265, label %263

263:                                              ; preds = %260
  %264 = bitcast %"class.std::__1::basic_string"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* nonnull align 8 %111, i64 24, i1 false) #12
  br label %268

265:                                              ; preds = %260
  %266 = load i8*, i8** %114, align 8
  %267 = load i64, i64* %115, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %257, i8* %266, i64 %267) #12
  br label %268

268:                                              ; preds = %265, %263
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %257, i64 1
  %270 = ptrtoint %"class.std::__1::basic_string"* %269 to i64
  store i64 %270, i64* %116, align 8
  br label %272

271:                                              ; preds = %255
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  br label %272

272:                                              ; preds = %268, %271
  %273 = load i8, i8* %113, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %272
  %276 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %276) #14
  br label %277

277:                                              ; preds = %272, %275
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #12
  %278 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement9NextNamedERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"* nonnull %256, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp17QN_SASL_MECHANISME) #12
  %279 = icmp eq %"class.jingle_xmpp::XmlElement"* %278, null
  br i1 %279, label %242, label %255

280:                                              ; preds = %242
  store i32 10, i32* %42, align 4
  %281 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %281, i32 6, i32 0) #12
  br label %327

282:                                              ; preds = %242
  %283 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %284 = call %"class.jingle_xmpp::SaslMechanism"* @_ZN11jingle_xmpp14XmppEngineImpl16GetSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"* %283, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #12
  %285 = load %"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::SaslMechanism"** %105, align 8
  store %"class.jingle_xmpp::SaslMechanism"* %284, %"class.jingle_xmpp::SaslMechanism"** %105, align 8
  %286 = icmp eq %"class.jingle_xmpp::SaslMechanism"* %285, null
  br i1 %286, label %293, label %287

287:                                              ; preds = %282
  %288 = bitcast %"class.jingle_xmpp::SaslMechanism"* %285 to void (%"class.jingle_xmpp::SaslMechanism"*)***
  %289 = load void (%"class.jingle_xmpp::SaslMechanism"*)**, void (%"class.jingle_xmpp::SaslMechanism"*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.jingle_xmpp::SaslMechanism"*)*, void (%"class.jingle_xmpp::SaslMechanism"*)** %289, i64 1
  %291 = load void (%"class.jingle_xmpp::SaslMechanism"*)*, void (%"class.jingle_xmpp::SaslMechanism"*)** %290, align 8
  call void %291(%"class.jingle_xmpp::SaslMechanism"* nonnull %285) #12
  %292 = load %"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::SaslMechanism"** %105, align 8
  br label %293

293:                                              ; preds = %282, %287
  %294 = phi %"class.jingle_xmpp::SaslMechanism"* [ %284, %282 ], [ %292, %287 ]
  %295 = icmp eq %"class.jingle_xmpp::SaslMechanism"* %294, null
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  store i32 10, i32* %42, align 4
  %297 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %297, i32 6, i32 0) #12
  br label %327

298:                                              ; preds = %293
  %299 = bitcast %"class.jingle_xmpp::SaslMechanism"* %294 to %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*)***
  %300 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*)**, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*)*** %299, align 8
  %301 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*)** %300, i64 3
  %302 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*)** %301, align 8
  %303 = call %"class.jingle_xmpp::XmlElement"* %302(%"class.jingle_xmpp::SaslMechanism"* nonnull %294) #12
  %304 = icmp eq %"class.jingle_xmpp::XmlElement"* %303, null
  br i1 %304, label %305, label %307

305:                                              ; preds = %298
  store i32 10, i32* %42, align 4
  %306 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %306, i32 6, i32 0) #12
  br label %327

307:                                              ; preds = %298
  %308 = load i8, i8* %122, align 1, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %321, label %310

310:                                              ; preds = %307
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %123) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %10, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp40QN_GOOGLE_ALLOW_NON_GOOGLE_ID_XMPP_LOGINE) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #12
  store i8 4, i8* %126, align 1
  store i32 1702195828, i32* %127, align 8
  store i8 0, i8* %128, align 4
  call void @_ZN11jingle_xmpp10XmlElement7SetAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %303, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #12
  %311 = load i8, i8* %126, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %310
  %314 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %314) #14
  br label %315

315:                                              ; preds = %310, %313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %123) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %130) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %12, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp43QN_GOOGLE_AUTH_CLIENT_USES_FULL_BIND_RESULTE) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12
  store i8 4, i8* %133, align 1
  store i32 1702195828, i32* %134, align 8
  store i8 0, i8* %135, align 4
  call void @_ZN11jingle_xmpp10XmlElement7SetAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %303, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #12
  %316 = load i8, i8* %133, align 1
  %317 = icmp slt i8 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %315
  %319 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %319) #14
  br label %320

320:                                              ; preds = %315, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %130) #12
  br label %321

321:                                              ; preds = %307, %320
  %322 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %322, %"class.jingle_xmpp::XmlElement"* nonnull %303) #12
  %323 = bitcast %"class.jingle_xmpp::XmlElement"* %303 to void (%"class.jingle_xmpp::XmlElement"*)***
  %324 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %324, i64 4
  %326 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %325, align 8
  call void %326(%"class.jingle_xmpp::XmlElement"* nonnull %303) #12
  store i32 7, i32* %42, align 4
  br label %327

327:                                              ; preds = %305, %321, %296, %280
  %328 = phi i32 [ 1, %280 ], [ 1, %296 ], [ 1, %305 ], [ 3, %321 ]
  %329 = load i8, i8* %121, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %333

331:                                              ; preds = %327
  %332 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %332) #14
  br label %333

333:                                              ; preds = %327, %331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  %334 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %108, align 8
  %335 = icmp eq %"class.std::__1::basic_string"* %334, null
  br i1 %335, label %356, label %336

336:                                              ; preds = %333
  %337 = bitcast %"class.std::__1::basic_string"* %334 to i8*
  %338 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %109, align 8
  %339 = icmp eq %"class.std::__1::basic_string"* %338, %334
  br i1 %339, label %354, label %340

340:                                              ; preds = %336, %350
  %341 = phi %"class.std::__1::basic_string"* [ %342, %350 ], [ %338, %336 ]
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %341, i64 -1
  %343 = bitcast %"class.std::__1::basic_string"* %342 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %344 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %343, i64 0, i32 1, i32 0
  %345 = load i8, i8* %344, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %340
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %342, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load i8*, i8** %348, align 8
  call void @_ZdlPv(i8* %349) #14
  br label %350

350:                                              ; preds = %347, %340
  %351 = icmp eq %"class.std::__1::basic_string"* %342, %334
  br i1 %351, label %352, label %340

352:                                              ; preds = %350
  %353 = load i8*, i8** %137, align 8
  br label %354

354:                                              ; preds = %352, %336
  %355 = phi i8* [ %353, %352 ], [ %337, %336 ]
  store %"class.std::__1::basic_string"* %334, %"class.std::__1::basic_string"** %109, align 8
  call void @_ZdlPv(i8* %355) #14
  br label %356

356:                                              ; preds = %333, %354
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #12
  br label %790

357:                                              ; preds = %144
  %358 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %43, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %43, align 8
  %359 = icmp eq %"class.jingle_xmpp::XmlElement"* %358, null
  br i1 %359, label %798, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %358, i64 0, i32 1
  %362 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp7NS_SASLE, i64 0, i64 0)) #12
  %363 = bitcast %"class.jingle_xmpp::QName"* %361 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %364 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %363, i64 0, i32 1, i32 0
  %365 = load i8, i8* %364, align 1
  %366 = icmp slt i8 %365, 0
  %367 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %358, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %368 = load i64, i64* %367, align 8
  %369 = zext i8 %365 to i64
  %370 = select i1 %366, i64 %368, i64 %369
  %371 = icmp eq i64 %362, %370
  br i1 %371, label %372, label %376

372:                                              ; preds = %360
  %373 = getelementptr inbounds %"class.jingle_xmpp::QName", %"class.jingle_xmpp::QName"* %361, i64 0, i32 0
  %374 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %373, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp7NS_SASLE, i64 0, i64 0), i64 %362) #12
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %378, label %376

376:                                              ; preds = %372, %360
  store i32 10, i32* %42, align 4
  %377 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %377, i32 6, i32 0) #12
  br label %798

378:                                              ; preds = %372
  %379 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %361, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp17QN_SASL_CHALLENGEE) #12
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %397

381:                                              ; preds = %378
  %382 = load %"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::SaslMechanism"** %105, align 8
  %383 = bitcast %"class.jingle_xmpp::SaslMechanism"* %382 to %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)***
  %384 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)**, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)*** %383, align 8
  %385 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)** %384, i64 4
  %386 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)** %385, align 8
  %387 = call %"class.jingle_xmpp::XmlElement"* %386(%"class.jingle_xmpp::SaslMechanism"* %382, %"class.jingle_xmpp::XmlElement"* nonnull %358) #12
  %388 = icmp eq %"class.jingle_xmpp::XmlElement"* %387, null
  br i1 %388, label %389, label %391

389:                                              ; preds = %381
  store i32 10, i32* %42, align 4
  %390 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %390, i32 6, i32 0) #12
  br label %798

391:                                              ; preds = %381
  %392 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %392, %"class.jingle_xmpp::XmlElement"* nonnull %387) #12
  %393 = bitcast %"class.jingle_xmpp::XmlElement"* %387 to void (%"class.jingle_xmpp::XmlElement"*)***
  %394 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %394, i64 4
  %396 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %395, align 8
  call void %396(%"class.jingle_xmpp::XmlElement"* nonnull %387) #12
  store i32 7, i32* %42, align 4
  br label %790

397:                                              ; preds = %378
  %398 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %361, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp15QN_SASL_SUCCESSE) #12
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %402, label %400

400:                                              ; preds = %397
  store i32 10, i32* %42, align 4
  %401 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %401, i32 4, i32 0) #12
  br label %798

402:                                              ; preds = %397
  store i8 0, i8* %104, align 8
  store i32 0, i32* %42, align 4
  br label %790

403:                                              ; preds = %144
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %89) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %14, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp12QN_BIND_BINDE) #12
  %404 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %90, align 8
  %405 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* %404, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %14) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %89) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %91) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %15, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp18QN_SESSION_SESSIONE) #12
  %406 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %90, align 8
  %407 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* %406, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %15) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %91) #12
  %408 = icmp ne %"class.jingle_xmpp::XmlElement"* %405, null
  %409 = icmp ne %"class.jingle_xmpp::XmlElement"* %407, null
  %410 = and i1 %408, %409
  br i1 %410, label %413, label %411

411:                                              ; preds = %403
  store i32 10, i32* %42, align 4
  %412 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %412, i32 7, i32 0) #12
  br label %798

413:                                              ; preds = %403
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %92) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 104, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %93) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %17, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IQE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* nonnull %16, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %17) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %93) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %94) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %18, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  store i8 3, i8* %97, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %95, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #12
  store i8 0, i8* %98, align 1
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %16, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #12
  %414 = load i8, i8* %97, align 1
  %415 = icmp slt i8 %414, 0
  br i1 %415, label %416, label %418

416:                                              ; preds = %413
  %417 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %417) #14
  br label %418

418:                                              ; preds = %413, %416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %94) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #12
  %419 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %420 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %419 to void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)***
  %421 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)*** %420, align 8
  %422 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)** %421, i64 29
  %423 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)** %422, align 8
  call void %423(%"class.std::__1::basic_string"* nonnull sret %20, %"class.jingle_xmpp::XmppEngineImpl"* %419) #12
  %424 = load i8, i8* %50, align 1
  %425 = icmp slt i8 %424, 0
  br i1 %425, label %426, label %428

426:                                              ; preds = %418
  %427 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %427) #14
  br label %428

428:                                              ; preds = %426, %418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %100, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %101) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %21, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #12
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %16, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %21, %"class.std::__1::basic_string"* dereferenceable(24) %45) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %101) #12
  %429 = call i8* @_Znwm(i64 104) #14
  %430 = bitcast i8* %429 to %"class.jingle_xmpp::XmlElement"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %102) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %22, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp12QN_BIND_BINDE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"* nonnull %430, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %22, i1 zeroext true) #12
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"* nonnull %16, %"class.jingle_xmpp::XmlElement"* nonnull %430) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %102) #12
  %431 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %432 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %431, i64 0, i32 6
  %433 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #12
  %434 = bitcast %"class.std::__1::basic_string"* %432 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %435 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %434, i64 0, i32 1, i32 0
  %436 = load i8, i8* %435, align 1
  %437 = icmp slt i8 %436, 0
  %438 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %431, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %439 = load i64, i64* %438, align 8
  %440 = zext i8 %436 to i64
  %441 = select i1 %437, i64 %439, i64 %440
  %442 = icmp eq i64 %433, %441
  br i1 %442, label %443, label %446

443:                                              ; preds = %428
  %444 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %432, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %433) #12
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %451, label %446

446:                                              ; preds = %443, %428
  %447 = call i8* @_Znwm(i64 104) #14
  %448 = bitcast i8* %447 to %"class.jingle_xmpp::XmlElement"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %103) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %23, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp16QN_BIND_RESOURCEE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* nonnull %448, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %23) #12
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_i(%"class.jingle_xmpp::XmlElement"* nonnull %16, %"class.jingle_xmpp::XmlElement"* nonnull %448, i32 1) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %103) #12
  %449 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %450 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %449, i64 0, i32 6
  call void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.jingle_xmpp::XmlElement"* nonnull %16, %"class.std::__1::basic_string"* dereferenceable(24) %450, i32 2) #12
  br label %451

451:                                              ; preds = %443, %446
  %452 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %452, %"class.jingle_xmpp::XmlElement"* nonnull %16) #12
  store i32 8, i32* %42, align 4
  call void @_ZN11jingle_xmpp10XmlElementD1Ev(%"class.jingle_xmpp::XmlElement"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %92) #12
  br label %790

453:                                              ; preds = %144
  %454 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %43, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %43, align 8
  %455 = icmp eq %"class.jingle_xmpp::XmlElement"* %454, null
  br i1 %455, label %798, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %454, i64 0, i32 1
  %458 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %457, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IQE) #12
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %798

460:                                              ; preds = %456
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %24, %"class.jingle_xmpp::XmlElement"* nonnull %454, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #12
  %461 = load i8, i8* %47, align 1
  %462 = icmp slt i8 %461, 0
  %463 = load i64, i64* %48, align 8
  %464 = zext i8 %461 to i64
  %465 = select i1 %462, i64 %463, i64 %464
  %466 = load i8, i8* %50, align 1
  %467 = icmp slt i8 %466, 0
  %468 = load i64, i64* %51, align 8
  %469 = zext i8 %466 to i64
  %470 = select i1 %467, i64 %468, i64 %469
  %471 = icmp eq i64 %465, %470
  br i1 %471, label %472, label %537

472:                                              ; preds = %460
  %473 = load i8*, i8** %52, align 8
  %474 = select i1 %462, i8* %473, i8* %44
  %475 = load i8*, i8** %53, align 8
  %476 = select i1 %467, i8* %475, i8* %54
  %477 = icmp eq i64 %465, 0
  br i1 %462, label %485, label %478

478:                                              ; preds = %472
  br i1 %477, label %501, label %479

479:                                              ; preds = %478
  %480 = ptrtoint i8* %473 to i64
  %481 = trunc i64 %480 to i8
  %482 = load i8, i8* %476, align 1
  %483 = icmp eq i8 %482, %481
  br i1 %483, label %486, label %484

484:                                              ; preds = %479
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br label %798

485:                                              ; preds = %472
  br i1 %477, label %501, label %498

486:                                              ; preds = %479, %493
  %487 = phi i64 [ %490, %493 ], [ %464, %479 ]
  %488 = phi i8* [ %491, %493 ], [ %44, %479 ]
  %489 = phi i8* [ %494, %493 ], [ %476, %479 ]
  %490 = add i64 %487, -1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = icmp eq i64 %490, 0
  br i1 %492, label %501, label %493

493:                                              ; preds = %486
  %494 = getelementptr inbounds i8, i8* %489, i64 1
  %495 = load i8, i8* %491, align 1
  %496 = load i8, i8* %494, align 1
  %497 = icmp eq i8 %495, %496
  br i1 %497, label %486, label %537

498:                                              ; preds = %485
  %499 = call i32 @bcmp(i8* %474, i8* %476, i64 %465) #12
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %793

501:                                              ; preds = %486, %498, %478, %485
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %25, %"class.jingle_xmpp::XmlElement"* nonnull %454, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  %502 = load i8, i8* %57, align 1
  %503 = icmp slt i8 %502, 0
  %504 = load i64, i64* %58, align 8
  %505 = zext i8 %502 to i64
  %506 = select i1 %503, i64 %504, i64 %505
  %507 = icmp eq i64 %506, 3
  br i1 %507, label %508, label %511

508:                                              ; preds = %501
  %509 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %25, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #12
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %529, label %511

511:                                              ; preds = %501, %508
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %26, %"class.jingle_xmpp::XmlElement"* nonnull %454, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  %512 = load i8, i8* %61, align 1
  %513 = icmp slt i8 %512, 0
  %514 = load i64, i64* %62, align 8
  %515 = zext i8 %512 to i64
  %516 = select i1 %513, i64 %514, i64 %515
  %517 = icmp eq i64 %516, 3
  br i1 %517, label %518, label %522

518:                                              ; preds = %511
  %519 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %26, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #12
  %520 = icmp eq i32 %519, 0
  %521 = load i8, i8* %61, align 1
  br label %522

522:                                              ; preds = %511, %518
  %523 = phi i8 [ %521, %518 ], [ %512, %511 ]
  %524 = phi i1 [ %520, %518 ], [ false, %511 ]
  %525 = icmp slt i8 %523, 0
  br i1 %525, label %526, label %528

526:                                              ; preds = %522
  %527 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %527) #14
  br label %528

528:                                              ; preds = %526, %522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  br label %529

529:                                              ; preds = %508, %528
  %530 = phi i1 [ %524, %528 ], [ true, %508 ]
  %531 = load i8, i8* %57, align 1
  %532 = icmp slt i8 %531, 0
  br i1 %532, label %533, label %535

533:                                              ; preds = %529
  %534 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %534) #14
  br label %535

535:                                              ; preds = %533, %529
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  %536 = load i8, i8* %47, align 1
  br label %537

537:                                              ; preds = %493, %460, %535
  %538 = phi i8 [ %536, %535 ], [ %461, %460 ], [ %461, %493 ]
  %539 = phi i1 [ %530, %535 ], [ true, %460 ], [ true, %493 ]
  %540 = icmp slt i8 %538, 0
  br i1 %540, label %541, label %543

541:                                              ; preds = %537
  %542 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %542) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br i1 %539, label %798, label %544

543:                                              ; preds = %537
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br i1 %539, label %798, label %544

544:                                              ; preds = %541, %543
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %27, %"class.jingle_xmpp::XmlElement"* nonnull %454, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  %545 = load i8, i8* %67, align 1
  %546 = icmp slt i8 %545, 0
  %547 = load i64, i64* %68, align 8
  %548 = zext i8 %545 to i64
  %549 = select i1 %546, i64 %547, i64 %548
  %550 = icmp eq i64 %549, 6
  br i1 %550, label %551, label %574

551:                                              ; preds = %544
  %552 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %27, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #12
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %556, label %554

554:                                              ; preds = %551
  %555 = load i8, i8* %67, align 1
  br label %574

556:                                              ; preds = %551
  %557 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement12FirstElementEv(%"class.jingle_xmpp::XmlElement"* nonnull %454) #12
  %558 = icmp eq %"class.jingle_xmpp::XmlElement"* %557, null
  br i1 %558, label %569, label %559

559:                                              ; preds = %556
  %560 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement12FirstElementEv(%"class.jingle_xmpp::XmlElement"* nonnull %454) #12
  %561 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %560, i64 0, i32 1
  %562 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %561, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp12QN_BIND_BINDE) #12
  %563 = icmp eq i32 %562, 0
  %564 = load i8, i8* %67, align 1
  %565 = icmp slt i8 %564, 0
  br i1 %565, label %566, label %568

566:                                              ; preds = %559
  %567 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %567) #14
  br label %568

568:                                              ; preds = %559, %566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  br i1 %563, label %582, label %580

569:                                              ; preds = %556
  %570 = load i8, i8* %67, align 1
  %571 = icmp slt i8 %570, 0
  br i1 %571, label %572, label %579

572:                                              ; preds = %569
  %573 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %573) #14
  br label %579

574:                                              ; preds = %544, %554
  %575 = phi i8 [ %555, %554 ], [ %545, %544 ]
  %576 = icmp slt i8 %575, 0
  br i1 %576, label %577, label %579

577:                                              ; preds = %574
  %578 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %578) #14
  br label %579

579:                                              ; preds = %577, %574, %572, %569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  br label %580

580:                                              ; preds = %568, %579
  store i32 10, i32* %42, align 4
  %581 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %581, i32 7, i32 0) #12
  br label %798

582:                                              ; preds = %568
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %70) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %583 = call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement12FirstElementEv(%"class.jingle_xmpp::XmlElement"* nonnull %454) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %72) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %30, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp11QN_BIND_JIDE) #12
  call void @_ZNK11jingle_xmpp10XmlElement9TextNamedERKNS_5QNameE(%"class.std::__1::basic_string"* nonnull sret %29, %"class.jingle_xmpp::XmlElement"* %583, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %30) #12
  call void @_ZN11jingle_xmpp3JidC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::Jid"* nonnull %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29) #12
  %584 = call dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZN11jingle_xmpp3JidaSERKS0_(%"class.jingle_xmpp::Jid"* %73, %"class.jingle_xmpp::Jid"* nonnull dereferenceable(72) %28)
  call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* nonnull %28) #12
  %585 = load i8, i8* %75, align 1
  %586 = icmp slt i8 %585, 0
  br i1 %586, label %587, label %589

587:                                              ; preds = %582
  %588 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %588) #14
  br label %589

589:                                              ; preds = %582, %587
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %72) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %70) #12
  %590 = call zeroext i1 @_ZNK11jingle_xmpp3Jid6IsFullEv(%"class.jingle_xmpp::Jid"* %73) #12
  br i1 %590, label %593, label %591

591:                                              ; preds = %589
  store i32 10, i32* %42, align 4
  %592 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %592, i32 7, i32 0) #12
  br label %798

593:                                              ; preds = %589
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %77) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 104, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %78) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %32, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IQE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* nonnull %31, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %32) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %78) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %79) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %33, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #12
  store i8 3, i8* %82, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #12
  store i8 0, i8* %83, align 1
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %31, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %34) #12
  %594 = load i8, i8* %82, align 1
  %595 = icmp slt i8 %594, 0
  br i1 %595, label %596, label %598

596:                                              ; preds = %593
  %597 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %597) #14
  br label %598

598:                                              ; preds = %593, %596
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %79) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %599 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %600 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %599 to void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)***
  %601 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)**, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)*** %600, align 8
  %602 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)** %601, i64 29
  %603 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)** %602, align 8
  call void %603(%"class.std::__1::basic_string"* nonnull sret %35, %"class.jingle_xmpp::XmppEngineImpl"* %599) #12
  %604 = load i8, i8* %50, align 1
  %605 = icmp slt i8 %604, 0
  br i1 %605, label %606, label %608

606:                                              ; preds = %598
  %607 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %607) #14
  br label %608

608:                                              ; preds = %606, %598
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %85, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %87) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %36, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #12
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %31, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %36, %"class.std::__1::basic_string"* dereferenceable(24) %45) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %87) #12
  %609 = call i8* @_Znwm(i64 104) #14
  %610 = bitcast i8* %609 to %"class.jingle_xmpp::XmlElement"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %88) #12
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %37, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp18QN_SESSION_SESSIONE) #12
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"* nonnull %610, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %37, i1 zeroext true) #12
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"* nonnull %31, %"class.jingle_xmpp::XmlElement"* nonnull %610) #12
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %88) #12
  %611 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %611, %"class.jingle_xmpp::XmlElement"* nonnull %31) #12
  store i32 9, i32* %42, align 4
  call void @_ZN11jingle_xmpp10XmlElementD1Ev(%"class.jingle_xmpp::XmlElement"* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %77) #12
  br label %790

612:                                              ; preds = %144
  %613 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %43, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %43, align 8
  %614 = icmp eq %"class.jingle_xmpp::XmlElement"* %613, null
  br i1 %614, label %798, label %615

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %613, i64 0, i32 1
  %617 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %616, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IQE) #12
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %798

619:                                              ; preds = %615
  %620 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %620) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %38, %"class.jingle_xmpp::XmlElement"* nonnull %613, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #12
  %621 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %622 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %621, i64 0, i32 1, i32 0
  %623 = load i8, i8* %622, align 1
  %624 = icmp slt i8 %623, 0
  %625 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %626 = load i64, i64* %625, align 8
  %627 = zext i8 %623 to i64
  %628 = select i1 %624, i64 %626, i64 %627
  %629 = load i8, i8* %50, align 1
  %630 = icmp slt i8 %629, 0
  %631 = load i64, i64* %51, align 8
  %632 = zext i8 %629 to i64
  %633 = select i1 %630, i64 %631, i64 %632
  %634 = icmp eq i64 %628, %633
  br i1 %634, label %635, label %711

635:                                              ; preds = %619
  %636 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %637 = load i8*, i8** %636, align 8
  %638 = select i1 %624, i8* %637, i8* %620
  %639 = load i8*, i8** %53, align 8
  %640 = select i1 %630, i8* %639, i8* %54
  %641 = icmp eq i64 %628, 0
  br i1 %624, label %649, label %642

642:                                              ; preds = %635
  br i1 %641, label %665, label %643

643:                                              ; preds = %642
  %644 = ptrtoint i8* %637 to i64
  %645 = trunc i64 %644 to i8
  %646 = load i8, i8* %640, align 1
  %647 = icmp eq i8 %646, %645
  br i1 %647, label %650, label %648

648:                                              ; preds = %643
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %620) #12
  br label %798

649:                                              ; preds = %635
  br i1 %641, label %665, label %662

650:                                              ; preds = %643, %657
  %651 = phi i64 [ %654, %657 ], [ %627, %643 ]
  %652 = phi i8* [ %655, %657 ], [ %620, %643 ]
  %653 = phi i8* [ %658, %657 ], [ %640, %643 ]
  %654 = add i64 %651, -1
  %655 = getelementptr inbounds i8, i8* %652, i64 1
  %656 = icmp eq i64 %654, 0
  br i1 %656, label %665, label %657

657:                                              ; preds = %650
  %658 = getelementptr inbounds i8, i8* %653, i64 1
  %659 = load i8, i8* %655, align 1
  %660 = load i8, i8* %658, align 1
  %661 = icmp eq i8 %659, %660
  br i1 %661, label %650, label %711

662:                                              ; preds = %649
  %663 = call i32 @bcmp(i8* %638, i8* %640, i64 %628) #12
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %665, label %795

665:                                              ; preds = %650, %662, %642, %649
  %666 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %666) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %39, %"class.jingle_xmpp::XmlElement"* nonnull %613, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  %667 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %668 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %667, i64 0, i32 1, i32 0
  %669 = load i8, i8* %668, align 1
  %670 = icmp slt i8 %669, 0
  %671 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %672 = load i64, i64* %671, align 8
  %673 = zext i8 %669 to i64
  %674 = select i1 %670, i64 %672, i64 %673
  %675 = icmp eq i64 %674, 3
  br i1 %675, label %676, label %679

676:                                              ; preds = %665
  %677 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %39, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #12
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %702, label %679

679:                                              ; preds = %665, %676
  %680 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %680) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %40, %"class.jingle_xmpp::XmlElement"* nonnull %613, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  %681 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %682 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %681, i64 0, i32 1, i32 0
  %683 = load i8, i8* %682, align 1
  %684 = icmp slt i8 %683, 0
  %685 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %686 = load i64, i64* %685, align 8
  %687 = zext i8 %683 to i64
  %688 = select i1 %684, i64 %686, i64 %687
  %689 = icmp eq i64 %688, 3
  br i1 %689, label %690, label %694

690:                                              ; preds = %679
  %691 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %40, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #12
  %692 = icmp eq i32 %691, 0
  %693 = load i8, i8* %682, align 1
  br label %694

694:                                              ; preds = %679, %690
  %695 = phi i8 [ %693, %690 ], [ %683, %679 ]
  %696 = phi i1 [ %692, %690 ], [ false, %679 ]
  %697 = icmp slt i8 %695, 0
  br i1 %697, label %698, label %701

698:                                              ; preds = %694
  %699 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load i8*, i8** %699, align 8
  call void @_ZdlPv(i8* %700) #14
  br label %701

701:                                              ; preds = %698, %694
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %680) #12
  br label %702

702:                                              ; preds = %676, %701
  %703 = phi i1 [ %696, %701 ], [ true, %676 ]
  %704 = load i8, i8* %668, align 1
  %705 = icmp slt i8 %704, 0
  br i1 %705, label %706, label %709

706:                                              ; preds = %702
  %707 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %708 = load i8*, i8** %707, align 8
  call void @_ZdlPv(i8* %708) #14
  br label %709

709:                                              ; preds = %706, %702
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %666) #12
  %710 = load i8, i8* %622, align 1
  br label %711

711:                                              ; preds = %657, %619, %709
  %712 = phi i8 [ %710, %709 ], [ %623, %619 ], [ %623, %657 ]
  %713 = phi i1 [ %703, %709 ], [ true, %619 ], [ true, %657 ]
  %714 = icmp slt i8 %712, 0
  br i1 %714, label %715, label %718

715:                                              ; preds = %711
  %716 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8
  call void @_ZdlPv(i8* %717) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %620) #12
  br i1 %713, label %798, label %719

718:                                              ; preds = %711
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %620) #12
  br i1 %713, label %798, label %719

719:                                              ; preds = %715, %718
  %720 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %720) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %41, %"class.jingle_xmpp::XmlElement"* nonnull %613, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #12
  %721 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %722 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %721, i64 0, i32 1, i32 0
  %723 = load i8, i8* %722, align 1
  %724 = icmp slt i8 %723, 0
  %725 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %726 = load i64, i64* %725, align 8
  %727 = zext i8 %723 to i64
  %728 = select i1 %724, i64 %726, i64 %727
  %729 = icmp eq i64 %728, 6
  br i1 %729, label %730, label %734

730:                                              ; preds = %719
  %731 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %41, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #12
  %732 = icmp ne i32 %731, 0
  %733 = load i8, i8* %722, align 1
  br label %734

734:                                              ; preds = %719, %730
  %735 = phi i8 [ %733, %730 ], [ %723, %719 ]
  %736 = phi i1 [ %732, %730 ], [ true, %719 ]
  %737 = icmp slt i8 %735, 0
  br i1 %737, label %738, label %741

738:                                              ; preds = %734
  %739 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %740 = load i8*, i8** %739, align 8
  call void @_ZdlPv(i8* %740) #14
  br label %741

741:                                              ; preds = %734, %738
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %720) #12
  br i1 %736, label %742, label %744

742:                                              ; preds = %741
  store i32 10, i32* %42, align 4
  %743 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %743, i32 7, i32 0) #12
  br label %798

744:                                              ; preds = %741
  %745 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalBoundERKNS_3JidE(%"class.jingle_xmpp::XmppEngineImpl"* %745, %"class.jingle_xmpp::Jid"* dereferenceable(72) %73) #12
  %746 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %747 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %746, align 8
  %748 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %747, i64 0, i32 0, i32 1
  %749 = bitcast %"class.jingle_xmpp::XmlElement"*** %748 to i64*
  %750 = load i64, i64* %749, align 8
  %751 = bitcast %"class.std::__1::vector.25"* %747 to i64*
  %752 = load i64, i64* %751, align 8
  %753 = icmp eq i64 %750, %752
  br i1 %753, label %787, label %754

754:                                              ; preds = %744, %774
  %755 = phi %"class.std::__1::vector.25"* [ %775, %774 ], [ %747, %744 ]
  %756 = phi i64 [ %776, %774 ], [ 0, %744 ]
  %757 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %86, align 8
  %758 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %755, i64 0, i32 0, i32 0
  %759 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %758, align 8
  %760 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %759, i64 %756
  %761 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %760, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %757, %"class.jingle_xmpp::XmlElement"* %761) #12
  %762 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %746, align 8
  %763 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %762, i64 0, i32 0, i32 0
  %764 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %763, align 8
  %765 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %764, i64 %756
  %766 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %765, align 8
  %767 = icmp eq %"class.jingle_xmpp::XmlElement"* %766, null
  br i1 %767, label %774, label %768

768:                                              ; preds = %754
  %769 = bitcast %"class.jingle_xmpp::XmlElement"* %766 to void (%"class.jingle_xmpp::XmlElement"*)***
  %770 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %769, align 8
  %771 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %770, i64 4
  %772 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %771, align 8
  call void %772(%"class.jingle_xmpp::XmlElement"* nonnull %766) #12
  %773 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %746, align 8
  br label %774

774:                                              ; preds = %768, %754
  %775 = phi %"class.std::__1::vector.25"* [ %762, %754 ], [ %773, %768 ]
  %776 = add nuw i64 %756, 1
  %777 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %775, i64 0, i32 0, i32 1
  %778 = bitcast %"class.jingle_xmpp::XmlElement"*** %777 to i64*
  %779 = load i64, i64* %778, align 8
  %780 = bitcast %"class.std::__1::vector.25"* %775 to i64*
  %781 = load i64, i64* %780, align 8
  %782 = sub i64 %779, %781
  %783 = ashr exact i64 %782, 3
  %784 = icmp ult i64 %776, %783
  br i1 %784, label %754, label %785

785:                                              ; preds = %774
  %786 = bitcast %"class.jingle_xmpp::XmlElement"*** %777 to i64*
  br label %787

787:                                              ; preds = %785, %744
  %788 = phi i64* [ %749, %744 ], [ %786, %785 ]
  %789 = phi i64 [ %750, %744 ], [ %781, %785 ]
  store i64 %789, i64* %788, align 8
  store i32 10, i32* %42, align 4
  br label %798

790:                                              ; preds = %156, %144, %451, %391, %356, %217, %205, %209, %210, %608, %402, %228
  %791 = phi i32 [ 3, %608 ], [ 3, %402 ], [ 3, %228 ], [ 3, %205 ], [ 3, %209 ], [ 3, %210 ], [ 3, %217 ], [ %328, %356 ], [ 3, %391 ], [ 3, %451 ], [ 0, %144 ], [ 0, %156 ]
  %792 = icmp eq i32 %791, 1
  br i1 %792, label %798, label %144

793:                                              ; preds = %498
  %794 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %794) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br label %798

795:                                              ; preds = %662
  %796 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  call void @_ZdlPv(i8* %797) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %620) #12
  br label %798

798:                                              ; preds = %456, %144, %543, %453, %357, %219, %171, %790, %541, %793, %795, %484, %715, %648, %615, %718, %612, %411, %389, %237, %215, %199, %159, %168, %170, %188, %226, %400, %376, %591, %580, %787, %742
  %799 = phi i1 [ false, %718 ], [ true, %612 ], [ false, %411 ], [ false, %389 ], [ false, %237 ], [ false, %215 ], [ false, %199 ], [ true, %159 ], [ false, %168 ], [ true, %170 ], [ false, %188 ], [ false, %226 ], [ false, %400 ], [ false, %376 ], [ false, %591 ], [ false, %580 ], [ true, %787 ], [ false, %742 ], [ false, %615 ], [ false, %648 ], [ false, %715 ], [ true, %484 ], [ false, %795 ], [ true, %793 ], [ true, %541 ], [ true, %456 ], [ true, %171 ], [ true, %219 ], [ true, %357 ], [ true, %453 ], [ true, %543 ], [ false, %144 ], [ false, %790 ]
  ret i1 %799
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp13XmppLoginTask10NextStanzaEv(%"class.jingle_xmpp::XmppLoginTask"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 4
  %3 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %2, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %2, align 8
  ret %"class.jingle_xmpp::XmlElement"* %3
}

declare void @_ZN11jingle_xmpp14XmppEngineImpl17InternalSendStartERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11jingle_xmpp13XmppLoginTask17HandleStartStreamEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %1, i64 0, i32 1
  %7 = tail call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %6, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp16QN_STREAM_STREAME) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %99

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp8QN_XMLNSE) #12
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %18, 13
  br i1 %19, label %20, label %24

20:                                               ; preds = %9
  %21 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #12
  %22 = icmp ne i32 %21, 0
  %23 = load i8, i8* %12, align 1
  br label %24

24:                                               ; preds = %9, %20
  %25 = phi i8 [ %23, %20 ], [ %13, %9 ]
  %26 = phi i1 [ %22, %20 ], [ true, %9 ]
  %27 = icmp slt i8 %25, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %24, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  br i1 %26, label %99, label %32

32:                                               ; preds = %31
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp10QN_VERSIONE) #12
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp eq i64 %41, 3
  br i1 %42, label %43, label %47

43:                                               ; preds = %32
  %44 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #12
  %45 = icmp ne i32 %44, 0
  %46 = load i8, i8* %35, align 1
  br label %47

47:                                               ; preds = %32, %43
  %48 = phi i8 [ %46, %43 ], [ %36, %32 ]
  %49 = phi i1 [ %45, %43 ], [ true, %32 ]
  %50 = icmp slt i8 %48, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %47, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  br i1 %49, label %99, label %55

55:                                               ; preds = %54
  %56 = call zeroext i1 @_ZNK11jingle_xmpp10XmlElement7HasAttrERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #12
  br i1 %56, label %57, label %99

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #12
  %59 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 9
  %60 = icmp eq %"class.std::__1::basic_string"* %59, %5
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %90

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %67, label %81, label %72

72:                                               ; preds = %63
  br i1 %71, label %75, label %73

73:                                               ; preds = %72
  %74 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %58, i64 24, i1 false) #12
  br label %90

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %59, i8* %77, i64 %79) #12
  br label %90

81:                                               ; preds = %63
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %70 to i64
  %87 = select i1 %71, i8* %83, i8* %58
  %88 = select i1 %71, i64 %85, i64 %86
  %89 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %59, i8* %87, i64 %88) #12
  br label %90

90:                                               ; preds = %61, %73, %75, %81
  %91 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %62, %61 ], [ %68, %73 ], [ %68, %75 ], [ %68, %81 ]
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  br label %99

99:                                               ; preds = %2, %55, %54, %31, %98
  %100 = phi i1 [ true, %98 ], [ false, %2 ], [ false, %31 ], [ false, %54 ], [ false, %55 ]
  ret i1 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11jingle_xmpp13XmppLoginTask7FailureENS_10XmppEngine5ErrorE(%"class.jingle_xmpp::XmppLoginTask"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 3
  store i32 10, i32* %3, align 4
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 0
  %5 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %4, align 8
  tail call void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* %5, i32 %1, i32 0) #12
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11jingle_xmpp13XmppLoginTask14HandleFeaturesEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppLoginTask"* nocapture, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %1, i64 0, i32 1
  %4 = tail call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %3, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp18QN_STREAM_FEATURESE) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 104) #14
  %8 = bitcast i8* %7 to %"class.jingle_xmpp::XmlElement"*
  tail call void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"* nonnull %8, %"class.jingle_xmpp::XmlElement"* dereferenceable(104) %1) #12
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %9, align 8
  %11 = bitcast %"class.jingle_xmpp::XmlElement"** %9 to i8**
  store i8* %7, i8** %11, align 8
  %12 = icmp eq %"class.jingle_xmpp::XmlElement"* %10, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.jingle_xmpp::XmlElement"* %10 to void (%"class.jingle_xmpp::XmlElement"*)***
  %15 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %15, i64 4
  %17 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %16, align 8
  tail call void %17(%"class.jingle_xmpp::XmlElement"* nonnull %10) #12
  br label %18

18:                                               ; preds = %2, %13, %6
  %19 = phi i1 [ false, %2 ], [ true, %6 ], [ true, %13 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp13XmppLoginTask10GetFeatureERKNS_5QNameE(%"class.jingle_xmpp::XmppLoginTask"* nocapture readonly, %"class.jingle_xmpp::QName"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %3, align 8
  %5 = tail call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* %4, %"class.jingle_xmpp::QName"* dereferenceable(48) %1) #12
  ret %"class.jingle_xmpp::XmlElement"* %5
}

declare void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), i1 zeroext) unnamed_addr #2

declare void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp10XmlElementD1Ev(%"class.jingle_xmpp::XmlElement"*) unnamed_addr #4

declare void @_ZN11jingle_xmpp14XmppEngineImpl8StartTlsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK11jingle_xmpp10XmlElement8BodyTextEv(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp14XmppEngineImpl23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::vector"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare %"class.jingle_xmpp::SaslMechanism"* @_ZN11jingle_xmpp14XmppEngineImpl16GetSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement7SetAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48)) unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_i(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"*, i32) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.jingle_xmpp::XmlElement"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK11jingle_xmpp10XmlElement9TextNamedERKNS_5QNameE(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZN11jingle_xmpp3JidaSERKS0_(%"class.jingle_xmpp::Jid"*, %"class.jingle_xmpp::Jid"* dereferenceable(72)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0
  %4 = icmp eq %"class.jingle_xmpp::Jid"* %0, %1
  br i1 %4, label %96, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %17 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #12
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #12
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #12
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %40, label %55, label %45

45:                                               ; preds = %34
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #12
  br label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %51, i64 %53) #12
  br label %65

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %61 = zext i8 %43 to i64
  %62 = select i1 %44, i8* %57, i8* %60
  %63 = select i1 %44, i64 %59, i64 %61
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %62, i64 %63) #12
  br label %65

65:                                               ; preds = %46, %49, %55
  %66 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %67 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %71, label %86, label %76

76:                                               ; preds = %65
  br i1 %75, label %80, label %77

77:                                               ; preds = %76
  %78 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #12
  br label %96

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %82, i64 %84) #12
  br label %96

86:                                               ; preds = %65
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %92 = zext i8 %74 to i64
  %93 = select i1 %75, i8* %88, i8* %91
  %94 = select i1 %75, i64 %90, i64 %92
  %95 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %93, i64 %94) #12
  br label %96

96:                                               ; preds = %2, %77, %80, %86
  ret %"class.jingle_xmpp::Jid"* %0
}

declare zeroext i1 @_ZNK11jingle_xmpp3Jid6IsFullEv(%"class.jingle_xmpp::Jid"*) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp14XmppEngineImpl11SignalBoundERKNS_3JidE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::Jid"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp13XmppLoginTask18FlushQueuedStanzasEv(%"class.jingle_xmpp::XmppLoginTask"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 1
  %5 = bitcast %"class.jingle_xmpp::XmlElement"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.25"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 0
  br label %17

12:                                               ; preds = %37
  %13 = bitcast %"class.jingle_xmpp::XmlElement"*** %40 to i64*
  br label %14

14:                                               ; preds = %12, %1
  %15 = phi i64* [ %5, %1 ], [ %13, %12 ]
  %16 = phi i64 [ %6, %1 ], [ %44, %12 ]
  store i64 %16, i64* %15, align 8
  ret void

17:                                               ; preds = %10, %37
  %18 = phi %"class.std::__1::vector.25"* [ %3, %10 ], [ %38, %37 ]
  %19 = phi i64 [ 0, %10 ], [ %39, %37 ]
  %20 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %11, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %18, i64 0, i32 0, i32 0
  %22 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %21, align 8
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %22, i64 %19
  %24 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %23, align 8
  tail call void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %20, %"class.jingle_xmpp::XmlElement"* %24) #12
  %25 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %2, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %26, align 8
  %28 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %27, i64 %19
  %29 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %28, align 8
  %30 = icmp eq %"class.jingle_xmpp::XmlElement"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %17
  %32 = bitcast %"class.jingle_xmpp::XmlElement"* %29 to void (%"class.jingle_xmpp::XmlElement"*)***
  %33 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %33, i64 4
  %35 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %34, align 8
  tail call void %35(%"class.jingle_xmpp::XmlElement"* nonnull %29) #12
  %36 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %2, align 8
  br label %37

37:                                               ; preds = %17, %31
  %38 = phi %"class.std::__1::vector.25"* [ %25, %17 ], [ %36, %31 ]
  %39 = add nuw i64 %19, 1
  %40 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %38, i64 0, i32 0, i32 1
  %41 = bitcast %"class.jingle_xmpp::XmlElement"*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.25"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %39, %46
  br i1 %47, label %17, label %12
}

declare zeroext i1 @_ZNK11jingle_xmpp10XmlElement7HasAttrERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"* dereferenceable(104)) unnamed_addr #2

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp13XmppLoginTask14OutgoingStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppLoginTask"* nocapture readonly, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 104) #14
  %4 = bitcast i8* %3 to %"class.jingle_xmpp::XmlElement"*
  tail call void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"* nonnull %4, %"class.jingle_xmpp::XmlElement"* dereferenceable(104) %1) #12
  %5 = ptrtoint i8* %3 to i64
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::vector.25"*, %"class.std::__1::vector.25"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %7, i64 0, i32 0, i32 1
  %9 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %10, align 8
  %12 = icmp eq %"class.jingle_xmpp::XmlElement"** %9, %11
  %13 = ptrtoint %"class.jingle_xmpp::XmlElement"** %11 to i64
  br i1 %12, label %19, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.jingle_xmpp::XmlElement"** %9 to i64*
  store i64 %5, i64* %15, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %9, i64 1
  %17 = ptrtoint %"class.jingle_xmpp::XmlElement"** %16 to i64
  %18 = bitcast %"class.jingle_xmpp::XmlElement"*** %8 to i64*
  store i64 %17, i64* %18, align 8
  br label %76

19:                                               ; preds = %2
  %20 = ptrtoint %"class.jingle_xmpp::XmlElement"** %9 to i64
  %21 = bitcast %"class.jingle_xmpp::XmlElement"*** %8 to i64*
  %22 = bitcast %"class.std::__1::vector.25"* %7 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 3
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 2305843009213693951
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector.25"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"class.jingle_xmpp::XmlElement"*** %10 to i64*
  %32 = sub i64 %13, %23
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %33, 1152921504606846975
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 2
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 2305843009213693951
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #13
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 2305843009213693951, %30 ]
  %45 = shl i64 %44, 3
  %46 = tail call i8* @_Znwm(i64 %45) #14
  %47 = bitcast i8* %46 to %"class.jingle_xmpp::XmlElement"**
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi %"class.jingle_xmpp::XmlElement"** [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %50, i64 %25
  %52 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %50, i64 %49
  %53 = ptrtoint %"class.jingle_xmpp::XmlElement"** %52 to i64
  %54 = bitcast %"class.jingle_xmpp::XmlElement"** %51 to i64*
  store i64 %5, i64* %54, align 8
  %55 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %51, i64 1
  %56 = ptrtoint %"class.jingle_xmpp::XmlElement"** %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %7, i64 0, i32 0, i32 0
  %58 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %57, align 8
  %59 = load i64, i64* %21, align 8
  %60 = ptrtoint %"class.jingle_xmpp::XmlElement"** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %51, i64 %63
  %65 = ptrtoint %"class.jingle_xmpp::XmlElement"** %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %48
  %68 = bitcast %"class.jingle_xmpp::XmlElement"** %64 to i8*
  %69 = bitcast %"class.jingle_xmpp::XmlElement"** %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %61, i1 false) #12
  %70 = load %"class.jingle_xmpp::XmlElement"**, %"class.jingle_xmpp::XmlElement"*** %57, align 8
  br label %71

71:                                               ; preds = %67, %48
  %72 = phi %"class.jingle_xmpp::XmlElement"** [ %58, %48 ], [ %70, %67 ]
  store i64 %65, i64* %22, align 8
  store i64 %56, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %73 = icmp eq %"class.jingle_xmpp::XmlElement"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.jingle_xmpp::XmlElement"** %72 to i8*
  tail call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %14, %71, %74
  ret void
}

declare i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement10FirstNamedERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement9NextNamedERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp10XmlElement12FirstElementEv(%"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #12
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #12
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
