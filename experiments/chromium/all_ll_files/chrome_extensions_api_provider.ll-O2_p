; ModuleID = '../../chrome/common/extensions/chrome_extensions_api_provider.cc'
source_filename = "../../chrome/common/extensions/chrome_extensions_api_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ChromeExtensionsAPIProvider" = type { %"class.extensions::ExtensionsAPIProvider" }
%"class.extensions::ExtensionsAPIProvider" = type { i32 (...)** }
%"class.extensions::FeatureProvider" = type opaque
%"class.extensions::JSONFeatureProviderSource" = type { %"class.std::__1::basic_string", %"class.base::DictionaryValue" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::PermissionsInfo" = type { i32 (...)**, %"class.std::__1::unordered_map", %"class.std::__1::map", i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.43", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.extensions::APIPermissionInfo::InitInfo" = type { i32, i8*, i32, {}* }
%"struct.extensions::Alias" = type { i8*, i8* }

@_ZTVN10extensions27ChromeExtensionsAPIProviderE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProviderD2Ev to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProviderD0Ev to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProvider14AddAPIFeaturesEPNS_15FeatureProviderE to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProvider19AddManifestFeaturesEPNS_15FeatureProviderE to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProvider21AddPermissionFeaturesEPNS_15FeatureProviderE to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.extensions::FeatureProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProvider19AddBehaviorFeaturesEPNS_15FeatureProviderE to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.extensions::JSONFeatureProviderSource"*)* @_ZN10extensions27ChromeExtensionsAPIProvider17AddAPIJSONSourcesEPNS_25JSONFeatureProviderSourceE to i8*), i8* bitcast (i1 (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)* @_ZN10extensions27ChromeExtensionsAPIProvider20IsAPISchemaGeneratedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast ({ i8*, i64 } (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.std::__1::basic_string"*)* @_ZN10extensions27ChromeExtensionsAPIProvider12GetAPISchemaERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*, %"class.extensions::PermissionsInfo"*)* @_ZN10extensions27ChromeExtensionsAPIProvider19RegisterPermissionsEPNS_15PermissionsInfoE to i8*), i8* bitcast (void (%"class.extensions::ChromeExtensionsAPIProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProvider24RegisterManifestHandlersEv to i8*)] }, align 8

@_ZN10extensions27ChromeExtensionsAPIProviderC1Ev = hidden unnamed_addr alias void (%"class.extensions::ChromeExtensionsAPIProvider"*), void (%"class.extensions::ChromeExtensionsAPIProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProviderC2Ev
@_ZN10extensions27ChromeExtensionsAPIProviderD1Ev = hidden unnamed_addr alias void (%"class.extensions::ChromeExtensionsAPIProvider"*), void (%"class.extensions::ChromeExtensionsAPIProvider"*)* @_ZN10extensions27ChromeExtensionsAPIProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions27ChromeExtensionsAPIProviderC2Ev(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ChromeExtensionsAPIProvider", %"class.extensions::ChromeExtensionsAPIProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN10extensions27ChromeExtensionsAPIProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProviderD2Ev(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProviderD0Ev(%"class.extensions::ChromeExtensionsAPIProvider"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::ChromeExtensionsAPIProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProvider14AddAPIFeaturesEPNS_15FeatureProviderE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone, %"class.extensions::FeatureProvider"*) unnamed_addr #2 align 2 {
  tail call void @_ZN10extensions20AddChromeAPIFeaturesEPNS_15FeatureProviderE(%"class.extensions::FeatureProvider"* %1) #6
  ret void
}

declare void @_ZN10extensions20AddChromeAPIFeaturesEPNS_15FeatureProviderE(%"class.extensions::FeatureProvider"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProvider19AddManifestFeaturesEPNS_15FeatureProviderE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone, %"class.extensions::FeatureProvider"*) unnamed_addr #2 align 2 {
  tail call void @_ZN10extensions25AddChromeManifestFeaturesEPNS_15FeatureProviderE(%"class.extensions::FeatureProvider"* %1) #6
  ret void
}

declare void @_ZN10extensions25AddChromeManifestFeaturesEPNS_15FeatureProviderE(%"class.extensions::FeatureProvider"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProvider21AddPermissionFeaturesEPNS_15FeatureProviderE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone, %"class.extensions::FeatureProvider"*) unnamed_addr #2 align 2 {
  tail call void @_ZN10extensions27AddChromePermissionFeaturesEPNS_15FeatureProviderE(%"class.extensions::FeatureProvider"* %1) #6
  ret void
}

declare void @_ZN10extensions27AddChromePermissionFeaturesEPNS_15FeatureProviderE(%"class.extensions::FeatureProvider"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProvider19AddBehaviorFeaturesEPNS_15FeatureProviderE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture, %"class.extensions::FeatureProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProvider17AddAPIJSONSourcesEPNS_25JSONFeatureProviderSourceE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone, %"class.extensions::JSONFeatureProviderSource"*) unnamed_addr #2 align 2 {
  tail call void @_ZN10extensions25JSONFeatureProviderSource8LoadJSONEi(%"class.extensions::JSONFeatureProviderSource"* %1, i32 16700) #6
  ret void
}

declare void @_ZN10extensions25JSONFeatureProviderSource8LoadJSONEi(%"class.extensions::JSONFeatureProviderSource"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions27ChromeExtensionsAPIProvider20IsAPISchemaGeneratedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = tail call zeroext i1 @_ZN10extensions3api22ChromeGeneratedSchemas11IsGeneratedEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %10, i64 %14) #6
  ret i1 %15
}

declare zeroext i1 @_ZN10extensions3api22ChromeGeneratedSchemas11IsGeneratedEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN10extensions27ChromeExtensionsAPIProvider12GetAPISchemaERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = tail call { i8*, i64 } @_ZN10extensions3api22ChromeGeneratedSchemas3GetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %10, i64 %14) #6
  ret { i8*, i64 } %15
}

declare { i8*, i64 } @_ZN10extensions3api22ChromeGeneratedSchemas3GetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProvider19RegisterPermissionsEPNS_15PermissionsInfoE(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone, %"class.extensions::PermissionsInfo"*) unnamed_addr #2 align 2 {
  %3 = tail call { i64, %"struct.extensions::APIPermissionInfo::InitInfo"* } @_ZN10extensions22chrome_api_permissions18GetPermissionInfosEv() #6
  %4 = extractvalue { i64, %"struct.extensions::APIPermissionInfo::InitInfo"* } %3, 0
  %5 = extractvalue { i64, %"struct.extensions::APIPermissionInfo::InitInfo"* } %3, 1
  %6 = tail call { i64, %"struct.extensions::Alias"* } @_ZN10extensions22chrome_api_permissions20GetPermissionAliasesEv() #6
  %7 = extractvalue { i64, %"struct.extensions::Alias"* } %6, 0
  %8 = extractvalue { i64, %"struct.extensions::Alias"* } %6, 1
  tail call void @_ZN10extensions15PermissionsInfo19RegisterPermissionsEN4base4spanIKNS_17APIPermissionInfo8InitInfoELm18446744073709551615EEENS2_IKNS_5AliasELm18446744073709551615EEE(%"class.extensions::PermissionsInfo"* %1, i64 %4, %"struct.extensions::APIPermissionInfo::InitInfo"* %5, i64 %7, %"struct.extensions::Alias"* %8) #6
  ret void
}

declare void @_ZN10extensions15PermissionsInfo19RegisterPermissionsEN4base4spanIKNS_17APIPermissionInfo8InitInfoELm18446744073709551615EEENS2_IKNS_5AliasELm18446744073709551615EEE(%"class.extensions::PermissionsInfo"*, i64, %"struct.extensions::APIPermissionInfo::InitInfo"*, i64, %"struct.extensions::Alias"*) local_unnamed_addr #4

declare { i64, %"struct.extensions::APIPermissionInfo::InitInfo"* } @_ZN10extensions22chrome_api_permissions18GetPermissionInfosEv() local_unnamed_addr #4

declare { i64, %"struct.extensions::Alias"* } @_ZN10extensions22chrome_api_permissions20GetPermissionAliasesEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27ChromeExtensionsAPIProvider24RegisterManifestHandlersEv(%"class.extensions::ChromeExtensionsAPIProvider"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @_ZN10extensions30RegisterChromeManifestHandlersEv() #6
  ret void
}

declare void @_ZN10extensions30RegisterChromeManifestHandlersEv() local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
