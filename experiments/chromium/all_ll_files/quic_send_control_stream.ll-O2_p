; ModuleID = '../../net/third_party/quiche/src/quic/core/http/quic_send_control_stream.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/http/quic_send_control_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicSendControlStream" = type { %"class.quic::QuicStream.base", i8, %"struct.quic::SettingsFrame", %"class.quic::QuicSpdySession"* }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.410", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr", i64, %"class.quic::QuicIntervalSet" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.2" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.302", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.348", %"class.absl::flat_hash_map.357", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.175", %"class.std::__1::vector", %"class.absl::optional.404", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.3" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.3" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.5" = type { i64 }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.65", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.39", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.192", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.214", %"class.quiche::QuicheCircularDeque.220", %"class.quiche::QuicheCircularDeque.223", %"class.std::__1::vector.226", %"class.absl::optional.233", %"class.quic::QuicConnectionId", %"class.absl::optional.233", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector", [4 x %"class.std::__1::unique_ptr.25"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.31"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.39", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.58" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.53" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.47", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.47"*, i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::vector.68"* }
%"class.std::__1::vector.68" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.72", %"class.absl::optional.72", %"class.absl::optional.72" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.81", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet.88" }
%"class.quic::QuicIntervalSet.88" = type { %"class.absl::btree_set.89" }
%"class.absl::btree_set.89" = type { %"class.absl::container_internal::btree_set_container.90" }
%"class.absl::container_internal::btree_set_container.90" = type { %"class.absl::container_internal::btree_container.91" }
%"class.absl::container_internal::btree_container.91" = type { %"class.absl::container_internal::btree.92" }
%"class.absl::container_internal::btree.92" = type { %"class.absl::container_internal::CompressedTuple.93", %"class.absl::container_internal::btree_node.100"*, i64 }
%"class.absl::container_internal::CompressedTuple.93" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.94" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.94" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.99" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.99" = type { %"class.absl::container_internal::btree_node.100"* }
%"class.absl::container_internal::btree_node.100" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.102", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.130" }
%"struct.quic::QuicFrame" = type { %union.anon.104 }
%union.anon.104 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.102", %"class.std::__1::vector.102", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.40", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.154", %"class.std::__1::vector.161", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.168", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.135", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.135" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.102", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.138", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.144", %"class.absl::optional.149" }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { i32 }
%"class.absl::optional.149" = type { %"class.absl::optional_internal::optional_data.150" }
%"class.absl::optional_internal::optional_data.150" = type { %"class.absl::optional_internal::optional_data_base.151" }
%"class.absl::optional_internal::optional_data_base.151" = type { %"class.absl::optional_internal::optional_data_dtor_base.152" }
%"class.absl::optional_internal::optional_data_dtor_base.152" = type { i8, %union.anon.153 }
%union.anon.153 = type { i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.156" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.163" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.168" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.171"*, i64 }
%"struct.std::__1::pair.171" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node.100"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.37, i32 }
%union.anon.37 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.38 }
%union.anon.38 = type { [4 x i32] }
%"struct.std::__1::array.39" = type { [16 x i8] }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::vector.182", %"class.std::__1::vector.182", %"class.std::__1::vector.182", %"class.quic::QuicIntervalSet", i64 }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.184" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.39" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.195", %"class.std::__1::vector.203", %"class.std::__1::unique_ptr.175", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"*, %"class.std::__1::__compressed_pair.198" }
%"struct.std::__1::pair.197" = type opaque
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::pair.197"* }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.std::__1::pair.205"*, %"struct.std::__1::pair.205"*, %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::pair.205" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::pair.205"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::array.121"* }
%"struct.std::__1::array.121" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.220" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.121"*, i64 }
%"class.quiche::QuicheCircularDeque.223" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.121", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.17 }
%union.anon.17 = type { %struct.anon.19 }
%struct.anon.19 = type { i8, i8* }
%"class.absl::optional.233" = type { %"class.absl::optional_internal::optional_data.234" }
%"class.absl::optional_internal::optional_data.234" = type { %"class.absl::optional_internal::optional_data_base.235" }
%"class.absl::optional_internal::optional_data_base.235" = type { %"class.absl::optional_internal::optional_data_dtor_base.236" }
%"class.absl::optional_internal::optional_data_dtor_base.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.238" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.242" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.248", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.258", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"struct.std::__1::array.121"*, %"struct.std::__1::array.121"*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.39", i8, i8, i64, i64, %"class.std::__1::unique_ptr.40", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.46 }
%union.anon.46 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.264", i64 }
%"class.std::__1::deque.264" = type { %"class.std::__1::__deque_base.265" }
%"class.std::__1::__deque_base.265" = type { %"struct.std::__1::__split_buffer.266", i64, %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::__split_buffer.266" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.267" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.276", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.292", [4 x i8] }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278", %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.295" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.297" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.std::__1::unique_ptr.304"*, %"class.std::__1::unique_ptr.304"*, %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.410", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::unique_ptr.304"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.322", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.327", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.315", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::flat_hash_map.333", %"class.absl::flat_hash_map.333" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.315", %"class.std::__1::vector.315" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, %union.anon.326 }
%union.anon.326 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"struct.std::__1::pair.332" }
%"struct.std::__1::pair.332" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.39" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.39", %"struct.std::__1::array.39", i8 }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { i32*, i32*, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.333" = type { %"class.absl::container_internal::raw_hash_map.334" }
%"class.absl::container_internal::raw_hash_map.334" = type { %"class.absl::container_internal::raw_hash_set.335" }
%"class.absl::container_internal::raw_hash_set.335" = type { i8*, %"union.absl::container_internal::map_slot_type.336"*, i64, i64, %"class.absl::container_internal::CompressedTuple.337" }
%"union.absl::container_internal::map_slot_type.336" = type opaque
%"class.absl::container_internal::CompressedTuple.337" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.338" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.338" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.348" = type { %"class.absl::container_internal::raw_hash_map.349" }
%"class.absl::container_internal::raw_hash_map.349" = type { %"class.absl::container_internal::raw_hash_set.350" }
%"class.absl::container_internal::raw_hash_set.350" = type { i8*, %"union.absl::container_internal::map_slot_type.351"*, i64, i64, %"class.absl::container_internal::CompressedTuple.352" }
%"union.absl::container_internal::map_slot_type.351" = type opaque
%"class.absl::container_internal::CompressedTuple.352" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.353" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.353" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.357" = type { %"class.absl::container_internal::raw_hash_map.358" }
%"class.absl::container_internal::raw_hash_map.358" = type { %"class.absl::container_internal::raw_hash_set.359" }
%"class.absl::container_internal::raw_hash_set.359" = type { i8*, %"union.absl::container_internal::map_slot_type.360"*, i64, i64, %"class.absl::container_internal::CompressedTuple.361" }
%"union.absl::container_internal::map_slot_type.360" = type opaque
%"class.absl::container_internal::CompressedTuple.361" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.367" }
%"class.absl::container_internal::CompressedTuple.367" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.370", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.386" }
%"class.quiche::QuicheCircularDeque.370" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.386" = type { %"class.absl::container_internal::raw_hash_map.387" }
%"class.absl::container_internal::raw_hash_map.387" = type { %"class.absl::container_internal::raw_hash_set.388" }
%"class.absl::container_internal::raw_hash_set.388" = type { i8*, %"union.absl::container_internal::map_slot_type.389"*, i64, i64, %"class.absl::container_internal::CompressedTuple.390" }
%"union.absl::container_internal::map_slot_type.389" = type opaque
%"class.absl::container_internal::CompressedTuple.390" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.391" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.391" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.395", %"class.std::__1::unique_ptr.398" }
%"class.quiche::QuicheCircularDeque.395" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.379" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.371" }
%"class.absl::container_internal::raw_hash_map.371" = type { %"class.absl::container_internal::raw_hash_set.372" }
%"class.absl::container_internal::raw_hash_set.372" = type { i8*, %"struct.std::__1::pair.373"**, i64, i64, %"class.absl::container_internal::CompressedTuple.374" }
%"struct.std::__1::pair.373" = type opaque
%"class.absl::container_internal::CompressedTuple.374" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.375" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.375" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::list.379" = type { %"class.std::__1::__list_imp.380" }
%"class.std::__1::__list_imp.380" = type { %"struct.std::__1::__list_node_base.381", %"class.std::__1::__compressed_pair.382" }
%"struct.std::__1::__list_node_base.381" = type { %"struct.std::__1::__list_node_base.381"*, %"struct.std::__1::__list_node_base.381"* }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.178", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.178" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"class.std::__1::basic_string" }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.409 }
%union.anon.409 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.410" = type { %"class.absl::optional_internal::optional_data.411" }
%"class.absl::optional_internal::optional_data.411" = type { %"class.absl::optional_internal::optional_data_base.412" }
%"class.absl::optional_internal::optional_data_base.412" = type { %"class.absl::optional_internal::optional_data_dtor_base.413" }
%"class.absl::optional_internal::optional_data_dtor_base.413" = type { i8, %union.anon.414 }
%union.anon.414 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.417", %"class.absl::optional.149" }
%"class.quiche::QuicheCircularDeque.417" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.quic::QuicTime" = type { i64 }
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map.420" }
%"class.absl::flat_hash_map.420" = type { %"class.absl::container_internal::raw_hash_map.421" }
%"class.absl::container_internal::raw_hash_map.421" = type { %"class.absl::container_internal::raw_hash_set.422" }
%"class.absl::container_internal::raw_hash_set.422" = type { i8*, %"union.absl::container_internal::map_slot_type.423"*, i64, i64, %"class.absl::container_internal::CompressedTuple.424" }
%"union.absl::container_internal::map_slot_type.423" = type { %"struct.std::__1::pair.633" }
%"struct.std::__1::pair.633" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple.424" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.425" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.425" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::QuicSpdySession" = type { %"class.quic::QuicSession.base", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.503", %"class.quic::QuicHeadersStream"*, %"class.quic::QuicSendControlStream"*, %"class.quic::QuicReceiveControlStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackSendStream"*, %"class.quic::QpackSendStream"*, %"struct.quic::SettingsFrame", i64, i64, i64, i64, i32, i32, i64, i8, [7 x i8], %"class.spdy::SpdyFramer", %"class.http2::Http2DecoderAdapter", %"class.std::__1::unique_ptr.602", %"class.absl::optional.149", %"class.quic::Http3DebugVisitor"*, %"class.absl::flat_hash_map.608", i32, %"class.absl::optional.149", %"class.absl::optional.149", i64, i8, i8, %"class.absl::flat_hash_map.617", i8, %"class.absl::flat_hash_set", %"class.std::__1::list.626" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.302", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.348", %"class.absl::flat_hash_map.357", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.175", %"class.std::__1::vector", %"class.absl::optional.404", i8, i8, i8, i8 }>
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.quic::QpackEncoder"* }
%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector.438"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.438" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.439" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.439" = type { %"class.std::__1::__vector_base.440" }
%"class.std::__1::__vector_base.440" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.441" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map.458"*, %"class.absl::flat_hash_map.473"*, %"class.absl::flat_hash_map.458", %"class.absl::flat_hash_map.473" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque.446", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque.446" = type { %"class.std::__1::__deque_base.447" }
%"class.std::__1::__deque_base.447" = type { %"struct.std::__1::__split_buffer.448", i64, %"class.std::__1::__compressed_pair.454" }
%"struct.std::__1::__split_buffer.448" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.449" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.absl::flat_hash_map.458" = type { %"class.absl::container_internal::raw_hash_map.459" }
%"class.absl::container_internal::raw_hash_map.459" = type { %"class.absl::container_internal::raw_hash_set.460" }
%"class.absl::container_internal::raw_hash_set.460" = type { i8*, %"union.absl::container_internal::map_slot_type.461"*, i64, i64, %"class.absl::container_internal::CompressedTuple.462" }
%"union.absl::container_internal::map_slot_type.461" = type opaque
%"class.absl::container_internal::CompressedTuple.462" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.463" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.463" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.473" = type { %"class.absl::container_internal::raw_hash_map.474" }
%"class.absl::container_internal::raw_hash_map.474" = type { %"class.absl::container_internal::raw_hash_set.475" }
%"class.absl::container_internal::raw_hash_set.475" = type { i8*, %"union.absl::container_internal::map_slot_type.476"*, i64, i64, %"class.absl::container_internal::CompressedTuple.477" }
%"union.absl::container_internal::map_slot_type.476" = type opaque
%"class.absl::container_internal::CompressedTuple.477" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.478" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.478" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.484", %"class.std::__1::map", i64 }
%"class.absl::flat_hash_map.484" = type { %"class.absl::container_internal::raw_hash_map.485" }
%"class.absl::container_internal::raw_hash_map.485" = type { %"class.absl::container_internal::raw_hash_set.486" }
%"class.absl::container_internal::raw_hash_set.486" = type { i8*, %"union.absl::container_internal::map_slot_type.487"*, i64, i64, %"class.absl::container_internal::CompressedTuple.488" }
%"union.absl::container_internal::map_slot_type.487" = type opaque
%"class.absl::container_internal::CompressedTuple.488" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.489" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.489" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.quic::QpackDecoder"* }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base.508", %"class.std::__1::vector.509"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base.508" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque.507", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque.507" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.std::__1::vector.509" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.510" }
%"class.std::__1::__tree.510" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.511", %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.518" }
%"class.std::__1::__tree.518" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.quic::QuicHeadersStream" = type { %"class.quic::QuicStream.base", %"class.quic::QuicSpdySession"*, %"class.quiche::QuicheCircularDeque.529" }
%"class.quiche::QuicheCircularDeque.529" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" = type { %"struct.quic::QuicHeadersStream::CompressedHeaderInfo"*, i64 }
%"struct.quic::QuicHeadersStream::CompressedHeaderInfo" = type { i64, i64, i64, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.532 }
%class.scoped_refptr.532 = type { %"class.quic::QuicAckListenerInterface"* }
%"class.quic::QuicAckListenerInterface" = type { %"class.quic::QuicReferenceCounted.base", [4 x i8] }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.533" }>
%"class.base::RefCountedThreadSafe.533" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicReceiveControlStream" = type { %"class.quic::QuicStream.base", %"class.quic::HttpDecoder::Visitor", i8, [7 x i8], %"class.quic::HttpDecoder", %"class.quic::QuicSpdySession"* }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array.534", %"struct.std::__1::array.534", %"struct.std::__1::array.534", i8, i8, [6 x i8] }>
%"struct.std::__1::array.534" = type { [8 x i8] }
%"class.quic::QpackReceiveStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackStreamReceiver"* }
%"class.quic::QpackSendStream" = type <{ %"class.quic::QuicStream.base", [7 x i8], %"class.quic::QpackStreamSenderDelegate", i64, i8, [7 x i8] }>
%"class.spdy::SpdyFramer" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.535", %"class.spdy::SpdyFramerDebugVisitorInterface"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.spdy::HpackEncoder"* }
%"class.spdy::HpackEncoder" = type <{ %"class.spdy::HpackHeaderTable", %"class.spdy::HpackOutputStream", i64, %"class.std::__1::function.538", %"class.std::__1::function.544", i8, i8, [6 x i8] }>
%"class.spdy::HpackHeaderTable" = type { %"class.std::__1::vector.509"*, %"class.std::__1::deque.446", %"class.absl::flat_hash_map.458"*, %"class.absl::flat_hash_map.473"*, %"class.absl::flat_hash_map.458", %"class.absl::flat_hash_map.473", i64, i64, i64, i64 }
%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::function.538" = type { %"class.std::__1::__function::__policy_func.542" }
%"class.std::__1::__function::__policy_func.542" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.543", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.543" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.std::__1::function.544" = type { %"class.std::__1::__function::__policy_func.548" }
%"class.std::__1::__function::__policy_func.548" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.549", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.549" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.spdy::SpdyFramerDebugVisitorInterface" = type { i32 (...)** }
%"class.http2::Http2DecoderAdapter" = type { %"class.http2::Http2FrameDecoderListener", %"struct.http2::Http2FrameHeader", %"struct.http2::Http2FrameHeader", %"class.absl::optional.149", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.http2::Http2FrameDecoderNoOpListener", %"class.spdy::SpdyFramerVisitorInterface"*, %"class.spdy::SpdyFramerDebugVisitorInterface"*, %"class.spdy::ExtensionVisitorInterface"*, %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.595", i8, i32, i32, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.http2::Http2FrameDecoderListener" = type { i32 (...)** }
%"struct.http2::Http2FrameHeader" = type { i32, i32, i8, i32 }
%"class.http2::Http2FrameDecoderNoOpListener" = type { %"class.http2::Http2FrameDecoderListener" }
%"class.spdy::SpdyFramerVisitorInterface" = type { i32 (...)** }
%"class.spdy::ExtensionVisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.spdy::HpackDecoderAdapter"* }
%"class.spdy::HpackDecoderAdapter" = type { %"class.spdy::HpackDecoderAdapter::ListenerAdapter", %"class.http2::HpackDecoder", i64, i64, i8, i32, %"class.std::__1::basic_string" }
%"class.spdy::HpackDecoderAdapter::ListenerAdapter" = type { %"class.http2::HpackDecoderListener", %"class.spdy::Http2HeaderBlock", %"class.spdy::SpdyHeadersHandlerInterface"*, i64, i64 }
%"class.http2::HpackDecoderListener" = type { i32 (...)** }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap.556", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap.556" = type { %"class.absl::node_hash_map.557", %"class.std::__1::list.568" }
%"class.absl::node_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"struct.std::__1::pair.560"**, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"struct.std::__1::pair.560" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.570"* }
%"struct.std::__1::__list_node_base.570" = type { %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"* }
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::list.568" = type { %"class.std::__1::__list_imp.569" }
%"class.std::__1::__list_imp.569" = type { %"struct.std::__1::__list_node_base.570", %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.575", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.575" = type { %"class.std::__1::__vector_base.576" }
%"class.std::__1::__vector_base.576" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.583" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.577", i64, i64 }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { i8* }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.http2::HpackDecoder" = type { i32 (...)**, %"class.http2::HpackDecoderState", %"class.http2::HpackWholeEntryBuffer", %"class.http2::HpackBlockDecoder", i32, %"class.std::__1::basic_string" }
%"class.http2::HpackDecoderState" = type { %"class.http2::HpackWholeEntryListener", %"class.http2::HpackDecoderTables", %"class.http2::HpackDecoderListener"*, i32, i32, i8, i8, i8, i32, %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryListener" = type { i32 (...)** }
%"class.http2::HpackDecoderTables" = type { %"class.http2::HpackDecoderStaticTable", %"class.http2::HpackDecoderDynamicTable" }
%"class.http2::HpackDecoderStaticTable" = type { %"class.std::__1::vector.588"* }
%"class.std::__1::vector.588" = type opaque
%"class.http2::HpackDecoderDynamicTable" = type { %"class.quiche::QuicheCircularDeque.589", i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.589" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" = type { %"struct.http2::HpackStringPair"*, i64 }
%"struct.http2::HpackStringPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryBuffer" = type <{ %"class.http2::HpackEntryDecoderListener", %"class.http2::HpackWholeEntryListener"*, %"class.http2::HpackDecoderStringBuffer", %"class.http2::HpackDecoderStringBuffer", i64, i64, i32, i8, [3 x i8] }>
%"class.http2::HpackEntryDecoderListener" = type { i32 (...)** }
%"class.http2::HpackDecoderStringBuffer" = type <{ %"class.std::__1::basic_string", %"class.absl::string_view", %"class.http2::HpackHuffmanDecoder", i64, i8, i8, i8, [5 x i8] }>
%"class.http2::HpackBlockDecoder" = type <{ %"class.http2::HpackEntryDecoder", %"class.http2::HpackEntryDecoderListener"*, i8, [7 x i8] }>
%"class.http2::HpackEntryDecoder" = type { %"class.http2::HpackEntryTypeDecoder", %"class.http2::HpackStringDecoder", i32, i32 }
%"class.http2::HpackEntryTypeDecoder" = type { %"class.http2::HpackVarintDecoder", i32, [4 x i8] }
%"class.http2::HpackStringDecoder" = type <{ %"class.http2::HpackVarintDecoder", i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.http2::Http2FrameDecoder"* }
%"class.http2::Http2FrameDecoder" = type { %"class.http2::FrameDecoderState", %union.anon.598, i32, i64, %"class.http2::Http2FrameDecoderNoOpListener" }
%"class.http2::FrameDecoderState" = type { %"class.http2::Http2FrameDecoderListener"*, %"struct.http2::Http2FrameHeader", i32, i32, %"class.http2::Http2StructureDecoder" }
%"class.http2::Http2StructureDecoder" = type <{ i32, [9 x i8], [3 x i8] }>
%union.anon.598 = type { %"class.http2::HeadersPayloadDecoder" }
%"class.http2::HeadersPayloadDecoder" = type { i32, %"struct.http2::Http2PriorityFields" }
%"struct.http2::Http2PriorityFields" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.quic::QuicSpdySession::SpdyFramerVisitor"* }
%"class.quic::QuicSpdySession::SpdyFramerVisitor" = type opaque
%"class.quic::Http3DebugVisitor" = type { i32 (...)** }
%"class.absl::flat_hash_map.608" = type { %"class.absl::container_internal::raw_hash_map.609" }
%"class.absl::container_internal::raw_hash_map.609" = type { %"class.absl::container_internal::raw_hash_set.610" }
%"class.absl::container_internal::raw_hash_set.610" = type { i8*, %"union.absl::container_internal::map_slot_type.611"*, i64, i64, %"class.absl::container_internal::CompressedTuple.612" }
%"union.absl::container_internal::map_slot_type.611" = type opaque
%"class.absl::container_internal::CompressedTuple.612" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.617" = type { %"class.absl::container_internal::raw_hash_map.618" }
%"class.absl::container_internal::raw_hash_map.618" = type { %"class.absl::container_internal::raw_hash_set.619" }
%"class.absl::container_internal::raw_hash_set.619" = type { i8*, %"union.absl::container_internal::map_slot_type.620"*, i64, i64, %"class.absl::container_internal::CompressedTuple.621" }
%"union.absl::container_internal::map_slot_type.620" = type opaque
%"class.absl::container_internal::CompressedTuple.621" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::list.626" = type { %"class.std::__1::__list_imp.627" }
%"class.std::__1::__list_imp.627" = type { %"struct.std::__1::__list_node_base.628", %"class.std::__1::__compressed_pair.629" }
%"struct.std::__1::__list_node_base.628" = type { %"struct.std::__1::__list_node_base.628"*, %"struct.std::__1::__list_node_base.628"* }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::allocator.433" = type { i8 }
%"struct.quic::QuicRstStreamFrame" = type { i32, i32, i32, i64, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.quic::QuicConnection::ScopedPacketFlusher" = type <{ %"class.quic::QuicConnection"*, i8, i8, [6 x i8] }>
%"class.quic::QuicDataWriter" = type { %"class.quiche::QuicheDataWriter.base", [4 x i8] }
%"class.quiche::QuicheDataWriter.base" = type <{ i8*, i64, i64, i32 }>
%"class.quiche::QuicheDataWriter" = type <{ i8*, i64, i64, i32, [4 x i8] }>
%"class.quic::QuicReferenceCountedImpl" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.533", [4 x i8] }>
%"struct.quic::PriorityUpdateFrame" = type { i8, i64, %"class.std::__1::basic_string" }
%"struct.quic::GoAwayFrame" = type { i64 }
%"struct.quic::QuicWindowUpdateFrame" = type { i32, i32, i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4quic21QuicSendControlStreamD2Ev = comdat any

$_ZN4quic21QuicSendControlStreamD0Ev = comdat any

$_ZN4quic21QuicSendControlStream15OnDataAvailableEv = comdat any

$_ZNK4quic10QuicStream2idEv = comdat any

$_ZN4quic10QuicStream28MaybeSendPriorityUpdateFrameEv = comdat any

$_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE = comdat any

$_ZN4quic10QuicStream17OnCanWriteNewDataEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEEC2ERKSF_RKSE_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE27drop_deletes_without_resizeEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN4quic21QuicSendControlStreamE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicSendControlStream"*)* @_ZN4quic21QuicSendControlStreamD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicSendControlStream"*)* @_ZN4quic21QuicSendControlStreamD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSendControlStream"*)* @_ZN4quic21QuicSendControlStream15OnDataAvailableEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream9OnFinReadEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64)* @_ZN4quic10QuicStream16AddBytesConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32)* @_ZN4quic10QuicStream5ResetENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, i64, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream2idEv to i8*), i8* bitcast (void (%"struct.quic::ParsedQuicVersion"*, %"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream7versionEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)* @_ZN4quic10QuicStream13OnStreamFrameERKNS_15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream10OnCanWriteEv to i8*), i8* bitcast (void (%"class.quic::QuicSendControlStream"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN4quic21QuicSendControlStream13OnStreamResetERKNS_18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, i32)* @_ZN4quic10QuicStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream28MaybeSendPriorityUpdateFrameEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, %"struct.quic::QuicWindowUpdateFrame"*)* @_ZN4quic10QuicStream19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream11StopReadingEv to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i64, i64, i1, i64, i64, i64*)* @_ZN4quic10QuicStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, i1)* @_ZN4quic10QuicStream26OnStreamFrameRetransmittedEmmb to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, i1)* @_ZN4quic10QuicStream17OnStreamFrameLostEmmb to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i64, i64, i1, i8)* @_ZN4quic10QuicStream20RetransmitStreamDataEmmbNS_16TransmissionTypeE to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream24HasPendingRetransmissionEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSendControlStream"*, i32)* @_ZN4quic21QuicSendControlStream13OnStopSendingENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, %"class.quic::QuicReferenceCountedPointer"*)* @_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream7OnCloseEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream17OnCanWriteNewDataEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64)* @_ZN4quic10QuicStream20OnStreamDataConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream26WritePendingRetransmissionEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream16OnDeadlinePassedEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream14CloseWriteSideEv to i8*)] }, align 8
@.str = private unnamed_addr constant [76 x i8] c"../../net/third_party/quiche/src/quic/core/http/quic_send_control_stream.cc\00", align 1
@.str.1 = private unnamed_addr constant [56 x i8] c"OnStreamReset() called for write unidirectional stream.\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"STOP_SENDING received for send control stream\00", align 1
@FLAGS_quic_enable_http3_grease_randomness = external local_unnamed_addr global i8, align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic21QuicSendControlStreamC1EjPNS_15QuicSpdySessionERKNS_13SettingsFrameE = hidden unnamed_addr alias void (%"class.quic::QuicSendControlStream"*, i32, %"class.quic::QuicSpdySession"*, %"struct.quic::SettingsFrame"*), void (%"class.quic::QuicSendControlStream"*, i32, %"class.quic::QuicSpdySession"*, %"struct.quic::SettingsFrame"*)* @_ZN4quic21QuicSendControlStreamC2EjPNS_15QuicSpdySessionERKNS_13SettingsFrameE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21QuicSendControlStreamC2EjPNS_15QuicSpdySessionERKNS_13SettingsFrameE(%"class.quic::QuicSendControlStream"*, i32, %"class.quic::QuicSpdySession"*, %"struct.quic::SettingsFrame"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::allocator.433", align 1
  %6 = bitcast %"class.quic::QuicSendControlStream"* %0 to %"class.quic::QuicStream"*
  %7 = bitcast %"class.quic::QuicSpdySession"* %2 to %"class.quic::QuicSession"*
  tail call void @_ZN4quic10QuicStreamC2EjPNS_11QuicSessionEbNS_10StreamTypeE(%"class.quic::QuicStream"* %6, i32 %1, %"class.quic::QuicSession"* %7, i1 zeroext true, i32 1) #8
  %8 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN4quic21QuicSendControlStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::allocator.433", %"class.std::__1::allocator.433"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEEC2ERKSF_RKSE_(%"class.absl::container_internal::raw_hash_set.422"* %10, %"class.absl::container_internal::raw_hash_set.422"* dereferenceable(40) %11, %"class.std::__1::allocator.433"* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 3
  store %"class.quic::QuicSpdySession"* %2, %"class.quic::QuicSpdySession"** %13, align 8
  ret void
}

declare void @_ZN4quic10QuicStreamC2EjPNS_11QuicSessionEbNS_10StreamTypeE(%"class.quic::QuicStream"*, i32, %"class.quic::QuicSession"*, i1 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21QuicSendControlStream13OnStreamResetERKNS_18QuicRstStreamFrameE(%"class.quic::QuicSendControlStream"* nocapture readnone, %"struct.quic::QuicRstStreamFrame"* nocapture readnone dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %6) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str, i64 0, i64 0), i32 30, i32 2) #8
  %7 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i64 55) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %6) #8
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic21QuicSendControlStream13OnStopSendingENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicSendControlStream"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 0, i32 5
  %5 = load %"class.quic::StreamDelegateInterface"*, %"class.quic::StreamDelegateInterface"** %4, align 8
  %6 = tail call i8* @_Znwm(i64 48) #11
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 45, i64 -9223372036854775760>, <2 x i64>* %9, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i64 45, i1 false) #8
  %10 = getelementptr inbounds i8, i8* %6, i64 45
  store i8 0, i8* %10, align 1
  %11 = bitcast %"class.quic::StreamDelegateInterface"* %5 to void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %12 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %12, i64 2
  %14 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %13, align 8
  call void %14(%"class.quic::StreamDelegateInterface"* %5, i32 156, %"class.std::__1::basic_string"* nonnull %3) #8
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21QuicSendControlStream22MaybeSendSettingsFrameEv(%"class.quic::QuicSendControlStream"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::__1::allocator.433", align 1
  %3 = alloca %"class.quic::QuicConnection::ScopedPacketFlusher", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.quic::QuicDataWriter", align 8
  %6 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %7 = alloca %"struct.quic::SettingsFrame", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::unique_ptr.577", align 8
  %10 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %11 = alloca %"class.std::__1::unique_ptr.577", align 8
  %12 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %13 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %290

16:                                               ; preds = %1
  %17 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8
  %18 = bitcast %"class.quic::QuicSendControlStream"* %0 to %"class.quic::QuicStream"*
  %19 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 0, i32 4
  %20 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %19, align 8
  %22 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %21, i64 0, i32 8
  %23 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %22, align 8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %3, %"class.quic::QuicConnection"* %23) #8
  %24 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = bitcast %"class.quic::QuicDataWriter"* %5 to i8*
  store i64 -6148914691236517206, i64* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.quic::QuicDataWriter", %"class.quic::QuicDataWriter"* %5, i64 0, i32 0, i32 2
  %27 = bitcast %"class.quic::QuicDataWriter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  call void @_ZN4quic14QuicDataWriterC1EmPc(%"class.quic::QuicDataWriter"* nonnull %5, i64 8, i8* nonnull %24) #8
  %28 = call zeroext i1 @_ZN4quic14QuicDataWriter13WriteVarInt62Em(%"class.quic::QuicDataWriter"* nonnull %5, i64 0) #8
  %29 = bitcast %"class.quic::QuicDataWriter"* %5 to %"class.quiche::QuicheDataWriter"*
  %30 = call i8* @_ZN6quiche16QuicheDataWriter4dataEv(%"class.quiche::QuicheDataWriter"* nonnull %29) #8
  %31 = load i64, i64* %26, align 8
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %16
  call void @llvm.trap() #8
  unreachable

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %35, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %18, i8* %30, i64 %31, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %6) #8
  %36 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %35, align 8
  %37 = icmp eq %"class.quic::QuicAckListenerInterface"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %36, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe.533"* %44 to %"class.quic::QuicReferenceCountedImpl"*
  %46 = bitcast %"class.base::RefCountedThreadSafe.533"* %44 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %47 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %47, i64 1
  %49 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %48, align 8
  call void %49(%"class.quic::QuicReferenceCountedImpl"* nonnull %45) #8
  br label %50

50:                                               ; preds = %34, %38, %43
  %51 = bitcast %"struct.quic::SettingsFrame"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #8
  %52 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %7, i64 0, i32 0, i32 0, i32 0, i32 3
  %55 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %7, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::allocator.433", %"class.std::__1::allocator.433"* %2, i64 0, i32 0
  %58 = bitcast %"struct.quic::SettingsFrame"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 40, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #8
  call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEEC2ERKSF_RKSE_(%"class.absl::container_internal::raw_hash_set.422"* nonnull %55, %"class.absl::container_internal::raw_hash_set.422"* dereferenceable(40) %56, %"class.std::__1::allocator.433"* nonnull dereferenceable(1) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #8
  %59 = load i8, i8* @FLAGS_quic_enable_http3_grease_randomness, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %130

61:                                               ; preds = %50
  %62 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !4
  %63 = add i64 %62, 64
  %64 = zext i64 %63 to i128
  %65 = mul nuw i128 %64, 11376068507788127593
  %66 = lshr i128 %65, 64
  %67 = xor i128 %66, %65
  %68 = trunc i128 %67 to i64
  %69 = load i8*, i8** %52, align 8, !noalias !4
  %70 = load i64, i64* %54, align 8, !noalias !4
  %71 = lshr i64 %68, 7
  %72 = ptrtoint i8* %69 to i64
  %73 = lshr i64 %72, 12
  %74 = xor i64 %71, %73
  %75 = trunc i128 %67 to i8
  %76 = and i8 %75, 127
  %77 = insertelement <16 x i8> undef, i8 %76, i32 0
  %78 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> zeroinitializer
  %79 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %53, align 8
  br label %80

80:                                               ; preds = %109, %61
  %81 = phi i64 [ %74, %61 ], [ %111, %109 ]
  %82 = phi i64 [ 0, %61 ], [ %110, %109 ]
  %83 = and i64 %81, %70
  %84 = getelementptr inbounds i8, i8* %69, i64 %83
  %85 = bitcast i8* %84 to <16 x i8>*
  %86 = load <16 x i8>, <16 x i8>* %85, align 1, !noalias !4
  %87 = icmp eq <16 x i8> %78, %86
  %88 = bitcast <16 x i1> %87 to i16
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %105, label %90

90:                                               ; preds = %80
  %91 = zext i16 %88 to i32
  br label %92

92:                                               ; preds = %101, %90
  %93 = phi i32 [ %91, %90 ], [ %103, %101 ]
  %94 = call i32 @llvm.cttz.i32(i32 %93, i1 false) #8, !range !7
  %95 = zext i32 %94 to i64
  %96 = add i64 %83, %95
  %97 = and i64 %96, %70
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %79, i64 %97, i32 0, i32 0
  %99 = load i64, i64* %98, align 8, !noalias !4
  %100 = icmp eq i64 %99, 64
  br i1 %100, label %119, label %101, !prof !3

101:                                              ; preds = %92
  %102 = add i32 %93, -1
  %103 = and i32 %102, %93
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %92

105:                                              ; preds = %101, %80
  %106 = icmp eq <16 x i8> %86, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %107 = bitcast <16 x i1> %106 to i16
  %108 = icmp eq i16 %107, 0
  br i1 %108, label %109, label %112, !prof !8

109:                                              ; preds = %105
  %110 = add i64 %82, 16
  %111 = add i64 %110, %83
  br label %80

112:                                              ; preds = %105
  %113 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.422"* nonnull %55, i64 %68) #8, !noalias !4
  %114 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %53, align 8, !noalias !4
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %114, i64 %113, i32 0, i32 0
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> <i64 64, i64 0>, <2 x i64>* %116, align 8, !noalias !4
  %117 = load i8*, i8** %52, align 8, !noalias !4
  %118 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %53, align 8, !noalias !4
  br label %119

119:                                              ; preds = %92, %112
  %120 = phi %"union.absl::container_internal::map_slot_type.423"* [ %118, %112 ], [ %79, %92 ]
  %121 = phi i8* [ %117, %112 ], [ %69, %92 ]
  %122 = phi i64 [ %113, %112 ], [ %97, %92 ]
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  %124 = icmp ne i8* %123, null
  call void @llvm.assume(i1 %124) #8, !noalias !4
  %125 = load i8, i8* %123, align 1
  %126 = icmp sgt i8 %125, -1
  br i1 %126, label %128, label %127, !prof !3

127:                                              ; preds = %119
  call void @llvm.trap() #8
  unreachable

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %120, i64 %122, i32 0, i32 1
  store i64 20, i64* %129, align 8
  br label %216

130:                                              ; preds = %50
  %131 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #8
  store i32 -1431655766, i32* %8, align 4
  %132 = call %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() #8
  %133 = bitcast %"class.quic::QuicRandom"* %132 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  %134 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %134, i64 2
  %136 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %135, align 8
  call void %136(%"class.quic::QuicRandom"* %132, i8* nonnull %131, i64 4) #8
  %137 = load i32, i32* %8, align 4
  %138 = zext i32 %137 to i64
  %139 = mul nuw nsw i64 %138, 31
  %140 = add nuw nsw i64 %139, 33
  %141 = call %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() #8
  %142 = bitcast %"class.quic::QuicRandom"* %141 to void (%"class.quic::QuicRandom"*, i8*, i64)***
  %143 = load void (%"class.quic::QuicRandom"*, i8*, i64)**, void (%"class.quic::QuicRandom"*, i8*, i64)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %143, i64 2
  %145 = load void (%"class.quic::QuicRandom"*, i8*, i64)*, void (%"class.quic::QuicRandom"*, i8*, i64)** %144, align 8
  call void %145(%"class.quic::QuicRandom"* %141, i8* nonnull %131, i64 4) #8
  %146 = load i32, i32* %8, align 4
  %147 = zext i32 %146 to i64
  %148 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !9
  %149 = add i64 %148, %140
  %150 = zext i64 %149 to i128
  %151 = mul nuw i128 %150, 11376068507788127593
  %152 = lshr i128 %151, 64
  %153 = xor i128 %152, %151
  %154 = trunc i128 %153 to i64
  %155 = load i8*, i8** %52, align 8, !noalias !9
  %156 = load i64, i64* %54, align 8, !noalias !9
  %157 = lshr i64 %154, 7
  %158 = ptrtoint i8* %155 to i64
  %159 = lshr i64 %158, 12
  %160 = xor i64 %157, %159
  %161 = trunc i128 %153 to i8
  %162 = and i8 %161, 127
  %163 = insertelement <16 x i8> undef, i8 %162, i32 0
  %164 = shufflevector <16 x i8> %163, <16 x i8> undef, <16 x i32> zeroinitializer
  %165 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %53, align 8
  br label %166

166:                                              ; preds = %195, %130
  %167 = phi i64 [ %160, %130 ], [ %197, %195 ]
  %168 = phi i64 [ 0, %130 ], [ %196, %195 ]
  %169 = and i64 %167, %156
  %170 = getelementptr inbounds i8, i8* %155, i64 %169
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !noalias !9
  %173 = icmp eq <16 x i8> %164, %172
  %174 = bitcast <16 x i1> %173 to i16
  %175 = icmp eq i16 %174, 0
  br i1 %175, label %191, label %176

176:                                              ; preds = %166
  %177 = zext i16 %174 to i32
  br label %178

178:                                              ; preds = %187, %176
  %179 = phi i32 [ %177, %176 ], [ %189, %187 ]
  %180 = call i32 @llvm.cttz.i32(i32 %179, i1 false) #8, !range !7
  %181 = zext i32 %180 to i64
  %182 = add i64 %169, %181
  %183 = and i64 %182, %156
  %184 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %165, i64 %183, i32 0, i32 0
  %185 = load i64, i64* %184, align 8, !noalias !9
  %186 = icmp eq i64 %185, %140
  br i1 %186, label %205, label %187, !prof !3

187:                                              ; preds = %178
  %188 = add i32 %179, -1
  %189 = and i32 %188, %179
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %178

191:                                              ; preds = %187, %166
  %192 = icmp eq <16 x i8> %172, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %193 = bitcast <16 x i1> %192 to i16
  %194 = icmp eq i16 %193, 0
  br i1 %194, label %195, label %198, !prof !8

195:                                              ; preds = %191
  %196 = add i64 %168, 16
  %197 = add i64 %196, %169
  br label %166

198:                                              ; preds = %191
  %199 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.422"* nonnull %55, i64 %154) #8, !noalias !9
  %200 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %53, align 8, !noalias !9
  %201 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %200, i64 %199, i32 0, i32 0
  store i64 %140, i64* %201, align 8, !noalias !9
  %202 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %200, i64 %199, i32 0, i32 1
  store i64 0, i64* %202, align 8, !noalias !9
  %203 = load i8*, i8** %52, align 8, !noalias !9
  %204 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %53, align 8, !noalias !9
  br label %205

205:                                              ; preds = %178, %198
  %206 = phi %"union.absl::container_internal::map_slot_type.423"* [ %204, %198 ], [ %165, %178 ]
  %207 = phi i8* [ %203, %198 ], [ %155, %178 ]
  %208 = phi i64 [ %199, %198 ], [ %183, %178 ]
  %209 = getelementptr inbounds i8, i8* %207, i64 %208
  %210 = icmp ne i8* %209, null
  call void @llvm.assume(i1 %210) #8, !noalias !9
  %211 = load i8, i8* %209, align 1
  %212 = icmp sgt i8 %211, -1
  br i1 %212, label %214, label %213, !prof !3

213:                                              ; preds = %205
  call void @llvm.trap() #8
  unreachable

214:                                              ; preds = %205
  %215 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %206, i64 %208, i32 0, i32 1
  store i64 %147, i64* %215, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #8
  br label %216

216:                                              ; preds = %214, %128
  %217 = bitcast %"class.std::__1::unique_ptr.577"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #8
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %9, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::unique_ptr.577"* %9 to i64*
  store i64 0, i64* %219, align 8
  %220 = call i64 @_ZN4quic11HttpEncoder22SerializeSettingsFrameERKNS_13SettingsFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::SettingsFrame"* nonnull dereferenceable(40) %7, %"class.std::__1::unique_ptr.577"* nonnull %9) #8
  %221 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 3
  %222 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %221, align 8
  %223 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %222, i64 0, i32 26
  %224 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %223, align 8
  %225 = icmp eq %"class.quic::Http3DebugVisitor"* %224, null
  br i1 %225, label %231, label %226

226:                                              ; preds = %216
  %227 = bitcast %"class.quic::Http3DebugVisitor"* %224 to void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::SettingsFrame"*)***
  %228 = load void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::SettingsFrame"*)**, void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::SettingsFrame"*)*** %227, align 8
  %229 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::SettingsFrame"*)*, void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::SettingsFrame"*)** %228, i64 22
  %230 = load void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::SettingsFrame"*)*, void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::SettingsFrame"*)** %229, align 8
  call void %230(%"class.quic::Http3DebugVisitor"* nonnull %224, %"struct.quic::SettingsFrame"* nonnull dereferenceable(40) %7) #8
  br label %231

231:                                              ; preds = %216, %226
  %232 = icmp sgt i64 %220, -1
  br i1 %232, label %234, label %233, !prof !3

233:                                              ; preds = %231
  call void @llvm.trap() #8
  unreachable

234:                                              ; preds = %231
  %235 = load i8*, i8** %218, align 8
  %236 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %236, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %18, i8* %235, i64 %220, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %10) #8
  %237 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %236, align 8
  %238 = icmp eq %"class.quic::QuicAckListenerInterface"* %237, null
  br i1 %238, label %251, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %237, i64 0, i32 0, i32 0, i32 1
  %241 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = atomicrmw sub i32* %241, i32 1 acq_rel
  %243 = icmp eq i32 %242, 1
  br i1 %243, label %244, label %251

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %240, i64 -2
  %246 = bitcast %"class.base::RefCountedThreadSafe.533"* %245 to %"class.quic::QuicReferenceCountedImpl"*
  %247 = bitcast %"class.base::RefCountedThreadSafe.533"* %245 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %248 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %248, i64 1
  %250 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %249, align 8
  call void %250(%"class.quic::QuicReferenceCountedImpl"* nonnull %246) #8
  br label %251

251:                                              ; preds = %234, %239, %244
  store i8 1, i8* %13, align 1
  %252 = bitcast %"class.std::__1::unique_ptr.577"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #8
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %11, i64 0, i32 0, i32 0, i32 0
  %254 = bitcast %"class.std::__1::unique_ptr.577"* %11 to i64*
  store i64 0, i64* %254, align 8
  %255 = call i64 @_ZN4quic11HttpEncoder22SerializeGreasingFrameEPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(%"class.std::__1::unique_ptr.577"* nonnull %11) #8
  %256 = icmp sgt i64 %255, -1
  br i1 %256, label %258, label %257, !prof !3

257:                                              ; preds = %251
  call void @llvm.trap() #8
  unreachable

258:                                              ; preds = %251
  %259 = load i8*, i8** %253, align 8
  %260 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %260, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %18, i8* %259, i64 %255, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %12) #8
  %261 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %260, align 8
  %262 = icmp eq %"class.quic::QuicAckListenerInterface"* %261, null
  br i1 %262, label %275, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %261, i64 0, i32 0, i32 0, i32 1
  %265 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = atomicrmw sub i32* %265, i32 1 acq_rel
  %267 = icmp eq i32 %266, 1
  br i1 %267, label %268, label %275

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %264, i64 -2
  %270 = bitcast %"class.base::RefCountedThreadSafe.533"* %269 to %"class.quic::QuicReferenceCountedImpl"*
  %271 = bitcast %"class.base::RefCountedThreadSafe.533"* %269 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %272 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %272, i64 1
  %274 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %273, align 8
  call void %274(%"class.quic::QuicReferenceCountedImpl"* nonnull %270) #8
  br label %275

275:                                              ; preds = %258, %263, %268
  %276 = load i8*, i8** %253, align 8
  store i8* null, i8** %253, align 8
  %277 = icmp eq i8* %276, null
  br i1 %277, label %279, label %278

278:                                              ; preds = %275
  call void @_ZdaPv(i8* nonnull %276) #11
  br label %279

279:                                              ; preds = %275, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #8
  %280 = load i8*, i8** %218, align 8
  store i8* null, i8** %218, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %283, label %282

282:                                              ; preds = %279
  call void @_ZdaPv(i8* nonnull %280) #11
  br label %283

283:                                              ; preds = %279, %282
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #8
  %284 = load i64, i64* %54, align 8
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %289, label %286

286:                                              ; preds = %283
  %287 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %287) #11
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %52, align 8
  %288 = bitcast %"union.absl::container_internal::map_slot_type.423"** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 32, i1 false) #8
  br label %289

289:                                              ; preds = %283, %286
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #8
  call void @_ZN4quic14QuicDataWriterD1Ev(%"class.quic::QuicDataWriter"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8
  br label %290

290:                                              ; preds = %1, %289
  ret void
}

declare void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"*, %"class.quic::QuicConnection"*) unnamed_addr #1

declare void @_ZN4quic14QuicDataWriterC1EmPc(%"class.quic::QuicDataWriter"*, i64, i8*) unnamed_addr #1

declare zeroext i1 @_ZN4quic14QuicDataWriter13WriteVarInt62Em(%"class.quic::QuicDataWriter"*, i64) local_unnamed_addr #1

declare void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"*, i8*, i64, i1 zeroext, %"class.quic::QuicReferenceCountedPointer"*) local_unnamed_addr #1

declare i8* @_ZN6quiche16QuicheDataWriter4dataEv(%"class.quiche::QuicheDataWriter"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.quic::QuicRandom"* @_ZN4quic10QuicRandom11GetInstanceEv() local_unnamed_addr #1

declare i64 @_ZN4quic11HttpEncoder22SerializeSettingsFrameERKNS_13SettingsFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::SettingsFrame"* dereferenceable(40), %"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

declare i64 @_ZN4quic11HttpEncoder22SerializeGreasingFrameEPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(%"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic14QuicDataWriterD1Ev(%"class.quic::QuicDataWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21QuicSendControlStream19WritePriorityUpdateERKNS_19PriorityUpdateFrameE(%"class.quic::QuicSendControlStream"*, %"struct.quic::PriorityUpdateFrame"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicConnection::ScopedPacketFlusher", align 8
  %4 = alloca %"class.std::__1::unique_ptr.577", align 8
  %5 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %6 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = bitcast %"class.quic::QuicSendControlStream"* %0 to %"class.quic::QuicStream"*
  %8 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 0, i32 4
  %9 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %8, align 8
  %11 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %10, i64 0, i32 8
  %12 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %11, align 8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %3, %"class.quic::QuicConnection"* %12) #8
  call void @_ZN4quic21QuicSendControlStream22MaybeSendSettingsFrameEv(%"class.quic::QuicSendControlStream"* %0)
  %13 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 3
  %14 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %13, align 8
  %15 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %14, i64 0, i32 26
  %16 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %15, align 8
  %17 = icmp eq %"class.quic::Http3DebugVisitor"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.quic::Http3DebugVisitor"* %16 to void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::PriorityUpdateFrame"*)***
  %20 = load void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::PriorityUpdateFrame"*)**, void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::PriorityUpdateFrame"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::PriorityUpdateFrame"*)*, void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::PriorityUpdateFrame"*)** %20, i64 25
  %22 = load void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::PriorityUpdateFrame"*)*, void (%"class.quic::Http3DebugVisitor"*, %"struct.quic::PriorityUpdateFrame"*)** %21, align 8
  call void %22(%"class.quic::Http3DebugVisitor"* nonnull %16, %"struct.quic::PriorityUpdateFrame"* dereferenceable(40) %1) #8
  br label %23

23:                                               ; preds = %2, %18
  %24 = bitcast %"class.std::__1::unique_ptr.577"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %4, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr.577"* %4 to i64*
  store i64 0, i64* %26, align 8
  %27 = call i64 @_ZN4quic11HttpEncoder28SerializePriorityUpdateFrameERKNS_19PriorityUpdateFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::PriorityUpdateFrame"* dereferenceable(40) %1, %"class.std::__1::unique_ptr.577"* nonnull %4) #8
  %28 = icmp sgt i64 %27, -1
  br i1 %28, label %30, label %29, !prof !3

29:                                               ; preds = %23
  call void @llvm.trap() #8
  unreachable

30:                                               ; preds = %23
  %31 = load i8*, i8** %25, align 8
  %32 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %32, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %7, i8* %31, i64 %27, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %5) #8
  %33 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %32, align 8
  %34 = icmp eq %"class.quic::QuicAckListenerInterface"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %33, i64 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.533"* %41 to %"class.quic::QuicReferenceCountedImpl"*
  %43 = bitcast %"class.base::RefCountedThreadSafe.533"* %41 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %44 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %44, i64 1
  %46 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %45, align 8
  call void %46(%"class.quic::QuicReferenceCountedImpl"* nonnull %42) #8
  br label %47

47:                                               ; preds = %30, %35, %40
  %48 = load i8*, i8** %25, align 8
  store i8* null, i8** %25, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  call void @_ZdaPv(i8* nonnull %48) #11
  br label %51

51:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

declare i64 @_ZN4quic11HttpEncoder28SerializePriorityUpdateFrameERKNS_19PriorityUpdateFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::PriorityUpdateFrame"* dereferenceable(40), %"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21QuicSendControlStream10SendGoAwayEj(%"class.quic::QuicSendControlStream"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicConnection::ScopedPacketFlusher", align 8
  %4 = alloca %"struct.quic::GoAwayFrame", align 8
  %5 = alloca %"class.std::__1::unique_ptr.577", align 8
  %6 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %7 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = bitcast %"class.quic::QuicSendControlStream"* %0 to %"class.quic::QuicStream"*
  %9 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 0, i32 4
  %10 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %9, align 8
  %12 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %11, i64 0, i32 8
  %13 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %12, align 8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %3, %"class.quic::QuicConnection"* %13) #8
  call void @_ZN4quic21QuicSendControlStream22MaybeSendSettingsFrameEv(%"class.quic::QuicSendControlStream"* %0)
  %14 = bitcast %"struct.quic::GoAwayFrame"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"struct.quic::GoAwayFrame", %"struct.quic::GoAwayFrame"* %4, i64 0, i32 0
  %16 = zext i32 %1 to i64
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 3
  %18 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %17, align 8
  %19 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %18, i64 0, i32 26
  %20 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %19, align 8
  %21 = icmp eq %"class.quic::Http3DebugVisitor"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.quic::Http3DebugVisitor"* %20 to void (%"class.quic::Http3DebugVisitor"*, i32)***
  %24 = load void (%"class.quic::Http3DebugVisitor"*, i32)**, void (%"class.quic::Http3DebugVisitor"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32)*, void (%"class.quic::Http3DebugVisitor"*, i32)** %24, i64 23
  %26 = load void (%"class.quic::Http3DebugVisitor"*, i32)*, void (%"class.quic::Http3DebugVisitor"*, i32)** %25, align 8
  call void %26(%"class.quic::Http3DebugVisitor"* nonnull %20, i32 %1) #8
  br label %27

27:                                               ; preds = %2, %22
  %28 = bitcast %"class.std::__1::unique_ptr.577"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr.577"* %5 to i64*
  store i64 0, i64* %30, align 8
  %31 = call i64 @_ZN4quic11HttpEncoder20SerializeGoAwayFrameERKNS_11GoAwayFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::GoAwayFrame"* nonnull dereferenceable(8) %4, %"class.std::__1::unique_ptr.577"* nonnull %5) #8
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %27
  call void @llvm.trap() #8
  unreachable

34:                                               ; preds = %27
  %35 = load i8*, i8** %29, align 8
  %36 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %36, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %8, i8* %35, i64 %31, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %6) #8
  %37 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %36, align 8
  %38 = icmp eq %"class.quic::QuicAckListenerInterface"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %37, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %51

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe.533", %"class.base::RefCountedThreadSafe.533"* %40, i64 -2
  %46 = bitcast %"class.base::RefCountedThreadSafe.533"* %45 to %"class.quic::QuicReferenceCountedImpl"*
  %47 = bitcast %"class.base::RefCountedThreadSafe.533"* %45 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %48 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %48, i64 1
  %50 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %49, align 8
  call void %50(%"class.quic::QuicReferenceCountedImpl"* nonnull %46) #8
  br label %51

51:                                               ; preds = %34, %39, %44
  %52 = load i8*, i8** %29, align 8
  store i8* null, i8** %29, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @_ZdaPv(i8* nonnull %52) #11
  br label %55

55:                                               ; preds = %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare i64 @_ZN4quic11HttpEncoder20SerializeGoAwayFrameERKNS_11GoAwayFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::GoAwayFrame"* dereferenceable(8), %"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21QuicSendControlStreamD2Ev(%"class.quic::QuicSendControlStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN4quic21QuicSendControlStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type.423"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.quic::QuicSendControlStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStreamD2Ev(%"class.quic::QuicStream"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21QuicSendControlStreamD0Ev(%"class.quic::QuicSendControlStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN4quic21QuicSendControlStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.quic::QuicSendControlStream", %"class.quic::QuicSendControlStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type.423"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.quic::QuicSendControlStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStreamD2Ev(%"class.quic::QuicStream"* %12) #8
  %13 = bitcast %"class.quic::QuicSendControlStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic21QuicSendControlStream15OnDataAvailableEv(%"class.quic::QuicSendControlStream"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic10QuicStream9OnFinReadEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream16AddBytesConsumedEm(%"class.quic::QuicStream"*, i64) unnamed_addr #1

declare void @_ZN4quic10QuicStream5ResetENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicStream"*, i32) unnamed_addr #1

declare void @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QuicStream"*, i32, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4quic10QuicStream2idEv(%"class.quic::QuicStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStream", %"class.quic::QuicStream"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZNK4quic10QuicStream7versionEv(%"struct.quic::ParsedQuicVersion"* sret, %"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream13OnStreamFrameERKNS_15QuicStreamFrameE(%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic10QuicStream10OnCanWriteEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE(%"class.quic::QuicStream"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic10QuicStream28MaybeSendPriorityUpdateFrameEv(%"class.quic::QuicStream"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic10QuicStream19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE(%"class.quic::QuicStream"*, %"struct.quic::QuicWindowUpdateFrame"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic10QuicStream11StopReadingEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic10QuicStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm(%"class.quic::QuicStream"*, i64, i64, i1 zeroext, i64, i64, i64*) unnamed_addr #1

declare void @_ZN4quic10QuicStream26OnStreamFrameRetransmittedEmmb(%"class.quic::QuicStream"*, i64, i64, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic10QuicStream17OnStreamFrameLostEmmb(%"class.quic::QuicStream"*, i64, i64, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN4quic10QuicStream20RetransmitStreamDataEmmbNS_16TransmissionTypeE(%"class.quic::QuicStream"*, i64, i64, i1 zeroext, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZNK4quic10QuicStream24HasPendingRetransmissionEv(%"class.quic::QuicStream"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"*, i64, i64, %"class.quic::QuicReferenceCountedPointer"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic10QuicStream7OnCloseEv(%"class.quic::QuicStream"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic10QuicStream17OnCanWriteNewDataEv(%"class.quic::QuicStream"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic10QuicStream20OnStreamDataConsumedEm(%"class.quic::QuicStream"*, i64) unnamed_addr #1

declare void @_ZN4quic10QuicStream26WritePendingRetransmissionEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream16OnDeadlinePassedEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream14CloseWriteSideEv(%"class.quic::QuicStream"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEEC2ERKSF_RKSE_(%"class.absl::container_internal::raw_hash_set.422"*, %"class.absl::container_internal::raw_hash_set.422"* dereferenceable(40), %"class.std::__1::allocator.433"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %4, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 1
  %6 = bitcast %"union.absl::container_internal::map_slot_type.423"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %1, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = icmp eq i64 %8, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = add nsw i64 %8, -1
  %14 = sdiv i64 %13, 7
  %15 = add i64 %14, %8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = tail call i64 @llvm.ctlz.i64(i64 %15, i1 true) #8, !range !12
  %19 = lshr i64 -1, %18
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i64 [ %19, %17 ], [ 1, %12 ]
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.422"* %0, i64 %21) #8
  br label %22

22:                                               ; preds = %3, %20
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %1, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8, !nonnull !13
  %25 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %1, i64 0, i32 1
  %26 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %25, align 8
  %27 = load i8, i8* %24, align 1
  %28 = icmp slt i8 %27, -1
  br i1 %28, label %29, label %44

29:                                               ; preds = %22, %29
  %30 = phi %"union.absl::container_internal::map_slot_type.423"* [ %41, %29 ], [ %26, %22 ]
  %31 = phi i8* [ %40, %29 ], [ %24, %22 ]
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1
  %34 = icmp slt <16 x i8> %33, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %35 = bitcast <16 x i1> %34 to i16
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %36, 1
  %38 = tail call i32 @llvm.cttz.i32(i32 %37, i1 true) #8, !range !7
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %31, i64 %39
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %30, i64 %39
  %42 = load i8, i8* %40, align 1
  %43 = icmp slt i8 %42, -1
  br i1 %43, label %29, label %44

44:                                               ; preds = %29, %22
  %45 = phi %"union.absl::container_internal::map_slot_type.423"* [ %26, %22 ], [ %41, %29 ]
  %46 = phi i8* [ %24, %22 ], [ %40, %29 ]
  %47 = phi i8 [ %27, %22 ], [ %42, %29 ]
  %48 = icmp eq i8 %47, -1
  %49 = icmp eq i8* %46, null
  %50 = or i1 %48, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %44
  %52 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %53 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 3
  %54 = icmp sgt i8 %47, -1
  br i1 %54, label %61, label %55, !prof !3

55:                                               ; preds = %151, %51
  tail call void @llvm.trap() #8
  unreachable

56:                                               ; preds = %144, %44
  %57 = load i64, i64* %7, align 8
  store i64 %57, i64* %9, align 8
  %58 = load i64, i64* %7, align 8
  %59 = load i64, i64* %10, align 8
  %60 = sub i64 %59, %58
  store i64 %60, i64* %10, align 8
  ret void

61:                                               ; preds = %51, %151
  %62 = phi i8* [ %149, %151 ], [ %46, %51 ]
  %63 = phi %"union.absl::container_internal::map_slot_type.423"* [ %146, %151 ], [ %45, %51 ]
  %64 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %63, i64 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %52, %65
  %67 = zext i64 %66 to i128
  %68 = mul nuw i128 %67, 11376068507788127593
  %69 = lshr i128 %68, 64
  %70 = xor i128 %69, %68
  %71 = trunc i128 %70 to i64
  %72 = load i8*, i8** %4, align 8
  %73 = load i64, i64* %53, align 8
  %74 = lshr i64 %71, 7
  %75 = ptrtoint i8* %72 to i64
  %76 = lshr i64 %75, 12
  %77 = xor i64 %74, %76
  %78 = and i64 %77, %73
  %79 = getelementptr inbounds i8, i8* %72, i64 %78
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1
  %82 = icmp slt <16 x i8> %81, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %83 = bitcast <16 x i1> %82 to i16
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %61, %85
  %86 = phi i64 [ %90, %85 ], [ %78, %61 ]
  %87 = phi i64 [ %88, %85 ], [ 0, %61 ]
  %88 = add i64 %87, 16
  %89 = add i64 %88, %86
  %90 = and i64 %89, %73
  %91 = getelementptr inbounds i8, i8* %72, i64 %90
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1
  %94 = icmp slt <16 x i8> %93, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %95 = bitcast <16 x i1> %94 to i16
  %96 = icmp eq i16 %95, 0
  br i1 %96, label %85, label %97

97:                                               ; preds = %85, %61
  %98 = phi i64 [ %78, %61 ], [ %90, %85 ]
  %99 = phi i16 [ %83, %61 ], [ %95, %85 ]
  %100 = zext i16 %99 to i32
  %101 = tail call i32 @llvm.cttz.i32(i32 %100, i1 false) #8, !range !7
  %102 = zext i32 %101 to i64
  %103 = add i64 %98, %102
  %104 = and i64 %103, %73
  %105 = trunc i128 %70 to i8
  %106 = and i8 %105, 127
  %107 = getelementptr inbounds i8, i8* %72, i64 %104
  store i8 %106, i8* %107, align 1
  %108 = load i8*, i8** %4, align 8
  %109 = add i64 %104, -15
  %110 = load i64, i64* %53, align 8
  %111 = and i64 %109, %110
  %112 = and i64 %110, 15
  %113 = add i64 %111, %112
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  store i8 %106, i8* %114, align 1
  %115 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %5, align 8
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %115, i64 %104, i32 0, i32 0
  %117 = load i64, i64* %64, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %115, i64 %104, i32 0, i32 1
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %63, i64 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %118, align 8
  %121 = load i8, i8* %62, align 1
  %122 = icmp sgt i8 %121, -1
  br i1 %122, label %124, label %123, !prof !3

123:                                              ; preds = %97
  tail call void @llvm.trap() #8
  unreachable

124:                                              ; preds = %97
  %125 = getelementptr inbounds i8, i8* %62, i64 1
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %63, i64 1
  %127 = load i8, i8* %125, align 1
  %128 = icmp slt i8 %127, -1
  br i1 %128, label %129, label %144

129:                                              ; preds = %124, %129
  %130 = phi %"union.absl::container_internal::map_slot_type.423"* [ %141, %129 ], [ %126, %124 ]
  %131 = phi i8* [ %140, %129 ], [ %125, %124 ]
  %132 = bitcast i8* %131 to <16 x i8>*
  %133 = load <16 x i8>, <16 x i8>* %132, align 1
  %134 = icmp slt <16 x i8> %133, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %135 = bitcast <16 x i1> %134 to i16
  %136 = zext i16 %135 to i32
  %137 = add nuw nsw i32 %136, 1
  %138 = tail call i32 @llvm.cttz.i32(i32 %137, i1 true) #8, !range !7
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %131, i64 %139
  %141 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %130, i64 %139
  %142 = load i8, i8* %140, align 1
  %143 = icmp slt i8 %142, -1
  br i1 %143, label %129, label %144

144:                                              ; preds = %129, %124
  %145 = phi i8* [ %125, %124 ], [ %140, %129 ]
  %146 = phi %"union.absl::container_internal::map_slot_type.423"* [ %126, %124 ], [ %141, %129 ]
  %147 = phi i8 [ %127, %124 ], [ %142, %129 ]
  %148 = icmp eq i8 %147, -1
  %149 = select i1 %148, i8* null, i8* %145, !prof !8
  %150 = icmp eq i8* %149, null
  br i1 %150, label %56, label %151

151:                                              ; preds = %144
  %152 = load i8, i8* %149, align 1
  %153 = icmp sgt i8 %152, -1
  br i1 %153, label %61, label %55, !prof !3
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.422"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #11
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.423"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #8
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %94, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %90
  br i1 %24, label %94, label %93

28:                                               ; preds = %25, %90
  %29 = phi i64 [ 0, %25 ], [ %91, %90 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %90

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %34, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %26, %36
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #8, !range !7
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %5, align 8
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %86, i64 %75
  %88 = bitcast %"union.absl::container_internal::map_slot_type.423"* %87 to i8*
  %89 = bitcast %"union.absl::container_internal::map_slot_type.423"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #8
  br label %90

90:                                               ; preds = %28, %68
  %91 = add nuw i64 %29, 1
  %92 = icmp eq i64 %91, %8
  br i1 %92, label %27, label %28

93:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #11
  br label %94

94:                                               ; preds = %2, %27, %93
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @llvm.assume(i1) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind
declare void @_ZN4quic10QuicStreamD2Ev(%"class.quic::QuicStream"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.422"*, i64) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #8, !range !7
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.422"* %0, i64 1) #8
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.422"* %0) #8
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.422"* %0, i64 %58) #8
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #8, !range !7
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.422"*) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #8
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %121, %1
  %12 = phi i64 [ 0, %1 ], [ %123, %121 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.422", %"class.absl::container_internal::raw_hash_set.422"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %121
  %20 = phi i64 [ %6, %8 ], [ %124, %121 ]
  %21 = phi i64 [ 0, %8 ], [ %123, %121 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %121

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %28, i64 %21, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %10, %30
  %32 = zext i64 %31 to i128
  %33 = mul nuw i128 %32, 11376068507788127593
  %34 = lshr i128 %33, 64
  %35 = xor i128 %34, %33
  %36 = trunc i128 %35 to i64
  %37 = lshr i64 %36, 7
  %38 = lshr i64 %27, 12
  %39 = xor i64 %37, %38
  %40 = and i64 %39, %20
  %41 = getelementptr inbounds i8, i8* %22, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp slt <16 x i8> %43, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %26, %47
  %48 = phi i64 [ %52, %47 ], [ %40, %26 ]
  %49 = phi i64 [ %50, %47 ], [ 0, %26 ]
  %50 = add i64 %49, 16
  %51 = add i64 %50, %48
  %52 = and i64 %51, %20
  %53 = getelementptr inbounds i8, i8* %22, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = icmp slt <16 x i8> %55, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %47, label %59

59:                                               ; preds = %47, %26
  %60 = phi i64 [ %40, %26 ], [ %52, %47 ]
  %61 = phi i16 [ %45, %26 ], [ %57, %47 ]
  %62 = zext i16 %61 to i32
  %63 = tail call i32 @llvm.cttz.i32(i32 %62, i1 false) #8, !range !7
  %64 = zext i32 %63 to i64
  %65 = add i64 %60, %64
  %66 = and i64 %65, %20
  %67 = sub i64 %66, %40
  %68 = sub i64 %21, %40
  %69 = xor i64 %67, %68
  %70 = and i64 %69, %20
  %71 = icmp ult i64 %70, 16
  br i1 %71, label %72, label %82, !prof !3

72:                                               ; preds = %59
  %73 = trunc i128 %35 to i8
  %74 = and i8 %73, 127
  store i8 %74, i8* %23, align 1
  %75 = load i8*, i8** %2, align 8
  %76 = add i64 %21, -15
  %77 = load i64, i64* %4, align 8
  %78 = and i64 %77, %76
  %79 = and i64 %77, 15
  %80 = add i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  store i8 %74, i8* %81, align 1
  br label %121

82:                                               ; preds = %59
  %83 = getelementptr inbounds i8, i8* %22, i64 %66
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, -128
  %86 = trunc i128 %35 to i8
  %87 = and i8 %86, 127
  store i8 %87, i8* %83, align 1
  %88 = load i8*, i8** %2, align 8
  %89 = add i64 %66, -15
  %90 = load i64, i64* %4, align 8
  %91 = and i64 %90, %89
  %92 = and i64 %90, 15
  %93 = add i64 %91, %92
  %94 = getelementptr inbounds i8, i8* %88, i64 %93
  store i8 %87, i8* %94, align 1
  %95 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %9, align 8
  br i1 %85, label %96, label %110

96:                                               ; preds = %82
  %97 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %95, i64 %66
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %95, i64 %21
  %99 = bitcast %"union.absl::container_internal::map_slot_type.423"* %97 to i8*
  %100 = bitcast %"union.absl::container_internal::map_slot_type.423"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #8
  %101 = load i8*, i8** %2, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %21
  store i8 -128, i8* %102, align 1
  %103 = load i8*, i8** %2, align 8
  %104 = add i64 %21, -15
  %105 = load i64, i64* %4, align 8
  %106 = and i64 %105, %104
  %107 = and i64 %105, 15
  %108 = add i64 %106, %107
  %109 = getelementptr inbounds i8, i8* %103, i64 %108
  store i8 -128, i8* %109, align 1
  br label %121

110:                                              ; preds = %82
  %111 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %95, i64 %21
  %112 = bitcast %"union.absl::container_internal::map_slot_type.423"* %111 to i8*
  %113 = bitcast %"union.absl::container_internal::map_slot_type.423"* %111 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 8
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %95, i64 %66
  %116 = bitcast %"union.absl::container_internal::map_slot_type.423"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %116, i64 16, i1 false) #8
  %117 = load %"union.absl::container_internal::map_slot_type.423"*, %"union.absl::container_internal::map_slot_type.423"** %9, align 8
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.423", %"union.absl::container_internal::map_slot_type.423"* %117, i64 %66
  %119 = bitcast %"union.absl::container_internal::map_slot_type.423"* %118 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %119, align 8
  %120 = add i64 %21, -1
  br label %121

121:                                              ; preds = %72, %110, %96, %19
  %122 = phi i64 [ %21, %19 ], [ %21, %72 ], [ %21, %96 ], [ %120, %110 ]
  %123 = add i64 %122, 1
  %124 = load i64, i64* %4, align 8
  %125 = icmp eq i64 %123, %124
  br i1 %125, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE16try_emplace_implImJEEENSB_INS0_12raw_hash_setIS3_S6_S9_SE_E8iteratorEbEEOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE16try_emplace_implImJEEENSB_INS0_12raw_hash_setIS3_S6_S9_SE_E8iteratorEbEEOT_DpOT0_"}
!7 = !{i32 0, i32 33}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE16try_emplace_implIRSC_JEEENSB_INS0_12raw_hash_setIS3_S6_S9_SE_E8iteratorEbEEOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyImmEENS_13hash_internal4HashImEENSt3__18equal_toImEENS7_9allocatorINS7_4pairIKmmEEEEE16try_emplace_implIRSC_JEEENSB_INS0_12raw_hash_setIS3_S6_S9_SE_E8iteratorEbEEOT_DpOT0_"}
!12 = !{i64 0, i64 65}
!13 = !{}
