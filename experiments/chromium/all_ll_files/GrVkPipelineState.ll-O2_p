; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkPipelineState.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkPipelineState.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrVkPipelineState = type <{ %class.sk_sp, %class.GrResourceHandle, [4 x i8], %class.SkSTArray.398, %"struct.GrVkPipelineState::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, [4 x i8], %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.469", %"class.std::__1::vector.475", %class.GrVkPipelineStateDataManager, i32, [4 x i8] }>
%class.sk_sp = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type { %class.GrVkManagedResource, %struct.VkPipeline_T*, %struct.VkPipelineLayout_T* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.VkPipeline_T = type opaque
%struct.VkPipelineLayout_T = type opaque
%class.GrResourceHandle = type { i32 }
%class.SkSTArray.398 = type { %class.SkAlignedSTStorage.399, %class.SkTArray.400 }
%class.SkAlignedSTStorage.399 = type { [32 x i8] }
%class.SkTArray.400 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%struct.VkSampler_T = type opaque
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkPipelineState::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.SkISize = type { i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle.452, %class.GrResourceHandle.452 }
%class.GrResourceHandle.452 = type { i32 }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.456 }
%class.SkTArray.456 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp.83 }
%class.sk_sp.83 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.457, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.457 = type { %class.SkAlignedSTStorage.458, %class.SkTArray.459 }
%class.SkAlignedSTStorage.458 = type { [8 x i8] }
%class.SkTArray.459 = type { %"class.std::__1::unique_ptr.460"*, i64 }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle.452, %class.GrResourceHandle.452 }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"class.std::__1::unique_ptr.477"*, %"class.std::__1::unique_ptr.477"*, %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.82, %class.SkTArray.480 }
%class.SkTArray.82 = type { %class.SkString*, i64 }
%class.SkTArray.480 = type { %"class.std::__1::unique_ptr.477"*, i64 }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.std::__1::unique_ptr.477"* }
%class.GrVkPipelineStateDataManager = type <{ %class.GrUniformDataManager.base, [7 x i8], %class.sk_sp.406, i8, [7 x i8] }>
%class.GrUniformDataManager.base = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray.489, %class.SkAutoMalloc, i8 }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.489 = type { %"struct.GrUniformDataManager::Uniform"*, i64 }
%"struct.GrUniformDataManager::Uniform" = type { i32 }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr.490", i64 }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { i8* }
%class.sk_sp.406 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.128, [4 x i8] }>
%union.anon.128 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.129, i8* }
%class.sk_sp.129 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.1, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.42", %"class.std::__1::shared_ptr.42", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.44", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.50" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.14", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.16" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.41"* }
%"class.std::__1::vector.41" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.42" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.42", %"class.std::__1::vector.494", i8, %"class.std::__1::vector.502", %"class.std::__1::forward_list", %class.SkTHashMap.515, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.494" = type { %"class.std::__1::__vector_base.495" }
%"class.std::__1::__vector_base.495" = type { %"class.std::__1::unique_ptr.496"*, %"class.std::__1::unique_ptr.496"*, %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.std::__1::unique_ptr.496"* }
%"class.std::__1::vector.502" = type { %"class.std::__1::__vector_base.503" }
%"class.std::__1::__vector_base.503" = type { %"class.std::__1::unique_ptr.504"*, %"class.std::__1::unique_ptr.504"*, %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.std::__1::unique_ptr.504"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.515 = type { %class.SkTHashTable.516 }
%class.SkTHashTable.516 = type { i32, i32, %class.SkAutoTArray.517 }
%class.SkAutoTArray.517 = type { %"class.std::__1::unique_ptr.518" }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.607" }
%"struct.std::__1::pair.607" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.42", %"class.std::__1::shared_ptr.43" }
%"class.std::__1::shared_ptr.43" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.38", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i64*, i64*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %class.sk_sp.124, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.168", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.61", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.60 }
%class.sk_sp.60 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.71, %class.SkTArray.80, %class.SkTArray.82, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.64"*, i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.82, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.589" }
%"struct.std::__1::pair.589" = type { i32, i32 }
%class.SkTHashMap.71 = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.590" }
%"struct.std::__1::pair.590" = type { i32, %class.SkTArray.591* }
%class.SkTArray.591 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.80 = type { %"class.std::__1::unique_ptr.81"*, i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.591, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.96 }
%class.SkFibBlockSizes.96 = type { i32 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.124 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.138, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.156, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.130 }
%class.SkTHashTable.130 = type { i32, i32, %class.SkAutoTArray.131 }
%class.SkAutoTArray.131 = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.138 = type { %class.SkTHashTable.139 }
%class.SkTHashTable.139 = type { i32, i32, %class.SkAutoTArray.140 }
%class.SkAutoTArray.140 = type { %"class.std::__1::unique_ptr.141" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.147, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.147 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.148" }
%"struct.std::__1::atomic.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.153, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.153 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.154 }
%class.sk_sp.154 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.155, void (i8*)*, i8* }
%class.SkNVRefCnt.155 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.156 = type { %class.SkTHashTable.157 }
%class.SkTHashTable.157 = type { i32, i32, %class.SkAutoTArray.158 }
%class.SkAutoTArray.158 = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.171, %class.sk_sp.171 }
%class.sk_sp.171 = type { %class.GrGpuBuffer* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.193 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.193 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.194, %class.sk_sp.338, %class.sk_sp.339, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.436, %class.SkSTArray.436, %class.SkTArray.439, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.446" }
%class.sk_sp.194 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.195", %"class.GrVkInterface::VkPtr.196", %"class.GrVkInterface::VkPtr.197", %"class.GrVkInterface::VkPtr.198", %"class.GrVkInterface::VkPtr.199", %"class.GrVkInterface::VkPtr.200", %"class.GrVkInterface::VkPtr.201", %"class.GrVkInterface::VkPtr.202", %"class.GrVkInterface::VkPtr.203", %"class.GrVkInterface::VkPtr.204", %"class.GrVkInterface::VkPtr.205", %"class.GrVkInterface::VkPtr.206", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.195" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.196" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.197" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.198" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.199" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.200" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.201" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.202" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.203" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.204" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.205" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.206" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.207" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.208" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.209" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.210" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.211" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.212" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.213" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.214" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.215" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.216" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.217" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.218" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.219" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.220" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.221" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.222" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.223" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.224" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.225" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.226" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.227" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.228" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.229" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.230" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.231" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.232" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.233" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.234" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.235" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.236" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.237" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.239" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.240" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.241" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.242" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.243" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.245" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.246" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.247" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.248" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.249" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.250" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.251" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.252" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.253" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.254" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkRenderPass_T = type opaque
%"class.GrVkInterface::VkPtr.255" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.256" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.257" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.258" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.259" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.GrVkInterface::VkPtr.260" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.261" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.262" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.263" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.264" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.265" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.266" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.267" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.268" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.269" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.270" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.271" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.273" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.274" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.275" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.276" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.277" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.278" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.280" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.281" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.282" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.283" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.286" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.287" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.289" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.290" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.291" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.292" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.323" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.324" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.331" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.332" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.335" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.336" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.338 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.339 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.347, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.340, %"class.std::__1::unique_ptr.341", i32, [4 x i8] }>
%class.SkTDArray.340 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.347 = type { %class.SkAlignedSTStorage.348, %class.SkTArray.349 }
%class.SkAlignedSTStorage.348 = type { [48 x i8] }
%class.SkTArray.349 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.350, %class.SkSTArray.351, %class.SkTArray.357, %class.SkSTArray.358, %class.SkMutex, %class.SkSTArray.358, %class.SkTDynamicHash.361, %class.SkTDynamicHash.370, %class.sk_sp.379, %class.SkSTArray.388, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.350 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp, %class.GrVkRenderPass* }
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.351 = type { %class.SkAlignedSTStorage.352, %class.SkTArray.353 }
%class.SkAlignedSTStorage.352 = type { [224 x i8] }
%class.SkTArray.353 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.354, i32, [4 x i8] }>
%class.SkSTArray.354 = type { %class.SkAlignedSTStorage.355, %class.SkTArray.356 }
%class.SkAlignedSTStorage.355 = type { [32 x i8] }
%class.SkTArray.356 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.357 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.358 = type { %class.SkAlignedSTStorage.359, %class.SkTArray.360 }
%class.SkAlignedSTStorage.359 = type { [32 x i8] }
%class.SkTArray.360 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.361 = type { %class.SkTHashTable.362 }
%class.SkTHashTable.362 = type { i32, i32, %class.SkAutoTArray.363 }
%class.SkAutoTArray.363 = type { %"class.std::__1::unique_ptr.364" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.370 = type { %class.SkTHashTable.371 }
%class.SkTHashTable.371 = type { i32, i32, %class.SkAutoTArray.372 }
%class.SkAutoTArray.372 = type { %"class.std::__1::unique_ptr.373" }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.379 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.380, %class.SkTInternalLList }
%class.SkTHashTable.380 = type { i32, i32, %class.SkAutoTArray.381 }
%class.SkAutoTArray.381 = type { %"class.std::__1::unique_ptr.382" }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.388 = type { %class.SkAlignedSTStorage.389, %class.SkTArray.390 }
%class.SkAlignedSTStorage.389 = type { [32 x i8] }
%class.SkTArray.390 = type { %"class.std::__1::unique_ptr.391"*, i64 }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.394, %class.SkSTArray.395, %class.SkSTArray.398 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.394 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.SkSTArray.395 = type { %class.SkAlignedSTStorage.396, %class.SkTArray.397 }
%class.SkAlignedSTStorage.396 = type { [16 x i8] }
%class.SkTArray.397 = type { i32*, i64 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.404", %class.GrGpu* }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.407" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.406, i8*, i64 }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.433, %struct.VkFence_T*, %class.SkTArray.435 }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.412, %class.SkSTArray.416, %class.SkSTArray.419, %class.SkSTArray.423, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.427, %class.SkSTArray.430, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.412 = type { %class.SkAlignedSTStorage.413, %class.SkTArray.414 }
%class.SkAlignedSTStorage.413 = type { [256 x i8] }
%class.SkTArray.414 = type { %class.sk_sp.415*, i64 }
%class.sk_sp.415 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.416 = type { %class.SkAlignedSTStorage.417, %class.SkTArray.418 }
%class.SkAlignedSTStorage.417 = type { [256 x i8] }
%class.SkTArray.418 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.419 = type { %class.SkAlignedSTStorage.420, %class.SkTArray.421 }
%class.SkAlignedSTStorage.420 = type { [128 x i8] }
%class.SkTArray.421 = type { %class.sk_sp.422*, i64 }
%class.sk_sp.422 = type { %class.GrBuffer* }
%class.SkSTArray.423 = type { %class.SkAlignedSTStorage.424, %class.SkTArray.425 }
%class.SkAlignedSTStorage.424 = type { [128 x i8] }
%class.SkTArray.425 = type { %class.gr_sp.426*, i64 }
%class.gr_sp.426 = type { %class.GrSurface* }
%class.SkSTArray.427 = type { %class.SkAlignedSTStorage.428, %class.SkTArray.429 }
%class.SkAlignedSTStorage.428 = type { [56 x i8] }
%class.SkTArray.429 = type { %struct.VkBufferMemoryBarrier*, i64 }
%class.SkSTArray.430 = type { %class.SkAlignedSTStorage.431, %class.SkTArray.432 }
%class.SkAlignedSTStorage.431 = type { [144 x i8] }
%class.SkTArray.432 = type { %struct.VkImageMemoryBarrier*, i64 }
%class.SkTArray.433 = type { %"class.std::__1::unique_ptr.434"*, i64 }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%class.SkTArray.435 = type { %class.sk_sp.154*, i64 }
%class.SkSTArray.436 = type { %class.SkAlignedSTStorage.437, %class.SkTArray.438 }
%class.SkAlignedSTStorage.437 = type { [8 x i8] }
%class.SkTArray.438 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.439 = type { %"class.std::__1::unique_ptr.440"*, i64 }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [128 x i8] }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.524, i32, [4 x i8] }
%union.anon.524 = type { %struct.anon.525 }
%struct.anon.525 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.537, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.527, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.527 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.528, %class.sk_sp.529, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.531" }
%class.SkNVRefCnt.528 = type { %"struct.std::__1::atomic" }
%class.sk_sp.529 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.529, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.531" = type { %"struct.std::__1::__atomic_base.532" }
%"struct.std::__1::__atomic_base.532" = type { %"struct.std::__1::__atomic_base.533" }
%"struct.std::__1::__atomic_base.533" = type { %"struct.std::__1::__cxx_atomic_impl.534" }
%"struct.std::__1::__cxx_atomic_impl.534" = type { %"struct.std::__1::__cxx_atomic_base_impl.535" }
%"struct.std::__1::__cxx_atomic_base_impl.535" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.536 }
%union.anon.536 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.537 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.538, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.538 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.539"*, [24 x i8] }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.545, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.545 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrVkCommandBuffer = type <{ i32 (...)**, %class.SkSTArray.412, %class.SkSTArray.416, %class.SkSTArray.419, %class.SkSTArray.423, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.427, %class.SkSTArray.430, i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"class.GrGLSLFragmentProcessor::ParallelRange" = type { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* }
%"class.GrGLSLFragmentProcessor::ParallelIter" = type { %"class.GrFragmentProcessor::CIter", %"class.GrGLSLFragmentProcessor::Iter" }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.546 }
%class.SkSTArray.546 = type { %class.SkAlignedSTStorage.547, %class.SkTArray.548 }
%class.SkAlignedSTStorage.547 = type { [32 x i8] }
%class.SkTArray.548 = type { %class.GrFragmentProcessor**, i64 }
%"class.GrGLSLFragmentProcessor::Iter" = type { %class.SkSTArray.549 }
%class.SkSTArray.549 = type { %class.SkAlignedSTStorage.550, %class.SkTArray.551 }
%class.SkAlignedSTStorage.550 = type { [32 x i8] }
%class.SkTArray.551 = type { %class.GrGLSLFragmentProcessor**, i64 }
%"class.GrGLSLFragmentProcessor::ParallelIterEnd" = type { i8 }
%"struct.std::__1::pair" = type <{ %class.sk_sp.406, i8, [7 x i8] }>
%class.GrUniformDataManager = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray.489, %class.SkAutoMalloc, i8, [7 x i8] }>
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.613", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.GrVkBuffer = type { %class.GrGpuBuffer, %struct.VkBuffer_T*, %struct.GrVkAlloc, %class.GrVkDescriptorSet* }
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%class.SkAutoSTArray.553 = type { i32, %struct.SamplerBindings*, [192 x i8] }
%struct.SamplerBindings = type { %class.GrSamplerState, %class.GrVkTexture* }
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%class.GrVkTexture = type { %class.GrTexture.base, %class.sk_sp.554, %class.SkLRUCache.568, %class.GrSurface }
%class.GrTexture.base = type <{ i32 (...)**, i32, i32, i32 }>
%class.sk_sp.554 = type { %class.GrVkAttachment* }
%class.GrVkAttachment = type { %class.GrAttachment.base, %class.GrVkImage, %class.sk_sp.566, %class.sk_sp.566, %class.gr_sp.567, %class.gr_sp.567 }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrVkImage = type { i32 (...)**, %struct.GrVkImageInfo, i32, %class.sk_sp.555, i8, %"class.GrVkImage::Resource"* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%class.sk_sp.555 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.556, i32, i8, [3 x i8] }>
%union.anon.556 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.557", %"struct.std::__1::atomic.561" }
%"struct.std::__1::atomic.557" = type { %"struct.std::__1::__atomic_base.558" }
%"struct.std::__1::__atomic_base.558" = type { %"struct.std::__1::__cxx_atomic_impl.559" }
%"struct.std::__1::__cxx_atomic_impl.559" = type { %"struct.std::__1::__cxx_atomic_base_impl.560" }
%"struct.std::__1::__cxx_atomic_base_impl.560" = type { i32 }
%"struct.std::__1::atomic.561" = type { %"struct.std::__1::__atomic_base.562" }
%"struct.std::__1::__atomic_base.562" = type { %"struct.std::__1::__atomic_base.563" }
%"struct.std::__1::__atomic_base.563" = type { %"struct.std::__1::__cxx_atomic_impl.564" }
%"struct.std::__1::__cxx_atomic_impl.564" = type { %"struct.std::__1::__cxx_atomic_base_impl.565" }
%"struct.std::__1::__cxx_atomic_base_impl.565" = type { i32 }
%"class.GrVkImage::Resource" = type <{ %class.GrTextureResource, %class.GrVkGpu*, %struct.VkImage_T*, %struct.GrVkAlloc, i32, [4 x i8] }>
%class.GrTextureResource = type { %class.GrManagedResource.base, %class.sk_sp.154 }
%class.sk_sp.566 = type { %class.GrVkImageView* }
%class.GrVkImageView = type { %class.GrVkManagedResource, %struct.VkImageView_T*, %class.GrVkSamplerYcbcrConversion* }
%class.gr_sp.567 = type { %class.GrVkDescriptorSet* }
%class.SkLRUCache.568 = type { i32, %class.SkTHashTable.569, %class.SkTInternalLList.577 }
%class.SkTHashTable.569 = type { i32, i32, %class.SkAutoTArray.570 }
%class.SkAutoTArray.570 = type { %"class.std::__1::unique_ptr.571" }
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.SkTHashTable<SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry *, const GrSamplerState, SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry *, const GrSamplerState, SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList.577 = type { %"struct.SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry"*, %"struct.SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry"* }
%"struct.SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry" = type opaque
%"class.std::__1::function.578" = type { %"class.std::__1::__function::__policy_func.581" }
%"class.std::__1::__function::__policy_func.581" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.582", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.582" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrTextureEffect*)* }
%class.GrTextureEffect = type { %class.GrFragmentProcessor.base, [4 x i8], %class.GrSurfaceProxyView, %class.GrSamplerState, [4 x float], %struct.SkRect, %struct.SkRect, [2 x i16] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.457, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>

$_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spIK17GrManagedResourceELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE = comdat any

$_ZN8SkTArrayIPK11GrVkSamplerLb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

@_ZTV28GrVkPipelineStateDataManager = external unnamed_addr constant { [26 x i8*] }, align 8
@_ZTV20GrUniformDataManager = external unnamed_addr constant { [26 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN17GrVkPipelineState18setAndBindTexturesEP7GrVkGpuRK19GrGeometryProcessorRK10GrPipelinePKPK14GrSurfaceProxyP17GrVkCommandBufferE3$_0FvRK15GrTextureEffectEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN17GrVkPipelineStateC1EP7GrVkGpu5sk_spIK12GrVkPipelineERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEERK27GrGLSLBuiltinUniformHandlesRK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjbSK_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSL_14default_deleteISN_EEEENSM_I19GrGLSLXferProcessorNSO_ISR_EEEENSL_6vectorINSM_I23GrGLSLFragmentProcessorNSO_ISV_EEEENSL_9allocatorISX_EEEE = hidden unnamed_addr alias void (%class.GrVkPipelineState*, %class.GrVkGpu*, %class.sk_sp*, %class.GrResourceHandle*, %struct.GrGLSLBuiltinUniformHandles*, %class.GrTBlockList*, i32, i1, %class.GrTBlockList*, i64, i64, %"class.std::__1::vector.475"*), void (%class.GrVkPipelineState*, %class.GrVkGpu*, %class.sk_sp*, %class.GrResourceHandle*, %struct.GrGLSLBuiltinUniformHandles*, %class.GrTBlockList*, i32, i1, %class.GrTBlockList*, i64, i64, %"class.std::__1::vector.475"*)* @_ZN17GrVkPipelineStateC2EP7GrVkGpu5sk_spIK12GrVkPipelineERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEERK27GrGLSLBuiltinUniformHandlesRK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjbSK_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSL_14default_deleteISN_EEEENSM_I19GrGLSLXferProcessorNSO_ISR_EEEENSL_6vectorINSM_I23GrGLSLFragmentProcessorNSO_ISV_EEEENSL_9allocatorISX_EEEE
@_ZN17GrVkPipelineStateD1Ev = hidden unnamed_addr alias void (%class.GrVkPipelineState*), void (%class.GrVkPipelineState*)* @_ZN17GrVkPipelineStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkPipelineStateC2EP7GrVkGpu5sk_spIK12GrVkPipelineERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEERK27GrGLSLBuiltinUniformHandlesRK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjbSK_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSL_14default_deleteISN_EEEENSM_I19GrGLSLXferProcessorNSO_ISR_EEEENSL_6vectorINSM_I23GrGLSLFragmentProcessorNSO_ISV_EEEENSL_9allocatorISX_EEEE(%class.GrVkPipelineState*, %class.GrVkGpu* nocapture readnone, %class.sk_sp* nocapture, %class.GrResourceHandle* nocapture readonly dereferenceable(4), %struct.GrGLSLBuiltinUniformHandles* nocapture readonly dereferenceable(8), %class.GrTBlockList* dereferenceable(128), i32, i1 zeroext, %class.GrTBlockList* dereferenceable(128), i64, i64, %"class.std::__1::vector.475"* nocapture) unnamed_addr #0 align 2 {
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %14 = bitcast %class.sk_sp* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %13, align 8
  %16 = bitcast %class.GrVkPipelineState* %0 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.GrResourceHandle, %class.GrResourceHandle* %3, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 1, i32 0
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 32
  %21 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %22 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %23 = bitcast i8* %22 to i64*
  %24 = bitcast i8* %20 to i8**
  store i8* %21, i8** %24, align 8
  store i64 34359738368, i64* %23, align 8
  %25 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 0, i32 0
  store i32 -1, i32* %25, align 4
  %26 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 0, i32 1
  store i32 -1, i32* %26, align 4
  %27 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 1
  store i32 -1, i32* %27, align 4
  %28 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 5
  %29 = bitcast %struct.GrGLSLBuiltinUniformHandles* %4 to i64*
  %30 = bitcast %struct.GrGLSLBuiltinUniformHandles* %28 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 4
  %32 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 7
  %33 = bitcast %"class.std::__1::unique_ptr.453"* %32 to i64*
  store i64 %9, i64* %33, align 8
  %34 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 8
  %35 = bitcast %"class.std::__1::unique_ptr.469"* %34 to i64*
  store i64 %10, i64* %35, align 8
  %36 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 9
  %37 = bitcast %"class.std::__1::vector.475"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #5
  %38 = bitcast %"class.std::__1::vector.475"* %11 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.475"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %11, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::unique_ptr.477"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 9, i32 0, i32 1
  %45 = bitcast %"class.std::__1::unique_ptr.477"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.477"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr.477"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector.475"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #5
  %52 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10
  tail call void @_ZN28GrVkPipelineStateDataManagerC1ERK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjb(%class.GrVkPipelineStateDataManager* %52, %class.GrTBlockList* dereferenceable(128) %5, i32 %6, i1 zeroext %7) #5
  %53 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %8, i64 0, i32 0, i32 0, i64 44
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 11
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %8, i64 0, i32 0, i32 0, i64 16
  %58 = bitcast i8* %57 to %"class.GrBlockAllocator::Block"**
  %59 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %58, align 8, !noalias !2
  %60 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %8, i64 0, i32 0, i32 0, i64 40
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 8, !noalias !2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %74

64:                                               ; preds = %12, %67
  %65 = phi %"class.GrBlockAllocator::Block"* [ %73, %67 ], [ %59, %12 ]
  %66 = icmp eq %"class.GrBlockAllocator::Block"* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %64
  %68 = bitcast %"class.GrBlockAllocator::Block"* %65 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !2
  %70 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %65, i64 0, i32 4
  %71 = load i32, i32* %70, align 8, !noalias !2
  %72 = icmp eq i32 %71, 0
  %73 = inttoptr i64 %69 to %"class.GrBlockAllocator::Block"*
  br i1 %72, label %64, label %78

74:                                               ; preds = %12
  %75 = bitcast i8* %57 to %"class.GrBlockAllocator::Block"*
  %76 = ptrtoint %"class.GrBlockAllocator::Block"* %59 to i64
  %77 = icmp eq i8* %57, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %67, %74
  %79 = phi %"class.GrBlockAllocator::Block"* [ %75, %74 ], [ %65, %67 ]
  %80 = phi i64 [ %76, %74 ], [ %69, %67 ]
  %81 = phi i32 [ %62, %74 ], [ %71, %67 ]
  %82 = bitcast i8* %20 to %class.SkTArray.400*
  %83 = bitcast i8* %20 to %class.GrVkSampler***
  br label %85

84:                                               ; preds = %64, %115, %135, %125, %74
  ret void

85:                                               ; preds = %78, %135
  %86 = phi %"class.GrBlockAllocator::Block"* [ %79, %78 ], [ %139, %135 ]
  %87 = phi i64 [ %80, %78 ], [ %138, %135 ]
  %88 = phi i32 [ 32, %78 ], [ %137, %135 ]
  %89 = phi i32 [ %81, %78 ], [ %136, %135 ]
  %90 = sext i32 %88 to i64
  %91 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %86, i64 2, i32 1
  %92 = bitcast %"class.GrBlockAllocator::Block"** %91 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 %90
  %94 = bitcast i8* %93 to %class.GrVkSampler**
  %95 = load %class.GrVkSampler*, %class.GrVkSampler** %94, align 8
  %96 = icmp eq %class.GrVkSampler* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %85
  %98 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %95, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 1 monotonic
  br label %100

100:                                              ; preds = %85, %97
  tail call void @_ZN8SkTArrayIPK11GrVkSamplerLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.400* %82, i32 1, i32 1) #5
  %101 = load %class.GrVkSampler**, %class.GrVkSampler*** %83, align 8
  %102 = load i64, i64* %23, align 8
  %103 = lshr i64 %102, 1
  %104 = and i64 %103, 2147483647
  %105 = getelementptr inbounds %class.GrVkSampler*, %class.GrVkSampler** %101, i64 %104
  %106 = add i64 %102, 2
  %107 = and i64 %106, 4294967294
  %108 = and i64 %102, -4294967295
  %109 = or i64 %107, %108
  store i64 %109, i64* %23, align 8
  %110 = bitcast i8* %93 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.GrVkSampler** %105 to i64*
  store i64 %111, i64* %112, align 8
  %113 = add i32 %88, 80
  %114 = icmp sgt i32 %113, %89
  br i1 %114, label %115, label %135

115:                                              ; preds = %100
  %116 = inttoptr i64 %87 to %"class.GrBlockAllocator::Block"*
  %117 = icmp eq i64 %87, 0
  br i1 %117, label %84, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %116, i64 0, i32 0
  %120 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %119, align 8
  %121 = ptrtoint %"class.GrBlockAllocator::Block"* %120 to i64
  %122 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %116, i64 0, i32 4
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %135

125:                                              ; preds = %118, %128
  %126 = phi %"class.GrBlockAllocator::Block"* [ %134, %128 ], [ %120, %118 ]
  %127 = icmp eq %"class.GrBlockAllocator::Block"* %126, null
  br i1 %127, label %84, label %128

128:                                              ; preds = %125
  %129 = bitcast %"class.GrBlockAllocator::Block"* %126 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %126, i64 0, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 0
  %134 = inttoptr i64 %130 to %"class.GrBlockAllocator::Block"*
  br i1 %133, label %125, label %135

135:                                              ; preds = %128, %118, %100
  %136 = phi i32 [ %89, %100 ], [ %123, %118 ], [ %132, %128 ]
  %137 = phi i32 [ %113, %100 ], [ 32, %118 ], [ 32, %128 ]
  %138 = phi i64 [ %87, %100 ], [ %121, %118 ], [ %130, %128 ]
  %139 = phi %"class.GrBlockAllocator::Block"* [ %86, %100 ], [ %116, %118 ], [ %126, %128 ]
  %140 = icmp eq %"class.GrBlockAllocator::Block"* %139, null
  br i1 %140, label %84, label %85
}

declare void @_ZN28GrVkPipelineStateDataManagerC1ERK12GrTBlockListIN18GrVkUniformHandler13VkUniformInfoELi1EEjb(%class.GrVkPipelineStateDataManager*, %class.GrTBlockList* dereferenceable(128), i32, i1 zeroext) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkPipelineStateD2Ev(%class.GrVkPipelineState* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV28GrVkPipelineStateDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10, i32 2, i32 0
  %4 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %3, align 8
  %5 = icmp eq %class.GrGpuBuffer* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %7, i64 -1
  %13 = bitcast %class.GrIORef* %12 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %13, i32 0) #5
  br label %14

14:                                               ; preds = %11, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV20GrUniformDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %15 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8* null, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_Z7sk_freePv(i8* nonnull %16) #5
  br label %19

19:                                               ; preds = %18, %14
  %20 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10, i32 0, i32 3, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10, i32 0, i32 3
  %26 = bitcast %class.SkTArray.489* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_Z7sk_freePv(i8* %27) #5
  br label %28

28:                                               ; preds = %19, %24
  %29 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 9
  %30 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr.477"*, %"class.std::__1::unique_ptr.477"** %30, align 8
  %32 = icmp eq %"class.std::__1::unique_ptr.477"* %31, null
  br i1 %32, label %56, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::unique_ptr.477"* %31 to i8*
  %35 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 9, i32 0, i32 1
  %36 = load %"class.std::__1::unique_ptr.477"*, %"class.std::__1::unique_ptr.477"** %35, align 8
  %37 = icmp eq %"class.std::__1::unique_ptr.477"* %36, %31
  br i1 %37, label %54, label %38

38:                                               ; preds = %33, %49
  %39 = phi %"class.std::__1::unique_ptr.477"* [ %40, %49 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.477"* %39, i64 -1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.477"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %41, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %41, align 8
  %43 = icmp eq %class.GrGLSLFragmentProcessor* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = bitcast %class.GrGLSLFragmentProcessor* %42 to void (%class.GrGLSLFragmentProcessor*)***
  %46 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %46, i64 1
  %48 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %47, align 8
  tail call void %48(%class.GrGLSLFragmentProcessor* nonnull %42) #5
  br label %49

49:                                               ; preds = %44, %38
  %50 = icmp eq %"class.std::__1::unique_ptr.477"* %40, %31
  br i1 %50, label %51, label %38

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::vector.475"* %29 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %33
  %55 = phi i8* [ %53, %51 ], [ %34, %33 ]
  store %"class.std::__1::unique_ptr.477"* %31, %"class.std::__1::unique_ptr.477"** %35, align 8
  tail call void @_ZdlPv(i8* %55) #6
  br label %56

56:                                               ; preds = %28, %54
  %57 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %58 = load %class.GrGLSLXferProcessor*, %class.GrGLSLXferProcessor** %57, align 8
  store %class.GrGLSLXferProcessor* null, %class.GrGLSLXferProcessor** %57, align 8
  %59 = icmp eq %class.GrGLSLXferProcessor* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = bitcast %class.GrGLSLXferProcessor* %58 to void (%class.GrGLSLXferProcessor*)***
  %62 = load void (%class.GrGLSLXferProcessor*)**, void (%class.GrGLSLXferProcessor*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %62, i64 1
  %64 = load void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %63, align 8
  tail call void %64(%class.GrGLSLXferProcessor* nonnull %58) #5
  br label %65

65:                                               ; preds = %56, %60
  %66 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %67 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %66, align 8
  store %class.GrGLSLGeometryProcessor* null, %class.GrGLSLGeometryProcessor** %66, align 8
  %68 = icmp eq %class.GrGLSLGeometryProcessor* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = bitcast %class.GrGLSLGeometryProcessor* %67 to void (%class.GrGLSLGeometryProcessor*)***
  %71 = load void (%class.GrGLSLGeometryProcessor*)**, void (%class.GrGLSLGeometryProcessor*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %71, i64 1
  %73 = load void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %72, align 8
  tail call void %73(%class.GrGLSLGeometryProcessor* nonnull %67) #5
  br label %74

74:                                               ; preds = %65, %69
  %75 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 32
  %82 = bitcast i8* %81 to i8**
  %83 = load i8*, i8** %82, align 8
  tail call void @_Z7sk_freePv(i8* %83) #5
  br label %84

84:                                               ; preds = %74, %80
  %85 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 0, i32 0
  %86 = load %class.GrVkPipeline*, %class.GrVkPipeline** %85, align 8
  %87 = icmp eq %class.GrVkPipeline* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %84
  %89 = bitcast %class.GrVkPipeline* %86 to %class.GrManagedResource*
  %90 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %86, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %101

93:                                               ; preds = %88
  %94 = bitcast %class.GrVkPipeline* %86 to void (%class.GrManagedResource*)***
  %95 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %95, i64 4
  %97 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %96, align 8
  tail call void %97(%class.GrManagedResource* nonnull %89) #5
  %98 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %94, align 8
  %99 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %98, i64 1
  %100 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %99, align 8
  tail call void %100(%class.GrManagedResource* nonnull %89) #5
  br label %101

101:                                              ; preds = %84, %88, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkPipelineState16freeGPUResourcesEP7GrVkGpu(%class.GrVkPipelineState*, %class.GrVkGpu* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 0, i32 0
  %4 = load %class.GrVkPipeline*, %class.GrVkPipeline** %3, align 8
  store %class.GrVkPipeline* null, %class.GrVkPipeline** %3, align 8
  %5 = icmp eq %class.GrVkPipeline* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.GrVkPipeline* %4 to %class.GrManagedResource*
  %8 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %19

11:                                               ; preds = %6
  %12 = bitcast %class.GrVkPipeline* %4 to void (%class.GrManagedResource*)***
  %13 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %13, i64 4
  %15 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %14, align 8
  tail call void %15(%class.GrManagedResource* nonnull %7) #5
  %16 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %12, align 8
  %17 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %16, i64 1
  %18 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %17, align 8
  tail call void %18(%class.GrManagedResource* nonnull %7) #5
  br label %19

19:                                               ; preds = %2, %6, %11
  %20 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10
  tail call void @_ZN28GrVkPipelineStateDataManager11releaseDataEv(%class.GrVkPipelineStateDataManager* %20) #5
  %21 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 4294967294
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 32
  %28 = bitcast i8* %27 to %class.GrVkSampler***
  br label %30

29:                                               ; preds = %54, %19
  ret void

30:                                               ; preds = %26, %54
  %31 = phi i64 [ %23, %26 ], [ %55, %54 ]
  %32 = phi i64 [ 0, %26 ], [ %56, %54 ]
  %33 = load %class.GrVkSampler**, %class.GrVkSampler*** %28, align 8
  %34 = getelementptr inbounds %class.GrVkSampler*, %class.GrVkSampler** %33, i64 %32
  %35 = load %class.GrVkSampler*, %class.GrVkSampler** %34, align 8
  %36 = icmp eq %class.GrVkSampler* %35, null
  %37 = bitcast %class.GrVkSampler* %35 to %class.GrManagedResource*
  br i1 %36, label %54, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = bitcast %class.GrVkSampler* %35 to void (%class.GrManagedResource*)***
  %44 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %44, i64 4
  %46 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %45, align 8
  tail call void %46(%class.GrManagedResource* nonnull %37) #5
  %47 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %43, align 8
  %48 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %47, i64 1
  %49 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %48, align 8
  tail call void %49(%class.GrManagedResource* nonnull %37) #5
  br label %50

50:                                               ; preds = %38, %42
  %51 = load %class.GrVkSampler**, %class.GrVkSampler*** %28, align 8
  %52 = getelementptr inbounds %class.GrVkSampler*, %class.GrVkSampler** %51, i64 %32
  store %class.GrVkSampler* null, %class.GrVkSampler** %52, align 8
  %53 = load i64, i64* %22, align 8
  br label %54

54:                                               ; preds = %30, %50
  %55 = phi i64 [ %31, %30 ], [ %53, %50 ]
  %56 = add nuw nsw i64 %32, 1
  %57 = lshr i64 %55, 1
  %58 = and i64 %57, 2147483647
  %59 = icmp ult i64 %56, %58
  br i1 %59, label %30, label %29
}

declare void @_ZN28GrVkPipelineStateDataManager11releaseDataEv(%class.GrVkPipelineStateDataManager*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkPipelineState18setAndBindUniformsEP7GrVkGpu7SkISizeRK13GrProgramInfoP17GrVkCommandBuffer(%class.GrVkPipelineState*, %class.GrVkGpu*, i64, %class.GrProgramInfo* nocapture readonly dereferenceable(128), %class.GrVkCommandBuffer*) local_unnamed_addr #0 align 2 {
  %6 = alloca [4 x float], align 16
  %7 = alloca %"class.GrGLSLFragmentProcessor::ParallelRange", align 8
  %8 = alloca %"class.GrGLSLFragmentProcessor::ParallelIter", align 8
  %9 = alloca %"class.GrGLSLFragmentProcessor::ParallelIterEnd", align 1
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.SkIPoint*
  %12 = alloca %"struct.std::__1::pair", align 8
  %13 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %3, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = trunc i64 %2 to i32
  %16 = lshr i64 %2, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 5, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %29, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %17
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10
  %27 = bitcast %class.GrVkPipelineStateDataManager* %26 to %class.GrUniformDataManager*
  %28 = sitofp i32 %17 to float
  tail call void @_ZNK20GrUniformDataManager5set1fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEf(%class.GrUniformDataManager* %27, i32 %19, float %28) #5
  br label %29

29:                                               ; preds = %25, %21, %5
  %30 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4
  %31 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, %14
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.GrVkPipelineState::RenderTargetState", %"struct.GrVkPipelineState::RenderTargetState"* %30, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %15
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %17
  br i1 %41, label %60, label %42

42:                                               ; preds = %38, %34, %29
  %43 = bitcast %"struct.GrVkPipelineState::RenderTargetState"* %30 to i64*
  store i64 %2, i64* %43, align 8
  store i32 %14, i32* %31, align 8
  %44 = bitcast [4 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #5
  %45 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %46 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  %47 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  %48 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  %49 = sitofp i32 %15 to float
  %50 = fdiv float 2.000000e+00, %49
  store float %50, float* %45, align 16
  store float -1.000000e+00, float* %46, align 4
  %51 = icmp eq i32 %14, 1
  %52 = sitofp i32 %17 to float
  %53 = select i1 %51, float -2.000000e+00, float 2.000000e+00
  %54 = select i1 %51, float 1.000000e+00, float -1.000000e+00
  %55 = fdiv float %53, %52
  store float %55, float* %47, align 8
  store float %54, float* %48, align 4
  %56 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10
  %57 = bitcast %class.GrVkPipelineStateDataManager* %56 to %class.GrUniformDataManager*
  %58 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 5, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  call void @_ZNK20GrUniformDataManager6set4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager* %57, i32 %59, i32 1, float* nonnull %45) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #5
  br label %60

60:                                               ; preds = %38, %42
  %61 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %62 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %61, align 8
  %63 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10
  %64 = getelementptr inbounds %class.GrVkPipelineStateDataManager, %class.GrVkPipelineStateDataManager* %63, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0, i32 2, i32 0
  %66 = load %class.GrCaps*, %class.GrCaps** %65, align 8
  %67 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %66, i64 0, i32 2, i32 0
  %68 = load %class.GrShaderCaps*, %class.GrShaderCaps** %67, align 8
  %69 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %3, i64 0, i32 7
  %70 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %69, align 8
  %71 = bitcast %class.GrGLSLGeometryProcessor* %62 to void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)***
  %72 = load void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)**, void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)** %72, i64 2
  %74 = load void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)** %73, align 8
  call void %74(%class.GrGLSLGeometryProcessor* %62, %class.GrGLSLProgramDataManager* dereferenceable(8) %64, %class.GrShaderCaps* dereferenceable(144) %68, %class.GrGeometryProcessor* dereferenceable(80) %70) #5
  %75 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %3, i64 0, i32 5
  %76 = load %class.GrPipeline*, %class.GrPipeline** %75, align 8
  %77 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %76, i64 0, i32 8, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %95

80:                                               ; preds = %60
  %81 = bitcast %"class.GrGLSLFragmentProcessor::ParallelRange"* %7 to i8*
  %82 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 9, i32 0, i32 0
  %83 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %84 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelRange", %"class.GrGLSLFragmentProcessor::ParallelRange"* %7, i64 0, i32 0
  %85 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelRange", %"class.GrGLSLFragmentProcessor::ParallelRange"* %7, i64 0, i32 1
  %86 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIterEnd", %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* %9, i64 0, i32 0
  %87 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i64 40
  %88 = bitcast i8* %87 to i64*
  %89 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i64 32
  %90 = bitcast i8* %89 to i8**
  %91 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 40
  %92 = bitcast i8* %91 to i64*
  %93 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 32
  %94 = bitcast i8* %93 to i8**
  br label %156

95:                                               ; preds = %181, %60
  %96 = phi %class.GrPipeline* [ %76, %60 ], [ %183, %181 ]
  %97 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #5
  %98 = bitcast i64* %10 to i32*
  store i32 -1431655766, i32* %98, align 8
  %99 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %11, i64 0, i32 1
  store i32 -1431655766, i32* %99, align 4
  %100 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %96, i64 0, i32 2
  %101 = load i32, i32* %100, align 8
  switch i32 %101, label %102 [
    i32 2, label %103
    i32 1, label %103
    i32 0, label %135
    i32 3, label %135
  ]

102:                                              ; preds = %95
  call void @llvm.trap() #5
  unreachable

103:                                              ; preds = %95, %95
  %104 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %96, i64 0, i32 1
  %105 = bitcast %struct.SkIPoint* %104 to i64*
  %106 = load i64, i64* %105, align 4
  store i64 %106, i64* %10, align 8
  %107 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %96, i64 0, i32 0, i32 0, i32 0
  %108 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %107, align 8
  %109 = icmp eq %class.GrSurfaceProxy* %108, null
  br i1 %109, label %135, label %110

110:                                              ; preds = %103
  %111 = bitcast %class.GrSurfaceProxy* %108 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %112 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %111, align 8
  %113 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %112, i64 3
  %114 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %113, align 8
  %115 = call %class.GrTextureProxy* %114(%class.GrSurfaceProxy* nonnull %108) #5
  %116 = icmp eq %class.GrTextureProxy* %115, null
  br i1 %116, label %135, label %117

117:                                              ; preds = %110
  %118 = bitcast %class.GrTextureProxy* %115 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr i8, i8* %119, i64 -24
  %121 = bitcast i8* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %class.GrTextureProxy* %115 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 %122
  %125 = getelementptr inbounds i8, i8* %124, i64 16
  %126 = bitcast i8* %125 to %class.GrSurface**
  %127 = load %class.GrSurface*, %class.GrSurface** %126, align 8
  %128 = icmp eq %class.GrSurface* %127, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %117
  %130 = bitcast %class.GrSurface* %127 to %class.GrTexture* (%class.GrSurface*)***
  %131 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %130, align 8
  %132 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %131, i64 10
  %133 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %132, align 8
  %134 = call %class.GrTexture* %133(%class.GrSurface* nonnull %127) #5
  br label %135

135:                                              ; preds = %95, %95, %103, %110, %117, %129
  %136 = phi %class.GrTexture* [ %134, %129 ], [ null, %117 ], [ null, %110 ], [ null, %103 ], [ null, %95 ], [ null, %95 ]
  %137 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %138 = load %class.GrGLSLXferProcessor*, %class.GrGLSLXferProcessor** %137, align 8
  %139 = load %class.GrPipeline*, %class.GrPipeline** %75, align 8
  %140 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %139, i64 0, i32 7, i32 0
  %141 = load %class.GrXferProcessor*, %class.GrXferProcessor** %140, align 8
  %142 = icmp eq %class.GrXferProcessor* %141, null
  br i1 %142, label %143, label %145

143:                                              ; preds = %135
  %144 = call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #5
  br label %145

145:                                              ; preds = %135, %143
  %146 = phi %class.GrXferProcessor* [ %144, %143 ], [ %141, %135 ]
  call void @_ZN19GrGLSLXferProcessor7setDataERK24GrGLSLProgramDataManagerRK15GrXferProcessorPK9GrTextureRK8SkIPoint(%class.GrGLSLXferProcessor* %138, %class.GrGLSLProgramDataManager* dereferenceable(8) %64, %class.GrXferProcessor* dereferenceable(24) %146, %class.GrTexture* %136, %struct.SkIPoint* nonnull dereferenceable(8) %11) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #5
  %147 = bitcast %"struct.std::__1::pair"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #5
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %150 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 16, i1 false)
  %151 = load %class.GrVkPipeline*, %class.GrVkPipeline** %150, align 8
  %152 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %151, i64 0, i32 2
  %153 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %152, align 8
  call void @_ZN28GrVkPipelineStateDataManager14uploadUniformsEP7GrVkGpuP18VkPipelineLayout_TP17GrVkCommandBuffer(%"struct.std::__1::pair"* nonnull sret %12, %class.GrVkPipelineStateDataManager* %63, %class.GrVkGpu* %1, %struct.VkPipelineLayout_T* %153, %class.GrVkCommandBuffer* %4) #5
  %154 = load i8, i8* %149, align 8, !range !5
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %223, label %194

156:                                              ; preds = %80, %181
  %157 = phi i64 [ 0, %80 ], [ %182, %181 ]
  %158 = phi %class.GrPipeline* [ %76, %80 ], [ %183, %181 ]
  %159 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %158, i64 0, i32 8, i32 1
  %160 = load %"class.std::__1::unique_ptr.539"*, %"class.std::__1::unique_ptr.539"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.539", %"class.std::__1::unique_ptr.539"* %160, i64 %157, i32 0, i32 0, i32 0
  %162 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %161, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #5
  %163 = load %"class.std::__1::unique_ptr.477"*, %"class.std::__1::unique_ptr.477"** %82, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.477"* %163, i64 %157, i32 0, i32 0, i32 0
  %165 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %164, align 8
  call void @_ZN23GrGLSLFragmentProcessor13ParallelRangeC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelRange"* nonnull %7, %class.GrFragmentProcessor* dereferenceable(64) %162, %class.GrGLSLFragmentProcessor* dereferenceable(40) %165) #5
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %83) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 96, i1 false)
  %166 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %84, align 8, !noalias !6
  %167 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %85, align 8, !noalias !6
  call void @_ZN23GrGLSLFragmentProcessor12ParallelIterC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %8, %class.GrFragmentProcessor* dereferenceable(64) %166, %class.GrGLSLFragmentProcessor* dereferenceable(40) %167) #5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #5
  store i8 -86, i8* %86, align 1
  %168 = call zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %8, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* nonnull dereferenceable(1) %9) #5
  br i1 %168, label %169, label %188

169:                                              ; preds = %188, %156
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #5
  %170 = load i64, i64* %88, align 8
  %171 = and i64 %170, 1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = load i8*, i8** %90, align 8
  call void @_Z7sk_freePv(i8* %174) #5
  br label %175

175:                                              ; preds = %173, %169
  %176 = load i64, i64* %92, align 8
  %177 = and i64 %176, 1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = load i8*, i8** %94, align 8
  call void @_Z7sk_freePv(i8* %180) #5
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %83) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #5
  %182 = add nuw nsw i64 %157, 1
  %183 = load %class.GrPipeline*, %class.GrPipeline** %75, align 8
  %184 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %183, i64 0, i32 8, i32 0
  %185 = load i32, i32* %184, align 8
  %186 = sext i32 %185 to i64
  %187 = icmp slt i64 %182, %186
  br i1 %187, label %156, label %95

188:                                              ; preds = %156, %188
  %189 = call { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } @_ZNK23GrGLSLFragmentProcessor12ParallelIterdeEv(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %8) #5
  %190 = extractvalue { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } %189, 0
  %191 = extractvalue { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } %189, 1
  call void @_ZN23GrGLSLFragmentProcessor7setDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor* %191, %class.GrGLSLProgramDataManager* dereferenceable(8) %64, %class.GrFragmentProcessor* dereferenceable(64) %190) #5
  %192 = call dereferenceable(96) %"class.GrGLSLFragmentProcessor::ParallelIter"* @_ZN23GrGLSLFragmentProcessor12ParallelIterppEv(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %8) #5
  %193 = call zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %8, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* nonnull dereferenceable(1) %9) #5
  br i1 %193, label %169, label %188

194:                                              ; preds = %145
  %195 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %148, align 8
  %196 = icmp eq %class.GrGpuBuffer* %195, null
  br i1 %196, label %235, label %197

197:                                              ; preds = %194
  %198 = bitcast %class.GrGpuBuffer* %195 to %class.GrVkBuffer*
  %199 = load %class.GrVkPipeline*, %class.GrVkPipeline** %150, align 8
  %200 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %199, i64 0, i32 2
  %201 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %200, align 8
  %202 = call %struct.VkDescriptorSet_T** @_ZNK10GrVkBuffer20uniformDescriptorSetEv(%class.GrVkBuffer* nonnull %198) #5
  call void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer* %4, %class.GrVkGpu* %1, %struct.VkPipelineLayout_T* %201, i32 0, i32 1, %struct.VkDescriptorSet_T** %202, i32 0, i32* null) #5
  %203 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %148, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %148, align 8
  %204 = icmp eq %class.GrGpuBuffer* %203, null
  %205 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %203, i64 0, i32 1
  %206 = ptrtoint %class.GrBuffer* %205 to i64
  %207 = select i1 %204, i64 0, i64 %206
  %208 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %4, i64 0, i32 3, i32 0, i32 0, i64 128
  %209 = bitcast i8* %208 to %class.SkTArray.421*
  call void @_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.421* %209, i32 1, i32 1) #5
  %210 = bitcast i8* %208 to %class.sk_sp.422**
  %211 = load %class.sk_sp.422*, %class.sk_sp.422** %210, align 8
  %212 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %4, i64 0, i32 3, i32 0, i32 0, i64 136
  %213 = bitcast i8* %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = lshr i64 %214, 1
  %216 = and i64 %215, 2147483647
  %217 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %211, i64 %216
  %218 = add i64 %214, 2
  %219 = and i64 %218, 4294967294
  %220 = and i64 %214, -4294967295
  %221 = or i64 %219, %220
  store i64 %221, i64* %213, align 8
  %222 = bitcast %class.sk_sp.422* %217 to i64*
  store i64 %207, i64* %222, align 8
  br label %223

223:                                              ; preds = %197, %145
  %224 = phi i1 [ true, %197 ], [ false, %145 ]
  %225 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %148, align 8
  %226 = icmp eq %class.GrGpuBuffer* %225, null
  br i1 %226, label %235, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %225, i64 0, i32 0, i32 1
  %229 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %228, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = atomicrmw add i32* %229, i32 -1 acq_rel
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %235

232:                                              ; preds = %227
  %233 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %228, i64 -1
  %234 = bitcast %class.GrIORef* %233 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %234, i32 0) #5
  br label %235

235:                                              ; preds = %194, %223, %227, %232
  %236 = phi i1 [ %224, %223 ], [ %224, %227 ], [ %224, %232 ], [ true, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #5
  ret i1 %236
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkPipelineState20setRenderTargetStateE7SkISize15GrSurfaceOrigin(%class.GrVkPipelineState*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = trunc i64 %1 to i32
  %6 = lshr i64 %1, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 5, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %7
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10
  %17 = bitcast %class.GrVkPipelineStateDataManager* %16 to %class.GrUniformDataManager*
  %18 = sitofp i32 %7 to float
  tail call void @_ZNK20GrUniformDataManager5set1fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEf(%class.GrUniformDataManager* %17, i32 %9, float %18) #5
  br label %19

19:                                               ; preds = %3, %11, %15
  %20 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4
  %21 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %2
  br i1 %23, label %24, label %32

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.GrVkPipelineState::RenderTargetState", %"struct.GrVkPipelineState::RenderTargetState"* %20, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %5
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 4, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %7
  br i1 %31, label %50, label %32

32:                                               ; preds = %28, %24, %19
  %33 = bitcast %"struct.GrVkPipelineState::RenderTargetState"* %20 to i64*
  store i64 %1, i64* %33, align 8
  store i32 %2, i32* %21, align 8
  %34 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #5
  %35 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %36 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %37 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %38 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %39 = sitofp i32 %5 to float
  %40 = fdiv float 2.000000e+00, %39
  store float %40, float* %35, align 16
  store float -1.000000e+00, float* %36, align 4
  %41 = icmp eq i32 %2, 1
  %42 = sitofp i32 %7 to float
  %43 = select i1 %41, float -2.000000e+00, float 2.000000e+00
  %44 = select i1 %41, float 1.000000e+00, float -1.000000e+00
  %45 = fdiv float %43, %42
  store float %45, float* %37, align 8
  store float %44, float* %38, align 4
  %46 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 10
  %47 = bitcast %class.GrVkPipelineStateDataManager* %46 to %class.GrUniformDataManager*
  %48 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  call void @_ZNK20GrUniformDataManager6set4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager* %47, i32 %49, i32 1, float* nonnull %35) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #5
  br label %50

50:                                               ; preds = %28, %32
  ret void
}

declare void @_ZN23GrGLSLFragmentProcessor13ParallelRangeC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelRange"*, %class.GrFragmentProcessor* dereferenceable(64), %class.GrGLSLFragmentProcessor* dereferenceable(40)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } @_ZNK23GrGLSLFragmentProcessor12ParallelIterdeEv(%"class.GrGLSLFragmentProcessor::ParallelIter"*) local_unnamed_addr #1

declare void @_ZN23GrGLSLFragmentProcessor7setDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #1

declare dereferenceable(96) %"class.GrGLSLFragmentProcessor::ParallelIter"* @_ZN23GrGLSLFragmentProcessor12ParallelIterppEv(%"class.GrGLSLFragmentProcessor::ParallelIter"*) local_unnamed_addr #1

declare void @_ZN19GrGLSLXferProcessor7setDataERK24GrGLSLProgramDataManagerRK15GrXferProcessorPK9GrTextureRK8SkIPoint(%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrXferProcessor* dereferenceable(24), %class.GrTexture*, %struct.SkIPoint* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN28GrVkPipelineStateDataManager14uploadUniformsEP7GrVkGpuP18VkPipelineLayout_TP17GrVkCommandBuffer(%"struct.std::__1::pair"* sret, %class.GrVkPipelineStateDataManager*, %class.GrVkGpu*, %struct.VkPipelineLayout_T*, %class.GrVkCommandBuffer*) local_unnamed_addr #1

declare void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*) local_unnamed_addr #1

declare %struct.VkDescriptorSet_T** @_ZNK10GrVkBuffer20uniformDescriptorSetEv(%class.GrVkBuffer*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkPipelineState18setAndBindTexturesEP7GrVkGpuRK19GrGeometryProcessorRK10GrPipelinePKPK14GrSurfaceProxyP17GrVkCommandBuffer(%class.GrVkPipelineState*, %class.GrVkGpu*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrPipeline* dereferenceable(128), %class.GrSurfaceProxy** nocapture readonly, %class.GrVkCommandBuffer*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkAutoSTArray.553, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::function.578", align 8
  %10 = alloca %struct.VkDescriptorImageInfo, align 8
  %11 = alloca %struct.VkWriteDescriptorSet, align 8
  %12 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %543, label %15

15:                                               ; preds = %6
  %16 = bitcast %class.SkAutoSTArray.553* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %16) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 208, i1 false)
  %17 = getelementptr inbounds %class.SkAutoSTArray.553, %class.SkAutoSTArray.553* %7, i64 0, i32 1
  store %struct.SamplerBindings* null, %struct.SamplerBindings** %17, align 8
  %18 = getelementptr inbounds %class.SkAutoSTArray.553, %class.SkAutoSTArray.553* %7, i64 0, i32 0
  store i32 0, i32* %18, align 8
  %19 = icmp sgt i32 %13, 8
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = sext i32 %13 to i64
  %22 = tail call i8* @_Z15sk_malloc_throwmm(i64 %21, i64 24) #5
  %23 = bitcast %struct.SamplerBindings** %17 to i8**
  store i8* %22, i8** %23, align 8
  br label %31

24:                                               ; preds = %15
  %25 = icmp sgt i32 %13, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %24
  %27 = getelementptr inbounds %class.SkAutoSTArray.553, %class.SkAutoSTArray.553* %7, i64 0, i32 2, i64 0
  %28 = bitcast %struct.SamplerBindings** %17 to i8**
  store i8* %27, i8** %28, align 8
  %29 = sext i32 %13 to i64
  br label %31

30:                                               ; preds = %24
  store %struct.SamplerBindings* null, %struct.SamplerBindings** %17, align 8
  store i32 %13, i32* %18, align 8
  br label %44

31:                                               ; preds = %26, %20
  %32 = phi i64 [ %21, %20 ], [ %29, %26 ]
  %33 = phi i8* [ %22, %20 ], [ %27, %26 ]
  %34 = bitcast i8* %33 to %struct.SamplerBindings*
  store i32 %13, i32* %18, align 8
  %35 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %34, i64 %32
  br label %36

36:                                               ; preds = %36, %31
  %37 = phi %struct.SamplerBindings* [ %38, %36 ], [ %34, %31 ]
  %38 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %37, i64 1
  %39 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %37, i64 0, i32 0, i32 0, i64 0
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %37, i64 0, i32 0, i32 0, i64 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %37, i64 0, i32 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %37, i64 0, i32 0, i32 2
  store i32 0, i32* %42, align 4
  %43 = icmp ult %struct.SamplerBindings* %38, %35
  br i1 %43, label %36, label %44

44:                                               ; preds = %36, %30
  %45 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #5
  store i32 0, i32* %8, align 4
  %46 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %2, i64 0, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %97, label %49

49:                                               ; preds = %112, %44
  %50 = bitcast %"class.std::__1::function.578"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #5
  %51 = getelementptr inbounds %"class.std::__1::function.578", %"class.std::__1::function.578"* %9, i64 0, i32 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::function.578", %"class.std::__1::function.578"* %9, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrTextureEffect*)* @"_ZNSt3__110__function16__policy_invokerIFvRK15GrTextureEffectEE11__call_implINS0_20__default_alloc_funcIZN17GrVkPipelineState18setAndBindTexturesEP7GrVkGpuRK19GrGeometryProcessorRK10GrPipelinePKPK14GrSurfaceProxyP17GrVkCommandBufferE3$_0S5_EEEEvPKNS0_16__policy_storageES4_", void (%"union.std::__1::__function::__policy_storage"*, %class.GrTextureEffect*)** %51, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN17GrVkPipelineState18setAndBindTexturesEP7GrVkGpuRK19GrGeometryProcessorRK10GrPipelinePKPK14GrSurfaceProxyP17GrVkCommandBufferE3$_0FvRK15GrTextureEffectEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %52, align 8
  %53 = bitcast %"class.std::__1::function.578"* %9 to %class.SkAutoSTArray.553**
  store %class.SkAutoSTArray.553* %7, %class.SkAutoSTArray.553** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::function.578", %"class.std::__1::function.578"* %9, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast [8 x i8]* %54 to i32**
  store i32* %8, i32** %55, align 8
  call void @_ZNK10GrPipeline19visitTextureEffectsERKNSt3__18functionIFvRK15GrTextureEffectEEE(%class.GrPipeline* %3, %"class.std::__1::function.578"* nonnull dereferenceable(32) %9) #5
  %56 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %52, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %56, i64 0, i32 1
  %58 = load void (i8*)*, void (i8*)** %57, align 8
  %59 = icmp eq void (i8*)* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.std::__1::function.578", %"class.std::__1::function.578"* %9, i64 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void %58(i8* %62) #5
  br label %63

63:                                               ; preds = %49, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #5
  %64 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %3, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  switch i32 %65, label %66 [
    i32 2, label %67
    i32 1, label %67
    i32 0, label %142
    i32 3, label %142
  ]

66:                                               ; preds = %63
  call void @llvm.trap() #5
  unreachable

67:                                               ; preds = %63, %63
  %68 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %3, i64 0, i32 0, i32 0, i32 0
  %69 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %68, align 8
  %70 = icmp eq %class.GrSurfaceProxy* %69, null
  br i1 %70, label %142, label %71

71:                                               ; preds = %67
  %72 = bitcast %class.GrSurfaceProxy* %69 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %73 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %72, align 8
  %74 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %73, i64 3
  %75 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %74, align 8
  %76 = call %class.GrTextureProxy* %75(%class.GrSurfaceProxy* nonnull %69) #5
  %77 = icmp eq %class.GrTextureProxy* %76, null
  br i1 %77, label %142, label %78

78:                                               ; preds = %71
  %79 = bitcast %class.GrTextureProxy* %76 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.GrTextureProxy* %76 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8* %86 to %class.GrSurface**
  %88 = load %class.GrSurface*, %class.GrSurface** %87, align 8
  %89 = icmp eq %class.GrSurface* %88, null
  br i1 %89, label %142, label %90

90:                                               ; preds = %78
  %91 = bitcast %class.GrSurface* %88 to %class.GrTexture* (%class.GrSurface*)***
  %92 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %91, align 8
  %93 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %92, i64 10
  %94 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %93, align 8
  %95 = call %class.GrTexture* %94(%class.GrSurface* nonnull %88) #5
  %96 = icmp eq %class.GrTexture* %95, null
  br i1 %96, label %142, label %131

97:                                               ; preds = %44, %112
  %98 = phi i64 [ %127, %112 ], [ 0, %44 ]
  %99 = trunc i64 %98 to i32
  %100 = call dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor* %2, i32 %99) #5
  %101 = getelementptr inbounds %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %4, i64 %98
  %102 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %101, align 8
  %103 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %102, i64 0, i32 2, i32 0
  %104 = load %class.GrSurface*, %class.GrSurface** %103, align 8
  %105 = icmp eq %class.GrSurface* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %97
  %107 = bitcast %class.GrSurface* %104 to %class.GrTexture* (%class.GrSurface*)***
  %108 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %107, align 8
  %109 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %108, i64 10
  %110 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %109, align 8
  %111 = call %class.GrTexture* %110(%class.GrSurface* nonnull %104) #5
  br label %112

112:                                              ; preds = %97, %106
  %113 = phi %class.GrTexture* [ %111, %106 ], [ null, %97 ]
  %114 = bitcast %"class.GrGeometryProcessor::TextureSampler"* %100 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %100, i64 0, i32 0, i32 2
  %117 = load i32, i32* %116, align 8
  %118 = load i32, i32* %8, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %8, align 4
  %120 = load %struct.SamplerBindings*, %struct.SamplerBindings** %17, align 8
  %121 = sext i32 %118 to i64
  %122 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %120, i64 %121
  %123 = bitcast %struct.SamplerBindings* %122 to i64*
  store i64 %115, i64* %123, align 8
  %124 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %120, i64 %121, i32 0, i32 2
  store i32 %117, i32* %124, align 8
  %125 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %120, i64 %121, i32 1
  %126 = bitcast %class.GrVkTexture** %125 to %class.GrTexture**
  store %class.GrTexture* %113, %class.GrTexture** %126, align 8
  %127 = add nuw nsw i64 %98, 1
  %128 = load i32, i32* %46, align 8
  %129 = sext i32 %128 to i64
  %130 = icmp slt i64 %127, %129
  br i1 %130, label %97, label %49

131:                                              ; preds = %90
  %132 = load i32, i32* %8, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %8, align 4
  %134 = load %struct.SamplerBindings*, %struct.SamplerBindings** %17, align 8
  %135 = sext i32 %132 to i64
  %136 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %134, i64 %135, i32 0, i32 0, i64 0
  store i8 0, i8* %136, align 8
  %137 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %134, i64 %135, i32 0, i32 0, i64 1
  store i8 0, i8* %137, align 1
  %138 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %134, i64 %135, i32 0, i32 1
  store i32 0, i32* %138, align 4
  %139 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %134, i64 %135, i32 0, i32 2
  store i32 0, i32* %139, align 8
  %140 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %134, i64 %135, i32 1
  %141 = bitcast %class.GrVkTexture** %140 to %class.GrTexture**
  store %class.GrTexture* %95, %class.GrTexture** %141, align 8
  br label %142

142:                                              ; preds = %63, %63, %67, %71, %78, %90, %131
  %143 = load i32, i32* %12, align 8
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %283

145:                                              ; preds = %142
  %146 = load %struct.SamplerBindings*, %struct.SamplerBindings** %17, align 8
  %147 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %146, i64 0, i32 1
  %148 = load %class.GrVkTexture*, %class.GrVkTexture** %147, align 8
  %149 = getelementptr inbounds %class.GrVkTexture, %class.GrVkTexture* %148, i64 0, i32 1, i32 0
  %150 = load %class.GrVkAttachment*, %class.GrVkAttachment** %149, align 8
  %151 = bitcast %struct.SamplerBindings* %146 to i64*
  %152 = load i64, i64* %151, align 4
  %153 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %146, i64 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = call %class.GrVkDescriptorSet* @_ZN11GrVkTexture19cachedSingleDescSetE14GrSamplerState(%class.GrVkTexture* %148, i64 %152, i32 %154) #5
  %156 = icmp eq %class.GrVkDescriptorSet* %155, null
  br i1 %156, label %283, label %157

157:                                              ; preds = %145
  %158 = icmp eq %class.GrVkTexture* %148, null
  br i1 %158, label %176, label %159

159:                                              ; preds = %157
  %160 = bitcast %class.GrVkTexture* %148 to i8**
  %161 = load i8*, i8** %160, align 8
  %162 = getelementptr i8, i8* %161, i64 -24
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %class.GrVkTexture* %148 to i8*
  %166 = getelementptr inbounds i8, i8* %165, i64 %164
  %167 = icmp eq i8* %166, null
  br i1 %167, label %176, label %168

168:                                              ; preds = %159
  %169 = bitcast i8* %166 to %class.GrSurface*
  %170 = getelementptr inbounds i8, i8* %166, i64 8
  %171 = bitcast i8* %170 to i32*
  %172 = atomicrmw add i32* %171, i32 1 monotonic, !noalias !9
  %173 = getelementptr inbounds i8, i8* %166, i64 12
  %174 = bitcast i8* %173 to i32*
  %175 = atomicrmw add i32* %174, i32 1 monotonic
  br label %176

176:                                              ; preds = %157, %159, %168
  %177 = phi %class.GrSurface* [ %169, %168 ], [ null, %159 ], [ null, %157 ]
  %178 = phi i1 [ false, %168 ], [ true, %159 ], [ true, %157 ]
  %179 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 4, i32 0, i32 0, i64 128
  %180 = bitcast i8* %179 to %class.SkTArray.425*
  %181 = ptrtoint %class.GrSurface* %177 to i64
  call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.425* %180, i32 1, i32 1) #5
  %182 = bitcast i8* %179 to %class.gr_sp.426**
  %183 = load %class.gr_sp.426*, %class.gr_sp.426** %182, align 8
  %184 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 4, i32 0, i32 0, i64 136
  %185 = bitcast i8* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = lshr i64 %186, 1
  %188 = and i64 %187, 2147483647
  %189 = getelementptr inbounds %class.gr_sp.426, %class.gr_sp.426* %183, i64 %188
  %190 = add i64 %186, 2
  %191 = and i64 %190, 4294967294
  %192 = and i64 %186, -4294967295
  %193 = or i64 %191, %192
  store i64 %193, i64* %185, align 8
  %194 = bitcast %class.gr_sp.426* %189 to i64*
  store i64 %181, i64* %194, align 8
  br i1 %178, label %203, label %195

195:                                              ; preds = %176
  %196 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %177, i64 0, i32 0, i32 1
  %197 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = atomicrmw add i32* %197, i32 -1 acq_rel
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %203

200:                                              ; preds = %195
  %201 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %196, i64 -1
  %202 = bitcast %class.GrIORef* %201 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %202, i32 0) #5
  br label %203

203:                                              ; preds = %176, %195, %200
  %204 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %150, i64 0, i32 3, i32 0
  %205 = bitcast %class.GrVkImageView** %204 to %class.GrManagedResource**
  %206 = load %class.GrManagedResource*, %class.GrManagedResource** %205, align 8
  %207 = icmp eq %class.GrManagedResource* %206, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %206, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i32* %209, i32 1 monotonic, !noalias !12
  br label %211

211:                                              ; preds = %203, %208
  %212 = ptrtoint %class.GrManagedResource* %206 to i64
  %213 = bitcast %class.GrManagedResource* %206 to void (%class.GrManagedResource*)***
  %214 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %213, align 8
  %215 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %214, i64 2
  %216 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %215, align 8
  call void %216(%class.GrManagedResource* %206) #5
  %217 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 1, i32 0, i32 0, i64 256
  %218 = bitcast i8* %217 to %class.SkTArray.414*
  call void @_ZN8SkTArrayI5sk_spIK17GrManagedResourceELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.414* %218, i32 1, i32 1) #5
  %219 = bitcast i8* %217 to %class.sk_sp.415**
  %220 = load %class.sk_sp.415*, %class.sk_sp.415** %219, align 8
  %221 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 1, i32 0, i32 0, i64 264
  %222 = bitcast i8* %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = lshr i64 %223, 1
  %225 = and i64 %224, 2147483647
  %226 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %220, i64 %225
  %227 = add i64 %223, 2
  %228 = and i64 %227, 4294967294
  %229 = and i64 %223, -4294967295
  %230 = or i64 %228, %229
  store i64 %230, i64* %222, align 8
  %231 = bitcast %class.sk_sp.415* %226 to i64*
  store i64 %212, i64* %231, align 8
  %232 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %150, i64 0, i32 1, i32 5
  %233 = bitcast %"class.GrVkImage::Resource"** %232 to %class.GrManagedResource**
  %234 = load %class.GrManagedResource*, %class.GrManagedResource** %233, align 8
  %235 = icmp eq %class.GrManagedResource* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %211
  %237 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %234, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = atomicrmw add i32* %237, i32 1 monotonic, !noalias !15
  br label %239

239:                                              ; preds = %211, %236
  %240 = ptrtoint %class.GrManagedResource* %234 to i64
  %241 = bitcast %class.GrManagedResource* %234 to void (%class.GrManagedResource*)***
  %242 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %241, align 8
  %243 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %242, i64 2
  %244 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %243, align 8
  call void %244(%class.GrManagedResource* %234) #5
  call void @_ZN8SkTArrayI5sk_spIK17GrManagedResourceELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.414* %218, i32 1, i32 1) #5
  %245 = load %class.sk_sp.415*, %class.sk_sp.415** %219, align 8
  %246 = load i64, i64* %222, align 8
  %247 = lshr i64 %246, 1
  %248 = and i64 %247, 2147483647
  %249 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %245, i64 %248
  %250 = add i64 %246, 2
  %251 = and i64 %250, 4294967294
  %252 = and i64 %246, -4294967295
  %253 = or i64 %251, %252
  store i64 %253, i64* %222, align 8
  %254 = bitcast %class.sk_sp.415* %249 to i64*
  store i64 %240, i64* %254, align 8
  %255 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %155, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = atomicrmw add i32* %255, i32 1 monotonic, !noalias !18
  %257 = ptrtoint %class.GrVkDescriptorSet* %155 to i64
  %258 = bitcast %class.GrVkDescriptorSet* %155 to %class.GrManagedResource*
  %259 = bitcast %class.GrVkDescriptorSet* %155 to void (%class.GrManagedResource*)***
  %260 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %259, align 8
  %261 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %260, i64 2
  %262 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %261, align 8
  call void %262(%class.GrManagedResource* nonnull %258) #5
  %263 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 2, i32 0, i32 0, i64 256
  %264 = bitcast i8* %263 to %class.SkTArray.418*
  call void @_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE(%class.SkTArray.418* %264, i32 1, i32 1) #5
  %265 = bitcast i8* %263 to %class.gr_sp**
  %266 = load %class.gr_sp*, %class.gr_sp** %265, align 8
  %267 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 2, i32 0, i32 0, i64 264
  %268 = bitcast i8* %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = lshr i64 %269, 1
  %271 = and i64 %270, 2147483647
  %272 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %266, i64 %271
  %273 = add i64 %269, 2
  %274 = and i64 %273, 4294967294
  %275 = and i64 %269, -4294967295
  %276 = or i64 %274, %275
  store i64 %276, i64* %268, align 8
  %277 = bitcast %class.gr_sp* %272 to i64*
  store i64 %257, i64* %277, align 8
  %278 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 0, i32 0
  %279 = load %class.GrVkPipeline*, %class.GrVkPipeline** %278, align 8
  %280 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %279, i64 0, i32 2
  %281 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %280, align 8
  %282 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %155, i64 0, i32 1
  call void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer* %5, %class.GrVkGpu* %1, %struct.VkPipelineLayout_T* %281, i32 1, i32 1, %struct.VkDescriptorSet_T** %282, i32 0, i32* null) #5
  br label %525

283:                                              ; preds = %145, %142
  %284 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 9
  %285 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 1
  %286 = call %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider23getSamplerDescriptorSetERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider* %284, %class.GrResourceHandle* dereferenceable(4) %285) #5
  %287 = icmp eq %class.GrVkDescriptorSet* %286, null
  br i1 %287, label %525, label %288

288:                                              ; preds = %283
  %289 = load i32, i32* %12, align 8
  %290 = icmp sgt i32 %289, 0
  br i1 %290, label %291, label %478

291:                                              ; preds = %288
  %292 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 3, i32 0, i32 0, i64 32
  %293 = bitcast i8* %292 to %class.GrVkSampler***
  %294 = bitcast %struct.VkDescriptorImageInfo* %10 to i8*
  %295 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %10, i64 0, i32 0
  %296 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %10, i64 0, i32 1
  %297 = bitcast %struct.VkImageView_T** %296 to i64*
  %298 = getelementptr inbounds %struct.VkDescriptorImageInfo, %struct.VkDescriptorImageInfo* %10, i64 0, i32 2
  %299 = bitcast %struct.VkWriteDescriptorSet* %11 to i8*
  %300 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 0
  %301 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 1
  %302 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %286, i64 0, i32 1
  %303 = bitcast %struct.VkDescriptorSet_T** %302 to i64*
  %304 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 2
  %305 = bitcast %struct.VkDescriptorSet_T** %304 to i64*
  %306 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 3
  %307 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 4
  %308 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 5
  %309 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 6
  %310 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 7
  %311 = getelementptr inbounds %struct.VkWriteDescriptorSet, %struct.VkWriteDescriptorSet* %11, i64 0, i32 8
  %312 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 1, i32 0
  %313 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 6
  %314 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 1, i32 0, i32 0, i64 256
  %315 = bitcast i8* %314 to %class.SkTArray.414*
  %316 = bitcast i8* %314 to %class.sk_sp.415**
  %317 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 1, i32 0, i32 0, i64 264
  %318 = bitcast i8* %317 to i64*
  %319 = bitcast %struct.VkDescriptorBufferInfo** %311 to i8*
  br label %320

320:                                              ; preds = %291, %448
  %321 = phi i64 [ 0, %291 ], [ %464, %448 ]
  %322 = load %struct.SamplerBindings*, %struct.SamplerBindings** %17, align 8
  %323 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %322, i64 %321, i32 1
  %324 = load %class.GrVkTexture*, %class.GrVkTexture** %323, align 8
  %325 = getelementptr inbounds %class.GrVkTexture, %class.GrVkTexture* %324, i64 0, i32 1, i32 0
  %326 = load %class.GrVkAttachment*, %class.GrVkAttachment** %325, align 8
  %327 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %326, i64 0, i32 3, i32 0
  %328 = load %class.GrVkImageView*, %class.GrVkImageView** %327, align 8
  %329 = load %class.GrVkSampler**, %class.GrVkSampler*** %293, align 8
  %330 = getelementptr inbounds %class.GrVkSampler*, %class.GrVkSampler** %329, i64 %321
  %331 = load %class.GrVkSampler*, %class.GrVkSampler** %330, align 8
  %332 = icmp eq %class.GrVkSampler* %331, null
  br i1 %332, label %333, label %366

333:                                              ; preds = %320
  %334 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %322, i64 %321
  %335 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %322, i64 %321, i32 0, i32 2
  %336 = load i32, i32* %335, align 8
  %337 = bitcast %struct.SamplerBindings* %334 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %326, i64 0, i32 1, i32 1, i32 11
  %340 = call %class.GrVkSampler* @_ZN20GrVkResourceProvider29findOrCreateCompatibleSamplerE14GrSamplerStateRK23GrVkYcbcrConversionInfo(%class.GrVkResourceProvider* %284, i64 %338, i32 %336, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %339) #5
  %341 = icmp eq %class.GrVkSampler* %340, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %333
  %343 = load %class.GrVkSampler**, %class.GrVkSampler*** %293, align 8
  br label %366

344:                                              ; preds = %333
  %345 = bitcast %class.GrVkDescriptorSet* %286 to %class.GrManagedResource*
  %346 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %286, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 acquire, align 4
  %348 = icmp eq i32 %347, 1
  br i1 %348, label %349, label %355

349:                                              ; preds = %344
  %350 = bitcast %class.GrVkDescriptorSet* %286 to %class.GrRecycledResource*
  %351 = bitcast %class.GrVkDescriptorSet* %286 to void (%class.GrRecycledResource*)***
  %352 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %351, align 8
  %353 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %352, i64 5
  %354 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %353, align 8
  call void %354(%class.GrRecycledResource* nonnull %350) #5
  br label %525

355:                                              ; preds = %344
  %356 = atomicrmw add i32* %346, i32 -1 acq_rel
  %357 = icmp eq i32 %356, 1
  br i1 %357, label %358, label %525

358:                                              ; preds = %355
  %359 = bitcast %class.GrVkDescriptorSet* %286 to void (%class.GrManagedResource*)***
  %360 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %359, align 8
  %361 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %360, i64 4
  %362 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %361, align 8
  call void %362(%class.GrManagedResource* nonnull %345) #5
  %363 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %359, align 8
  %364 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %363, i64 1
  %365 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %364, align 8
  call void %365(%class.GrManagedResource* nonnull %345) #5
  br label %525

366:                                              ; preds = %342, %320
  %367 = phi %class.GrVkSampler** [ %343, %342 ], [ %329, %320 ]
  %368 = phi %class.GrVkSampler* [ %340, %342 ], [ %331, %320 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %294) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %294, i8 0, i64 24, i1 false)
  %369 = getelementptr inbounds %class.GrVkSampler*, %class.GrVkSampler** %367, i64 %321
  %370 = load %class.GrVkSampler*, %class.GrVkSampler** %369, align 8
  %371 = icmp eq %class.GrVkSampler* %370, null
  br i1 %371, label %372, label %375

372:                                              ; preds = %366
  %373 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %368, i64 0, i32 1
  %374 = load %struct.VkSampler_T*, %struct.VkSampler_T** %373, align 8
  br label %375

375:                                              ; preds = %366, %372
  %376 = phi %struct.VkSampler_T* [ %374, %372 ], [ null, %366 ]
  store %struct.VkSampler_T* %376, %struct.VkSampler_T** %295, align 8
  %377 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %328, i64 0, i32 1
  %378 = bitcast %struct.VkImageView_T** %377 to i64*
  %379 = load i64, i64* %378, align 8
  store i64 %379, i64* %297, align 8
  store i32 5, i32* %298, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %299) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %299, i8 0, i64 64, i1 false)
  store i32 35, i32* %300, align 8
  store i8* null, i8** %301, align 8
  %380 = load i64, i64* %303, align 8
  store i64 %380, i64* %305, align 8
  %381 = trunc i64 %321 to i32
  store i32 %381, i32* %306, align 8
  store i32 0, i32* %307, align 4
  store i32 1, i32* %308, align 8
  store i32 1, i32* %309, align 4
  store %struct.VkDescriptorImageInfo* %10, %struct.VkDescriptorImageInfo** %310, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %319, i8 0, i64 16, i1 false)
  %382 = load %struct.GrVkInterface*, %struct.GrVkInterface** %312, align 8
  %383 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %382, i64 0, i32 1, i32 77, i32 0
  %384 = load void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)** %383, align 8
  %385 = load %struct.VkDevice_T*, %struct.VkDevice_T** %313, align 8
  call void %384(%struct.VkDevice_T* %385, i32 1, %struct.VkWriteDescriptorSet* nonnull %11, i32 0, %struct.VkCopyDescriptorSet* null) #5
  %386 = bitcast %class.GrVkSampler* %368 to %class.GrManagedResource*
  %387 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %368, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = atomicrmw add i32* %387, i32 1 monotonic, !noalias !21
  %389 = ptrtoint %class.GrVkSampler* %368 to i64
  %390 = bitcast %class.GrVkSampler* %368 to void (%class.GrManagedResource*)***
  %391 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %390, align 8
  %392 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %391, i64 2
  %393 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %392, align 8
  call void %393(%class.GrManagedResource* %386) #5
  call void @_ZN8SkTArrayI5sk_spIK17GrManagedResourceELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.414* %315, i32 1, i32 1) #5
  %394 = load %class.sk_sp.415*, %class.sk_sp.415** %316, align 8
  %395 = load i64, i64* %318, align 8
  %396 = lshr i64 %395, 1
  %397 = and i64 %396, 2147483647
  %398 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %394, i64 %397
  %399 = add i64 %395, 2
  %400 = and i64 %399, 4294967294
  %401 = and i64 %395, -4294967295
  %402 = or i64 %400, %401
  store i64 %402, i64* %318, align 8
  %403 = bitcast %class.sk_sp.415* %398 to i64*
  store i64 %389, i64* %403, align 8
  %404 = load %class.GrVkSampler**, %class.GrVkSampler*** %293, align 8
  %405 = getelementptr inbounds %class.GrVkSampler*, %class.GrVkSampler** %404, i64 %321
  %406 = load %class.GrVkSampler*, %class.GrVkSampler** %405, align 8
  %407 = icmp eq %class.GrVkSampler* %406, null
  br i1 %407, label %408, label %419

408:                                              ; preds = %375
  %409 = getelementptr inbounds %class.GrVkSampler, %class.GrVkSampler* %368, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = atomicrmw add i32* %409, i32 -1 acq_rel
  %411 = icmp eq i32 %410, 1
  br i1 %411, label %412, label %419

412:                                              ; preds = %408
  %413 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %390, align 8
  %414 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %413, i64 4
  %415 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %414, align 8
  call void %415(%class.GrManagedResource* %386) #5
  %416 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %390, align 8
  %417 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %416, i64 1
  %418 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %417, align 8
  call void %418(%class.GrManagedResource* nonnull %386) #5
  br label %419

419:                                              ; preds = %412, %408, %375
  %420 = bitcast %class.GrVkImageView* %328 to %class.GrManagedResource*
  %421 = icmp eq %class.GrVkImageView* %328, null
  br i1 %421, label %425, label %422

422:                                              ; preds = %419
  %423 = getelementptr inbounds %class.GrVkImageView, %class.GrVkImageView* %328, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = atomicrmw add i32* %423, i32 1 monotonic, !noalias !24
  br label %425

425:                                              ; preds = %419, %422
  %426 = ptrtoint %class.GrVkImageView* %328 to i64
  %427 = bitcast %class.GrVkImageView* %328 to void (%class.GrManagedResource*)***
  %428 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %427, align 8
  %429 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %428, i64 2
  %430 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %429, align 8
  call void %430(%class.GrManagedResource* %420) #5
  call void @_ZN8SkTArrayI5sk_spIK17GrManagedResourceELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.414* %315, i32 1, i32 1) #5
  %431 = load %class.sk_sp.415*, %class.sk_sp.415** %316, align 8
  %432 = load i64, i64* %318, align 8
  %433 = lshr i64 %432, 1
  %434 = and i64 %433, 2147483647
  %435 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %431, i64 %434
  %436 = add i64 %432, 2
  %437 = and i64 %436, 4294967294
  %438 = and i64 %432, -4294967295
  %439 = or i64 %437, %438
  store i64 %439, i64* %318, align 8
  %440 = bitcast %class.sk_sp.415* %435 to i64*
  store i64 %426, i64* %440, align 8
  %441 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %326, i64 0, i32 1, i32 5
  %442 = bitcast %"class.GrVkImage::Resource"** %441 to %class.GrManagedResource**
  %443 = load %class.GrManagedResource*, %class.GrManagedResource** %442, align 8
  %444 = icmp eq %class.GrManagedResource* %443, null
  br i1 %444, label %448, label %445

445:                                              ; preds = %425
  %446 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %443, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = atomicrmw add i32* %446, i32 1 monotonic, !noalias !27
  br label %448

448:                                              ; preds = %425, %445
  %449 = ptrtoint %class.GrManagedResource* %443 to i64
  %450 = bitcast %class.GrManagedResource* %443 to void (%class.GrManagedResource*)***
  %451 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %450, align 8
  %452 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %451, i64 2
  %453 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %452, align 8
  call void %453(%class.GrManagedResource* %443) #5
  call void @_ZN8SkTArrayI5sk_spIK17GrManagedResourceELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.414* %315, i32 1, i32 1) #5
  %454 = load %class.sk_sp.415*, %class.sk_sp.415** %316, align 8
  %455 = load i64, i64* %318, align 8
  %456 = lshr i64 %455, 1
  %457 = and i64 %456, 2147483647
  %458 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %454, i64 %457
  %459 = add i64 %455, 2
  %460 = and i64 %459, 4294967294
  %461 = and i64 %455, -4294967295
  %462 = or i64 %460, %461
  store i64 %462, i64* %318, align 8
  %463 = bitcast %class.sk_sp.415* %458 to i64*
  store i64 %449, i64* %463, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %299) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %294) #5
  %464 = add nuw nsw i64 %321, 1
  %465 = load i32, i32* %12, align 8
  %466 = sext i32 %465 to i64
  %467 = icmp slt i64 %464, %466
  br i1 %467, label %320, label %468

468:                                              ; preds = %448
  %469 = icmp eq i32 %465, 1
  br i1 %469, label %470, label %478

470:                                              ; preds = %468
  %471 = load %struct.SamplerBindings*, %struct.SamplerBindings** %17, align 8
  %472 = bitcast %struct.SamplerBindings* %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %471, i64 0, i32 0, i32 2
  %475 = load i32, i32* %474, align 8
  %476 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %471, i64 0, i32 1
  %477 = load %class.GrVkTexture*, %class.GrVkTexture** %476, align 8
  call void @_ZN11GrVkTexture23addDescriptorSetToCacheEPK17GrVkDescriptorSet14GrSamplerState(%class.GrVkTexture* %477, %class.GrVkDescriptorSet* nonnull %286, i64 %473, i32 %475) #5
  br label %478

478:                                              ; preds = %288, %470, %468
  %479 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 0, i32 0
  %480 = load %class.GrVkPipeline*, %class.GrVkPipeline** %479, align 8
  %481 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %480, i64 0, i32 2
  %482 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %481, align 8
  %483 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %286, i64 0, i32 1
  call void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer* %5, %class.GrVkGpu* %1, %struct.VkPipelineLayout_T* %482, i32 1, i32 1, %struct.VkDescriptorSet_T** %483, i32 0, i32* null) #5
  %484 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %286, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = atomicrmw add i32* %484, i32 1 monotonic, !noalias !30
  %486 = ptrtoint %class.GrVkDescriptorSet* %286 to i64
  %487 = bitcast %class.GrVkDescriptorSet* %286 to %class.GrManagedResource*
  %488 = bitcast %class.GrVkDescriptorSet* %286 to void (%class.GrManagedResource*)***
  %489 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %488, align 8
  %490 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %489, i64 2
  %491 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %490, align 8
  call void %491(%class.GrManagedResource* nonnull %487) #5
  %492 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 2, i32 0, i32 0, i64 256
  %493 = bitcast i8* %492 to %class.SkTArray.418*
  call void @_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE(%class.SkTArray.418* %493, i32 1, i32 1) #5
  %494 = bitcast i8* %492 to %class.gr_sp**
  %495 = load %class.gr_sp*, %class.gr_sp** %494, align 8
  %496 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 2, i32 0, i32 0, i64 264
  %497 = bitcast i8* %496 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = lshr i64 %498, 1
  %500 = and i64 %499, 2147483647
  %501 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %495, i64 %500
  %502 = add i64 %498, 2
  %503 = and i64 %502, 4294967294
  %504 = and i64 %498, -4294967295
  %505 = or i64 %503, %504
  store i64 %505, i64* %497, align 8
  %506 = bitcast %class.gr_sp* %501 to i64*
  store i64 %486, i64* %506, align 8
  %507 = load atomic i32, i32* %484 acquire, align 4
  %508 = icmp eq i32 %507, 1
  br i1 %508, label %509, label %515

509:                                              ; preds = %478
  %510 = bitcast %class.GrVkDescriptorSet* %286 to %class.GrRecycledResource*
  %511 = bitcast %class.GrVkDescriptorSet* %286 to void (%class.GrRecycledResource*)***
  %512 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %511, align 8
  %513 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %512, i64 5
  %514 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %513, align 8
  call void %514(%class.GrRecycledResource* nonnull %510) #5
  br label %525

515:                                              ; preds = %478
  %516 = atomicrmw add i32* %484, i32 -1 acq_rel
  %517 = icmp eq i32 %516, 1
  br i1 %517, label %518, label %525

518:                                              ; preds = %515
  %519 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %488, align 8
  %520 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %519, i64 4
  %521 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %520, align 8
  call void %521(%class.GrManagedResource* nonnull %487) #5
  %522 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %488, align 8
  %523 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %522, i64 1
  %524 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %523, align 8
  call void %524(%class.GrManagedResource* nonnull %487) #5
  br label %525

525:                                              ; preds = %518, %515, %509, %358, %355, %349, %283, %239
  %526 = phi i1 [ true, %239 ], [ false, %283 ], [ false, %349 ], [ false, %355 ], [ false, %358 ], [ true, %509 ], [ true, %515 ], [ true, %518 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #5
  %527 = load %struct.SamplerBindings*, %struct.SamplerBindings** %17, align 8
  %528 = load i32, i32* %18, align 8
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %527, i64 %529
  br label %531

531:                                              ; preds = %531, %525
  %532 = phi %struct.SamplerBindings* [ %530, %525 ], [ %534, %531 ]
  %533 = icmp ugt %struct.SamplerBindings* %532, %527
  %534 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %532, i64 -1
  br i1 %533, label %531, label %535

535:                                              ; preds = %531
  %536 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %527, i64 0, i32 0, i32 0, i64 0
  %537 = icmp eq i32 %528, 0
  br i1 %537, label %542, label %538

538:                                              ; preds = %535
  %539 = icmp sgt i32 %528, 8
  br i1 %539, label %540, label %541

540:                                              ; preds = %538
  call void @_Z7sk_freePv(i8* %536) #5
  br label %541

541:                                              ; preds = %540, %538
  store %struct.SamplerBindings* null, %struct.SamplerBindings** %17, align 8
  store i32 0, i32* %18, align 8
  br label %542

542:                                              ; preds = %535, %541
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %16) #5
  br label %543

543:                                              ; preds = %6, %542
  %544 = phi i1 [ %526, %542 ], [ true, %6 ]
  ret i1 %544
}

declare dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor*, i32) local_unnamed_addr #1

declare void @_ZNK10GrPipeline19visitTextureEffectsERKNSt3__18functionIFvRK15GrTextureEffectEEE(%class.GrPipeline*, %"class.std::__1::function.578"* dereferenceable(32)) local_unnamed_addr #1

declare %class.GrVkDescriptorSet* @_ZN11GrVkTexture19cachedSingleDescSetE14GrSamplerState(%class.GrVkTexture*, i64, i32) local_unnamed_addr #1

declare %class.GrVkDescriptorSet* @_ZN20GrVkResourceProvider23getSamplerDescriptorSetERK16GrResourceHandleIN24GrVkDescriptorSetManager10HandleKindEE(%class.GrVkResourceProvider*, %class.GrResourceHandle* dereferenceable(4)) local_unnamed_addr #1

declare %class.GrVkSampler* @_ZN20GrVkResourceProvider29findOrCreateCompatibleSamplerE14GrSamplerStateRK23GrVkYcbcrConversionInfo(%class.GrVkResourceProvider*, i64, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN11GrVkTexture23addDescriptorSetToCacheEPK17GrVkDescriptorSet14GrSamplerState(%class.GrVkTexture*, %class.GrVkDescriptorSet*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkPipelineState25setAndBindInputAttachmentEP7GrVkGpu5gr_spIK17GrVkDescriptorSetXadL_ZNK17GrManagedResource3refEvEEXadL_ZNK18GrRecycledResource7recycleEvEEEP17GrVkCommandBuffer(%class.GrVkPipelineState* nocapture readonly, %class.GrVkGpu*, %class.gr_sp.567* nocapture readonly, %class.GrVkCommandBuffer*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 0, i32 0
  %6 = load %class.GrVkPipeline*, %class.GrVkPipeline** %5, align 8
  %7 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %6, i64 0, i32 2
  %8 = load %struct.VkPipelineLayout_T*, %struct.VkPipelineLayout_T** %7, align 8
  %9 = getelementptr inbounds %class.gr_sp.567, %class.gr_sp.567* %2, i64 0, i32 0
  %10 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %9, align 8
  %11 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %10, i64 0, i32 1
  tail call void @_ZN17GrVkCommandBuffer18bindDescriptorSetsEPK7GrVkGpuP18VkPipelineLayout_TjjPKP17VkDescriptorSet_TjPKj(%class.GrVkCommandBuffer* %3, %class.GrVkGpu* %1, %struct.VkPipelineLayout_T* %8, i32 2, i32 1, %struct.VkDescriptorSet_T** %11, i32 0, i32* null) #5
  %12 = bitcast %class.gr_sp.567* %2 to %class.GrRecycledResource**
  %13 = load %class.GrRecycledResource*, %class.GrRecycledResource** %12, align 8
  %14 = icmp eq %class.GrRecycledResource* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.GrRecycledResource, %class.GrRecycledResource* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %15, %4
  %19 = ptrtoint %class.GrRecycledResource* %13 to i64
  %20 = bitcast %class.GrRecycledResource* %13 to %class.GrManagedResource*
  %21 = bitcast %class.GrRecycledResource* %13 to void (%class.GrManagedResource*)***
  %22 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %22, i64 2
  %24 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %23, align 8
  tail call void %24(%class.GrManagedResource* %20) #5
  %25 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %3, i64 0, i32 2, i32 0, i32 0, i64 256
  %26 = bitcast i8* %25 to %class.SkTArray.418*
  tail call void @_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE(%class.SkTArray.418* %26, i32 1, i32 1) #5
  %27 = bitcast i8* %25 to %class.gr_sp**
  %28 = load %class.gr_sp*, %class.gr_sp** %27, align 8
  %29 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %3, i64 0, i32 2, i32 0, i32 0, i64 264
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = lshr i64 %31, 1
  %33 = and i64 %32, 2147483647
  %34 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %28, i64 %33
  %35 = add i64 %31, 2
  %36 = and i64 %35, 4294967294
  %37 = and i64 %31, -4294967295
  %38 = or i64 %36, %37
  store i64 %38, i64* %30, align 8
  %39 = bitcast %class.gr_sp* %34 to i64*
  store i64 %19, i64* %39, align 8
  ret i1 true
}

declare void @_ZNK20GrUniformDataManager5set1fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEf(%class.GrUniformDataManager*, i32, float) unnamed_addr #1

declare void @_ZNK20GrUniformDataManager6set4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrUniformDataManager*, i32, i32, float*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkPipelineState12bindPipelineEPK7GrVkGpuP17GrVkCommandBuffer(%class.GrVkPipelineState* nocapture readonly, %class.GrVkGpu*, %class.GrVkCommandBuffer*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %6 = getelementptr inbounds %class.GrVkPipelineState, %class.GrVkPipelineState* %0, i64 0, i32 0, i32 0
  %7 = load %class.GrVkPipeline*, %class.GrVkPipeline** %6, align 8
  %8 = icmp eq %class.GrVkPipeline* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %3, %9
  store %class.GrVkPipeline* %7, %class.GrVkPipeline** %5, align 8
  call void @_ZN17GrVkCommandBuffer12bindPipelineEPK7GrVkGpu5sk_spIK12GrVkPipelineE(%class.GrVkCommandBuffer* %2, %class.GrVkGpu* %1, %class.sk_sp* nonnull %4) #5
  %13 = load %class.GrVkPipeline*, %class.GrVkPipeline** %5, align 8
  %14 = icmp eq %class.GrVkPipeline* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = bitcast %class.GrVkPipeline* %13 to %class.GrManagedResource*
  %17 = getelementptr inbounds %class.GrVkPipeline, %class.GrVkPipeline* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %28

20:                                               ; preds = %15
  %21 = bitcast %class.GrVkPipeline* %13 to void (%class.GrManagedResource*)***
  %22 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %22, i64 4
  %24 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %23, align 8
  call void %24(%class.GrManagedResource* nonnull %16) #5
  %25 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %21, align 8
  %26 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %25, i64 1
  %27 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %26, align 8
  call void %27(%class.GrManagedResource* nonnull %16) #5
  br label %28

28:                                               ; preds = %12, %15, %20
  ret void
}

declare void @_ZN17GrVkCommandBuffer12bindPipelineEPK7GrVkGpu5sk_spIK12GrVkPipelineE(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %class.sk_sp*) local_unnamed_addr #1

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare void @_ZN23GrGLSLFragmentProcessor12ParallelIterC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelIter"*, %class.GrFragmentProcessor* dereferenceable(64), %class.GrGLSLFragmentProcessor* dereferenceable(40)) unnamed_addr #1

declare zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"*, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.421*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.421, %class.SkTArray.421* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.421, %class.SkTArray.421* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.422*, %class.sk_sp.422** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.422* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.422*, %class.sk_sp.422** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.422, %class.sk_sp.422* %60, i64 %51, i32 0
  %62 = load %class.GrBuffer*, %class.GrBuffer** %61, align 8
  %63 = icmp eq %class.GrBuffer* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %class.GrBuffer* %62 to void (%class.GrBuffer*)***
  %66 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %66, i64 3
  %68 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %67, align 8
  tail call void %68(%class.GrBuffer* nonnull %62) #5
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.421* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #5
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.425*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.425, %class.SkTArray.425* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %90

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %90, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %78, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.425, %class.SkTArray.425* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %72, %48
  %51 = phi i64 [ 0, %48 ], [ %73, %72 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.gr_sp.426*, %class.gr_sp.426** %49, align 8
  %55 = getelementptr inbounds %class.gr_sp.426, %class.gr_sp.426* %54, i64 %51
  %56 = getelementptr inbounds %class.gr_sp.426, %class.gr_sp.426* %55, i64 0, i32 0
  %57 = bitcast %class.gr_sp.426* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrSurface* null, %class.GrSurface** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.gr_sp.426*, %class.gr_sp.426** %49, align 8
  %61 = getelementptr inbounds %class.gr_sp.426, %class.gr_sp.426* %60, i64 %51, i32 0
  %62 = load %class.GrSurface*, %class.GrSurface** %61, align 8
  %63 = icmp eq %class.GrSurface* %62, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %62, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %62, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %69, i64 -1
  %71 = bitcast %class.GrIORef* %70 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %71, i32 1) #5
  br label %72

72:                                               ; preds = %68, %64, %50
  %73 = add nuw nsw i64 %51, 1
  %74 = load i64, i64* %4, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = icmp ult i64 %73, %76
  br i1 %77, label %50, label %78

78:                                               ; preds = %72, %35
  %79 = phi i64 [ %45, %35 ], [ %74, %72 ]
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %80, 0
  %82 = bitcast %class.SkTArray.425* %0 to i8**
  br i1 %81, label %86, label %83

83:                                               ; preds = %78
  %84 = load i8*, i8** %82, align 8
  tail call void @_Z7sk_freePv(i8* %84) #5
  %85 = load i64, i64* %4, align 8
  br label %86

86:                                               ; preds = %78, %83
  %87 = phi i64 [ %85, %83 ], [ %79, %78 ]
  store i8* %44, i8** %82, align 8
  %88 = and i64 %87, -4294967298
  %89 = or i64 %88, 1
  store i64 %89, i64* %4, align 8
  br label %90

90:                                               ; preds = %86, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK17GrManagedResourceELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.414*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.414, %class.SkTArray.414* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %94

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %94, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %82, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.414, %class.SkTArray.414* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %76, %48
  %51 = phi i64 [ 0, %48 ], [ %77, %76 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.415*, %class.sk_sp.415** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.415* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrManagedResource* null, %class.GrManagedResource** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.415*, %class.sk_sp.415** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.415, %class.sk_sp.415* %60, i64 %51, i32 0
  %62 = load %class.GrManagedResource*, %class.GrManagedResource** %61, align 8
  %63 = icmp eq %class.GrManagedResource* %62, null
  br i1 %63, label %76, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = bitcast %class.GrManagedResource* %62 to void (%class.GrManagedResource*)***
  %70 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %70, i64 4
  %72 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %71, align 8
  tail call void %72(%class.GrManagedResource* nonnull %62) #5
  %73 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %69, align 8
  %74 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %73, i64 1
  %75 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %74, align 8
  tail call void %75(%class.GrManagedResource* nonnull %62) #5
  br label %76

76:                                               ; preds = %68, %64, %50
  %77 = add nuw nsw i64 %51, 1
  %78 = load i64, i64* %4, align 8
  %79 = lshr i64 %78, 1
  %80 = and i64 %79, 2147483647
  %81 = icmp ult i64 %77, %80
  br i1 %81, label %50, label %82

82:                                               ; preds = %76, %35
  %83 = phi i64 [ %45, %35 ], [ %78, %76 ]
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %84, 0
  %86 = bitcast %class.SkTArray.414* %0 to i8**
  br i1 %85, label %90, label %87

87:                                               ; preds = %82
  %88 = load i8*, i8** %86, align 8
  tail call void @_Z7sk_freePv(i8* %88) #5
  %89 = load i64, i64* %4, align 8
  br label %90

90:                                               ; preds = %82, %87
  %91 = phi i64 [ %89, %87 ], [ %83, %82 ]
  store i8* %44, i8** %86, align 8
  %92 = and i64 %91, -4294967298
  %93 = or i64 %92, 1
  store i64 %93, i64* %4, align 8
  br label %94

94:                                               ; preds = %90, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5gr_spIK18GrRecycledResourceXadL_ZNK17GrManagedResource3refEvEEXadL_ZNKS1_7recycleEvEEELb0EE12checkReallocEiNS5_11ReallocTypeE(%class.SkTArray.418*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.418, %class.SkTArray.418* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %103

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %103, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %91, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.418, %class.SkTArray.418* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %85, %48
  %51 = phi i64 [ 0, %48 ], [ %86, %85 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.gr_sp*, %class.gr_sp** %49, align 8
  %55 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %54, i64 %51
  %56 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %55, i64 0, i32 0
  %57 = bitcast %class.gr_sp* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrRecycledResource* null, %class.GrRecycledResource** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.gr_sp*, %class.gr_sp** %49, align 8
  %61 = getelementptr inbounds %class.gr_sp, %class.gr_sp* %60, i64 %51, i32 0
  %62 = load %class.GrRecycledResource*, %class.GrRecycledResource** %61, align 8
  %63 = icmp eq %class.GrRecycledResource* %62, null
  br i1 %63, label %85, label %64

64:                                               ; preds = %50
  %65 = bitcast %class.GrRecycledResource* %62 to %class.GrManagedResource*
  %66 = getelementptr inbounds %class.GrRecycledResource, %class.GrRecycledResource* %62, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 acquire, align 4
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = bitcast %class.GrRecycledResource* %62 to void (%class.GrRecycledResource*)***
  %71 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %71, i64 5
  %73 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %72, align 8
  tail call void %73(%class.GrRecycledResource* nonnull %62) #5
  br label %85

74:                                               ; preds = %64
  %75 = atomicrmw add i32* %66, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %85

77:                                               ; preds = %74
  %78 = bitcast %class.GrRecycledResource* %62 to void (%class.GrManagedResource*)***
  %79 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %79, i64 4
  %81 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %80, align 8
  tail call void %81(%class.GrManagedResource* nonnull %65) #5
  %82 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %78, align 8
  %83 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %82, i64 1
  %84 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %83, align 8
  tail call void %84(%class.GrManagedResource* nonnull %65) #5
  br label %85

85:                                               ; preds = %77, %74, %69, %50
  %86 = add nuw nsw i64 %51, 1
  %87 = load i64, i64* %4, align 8
  %88 = lshr i64 %87, 1
  %89 = and i64 %88, 2147483647
  %90 = icmp ult i64 %86, %89
  br i1 %90, label %50, label %91

91:                                               ; preds = %85, %35
  %92 = phi i64 [ %45, %35 ], [ %87, %85 ]
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  %95 = bitcast %class.SkTArray.418* %0 to i8**
  br i1 %94, label %99, label %96

96:                                               ; preds = %91
  %97 = load i8*, i8** %95, align 8
  tail call void @_Z7sk_freePv(i8* %97) #5
  %98 = load i64, i64* %4, align 8
  br label %99

99:                                               ; preds = %91, %96
  %100 = phi i64 [ %98, %96 ], [ %92, %91 ]
  store i8* %44, i8** %95, align 8
  %101 = and i64 %100, -4294967298
  %102 = or i64 %101, 1
  store i64 %102, i64* %4, align 8
  br label %103

103:                                              ; preds = %99, %32, %21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPK11GrVkSamplerLb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.400*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.400, %class.SkTArray.400* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.400, %class.SkTArray.400* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.GrVkSampler**, %class.GrVkSampler*** %49, align 8
  %55 = getelementptr inbounds %class.GrVkSampler*, %class.GrVkSampler** %54, i64 %51
  %56 = bitcast %class.GrVkSampler** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.400* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #5
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRK15GrTextureEffectEE11__call_implINS0_20__default_alloc_funcIZN17GrVkPipelineState18setAndBindTexturesEP7GrVkGpuRK19GrGeometryProcessorRK10GrPipelinePKPK14GrSurfaceProxyP17GrVkCommandBufferE3$_0S5_EEEEvPKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %class.GrTextureEffect* nocapture readonly dereferenceable(144)) #0 align 2 {
  %3 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %1, i64 0, i32 3
  %4 = bitcast %class.GrSamplerState* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %1, i64 0, i32 3, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %1, i64 0, i32 2, i32 0, i32 0
  %9 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %8, align 8
  %10 = icmp eq %class.GrSurfaceProxy* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = bitcast %class.GrSurfaceProxy* %9 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %13 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %12, align 8
  %14 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %13, i64 3
  %15 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %14, align 8
  %16 = tail call %class.GrTextureProxy* %15(%class.GrSurfaceProxy* nonnull %9) #5
  br label %17

17:                                               ; preds = %11, %2
  %18 = phi %class.GrTextureProxy* [ %16, %11 ], [ null, %2 ]
  %19 = bitcast %class.GrTextureProxy* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.GrTextureProxy* %18 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %class.GrSurface**
  %28 = load %class.GrSurface*, %class.GrSurface** %27, align 8
  %29 = icmp eq %class.GrSurface* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %17
  %31 = bitcast %class.GrSurface* %28 to %class.GrTexture* (%class.GrSurface*)***
  %32 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %31, align 8
  %33 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %32, i64 10
  %34 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %33, align 8
  %35 = tail call %class.GrTexture* %34(%class.GrSurface* nonnull %28) #5
  br label %36

36:                                               ; preds = %17, %30
  %37 = phi %class.GrTexture* [ %35, %30 ], [ null, %17 ]
  %38 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkAutoSTArray.553**
  %39 = load %class.SkAutoSTArray.553*, %class.SkAutoSTArray.553** %38, align 8
  %40 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %41 = bitcast [8 x i8]* %40 to i32**
  %42 = load i32*, i32** %41, align 8
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %class.SkAutoSTArray.553, %class.SkAutoSTArray.553* %39, i64 0, i32 1
  %46 = load %struct.SamplerBindings*, %struct.SamplerBindings** %45, align 8
  %47 = sext i32 %43 to i64
  %48 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %46, i64 %47
  %49 = bitcast %struct.SamplerBindings* %48 to i64*
  store i64 %5, i64* %49, align 8
  %50 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %46, i64 %47, i32 0, i32 2
  store i32 %7, i32* %50, align 8
  %51 = getelementptr inbounds %struct.SamplerBindings, %struct.SamplerBindings* %46, i64 %47, i32 1
  %52 = bitcast %class.GrVkTexture** %51 to %class.GrTexture**
  store %class.GrTexture* %37, %class.GrTexture** %52, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK18BlockIndexIteratorIRKN18GrVkUniformHandler13VkUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN23GrGLSLFragmentProcessor13ParallelRange5beginEv: argument 0"}
!8 = distinct !{!8, !"_ZN23GrGLSLFragmentProcessor13ParallelRange5beginEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_: argument 0"}
!11 = distinct !{!11, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_: argument 0"}
!14 = distinct !{!14, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_: argument 0"}
!17 = distinct !{!17, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_Z9gr_ref_rpIK18GrRecycledResourceE5gr_spIT_XadsrS3_3refEXadsrS3_7recycleEEPKS3_: argument 0"}
!20 = distinct !{!20, !"_Z9gr_ref_rpIK18GrRecycledResourceE5gr_spIT_XadsrS3_3refEXadsrS3_7recycleEEPKS3_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_: argument 0"}
!23 = distinct !{!23, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_: argument 0"}
!26 = distinct !{!26, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_: argument 0"}
!29 = distinct !{!29, !"_Z9sk_ref_spI17GrManagedResourceE5sk_spIT_EPKS2_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_Z9gr_ref_rpIK18GrRecycledResourceE5gr_spIT_XadsrS3_3refEXadsrS3_7recycleEEPKS3_: argument 0"}
!32 = distinct !{!32, !"_Z9gr_ref_rpIK18GrRecycledResourceE5gr_spIT_XadsrS3_3refEXadsrS3_7recycleEEPKS3_"}
