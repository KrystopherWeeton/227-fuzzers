; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_animation_timeline.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_animation_timeline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.cc::AnimationHost" = type { %"class.cc::MutatorHost", %"class.cc::LayerTreeMutatorClient", %"class.std::__1::unordered_map.14", %"class.std::__1::vector", %"class.std::__1::unordered_map.51", %"class.cc::MutatorHostClient"*, %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", i32, i8, %"class.std::__1::unique_ptr.87", i64, i8, i8, i8, i8, i8, %"class.std::__1::vector.93", %"class.base::WeakPtrFactory" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::LayerTreeMutatorClient" = type { i32 (...)** }
%"class.std::__1::unordered_map.14" = type { %"class.std::__1::__hash_table.15" }
%"class.std::__1::__hash_table.15" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base.19"** }
%"struct.std::__1::__hash_node_base.19" = type { %"struct.std::__1::__hash_node_base.19"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator.21" }
%"class.std::__1::__bucket_list_deallocator.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base.19" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.40*, %class.scoped_refptr.40*, %"class.std::__1::__compressed_pair.46" }
%class.scoped_refptr.40 = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type { i32 (...)**, %"class.base::RefCounted.41", %"class.cc::AnimationHost"*, %"class.cc::AnimationTimeline"*, %"class.cc::AnimationDelegate"*, i32, %"class.std::__1::unique_ptr.42" }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.cc::KeyframeEffect"* }
%"class.cc::KeyframeEffect" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.scoped_refptr.40* }
%"class.std::__1::unordered_map.51" = type { %"class.std::__1::__hash_table.52" }
%"class.std::__1::__hash_table.52" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base.56"** }
%"struct.std::__1::__hash_node_base.56" = type { %"struct.std::__1::__hash_node_base.56"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator.58" }
%"class.std::__1::__bucket_list_deallocator.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base.56" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.cc::ScrollOffsetAnimations"* }
%"class.cc::ScrollOffsetAnimations" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.cc::ScrollOffsetAnimationsImpl"* }
%"class.cc::ScrollOffsetAnimationsImpl" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.cc::LayerTreeMutator"* }
%"class.cc::LayerTreeMutator" = type { i32 (...)** }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"class.std::__1::__compressed_pair.95" }
%"struct.cc::MutatorHost::PendingThroughputTrackerInfo" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.100 }
%class.scoped_refptr.100 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.102" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i8 }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { double*, double*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { double* }
%"class.cc::ScrollTimeline" = type { %"class.cc::AnimationTimeline.base", %"class.absl::optional", %"class.absl::optional", i32, %"class.std::__1::vector.107", double }
%"class.cc::AnimationTimeline.base" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::CompositorAnimation" = type { %"class.cc::AnimationDelegate", %class.scoped_refptr.40, %"class.blink::CompositorAnimationDelegate"* }
%"class.blink::CompositorAnimationDelegate" = type opaque

@_ZN5blink27CompositorAnimationTimelineC1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorAnimationTimeline"*), void (%"class.blink::CompositorAnimationTimeline"*)* @_ZN5blink27CompositorAnimationTimelineC2Ev
@_ZN5blink27CompositorAnimationTimelineC1E13scoped_refptrIN2cc17AnimationTimelineEE = hidden unnamed_addr alias void (%"class.blink::CompositorAnimationTimeline"*, %"class.cc::AnimationTimeline"*), void (%"class.blink::CompositorAnimationTimeline"*, %"class.cc::AnimationTimeline"*)* @_ZN5blink27CompositorAnimationTimelineC2E13scoped_refptrIN2cc17AnimationTimelineEE
@_ZN5blink27CompositorAnimationTimelineD1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorAnimationTimeline"*), void (%"class.blink::CompositorAnimationTimeline"*)* @_ZN5blink27CompositorAnimationTimelineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorAnimationTimelineC2Ev(%"class.blink::CompositorAnimationTimeline"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2cc19AnimationIdProvider14NextTimelineIdEv() #7
  %3 = tail call %"class.cc::AnimationTimeline"* @_ZN2cc17AnimationTimeline6CreateEi(i32 %2) #7
  %4 = getelementptr inbounds %"class.blink::CompositorAnimationTimeline", %"class.blink::CompositorAnimationTimeline"* %0, i64 0, i32 0, i32 0
  store %"class.cc::AnimationTimeline"* %3, %"class.cc::AnimationTimeline"** %4, align 8
  ret void
}

declare %"class.cc::AnimationTimeline"* @_ZN2cc17AnimationTimeline6CreateEi(i32) local_unnamed_addr #1

declare i32 @_ZN2cc19AnimationIdProvider14NextTimelineIdEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorAnimationTimelineC2E13scoped_refptrIN2cc17AnimationTimelineEE(%"class.blink::CompositorAnimationTimeline"* nocapture, %"class.cc::AnimationTimeline"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorAnimationTimeline", %"class.blink::CompositorAnimationTimeline"* %0, i64 0, i32 0, i32 0
  store %"class.cc::AnimationTimeline"* %1, %"class.cc::AnimationTimeline"** %3, align 8
  %4 = icmp eq %"class.cc::AnimationTimeline"* %1, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #7
  %7 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #7
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.cc::AnimationTimeline"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.cc::AnimationTimeline"*)***
  %16 = load void (%"class.cc::AnimationTimeline"*)**, void (%"class.cc::AnimationTimeline"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::AnimationTimeline"*)*, void (%"class.cc::AnimationTimeline"*)** %16, i64 6
  %18 = load void (%"class.cc::AnimationTimeline"*)*, void (%"class.cc::AnimationTimeline"*)** %17, align 8
  tail call void %18(%"class.cc::AnimationTimeline"* nonnull %14) #7
  br label %19

19:                                               ; preds = %2, %5, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorAnimationTimelineD2Ev(%"class.blink::CompositorAnimationTimeline"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimationTimeline", %"class.blink::CompositorAnimationTimeline"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %3, i64 0, i32 6
  %5 = load %"class.cc::AnimationHost"*, %"class.cc::AnimationHost"** %4, align 8
  %6 = icmp eq %"class.cc::AnimationHost"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = icmp eq %"class.cc::AnimationTimeline"* %3, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %3, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #7
  br label %11

11:                                               ; preds = %7, %9
  tail call void @_ZN2cc13AnimationHost23RemoveAnimationTimelineE13scoped_refptrINS_17AnimationTimelineEE(%"class.cc::AnimationHost"* nonnull %5, %"class.cc::AnimationTimeline"* %3) #7
  %12 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %2, align 8
  br label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.cc::AnimationTimeline"* [ %3, %1 ], [ %12, %11 ]
  %15 = icmp eq %"class.cc::AnimationTimeline"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.cc::AnimationTimeline", %"class.cc::AnimationTimeline"* %14, i64 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #7
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %17, i64 -2
  %24 = bitcast %"class.base::RefCounted"* %23 to %"class.cc::AnimationTimeline"*
  %25 = bitcast %"class.base::RefCounted"* %23 to void (%"class.cc::AnimationTimeline"*)***
  %26 = load void (%"class.cc::AnimationTimeline"*)**, void (%"class.cc::AnimationTimeline"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.cc::AnimationTimeline"*)*, void (%"class.cc::AnimationTimeline"*)** %26, i64 6
  %28 = load void (%"class.cc::AnimationTimeline"*)*, void (%"class.cc::AnimationTimeline"*)** %27, align 8
  tail call void %28(%"class.cc::AnimationTimeline"* nonnull %24) #7
  br label %29

29:                                               ; preds = %13, %16, %22
  ret void
}

declare void @_ZN2cc13AnimationHost23RemoveAnimationTimelineE13scoped_refptrINS_17AnimationTimelineEE(%"class.cc::AnimationHost"*, %"class.cc::AnimationTimeline"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cc::AnimationTimeline"* @_ZNK5blink27CompositorAnimationTimeline20GetAnimationTimelineEv(%"class.blink::CompositorAnimationTimeline"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorAnimationTimeline", %"class.blink::CompositorAnimationTimeline"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %2, align 8
  ret %"class.cc::AnimationTimeline"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorAnimationTimeline24UpdateCompositorTimelineEN4absl8optionalIN2cc9ElementIdEEENSt3__16vectorIdNS6_9allocatorIdEEEE(%"class.blink::CompositorAnimationTimeline"* nocapture readonly, i8, i64, %"class.std::__1::vector.107"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.107", align 8
  %6 = bitcast %"class.blink::CompositorAnimationTimeline"* %0 to %"class.cc::ScrollTimeline"**
  %7 = load %"class.cc::ScrollTimeline"*, %"class.cc::ScrollTimeline"** %6, align 8
  %8 = bitcast %"class.std::__1::vector.107"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #7
  %9 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %3, i64 0, i32 0, i32 1
  %10 = bitcast double** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.107"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %4
  %18 = icmp ugt i64 %15, 2305843009213693951
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector.107"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %20) #8
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #9
  %23 = bitcast i8* %22 to double*
  %24 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %5, i64 0, i32 0, i32 1
  %25 = bitcast double** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector.107"* %5 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds double, double* %23, i64 %15
  %28 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store double* %27, double** %28, align 8
  %29 = bitcast double** %24 to i64*
  %30 = ptrtoint i8* %22 to i64
  %31 = icmp sgt i64 %14, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %21
  %33 = lshr exact i64 %14, 3
  %34 = inttoptr i64 %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %34, i64 %14, i1 false) #7
  %35 = getelementptr inbounds double, double* %23, i64 %33
  %36 = ptrtoint double* %35 to i64
  br label %37

37:                                               ; preds = %32, %21
  %38 = phi i64 [ %36, %32 ], [ %30, %21 ]
  store i64 %38, i64* %29, align 8
  br label %39

39:                                               ; preds = %4, %37
  call void @_ZN2cc14ScrollTimeline32UpdateScrollerIdAndScrollOffsetsEN4absl8optionalINS_9ElementIdEEENSt3__16vectorIdNS5_9allocatorIdEEEE(%"class.cc::ScrollTimeline"* %7, i8 %1, i64 %2, %"class.std::__1::vector.107"* nonnull %5) #7
  %40 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %5, i64 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = ptrtoint double* %41 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %5, i64 0, i32 0, i32 1
  %46 = bitcast double** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast double* %41 to i8*
  call void @_ZdlPv(i8* %47) #9
  br label %48

48:                                               ; preds = %39, %43
  ret void
}

declare void @_ZN2cc14ScrollTimeline32UpdateScrollerIdAndScrollOffsetsEN4absl8optionalINS_9ElementIdEEENSt3__16vectorIdNS5_9allocatorIdEEEE(%"class.cc::ScrollTimeline"*, i8, i64, %"class.std::__1::vector.107"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorAnimationTimeline17AnimationAttachedERKNS_25CompositorAnimationClientE(%"class.blink::CompositorAnimationTimeline"* nocapture readonly, %"class.blink::CompositorAnimationClient"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CompositorAnimationClient"* %1 to %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)***
  %4 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)**, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %4, i64 2
  %6 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %5, align 8
  %7 = tail call %"class.blink::CompositorAnimation"* %6(%"class.blink::CompositorAnimationClient"* %1) #7
  %8 = icmp eq %"class.blink::CompositorAnimation"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::CompositorAnimationTimeline", %"class.blink::CompositorAnimationTimeline"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %10, align 8
  %12 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)**, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*** %3, align 8
  %13 = getelementptr inbounds %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %12, i64 2
  %14 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %13, align 8
  %15 = tail call %"class.blink::CompositorAnimation"* %14(%"class.blink::CompositorAnimationClient"* %1) #7
  %16 = tail call %"class.cc::Animation"* @_ZNK5blink19CompositorAnimation11CcAnimationEv(%"class.blink::CompositorAnimation"* %15) #7
  %17 = icmp eq %"class.cc::Animation"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %16, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #7
  br label %20

20:                                               ; preds = %9, %18
  tail call void @_ZN2cc17AnimationTimeline15AttachAnimationE13scoped_refptrINS_9AnimationEE(%"class.cc::AnimationTimeline"* %11, %"class.cc::Animation"* %16) #7
  br label %21

21:                                               ; preds = %2, %20
  ret void
}

declare void @_ZN2cc17AnimationTimeline15AttachAnimationE13scoped_refptrINS_9AnimationEE(%"class.cc::AnimationTimeline"*, %"class.cc::Animation"*) local_unnamed_addr #1

declare %"class.cc::Animation"* @_ZNK5blink19CompositorAnimation11CcAnimationEv(%"class.blink::CompositorAnimation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27CompositorAnimationTimeline18AnimationDestroyedERKNS_25CompositorAnimationClientE(%"class.blink::CompositorAnimationTimeline"* nocapture readonly, %"class.blink::CompositorAnimationClient"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::CompositorAnimationClient"* %1 to %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)***
  %4 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)**, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %4, i64 2
  %6 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %5, align 8
  %7 = tail call %"class.blink::CompositorAnimation"* %6(%"class.blink::CompositorAnimationClient"* %1) #7
  %8 = icmp eq %"class.blink::CompositorAnimation"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::CompositorAnimationTimeline", %"class.blink::CompositorAnimationTimeline"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.cc::AnimationTimeline"*, %"class.cc::AnimationTimeline"** %10, align 8
  %12 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)**, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*** %3, align 8
  %13 = getelementptr inbounds %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %12, i64 2
  %14 = load %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::CompositorAnimationClient"*)** %13, align 8
  %15 = tail call %"class.blink::CompositorAnimation"* %14(%"class.blink::CompositorAnimationClient"* %1) #7
  %16 = tail call %"class.cc::Animation"* @_ZNK5blink19CompositorAnimation11CcAnimationEv(%"class.blink::CompositorAnimation"* %15) #7
  %17 = icmp eq %"class.cc::Animation"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.cc::Animation", %"class.cc::Animation"* %16, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #7
  br label %20

20:                                               ; preds = %9, %18
  tail call void @_ZN2cc17AnimationTimeline15DetachAnimationE13scoped_refptrINS_9AnimationEE(%"class.cc::AnimationTimeline"* %11, %"class.cc::Animation"* %16) #7
  br label %21

21:                                               ; preds = %2, %20
  ret void
}

declare void @_ZN2cc17AnimationTimeline15DetachAnimationE13scoped_refptrINS_9AnimationEE(%"class.cc::AnimationTimeline"*, %"class.cc::Animation"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
