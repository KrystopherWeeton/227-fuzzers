; ModuleID = '../../third_party/skia/src/core/SkColor.cpp'
source_filename = "../../third_party/skia/src/core/SkColor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRGBA4f = type { float, float, float, float }
%struct.SkRGBA4f.0 = type { float, float, float, float }

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_Z17SkPreMultiplyARGBjjjj(i32, i32, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %0, 255
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = mul i32 %1, %0
  %8 = add i32 %7, 128
  %9 = lshr i32 %8, 8
  %10 = add i32 %9, %8
  %11 = lshr i32 %10, 8
  %12 = mul i32 %2, %0
  %13 = add i32 %12, 128
  %14 = lshr i32 %13, 8
  %15 = add i32 %14, %13
  %16 = lshr i32 %15, 8
  %17 = mul i32 %3, %0
  %18 = add i32 %17, 128
  %19 = lshr i32 %18, 8
  %20 = add i32 %19, %18
  %21 = lshr i32 %20, 8
  br label %22

22:                                               ; preds = %4, %6
  %23 = phi i32 [ %11, %6 ], [ %1, %4 ]
  %24 = phi i32 [ %16, %6 ], [ %2, %4 ]
  %25 = phi i32 [ %21, %6 ], [ %3, %4 ]
  %26 = shl i32 %0, 24
  %27 = shl i32 %23, 16
  %28 = or i32 %27, %26
  %29 = shl i32 %24, 8
  %30 = or i32 %28, %29
  %31 = or i32 %30, %25
  ret i32 %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_Z18SkPreMultiplyColorj(i32) local_unnamed_addr #0 {
  %2 = lshr i32 %0, 24
  %3 = lshr i32 %0, 16
  %4 = and i32 %3, 255
  %5 = lshr i32 %0, 8
  %6 = and i32 %5, 255
  %7 = and i32 %0, 255
  %8 = icmp eq i32 %2, 255
  br i1 %8, label %25, label %9

9:                                                ; preds = %1
  %10 = mul nuw nsw i32 %4, %2
  %11 = add nuw nsw i32 %10, 128
  %12 = lshr i32 %11, 8
  %13 = add nuw nsw i32 %12, %11
  %14 = lshr i32 %13, 8
  %15 = mul nuw nsw i32 %6, %2
  %16 = add nuw nsw i32 %15, 128
  %17 = lshr i32 %16, 8
  %18 = add nuw nsw i32 %17, %16
  %19 = lshr i32 %18, 8
  %20 = mul nuw nsw i32 %7, %2
  %21 = add nuw nsw i32 %20, 128
  %22 = lshr i32 %21, 8
  %23 = add nuw nsw i32 %22, %21
  %24 = lshr i32 %23, 8
  br label %25

25:                                               ; preds = %1, %9
  %26 = phi i32 [ %14, %9 ], [ %4, %1 ]
  %27 = phi i32 [ %19, %9 ], [ %6, %1 ]
  %28 = phi i32 [ %24, %9 ], [ %7, %1 ]
  %29 = and i32 %0, -16777216
  %30 = shl i32 %26, 16
  %31 = or i32 %30, %29
  %32 = shl nuw nsw i32 %27, 8
  %33 = or i32 %31, %32
  %34 = or i32 %33, %28
  ret i32 %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_Z10SkRGBToHSVjjjPf(i32, i32, i32, float* nocapture) local_unnamed_addr #1 {
  %5 = icmp ugt i32 %1, %2
  %6 = select i1 %5, i32 %2, i32 %1
  %7 = icmp ult i32 %6, %0
  %8 = select i1 %7, i32 %6, i32 %0
  %9 = icmp ult i32 %1, %2
  %10 = select i1 %9, i32 %2, i32 %1
  %11 = icmp ugt i32 %10, %0
  %12 = select i1 %11, i32 %10, i32 %0
  %13 = sub i32 %12, %8
  %14 = uitofp i32 %12 to float
  %15 = fdiv float %14, 2.550000e+02
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %43, label %17

17:                                               ; preds = %4
  %18 = sitofp i32 %13 to float
  %19 = sitofp i32 %12 to float
  %20 = fdiv float %18, %19
  br i1 %11, label %25, label %21

21:                                               ; preds = %17
  %22 = sub i32 %1, %2
  %23 = sitofp i32 %22 to float
  %24 = fdiv float %23, %18
  br label %37

25:                                               ; preds = %17
  %26 = icmp eq i32 %12, %1
  br i1 %26, label %27, label %32

27:                                               ; preds = %25
  %28 = sub i32 %2, %0
  %29 = sitofp i32 %28 to float
  %30 = fdiv float %29, %18
  %31 = fadd float %30, 2.000000e+00
  br label %37

32:                                               ; preds = %25
  %33 = sub i32 %0, %1
  %34 = sitofp i32 %33 to float
  %35 = fdiv float %34, %18
  %36 = fadd float %35, 4.000000e+00
  br label %37

37:                                               ; preds = %27, %32, %21
  %38 = phi float [ %24, %21 ], [ %31, %27 ], [ %36, %32 ]
  %39 = fmul float %38, 6.000000e+01
  %40 = fcmp olt float %39, 0.000000e+00
  %41 = fadd float %39, 3.600000e+02
  %42 = select i1 %40, float %41, float %39
  br label %43

43:                                               ; preds = %4, %37
  %44 = phi float [ %42, %37 ], [ 0.000000e+00, %4 ]
  %45 = phi float [ %20, %37 ], [ 0.000000e+00, %4 ]
  store float %44, float* %3, align 4
  %46 = getelementptr inbounds float, float* %3, i64 1
  store float %45, float* %46, align 4
  %47 = getelementptr inbounds float, float* %3, i64 2
  store float %15, float* %47, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_Z12SkHSVToColorjPKf(i32, float* nocapture readonly) local_unnamed_addr #2 {
  %3 = getelementptr inbounds float, float* %1, i64 1
  %4 = load float, float* %3, align 4
  %5 = fcmp ogt float %4, 1.000000e+00
  %6 = select i1 %5, float 1.000000e+00, float %4
  %7 = fcmp ogt float %6, 0.000000e+00
  %8 = select i1 %7, float %6, float 0.000000e+00
  %9 = getelementptr inbounds float, float* %1, i64 2
  %10 = load float, float* %9, align 4
  %11 = fcmp ogt float %10, 1.000000e+00
  %12 = select i1 %11, float 1.000000e+00, float %10
  %13 = fcmp ogt float %12, 0.000000e+00
  %14 = select i1 %13, float %12, float 0.000000e+00
  %15 = fmul float %14, 2.550000e+02
  %16 = fadd float %15, 5.000000e-01
  %17 = tail call float @llvm.floor.f32(float %16)
  %18 = fcmp olt float %17, 0x41DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0x41DFFFFFE0000000
  %20 = fcmp ogt float %19, 0xC1DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0xC1DFFFFFE0000000
  %22 = fptosi float %21 to i32
  %23 = tail call float @llvm.fabs.f32(float %8) #7
  %24 = fcmp ugt float %23, 0x3F30000000000000
  br i1 %24, label %31, label %25

25:                                               ; preds = %2
  %26 = shl i32 %0, 24
  %27 = shl i32 %22, 16
  %28 = shl i32 %22, 8
  %29 = or i32 %26, %22
  %30 = or i32 %29, %27
  br label %88

31:                                               ; preds = %2
  %32 = load float, float* %1, align 4
  %33 = fcmp uge float %32, 0.000000e+00
  %34 = fcmp ult float %32, 3.600000e+02
  %35 = and i1 %33, %34
  %36 = fdiv float %32, 6.000000e+01
  %37 = select i1 %35, float %36, float 0.000000e+00
  %38 = tail call float @llvm.floor.f32(float %37)
  %39 = fsub float %37, %38
  %40 = fsub float 1.000000e+00, %8
  %41 = fmul float %40, %14
  %42 = fmul float %41, 2.550000e+02
  %43 = fadd float %42, 5.000000e-01
  %44 = tail call float @llvm.floor.f32(float %43)
  %45 = fcmp olt float %44, 0x41DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0x41DFFFFFE0000000
  %47 = fcmp ogt float %46, 0xC1DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0xC1DFFFFFE0000000
  %49 = fptosi float %48 to i32
  %50 = fmul float %8, %39
  %51 = fsub float 1.000000e+00, %50
  %52 = fmul float %14, %51
  %53 = fmul float %52, 2.550000e+02
  %54 = fadd float %53, 5.000000e-01
  %55 = tail call float @llvm.floor.f32(float %54)
  %56 = fcmp olt float %55, 0x41DFFFFFE0000000
  %57 = select i1 %56, float %55, float 0x41DFFFFFE0000000
  %58 = fcmp ogt float %57, 0xC1DFFFFFE0000000
  %59 = select i1 %58, float %57, float 0xC1DFFFFFE0000000
  %60 = fptosi float %59 to i32
  %61 = fsub float 1.000000e+00, %39
  %62 = fmul float %8, %61
  %63 = fsub float 1.000000e+00, %62
  %64 = fmul float %14, %63
  %65 = fmul float %64, 2.550000e+02
  %66 = fadd float %65, 5.000000e-01
  %67 = tail call float @llvm.floor.f32(float %66)
  %68 = fcmp olt float %67, 0x41DFFFFFE0000000
  %69 = select i1 %68, float %67, float 0x41DFFFFFE0000000
  %70 = fcmp ogt float %69, 0xC1DFFFFFE0000000
  %71 = select i1 %70, float %69, float 0xC1DFFFFFE0000000
  %72 = fptosi float %71 to i32
  %73 = fptoui float %38 to i32
  switch i32 %73, label %78 [
    i32 0, label %79
    i32 1, label %74
    i32 2, label %75
    i32 3, label %76
    i32 4, label %77
  ]

74:                                               ; preds = %31
  br label %79

75:                                               ; preds = %31
  br label %79

76:                                               ; preds = %31
  br label %79

77:                                               ; preds = %31
  br label %79

78:                                               ; preds = %31
  br label %79

79:                                               ; preds = %31, %78, %77, %76, %75, %74
  %80 = phi i32 [ %22, %78 ], [ %72, %77 ], [ %49, %76 ], [ %49, %75 ], [ %60, %74 ], [ %22, %31 ]
  %81 = phi i32 [ %49, %78 ], [ %49, %77 ], [ %60, %76 ], [ %22, %75 ], [ %22, %74 ], [ %72, %31 ]
  %82 = phi i32 [ %60, %78 ], [ %22, %77 ], [ %22, %76 ], [ %72, %75 ], [ %49, %74 ], [ %49, %31 ]
  %83 = shl i32 %0, 24
  %84 = shl i32 %80, 16
  %85 = or i32 %84, %83
  %86 = shl i32 %81, 8
  %87 = or i32 %85, %86
  br label %88

88:                                               ; preds = %79, %25
  %89 = phi i32 [ %82, %79 ], [ %28, %25 ]
  %90 = phi i32 [ %87, %79 ], [ %30, %25 ]
  %91 = or i32 %90, %89
  ret i32 %91
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

; Function Attrs: nounwind readnone ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #4 align 2 {
  %2 = insertelement <4 x i32> undef, i32 %0, i32 0
  %3 = bitcast <4 x i32> %2 to <16 x i8>
  %4 = shufflevector <16 x i8> %3, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5 = bitcast <16 x i8> %4 to <8 x i16>
  %6 = shufflevector <8 x i16> %5, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7 = bitcast <8 x i16> %6 to <4 x i32>
  %8 = sitofp <4 x i32> %7 to <4 x float>
  %9 = fmul <4 x float> %8, <float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000>
  %10 = shufflevector <4 x float> %9, <4 x float> undef, <4 x i32> <i32 2, i32 1, i32 0, i32 3>
  %11 = shufflevector <4 x float> %10, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %12 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %11, 0
  %13 = shufflevector <4 x float> %10, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %14 = insertvalue { <2 x float>, <2 x float> } %12, <2 x float> %13, 1
  ret { <2 x float>, <2 x float> } %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %struct.SkRGBA4f* %0 to <4 x float>*
  %3 = load <4 x float>, <4 x float>* %2, align 1
  %4 = fmul <4 x float> %3, <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>
  %5 = shufflevector <4 x float> %4, <4 x float> undef, <4 x i32> <i32 2, i32 1, i32 0, i32 3>
  %6 = tail call <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float> %5) #7
  %7 = bitcast <4 x i32> %6 to <8 x i16>
  %8 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %7, <8 x i16> undef) #7
  %9 = bitcast <16 x i8> %8 to <8 x i16>
  %10 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %9, <8 x i16> undef) #7
  %11 = bitcast <16 x i8> %10 to <4 x i32>
  %12 = extractelement <4 x i32> %11, i32 0
  ret i32 %12
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE12toBytes_RGBAEv(%struct.SkRGBA4f* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %struct.SkRGBA4f* %0 to <4 x float>*
  %3 = load <4 x float>, <4 x float>* %2, align 1
  %4 = fmul <4 x float> %3, <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>
  %5 = tail call <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float> %4) #7
  %6 = bitcast <4 x i32> %5 to <8 x i16>
  %7 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %6, <8 x i16> undef) #7
  %8 = bitcast <16 x i8> %7 to <8 x i16>
  %9 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8, <8 x i16> undef) #7
  %10 = bitcast <16 x i8> %9 to <4 x i32>
  %11 = extractelement <4 x i32> %10, i32 0
  ret i32 %11
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE14FromBytes_RGBAEj(i32) local_unnamed_addr #4 align 2 {
  %2 = insertelement <4 x i32> undef, i32 %0, i32 0
  %3 = bitcast <4 x i32> %2 to <16 x i8>
  %4 = shufflevector <16 x i8> %3, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5 = bitcast <16 x i8> %4 to <8 x i16>
  %6 = shufflevector <8 x i16> %5, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7 = bitcast <8 x i16> %6 to <4 x i32>
  %8 = sitofp <4 x i32> %7 to <4 x float>
  %9 = fmul <4 x float> %8, <float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000>
  %10 = shufflevector <4 x float> %9, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %11 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %10, 0
  %12 = shufflevector <4 x float> %9, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %13 = insertvalue { <2 x float>, <2 x float> } %11, <2 x float> %12, 1
  ret { <2 x float>, <2 x float> } %13
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType2EE11FromPMColorEj(i32) local_unnamed_addr #4 align 2 {
  %2 = insertelement <4 x i32> undef, i32 %0, i32 0
  %3 = bitcast <4 x i32> %2 to <16 x i8>
  %4 = shufflevector <16 x i8> %3, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5 = bitcast <16 x i8> %4 to <8 x i16>
  %6 = shufflevector <8 x i16> %5, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7 = bitcast <8 x i16> %6 to <4 x i32>
  %8 = sitofp <4 x i32> %7 to <4 x float>
  %9 = fmul <4 x float> %8, <float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000>
  %10 = shufflevector <4 x float> %9, <4 x float> undef, <4 x i32> <i32 2, i32 1, i32 0, i32 3>
  %11 = shufflevector <4 x float> %10, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %12 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %11, 0
  %13 = shufflevector <4 x float> %10, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %14 = insertvalue { <2 x float>, <2 x float> } %12, <2 x float> %13, 1
  ret { <2 x float>, <2 x float> } %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f.0* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %struct.SkRGBA4f.0* %0 to <4 x float>*
  %3 = load <4 x float>, <4 x float>* %2, align 1
  %4 = fmul <4 x float> %3, <float 2.550000e+02, float 2.550000e+02, float 2.550000e+02, float 2.550000e+02>
  %5 = tail call <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float> %4) #7
  %6 = bitcast <4 x i32> %5 to <8 x i16>
  %7 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %6, <8 x i16> undef) #7
  %8 = bitcast <16 x i8> %7 to <8 x i16>
  %9 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %8, <8 x i16> undef) #7
  %10 = bitcast <16 x i8> %9 to <4 x i32>
  %11 = extractelement <4 x i32> %10, i32 0
  ret i32 %11
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType2EE14FromBytes_RGBAEj(i32) local_unnamed_addr #4 align 2 {
  %2 = insertelement <4 x i32> undef, i32 %0, i32 0
  %3 = bitcast <4 x i32> %2 to <16 x i8>
  %4 = shufflevector <16 x i8> %3, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %5 = bitcast <16 x i8> %4 to <8 x i16>
  %6 = shufflevector <8 x i16> %5, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %7 = bitcast <8 x i16> %6 to <4 x i32>
  %8 = sitofp <4 x i32> %7 to <4 x float>
  %9 = fmul <4 x float> %8, <float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000, float 0x3F70101020000000>
  %10 = shufflevector <4 x float> %9, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %11 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %10, 0
  %12 = shufflevector <4 x float> %9, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %13 = insertvalue { <2 x float>, <2 x float> } %11, <2 x float> %12, 1
  ret { <2 x float>, <2 x float> } %13
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #6

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float>) #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
