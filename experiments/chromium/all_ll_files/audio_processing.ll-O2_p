; ModuleID = '../../media/base/audio_processing.cc'
source_filename = "../../media/base/audio_processing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.media::AudioProcessingSettings" = type <{ i32, i32, i32, i8, i8, i8, i8 }>
%"class.base::BasicStringPiece" = type { i8*, i64 }

@.str = private unnamed_addr constant [6 x i8] c"agc: \00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c", aec: \00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c", ns: \00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c", high pass filter: \00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c", typing detection: \00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c", stereo mirroring: \00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"experimental\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"hybrid experimental\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"aec3\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"system aec\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@switch.table._ZNK5media23AudioProcessingSettings8ToStringEv = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0)], align 8
@switch.table._ZNK5media23AudioProcessingSettings8ToStringEv.16 = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)], align 8
@switch.table._ZNK5media23AudioProcessingSettings8ToStringEv.17 = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media23AudioProcessingSettings8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.media::AudioProcessingSettings"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [12 x %"class.base::BasicStringPiece"], align 8
  %4 = bitcast [12 x %"class.base::BasicStringPiece"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %4) #4
  %5 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0
  %6 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %6, align 8
  %7 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 0, i32 1
  store i64 5, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.media::AudioProcessingSettings", %"struct.media::AudioProcessingSettings"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZNK5media23AudioProcessingSettings8ToStringEv, i64 0, i64 %10
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 0
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 1, i32 1
  %15 = tail call i64 @strlen(i8* nonnull %12) #4
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 2, i32 1
  store i64 7, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.media::AudioProcessingSettings", %"struct.media::AudioProcessingSettings"* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZNK5media23AudioProcessingSettings8ToStringEv.17, i64 0, i64 %20
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 3, i32 0
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 3, i32 1
  %25 = tail call i64 @strlen(i8* nonnull %22) #4
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 4, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 4, i32 1
  store i64 6, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.media::AudioProcessingSettings", %"struct.media::AudioProcessingSettings"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZNK5media23AudioProcessingSettings8ToStringEv.16, i64 0, i64 %30
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 5, i32 0
  store i8* %32, i8** %33, align 8
  %34 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 5, i32 1
  %35 = tail call i64 @strlen(i8* nonnull %32) #4
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 6, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 6, i32 1
  store i64 20, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.media::AudioProcessingSettings", %"struct.media::AudioProcessingSettings"* %1, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)
  %42 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 7, i32 0
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 7, i32 1
  %44 = select i1 %40, i64 2, i64 3
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 8, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 8, i32 1
  store i64 20, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.media::AudioProcessingSettings", %"struct.media::AudioProcessingSettings"* %1, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)
  %51 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 9, i32 0
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 9, i32 1
  %53 = select i1 %49, i64 2, i64 3
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 10, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 10, i32 1
  store i64 20, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.media::AudioProcessingSettings", %"struct.media::AudioProcessingSettings"* %1, i64 0, i32 5
  %57 = load i8, i8* %56, align 2, !range !2
  %58 = icmp eq i8 %57, 0
  %59 = select i1 %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)
  %60 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 11, i32 0
  store i8* %59, i8** %60, align 8
  %61 = getelementptr inbounds [12 x %"class.base::BasicStringPiece"], [12 x %"class.base::BasicStringPiece"]* %3, i64 0, i64 11, i32 1
  %62 = select i1 %58, i64 2, i64 3
  store i64 %62, i64* %61, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret %0, i64 12, %"class.base::BasicStringPiece"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
