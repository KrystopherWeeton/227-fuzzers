; ModuleID = '../../third_party/opus/src/silk/init_decoder.c'
source_filename = "../../third_party/opus/src/silk/init_decoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_decoder_state = type { i32, [320 x i32], [16 x i32], [480 x i16], i32, i8, i32, i32, i32, i32, i32, i32, i32, [16 x i16], i32, i8*, i8*, i32, i32, i32, i16, [3 x i32], i32, [3 x i32], %struct._silk_resampler_state_struct, %struct.silk_NLSF_CB_struct*, %struct.SideInfoIndices, %struct.silk_CNG_struct, i32, i32, i32, %struct.silk_PLC_struct }
%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }
%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }
%struct.SideInfoIndices = type { [4 x i8], [4 x i8], [17 x i8], i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.silk_CNG_struct = type { [320 x i32], [16 x i16], [16 x i32], i32, i32, i32 }
%struct.silk_PLC_struct = type { i32, [5 x i16], [16 x i16], i32, i32, i16, i32, i32, i16, [2 x i32], i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @silk_init_decoder(%struct.silk_decoder_state*) local_unnamed_addr #0 {
  %2 = bitcast %struct.silk_decoder_state* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 4288, i1 false)
  %3 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 14
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 0
  store i32 65536, i32* %4, align 8
  %5 = tail call i32 @opus_select_arch() #3
  %6 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 30
  store i32 %5, i32* %6, align 8
  tail call void @silk_CNG_Reset(%struct.silk_decoder_state* %0) #3
  tail call void @silk_PLC_Reset(%struct.silk_decoder_state* %0) #3
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @opus_select_arch() local_unnamed_addr #2

declare void @silk_CNG_Reset(%struct.silk_decoder_state*) local_unnamed_addr #2

declare void @silk_PLC_Reset(%struct.silk_decoder_state*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
