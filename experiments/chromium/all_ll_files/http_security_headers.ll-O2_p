; ModuleID = '../../net/http/http_security_headers.cc'
source_filename = "../../net/http/http_security_headers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.net::HttpUtil::NameValuePairsIterator" = type <{ %"class.net::HttpUtil::ValuesIterator", i8, [7 x i8], %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.net::HttpUtil::ValuesIterator" = type <{ %"class.base::StringTokenizerT", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", i8, [7 x i8] }>

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv = comdat any

@.str.2 = private unnamed_addr constant [8 x i8] c"max-age\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"includesubdomains\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"enforce\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"report-uri\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15ParseHSTSHeaderERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN4base9TimeDeltaEPb(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::TimeDelta"* nocapture, i8* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.base::StringTokenizerT", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #5
  store i32 0, i32* %6, align 4
  %14 = bitcast %"class.base::StringTokenizerT"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 96, i1 false)
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #5
  %16 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 4, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i32*
  store i32 993855776, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 4
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 3, i32 0
  %24 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %34 = zext i8 %27 to i64
  %35 = select i1 %28, i8* %30, i8* %33
  %36 = select i1 %28, i64 %32, i64 %34
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %35, i8** %20, align 8
  store i8* %35, i8** %21, align 8
  store i8* %35, i8** %22, align 8
  store i8* %37, i8** %23, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %15, i64 24, i1 false) #5
  %39 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 6
  %40 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 7
  store i8 1, i8* %40, align 4
  %41 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 9
  store i32 0, i32* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #5
  store i32 1, i32* %39, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #5
  %43 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 1, i8* %44, align 1
  store i8 34, i8* %42, align 8
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %42, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #5
  %50 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #5
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #5
  %53 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %57 = bitcast i8** %22 to i64*
  %58 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %64 = bitcast i32* %5 to i8*
  br label %65

65:                                               ; preds = %158, %3
  %66 = phi i32 [ 1, %3 ], [ %163, %158 ]
  %67 = phi i32 [ 0, %3 ], [ %159, %158 ]
  %68 = phi i32 [ 0, %3 ], [ %160, %158 ]
  %69 = phi i32 [ 0, %3 ], [ %161, %158 ]
  %70 = phi i8 [ 0, %3 ], [ %162, %158 ]
  %71 = load i8, i8* %48, align 1
  %72 = icmp slt i8 %71, 0
  %73 = load i64, i64* %53, align 8
  %74 = zext i8 %71 to i64
  %75 = select i1 %72, i64 %73, i64 %74
  %76 = icmp eq i64 %75, 0
  %77 = icmp eq i32 %66, 0
  %78 = and i1 %76, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %65
  %80 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #5
  br i1 %80, label %83, label %164

81:                                               ; preds = %65
  %82 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #5
  br i1 %82, label %83, label %164

83:                                               ; preds = %79, %81
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #5
  %84 = load i8*, i8** %21, align 8
  %85 = load i64, i64* %57, align 8
  %86 = ptrtoint i8* %84 to i64
  %87 = sub i64 %85, %86
  store i8* %84, i8** %55, align 8
  store i64 %87, i64* %56, align 8
  switch i32 %67, label %152 [
    i32 0, label %88
    i32 6, label %88
    i32 1, label %105
    i32 2, label %112
    i32 3, label %141
    i32 4, label %141
    i32 5, label %148
  ]

88:                                               ; preds = %83, %83
  %89 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 0) #5
  %90 = load i8, i8* %89, align 1
  switch i8 %90, label %91 [
    i8 32, label %158
    i8 13, label %158
    i8 10, label %158
    i8 9, label %158
    i8 12, label %158
  ]

91:                                               ; preds = %88
  %92 = load i8*, i8** %55, align 8
  %93 = load i64, i64* %56, align 8
  %94 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %92, i64 %93, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #5
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = add nsw i32 %69, 1
  br label %152

97:                                               ; preds = %91
  %98 = load i8*, i8** %55, align 8
  %99 = load i64, i64* %56, align 8
  %100 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %98, i64 %99, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i64 17) #5
  %101 = select i1 %100, i32 4, i32 5
  %102 = zext i1 %100 to i32
  %103 = add nsw i32 %68, %102
  %104 = select i1 %100, i8 1, i8 %70
  br label %152

105:                                              ; preds = %83
  %106 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 0) #5
  %107 = load i8, i8* %106, align 1
  switch i8 %107, label %108 [
    i8 32, label %158
    i8 13, label %158
    i8 10, label %158
    i8 9, label %158
    i8 12, label %158
  ]

108:                                              ; preds = %105
  %109 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 0) #5
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, 61
  br i1 %111, label %152, label %157

112:                                              ; preds = %83
  %113 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 0) #5
  %114 = load i8, i8* %113, align 1
  switch i8 %114, label %115 [
    i8 32, label %158
    i8 13, label %158
    i8 10, label %158
    i8 9, label %158
    i8 12, label %158
  ]

115:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #5
  %116 = load i8*, i8** %55, align 8
  %117 = load i64, i64* %56, align 8
  call void @_ZN3net8HttpUtil7UnquoteEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, i8* %116, i64 %117) #5
  %118 = load i8, i8* %60, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %115
  %121 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %121) #6
  br label %122

122:                                              ; preds = %120, %115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %58, i64 24, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #5
  %123 = load i8, i8* %60, align 1
  %124 = icmp slt i8 %123, 0
  %125 = load i8*, i8** %51, align 8
  %126 = select i1 %124, i8* %125, i8* %50
  %127 = load i64, i64* %52, align 8
  %128 = zext i8 %123 to i64
  %129 = select i1 %124, i64 %127, i64 %128
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61)
  store i8* %126, i8** %62, align 8
  store i64 %129, i64* %63, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #5
  store i32 -1431655766, i32* %5, align 4
  %130 = call zeroext i1 @_ZN3net11ParseUint32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPjPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, i32* nonnull %6, i32* nonnull %5) #5
  br i1 %130, label %135, label %131

131:                                              ; preds = %122
  %132 = load i32, i32* %5, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %131
  store i32 31536000, i32* %6, align 4
  br label %139

135:                                              ; preds = %122
  %136 = load i32, i32* %6, align 4
  %137 = icmp ugt i32 %136, 31536000
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  store i32 31536000, i32* %6, align 4
  br label %139

139:                                              ; preds = %138, %135, %134
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61)
  br label %152

140:                                              ; preds = %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61)
  br label %157

141:                                              ; preds = %83, %83
  %142 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 0) #5
  %143 = load i8, i8* %142, align 1
  switch i8 %143, label %144 [
    i8 32, label %158
    i8 13, label %158
    i8 10, label %158
    i8 9, label %158
    i8 12, label %158
  ]

144:                                              ; preds = %141
  %145 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 0) #5
  %146 = load i8, i8* %145, align 1
  %147 = icmp eq i8 %146, 59
  br i1 %147, label %152, label %157

148:                                              ; preds = %83
  %149 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %11, i64 0) #5
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 59
  br i1 %151, label %152, label %158

152:                                              ; preds = %139, %97, %148, %144, %108, %95, %83
  %153 = phi i32 [ %67, %83 ], [ 1, %95 ], [ 2, %108 ], [ 6, %144 ], [ 6, %148 ], [ %101, %97 ], [ 3, %139 ]
  %154 = phi i32 [ %68, %83 ], [ %68, %95 ], [ %68, %108 ], [ %68, %144 ], [ %68, %148 ], [ %103, %97 ], [ %68, %139 ]
  %155 = phi i32 [ %69, %83 ], [ %96, %95 ], [ %69, %108 ], [ %69, %144 ], [ %69, %148 ], [ %69, %97 ], [ %69, %139 ]
  %156 = phi i8 [ %70, %83 ], [ %70, %95 ], [ %70, %108 ], [ %70, %144 ], [ %70, %148 ], [ %104, %97 ], [ %70, %139 ]
  br label %158

157:                                              ; preds = %108, %144, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #5
  br label %177

158:                                              ; preds = %141, %141, %141, %141, %141, %112, %112, %112, %112, %112, %105, %105, %105, %105, %105, %88, %88, %88, %88, %88, %148, %152
  %159 = phi i32 [ %153, %152 ], [ 5, %148 ], [ %67, %88 ], [ %67, %88 ], [ %67, %88 ], [ %67, %88 ], [ %67, %88 ], [ 1, %105 ], [ 1, %105 ], [ 1, %105 ], [ 1, %105 ], [ 1, %105 ], [ 2, %112 ], [ 2, %112 ], [ 2, %112 ], [ 2, %112 ], [ 2, %112 ], [ %67, %141 ], [ %67, %141 ], [ %67, %141 ], [ %67, %141 ], [ %67, %141 ]
  %160 = phi i32 [ %154, %152 ], [ %68, %148 ], [ %68, %88 ], [ %68, %88 ], [ %68, %88 ], [ %68, %88 ], [ %68, %88 ], [ %68, %105 ], [ %68, %105 ], [ %68, %105 ], [ %68, %105 ], [ %68, %105 ], [ %68, %112 ], [ %68, %112 ], [ %68, %112 ], [ %68, %112 ], [ %68, %112 ], [ %68, %141 ], [ %68, %141 ], [ %68, %141 ], [ %68, %141 ], [ %68, %141 ]
  %161 = phi i32 [ %155, %152 ], [ %69, %148 ], [ %69, %88 ], [ %69, %88 ], [ %69, %88 ], [ %69, %88 ], [ %69, %88 ], [ %69, %105 ], [ %69, %105 ], [ %69, %105 ], [ %69, %105 ], [ %69, %105 ], [ %69, %112 ], [ %69, %112 ], [ %69, %112 ], [ %69, %112 ], [ %69, %112 ], [ %69, %141 ], [ %69, %141 ], [ %69, %141 ], [ %69, %141 ], [ %69, %141 ]
  %162 = phi i8 [ %156, %152 ], [ %70, %148 ], [ %70, %88 ], [ %70, %88 ], [ %70, %88 ], [ %70, %88 ], [ %70, %88 ], [ %70, %105 ], [ %70, %105 ], [ %70, %105 ], [ %70, %105 ], [ %70, %105 ], [ %70, %112 ], [ %70, %112 ], [ %70, %112 ], [ %70, %112 ], [ %70, %112 ], [ %70, %141 ], [ %70, %141 ], [ %70, %141 ], [ %70, %141 ], [ %70, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #5
  %163 = load i32, i32* %39, align 8
  br label %65

164:                                              ; preds = %79, %81
  %165 = icmp eq i32 %69, 1
  %166 = icmp ult i32 %68, 2
  %167 = and i1 %166, %165
  %168 = add i32 %67, -3
  %169 = icmp ult i32 %168, 4
  %170 = and i1 %169, %167
  br i1 %170, label %171, label %177

171:                                              ; preds = %164
  %172 = load i32, i32* %6, align 4
  %173 = zext i32 %172 to i64
  %174 = mul nuw nsw i64 %173, 1000000
  %175 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  store i64 %174, i64* %175, align 8
  %176 = and i8 %70, 1
  store i8 %176, i8* %2, align 1
  br label %177

177:                                              ; preds = %157, %164, %171
  %178 = phi i1 [ true, %171 ], [ false, %164 ], [ false, %157 ]
  %179 = load i8, i8* %60, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %177
  %182 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %182) #6
  br label %183

183:                                              ; preds = %177, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #5
  %184 = load i8, i8* %48, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %188) #6
  br label %189

189:                                              ; preds = %186, %183
  %190 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #6
  br label %197

197:                                              ; preds = %189, %194
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #5
  ret i1 %178
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net8HttpUtil7UnquoteEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19ParseExpectCTHeaderERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN4base9TimeDeltaEPbP4GURL(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::TimeDelta"* nocapture, i8* nocapture, %class.GURL*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %class.GURL, align 8
  %9 = alloca %"class.net::HttpUtil::NameValuePairsIterator", align 8
  %10 = alloca %class.GURL, align 8
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5
  store i32 0, i32* %7, align 4
  %12 = bitcast %class.GURL* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %12) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %8) #5
  %13 = bitcast %"class.net::HttpUtil::NameValuePairsIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 192, i1 false)
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %23 = zext i8 %16 to i64
  %24 = select i1 %17, i8* %19, i8* %22
  %25 = select i1 %17, i64 %21, i64 %23
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  call void @_ZN3net8HttpUtil22NameValuePairsIteratorC1ENSt3__111__wrap_iterIPKcEES6_cNS1_6ValuesENS1_6QuotesE(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %9, i8* %24, i8* %26, i8 signext 44, i32 0, i32 0) #5
  %27 = call zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %9) #5
  br i1 %27, label %28, label %168

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 3, i32 0
  %30 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 4, i32 0
  %31 = bitcast i8** %30 to i64*
  %32 = bitcast %class.GURL* %10 to i8*
  %33 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 8
  %34 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 7
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %39 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 5, i32 0
  %41 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 6, i32 0
  %42 = bitcast i8** %41 to i64*
  %43 = bitcast %class.GURL* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 0, i32 1
  %47 = bitcast i8** %40 to i64*
  %48 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %51 = bitcast i32* %6 to i8*
  br label %52

52:                                               ; preds = %28, %149
  %53 = phi i8 [ 0, %28 ], [ %152, %149 ]
  %54 = phi i8 [ 0, %28 ], [ %151, %149 ]
  %55 = phi i8 [ 0, %28 ], [ %150, %149 ]
  %56 = load i8*, i8** %29, align 8
  %57 = load i64, i64* %31, align 8
  %58 = ptrtoint i8* %56 to i64
  %59 = sub i64 %57, %58
  %60 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %56, i64 %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #5
  br i1 %60, label %61, label %94

61:                                               ; preds = %52
  %62 = and i8 %53, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %168

64:                                               ; preds = %61
  %65 = load i8, i8* %33, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %64
  %68 = load i8, i8* %36, align 1
  %69 = icmp slt i8 %68, 0
  %70 = load i8*, i8** %37, align 8
  %71 = select i1 %69, i8* %70, i8* %38
  %72 = load i64, i64* %39, align 8
  %73 = zext i8 %68 to i64
  %74 = select i1 %69, i64 %72, i64 %73
  br label %80

75:                                               ; preds = %64
  %76 = load i8*, i8** %40, align 8
  %77 = load i64, i64* %42, align 8
  %78 = ptrtoint i8* %76 to i64
  %79 = sub i64 %77, %78
  br label %80

80:                                               ; preds = %67, %75
  %81 = phi i64 [ %79, %75 ], [ %74, %67 ]
  %82 = phi i8* [ %76, %75 ], [ %71, %67 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48)
  store i8* %82, i8** %49, align 8
  store i64 %81, i64* %50, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #5
  store i32 -1431655766, i32* %6, align 4
  %83 = call zeroext i1 @_ZN3net11ParseUint32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPjPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, i32* nonnull %7, i32* nonnull %6) #5
  br i1 %83, label %88, label %84

84:                                               ; preds = %80
  %85 = load i32, i32* %6, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %93

87:                                               ; preds = %84
  store i32 2592000, i32* %7, align 4
  br label %92

88:                                               ; preds = %80
  %89 = load i32, i32* %7, align 4
  %90 = icmp ugt i32 %89, 2592000
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  store i32 2592000, i32* %7, align 4
  br label %92

92:                                               ; preds = %91, %88, %87
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48)
  br label %149

93:                                               ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48)
  br label %168

94:                                               ; preds = %52
  %95 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %56, i64 %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7) #5
  br i1 %95, label %96, label %115

96:                                               ; preds = %94
  %97 = and i8 %54, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %168

99:                                               ; preds = %96
  %100 = load i8, i8* %33, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = load i8, i8* %36, align 1
  %104 = icmp slt i8 %103, 0
  %105 = load i64, i64* %39, align 8
  %106 = zext i8 %103 to i64
  %107 = select i1 %104, i64 %105, i64 %106
  br label %112

108:                                              ; preds = %99
  %109 = load i64, i64* %47, align 8
  %110 = load i64, i64* %42, align 8
  %111 = sub i64 %110, %109
  br label %112

112:                                              ; preds = %102, %108
  %113 = phi i64 [ %111, %108 ], [ %107, %102 ]
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %149, label %168

115:                                              ; preds = %94
  %116 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %56, i64 %59, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i64 10) #5
  br i1 %116, label %117, label %149

117:                                              ; preds = %115
  %118 = and i8 %55, 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %168

120:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %32) #5
  %121 = load i8, i8* %33, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %120
  %124 = load i8, i8* %36, align 1
  %125 = icmp slt i8 %124, 0
  %126 = load i8*, i8** %37, align 8
  %127 = select i1 %125, i8* %126, i8* %38
  %128 = load i64, i64* %39, align 8
  %129 = zext i8 %124 to i64
  %130 = select i1 %125, i64 %128, i64 %129
  br label %136

131:                                              ; preds = %120
  %132 = load i8*, i8** %40, align 8
  %133 = load i64, i64* %42, align 8
  %134 = ptrtoint i8* %132 to i64
  %135 = sub i64 %133, %134
  br label %136

136:                                              ; preds = %123, %131
  %137 = phi i64 [ %135, %131 ], [ %130, %123 ]
  %138 = phi i8* [ %132, %131 ], [ %127, %123 ]
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %10, i8* %138, i64 %137) #5
  %139 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %8, %class.GURL* nonnull dereferenceable(120) %10) #5
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %32) #5
  %140 = load i8, i8* %44, align 1
  %141 = icmp slt i8 %140, 0
  %142 = load i64, i64* %45, align 8
  %143 = zext i8 %140 to i64
  %144 = select i1 %141, i64 %142, i64 %143
  %145 = icmp eq i64 %144, 0
  %146 = load i8, i8* %46, align 8
  %147 = icmp eq i8 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %168, label %149

149:                                              ; preds = %136, %115, %112, %92
  %150 = phi i8 [ %55, %115 ], [ %55, %112 ], [ %55, %92 ], [ 1, %136 ]
  %151 = phi i8 [ %54, %115 ], [ 1, %112 ], [ %54, %92 ], [ %54, %136 ]
  %152 = phi i8 [ %53, %115 ], [ %53, %112 ], [ 1, %92 ], [ %53, %136 ]
  %153 = call zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %9) #5
  br i1 %153, label %52, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %9, i64 0, i32 1
  %156 = load i8, i8* %155, align 8, !range !2
  %157 = icmp eq i8 %156, 0
  %158 = and i8 %152, 1
  %159 = icmp eq i8 %158, 0
  %160 = or i1 %159, %157
  br i1 %160, label %168, label %161

161:                                              ; preds = %154
  %162 = load i32, i32* %7, align 4
  %163 = zext i32 %162 to i64
  %164 = mul nuw nsw i64 %163, 1000000
  %165 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  store i64 %164, i64* %165, align 8
  %166 = and i8 %151, 1
  store i8 %166, i8* %2, align 1
  %167 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %3, %class.GURL* nonnull dereferenceable(120) %8) #5
  br label %168

168:                                              ; preds = %136, %117, %112, %96, %61, %4, %93, %154, %161
  %169 = phi i1 [ true, %161 ], [ false, %154 ], [ false, %93 ], [ false, %4 ], [ false, %61 ], [ false, %96 ], [ false, %112 ], [ false, %117 ], [ false, %136 ]
  call void @_ZN3net8HttpUtil22NameValuePairsIteratorD1Ev(%"class.net::HttpUtil::NameValuePairsIterator"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %13) #5
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5
  ret i1 %169
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZN3net8HttpUtil22NameValuePairsIteratorC1ENSt3__111__wrap_iterIPKcEES6_cNS1_6ValuesENS1_6QuotesE(%"class.net::HttpUtil::NameValuePairsIterator"*, i8*, i8*, i8 signext, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"*) local_unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net8HttpUtil22NameValuePairsIteratorD1Ev(%"class.net::HttpUtil::NameValuePairsIterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN3net11ParseUint32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPjPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* dereferenceable(16), i32*, i32*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::__wrap_iter"* %3 to i64*
  %6 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %3, i64 0, i32 0
  %9 = inttoptr i64 %7 to i8*
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %18

17:                                               ; preds = %34, %1
  store i8 1, i8* %2, align 4
  br label %61

18:                                               ; preds = %13, %34
  %19 = phi i8* [ %9, %13 ], [ %36, %34 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %21, i64 0) #5
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i8*, i8** %15, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %30 [
    i8 32, label %34
    i8 13, label %34
    i8 10, label %34
    i8 9, label %34
    i8 12, label %34
  ]

30:                                               ; preds = %27, %24
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %61, label %39

34:                                               ; preds = %27, %27, %27, %27, %27, %18
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %6, align 8
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8*, i8** %10, align 8
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %17, label %18

39:                                               ; preds = %30, %52
  %40 = phi i8* [ %53, %52 ], [ %31, %30 ]
  %41 = load i8, i8* %40, align 1
  %42 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %41, i64 0) #5
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %16, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = add i8 %49, -9
  %51 = icmp ult i8 %50, 24
  br i1 %51, label %56, label %52

52:                                               ; preds = %56, %48, %44
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %61, label %39

56:                                               ; preds = %48
  %57 = zext i8 %50 to i32
  %58 = lshr i32 8388635, %57
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %17, %30, %52, %39, %56
  %62 = phi i1 [ true, %56 ], [ false, %17 ], [ true, %30 ], [ true, %52 ], [ true, %39 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__wrap_iter"* %28 to i64*
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %28, i64 0, i32 0
  %34 = load i8, i8* %27, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br label %36

36:                                               ; preds = %113, %22
  %37 = phi i8* [ %5, %22 ], [ %106, %113 ]
  %38 = phi i64 [ %23, %22 ], [ %118, %113 ]
  %39 = phi i8* [ %24, %22 ], [ %114, %113 ]
  %40 = phi i1 [ %35, %22 ], [ false, %113 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %113 ]
  %42 = phi i8 [ 0, %22 ], [ %109, %113 ]
  %43 = phi i8 [ 0, %22 ], [ %110, %113 ]
  br i1 %40, label %105, label %44

44:                                               ; preds = %36
  store i8 0, i8* %27, align 4
  store i64 %38, i64* %29, align 8
  %45 = inttoptr i64 %38 to i8*
  %46 = icmp eq i8* %37, %45
  br i1 %46, label %91, label %47

47:                                               ; preds = %44, %76
  %48 = phi i8* [ %77, %76 ], [ %37, %44 ]
  %49 = phi i8* [ %82, %76 ], [ %39, %44 ]
  %50 = phi i8* [ %82, %76 ], [ %45, %44 ]
  %51 = phi i8 [ %81, %76 ], [ %43, %44 ]
  %52 = phi i8 [ %80, %76 ], [ %42, %44 ]
  %53 = phi i8 [ %79, %76 ], [ %41, %44 ]
  %54 = load i8, i8* %50, align 1
  %55 = icmp eq i8 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = icmp eq i8 %54, 92
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = icmp eq i8 %53, %54
  %62 = select i1 %61, i8 0, i8 %51
  br label %76

63:                                               ; preds = %47
  %64 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %30, i8 signext %54, i64 0) #5
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  %67 = load i32, i32* %31, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  switch i8 %54, label %70 [
    i8 32, label %84
    i8 13, label %84
    i8 10, label %84
    i8 9, label %84
    i8 12, label %84
  ]

70:                                               ; preds = %69, %66
  %71 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %32, i8 signext %54, i64 0) #5
  %72 = icmp ne i64 %71, -1
  %73 = zext i1 %72 to i8
  %74 = load i8*, i8** %26, align 8
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %60, %70, %56, %58
  %77 = phi i8* [ %48, %58 ], [ %48, %56 ], [ %75, %70 ], [ %48, %60 ]
  %78 = phi i8* [ %49, %58 ], [ %49, %56 ], [ %74, %70 ], [ %49, %60 ]
  %79 = phi i8 [ %53, %58 ], [ %53, %56 ], [ %54, %70 ], [ %53, %60 ]
  %80 = phi i8 [ 1, %58 ], [ 0, %56 ], [ %52, %70 ], [ 0, %60 ]
  %81 = phi i8 [ %51, %58 ], [ %51, %56 ], [ %73, %70 ], [ %62, %60 ]
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %82, i8** %26, align 8
  %83 = icmp eq i8* %82, %77
  br i1 %83, label %84, label %47

84:                                               ; preds = %76, %69, %69, %69, %69, %69, %63
  %85 = phi i8 [ %53, %63 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %79, %76 ]
  %86 = phi i8 [ %52, %63 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %80, %76 ]
  %87 = phi i8 [ 0, %63 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ %81, %76 ]
  %88 = load i8*, i8** %33, align 8
  %89 = load i8*, i8** %26, align 8
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %84, %44
  %92 = phi i64 [ %38, %44 ], [ %90, %84 ]
  %93 = phi i8* [ %39, %44 ], [ %89, %84 ]
  %94 = phi i8* [ %37, %44 ], [ %88, %84 ]
  %95 = phi i8 [ %41, %44 ], [ %85, %84 ]
  %96 = phi i8 [ %42, %44 ], [ %86, %84 ]
  %97 = phi i8 [ %43, %44 ], [ %87, %84 ]
  %98 = icmp eq i8* %94, %93
  br i1 %98, label %99, label %119

99:                                               ; preds = %91
  %100 = load i32, i32* %25, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = load i8*, i8** %4, align 8
  br label %105

105:                                              ; preds = %103, %36
  %106 = phi i8* [ %37, %36 ], [ %104, %103 ]
  %107 = phi i64 [ %38, %36 ], [ %92, %103 ]
  %108 = phi i8 [ %41, %36 ], [ %95, %103 ]
  %109 = phi i8 [ %42, %36 ], [ %96, %103 ]
  %110 = phi i8 [ %43, %36 ], [ %97, %103 ]
  store i8 1, i8* %27, align 4
  store i64 %107, i64* %29, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = icmp eq i8* %106, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %114, i8** %26, align 8
  %115 = load i32, i32* %25, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = ptrtoint i8* %114 to i64
  br i1 %117, label %36, label %119

119:                                              ; preds = %91, %113, %105, %99
  %120 = phi i1 [ true, %99 ], [ true, %91 ], [ false, %105 ], [ true, %113 ]
  ret i1 %120
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
