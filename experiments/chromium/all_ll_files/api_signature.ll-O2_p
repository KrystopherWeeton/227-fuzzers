; ModuleID = '../../extensions/renderer/bindings/api_signature.cc'
source_filename = "../../extensions/renderer/bindings/api_signature.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::APISignature::V8ParseResult" = type { %"class.absl::optional", i32, %"class.absl::optional.1" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::Local"*, %"class.v8::Local"*, %"class.std::__1::__compressed_pair" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::Local"* }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.extensions::APISignature::JSONParseResult" = type { %"class.std::__1::unique_ptr", %"class.v8::Local.15", i32, %"class.absl::optional.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"class.std::__1::basic_string" }
%"class.v8::Local.15" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.extensions::APISignature" = type { %"class.std::__1::vector.44", i32, %"class.extensions::BindingAccessChecker"*, i8, %"class.std::__1::basic_string" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.extensions::ArgumentSpec"* }
%"class.extensions::ArgumentSpec" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i8, i8, i8, %"class.absl::optional.1", %"class.absl::optional.1", %"class.absl::optional.59", %"class.absl::optional.59", %"class.absl::optional.64", %"class.absl::optional.64", %"class.std::__1::map", %"class.std::__1::unique_ptr.46", %"class.std::__1::vector.44", %"class.std::__1::set", %"class.std::__1::unique_ptr.46" }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { i32 }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.77" }
%"class.std::__1::__tree.77" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::unique_ptr.46"* }
%"class.extensions::BindingAccessChecker" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.58" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.58" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::Context" = type { i8 }
%"class.extensions::APITypeReferenceMap" = type opaque
%"class.extensions::(anonymous namespace)::V8ArgumentParser" = type { %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.v8::Local", %"class.std::__1::vector" }
%"class.extensions::(anonymous namespace)::ArgumentParser" = type { i32 (...)**, %"class.v8::Local.84", %"class.std::__1::vector.44"*, %"class.std::__1::vector"*, %"class.extensions::APITypeReferenceMap"*, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.v8::Local.84" = type { %"class.v8::Context"* }
%"class.extensions::(anonymous namespace)::BaseValueArgumentParser" = type { %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr", %"class.v8::Local.15" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.base::ListValue"* }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.content::V8ValueConverter" = type { %"class.blink::WebV8ValueConverter" }
%"class.blink::WebV8ValueConverter" = type { i32 (...)** }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::basic_string"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::Isolate" = type { i8 }

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [52 x i8] c"../../extensions/renderer/bindings/api_signature.cc\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"!arguments.empty()\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"optional \00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"%s%s %s\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"value.is_dict()\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"returns_async->is_dict()\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"optional\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZTVN10extensions12_GLOBAL__N_116V8ArgumentParserE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::(anonymous namespace)::V8ArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser7AddNullEv to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::V8ArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser15AddNullCallbackEv to i8*), i8* bitcast (%"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::V8ArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser13GetBaseBufferEv to i8*), i8* bitcast (%"class.v8::Local"* (%"class.extensions::(anonymous namespace)::V8ArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser11GetV8BufferEv to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::V8ArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser17AddParsedArgumentEv to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::V8ArgumentParser"*, %"class.v8::Function"*)* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser11SetCallbackEN2v85LocalINS2_8FunctionEEE to i8*)] }, align 8
@_ZTVN10extensions12_GLOBAL__N_114ArgumentParserE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.17 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"idx < size()\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@_ZTVN10extensions12_GLOBAL__N_123BaseValueArgumentParserE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser7AddNullEv to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser15AddNullCallbackEv to i8*), i8* bitcast (%"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser13GetBaseBufferEv to i8*), i8* bitcast (%"class.v8::Local"* (%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser11GetV8BufferEv to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"*)* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser17AddParsedArgumentEv to i8*), i8* bitcast (void (%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"*, %"class.v8::Function"*)* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser11SetCallbackEN2v85LocalINS2_8FunctionEEE to i8*)] }, align 8

@_ZN10extensions12APISignature13V8ParseResultC1Ev = hidden unnamed_addr alias void (%"struct.extensions::APISignature::V8ParseResult"*), void (%"struct.extensions::APISignature::V8ParseResult"*)* @_ZN10extensions12APISignature13V8ParseResultC2Ev
@_ZN10extensions12APISignature13V8ParseResultD1Ev = hidden unnamed_addr alias void (%"struct.extensions::APISignature::V8ParseResult"*), void (%"struct.extensions::APISignature::V8ParseResult"*)* @_ZN10extensions12APISignature13V8ParseResultD2Ev
@_ZN10extensions12APISignature13V8ParseResultC1EOS1_ = hidden unnamed_addr alias void (%"struct.extensions::APISignature::V8ParseResult"*, %"struct.extensions::APISignature::V8ParseResult"*), void (%"struct.extensions::APISignature::V8ParseResult"*, %"struct.extensions::APISignature::V8ParseResult"*)* @_ZN10extensions12APISignature13V8ParseResultC2EOS1_
@_ZN10extensions12APISignature15JSONParseResultC1Ev = hidden unnamed_addr alias void (%"struct.extensions::APISignature::JSONParseResult"*), void (%"struct.extensions::APISignature::JSONParseResult"*)* @_ZN10extensions12APISignature15JSONParseResultC2Ev
@_ZN10extensions12APISignature15JSONParseResultD1Ev = hidden unnamed_addr alias void (%"struct.extensions::APISignature::JSONParseResult"*), void (%"struct.extensions::APISignature::JSONParseResult"*)* @_ZN10extensions12APISignature15JSONParseResultD2Ev
@_ZN10extensions12APISignature15JSONParseResultC1EOS1_ = hidden unnamed_addr alias void (%"struct.extensions::APISignature::JSONParseResult"*, %"struct.extensions::APISignature::JSONParseResult"*), void (%"struct.extensions::APISignature::JSONParseResult"*, %"struct.extensions::APISignature::JSONParseResult"*)* @_ZN10extensions12APISignature15JSONParseResultC2EOS1_
@_ZN10extensions12APISignatureC1ERKN4base5ValueEPS3_PNS_20BindingAccessCheckerE = hidden unnamed_addr alias void (%"class.extensions::APISignature"*, %"class.base::Value"*, %"class.base::Value"*, %"class.extensions::BindingAccessChecker"*), void (%"class.extensions::APISignature"*, %"class.base::Value"*, %"class.base::Value"*, %"class.extensions::BindingAccessChecker"*)* @_ZN10extensions12APISignatureC2ERKN4base5ValueEPS3_PNS_20BindingAccessCheckerE
@_ZN10extensions12APISignatureC1ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"class.extensions::APISignature"*, %"class.std::__1::vector.44"*), void (%"class.extensions::APISignature"*, %"class.std::__1::vector.44"*)* @_ZN10extensions12APISignatureC2ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE
@_ZN10extensions12APISignatureC1ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEbPNS_20BindingAccessCheckerE = hidden unnamed_addr alias void (%"class.extensions::APISignature"*, %"class.std::__1::vector.44"*, i1, %"class.extensions::BindingAccessChecker"*), void (%"class.extensions::APISignature"*, %"class.std::__1::vector.44"*, i1, %"class.extensions::BindingAccessChecker"*)* @_ZN10extensions12APISignatureC2ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEbPNS_20BindingAccessCheckerE
@_ZN10extensions12APISignatureD1Ev = hidden unnamed_addr alias void (%"class.extensions::APISignature"*), void (%"class.extensions::APISignature"*)* @_ZN10extensions12APISignatureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignature13V8ParseResultC2Ev(%"struct.extensions::APISignature::V8ParseResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon.5* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = bitcast %union.anon* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignature13V8ParseResultD2Ev(%"struct.extensions::APISignature::V8ParseResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.v8::Local"*, %"class.v8::Local"** %20, align 8
  %22 = icmp eq %"class.v8::Local"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.v8::Local"* %21 to i64
  %25 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.v8::Local"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.v8::Local"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %23, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignature13V8ParseResultC2EOS1_(%"struct.extensions::APISignature::V8ParseResult"* nocapture, %"struct.extensions::APISignature::V8ParseResult"* nocapture dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #11
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = bitcast %"class.std::__1::vector"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::Local"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::Local"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.v8::Local"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.v8::Local"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %3, align 8
  br label %25

25:                                               ; preds = %2, %7
  %26 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #11
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %29, align 8
  br label %38

38:                                               ; preds = %25, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.extensions::APISignature::V8ParseResult"* @_ZN10extensions12APISignature13V8ParseResultaSEOS1_(%"struct.extensions::APISignature::V8ParseResult"* returned, %"struct.extensions::APISignature::V8ParseResult"* nocapture dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %37, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.v8::Local"*, %"class.v8::Local"** %13, align 8
  %15 = icmp eq %"class.v8::Local"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"class.v8::Local"* %14 to i64
  %18 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = bitcast %"class.v8::Local"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.v8::Local"* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  %21 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  br label %22

22:                                               ; preds = %12, %16
  %23 = bitcast %"class.std::__1::vector"* %7 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::Local"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %30 = bitcast %"class.v8::Local"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %"class.v8::Local"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.v8::Local"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #11
  br label %67

37:                                               ; preds = %6
  %38 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = bitcast %"class.std::__1::vector"* %7 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %43 = bitcast %"class.v8::Local"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %46 = bitcast %"class.v8::Local"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.v8::Local"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"class.v8::Local"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %8, align 8
  br label %67

53:                                               ; preds = %2
  %54 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Local"*, %"class.v8::Local"** %58, align 8
  %60 = icmp eq %"class.v8::Local"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = ptrtoint %"class.v8::Local"* %59 to i64
  %63 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %64 = bitcast %"class.v8::Local"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast %"class.v8::Local"* %59 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %61, %57
  store i8 0, i8* %54, align 8
  br label %67

67:                                               ; preds = %22, %37, %53, %66
  %68 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 1
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2
  %72 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %97, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  %80 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %79, label %94, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %86, %81
  %90 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  %91 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #11
  %92 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  store i8 0, i8* %93, align 1
  store i8 0, i8* %91, align 1
  br label %111

94:                                               ; preds = %75
  %95 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  %96 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %77, align 8
  br label %111

97:                                               ; preds = %67
  %98 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %111, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %103 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #12
  br label %110

110:                                              ; preds = %107, %101
  store i8 0, i8* %98, align 8
  br label %111

111:                                              ; preds = %89, %94, %97, %110
  ret %"struct.extensions::APISignature::V8ParseResult"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignature15JSONParseResultC2Ev(%"struct.extensions::APISignature::JSONParseResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %union.anon.5* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignature15JSONParseResultD2Ev(%"struct.extensions::APISignature::JSONParseResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::Value"*, %"class.base::Value"** %16, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %16, align 8
  %18 = icmp eq %"class.base::Value"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %17) #11
  %20 = bitcast %"class.base::Value"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignature15JSONParseResultC2EOS1_(%"struct.extensions::APISignature::JSONParseResult"* nocapture, %"struct.extensions::APISignature::JSONParseResult"* nocapture dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %3, align 8
  %6 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 1
  %9 = bitcast %"class.v8::Local.15"* %7 to i8*
  %10 = bitcast %"class.v8::Local.15"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 12, i1 false)
  %11 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #11
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %11, align 8
  br label %20

20:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"struct.extensions::APISignature::JSONParseResult"* @_ZN10extensions12APISignature15JSONParseResultaSEOS1_(%"struct.extensions::APISignature::JSONParseResult"* returned, %"struct.extensions::APISignature::JSONParseResult"* nocapture dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %3, align 8
  %6 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::Value"*, %"class.base::Value"** %6, align 8
  %8 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %"class.base::Value"* %7, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #11
  %11 = bitcast %"class.base::Value"* %7 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %2, %10
  %13 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 1
  %15 = bitcast %"class.v8::Local.15"* %13 to i8*
  %16 = bitcast %"class.v8::Local.15"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 12, i1 false)
  %17 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %25, label %40, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %32, %27
  %36 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  %38 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 0, i8* %39, align 1
  store i8 0, i8* %37, align 1
  br label %57

40:                                               ; preds = %21
  %41 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %23, align 8
  br label %57

43:                                               ; preds = %12
  %44 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %53, %47
  store i8 0, i8* %44, align 8
  br label %57

57:                                               ; preds = %35, %40, %43, %56
  ret %"struct.extensions::APISignature::JSONParseResult"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignatureC2ERKN4base5ValueEPS3_PNS_20BindingAccessCheckerE(%"class.extensions::APISignature"* nocapture, %"class.base::Value"* dereferenceable(32), %"class.base::Value"*, %"class.extensions::BindingAccessChecker"*) unnamed_addr #0 align 2 {
  %5 = alloca [14 x i8], align 1
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.std::__1::unique_ptr.46", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::unique_ptr.46", align 8
  %12 = alloca %"class.std::__1::vector.44", align 8
  %13 = icmp ne %"class.base::Value"* %2, null
  %14 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %12, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.44"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #11, !alias.scope !3
  %17 = tail call %"class.std::__1::vector.37"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %1) #11, !noalias !3
  %18 = icmp eq %"class.std::__1::vector.37"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %17, i64 0, i32 0, i32 1
  %21 = bitcast %"class.base::Value"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.37"* %17 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 5
  br label %27

27:                                               ; preds = %19, %4
  %28 = phi i64 [ %26, %19 ], [ 0, %4 ]
  %29 = zext i1 %13 to i64
  %30 = add nsw i64 %28, %29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector.44"* nonnull %12, i64 %30) #11
  %31 = call %"class.std::__1::vector.37"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %1) #11
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11, !noalias !3
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %34 = icmp eq %"class.std::__1::vector.37"* %31, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #11, !noalias !3
  br i1 %34, label %44, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %31, i64 0, i32 0, i32 0
  %37 = load %"class.base::Value"*, %"class.base::Value"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %31, i64 0, i32 0, i32 1
  %39 = bitcast %"class.base::Value"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = ptrtoint %"class.base::Value"* %37 to i64
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 5
  br label %44

44:                                               ; preds = %35, %27
  %45 = phi %"class.base::Value"* [ %37, %35 ], [ null, %27 ]
  %46 = phi i64 [ %43, %35 ], [ 0, %27 ]
  %47 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %45, i64 %46
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::Value"* %45, %"class.base::Value"* %45, %"class.base::Value"* %47) #11
  %48 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11, !noalias !3
  %49 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false) #11, !noalias !3
  br i1 %34, label %60, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %31, i64 0, i32 0, i32 0
  %52 = load %"class.base::Value"*, %"class.base::Value"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %31, i64 0, i32 0, i32 1
  %54 = bitcast %"class.base::Value"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint %"class.base::Value"* %52 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %52, i64 %58
  br label %60

60:                                               ; preds = %50, %44
  %61 = phi %"class.base::Value"* [ %52, %50 ], [ null, %44 ]
  %62 = phi %"class.base::Value"* [ %59, %50 ], [ null, %44 ]
  %63 = phi i64 [ %58, %50 ], [ 0, %44 ]
  %64 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %61, i64 %63
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::Value"* %61, %"class.base::Value"* %62, %"class.base::Value"* %64) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #11
  %65 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8, !noalias !3
  %66 = load %"class.base::Value"*, %"class.base::Value"** %49, align 8, !noalias !3
  %67 = icmp eq %"class.base::Value"* %65, %66
  br i1 %67, label %74, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.logging::CheckError"* %8 to i8*
  %70 = bitcast %"class.std::__1::unique_ptr.46"* %9 to i8*
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %9, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.46"* %9 to i8**
  %73 = bitcast %"class.std::__1::unique_ptr.46"** %14 to i64*
  br label %75

74:                                               ; preds = %100, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11, !noalias !3
  br i1 %13, label %105, label %160

75:                                               ; preds = %100, %68
  %76 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #11
  %77 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %78 to i8
  %80 = icmp eq i8 %79, 6
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11, !noalias !3
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #11
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11, !noalias !3
  br label %83

83:                                               ; preds = %81, %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11, !noalias !3
  %84 = call i8* @_Znwm(i64 264) #12
  %85 = bitcast i8* %84 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ERKN4base5ValueE(%"class.extensions::ArgumentSpec"* nonnull %85, %"class.base::Value"* dereferenceable(32) %76) #11
  store i8* %84, i8** %72, align 8, !noalias !3
  %86 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %14, align 8, !alias.scope !3
  %87 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %15, align 8, !alias.scope !3
  %88 = icmp ult %"class.std::__1::unique_ptr.46"* %86, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %83
  %90 = ptrtoint i8* %84 to i64
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %71, align 8, !noalias !3
  %91 = bitcast %"class.std::__1::unique_ptr.46"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %86, i64 1
  %93 = ptrtoint %"class.std::__1::unique_ptr.46"* %92 to i64
  store i64 %93, i64* %73, align 8, !alias.scope !3
  br label %95

94:                                               ; preds = %83
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.44"* nonnull %12, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %9) #11
  br label %95

95:                                               ; preds = %94, %89
  %96 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %71, align 8, !noalias !3
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %71, align 8, !noalias !3
  %97 = icmp eq %"class.extensions::ArgumentSpec"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %96) #11
  %99 = bitcast %"class.extensions::ArgumentSpec"* %96 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %98, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11, !noalias !3
  %101 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #11
  %102 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8, !noalias !3
  %103 = load %"class.base::Value"*, %"class.base::Value"** %49, align 8, !noalias !3
  %104 = icmp eq %"class.base::Value"* %102, %103
  br i1 %104, label %74, label %75

105:                                              ; preds = %74
  %106 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8, !noalias !3
  %108 = trunc i64 %107 to i8
  %109 = icmp eq i8 %108, 6
  br i1 %109, label %113, label %110

110:                                              ; preds = %105
  %111 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11, !noalias !3
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 43, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #11
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11, !noalias !3
  br label %113

113:                                              ; preds = %110, %105
  %114 = bitcast %"class.std::__1::unique_ptr.46"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #11, !noalias !3
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %11, i64 0, i32 0, i32 0, i32 0
  %116 = call i8* @_Znwm(i64 264) #12
  %117 = bitcast i8* %116 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %117, i32 7) #11
  %118 = bitcast %"class.std::__1::unique_ptr.46"* %11 to i8**
  store i8* %116, i8** %118, align 8, !noalias !3
  %119 = call %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8, i8 zeroext 1) #11
  %120 = icmp eq %"class.base::Value"* %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %113
  %122 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* nonnull %119) #11
  %123 = zext i1 %122 to i8
  %124 = getelementptr inbounds i8, i8* %116, i64 56
  store i8 %123, i8* %124, align 8, !noalias !3
  %125 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %115, align 8, !noalias !3
  %126 = bitcast %"class.extensions::ArgumentSpec"* %125 to i8*
  br label %127

127:                                              ; preds = %121, %113
  %128 = phi i8* [ %116, %113 ], [ %126, %121 ]
  %129 = phi %"class.extensions::ArgumentSpec"* [ %117, %113 ], [ %125, %121 ]
  %130 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %130)
  %131 = bitcast %"class.extensions::ArgumentSpec"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %135, %127
  %139 = bitcast i8* %128 to i64*
  store i64 7738135660106375523, i64* %139, align 8
  %140 = getelementptr inbounds i8, i8* %128, i64 8
  store i8 0, i8* %140, align 8
  %141 = getelementptr inbounds i8, i8* %128, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* nonnull align 1 %130, i64 14, i1 false)
  %142 = getelementptr inbounds i8, i8* %128, i64 23
  store i8 8, i8* %142, align 1
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %130)
  %143 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %14, align 8, !alias.scope !3
  %144 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %15, align 8, !alias.scope !3
  %145 = icmp ult %"class.std::__1::unique_ptr.46"* %143, %144
  br i1 %145, label %146, label %153

146:                                              ; preds = %138
  %147 = bitcast %"class.std::__1::unique_ptr.46"* %11 to i64*
  %148 = load i64, i64* %147, align 8, !noalias !3
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %115, align 8, !noalias !3
  %149 = bitcast %"class.std::__1::unique_ptr.46"* %143 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %143, i64 1
  %151 = ptrtoint %"class.std::__1::unique_ptr.46"* %150 to i64
  %152 = bitcast %"class.std::__1::unique_ptr.46"** %14 to i64*
  store i64 %151, i64* %152, align 8, !alias.scope !3
  br label %154

153:                                              ; preds = %138
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.44"* nonnull %12, %"class.std::__1::unique_ptr.46"* nonnull dereferenceable(8) %11) #11
  br label %154

154:                                              ; preds = %153, %146
  %155 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %115, align 8, !noalias !3
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %115, align 8, !noalias !3
  %156 = icmp eq %"class.extensions::ArgumentSpec"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %155) #11
  %158 = bitcast %"class.extensions::ArgumentSpec"* %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %157, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #11, !noalias !3
  br label %160

160:                                              ; preds = %74, %159
  %161 = bitcast %"class.std::__1::vector.44"* %12 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.extensions::APISignature"* %0 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 1
  %165 = bitcast %"class.std::__1::unique_ptr.46"** %14 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8
  %167 = bitcast %"class.std::__1::unique_ptr.46"** %164 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %167, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #11
  %168 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 1
  store i32 1, i32* %168, align 8
  %169 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 2
  store %"class.extensions::BindingAccessChecker"* %3, %"class.extensions::BindingAccessChecker"** %169, align 8
  %170 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 3
  %171 = inttoptr i64 %162 to %"class.std::__1::unique_ptr.46"*
  %172 = extractelement <2 x i64> %166, i32 0
  %173 = inttoptr i64 %172 to %"class.std::__1::unique_ptr.46"*
  %174 = icmp eq %"class.std::__1::unique_ptr.46"* %171, %173
  br i1 %174, label %182, label %175

175:                                              ; preds = %160
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %173, i64 -1, i32 0, i32 0, i32 0
  %177 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %176, align 8
  %178 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %177, i64 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 7
  %181 = zext i1 %180 to i8
  br label %182

182:                                              ; preds = %175, %160
  %183 = phi i8 [ 0, %160 ], [ %181, %175 ]
  store i8 %183, i8* %170, align 8
  %184 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 4
  %185 = bitcast %"class.std::__1::basic_string"* %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 24, i1 false) #11
  br i1 %13, label %186, label %187

186:                                              ; preds = %182
  store i32 0, i32* %168, align 8
  br label %187

187:                                              ; preds = %186, %182
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignatureC2ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEbPNS_20BindingAccessCheckerE(%"class.extensions::APISignature"* nocapture, %"class.std::__1::vector.44"* nocapture, i1 zeroext, %"class.extensions::BindingAccessChecker"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.extensions::APISignature"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.extensions::APISignature"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.46"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.46"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr.46"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.46"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.std::__1::vector.44"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 1
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 2
  store %"class.extensions::BindingAccessChecker"* %3, %"class.extensions::BindingAccessChecker"** %21, align 8
  %22 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %23, align 8
  %25 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %12, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.46"* %24, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %25, i64 -1, i32 0, i32 0, i32 0
  %29 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %28, align 8
  %30 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 7
  %33 = zext i1 %32 to i8
  br label %34

34:                                               ; preds = %4, %27
  %35 = phi i8 [ 0, %4 ], [ %33, %27 ]
  store i8 %35, i8* %22, align 8
  %36 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 4
  %37 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  br i1 %2, label %38, label %39

38:                                               ; preds = %34
  store i32 0, i32* %20, align 8
  br label %39

39:                                               ; preds = %38, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignatureC2ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.extensions::APISignature"* nocapture, %"class.std::__1::vector.44"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.46"** %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = bitcast %"class.std::__1::vector.44"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = bitcast %"class.extensions::APISignature"* %0 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.46"** %10 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 2
  store %"class.extensions::BindingAccessChecker"* null, %"class.extensions::BindingAccessChecker"** %13, align 8
  %14 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 3
  %15 = inttoptr i64 %4 to %"class.std::__1::unique_ptr.46"*
  %16 = extractelement <2 x i64> %7, i32 0
  %17 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.46"*
  %18 = icmp eq %"class.std::__1::unique_ptr.46"* %15, %17
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %17, i64 -1, i32 0, i32 0, i32 0
  %21 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %20, align 8
  %22 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 7
  %25 = zext i1 %24 to i8
  br label %26

26:                                               ; preds = %2, %19
  %27 = phi i8 [ 0, %2 ], [ %25, %19 ]
  store i8 %27, i8* %14, align 8
  %28 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 4
  %29 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12APISignatureD2Ev(%"class.extensions::APISignature"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.46"* %12, null
  br i1 %13, label %34, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::unique_ptr.46"* %12 to i8*
  %16 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.46"* %17, %12
  br i1 %18, label %32, label %19

19:                                               ; preds = %14, %27
  %20 = phi %"class.std::__1::unique_ptr.46"* [ %21, %27 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %22, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %22, align 8
  %24 = icmp eq %"class.extensions::ArgumentSpec"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  tail call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %23) #11
  %26 = bitcast %"class.extensions::ArgumentSpec"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %25, %19
  %28 = icmp eq %"class.std::__1::unique_ptr.46"* %21, %12
  br i1 %28, label %29, label %19

29:                                               ; preds = %27
  %30 = bitcast %"class.extensions::APISignature"* %0 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %14
  %33 = phi i8* [ %31, %29 ], [ %15, %14 ]
  store %"class.std::__1::unique_ptr.46"* %12, %"class.std::__1::unique_ptr.46"** %16, align 8
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %10, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions12APISignature18ParseArgumentsToV8EN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEERKNS_19APITypeReferenceMapE(%"struct.extensions::APISignature::V8ParseResult"* noalias nocapture sret, %"class.extensions::APISignature"*, %"class.v8::Context"*, %"class.std::__1::vector"* dereferenceable(24), %"class.extensions::APITypeReferenceMap"*) local_unnamed_addr #0 align 2 {
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.extensions::(anonymous namespace)::V8ArgumentParser", align 8
  %8 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 2
  %13 = load %"class.extensions::BindingAccessChecker"*, %"class.extensions::BindingAccessChecker"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK10extensions20BindingAccessChecker16HasPromiseAccessEN2v85LocalINS1_7ContextEEE(%"class.extensions::BindingAccessChecker"* %13, %"class.v8::Context"* %2) #11
  br i1 %14, label %16, label %15

15:                                               ; preds = %11, %5
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i32 [ 1, %15 ], [ 0, %11 ]
  %18 = bitcast %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 0
  %20 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.v8::Context"* %2, %"class.v8::Context"** %21, align 8
  %22 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 2
  store %"class.std::__1::vector.44"* %19, %"class.std::__1::vector.44"** %22, align 8
  %23 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 3
  store %"class.std::__1::vector"* %3, %"class.std::__1::vector"** %23, align 8
  %24 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 4
  store %"class.extensions::APITypeReferenceMap"* %4, %"class.extensions::APITypeReferenceMap"** %24, align 8
  %25 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 5
  store i32 %17, i32* %25, align 8
  %26 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 6
  %27 = bitcast i32* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 52, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_116V8ArgumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %28 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 1, i32 0
  %29 = bitcast %"class.v8::Value"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #11
  %30 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 3
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp ne i8 %31, 0
  %33 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 -86, i64 48, i1 false) #11, !alias.scope !6
  store i8 0, i8* %33, align 8, !alias.scope !6
  %34 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8, !alias.scope !6
  %36 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon.5* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11, !alias.scope !6
  %38 = bitcast %union.anon* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 28, i1 false) #11, !alias.scope !6
  %39 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0
  %40 = call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_114ArgumentParser18ParseArgumentsImplEb(%"class.extensions::(anonymous namespace)::ArgumentParser"* nonnull %39, i1 zeroext %32) #11, !noalias !6
  br i1 %40, label %41, label %55

41:                                               ; preds = %16
  %42 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 2
  %43 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::vector"* %42 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8, !noalias !6
  %46 = bitcast %"class.std::__1::vector"* %43 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8, !alias.scope !6
  %47 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.v8::Local"** %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !6
  %50 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"class.v8::Local"** %50 to i64*
  store i64 %49, i64* %51, align 8, !alias.scope !6
  %52 = bitcast %"class.std::__1::vector"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #11, !noalias !6
  store i8 1, i8* %33, align 8, !alias.scope !6
  %53 = load i32, i32* %26, align 4, !noalias !6
  %54 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 1
  store i32 %53, i32* %54, align 8, !alias.scope !6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_116V8ArgumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  br label %79

55:                                               ; preds = %16
  %56 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %56)
  %57 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 7
  %58 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %59 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast i8** %59 to i64*
  %61 = load i64, i64* %60, align 8, !noalias !6
  %62 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast i64* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %63, i64 15, i1 false) #11, !noalias !6
  %64 = getelementptr inbounds i8, i8* %18, i64 71
  %65 = load i8, i8* %64, align 1, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #11, !noalias !9
  %66 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast i8** %66 to i64*
  store i64 %61, i64* %67, align 8, !alias.scope !6
  %68 = getelementptr inbounds %"struct.extensions::APISignature::V8ParseResult", %"struct.extensions::APISignature::V8ParseResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast i64* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %56, i64 15, i1 false) #11
  %70 = getelementptr inbounds i8, i8* %33, i64 71
  store i8 %65, i8* %70, align 1, !alias.scope !6
  store i8 1, i8* %35, align 8, !alias.scope !6
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %56)
  %71 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.v8::Local"*, %"class.v8::Local"** %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_116V8ArgumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %73 = icmp eq %"class.v8::Local"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %55
  %75 = bitcast %"class.v8::Local"* %72 to i8*
  %76 = ptrtoint %"class.v8::Local"* %72 to i64
  %77 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 2, i32 0, i32 1
  %78 = bitcast %"class.v8::Local"** %77 to i64*
  store i64 %76, i64* %78, align 8
  call void @_ZdlPv(i8* %75) #12
  br label %79

79:                                               ; preds = %41, %74, %55
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_114ArgumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %80 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 8
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %85, %79
  %89 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %7, i64 0, i32 0, i32 7
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #12
  br label %97

97:                                               ; preds = %88, %94
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %18) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10extensions12APISignature20CheckPromisesAllowedEN2v85LocalINS1_7ContextEEE(%"class.extensions::APISignature"* nocapture readonly, %"class.v8::Context"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 2
  %8 = load %"class.extensions::BindingAccessChecker"*, %"class.extensions::BindingAccessChecker"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK10extensions20BindingAccessChecker16HasPromiseAccessEN2v85LocalINS1_7ContextEEE(%"class.extensions::BindingAccessChecker"* %8, %"class.v8::Context"* %1) #11
  br i1 %9, label %11, label %10

10:                                               ; preds = %6, %2
  br label %11

11:                                               ; preds = %6, %10
  %12 = phi i32 [ 1, %10 ], [ 0, %6 ]
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions12APISignature20ParseArgumentsToJSONEN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEERKNS_19APITypeReferenceMapE(%"struct.extensions::APISignature::JSONParseResult"* noalias nocapture sret, %"class.extensions::APISignature"*, %"class.v8::Context"*, %"class.std::__1::vector"* dereferenceable(24), %"class.extensions::APITypeReferenceMap"*) local_unnamed_addr #0 align 2 {
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", align 8
  %8 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 2
  %13 = load %"class.extensions::BindingAccessChecker"*, %"class.extensions::BindingAccessChecker"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK10extensions20BindingAccessChecker16HasPromiseAccessEN2v85LocalINS1_7ContextEEE(%"class.extensions::BindingAccessChecker"* %13, %"class.v8::Context"* %2) #11
  br i1 %14, label %16, label %15

15:                                               ; preds = %11, %5
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i32 [ 1, %15 ], [ 0, %11 ]
  %18 = bitcast %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 0
  %20 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.v8::Context"* %2, %"class.v8::Context"** %21, align 8
  %22 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 2
  store %"class.std::__1::vector.44"* %19, %"class.std::__1::vector.44"** %22, align 8
  %23 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 3
  store %"class.std::__1::vector"* %3, %"class.std::__1::vector"** %23, align 8
  %24 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 4
  store %"class.extensions::APITypeReferenceMap"* %4, %"class.extensions::APITypeReferenceMap"** %24, align 8
  %25 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 5
  store i32 %17, i32* %25, align 8
  %26 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 6
  %27 = bitcast i32* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 52, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_123BaseValueArgumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %28 = tail call i8* @_Znwm(i64 32) #12
  %29 = bitcast i8* %28 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %29) #11
  %30 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::ListValue"** %30 to i8**
  store i8* %28, i8** %31, align 8
  %32 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 2
  %33 = bitcast %"class.std::__1::unique_ptr"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #11
  %34 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 3
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 -86, i64 32, i1 false) #11, !alias.scope !12
  %38 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8, !alias.scope !12
  %39 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %union.anon.5* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #11, !alias.scope !12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 20, i1 false) #11, !alias.scope !12
  %41 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0
  %42 = call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_114ArgumentParser18ParseArgumentsImplEb(%"class.extensions::(anonymous namespace)::ArgumentParser"* nonnull %41, i1 zeroext %36) #11, !noalias !12
  br i1 %42, label %59, label %43

43:                                               ; preds = %16
  %44 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %44)
  %45 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 7
  %46 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %47 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !12
  %50 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast i64* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %51, i64 15, i1 false) #11, !noalias !12
  %52 = getelementptr inbounds i8, i8* %18, i64 71
  %53 = load i8, i8* %52, align 1, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11, !noalias !15
  %54 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast i8** %54 to i64*
  store i64 %49, i64* %55, align 8, !alias.scope !12
  %56 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast i64* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %44, i64 15, i1 false) #11
  %58 = getelementptr inbounds i8, i8* %37, i64 55
  store i8 %53, i8* %58, align 1, !alias.scope !12
  store i8 1, i8* %38, align 8, !alias.scope !12
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %44)
  br label %70

59:                                               ; preds = %16
  %60 = load %"class.base::ListValue"*, %"class.base::ListValue"** %30, align 8, !noalias !12
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %30, align 8, !noalias !12
  %61 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::Value"* %61, %"class.base::Value"** %62, align 8, !alias.scope !12
  %63 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 3
  %64 = bitcast %"class.v8::Local.15"* %63 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !12
  %66 = load i32, i32* %26, align 4, !noalias !12
  %67 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 1
  %68 = bitcast %"class.v8::Local.15"* %67 to i64*
  store i64 %65, i64* %68, align 8, !alias.scope !12
  %69 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 2
  store i32 %66, i32* %69, align 8, !alias.scope !12
  br label %70

70:                                               ; preds = %43, %59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_123BaseValueArgumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %71 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load %"class.base::Value"*, %"class.base::Value"** %71, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %71, align 8
  %73 = icmp eq %"class.base::Value"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %72) #11
  %75 = bitcast %"class.base::Value"* %72 to i8*
  call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %74, %70
  %77 = load %"class.base::ListValue"*, %"class.base::ListValue"** %30, align 8
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %30, align 8
  %78 = icmp eq %"class.base::ListValue"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %77, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %80) #11
  %81 = bitcast %"class.base::ListValue"* %77 to i8*
  call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %79, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_114ArgumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %83 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 8
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %88, %82
  %92 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %7, i64 0, i32 0, i32 7
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %91, %97
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions12APISignature30ConvertArgumentsIgnoringSchemaEN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEE(%"struct.extensions::APISignature::JSONParseResult"* noalias nocapture sret, %"class.extensions::APISignature"* nocapture readonly, %"class.v8::Context"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::vector.37", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"class.v8::Local"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %15, align 8
  %17 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.46"* %16, %18
  %20 = inttoptr i64 %12 to %"class.v8::Local"*
  %21 = inttoptr i64 %10 to %"class.v8::Local"*
  br i1 %19, label %43, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %18, i64 -1, i32 0, i32 0, i32 0
  %24 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %23, align 8
  %25 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 7
  br i1 %27, label %28, label %43

28:                                               ; preds = %22
  %29 = icmp eq %"class.v8::Local"* %20, %21
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  %33 = load %"class.v8::Local"*, %"class.v8::Local"** %8, align 8
  br label %34

34:                                               ; preds = %28, %30
  %35 = phi %"class.v8::Local"* [ %21, %28 ], [ %33, %30 ]
  %36 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %35, i64 -1
  %37 = bitcast %"class.v8::Local"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = add nsw i64 %14, -1
  %40 = inttoptr i64 %38 to %"class.v8::Value"*
  %41 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %40) #11
  %42 = select i1 %41, i64 %38, i64 0
  br label %43

43:                                               ; preds = %34, %4, %22
  %44 = phi i64 [ 0, %22 ], [ 0, %4 ], [ %42, %34 ]
  %45 = phi i64 [ %14, %22 ], [ %14, %4 ], [ %39, %34 ]
  %46 = bitcast %"class.std::__1::vector.37"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %6, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %6, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #11
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.37"* nonnull %6, i64 %45)
  %50 = call %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() #11
  %51 = bitcast %"class.content::V8ValueConverter"* %50 to void (%"class.content::V8ValueConverter"*, i1)***
  %52 = load void (%"class.content::V8ValueConverter"*, i1)**, void (%"class.content::V8ValueConverter"*, i1)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %52, i64 6
  %54 = load void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %53, align 8
  call void %54(%"class.content::V8ValueConverter"* %50, i1 zeroext true) #11
  %55 = load void (%"class.content::V8ValueConverter"*, i1)**, void (%"class.content::V8ValueConverter"*, i1)*** %51, align 8
  %56 = getelementptr inbounds void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %55, i64 8
  %57 = load void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %56, align 8
  call void %57(%"class.content::V8ValueConverter"* %50, i1 zeroext true) #11
  %58 = load void (%"class.content::V8ValueConverter"*, i1)**, void (%"class.content::V8ValueConverter"*, i1)*** %51, align 8
  %59 = getelementptr inbounds void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %58, i64 7
  %60 = load void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %59, align 8
  call void %60(%"class.content::V8ValueConverter"* %50, i1 zeroext true) #11
  %61 = icmp eq i64 %45, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %43
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %64 = bitcast %"class.content::V8ValueConverter"* %50 to %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)***
  %65 = bitcast %"class.base::Value"* %7 to i8*
  %66 = bitcast %"class.base::Value"** %48 to i64*
  br label %103

67:                                               ; preds = %128, %43
  %68 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 -86, i64 32, i1 false)
  %69 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast %union.anon.5* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #11
  %72 = call i8* @_Znwm(i64 32) #12
  %73 = bitcast i8* %72 to %"class.base::ListValue"*
  call void @_ZN4base9ListValueC1EONSt3__16vectorINS_5ValueENS1_9allocatorIS3_EEEE(%"class.base::ListValue"* nonnull %73, %"class.std::__1::vector.37"* nonnull dereferenceable(24) %6) #11
  %74 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %0 to i8**
  store i8* %72, i8** %74, align 8
  %75 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 1
  %76 = bitcast %"class.v8::Local.15"* %75 to i64*
  store i64 %44, i64* %76, align 8
  %77 = icmp ne i64 %44, 0
  %78 = zext i1 %77 to i32
  %79 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %0, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = icmp eq %"class.content::V8ValueConverter"* %50, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %67
  %82 = bitcast %"class.content::V8ValueConverter"* %50 to void (%"class.content::V8ValueConverter"*)***
  %83 = load void (%"class.content::V8ValueConverter"*)**, void (%"class.content::V8ValueConverter"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %83, i64 1
  %85 = load void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %84, align 8
  call void %85(%"class.content::V8ValueConverter"* nonnull %50) #11
  br label %86

86:                                               ; preds = %67, %81
  %87 = load %"class.base::Value"*, %"class.base::Value"** %47, align 8
  %88 = icmp eq %"class.base::Value"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = bitcast %"class.base::Value"* %87 to i8*
  %91 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %92 = icmp eq %"class.base::Value"* %91, %87
  br i1 %92, label %100, label %93

93:                                               ; preds = %89, %93
  %94 = phi %"class.base::Value"* [ %95, %93 ], [ %91, %89 ]
  %95 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %94, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %95) #11
  %96 = icmp eq %"class.base::Value"* %95, %87
  br i1 %96, label %97, label %93

97:                                               ; preds = %93
  %98 = bitcast %"class.std::__1::vector.37"* %6 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %89
  %101 = phi i8* [ %99, %97 ], [ %90, %89 ]
  store %"class.base::Value"* %87, %"class.base::Value"** %48, align 8
  call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %86, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  ret void

103:                                              ; preds = %128, %62
  %104 = phi i64 [ 0, %62 ], [ %129, %128 ]
  %105 = load %"class.v8::Local"*, %"class.v8::Local"** %63, align 8
  %106 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %105, i64 %104, i32 0
  %107 = load %"class.v8::Value"*, %"class.v8::Value"** %106, align 8
  %108 = load %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)**, %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)*** %64, align 8
  %109 = getelementptr inbounds %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)*, %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)** %108, i64 5
  %110 = load %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)*, %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)** %109, align 8
  %111 = call %"class.base::Value"* %110(%"class.content::V8ValueConverter"* %50, %"class.v8::Value"* %107, %"class.v8::Context"* %2) #11
  %112 = ptrtoint %"class.base::Value"* %111 to i64
  %113 = icmp eq %"class.base::Value"* %111, null
  br i1 %113, label %114, label %118

114:                                              ; preds = %103
  %115 = call i8* @_Znwm(i64 32) #12
  %116 = bitcast i8* %115 to %"class.base::Value"*
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %116) #11
  %117 = ptrtoint i8* %115 to i64
  br label %118

118:                                              ; preds = %103, %114
  %119 = phi i64 [ %112, %103 ], [ %117, %114 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #11
  %120 = inttoptr i64 %119 to %"class.base::Value"*
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %7, %"class.base::Value"* %120) #11
  %121 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %122 = load %"class.base::Value"*, %"class.base::Value"** %49, align 8
  %123 = icmp ult %"class.base::Value"* %121, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %121, %"class.base::Value"* nonnull dereferenceable(32) %7) #11
  %125 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %121, i64 1
  %126 = ptrtoint %"class.base::Value"* %125 to i64
  store i64 %126, i64* %66, align 8
  br label %128

127:                                              ; preds = %118
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.37"* nonnull %6, %"class.base::Value"* nonnull dereferenceable(32) %7) #11
  br label %128

128:                                              ; preds = %127, %124
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #11
  %129 = add nuw i64 %104, 1
  %130 = icmp eq i64 %129, %45
  br i1 %130, label %67, label %103
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.37"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.base::Value"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.base::Value"*
  %24 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 %20
  %25 = ptrtoint %"class.base::Value"* %24 to i64
  %26 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %23, i64 %1
  %27 = ptrtoint %"class.base::Value"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.base::Value"*
  %29 = icmp eq %"class.base::Value"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.base::Value"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.base::Value"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %31, i64 -1
  %34 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %32, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %33, %"class.base::Value"* dereferenceable(32) %34) #11
  %35 = icmp eq %"class.base::Value"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.base::Value"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.base::Value"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.base::Value"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.base::Value"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.base::Value"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.base::Value"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %48, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %49) #11
  %50 = icmp eq %"class.base::Value"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

declare %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() local_unnamed_addr #2

declare void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions12APISignature16ValidateResponseEN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEERKNS_19APITypeReferenceMapEPNS5_12basic_stringIcNS5_11char_traitsIcEENS9_IcEEEE(%"class.extensions::APISignature"* nocapture readonly, %"class.v8::Context"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.extensions::APITypeReferenceMap"*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.46"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.extensions::APISignature"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %19 = bitcast %"class.v8::Local"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp ugt i64 %24, %17
  %26 = inttoptr i64 %15 to %"class.std::__1::unique_ptr.46"*
  %27 = inttoptr i64 %22 to %"class.v8::Local"*
  br i1 %25, label %28, label %39

28:                                               ; preds = %5
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @_ZN10extensions10api_errors16TooManyArgumentsEv(%"class.std::__1::basic_string"* nonnull sret %6) #11
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %34, %28
  %38 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %29, i64 24, i1 false) #11
  br label %165

39:                                               ; preds = %5
  %40 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #11
  %42 = icmp eq i64 %23, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %51

46:                                               ; preds = %119, %39
  %47 = icmp ult i64 %24, %17
  br i1 %47, label %48, label %157

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %49, align 8
  br label %127

51:                                               ; preds = %122, %43
  %52 = phi %"class.v8::Local"* [ %27, %43 ], [ %124, %122 ]
  %53 = phi %"class.std::__1::unique_ptr.46"* [ %26, %43 ], [ %123, %122 ]
  %54 = phi i64 [ 0, %43 ], [ %120, %122 ]
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %53, i64 %54, i32 0, i32 0, i32 0
  %56 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %52, i64 %54, i32 0
  %58 = load %"class.v8::Value"*, %"class.v8::Value"** %57, align 8
  %59 = bitcast %"class.v8::Value"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 3
  %62 = icmp eq i64 %61, 1
  br i1 %62, label %63, label %105

63:                                               ; preds = %51
  %64 = add i64 %60, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = and i64 %60, -4294967296
  %68 = zext i32 %66 to i64
  %69 = or i64 %67, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load i16, i16* %71, align 2
  %73 = icmp eq i16 %72, 67
  br i1 %73, label %74, label %105

74:                                               ; preds = %63
  %75 = add i64 %60, 23
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = ashr i32 %77, 1
  switch i32 %78, label %105 [
    i32 5, label %79
    i32 3, label %79
  ]

79:                                               ; preds = %74, %74
  %80 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %56, i64 0, i32 3
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %119

83:                                               ; preds = %79
  %84 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #11
  %85 = bitcast %"class.extensions::ArgumentSpec"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  br label %94

92:                                               ; preds = %83
  %93 = bitcast %"class.extensions::ArgumentSpec"* %56 to i8*
  br label %94

94:                                               ; preds = %89, %92
  %95 = phi i8* [ %91, %89 ], [ %93, %92 ]
  call void @_ZN10extensions10api_errors23MissingRequiredArgumentEPKc(%"class.std::__1::basic_string"* nonnull sret %8, i8* %95) #11
  %96 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %100, %94
  %104 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* nonnull align 8 %84, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #11
  br label %157

105:                                              ; preds = %74, %63, %51
  %106 = call zeroext i1 @_ZNK10extensions12ArgumentSpec13ParseArgumentEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEERKNS_19APITypeReferenceMapEPNSt3__110unique_ptrIN4base5ValueENSA_14default_deleteISD_EEEEPS6_PNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE(%"class.extensions::ArgumentSpec"* %56, %"class.v8::Context"* %1, %"class.v8::Value"* %58, %"class.extensions::APITypeReferenceMap"* %3, %"class.std::__1::unique_ptr"* null, %"class.v8::Local"* null, %"class.std::__1::basic_string"* nonnull %7) #11
  br i1 %106, label %119, label %107

107:                                              ; preds = %105
  %108 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %56, i64 0, i32 0
  call void @_ZN10extensions10api_errors13ArgumentErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_string"* dereferenceable(24) %109, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %114, %107
  %118 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 8 %108, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #11
  br label %157

119:                                              ; preds = %79, %105
  %120 = add nuw i64 %54, 1
  %121 = icmp ult i64 %120, %24
  br i1 %121, label %122, label %46

122:                                              ; preds = %119
  %123 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %44, align 8
  %124 = load %"class.v8::Local"*, %"class.v8::Local"** %45, align 8
  br label %51

125:                                              ; preds = %127
  %126 = icmp eq i64 %134, %17
  br i1 %126, label %157, label %127

127:                                              ; preds = %125, %48
  %128 = phi i64 [ %24, %48 ], [ %134, %125 ]
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %50, i64 %128, i32 0, i32 0, i32 0
  %130 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %129, align 8
  %131 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %130, i64 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = add i64 %128, 1
  br i1 %133, label %135, label %125

135:                                              ; preds = %127
  %136 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #11
  %137 = bitcast %"class.extensions::ArgumentSpec"* %130 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  br label %146

144:                                              ; preds = %135
  %145 = bitcast %"class.extensions::ArgumentSpec"* %130 to i8*
  br label %146

146:                                              ; preds = %141, %144
  %147 = phi i8* [ %143, %141 ], [ %145, %144 ]
  call void @_ZN10extensions10api_errors23MissingRequiredArgumentEPKc(%"class.std::__1::basic_string"* nonnull sret %10, i8* %147) #11
  %148 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #12
  br label %155

155:                                              ; preds = %146, %152
  %156 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %136, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #11
  br label %157

157:                                              ; preds = %125, %46, %103, %117, %155
  %158 = phi i1 [ false, %155 ], [ false, %117 ], [ false, %103 ], [ true, %46 ], [ true, %125 ]
  %159 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %164) #12
  br label %165

165:                                              ; preds = %163, %157, %37
  %166 = phi i8* [ %29, %37 ], [ %40, %157 ], [ %40, %163 ]
  %167 = phi i1 [ false, %37 ], [ %158, %157 ], [ %158, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #11
  ret i1 %167
}

declare void @_ZN10extensions10api_errors16TooManyArgumentsEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #2

declare void @_ZN10extensions10api_errors23MissingRequiredArgumentEPKc(%"class.std::__1::basic_string"* sret, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK10extensions12ArgumentSpec13ParseArgumentEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEERKNS_19APITypeReferenceMapEPNSt3__110unique_ptrIN4base5ValueENSA_14default_deleteISD_EEEEPS6_PNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE(%"class.extensions::ArgumentSpec"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.extensions::APITypeReferenceMap"*, %"class.std::__1::unique_ptr"*, %"class.v8::Local"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN10extensions10api_errors13ArgumentErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions12APISignature20GetExpectedSignatureEv(%"class.std::__1::basic_string"* noalias sret, %"class.extensions::APISignature"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.97", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 4
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %2
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %20, align 8
  %22 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 0, i32 0, i32 1
  %23 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %22, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr.46"* %21, %23
  br i1 %24, label %25, label %34

25:                                               ; preds = %19, %16
  br i1 %10, label %29, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #11
  br label %148

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %31, i64 %33) #11
  br label %148

34:                                               ; preds = %19
  %35 = ptrtoint %"class.std::__1::unique_ptr.46"* %21 to i64
  %36 = ptrtoint %"class.std::__1::unique_ptr.46"* %23 to i64
  %37 = bitcast %"class.std::__1::vector.97"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %3, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %3, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #11
  %41 = sub i64 %36, %35
  %42 = ashr exact i64 %41, 3
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.97"* nonnull %3, i64 %42)
  %43 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %20, align 8
  %44 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %22, align 8
  %45 = icmp eq %"class.std::__1::unique_ptr.46"* %43, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = bitcast %"class.std::__1::basic_string"** %39 to i64*
  br label %54

48:                                               ; preds = %34
  %49 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %50 = bitcast %"class.std::__1::basic_string"** %39 to i64*
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %104

54:                                               ; preds = %145, %46
  %55 = phi i64* [ %47, %46 ], [ %50, %145 ]
  %56 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  %57 = bitcast %"class.std::__1::vector.97"* %3 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %55, align 8
  %60 = sub i64 %59, %58
  %61 = sdiv exact i64 %60, 24
  %62 = inttoptr i64 %58 to %"class.std::__1::basic_string"*
  call void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* nonnull sret %5, i64 %61, %"class.std::__1::basic_string"* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #11
  %63 = load i8, i8* %8, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %65, %54
  %69 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %56, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  %70 = load i8, i8* %8, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %69, i64 24, i1 false) #11
  br label %79

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.extensions::APISignature", %"class.extensions::APISignature"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %76, i64 %78) #11
  br label %79

79:                                               ; preds = %72, %74
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %81 = icmp eq %"class.std::__1::basic_string"* %80, null
  br i1 %81, label %103, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  %84 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %85 = icmp eq %"class.std::__1::basic_string"* %84, %80
  br i1 %85, label %101, label %86

86:                                               ; preds = %82, %96
  %87 = phi %"class.std::__1::basic_string"* [ %88, %96 ], [ %84, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 -1
  %89 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %93, %86
  %97 = icmp eq %"class.std::__1::basic_string"* %88, %80
  br i1 %97, label %98, label %86

98:                                               ; preds = %96
  %99 = bitcast %"class.std::__1::vector.97"* %3 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %82
  %102 = phi i8* [ %100, %98 ], [ %83, %82 ]
  store %"class.std::__1::basic_string"* %80, %"class.std::__1::basic_string"** %39, align 8
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %79, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  br label %148

104:                                              ; preds = %48, %145
  %105 = phi %"class.std::__1::unique_ptr.46"* [ %43, %48 ], [ %146, %145 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %106, align 8
  %108 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %107, i64 0, i32 3
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  %111 = select i1 %110, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)
  %112 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions12ArgumentSpec11GetTypeNameEv(%"class.extensions::ArgumentSpec"* %107) #11
  %113 = bitcast %"class.std::__1::basic_string"* %112 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast %"class.std::__1::basic_string"* %112 to i8*
  %120 = select i1 %116, i8* %118, i8* %119
  %121 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %106, align 8
  %122 = bitcast %"class.extensions::ArgumentSpec"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %104
  %127 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  br label %131

129:                                              ; preds = %104
  %130 = bitcast %"class.extensions::ArgumentSpec"* %121 to i8*
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi i8* [ %128, %126 ], [ %130, %129 ]
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* %111, i8* %120, i8* %132) #11
  %133 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %134 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %135 = icmp ult %"class.std::__1::basic_string"* %133, %134
  br i1 %135, label %136, label %140

136:                                              ; preds = %131
  %137 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 8 %49, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #11
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 1
  %139 = ptrtoint %"class.std::__1::basic_string"* %138 to i64
  store i64 %139, i64* %50, align 8
  br label %145

140:                                              ; preds = %131
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.97"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %141 = load i8, i8* %52, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %144) #12
  br label %145

145:                                              ; preds = %136, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %105, i64 1
  %147 = icmp eq %"class.std::__1::unique_ptr.46"* %146, %44
  br i1 %147, label %54, label %104

148:                                              ; preds = %29, %26, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.97"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.97"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions12ArgumentSpec11GetTypeNameEv(%"class.extensions::ArgumentSpec"*) local_unnamed_addr #2

declare void @_ZN4base10JoinStringENS_4spanIKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELm18446744073709551615EEENS_16BasicStringPieceIcS4_EE(%"class.std::__1::basic_string"* sret, i64, %"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK10extensions20BindingAccessChecker16HasPromiseAccessEN2v85LocalINS1_7ContextEEE(%"class.extensions::BindingAccessChecker"*, %"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare %"class.std::__1::vector.37"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector.44"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.46"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.46"*
  br i1 %10, label %12, label %132

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.46"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr.46"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr.46"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr.46"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr.46"*
  %29 = icmp eq %"class.std::__1::unique_ptr.46"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.extensions::ArgumentSpec"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr.46"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr.46"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.46"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.46"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !18

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr.46"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr.46"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr.46"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %127

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr.46"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr.46"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.46"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.46"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.46"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.46"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.46"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.46"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.46"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.46"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.46"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.46"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.46"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.46"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.46"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.46"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.46"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.46"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.46"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr.46"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr.46"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr.46"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr.46"* %114, %115
  br i1 %116, label %127, label %117

117:                                              ; preds = %110, %125
  %118 = phi %"class.std::__1::unique_ptr.46"* [ %119, %125 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %120, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %120, align 8
  %122 = icmp eq %"class.extensions::ArgumentSpec"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  tail call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %121) #11
  %124 = bitcast %"class.extensions::ArgumentSpec"* %121 to i8*
  tail call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %123, %117
  %126 = icmp eq %"class.std::__1::unique_ptr.46"* %119, %115
  br i1 %126, label %127, label %117

127:                                              ; preds = %125, %57, %110
  %128 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %125 ]
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = inttoptr i64 %128 to i8*
  tail call void @_ZdlPv(i8* %131) #12
  br label %132

132:                                              ; preds = %130, %127, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare %"class.base::Value"* @_ZNK4base5Value13FindKeyOfTypeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4TypeE(%"class.base::Value"*, i8*, i64, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* %29, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %48, i8* %50) #11
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #11
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %20, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i8* %41, i8* %43) #11
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.44"*, %"class.std::__1::unique_ptr.46"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.46"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.44"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.46"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.46"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.46"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.46"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.46"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.46"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.46"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.46"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.46"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.extensions::ArgumentSpec"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.46"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.46"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.46"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.46"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !20

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.46"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.46"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.46"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.46"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.46"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.46"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.46"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.46"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.46"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.46"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.46"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.46"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.46"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.46"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.46"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.46"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.46"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.46"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.46"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.46"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.46"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.46"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.46"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.46"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.46"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.46"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.46"*
  %138 = icmp eq %"class.std::__1::unique_ptr.46"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.46"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %142, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %142, align 8
  %144 = icmp eq %"class.extensions::ArgumentSpec"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %143) #11
  %146 = bitcast %"class.extensions::ArgumentSpec"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.46"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN10extensions12ArgumentSpecC1ERKN4base5ValueE(%"class.extensions::ArgumentSpec"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"*) unnamed_addr #3

declare void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser7AddNullEv(%"class.extensions::(anonymous namespace)::V8ArgumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.v8::Context"*, %"class.v8::Context"** %3, align 8
  %5 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %4) #11
  %6 = ptrtoint %"class.v8::Isolate"* %5 to i64
  %7 = add i64 %6, 176
  %8 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.v8::Local"*, %"class.v8::Local"** %8, align 8
  %10 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.v8::Local"*, %"class.v8::Local"** %10, align 8
  %12 = icmp ult %"class.v8::Local"* %9, %11
  %13 = ptrtoint %"class.v8::Local"* %11 to i64
  br i1 %12, label %14, label %19

14:                                               ; preds = %1
  %15 = bitcast %"class.v8::Local"* %9 to i64*
  store i64 %7, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %9, i64 1
  %17 = ptrtoint %"class.v8::Local"* %16 to i64
  %18 = bitcast %"class.v8::Local"** %8 to i64*
  store i64 %17, i64* %18, align 8
  br label %76

19:                                               ; preds = %1
  %20 = ptrtoint %"class.v8::Local"* %9 to i64
  %21 = bitcast %"class.v8::Local"** %8 to i64*
  %22 = bitcast %"class.std::__1::vector"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 3
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 2305843009213693951
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"class.v8::Local"** %10 to i64*
  %32 = sub i64 %13, %23
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %33, 1152921504606846975
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 2
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 2305843009213693951
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #13
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 2305843009213693951, %30 ]
  %45 = shl i64 %44, 3
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to %"class.v8::Local"*
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi %"class.v8::Local"* [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %50, i64 %25
  %52 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %50, i64 %49
  %53 = ptrtoint %"class.v8::Local"* %52 to i64
  %54 = bitcast %"class.v8::Local"* %51 to i64*
  store i64 %7, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %51, i64 1
  %56 = ptrtoint %"class.v8::Local"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %58 = load %"class.v8::Local"*, %"class.v8::Local"** %57, align 8
  %59 = load i64, i64* %21, align 8
  %60 = ptrtoint %"class.v8::Local"* %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %51, i64 %63
  %65 = ptrtoint %"class.v8::Local"* %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %48
  %68 = bitcast %"class.v8::Local"* %64 to i8*
  %69 = bitcast %"class.v8::Local"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %61, i1 false) #11
  %70 = load %"class.v8::Local"*, %"class.v8::Local"** %57, align 8
  br label %71

71:                                               ; preds = %67, %48
  %72 = phi %"class.v8::Local"* [ %58, %48 ], [ %70, %67 ]
  store i64 %65, i64* %22, align 8
  store i64 %56, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %73 = icmp eq %"class.v8::Local"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.v8::Local"* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %14, %71, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser15AddNullCallbackEv(%"class.extensions::(anonymous namespace)::V8ArgumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.v8::Context"*, %"class.v8::Context"** %3, align 8
  %5 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %4) #11
  %6 = ptrtoint %"class.v8::Isolate"* %5 to i64
  %7 = add i64 %6, 176
  %8 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.v8::Local"*, %"class.v8::Local"** %8, align 8
  %10 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.v8::Local"*, %"class.v8::Local"** %10, align 8
  %12 = icmp ult %"class.v8::Local"* %9, %11
  %13 = ptrtoint %"class.v8::Local"* %11 to i64
  br i1 %12, label %14, label %19

14:                                               ; preds = %1
  %15 = bitcast %"class.v8::Local"* %9 to i64*
  store i64 %7, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %9, i64 1
  %17 = ptrtoint %"class.v8::Local"* %16 to i64
  %18 = bitcast %"class.v8::Local"** %8 to i64*
  store i64 %17, i64* %18, align 8
  br label %76

19:                                               ; preds = %1
  %20 = ptrtoint %"class.v8::Local"* %9 to i64
  %21 = bitcast %"class.v8::Local"** %8 to i64*
  %22 = bitcast %"class.std::__1::vector"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 3
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 2305843009213693951
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #13
  unreachable

30:                                               ; preds = %19
  %31 = bitcast %"class.v8::Local"** %10 to i64*
  %32 = sub i64 %13, %23
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %33, 1152921504606846975
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 2
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 2305843009213693951
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #13
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 2305843009213693951, %30 ]
  %45 = shl i64 %44, 3
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to %"class.v8::Local"*
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi %"class.v8::Local"* [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %50, i64 %25
  %52 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %50, i64 %49
  %53 = ptrtoint %"class.v8::Local"* %52 to i64
  %54 = bitcast %"class.v8::Local"* %51 to i64*
  store i64 %7, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %51, i64 1
  %56 = ptrtoint %"class.v8::Local"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %58 = load %"class.v8::Local"*, %"class.v8::Local"** %57, align 8
  %59 = load i64, i64* %21, align 8
  %60 = ptrtoint %"class.v8::Local"* %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %51, i64 %63
  %65 = ptrtoint %"class.v8::Local"* %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %48
  %68 = bitcast %"class.v8::Local"* %64 to i8*
  %69 = bitcast %"class.v8::Local"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %61, i1 false) #11
  %70 = load %"class.v8::Local"*, %"class.v8::Local"** %57, align 8
  br label %71

71:                                               ; preds = %67, %48
  %72 = phi %"class.v8::Local"* [ %58, %48 ], [ %70, %67 ]
  store i64 %65, i64* %22, align 8
  store i64 %56, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %73 = icmp eq %"class.v8::Local"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.v8::Local"* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %14, %71, %74
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.std::__1::unique_ptr"* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser13GetBaseBufferEv(%"class.extensions::(anonymous namespace)::V8ArgumentParser"* nocapture readnone) unnamed_addr #9 align 2 {
  ret %"class.std::__1::unique_ptr"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.v8::Local"* @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser11GetV8BufferEv(%"class.extensions::(anonymous namespace)::V8ArgumentParser"* readnone) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 1
  ret %"class.v8::Local"* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser17AddParsedArgumentEv(%"class.extensions::(anonymous namespace)::V8ArgumentParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.v8::Local"*, %"class.v8::Local"** %4, align 8
  %6 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.v8::Local"*, %"class.v8::Local"** %6, align 8
  %8 = icmp eq %"class.v8::Local"* %5, %7
  %9 = ptrtoint %"class.v8::Local"* %7 to i64
  br i1 %8, label %17, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.v8::Local"* %3 to i64*
  %12 = bitcast %"class.v8::Local"* %5 to i64*
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %5, i64 1
  %15 = ptrtoint %"class.v8::Local"* %14 to i64
  %16 = bitcast %"class.v8::Local"** %4 to i64*
  store i64 %15, i64* %16, align 8
  br label %76

17:                                               ; preds = %1
  %18 = ptrtoint %"class.v8::Local"* %5 to i64
  %19 = bitcast %"class.v8::Local"** %4 to i64*
  %20 = bitcast %"class.std::__1::vector"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #13
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::Local"** %6 to i64*
  %30 = sub i64 %9, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 1152921504606846975
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 2305843009213693951, %28 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.v8::Local"*
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"class.v8::Local"* [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %48, i64 %23
  %50 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %48, i64 %47
  %51 = ptrtoint %"class.v8::Local"* %50 to i64
  %52 = bitcast %"class.v8::Local"* %3 to i64*
  %53 = bitcast %"class.v8::Local"* %49 to i64*
  %54 = load i64, i64* %52, align 8
  store i64 %54, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %49, i64 1
  %56 = ptrtoint %"class.v8::Local"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %58 = load %"class.v8::Local"*, %"class.v8::Local"** %57, align 8
  %59 = load i64, i64* %19, align 8
  %60 = ptrtoint %"class.v8::Local"* %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %49, i64 %63
  %65 = ptrtoint %"class.v8::Local"* %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %46
  %68 = bitcast %"class.v8::Local"* %64 to i8*
  %69 = bitcast %"class.v8::Local"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %61, i1 false) #11
  %70 = load %"class.v8::Local"*, %"class.v8::Local"** %57, align 8
  br label %71

71:                                               ; preds = %67, %46
  %72 = phi %"class.v8::Local"* [ %58, %46 ], [ %70, %67 ]
  store i64 %65, i64* %20, align 8
  store i64 %56, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %73 = icmp eq %"class.v8::Local"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.v8::Local"* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %10, %71, %74
  %77 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %3, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %77, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_116V8ArgumentParser11SetCallbackEN2v85LocalINS2_8FunctionEEE(%"class.extensions::(anonymous namespace)::V8ArgumentParser"*, %"class.v8::Function"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2
  %4 = ptrtoint %"class.v8::Function"* %1 to i64
  %5 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::Local"*, %"class.v8::Local"** %5, align 8
  %7 = getelementptr inbounds %"class.extensions::(anonymous namespace)::V8ArgumentParser", %"class.extensions::(anonymous namespace)::V8ArgumentParser"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8::Local"*, %"class.v8::Local"** %7, align 8
  %9 = icmp ult %"class.v8::Local"* %6, %8
  %10 = ptrtoint %"class.v8::Local"* %8 to i64
  br i1 %9, label %11, label %16

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::Local"* %6 to i64*
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %6, i64 1
  %14 = ptrtoint %"class.v8::Local"* %13 to i64
  %15 = bitcast %"class.v8::Local"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::Local"* %6 to i64
  %18 = bitcast %"class.v8::Local"** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #13
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::Local"** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #12
  %44 = bitcast i8* %43 to %"class.v8::Local"*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.v8::Local"* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %47, i64 %22
  %49 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %47, i64 %46
  %50 = ptrtoint %"class.v8::Local"* %49 to i64
  %51 = bitcast %"class.v8::Local"* %48 to i64*
  store i64 %4, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %48, i64 1
  %53 = ptrtoint %"class.v8::Local"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %55 = load %"class.v8::Local"*, %"class.v8::Local"** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.v8::Local"* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %48, i64 %60
  %62 = ptrtoint %"class.v8::Local"* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.v8::Local"* %61 to i8*
  %66 = bitcast %"class.v8::Local"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #11
  %67 = load %"class.v8::Local"*, %"class.v8::Local"** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.v8::Local"* [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.v8::Local"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.v8::Local"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_114ArgumentParser18ParseArgumentsImplEb(%"class.extensions::(anonymous namespace)::ArgumentParser"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 3
  %9 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %11 = bitcast %"class.v8::Local"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 2
  %17 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %17, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::unique_ptr.46"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.44"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = icmp ugt i64 %15, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  call void @_ZN10extensions10api_errors19NoMatchingSignatureEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %27 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 7
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %32, %25
  %36 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %26, i64 24, i1 false) #11
  br label %221

37:                                               ; preds = %2
  br i1 %1, label %38, label %42

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 5
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br label %42

42:                                               ; preds = %38, %37
  %43 = phi i1 [ false, %37 ], [ %41, %38 ]
  %44 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  %49 = load i64, i64* %19, align 8
  %50 = load i64, i64* %21, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #11
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %42
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %57) #13
  unreachable

58:                                               ; preds = %54
  %59 = tail call i8* @_Znwm(i64 %51) #12
  %60 = bitcast i8* %59 to %"class.v8::Local"*
  %61 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %59, i8** %61, align 8
  %62 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %60, i64 %52
  store %"class.v8::Local"* %62, %"class.v8::Local"** %47, align 8
  %63 = bitcast %"class.v8::Local"** %46 to i64*
  %64 = ptrtoint i8* %59 to i64
  %65 = add nsw i64 %52, -1
  %66 = getelementptr %"class.v8::Local", %"class.v8::Local"* %60, i64 %65, i32 0
  %67 = ptrtoint %"class.v8::Value"** %66 to i64
  %68 = sub i64 8, %64
  %69 = add i64 %68, %67
  %70 = and i64 %69, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 %70, i1 false) #11
  %71 = ptrtoint %"class.v8::Local"* %62 to i64
  store i64 %71, i64* %63, align 8
  br label %72

72:                                               ; preds = %42, %58
  %73 = load i64, i64* %13, align 8
  %74 = load i64, i64* %11, align 8
  %75 = sub i64 %74, %73
  %76 = ashr exact i64 %75, 3
  %77 = load i64, i64* %21, align 8
  %78 = load i64, i64* %19, align 8
  %79 = sub i64 %78, %77
  %80 = ashr exact i64 %79, 3
  %81 = inttoptr i64 %73 to %"class.v8::Local"*
  %82 = inttoptr i64 %77 to %"class.std::__1::unique_ptr.46"*
  %83 = call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_114ArgumentParser16ResolveArgumentsEN4base4spanIKN2v85LocalINS4_5ValueEEELm18446744073709551615EEENS3_IKNSt3__110unique_ptrINS_12ArgumentSpecENSA_14default_deleteISC_EEEELm18446744073709551615EEEPNSA_6vectorIS7_NSA_9allocatorIS7_EEEEmb(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 %76, %"class.v8::Local"* %81, i64 %80, %"class.std::__1::unique_ptr.46"* %82, %"class.std::__1::vector"* nonnull %6, i64 0, i1 zeroext %43)
  br i1 %83, label %96, label %84

84:                                               ; preds = %72
  %85 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #11
  call void @_ZN10extensions10api_errors19NoMatchingSignatureEv(%"class.std::__1::basic_string"* nonnull sret %7) #11
  %86 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 7
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %91, %84
  %95 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* nonnull align 8 %85, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #11
  br label %213

96:                                               ; preds = %72
  %97 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %16, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %97, i64 0, i32 0, i32 1
  %99 = bitcast %"class.std::__1::unique_ptr.46"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::vector.44"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = ashr exact i64 %103, 3
  %105 = zext i1 %1 to i64
  %106 = sub nsw i64 %104, %105
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %163, label %108

108:                                              ; preds = %96
  %109 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 4
  %111 = bitcast %"class.extensions::(anonymous namespace)::ArgumentParser"* %0 to %"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)***
  %112 = bitcast %"class.extensions::(anonymous namespace)::ArgumentParser"* %0 to %"class.v8::Local"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)***
  %113 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 8
  %114 = bitcast %"class.extensions::(anonymous namespace)::ArgumentParser"* %0 to void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)***
  br label %115

115:                                              ; preds = %161, %108
  %116 = phi %"class.std::__1::vector.44"* [ %97, %108 ], [ %162, %161 ]
  %117 = phi i64 [ 0, %108 ], [ %159, %161 ]
  %118 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %116, i64 0, i32 0, i32 0
  %119 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %119, i64 %117, i32 0, i32 0, i32 0
  %121 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %120, align 8
  %122 = load %"class.v8::Local"*, %"class.v8::Local"** %45, align 8
  %123 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %122, i64 %117, i32 0
  %124 = load %"class.v8::Value"*, %"class.v8::Value"** %123, align 8
  %125 = icmp eq %"class.v8::Value"* %124, null
  br i1 %125, label %126, label %129

126:                                              ; preds = %115
  %127 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)**, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*** %114, align 8
  %128 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %127, align 8
  call void %128(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0) #11
  br label %158

129:                                              ; preds = %115
  %130 = load %"class.v8::Context"*, %"class.v8::Context"** %109, align 8
  %131 = load %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APITypeReferenceMap"** %110, align 8
  %132 = load %"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)**, %"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*** %111, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, %"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %132, i64 2
  %134 = load %"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, %"class.std::__1::unique_ptr"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %133, align 8
  %135 = call %"class.std::__1::unique_ptr"* %134(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0) #11
  %136 = load %"class.v8::Local"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)**, %"class.v8::Local"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*** %112, align 8
  %137 = getelementptr inbounds %"class.v8::Local"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, %"class.v8::Local"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %136, i64 3
  %138 = load %"class.v8::Local"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, %"class.v8::Local"* (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %137, align 8
  %139 = call %"class.v8::Local"* %138(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0) #11
  %140 = call zeroext i1 @_ZNK10extensions12ArgumentSpec13ParseArgumentEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEERKNS_19APITypeReferenceMapEPNSt3__110unique_ptrIN4base5ValueENSA_14default_deleteISD_EEEEPS6_PNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE(%"class.extensions::ArgumentSpec"* %121, %"class.v8::Context"* %130, %"class.v8::Value"* nonnull %124, %"class.extensions::APITypeReferenceMap"* %131, %"class.std::__1::unique_ptr"* %135, %"class.v8::Local"* %139, %"class.std::__1::basic_string"* %113) #11
  br i1 %140, label %152, label %141

141:                                              ; preds = %129
  %142 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #11
  %143 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %121, i64 0, i32 0
  call void @_ZN10extensions10api_errors13ArgumentErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %143, %"class.std::__1::basic_string"* dereferenceable(24) %113) #11
  %144 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 7
  %145 = bitcast %"class.std::__1::basic_string"* %144 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #12
  br label %156

152:                                              ; preds = %129
  %153 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)**, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*** %114, align 8
  %154 = getelementptr inbounds void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %153, i64 4
  %155 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %154, align 8
  call void %155(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0) #11
  br label %158

156:                                              ; preds = %141, %149
  %157 = bitcast %"class.std::__1::basic_string"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 8 %142, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #11
  br label %213

158:                                              ; preds = %126, %152
  %159 = add nuw i64 %117, 1
  %160 = icmp eq i64 %159, %106
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %16, align 8
  br label %115

163:                                              ; preds = %158, %96
  br i1 %1, label %164, label %213

164:                                              ; preds = %163
  %165 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %16, align 8
  %166 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %165, i64 0, i32 0, i32 1
  %167 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %167, i64 -1, i32 0, i32 0, i32 0
  %169 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %168, align 8
  %170 = load %"class.v8::Local"*, %"class.v8::Local"** %46, align 8
  %171 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %170, i64 -1, i32 0
  %172 = load %"class.v8::Value"*, %"class.v8::Value"** %171, align 8
  %173 = icmp eq %"class.v8::Value"* %172, null
  br i1 %173, label %174, label %186

174:                                              ; preds = %164
  %175 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 5
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 6
  store i32 2, i32* %179, align 4
  br label %213

180:                                              ; preds = %174
  %181 = bitcast %"class.extensions::(anonymous namespace)::ArgumentParser"* %0 to void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)***
  %182 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)**, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %182, i64 1
  %184 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)*, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*)** %183, align 8
  call void %184(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0) #11
  %185 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 6
  store i32 0, i32* %185, align 4
  br label %213

186:                                              ; preds = %164
  %187 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 1, i32 0
  %188 = load %"class.v8::Context"*, %"class.v8::Context"** %187, align 8
  %189 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 4
  %190 = load %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APITypeReferenceMap"** %189, align 8
  %191 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 8
  %192 = call zeroext i1 @_ZNK10extensions12ArgumentSpec13ParseArgumentEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEERKNS_19APITypeReferenceMapEPNSt3__110unique_ptrIN4base5ValueENSA_14default_deleteISD_EEEEPS6_PNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE(%"class.extensions::ArgumentSpec"* %169, %"class.v8::Context"* %188, %"class.v8::Value"* nonnull %172, %"class.extensions::APITypeReferenceMap"* %190, %"class.std::__1::unique_ptr"* null, %"class.v8::Local"* null, %"class.std::__1::basic_string"* %191) #11
  br i1 %192, label %204, label %193

193:                                              ; preds = %186
  %194 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #11
  %195 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %169, i64 0, i32 0
  call void @_ZN10extensions10api_errors13ArgumentErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %195, %"class.std::__1::basic_string"* dereferenceable(24) %191) #11
  %196 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 7
  %197 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %211

201:                                              ; preds = %193
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #12
  br label %211

204:                                              ; preds = %186
  %205 = bitcast %"class.v8::Value"* %172 to %"class.v8::Function"*
  %206 = bitcast %"class.extensions::(anonymous namespace)::ArgumentParser"* %0 to void (%"class.extensions::(anonymous namespace)::ArgumentParser"*, %"class.v8::Function"*)***
  %207 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*, %"class.v8::Function"*)**, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*, %"class.v8::Function"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.extensions::(anonymous namespace)::ArgumentParser"*, %"class.v8::Function"*)*, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*, %"class.v8::Function"*)** %207, i64 5
  %209 = load void (%"class.extensions::(anonymous namespace)::ArgumentParser"*, %"class.v8::Function"*)*, void (%"class.extensions::(anonymous namespace)::ArgumentParser"*, %"class.v8::Function"*)** %208, align 8
  call void %209(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0, %"class.v8::Function"* nonnull %205) #11
  %210 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 6
  store i32 1, i32* %210, align 4
  br label %213

211:                                              ; preds = %193, %201
  %212 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* nonnull align 8 %194, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #11
  br label %213

213:                                              ; preds = %178, %180, %204, %163, %211, %156, %94
  %214 = phi i1 [ false, %94 ], [ false, %156 ], [ false, %211 ], [ true, %163 ], [ true, %204 ], [ true, %180 ], [ true, %178 ]
  %215 = load %"class.v8::Local"*, %"class.v8::Local"** %45, align 8
  %216 = icmp eq %"class.v8::Local"* %215, null
  br i1 %216, label %221, label %217

217:                                              ; preds = %213
  %218 = ptrtoint %"class.v8::Local"* %215 to i64
  %219 = bitcast %"class.v8::Local"** %46 to i64*
  store i64 %218, i64* %219, align 8
  %220 = bitcast %"class.v8::Local"* %215 to i8*
  call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %217, %213, %35
  %222 = phi i8* [ %26, %35 ], [ %44, %213 ], [ %44, %217 ]
  %223 = phi i1 [ false, %35 ], [ %214, %213 ], [ %214, %217 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #11
  ret i1 %223
}

declare void @_ZN10extensions10api_errors19NoMatchingSignatureEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_114ArgumentParser16ResolveArgumentsEN4base4spanIKN2v85LocalINS4_5ValueEEELm18446744073709551615EEENS3_IKNSt3__110unique_ptrINS_12ArgumentSpecENSA_14default_deleteISC_EEEELm18446744073709551615EEEPNSA_6vectorIS7_NSA_9allocatorIS7_EEEEmb(%"class.extensions::(anonymous namespace)::ArgumentParser"*, i64, %"class.v8::Local"*, i64, %"class.std::__1::unique_ptr.46"*, %"class.std::__1::vector"*, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = icmp eq i64 %1, 0
  %15 = or i64 %3, %1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %126, label %17

17:                                               ; preds = %8
  %18 = icmp ugt i64 %1, %3
  br i1 %18, label %126, label %19

19:                                               ; preds = %17
  br i1 %14, label %90, label %20

20:                                               ; preds = %19
  %21 = icmp ne i64 %3, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %20, %22
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %26, align 8
  %28 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %27, i64 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.v8::Local"* %2 to i64**
  %33 = load i64*, i64** %32, align 8
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 3
  %36 = icmp eq i64 %35, 1
  br i1 %36, label %37, label %58

37:                                               ; preds = %31
  %38 = add i64 %34, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = and i64 %34, -4294967296
  %42 = zext i32 %40 to i64
  %43 = or i64 %41, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 67
  br i1 %47, label %48, label %58

48:                                               ; preds = %37
  %49 = add i64 %34, 23
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = ashr i32 %51, 1
  switch i32 %52, label %58 [
    i32 5, label %53
    i32 3, label %53
  ]

53:                                               ; preds = %48, %48
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %55 = load %"class.v8::Local"*, %"class.v8::Local"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %55, i64 %6
  %57 = bitcast %"class.v8::Local"* %56 to i64*
  store i64 0, i64* %57, align 8
  br label %78

58:                                               ; preds = %25, %48, %37, %31
  br i1 %21, label %63, label %59

59:                                               ; preds = %58
  %60 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #11
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  %62 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %26, align 8
  br label %63

63:                                               ; preds = %59, %58
  %64 = phi %"class.extensions::ArgumentSpec"* [ %62, %59 ], [ %27, %58 ]
  %65 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %2, i64 0, i32 0
  %66 = load %"class.v8::Value"*, %"class.v8::Value"** %65, align 8
  %67 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 4
  %68 = load %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APITypeReferenceMap"** %67, align 8
  %69 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ArgumentParser", %"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 0, i32 7
  %70 = call zeroext i1 @_ZNK10extensions12ArgumentSpec13IsCorrectTypeEN2v85LocalINS1_5ValueEEERKNS_19APITypeReferenceMapEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE(%"class.extensions::ArgumentSpec"* %64, %"class.v8::Value"* %66, %"class.extensions::APITypeReferenceMap"* %68, %"class.std::__1::basic_string"* %69) #11
  br i1 %70, label %71, label %90

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %73 = load %"class.v8::Local"*, %"class.v8::Local"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %73, i64 %6
  %75 = bitcast %"class.v8::Local"* %2 to i64*
  %76 = bitcast %"class.v8::Local"* %74 to i64*
  %77 = load i64, i64* %75, align 8
  store i64 %77, i64* %76, align 8
  br label %78

78:                                               ; preds = %53, %71
  %79 = add i64 %1, -1
  %80 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %2, i64 1
  %81 = icmp eq i64 %3, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)) #11
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  br label %85

85:                                               ; preds = %78, %82
  %86 = add i64 %3, -1
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %4, i64 1
  %88 = add i64 %6, 1
  %89 = call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_114ArgumentParser16ResolveArgumentsEN4base4spanIKN2v85LocalINS4_5ValueEEELm18446744073709551615EEENS3_IKNSt3__110unique_ptrINS_12ArgumentSpecENSA_14default_deleteISC_EEEELm18446744073709551615EEEPNSA_6vectorIS7_NSA_9allocatorIS7_EEEEmb(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 %79, %"class.v8::Local"* %80, i64 %86, %"class.std::__1::unique_ptr.46"* %87, %"class.std::__1::vector"* %5, i64 %88, i1 zeroext %7)
  br i1 %89, label %126, label %90

90:                                               ; preds = %63, %85, %19
  %91 = icmp eq i64 %3, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %90
  %93 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #11
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  br label %95

95:                                               ; preds = %90, %92
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %4, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %96, align 8
  %98 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %97, i64 0, i32 3
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %103 = load %"class.v8::Local"*, %"class.v8::Local"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %103, i64 %6
  %105 = bitcast %"class.v8::Local"* %104 to i64*
  store i64 0, i64* %105, align 8
  br i1 %91, label %106, label %109

106:                                              ; preds = %101
  %107 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)) #11
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #11
  br label %109

109:                                              ; preds = %101, %106
  %110 = add i64 %3, -1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %4, i64 1
  %112 = add i64 %6, 1
  %113 = call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_114ArgumentParser16ResolveArgumentsEN4base4spanIKN2v85LocalINS4_5ValueEEELm18446744073709551615EEENS3_IKNSt3__110unique_ptrINS_12ArgumentSpecENSA_14default_deleteISC_EEEELm18446744073709551615EEEPNSA_6vectorIS7_NSA_9allocatorIS7_EEEEmb(%"class.extensions::(anonymous namespace)::ArgumentParser"* %0, i64 %1, %"class.v8::Local"* %2, i64 %110, %"class.std::__1::unique_ptr.46"* %111, %"class.std::__1::vector"* %5, i64 %112, i1 zeroext %7)
  %114 = xor i1 %7, true
  %115 = or i1 %113, %114
  br i1 %115, label %126, label %119

116:                                              ; preds = %95
  %117 = icmp eq i64 %3, 1
  %118 = and i1 %117, %7
  br i1 %118, label %121, label %126

119:                                              ; preds = %109
  %120 = icmp eq i64 %3, 1
  br i1 %120, label %121, label %126

121:                                              ; preds = %116, %119
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %123 = load %"class.v8::Local"*, %"class.v8::Local"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %123, i64 %6
  %125 = bitcast %"class.v8::Local"* %124 to i64*
  store i64 0, i64* %125, align 8
  br label %126

126:                                              ; preds = %8, %109, %116, %119, %85, %17, %121
  %127 = phi i1 [ true, %121 ], [ false, %17 ], [ true, %85 ], [ %113, %109 ], [ false, %119 ], [ false, %116 ], [ true, %8 ]
  ret i1 %127
}

declare zeroext i1 @_ZNK10extensions12ArgumentSpec13IsCorrectTypeEN2v85LocalINS1_5ValueEEERKNS_19APITypeReferenceMapEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE(%"class.extensions::ArgumentSpec"*, %"class.v8::Value"*, %"class.extensions::APITypeReferenceMap"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser7AddNullEv(%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::ListValue"*, %"class.base::ListValue"** %2, align 8
  %4 = tail call i8* @_Znwm(i64 32) #12
  %5 = bitcast i8* %4 to %"class.base::Value"*
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %5) #11
  tail call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* %3, %"class.base::Value"* nonnull %5) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser15AddNullCallbackEv(%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.std::__1::unique_ptr"* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser13GetBaseBufferEv(%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* readnone) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %0, i64 0, i32 2
  ret %"class.std::__1::unique_ptr"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.v8::Local"* @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser11GetV8BufferEv(%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* nocapture readnone) unnamed_addr #9 align 2 {
  ret %"class.v8::Local"* null
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser17AddParsedArgumentEv(%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.base::ListValue"*, %"class.base::ListValue"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %4, align 8
  tail call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* %3, %"class.base::Value"* %5) #11
  %6 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %4, align 8
  %7 = icmp eq %"class.base::Value"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #11
  %9 = bitcast %"class.base::Value"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser11SetCallbackEN2v85LocalINS2_8FunctionEEE(%"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* nocapture, %"class.v8::Function"*) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.extensions::(anonymous namespace)::BaseValueArgumentParser", %"class.extensions::(anonymous namespace)::BaseValueArgumentParser"* %0, i64 0, i32 3, i32 0
  store %"class.v8::Function"* %1, %"class.v8::Function"** %3, align 8
  ret void
}

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.37"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.37"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.base::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %35
  %39 = ptrtoint %"class.base::Value"* %38 to i64
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* dereferenceable(32) %1) #11
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 1
  %41 = ptrtoint %"class.base::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %45 = icmp eq %"class.base::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %51, %"class.base::Value"* dereferenceable(32) %52) #11
  %53 = icmp eq %"class.base::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::Value"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::Value"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::Value"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::Value"*
  %63 = icmp eq %"class.base::Value"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::Value"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %65, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %66) #11
  %67 = icmp eq %"class.base::Value"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base9ListValueC1EONSt3__16vectorINS_5ValueENS1_9allocatorIS3_EEEE(%"class.base::ListValue"*, %"class.std::__1::vector.37"* dereferenceable(24)) unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.97"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.97"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.97"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN10extensions12_GLOBAL__N_124ValueListToArgumentSpecsERKN4base5ValueEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN10extensions12_GLOBAL__N_124ValueListToArgumentSpecsERKN4base5ValueEPS3_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN10extensions12_GLOBAL__N_116V8ArgumentParser14ParseArgumentsEb: argument 0"}
!8 = distinct !{!8, !"_ZN10extensions12_GLOBAL__N_116V8ArgumentParser14ParseArgumentsEb"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN10extensions12_GLOBAL__N_114ArgumentParser9TakeErrorEv: argument 0"}
!11 = distinct !{!11, !"_ZN10extensions12_GLOBAL__N_114ArgumentParser9TakeErrorEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser14ParseArgumentsEb: argument 0"}
!14 = distinct !{!14, !"_ZN10extensions12_GLOBAL__N_123BaseValueArgumentParser14ParseArgumentsEb"}
!15 = !{!16, !13}
!16 = distinct !{!16, !17, !"_ZN10extensions12_GLOBAL__N_114ArgumentParser9TakeErrorEv: argument 0"}
!17 = distinct !{!17, !"_ZN10extensions12_GLOBAL__N_114ArgumentParser9TakeErrorEv"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
