; ModuleID = '../../v8/src/profiler/strings-storage.cc'
source_filename = "../../v8/src/profiler/strings-storage.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::StringsStorage" = type { %"class.v8::base::CustomMatcherTemplateHashMapImpl", %"class.v8::base::Mutex" }
%"class.v8::base::CustomMatcherTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::HashEqualityThenKeyMatcher", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::HashEqualityThenKeyMatcher" = type { i1 (i8*, i8*)* }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.anon.1149 = type { i8** }
%class.anon = type { i8 }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.12", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.661", %"class.std::__1::unique_ptr.687", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.697", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.836", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.849", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.859", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.870", %"struct.std::__1::atomic.168", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.945", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.988"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.996", i32, i8, i8, i32, i32, %"class.std::__1::vector.1002", %"class.std::__1::vector.1002", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1009", i64, %"class.std::__1::unordered_map.1010", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.557", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.176", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1066", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1104", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1138", %"class.std::__1::vector.1142", %"class.std::__1::vector.1142", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.7", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.35", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.35", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.35", i64, i64, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.45", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.177", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.35", i64, i8, %"struct.std::__1::atomic.35", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.181", %"class.std::__1::vector.181", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.490", %"class.std::__1::shared_ptr.496", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.519", %"class.std::__1::unique_ptr.545", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.551", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.564", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.346", i8, [7 x i8], %"class.std::__1::unordered_map.570", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.570", %"class.std::__1::unordered_map.620", %"class.std::__1::vector.648", i8, %"class.std::__1::unique_ptr.655", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.40", %"struct.std::__1::atomic.40", %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i64 }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.49" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.119" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.35"*, %"class.std::__1::unique_ptr.113" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.35", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.54", %"class.std::__1::vector.54", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.56" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.61" }
%"class.std::__1::__hash_table.61" = type <{ %"class.std::__1::unique_ptr.62", %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.79", [4 x i8] }>
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64", %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base.65"** }
%"struct.std::__1::__hash_node_base.65" = type { %"struct.std::__1::__hash_node_base.65"* }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.std::__1::__bucket_list_deallocator.67" }
%"class.std::__1::__bucket_list_deallocator.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::__hash_node_base.65" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.40", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.102", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.35"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.40", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.40", %"struct.std::__1::atomic.84", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__cxx_atomic_impl.86" }
%"struct.std::__1::__cxx_atomic_impl.86" = type { %"struct.std::__1::__cxx_atomic_base_impl.87" }
%"struct.std::__1::__cxx_atomic_base_impl.87" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.90" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.106", i8, [7 x i8] }>
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { i64*, i64*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.35", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.std::__1::pair.121"*, %"struct.std::__1::pair.121"*, %"class.std::__1::__compressed_pair.122" }
%"struct.std::__1::pair.121" = type { i32, i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::pair.121"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.35", i64, %"struct.std::__1::atomic.35" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.35", i32, %"struct.std::__1::atomic.35", %"class.v8::base::Mutex", %"struct.std::__1::atomic.35" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.127" }
%"class.std::__1::unordered_map.127" = type { %"class.std::__1::__hash_table.128" }
%"class.std::__1::__hash_table.128" = type <{ %"class.std::__1::unique_ptr.129", %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.149", [4 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131", %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::__hash_node_base.132"** }
%"struct.std::__1::__hash_node_base.132" = type { %"struct.std::__1::__hash_node_base.132"* }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.std::__1::__bucket_list_deallocator.134" }
%"class.std::__1::__bucket_list_deallocator.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base.132" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.155", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.157" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1071", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1075", %"class.std::__1::unique_ptr.1081", %"class.std::__1::unique_ptr.490", %"class.std::__1::vector.1087", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1071" = type { %"struct.std::__1::__atomic_base.1072" }
%"struct.std::__1::__atomic_base.1072" = type { %"struct.std::__1::__cxx_atomic_impl.1073" }
%"struct.std::__1::__cxx_atomic_impl.1073" = type { %"struct.std::__1::__cxx_atomic_base_impl.1074" }
%"struct.std::__1::__cxx_atomic_base_impl.1074" = type { i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.829" }
%"class.std::__1::vector.829" = type { %"class.std::__1::__vector_base.830" }
%"class.std::__1::__vector_base.830" = type { i64**, i64**, %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { i64** }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.829", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1087" = type { %"class.std::__1::__vector_base.1088" }
%"class.std::__1::__vector_base.1088" = type { %"struct.std::__1::pair.1089"*, %"struct.std::__1::pair.1089"*, %"class.std::__1::__compressed_pair.1090" }
%"struct.std::__1::pair.1089" = type opaque
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"struct.std::__1::pair.1089"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.168", %"struct.std::__1::atomic.172", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.35", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.176" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i64 }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.183" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.296", %"class.std::__1::vector.296", %"class.std::__1::vector.296", %"class.std::__1::vector.303", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.197", %"class.std::__1::vector.198", %"class.std::__1::vector.205", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.197" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.200" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.std::__1::unique_ptr.207"*, %"class.std::__1::unique_ptr.207"*, %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::unique_ptr.207" = type opaque
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.std::__1::unique_ptr.207"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.213", %"class.v8::internal::Worklist.215", %"class.v8::internal::Worklist.215", %"class.v8::internal::Worklist.215", %"class.v8::internal::Worklist.217", %"class.v8::internal::Worklist.219", %"class.v8::internal::Worklist.221", %"class.v8::internal::Worklist.223", %"class.v8::internal::Worklist.225", %"class.v8::internal::Worklist.227" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.215" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.217" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.219" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.221" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.223" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.225" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"class.v8::internal::Worklist.227" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.35" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.229", i8, i64 }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.245" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.197"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.245" = type { %"class.std::__1::__hash_table.246" }
%"class.std::__1::__hash_table.246" = type <{ %"class.std::__1::unique_ptr.247", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.265", [4 x i8] }>
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.250"** }
%"struct.std::__1::__hash_node_base.250" = type { %"struct.std::__1::__hash_node_base.250"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator.252" }
%"class.std::__1::__bucket_list_deallocator.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.250" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.272" }
%"class.std::__1::unordered_map.272" = type { %"class.std::__1::__hash_table.273" }
%"class.std::__1::__hash_table.273" = type <{ %"class.std::__1::unique_ptr.274", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.292", [4 x i8] }>
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276", %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base.277"** }
%"struct.std::__1::__hash_node_base.277" = type { %"struct.std::__1::__hash_node_base.277"* }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.std::__1::__bucket_list_deallocator.279" }
%"class.std::__1::__bucket_list_deallocator.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base.277" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"struct.std::__1::pair.305"*, %"struct.std::__1::pair.305"*, %"class.std::__1::__compressed_pair.306" }
%"struct.std::__1::pair.305" = type opaque
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::pair.305"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.311", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.296"], [3 x %"class.std::__1::vector.296"], i8, %"struct.std::__1::atomic.168", [6 x i8], %"class.std::__1::vector.296", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.321"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.296", %"class.std::__1::vector.296", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.321" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.346", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.339"], %"class.std::__1::unique_ptr.311" }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.378", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.382", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.387" }
%"struct.std::__1::atomic.378" = type { %"struct.std::__1::__atomic_base.379" }
%"struct.std::__1::__atomic_base.379" = type { %"struct.std::__1::__cxx_atomic_impl.380" }
%"struct.std::__1::__cxx_atomic_impl.380" = type { %"struct.std::__1::__cxx_atomic_base_impl.381" }
%"struct.std::__1::__cxx_atomic_base_impl.381" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.382" = type { %"struct.std::__1::__atomic_base.383" }
%"struct.std::__1::__atomic_base.383" = type { %"struct.std::__1::__cxx_atomic_impl.384" }
%"struct.std::__1::__cxx_atomic_impl.384" = type { %"struct.std::__1::__cxx_atomic_base_impl.385" }
%"struct.std::__1::__cxx_atomic_base_impl.385" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.387" = type { %"class.std::__1::__hash_table.388" }
%"class.std::__1::__hash_table.388" = type <{ %"class.std::__1::unique_ptr.389", %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.407", [4 x i8] }>
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391", %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.392"** }
%"struct.std::__1::__hash_node_base.392" = type { %"struct.std::__1::__hash_node_base.392"* }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.std::__1::__bucket_list_deallocator.394" }
%"class.std::__1::__bucket_list_deallocator.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base.392" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.311", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.168", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.417", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.417" = type { %"class.std::__1::__hash_table.418" }
%"class.std::__1::__hash_table.418" = type <{ %"class.std::__1::unique_ptr.419", %"class.std::__1::__compressed_pair.429", %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.437", [4 x i8] }>
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421", %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.422"** }
%"struct.std::__1::__hash_node_base.422" = type { %"struct.std::__1::__hash_node_base.422"* }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.std::__1::__bucket_list_deallocator.424" }
%"class.std::__1::__bucket_list_deallocator.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.std::__1::__hash_node_base.422" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.453" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.496" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.515", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.497", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.500", %"class.std::__1::set.508" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.500" = type { %"class.std::__1::__tree.501" }
%"class.std::__1::__tree.501" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::set.508" = type { %"class.std::__1::__tree.509" }
%"class.std::__1::__tree.509" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::atomic.515" = type { %"struct.std::__1::__atomic_base.516" }
%"struct.std::__1::__atomic_base.516" = type { %"struct.std::__1::__cxx_atomic_impl.517" }
%"struct.std::__1::__cxx_atomic_impl.517" = type { %"struct.std::__1::__cxx_atomic_base_impl.518" }
%"struct.std::__1::__cxx_atomic_base_impl.518" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.519" = type { %"class.std::__1::__hash_table.520" }
%"class.std::__1::__hash_table.520" = type <{ %"class.std::__1::unique_ptr.521", %"class.std::__1::__compressed_pair.531", %"class.std::__1::__compressed_pair.536", %"class.std::__1::__compressed_pair.539", [4 x i8] }>
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523", %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.524"** }
%"struct.std::__1::__hash_node_base.524" = type { %"struct.std::__1::__hash_node_base.524"* }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.std::__1::__bucket_list_deallocator.526" }
%"class.std::__1::__bucket_list_deallocator.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.std::__1::__hash_node_base.524" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.557", %"class.std::__1::vector.557" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.346" = type { %"class.std::__1::__hash_table.347" }
%"class.std::__1::__hash_table.347" = type <{ %"class.std::__1::unique_ptr.348", %"class.std::__1::__compressed_pair.358", %"class.std::__1::__compressed_pair.363", %"class.std::__1::__compressed_pair.367", [4 x i8] }>
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350", %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::__hash_node_base.351"** }
%"struct.std::__1::__hash_node_base.351" = type { %"struct.std::__1::__hash_node_base.351"* }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::__bucket_list_deallocator.353" }
%"class.std::__1::__bucket_list_deallocator.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.351" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.570" = type { %"class.std::__1::__hash_table.571" }
%"class.std::__1::__hash_table.571" = type <{ %"class.std::__1::unique_ptr.572", %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.587", %"class.std::__1::__compressed_pair.590", [4 x i8] }>
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574", %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base.575"** }
%"struct.std::__1::__hash_node_base.575" = type { %"struct.std::__1::__hash_node_base.575"* }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.std::__1::__bucket_list_deallocator.577" }
%"class.std::__1::__bucket_list_deallocator.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.std::__1::__hash_node_base.575" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.620" = type { %"class.std::__1::__hash_table.621" }
%"class.std::__1::__hash_table.621" = type <{ %"class.std::__1::unique_ptr.622", %"class.std::__1::__compressed_pair.632", %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.642", [4 x i8] }>
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624", %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.625"** }
%"struct.std::__1::__hash_node_base.625" = type { %"struct.std::__1::__hash_node_base.625"* }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.std::__1::__bucket_list_deallocator.627" }
%"class.std::__1::__bucket_list_deallocator.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::__hash_node_base.625" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.648" = type { %"class.std::__1::__vector_base.649" }
%"class.std::__1::__vector_base.649" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.650" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.557" }
%"class.std::__1::shared_ptr.661" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.155", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.662", %"class.std::__1::unique_ptr.681" }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.665" }
%"class.std::__1::vector.665" = type { %"class.std::__1::__vector_base.666" }
%"class.std::__1::__vector_base.666" = type { %"class.std::__1::unique_ptr.667"*, %"class.std::__1::unique_ptr.667"*, %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.std::__1::unique_ptr.667"* }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.690", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.690" = type { %"struct.std::__1::__atomic_base.691" }
%"struct.std::__1::__atomic_base.691" = type { %"struct.std::__1::__cxx_atomic_impl.692" }
%"struct.std::__1::__cxx_atomic_impl.692" = type { %"struct.std::__1::__cxx_atomic_base_impl.693" }
%"struct.std::__1::__cxx_atomic_base_impl.693" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.697" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.698", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.698" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.699", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.699" = type { %"class.std::__1::__vector_base.700" }
%"class.std::__1::__vector_base.700" = type { %"class.std::__1::unique_ptr.701"*, %"class.std::__1::unique_ptr.701"*, %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::unique_ptr.701" = type opaque
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::unique_ptr.701"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.713", %"struct.std::__1::atomic.168", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::unique_ptr.731", %"class.std::__1::unique_ptr.737", %"class.std::__1::unique_ptr.743", %"class.std::__1::set.749", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.749" = type { %"class.std::__1::__tree.750" }
%"class.std::__1::__tree.750" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.751", %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.758" }
%"class.v8::internal::TaggedImpl.758" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.757" }
%"class.v8::internal::TaggedImpl.757" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.765", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.771", %"class.v8::internal::DetachableVector.772", %"class.v8::internal::DetachableVector.771", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.772" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.771" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.497" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.773", %"class.std::__1::vector.779", %"class.std::__1::unique_ptr.786", %"class.std::__1::vector.793", %"class.std::__1::unique_ptr.800", i64, %"class.std::__1::vector.806", %"class.std::__1::vector.814", %"class.std::__1::vector.822", i8, i8, i32 }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.781" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.v8::internal::GlobalHandles::NodeSpace.789"* }
%"class.v8::internal::GlobalHandles::NodeSpace.789" = type opaque
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.795" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.806" = type { %"class.std::__1::__vector_base.807" }
%"class.std::__1::__vector_base.807" = type { %"struct.std::__1::pair.808"*, %"struct.std::__1::pair.808"*, %"class.std::__1::__compressed_pair.809" }
%"struct.std::__1::pair.808" = type opaque
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"struct.std::__1::pair.808"* }
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { %"struct.std::__1::pair.816"*, %"struct.std::__1::pair.816"*, %"class.std::__1::__compressed_pair.817" }
%"struct.std::__1::pair.816" = type opaque
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"struct.std::__1::pair.816"* }
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.824" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.829", %"class.std::__1::vector.836" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.843" }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { i32*, i32*, %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.849" = type { %"struct.std::__1::__atomic_base.850" }
%"struct.std::__1::__atomic_base.850" = type { %"struct.std::__1::__cxx_atomic_impl.851" }
%"struct.std::__1::__cxx_atomic_impl.851" = type { %"struct.std::__1::__cxx_atomic_base_impl.852" }
%"struct.std::__1::__cxx_atomic_base_impl.852" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.859" = type { %"struct.std::__1::__atomic_base.860" }
%"struct.std::__1::__atomic_base.860" = type { %"struct.std::__1::__cxx_atomic_impl.861" }
%"struct.std::__1::__cxx_atomic_impl.861" = type { %"struct.std::__1::__cxx_atomic_base_impl.862" }
%"struct.std::__1::__cxx_atomic_base_impl.862" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.866 }
%union.anon.866 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.870" = type { %"class.std::__1::__hash_table.871" }
%"class.std::__1::__hash_table.871" = type <{ %"class.std::__1::unique_ptr.872", %"class.std::__1::__compressed_pair.882", %"class.std::__1::__compressed_pair.887", %"class.std::__1::__compressed_pair.890", [4 x i8] }>
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874", %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.std::__1::__hash_node_base.875"** }
%"struct.std::__1::__hash_node_base.875" = type { %"struct.std::__1::__hash_node_base.875"* }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.std::__1::__bucket_list_deallocator.877" }
%"class.std::__1::__bucket_list_deallocator.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"struct.std::__1::__hash_node_base.875" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.896", %"class.v8::internal::Handle.902", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.903", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.902" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.903" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.904", %"class.std::__1::vector.910", %"class.std::__1::unique_ptr.918", %"class.std::__1::unique_ptr.924", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.930", %"class.std::__1::vector.936", %"struct.std::__1::pair.944" }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.std::__1::unique_ptr.912"*, %"class.std::__1::unique_ptr.912"*, %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::unique_ptr.912" = type opaque
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.std::__1::unique_ptr.912"* }
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.v8::internal::StringsStorage"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { %"struct.std::__1::pair.938"*, %"struct.std::__1::pair.938"*, %"class.std::__1::__compressed_pair.939" }
%"struct.std::__1::pair.938" = type opaque
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::pair.938"* }
%"struct.std::__1::pair.944" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.11"*, i16, i8*)*, i8* }
%"class.v8::Local.11" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.948", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.948" = type { %"class.std::__1::__hash_table.949" }
%"class.std::__1::__hash_table.949" = type <{ %"class.std::__1::unique_ptr.950", %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.969", [4 x i8] }>
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952", %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.953"** }
%"struct.std::__1::__hash_node_base.953" = type { %"struct.std::__1::__hash_node_base.953"* }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.std::__1::__bucket_list_deallocator.955" }
%"class.std::__1::__bucket_list_deallocator.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::__hash_node_base.953" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.983" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.977"**, %"struct.std::__1::pair.977"**, %"struct.std::__1::pair.977"**, %"class.std::__1::__compressed_pair.978" }
%"struct.std::__1::pair.977" = type opaque
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.std::__1::pair.977"** }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { %"class.v8::internal::Handle.990"*, %"class.v8::internal::Handle.990"*, %"class.std::__1::__compressed_pair.991" }
%"class.v8::internal::Handle.990" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.v8::internal::Handle.990"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.854", i32, %"class.v8::Local.11" }
%"class.v8::Local.854" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1002" = type { %"class.std::__1::__vector_base.1003" }
%"class.std::__1::__vector_base.1003" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1009" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1010" = type { %"class.std::__1::__hash_table.1011" }
%"class.std::__1::__hash_table.1011" = type <{ %"class.std::__1::unique_ptr.1012", %"class.std::__1::__compressed_pair.1022", %"class.std::__1::__compressed_pair.1027", %"class.std::__1::__compressed_pair.1030", [4 x i8] }>
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014", %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"struct.std::__1::__hash_node_base.1015"** }
%"struct.std::__1::__hash_node_base.1015" = type { %"struct.std::__1::__hash_node_base.1015"* }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"class.std::__1::__bucket_list_deallocator.1017" }
%"class.std::__1::__bucket_list_deallocator.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"struct.std::__1::__hash_node_base.1015" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.557" = type { %"class.std::__1::__vector_base.558" }
%"class.std::__1::__vector_base.558" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.176" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1034", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1063", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1064", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1034" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1059, %union.anon.1061, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1059 = type { i64 }
%union.anon.1061 = type { i64 }
%"class.std::__1::weak_ptr.1063" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1064" = type { %"class.v8::PersistentBase.1065" }
%"class.v8::PersistentBase.1065" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1035", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1035" = type { %"class.std::__1::__hash_table.1036" }
%"class.std::__1::__hash_table.1036" = type <{ %"class.std::__1::unique_ptr.1037", %"class.std::__1::__compressed_pair.1047", %"class.std::__1::__compressed_pair.1052", %"class.std::__1::__compressed_pair.1055", [4 x i8] }>
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039", %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"struct.std::__1::__hash_node_base.1040"** }
%"struct.std::__1::__hash_node_base.1040" = type { %"struct.std::__1::__hash_node_base.1040"* }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.std::__1::__bucket_list_deallocator.1042" }
%"class.std::__1::__bucket_list_deallocator.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"struct.std::__1::__hash_node_base.1040" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1095", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.855", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.855" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1112" }
%"class.std::__1::unordered_map.1112" = type { %"class.std::__1::__hash_table.1113" }
%"class.std::__1::__hash_table.1113" = type <{ %"class.std::__1::unique_ptr.1114", %"class.std::__1::__compressed_pair.1124", %"class.std::__1::__compressed_pair.1129", %"class.std::__1::__compressed_pair.1132", [4 x i8] }>
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116", %"struct.std::__1::__compressed_pair_elem.1118" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::__hash_node_base.1117"** }
%"struct.std::__1::__hash_node_base.1117" = type { %"struct.std::__1::__hash_node_base.1117"* }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"class.std::__1::__bucket_list_deallocator.1119" }
%"class.std::__1::__bucket_list_deallocator.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.std::__1::__hash_node_base.1117" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::atomic.1138" = type { %"struct.std::__1::__atomic_base.1139" }
%"struct.std::__1::__atomic_base.1139" = type { %"struct.std::__1::__cxx_atomic_impl.1140" }
%"struct.std::__1::__cxx_atomic_impl.1140" = type { %"struct.std::__1::__cxx_atomic_base_impl.1141" }
%"struct.std::__1::__cxx_atomic_base_impl.1141" = type { %"class.std::__1::vector.1142"* }
%"class.std::__1::vector.1142" = type { %"class.std::__1::__vector_base.1143" }
%"class.std::__1::__vector_base.1143" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1144" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.v8::MemoryRange"* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6RemoveERKS2_j = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_ = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv = comdat any

@_ZN2v88internal31FLAG_heap_snapshot_string_limitE = external local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [9 x i8] c"<symbol>\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1

@_ZN2v88internal14StringsStorageC1Ev = hidden unnamed_addr alias void (%"class.v8::internal::StringsStorage"*), void (%"class.v8::internal::StringsStorage"*)* @_ZN2v88internal14StringsStorageC2Ev
@_ZN2v88internal14StringsStorageD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::StringsStorage"*), void (%"class.v8::internal::StringsStorage"*)* @_ZN2v88internal14StringsStorageD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14StringsStorage12StringsMatchEPvS2_(i8* nocapture readonly, i8* nocapture readonly) #0 align 2 {
  %3 = tail call i32 @strcmp(i8* %0, i8* %1) #14
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14StringsStorageC2Ev(%"class.v8::internal::StringsStorage"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::StringsStorage"* %0 to i64*
  store i64 ptrtoint (i1 (i8*, i8*)* @_ZN2v88internal14StringsStorage12StringsMatchEPvS2_ to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %3, i64 1
  %5 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = tail call noalias i8* @malloc(i64 192) #7
  %7 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %3 to i8**
  store i8* %6, i8** %7, align 8
  %8 = icmp eq i8* %6, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %11, align 8
  %12 = bitcast i8* %6 to i8**
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 24
  %14 = bitcast i8* %13 to i8**
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 48
  %16 = bitcast i8* %15 to i8**
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 72
  %18 = bitcast i8* %17 to i8**
  store i8* null, i8** %18, align 8
  %19 = load i32, i32* %11, align 8
  %20 = icmp ugt i32 %19, 4
  br i1 %20, label %21, label %29

21:                                               ; preds = %10, %21
  %22 = phi i64 [ %25, %21 ], [ 4, %10 ]
  %23 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %3, align 8
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %23, i64 %22, i32 0
  store i8* null, i8** %24, align 8
  %25 = add nuw nsw i64 %22, 1
  %26 = load i32, i32* %11, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %21, label %29

29:                                               ; preds = %21, %10
  %30 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %31) #7
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14StringsStorageD2Ev(%"class.v8::internal::StringsStorage"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %3, i64 -1
  %5 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %3, i64 %7
  br label %9

9:                                                ; preds = %13, %1
  %10 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %4, %1 ], [ %11, %13 ]
  %11 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 1
  %12 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %11, %8
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %11, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %9, label %17

17:                                               ; preds = %13
  %18 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %11, null
  br i1 %18, label %19, label %26

19:                                               ; preds = %9, %49, %41, %17
  %20 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %20) #7
  %21 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %22 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %21 to i8*
  tail call void @free(i8* %24) #7
  br label %25

25:                                               ; preds = %19, %23
  ret void

26:                                               ; preds = %17, %49
  %27 = phi i32 [ %37, %49 ], [ %6, %17 ]
  %28 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %38, %49 ], [ %3, %17 ]
  %29 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %43, %49 ], [ %11, %17 ]
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %29, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  tail call void @_ZdaPv(i8* nonnull %31) #16
  %34 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %35 = load i32, i32* %5, align 8
  br label %36

36:                                               ; preds = %26, %33
  %37 = phi i32 [ %27, %26 ], [ %35, %33 ]
  %38 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %28, %26 ], [ %34, %33 ]
  %39 = zext i32 %37 to i64
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 %39
  br label %41

41:                                               ; preds = %45, %36
  %42 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %29, %36 ], [ %43, %45 ]
  %43 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %42, i64 1
  %44 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %43, %40
  br i1 %44, label %45, label %19

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %43, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %41, label %49

49:                                               ; preds = %45
  %50 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %43, null
  br i1 %50, label %19, label %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"*, i8*) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.anon.1149, align 8
  %4 = alloca %class.anon, align 1
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %6) #7
  %7 = tail call i64 @strlen(i8* %1) #14
  %8 = trunc i64 %7 to i32
  %9 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %1, i32 %8, i64 0) #7
  %10 = lshr i32 %9, 2
  %11 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store i8* %1, i8** %5, align 8
  %13 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #7
  %14 = bitcast %class.anon.1149* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %class.anon.1149, %class.anon.1149* %3, i64 0, i32 0
  store i8** %5, i8*** %15, align 8
  %16 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl"* %11, i8** nonnull dereferenceable(8) %5, i32 %10, %class.anon.1149* nonnull dereferenceable(8) %3, %class.anon* nonnull dereferenceable(1) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %17 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %2
  %21 = ptrtoint i8* %18 to i64
  %22 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %46

24:                                               ; preds = %2
  %25 = shl i64 %7, 32
  %26 = add i64 %25, 4294967296
  %27 = ashr exact i64 %26, 32
  %28 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %27, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #7
  %32 = bitcast %"class.v8::Platform"* %31 to void (%"class.v8::Platform"*)***
  %33 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %33, i64 3
  %35 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %34, align 8
  call void %35(%"class.v8::Platform"* %31) #7
  %36 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %27, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %30
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

39:                                               ; preds = %24, %30
  %40 = phi i8* [ %36, %30 ], [ %28, %24 ]
  %41 = ashr exact i64 %25, 32
  call void @_ZN2v88internal7StrNCpyENS0_6VectorIcEEPKcm(i8* nonnull %40, i64 %27, i8* %1, i64 %41) #7
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 0, i32 0
  store i8* %40, i8** %43, align 8
  %44 = bitcast i8** %17 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %20, %39
  %47 = phi i8* [ %40, %39 ], [ %23, %20 ]
  %48 = phi i64 [ %45, %39 ], [ %21, %20 ]
  %49 = add i64 %48, 1
  %50 = inttoptr i64 %49 to i8*
  store i8* %50, i8** %17, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %6) #7
  ret i8* %47
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v88internal14StringsStorage8GetEntryEPKci(%"class.v8::internal::StringsStorage"*, i8*, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.anon.1149, align 8
  %5 = alloca %class.anon, align 1
  %6 = alloca i8*, align 8
  %7 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %1, i32 %2, i64 0) #7
  %8 = lshr i32 %7, 2
  %9 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  store i8* %1, i8** %6, align 8
  %11 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #7
  %12 = bitcast %class.anon.1149* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %class.anon.1149, %class.anon.1149* %4, i64 0, i32 0
  store i8** %6, i8*** %13, align 8
  %14 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl"* %9, i8** nonnull dereferenceable(8) %6, i32 %8, %class.anon.1149* nonnull dereferenceable(8) %4, %class.anon* nonnull dereferenceable(1) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  ret %"struct.v8::base::TemplateHashMapEntry"* %14
}

declare void @_ZN2v88internal7StrNCpyENS0_6VectorIcEEPKcm(i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"*, i8*, ...) local_unnamed_addr #2 align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %4)
  %6 = call i8* @_ZN2v88internal14StringsStorage13GetVFormattedEPKcP13__va_list_tag(%"class.v8::internal::StringsStorage"* %0, i8* %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret i8* %6
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14StringsStorage13GetVFormattedEPKcP13__va_list_tag(%"class.v8::internal::StringsStorage"*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.anon.1149, align 8
  %5 = alloca %class.anon, align 1
  %6 = alloca i8*, align 8
  %7 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 1024, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %18

9:                                                ; preds = %3
  %10 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #7
  %11 = bitcast %"class.v8::Platform"* %10 to void (%"class.v8::Platform"*)***
  %12 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %12, i64 3
  %14 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %13, align 8
  tail call void %14(%"class.v8::Platform"* %10) #7
  %15 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 1024, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %9
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

18:                                               ; preds = %3, %9
  %19 = phi i8* [ %15, %9 ], [ %7, %3 ]
  %20 = tail call i32 @_ZN2v88internal9VSNPrintFENS0_6VectorIcEEPKcP13__va_list_tag(i8* nonnull %19, i64 1024, i8* %1, %struct.__va_list_tag* %2) #7
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZdaPv(i8* nonnull %19) #16
  %23 = tail call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %0, i8* %1)
  br label %49

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %25) #7
  %26 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* nonnull %19, i32 %20, i64 0) #7
  %27 = lshr i32 %26, 2
  %28 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0
  %29 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  store i8* %19, i8** %6, align 8
  %30 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #7
  %31 = bitcast %class.anon.1149* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %class.anon.1149, %class.anon.1149* %4, i64 0, i32 0
  store i8** %6, i8*** %32, align 8
  %33 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl"* %28, i8** nonnull dereferenceable(8) %6, i32 %27, %class.anon.1149* nonnull dereferenceable(8) %4, %class.anon* nonnull dereferenceable(1) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  %34 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %33, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %33, i64 0, i32 0
  store i8* %19, i8** %38, align 8
  br label %46

39:                                               ; preds = %24
  call void @_ZdaPv(i8* nonnull %19) #16
  %40 = bitcast i8** %34 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %33, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = add i64 %41, 1
  %45 = inttoptr i64 %44 to i8*
  br label %46

46:                                               ; preds = %37, %39
  %47 = phi i8* [ %43, %39 ], [ %19, %37 ]
  %48 = phi i8* [ %45, %39 ], [ inttoptr (i64 1 to i8*), %37 ]
  store i8* %48, i8** %34, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %25) #7
  br label %49

49:                                               ; preds = %46, %22
  %50 = phi i8* [ %23, %22 ], [ %47, %46 ]
  ret i8* %50
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14StringsStorage18AddOrDisposeStringEPci(%"class.v8::internal::StringsStorage"*, i8*, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.anon.1149, align 8
  %5 = alloca %class.anon, align 1
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %7) #7
  %8 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %1, i32 %2, i64 0) #7
  %9 = lshr i32 %8, 2
  %10 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0
  %11 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  store i8* %1, i8** %6, align 8
  %12 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #7
  %13 = bitcast %class.anon.1149* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %class.anon.1149, %class.anon.1149* %4, i64 0, i32 0
  store i8** %6, i8*** %14, align 8
  %15 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl"* %10, i8** nonnull dereferenceable(8) %6, i32 %9, %class.anon.1149* nonnull dereferenceable(8) %4, %class.anon* nonnull dereferenceable(1) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  %16 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %15, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %22

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %15, i64 0, i32 0
  store i8* %1, i8** %21, align 8
  br label %27

22:                                               ; preds = %3
  %23 = icmp eq i8* %1, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  call void @_ZdaPv(i8* nonnull %1) #16
  %25 = bitcast i8** %16 to i64*
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %24, %22, %20
  %28 = phi i64 [ %26, %24 ], [ %19, %22 ], [ %19, %20 ]
  %29 = add i64 %28, 1
  %30 = inttoptr i64 %29 to i8*
  store i8* %30, i8** %16, align 8
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %15, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %7) #7
  ret i8* %32
}

declare i32 @_ZN2v88internal9VSNPrintFENS0_6VectorIcEEPKcP13__va_list_tag(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.anon.1149, align 8
  %4 = alloca %class.anon, align 1
  %5 = alloca i8*, align 8
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = and i64 %1, -4294967296
  %9 = add i64 %1, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp ult i16 %16, 64
  br i1 %17, label %18, label %56

18:                                               ; preds = %2
  %19 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %20, align 8
  %21 = add i64 %1, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* @_ZN2v88internal31FLAG_heap_snapshot_string_limitE, align 4
  %25 = icmp slt i32 %23, %24
  %26 = select i1 %25, i32 %23, i32 %24
  %27 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #7
  store i32 0, i32* %7, align 4
  %28 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEiiPi(%"class.v8::internal::String"* nonnull %6, i32 1, i32 0, i32 0, i32 %26, i32* nonnull %7) #7
  %29 = load i32, i32* %7, align 4
  %30 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %30) #7
  %31 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %28, i32 %29, i64 0) #7
  %32 = lshr i32 %31, 2
  %33 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0
  %34 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  store i8* %28, i8** %5, align 8
  %35 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #7
  %36 = bitcast %class.anon.1149* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  %37 = getelementptr inbounds %class.anon.1149, %class.anon.1149* %3, i64 0, i32 0
  store i8** %5, i8*** %37, align 8
  %38 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl"* %33, i8** nonnull dereferenceable(8) %5, i32 %32, %class.anon.1149* nonnull dereferenceable(8) %3, %class.anon* nonnull dereferenceable(1) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  %42 = ptrtoint i8* %40 to i64
  br i1 %41, label %43, label %45

43:                                               ; preds = %18
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 0, i32 0
  store i8* %28, i8** %44, align 8
  br label %50

45:                                               ; preds = %18
  %46 = icmp eq i8* %28, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  call void @_ZdaPv(i8* nonnull %28) #16
  %48 = bitcast i8** %39 to i64*
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %47, %45, %43
  %51 = phi i64 [ %49, %47 ], [ %42, %45 ], [ %42, %43 ]
  %52 = add i64 %51, 1
  %53 = inttoptr i64 %52 to i8*
  store i8* %53, i8** %39, align 8
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %30) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %65

56:                                               ; preds = %2
  %57 = load atomic i32, i32* %10 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %8, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = icmp eq i16 %62, 64
  %64 = select i1 %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)
  br label %65

65:                                               ; preds = %56, %50
  %66 = phi i8* [ %55, %50 ], [ %64, %56 ]
  ret i8* %66
}

declare i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEiiPi(%"class.v8::internal::String"*, i32, i32, i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14StringsStorage7GetNameEi(%"class.v8::internal::StringsStorage"*, i32) local_unnamed_addr #2 align 2 {
  %3 = tail call i8* (%"class.v8::internal::StringsStorage"*, i8*, ...) @_ZN2v88internal14StringsStorage12GetFormattedEPKcz(%"class.v8::internal::StringsStorage"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %1)
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14StringsStorage11GetConsNameEPKcNS0_4NameE(%"class.v8::internal::StringsStorage"*, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.anon.1149, align 8
  %5 = alloca %class.anon, align 1
  %6 = alloca i8*, align 8
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca i32, align 4
  %9 = and i64 %2, -4294967296
  %10 = add i64 %2, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp ult i16 %17, 64
  br i1 %18, label %19, label %77

19:                                               ; preds = %3
  %20 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %21, align 8
  %22 = add i64 %2, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* @_ZN2v88internal31FLAG_heap_snapshot_string_limitE, align 4
  %26 = icmp slt i32 %24, %25
  %27 = select i1 %26, i32 %24, i32 %25
  %28 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #7
  store i32 0, i32* %8, align 4
  %29 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEiiPi(%"class.v8::internal::String"* nonnull %7, i32 1, i32 0, i32 0, i32 %27, i32* nonnull %8) #7
  %30 = load i32, i32* %8, align 4
  %31 = call i64 @strlen(i8* %1) #14
  %32 = trunc i64 %31 to i32
  %33 = add nsw i32 %30, %32
  %34 = add nsw i32 %33, 1
  %35 = sext i32 %34 to i64
  %36 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %35, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %47

38:                                               ; preds = %19
  %39 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #7
  %40 = bitcast %"class.v8::Platform"* %39 to void (%"class.v8::Platform"*)***
  %41 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %41, i64 3
  %43 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %42, align 8
  call void %43(%"class.v8::Platform"* %39) #7
  %44 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %35, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %38
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

47:                                               ; preds = %19, %38
  %48 = phi i8* [ %44, %38 ], [ %36, %19 ]
  %49 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %48, i64 %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %1, i8* %29) #7
  %50 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %50) #7
  %51 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* nonnull %48, i32 %33, i64 0) #7
  %52 = lshr i32 %51, 2
  %53 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0
  %54 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #7
  store i8* %48, i8** %6, align 8
  %55 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #7
  %56 = bitcast %class.anon.1149* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  %57 = getelementptr inbounds %class.anon.1149, %class.anon.1149* %4, i64 0, i32 0
  store i8** %6, i8*** %57, align 8
  %58 = call %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl"* %53, i8** nonnull dereferenceable(8) %6, i32 %52, %class.anon.1149* nonnull dereferenceable(8) %4, %class.anon* nonnull dereferenceable(1) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #7
  %59 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 0
  store i8* %48, i8** %63, align 8
  br label %71

64:                                               ; preds = %47
  call void @_ZdaPv(i8* nonnull %48) #16
  %65 = bitcast i8** %59 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = add i64 %66, 1
  %70 = inttoptr i64 %69 to i8*
  br label %71

71:                                               ; preds = %62, %64
  %72 = phi i8* [ %68, %64 ], [ %48, %62 ]
  %73 = phi i8* [ %70, %64 ], [ inttoptr (i64 1 to i8*), %62 ]
  store i8* %73, i8** %59, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %50) #7
  %74 = icmp eq i8* %29, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  call void @_ZdaPv(i8* nonnull %29) #16
  br label %76

76:                                               ; preds = %71, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %86

77:                                               ; preds = %3
  %78 = load atomic i32, i32* %11 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %9, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp eq i16 %83, 64
  %85 = select i1 %84, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)
  br label %86

86:                                               ; preds = %77, %76
  %87 = phi i8* [ %72, %76 ], [ %85, %77 ]
  ret i8* %87
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14StringsStorage7ReleaseEPKc(%"class.v8::internal::StringsStorage"*, i8*) local_unnamed_addr #2 align 2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %4) #7
  %5 = tail call i64 @strlen(i8* %1) #14
  %6 = trunc i64 %5 to i32
  %7 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8* %1, i32 %6, i64 0) #7
  %8 = lshr i32 %7, 2
  %9 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1073741823
  %13 = and i32 %12, %8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %15, align 8
  %17 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 %14
  %18 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %66, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %44, %21
  %24 = phi i32 [ %11, %21 ], [ %45, %44 ]
  %25 = phi i8* [ %19, %21 ], [ %52, %44 ]
  %26 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %17, %21 ], [ %50, %44 ]
  %27 = phi i64 [ %14, %21 ], [ %49, %44 ]
  %28 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 %27, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, %8
  br i1 %30, label %31, label %44

31:                                               ; preds = %23
  %32 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %22, align 8
  %33 = tail call zeroext i1 %32(i8* %1, i8* nonnull %25) #7
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %26, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp ne i8* %36, null
  %38 = icmp ne %"struct.v8::base::TemplateHashMapEntry"* %26, null
  %39 = and i1 %37, %38
  %40 = icmp eq i8* %36, %1
  %41 = and i1 %39, %40
  br i1 %41, label %54, label %66

42:                                               ; preds = %31
  %43 = load i32, i32* %10, align 8
  br label %44

44:                                               ; preds = %42, %23
  %45 = phi i32 [ %43, %42 ], [ %24, %23 ]
  %46 = add nuw nsw i64 %27, 1
  %47 = add i32 %45, -1
  %48 = zext i32 %47 to i64
  %49 = and i64 %46, %48
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 %49
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %50, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %66, label %23

54:                                               ; preds = %34
  %55 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %26, i64 0, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i8*
  store i8* %59, i8** %55, align 8
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %54
  %62 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #7
  store i8* %1, i8** %3, align 8
  %63 = call i8* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6RemoveERKS2_j(%"class.v8::base::TemplateHashMapImpl"* %9, i8** nonnull dereferenceable(8) %3, i32 %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #7
  %64 = icmp eq i8* %1, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  call void @_ZdaPv(i8* nonnull %1) #16
  br label %66

66:                                               ; preds = %44, %34, %2, %65, %61, %54
  %67 = phi i1 [ true, %54 ], [ true, %61 ], [ true, %65 ], [ false, %2 ], [ false, %34 ], [ false, %44 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %4) #7
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6RemoveERKS2_j(%"class.v8::base::TemplateHashMapImpl"*, i8** dereferenceable(8), i32) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = and i32 %6, %2
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %8
  %12 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %103, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %31, %15
  %18 = phi i32 [ %5, %15 ], [ %32, %31 ]
  %19 = phi i8* [ %13, %15 ], [ %39, %31 ]
  %20 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %11, %15 ], [ %37, %31 ]
  %21 = phi i64 [ %8, %15 ], [ %36, %31 ]
  %22 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %21, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, %2
  br i1 %24, label %25, label %31

25:                                               ; preds = %17
  %26 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %16, align 8
  %27 = load i8*, i8** %1, align 8
  %28 = tail call zeroext i1 %26(i8* %27, i8* nonnull %19) #7
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %4, align 8
  br label %31

31:                                               ; preds = %29, %17
  %32 = phi i32 [ %30, %29 ], [ %18, %17 ]
  %33 = add nuw nsw i64 %21, 1
  %34 = add i32 %32, -1
  %35 = zext i32 %34 to i64
  %36 = and i64 %33, %35
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %10, i64 %36
  %38 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %37, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %103, label %17

41:                                               ; preds = %25
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %20, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %103, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %20, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %20, i64 1
  %49 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %50 = load i32, i32* %4, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %51
  %53 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %48, %52
  %54 = select i1 %53, %"struct.v8::base::TemplateHashMapEntry"* %49, %"struct.v8::base::TemplateHashMapEntry"* %48
  %55 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %54, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %97, label %58

58:                                               ; preds = %45, %85
  %59 = phi i32 [ %86, %85 ], [ %50, %45 ]
  %60 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %87, %85 ], [ %49, %45 ]
  %61 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %93, %85 ], [ %54, %45 ]
  %62 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %88, %85 ], [ %20, %45 ]
  %63 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %61, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = add i32 %59, -1
  %66 = and i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %60, i64 %67
  %69 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %61, %62
  br i1 %69, label %70, label %74

70:                                               ; preds = %58
  %71 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %68, %62
  %72 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %68, %61
  %73 = or i1 %71, %72
  br i1 %73, label %80, label %74

74:                                               ; preds = %70, %58
  %75 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %61, %62
  %76 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %68, %62
  %77 = and i1 %75, %76
  %78 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %68, %61
  %79 = and i1 %78, %77
  br i1 %79, label %80, label %85

80:                                               ; preds = %74, %70
  %81 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %62 to i8*
  %82 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 20, i1 false)
  %83 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %84 = load i32, i32* %4, align 8
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi i32 [ %84, %80 ], [ %59, %74 ]
  %87 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %83, %80 ], [ %60, %74 ]
  %88 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %61, %80 ], [ %62, %74 ]
  %89 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %61, i64 1
  %90 = zext i32 %86 to i64
  %91 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %87, i64 %90
  %92 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %89, %91
  %93 = select i1 %92, %"struct.v8::base::TemplateHashMapEntry"* %87, %"struct.v8::base::TemplateHashMapEntry"* %89
  %94 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %93, i64 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %58

97:                                               ; preds = %85, %45
  %98 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %20, %45 ], [ %88, %85 ]
  %99 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %98, i64 0, i32 0
  store i8* null, i8** %99, align 8
  %100 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, -1
  store i32 %102, i32* %100, align 4
  br label %103

103:                                              ; preds = %31, %3, %41, %97
  %104 = phi i8* [ %47, %97 ], [ null, %41 ], [ null, %3 ], [ null, %31 ]
  ret i8* %104
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal14StringsStorage24GetStringCountForTestingEv(%"class.v8::internal::StringsStorage"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringsStorage", %"class.v8::internal::StringsStorage"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringIcEEjPKT_im(i8*, i32, i64) local_unnamed_addr #10 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i8 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #7
  br label %170

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i8* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i8* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %170

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %170

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = add nsw i64 %102, -1
  %105 = and i64 %102, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %117, %107 ], [ %101, %100 ]
  %109 = phi i8* [ %111, %107 ], [ %0, %100 ]
  %110 = phi i64 [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = load i8, i8* %109, align 1
  %113 = zext i8 %112 to i32
  %114 = add i32 %108, %113
  %115 = mul i32 %114, 1025
  %116 = lshr i32 %115, 6
  %117 = xor i32 %116, %115
  %118 = add i64 %110, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !2

120:                                              ; preds = %107, %100
  %121 = phi i32 [ undef, %100 ], [ %117, %107 ]
  %122 = phi i32 [ %101, %100 ], [ %117, %107 ]
  %123 = phi i8* [ %0, %100 ], [ %111, %107 ]
  %124 = icmp ult i64 %104, 3
  br i1 %124, label %157, label %125

125:                                              ; preds = %120, %125
  %126 = phi i32 [ %155, %125 ], [ %122, %120 ]
  %127 = phi i8* [ %149, %125 ], [ %123, %120 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %126, %130
  %132 = mul i32 %131, 1025
  %133 = lshr i32 %132, 6
  %134 = xor i32 %133, %132
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  %136 = load i8, i8* %128, align 1
  %137 = zext i8 %136 to i32
  %138 = add i32 %134, %137
  %139 = mul i32 %138, 1025
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = getelementptr inbounds i8, i8* %127, i64 3
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul i32 %145, 1025
  %147 = lshr i32 %146, 6
  %148 = xor i32 %147, %146
  %149 = getelementptr inbounds i8, i8* %127, i64 4
  %150 = load i8, i8* %142, align 1
  %151 = zext i8 %150 to i32
  %152 = add i32 %148, %151
  %153 = mul i32 %152, 1025
  %154 = lshr i32 %153, 6
  %155 = xor i32 %154, %153
  %156 = icmp eq i8* %149, %103
  br i1 %156, label %157, label %125

157:                                              ; preds = %120, %125, %97
  %158 = phi i32 [ %98, %97 ], [ %121, %120 ], [ %155, %125 ]
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 11
  %161 = xor i32 %160, %159
  %162 = mul i32 %161, 32769
  %163 = and i32 %162, 1073741823
  %164 = add nsw i32 %163, -1
  %165 = ashr i32 %164, 31
  %166 = and i32 %165, 27
  %167 = or i32 %166, %162
  %168 = shl i32 %167, 2
  %169 = or i32 %168, 2
  br label %170

170:                                              ; preds = %36, %157, %94, %72
  %171 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %169, %157 ], [ %38, %36 ]
  ret i32 %171
}

declare i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::base::TemplateHashMapEntry"* @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE14LookupOrInsertIS2_ZNS8_14LookupOrInsertIZNS8_14LookupOrInsertERKS2_jEUlvE_EEPNS0_20TemplateHashMapEntryIS2_S2_EESC_jRKT_EUlvE_SD_EESG_SJ_jRKT0_RKT1_(%"class.v8::base::TemplateHashMapImpl"*, i8** dereferenceable(8), i32, %class.anon.1149* dereferenceable(8), %class.anon* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = and i32 %8, %2
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %12 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %13 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %12, i64 %10
  %14 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %47, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %33, %17
  %20 = phi i32 [ %7, %17 ], [ %34, %33 ]
  %21 = phi i8* [ %15, %17 ], [ %41, %33 ]
  %22 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %13, %17 ], [ %39, %33 ]
  %23 = phi i64 [ %10, %17 ], [ %38, %33 ]
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %12, i64 %23, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, %2
  br i1 %26, label %27, label %33

27:                                               ; preds = %19
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %18, align 8
  %29 = load i8*, i8** %1, align 8
  %30 = tail call zeroext i1 %28(i8* %29, i8* nonnull %21) #7
  br i1 %30, label %43, label %31

31:                                               ; preds = %27
  %32 = load i32, i32* %6, align 8
  br label %33

33:                                               ; preds = %31, %19
  %34 = phi i32 [ %32, %31 ], [ %20, %19 ]
  %35 = add nuw nsw i64 %23, 1
  %36 = add i32 %34, -1
  %37 = zext i32 %36 to i64
  %38 = and i64 %35, %37
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %12, i64 %38
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %47, label %19

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %99

47:                                               ; preds = %33, %5, %43
  %48 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %22, %43 ], [ %13, %5 ], [ %39, %33 ]
  %49 = getelementptr inbounds %class.anon.1149, %class.anon.1149* %3, i64 0, i32 0
  %50 = load i8**, i8*** %49, align 8
  %51 = load i8*, i8** %50, align 8
  %52 = ptrtoint i8* %51 to i64
  %53 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 1
  %55 = bitcast i8** %54 to i64*
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 2
  store i32 %2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %57, align 4
  %60 = lshr i32 %59, 2
  %61 = add i32 %60, %59
  %62 = load i32, i32* %6, align 8
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %99, label %64

64:                                               ; preds = %47
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %0) #7
  %65 = load i32, i32* %6, align 8
  %66 = add i32 %65, -1
  %67 = and i32 %66, %2
  %68 = zext i32 %67 to i64
  %69 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %70 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 %68
  %71 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %70, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %99, label %74

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0, i32 0
  br label %76

76:                                               ; preds = %89, %74
  %77 = phi i32 [ %65, %74 ], [ %90, %89 ]
  %78 = phi i8* [ %72, %74 ], [ %97, %89 ]
  %79 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %70, %74 ], [ %95, %89 ]
  %80 = phi i64 [ %68, %74 ], [ %94, %89 ]
  %81 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 %80, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, %2
  br i1 %83, label %84, label %89

84:                                               ; preds = %76
  %85 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %75, align 8
  %86 = tail call zeroext i1 %85(i8* %51, i8* nonnull %78) #7
  br i1 %86, label %99, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %6, align 8
  br label %89

89:                                               ; preds = %87, %76
  %90 = phi i32 [ %88, %87 ], [ %77, %76 ]
  %91 = add nuw nsw i64 %80, 1
  %92 = add i32 %90, -1
  %93 = zext i32 %92 to i64
  %94 = and i64 %91, %93
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 %94
  %96 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %95, i64 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %76

99:                                               ; preds = %89, %84, %43, %64, %47
  %100 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %22, %43 ], [ %48, %47 ], [ %70, %64 ], [ %95, %89 ], [ %79, %84 ]
  ret %"struct.v8::base::TemplateHashMapEntry"* %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = mul nuw nsw i64 %9, 24
  %11 = tail call noalias i8* @malloc(i64 %10) #7
  %12 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %2 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #15
  unreachable

15:                                               ; preds = %1
  store i32 %8, i32* %4, align 8
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = bitcast i8* %11 to i8**
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to i8**
  store i8* null, i8** %20, align 8
  %21 = load i32, i32* %4, align 8
  %22 = icmp ugt i32 %21, 2
  br i1 %22, label %23, label %31

23:                                               ; preds = %17, %23
  %24 = phi i64 [ %27, %23 ], [ 2, %17 ]
  %25 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 %24, i32 0
  store i8* null, i8** %26, align 8
  %27 = add nuw nsw i64 %24, 1
  %28 = load i32, i32* %4, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %23, label %31

31:                                               ; preds = %23, %17, %15
  store i32 0, i32* %6, align 4
  %32 = icmp eq i32 %7, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0, i32 0
  br label %37

35:                                               ; preds = %135, %31
  %36 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %3 to i8*
  tail call void @free(i8* %36) #7
  ret void

37:                                               ; preds = %33, %135
  %38 = phi i32 [ %7, %33 ], [ %136, %135 ]
  %39 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %3, %33 ], [ %137, %135 ]
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %135, label %43

43:                                               ; preds = %37
  %44 = ptrtoint i8* %41 to i64
  %45 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = load i32, i32* %4, align 8
  %48 = add i32 %47, -1
  %49 = and i32 %48, %46
  %50 = zext i32 %49 to i64
  %51 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 %50
  %53 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %52, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %85, label %56

56:                                               ; preds = %43, %70
  %57 = phi i32 [ %71, %70 ], [ %47, %43 ]
  %58 = phi i8* [ %78, %70 ], [ %54, %43 ]
  %59 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %76, %70 ], [ %52, %43 ]
  %60 = phi i64 [ %75, %70 ], [ %50, %43 ]
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 %60, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, %46
  br i1 %63, label %64, label %70

64:                                               ; preds = %56
  %65 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %34, align 8
  %66 = load i8*, i8** %40, align 8
  %67 = tail call zeroext i1 %65(i8* %66, i8* nonnull %58) #7
  br i1 %67, label %80, label %68

68:                                               ; preds = %64
  %69 = load i32, i32* %4, align 8
  br label %70

70:                                               ; preds = %68, %56
  %71 = phi i32 [ %69, %68 ], [ %57, %56 ]
  %72 = add nuw nsw i64 %60, 1
  %73 = add i32 %71, -1
  %74 = zext i32 %73 to i64
  %75 = and i64 %72, %74
  %76 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 %75
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %76, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %56

80:                                               ; preds = %70, %64
  %81 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %76, %70 ], [ %59, %64 ]
  %82 = load i32, i32* %45, align 8
  %83 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %39 to i64*
  %84 = load i64, i64* %83, align 8
  br label %85

85:                                               ; preds = %43, %80
  %86 = phi i64 [ %84, %80 ], [ %44, %43 ]
  %87 = phi i32 [ %82, %80 ], [ %46, %43 ]
  %88 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %81, %80 ], [ %52, %43 ]
  %89 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 1
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %88 to i64*
  store i64 %86, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 0, i32 1
  %94 = bitcast i8** %93 to i64*
  store i64 %91, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 0, i32 2
  store i32 %87, i32* %95, align 8
  %96 = load i32, i32* %6, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %6, align 4
  %98 = lshr i32 %97, 2
  %99 = add i32 %98, %97
  %100 = load i32, i32* %4, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %133, label %102

102:                                              ; preds = %85
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_26HashEqualityThenKeyMatcherIS2_PFbS2_S2_EEENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %0) #7
  %103 = load i32, i32* %4, align 8
  %104 = add i32 %103, -1
  %105 = and i32 %104, %87
  %106 = zext i32 %105 to i64
  %107 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %108 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %106, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %133, label %111

111:                                              ; preds = %102, %124
  %112 = phi i32 [ %125, %124 ], [ %103, %102 ]
  %113 = phi i8* [ %131, %124 ], [ %109, %102 ]
  %114 = phi i64 [ %129, %124 ], [ %106, %102 ]
  %115 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %114, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, %87
  br i1 %117, label %118, label %124

118:                                              ; preds = %111
  %119 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %34, align 8
  %120 = load i8*, i8** %40, align 8
  %121 = tail call zeroext i1 %119(i8* %120, i8* nonnull %113) #7
  br i1 %121, label %133, label %122

122:                                              ; preds = %118
  %123 = load i32, i32* %4, align 8
  br label %124

124:                                              ; preds = %122, %111
  %125 = phi i32 [ %123, %122 ], [ %112, %111 ]
  %126 = add nuw nsw i64 %114, 1
  %127 = add i32 %125, -1
  %128 = zext i32 %127 to i64
  %129 = and i64 %126, %128
  %130 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %129, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %111

133:                                              ; preds = %118, %124, %102, %85
  %134 = add i32 %38, -1
  br label %135

135:                                              ; preds = %37, %133
  %136 = phi i32 [ %134, %133 ], [ %38, %37 ]
  %137 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 1
  %138 = icmp eq i32 %136, 0
  br i1 %138, label %35, label %37
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
