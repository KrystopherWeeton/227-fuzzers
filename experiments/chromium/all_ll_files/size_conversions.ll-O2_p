; ModuleID = '../../ui/gfx/geometry/size_conversions.cc'
source_filename = "../../ui/gfx/geometry/size_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::SizeF" = type { float, float }

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN3gfx13ToFlooredSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = tail call float @llvm.floor.f32(float %3) #2
  %5 = fcmp ult float %4, 0xC1E0000000000000
  %6 = fcmp ugt float %4, 0x41DFFFFFE0000000
  %7 = fcmp ogt float %4, 0xC1E0000000000000
  %8 = select i1 %7, float %4, float 0xC1E0000000000000
  %9 = fptosi float %8 to i32
  %10 = select i1 %5, i32 0, i32 2147483647
  %11 = select i1 %6, i32 %10, i32 %9
  %12 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = tail call float @llvm.floor.f32(float %13) #2
  %15 = fcmp ult float %14, 0xC1E0000000000000
  %16 = fcmp ugt float %14, 0x41DFFFFFE0000000
  %17 = fcmp ogt float %14, 0xC1E0000000000000
  %18 = select i1 %17, float %14, float 0xC1E0000000000000
  %19 = fptosi float %18 to i32
  %20 = select i1 %15, i32 0, i32 2147483647
  %21 = select i1 %16, i32 %20, i32 %19
  %22 = icmp sgt i32 %11, 0
  %23 = select i1 %22, i32 %11, i32 0
  %24 = icmp sgt i32 %21, 0
  %25 = select i1 %24, i32 %21, i32 0
  %26 = zext i32 %25 to i64
  %27 = shl nuw nsw i64 %26, 32
  %28 = zext i32 %23 to i64
  %29 = or i64 %27, %28
  ret i64 %29
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN3gfx12ToCeiledSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = tail call float @llvm.ceil.f32(float %3) #2
  %5 = fcmp ult float %4, 0xC1E0000000000000
  %6 = fcmp ugt float %4, 0x41DFFFFFE0000000
  %7 = fcmp ogt float %4, 0xC1E0000000000000
  %8 = select i1 %7, float %4, float 0xC1E0000000000000
  %9 = fptosi float %8 to i32
  %10 = select i1 %5, i32 0, i32 2147483647
  %11 = select i1 %6, i32 %10, i32 %9
  %12 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = tail call float @llvm.ceil.f32(float %13) #2
  %15 = fcmp ult float %14, 0xC1E0000000000000
  %16 = fcmp ugt float %14, 0x41DFFFFFE0000000
  %17 = fcmp ogt float %14, 0xC1E0000000000000
  %18 = select i1 %17, float %14, float 0xC1E0000000000000
  %19 = fptosi float %18 to i32
  %20 = select i1 %15, i32 0, i32 2147483647
  %21 = select i1 %16, i32 %20, i32 %19
  %22 = icmp sgt i32 %11, 0
  %23 = select i1 %22, i32 %11, i32 0
  %24 = icmp sgt i32 %21, 0
  %25 = select i1 %24, i32 %21, i32 0
  %26 = zext i32 %25 to i64
  %27 = shl nuw nsw i64 %26, 32
  %28 = zext i32 %23 to i64
  %29 = or i64 %27, %28
  ret i64 %29
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN3gfx13ToRoundedSizeERKNS_5SizeFE(%"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = fcmp ult float %3, 0.000000e+00
  %5 = fadd float %3, 5.000000e-01
  %6 = tail call float @llvm.floor.f32(float %5) #2
  %7 = fadd float %3, -5.000000e-01
  %8 = tail call float @llvm.ceil.f32(float %7) #2
  %9 = select i1 %4, float %8, float %6
  %10 = fcmp ult float %9, 0xC1E0000000000000
  %11 = fcmp ugt float %9, 0x41DFFFFFE0000000
  %12 = fcmp ogt float %9, 0xC1E0000000000000
  %13 = select i1 %12, float %9, float 0xC1E0000000000000
  %14 = fptosi float %13 to i32
  %15 = select i1 %10, i32 0, i32 2147483647
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp ult float %18, 0.000000e+00
  %20 = fadd float %18, 5.000000e-01
  %21 = tail call float @llvm.floor.f32(float %20) #2
  %22 = fadd float %18, -5.000000e-01
  %23 = tail call float @llvm.ceil.f32(float %22) #2
  %24 = select i1 %19, float %23, float %21
  %25 = fcmp ult float %24, 0xC1E0000000000000
  %26 = fcmp ugt float %24, 0x41DFFFFFE0000000
  %27 = fcmp ogt float %24, 0xC1E0000000000000
  %28 = select i1 %27, float %24, float 0xC1E0000000000000
  %29 = fptosi float %28 to i32
  %30 = select i1 %25, i32 0, i32 2147483647
  %31 = select i1 %26, i32 %30, i32 %29
  %32 = icmp sgt i32 %16, 0
  %33 = select i1 %32, i32 %16, i32 0
  %34 = icmp sgt i32 %31, 0
  %35 = select i1 %34, i32 %31, i32 0
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 32
  %38 = zext i32 %33 to i64
  %39 = or i64 %37, %38
  ret i64 %39
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
