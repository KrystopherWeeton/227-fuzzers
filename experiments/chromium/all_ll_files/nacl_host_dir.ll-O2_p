; ModuleID = '../../native_client/src/shared/platform/linux/nacl_host_dir.c'
source_filename = "../../native_client/src/shared/platform/linux/nacl_host_dir.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.NaClHostDir = type { %struct.NaClMutex, i32, i64, i64, [4096 x i8] }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }

@.str = private unnamed_addr constant [27 x i8] c"NaClHostDirCtor: success.\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"NaClHostDirOpen(0x%08lx, %s)\0A\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"NaClHostDirOpen: 'this' is NULL\0A\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"NaClHostDirOpen: invoking open(%s)\0A\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"NaClHostDirOpen: got DIR* %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"NaClHostDirOpen: open returned -1, errno %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"NaClHostDirOpen: fstat failed?!?  errno %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"NaClHostDirGetdents: 'this' is NULL\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"NaClHostDirGetdents(0x%08lx, %lu):\0A\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"NaClHostDirGetdents: returned %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"NaClHostDirRewind: 'this' is NULL\0A\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"NaClHostDirClose: 'this' is NULL\0A\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"NaClHostDirClose(%d)\0A\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"NaClStreamDirents: loop, xferred = %lu\0A\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.15 = private unnamed_addr constant [62 x i8] c"../../native_client/src/shared/platform/linux/nacl_host_dir.c\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"d->cur_byte == d->nbytes\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"len >= (size_t) entry_size\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"0 == ((sizeof(nacl_abi_ino_t) - 1) & (uintptr_t) buf)\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"d->cur_byte < d->nbytes\00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c"ldp->d_reclen <= d->nbytes - d->cur_byte\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"NaClCopyDirent: %s\0A\00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"NaClCopyDirent: returning %lu\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @getdents(i32, %struct.dirent*, i32) local_unnamed_addr #0 {
  %4 = tail call i64 (i64, ...) @syscall(i64 78, i32 %0, %struct.dirent* %1, i32 %2) #9
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirCtor(%struct.NaClHostDir*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 0
  %4 = tail call i32 @NaClMutexCtor(%struct.NaClMutex* %3) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 2
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0)) #9
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -12, %2 ]
  ret i32 %11
}

declare i32 @NaClMutexCtor(%struct.NaClMutex*) local_unnamed_addr #2

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirOpen(%struct.NaClHostDir*, i8*) local_unnamed_addr #0 {
  %3 = alloca %struct.stat, align 8
  %4 = bitcast %struct.stat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 144, i1 false)
  %5 = ptrtoint %struct.NaClHostDir* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 %5, i8* %1) #9
  %6 = icmp eq %struct.NaClHostDir* %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %8

8:                                                ; preds = %7, %2
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8* %1) #9
  %9 = tail call i32 (i8*, i32, ...) @open64(i8* %1, i32 0) #9
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i32 %9) #9
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %17

11:                                               ; preds = %8
  %12 = tail call i32* @__errno_location() #10
  %13 = load i32, i32* %12, align 4
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i32 %13) #9
  %14 = load i32, i32* %12, align 4
  %15 = tail call i32 @NaClXlateErrno(i32 %14) #9
  %16 = sub nsw i32 0, %15
  br label %43

17:                                               ; preds = %8
  %18 = bitcast %struct.stat* %3 to %struct.stat64*
  %19 = call i32 @__fxstat64(i32 1, i32 %9, %struct.stat64* nonnull %18) #9
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = tail call i32* @__errno_location() #10
  %23 = load i32, i32* %22, align 4
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i32 %23) #9
  %24 = call i32 @close(i32 %9) #9
  %25 = load i32, i32* %22, align 4
  %26 = call i32 @NaClXlateErrno(i32 %25) #9
  %27 = sub nsw i32 0, %26
  br label %43

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 61440
  %32 = icmp eq i32 %31, 16384
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = call i32 @close(i32 %9) #9
  br label %43

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 0
  %37 = call i32 @NaClMutexCtor(%struct.NaClMutex* %36) #9
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  store i32 %9, i32* %40, align 8
  %41 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 2
  %42 = bitcast i64* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #9
  call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0)) #9
  br label %43

43:                                               ; preds = %39, %35, %33, %21, %11
  %44 = phi i32 [ %16, %11 ], [ %27, %21 ], [ -20, %33 ], [ 0, %39 ], [ -12, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %4) #9
  ret i32 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

declare i32 @NaClXlateErrno(i32) local_unnamed_addr #2

declare i32 @close(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClHostDirGetdents(%struct.NaClHostDir*, i8*, i64) local_unnamed_addr #0 {
  %4 = icmp eq %struct.NaClHostDir* %0, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0)) #9
  br label %6

6:                                                ; preds = %5, %3
  %7 = ptrtoint i8* %1 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i64 %7, i64 %2) #9
  %8 = and i64 %7, 7
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %112

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 0
  tail call void @NaClXMutexLock(%struct.NaClMutex* %11) #9
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %109, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 2
  %15 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 3
  %16 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  %17 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 4, i64 0
  br label %18

18:                                               ; preds = %105, %13
  %19 = phi i64 [ 0, %13 ], [ %107, %105 ]
  %20 = phi i64 [ %2, %13 ], [ %106, %105 ]
  %21 = phi i8* [ %1, %13 ], [ %102, %105 ]
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0), i64 %19) #9
  %22 = load i64, i64* %14, align 8
  %23 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 4, i64 %22
  %24 = ptrtoint i8* %21 to i64
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0), i32 195, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #9
  %28 = load i64, i64* %14, align 8
  br label %29

29:                                               ; preds = %27, %18
  %30 = phi i64 [ %28, %27 ], [ %22, %18 ]
  %31 = load i64, i64* %15, align 8
  %32 = icmp eq i64 %30, %31
  br i1 %32, label %79, label %33

33:                                               ; preds = %29
  %34 = icmp ult i64 %30, %31
  br i1 %34, label %38, label %35

35:                                               ; preds = %33
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0), i32 200, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0)) #9
  %36 = load i64, i64* %15, align 8
  %37 = load i64, i64* %14, align 8
  br label %38

38:                                               ; preds = %35, %33
  %39 = phi i64 [ %30, %33 ], [ %37, %35 ]
  %40 = phi i64 [ %31, %33 ], [ %36, %35 ]
  %41 = getelementptr inbounds i8, i8* %23, i64 16
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 8
  %44 = zext i16 %43 to i64
  %45 = sub i64 %40, %39
  %46 = icmp ult i64 %45, %44
  br i1 %46, label %47, label %48

47:                                               ; preds = %38
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0), i32 201, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0)) #9
  br label %48

48:                                               ; preds = %47, %38
  %49 = getelementptr inbounds i8, i8* %23, i64 18
  %50 = tail call i64 @strlen(i8* %49) #11
  %51 = add i64 %50, 26
  %52 = and i64 %51, -8
  %53 = icmp ugt i64 %52, %20
  br i1 %53, label %96, label %54

54:                                               ; preds = %48
  %55 = bitcast i8* %23 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8* %21 to i64*
  store volatile i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %23, i64 8
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %21, i64 8
  %62 = bitcast i8* %61 to i64*
  store volatile i64 %60, i64* %62, align 8
  %63 = trunc i64 %52 to i16
  %64 = getelementptr inbounds i8, i8* %21, i64 16
  %65 = bitcast i8* %64 to i16*
  store volatile i16 %63, i16* %65, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i8* %49) #9
  %66 = getelementptr inbounds i8, i8* %21, i64 18
  %67 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %66, i1 false, i1 true, i1 false) #9
  %68 = tail call i8* @__strcpy_chk(i8* %66, i8* %49, i64 %67) #9
  %69 = load i16, i16* %42, align 8
  %70 = zext i16 %69 to i64
  %71 = load i64, i64* %14, align 8
  %72 = add i64 %71, %70
  store i64 %72, i64* %14, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i64 0, i64 0), i64 %52) #9
  %73 = icmp eq i64 %52, 0
  br i1 %73, label %74, label %94

74:                                               ; preds = %54
  %75 = load i64, i64* %14, align 8
  %76 = load i64, i64* %15, align 8
  %77 = icmp eq i64 %75, %76
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0), i32 245, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0)) #9
  br label %79

79:                                               ; preds = %78, %74, %29
  %80 = load i32, i32* %16, align 8
  %81 = tail call i64 (i64, ...) @syscall(i64 78, i32 %80, i8* %17, i32 4096) #9
  %82 = trunc i64 %81 to i32
  switch i32 %82, label %91 [
    i32 -1, label %83
    i32 0, label %109
  ]

83:                                               ; preds = %79
  %84 = icmp eq i64 %19, 0
  br i1 %84, label %85, label %109

85:                                               ; preds = %83
  %86 = tail call i32* @__errno_location() #10
  %87 = load i32, i32* %86, align 4
  %88 = tail call i32 @NaClXlateErrno(i32 %87) #9
  %89 = sub nsw i32 0, %88
  %90 = sext i32 %89 to i64
  br label %109

91:                                               ; preds = %79
  %92 = shl i64 %81, 32
  %93 = ashr exact i64 %92, 32
  store i64 0, i64* %14, align 8
  store i64 %93, i64* %15, align 8
  br label %100

94:                                               ; preds = %54
  %95 = icmp slt i64 %52, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %94, %48
  %97 = phi i64 [ %52, %94 ], [ -22, %48 ]
  %98 = icmp eq i64 %19, 0
  %99 = select i1 %98, i64 %97, i64 %19
  br label %109

100:                                              ; preds = %94, %91
  %101 = phi i64 [ %52, %94 ], [ 0, %91 ]
  %102 = getelementptr inbounds i8, i8* %21, i64 %101
  %103 = icmp ult i64 %20, %101
  br i1 %103, label %104, label %105

104:                                              ; preds = %100
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0), i32 279, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %105

105:                                              ; preds = %104, %100
  %106 = sub i64 %20, %101
  %107 = add i64 %101, %19
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %109, label %18

109:                                              ; preds = %79, %105, %10, %83, %85, %96
  %110 = phi i64 [ %19, %83 ], [ %90, %85 ], [ %99, %96 ], [ 0, %10 ], [ %19, %79 ], [ %107, %105 ]
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %11) #9
  %111 = trunc i64 %110 to i32
  br label %112

112:                                              ; preds = %6, %109
  %113 = phi i32 [ %111, %109 ], [ -22, %6 ]
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %113) #9
  %114 = sext i32 %113 to i64
  ret i64 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirRewind(%struct.NaClHostDir* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.NaClHostDir* %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %4

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = tail call i64 @lseek64(i32 %6, i64 0, i32 0) #9
  %8 = trunc i64 %7 to i32
  %9 = tail call i32 @NaClXlateErrno(i32 %8) #9
  %10 = sub nsw i32 0, %9
  ret i32 %10
}

; Function Attrs: nounwind
declare i64 @lseek64(i32, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirClose(%struct.NaClHostDir*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.NaClHostDir* %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %4

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0), i32 %6) #9
  %7 = load i32, i32* %5, align 8
  %8 = tail call i32 @close(i32 %7) #9
  store i32 -1, i32* %5, align 8
  %9 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 0
  tail call void @NaClMutexDtor(%struct.NaClMutex* %9) #9
  %10 = icmp eq i32 %8, -1
  br i1 %10, label %11, label %16

11:                                               ; preds = %4
  %12 = tail call i32* @__errno_location() #10
  %13 = load i32, i32* %12, align 4
  %14 = tail call i32 @NaClXlateErrno(i32 %13) #9
  %15 = sub nsw i32 0, %14
  br label %16

16:                                               ; preds = %4, %11
  %17 = phi i32 [ %15, %11 ], [ %8, %4 ]
  ret i32 %17
}

declare void @NaClMutexDtor(%struct.NaClMutex*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirFchdir(%struct.NaClHostDir* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @fchdir(i32 %3) #9
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = tail call i32* @__errno_location() #10
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @NaClXlateErrno(i32 %8) #9
  %10 = sub nsw i32 0, %9
  br label %11

11:                                               ; preds = %1, %6
  %12 = phi i32 [ %10, %6 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind
declare i32 @fchdir(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirFchmod(%struct.NaClHostDir* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @fchmod(i32 %4, i32 %1) #9
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = tail call i32* @__errno_location() #10
  %9 = load i32, i32* %8, align 4
  %10 = tail call i32 @NaClXlateErrno(i32 %9) #9
  %11 = sub nsw i32 0, %10
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind
declare i32 @fchmod(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirFsync(%struct.NaClHostDir* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @fsync(i32 %3) #9
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = tail call i32* @__errno_location() #10
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @NaClXlateErrno(i32 %8) #9
  %10 = sub nsw i32 0, %9
  br label %11

11:                                               ; preds = %1, %6
  %12 = phi i32 [ %10, %6 ], [ 0, %1 ]
  ret i32 %12
}

declare i32 @fsync(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClHostDirFdatasync(%struct.NaClHostDir* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClHostDir, %struct.NaClHostDir* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @fdatasync(i32 %3) #9
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = tail call i32* @__errno_location() #10
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @NaClXlateErrno(i32 %8) #9
  %10 = sub nsw i32 0, %9
  br label %11

11:                                               ; preds = %1, %6
  %12 = phi i32 [ %10, %6 ], [ 0, %1 ]
  ret i32 %12
}

declare i32 @fdatasync(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

declare void @NaClXMutexLock(%struct.NaClMutex*) local_unnamed_addr #2

declare void @NaClXMutexUnlock(%struct.NaClMutex*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
