; ModuleID = '../../v8/src/heap/memory-measurement.cc'
source_filename = "../../v8/src/heap/memory-measurement.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::MeasureMemoryDelegate" = type <{ %"class.v8::MeasureMemoryDelegate", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1132", %"class.v8::internal::Handle.1133", i32, [4 x i8] }>
%"class.v8::MeasureMemoryDelegate" = type { i32 (...)** }
%"class.v8::internal::Handle.1132" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Handle.1133" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.979", i32, i8, i8, i32, i32, %"class.std::__1::vector.985", %"class.std::__1::vector.985", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.992", i64, %"class.std::__1::unordered_map.993", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.975" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"struct.std::__1::pair.956"*, %"struct.std::__1::pair.956"*, %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::pair.956"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.985" = type { %"class.std::__1::__vector_base.986" }
%"class.std::__1::__vector_base.986" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1017", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1042, %union.anon.1044, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1042 = type { i64 }
%union.anon.1044 = type { i64 }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1018", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::vector.1135" = type { %"class.std::__1::__vector_base.1136" }
%"class.std::__1::__vector_base.1136" = type { %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"*, %"class.std::__1::__compressed_pair.1138" }
%"struct.std::__1::pair.1137" = type { %"class.v8::Local.834", i64 }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"struct.std::__1::pair.1137"* }
%"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Factory"*, %"class.v8::internal::Handle", %"class.std::__1::vector.1143", i8, [7 x i8] }>
%"class.v8::internal::Factory" = type { i8 }
%"class.std::__1::vector.1143" = type { %"class.std::__1::__vector_base.1144" }
%"class.std::__1::__vector_base.1144" = type { %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.v8::internal::Handle"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.std::__1::vector.1157" = type { %"class.std::__1::__vector_base.1158" }
%"class.std::__1::__vector_base.1158" = type { %"class.v8::internal::Handle.1133"*, %"class.v8::internal::Handle.1133"*, %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.v8::internal::Handle.1133"* }
%"struct.v8::internal::MemoryMeasurement::Request" = type { %"class.std::__1::unique_ptr.1151", %"class.v8::internal::Handle.1164", %"class.std::__1::vector.90", i64, %"class.v8::base::ElapsedTimer" }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.v8::MeasureMemoryDelegate"* }
%"class.v8::internal::Handle.1164" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::CancelableTask" = type { %"class.v8::internal::Cancelable", %"class.v8::Task" }
%"class.v8::internal::Cancelable" = type { i32 (...)**, %"class.v8::internal::CancelableTaskManager"*, %"struct.std::__1::atomic.1198", i64 }
%"struct.std::__1::atomic.1198" = type { %"struct.std::__1::__atomic_base.1199" }
%"struct.std::__1::__atomic_base.1199" = type { %"struct.std::__1::__cxx_atomic_impl.1200" }
%"struct.std::__1::__cxx_atomic_impl.1200" = type { %"struct.std::__1::__cxx_atomic_base_impl.1201" }
%"struct.std::__1::__cxx_atomic_base_impl.1201" = type { i32 }
%"class.v8::Task" = type { i32 (...)** }
%"class.std::__1::unordered_set.1166" = type { %"class.std::__1::__hash_table.1167" }
%"class.std::__1::__hash_table.1167" = type <{ %"class.std::__1::unique_ptr.1168", %"class.std::__1::__compressed_pair.1178", %"class.std::__1::__compressed_pair.1183", %"class.std::__1::__compressed_pair.1185", [4 x i8] }>
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170", %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.std::__1::__hash_node_base.1171"** }
%"struct.std::__1::__hash_node_base.1171" = type { %"struct.std::__1::__hash_node_base.1171"* }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.std::__1::__bucket_list_deallocator.1173" }
%"class.std::__1::__bucket_list_deallocator.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.std::__1::__hash_node_base.1171" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__hash_node.1252" = type { %"struct.std::__1::__hash_node_base.1171", i64, i64 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.v8::internal::MemoryMeasurement::Request" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i64* }
%"class.std::__1::tuple.1268" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.261", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1213" }
%"struct.std::__1::pair.1213" = type { i64, i64 }
%"class.v8::internal::ExternalString" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }

$_ZNSt3__14listIN2v88internal17MemoryMeasurement7RequestENS_9allocatorIS4_EEE13__move_assignERS7_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

@_ZTVN2v88internal21MeasureMemoryDelegateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::MeasureMemoryDelegate"*)* @_ZN2v88internal21MeasureMemoryDelegateD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::MeasureMemoryDelegate"*)* @_ZN2v88internal21MeasureMemoryDelegateD0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::MeasureMemoryDelegate"*, %"class.v8::Context"*)* @_ZN2v88internal21MeasureMemoryDelegate13ShouldMeasureENS_5LocalINS_7ContextEEE to i8*), i8* bitcast (void (%"class.v8::internal::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)* @_ZN2v88internal21MeasureMemoryDelegate19MeasurementCompleteERKNSt3__16vectorINS2_4pairINS_5LocalINS_7ContextEEEmEENS2_9allocatorIS8_EEEEm to i8*)] }, align 8
@_ZN2v88internal16FLAG_random_seedE = external local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement21ScheduleReportingTaskEvE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZN2v88internal24FLAG_incremental_markingE = external local_unnamed_addr global i8, align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement14ScheduleGCTaskENS4_22MeasureMemoryExecutionEE3$_1FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2v88internal21MeasureMemoryDelegateC1EPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_9JSPromiseEEENS_17MeasureMemoryModeE = hidden unnamed_addr alias void (%"class.v8::internal::MeasureMemoryDelegate"*, %"class.v8::internal::Isolate"*, i64*, i64*, i32), void (%"class.v8::internal::MeasureMemoryDelegate"*, %"class.v8::internal::Isolate"*, i64*, i64*, i32)* @_ZN2v88internal21MeasureMemoryDelegateC2EPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_9JSPromiseEEENS_17MeasureMemoryModeE
@_ZN2v88internal21MeasureMemoryDelegateD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::MeasureMemoryDelegate"*), void (%"class.v8::internal::MeasureMemoryDelegate"*)* @_ZN2v88internal21MeasureMemoryDelegateD2Ev
@_ZN2v88internal17MemoryMeasurementC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::MemoryMeasurement"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::MemoryMeasurement"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal17MemoryMeasurementC2EPNS0_7IsolateE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21MeasureMemoryDelegateC2EPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_9JSPromiseEEENS_17MeasureMemoryModeE(%"class.v8::internal::MeasureMemoryDelegate"* nocapture, %"class.v8::internal::Isolate"*, i64*, i64*, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal21MeasureMemoryDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 4
  %11 = bitcast i64** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store i32 %4, i32* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 36
  %13 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %12, align 8
  %14 = load i64, i64* %2, align 8
  %15 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %13, i64 %14) #6
  store i64* %15, i64** %9, align 8
  %16 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %12, align 8
  %17 = load i64, i64* %3, align 8
  %18 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %16, i64 %17) #6
  store i64* %18, i64** %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21MeasureMemoryDelegateD2Ev(%"class.v8::internal::MeasureMemoryDelegate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal21MeasureMemoryDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %4) #6
  %5 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %6) #6
  ret void
}

declare void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21MeasureMemoryDelegateD0Ev(%"class.v8::internal::MeasureMemoryDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal21MeasureMemoryDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %4) #6
  %5 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %6) #6
  %7 = bitcast %"class.v8::internal::MeasureMemoryDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21MeasureMemoryDelegate13ShouldMeasureENS_5LocalINS_7ContextEEE(%"class.v8::internal::MeasureMemoryDelegate"* nocapture readonly, %"class.v8::Context"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::Context"* %1 to i64*
  %4 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 691
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = load i64, i64* %3, align 8
  %11 = add i64 %10, 691
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = icmp eq i32 %9, %13
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21MeasureMemoryDelegate19MeasurementCompleteERKNSt3__16vectorINS2_4pairINS_5LocalINS_7ContextEEEmEENS2_9allocatorIS8_EEEEm(%"class.v8::internal::MeasureMemoryDelegate"* nocapture readonly, %"class.std::__1::vector.1135"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", align 8
  %5 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = bitcast i64** %5 to %"class.v8::Context"**
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %7) #6
  %8 = getelementptr inbounds %"class.std::__1::vector.1135", %"class.std::__1::vector.1135"* %1, i64 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.1135", %"class.std::__1::vector.1135"* %1, i64 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"** %10, align 8
  %12 = icmp eq %"struct.std::__1::pair.1137"* %9, %11
  br i1 %12, label %51, label %13

13:                                               ; preds = %3
  %14 = ptrtoint %"struct.std::__1::pair.1137"* %9 to i64
  %15 = load i64*, i64** %5, align 8
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = getelementptr %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %11, i64 -1, i32 0, i32 0
  %19 = ptrtoint %"class.v8::Context"** %18 to i64
  %20 = sub i64 %19, %14
  %21 = lshr i64 %20, 4
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 3
  %24 = icmp ult i64 %20, 48
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = sub nsw i64 %22, %23
  br label %113

27:                                               ; preds = %113, %13
  %28 = phi i64 [ undef, %13 ], [ %150, %113 ]
  %29 = phi i64 [ undef, %13 ], [ %156, %113 ]
  %30 = phi i64 [ 0, %13 ], [ %150, %113 ]
  %31 = phi i64 [ 0, %13 ], [ %156, %113 ]
  %32 = phi %"struct.std::__1::pair.1137"* [ %9, %13 ], [ %157, %113 ]
  %33 = icmp eq i64 %23, 0
  br i1 %33, label %51, label %34

34:                                               ; preds = %27, %34
  %35 = phi i64 [ %41, %34 ], [ %30, %27 ]
  %36 = phi i64 [ %47, %34 ], [ %31, %27 ]
  %37 = phi %"struct.std::__1::pair.1137"* [ %48, %34 ], [ %32, %27 ]
  %38 = phi i64 [ %49, %34 ], [ %23, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %37, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %35
  %42 = bitcast %"struct.std::__1::pair.1137"* %37 to i64**
  %43 = load i64*, i64** %42, align 8
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %45, %17
  %47 = select i1 %46, i64 %40, i64 %36
  %48 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %37, i64 1
  %49 = add i64 %38, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %34, !llvm.loop !2

51:                                               ; preds = %27, %34, %3
  %52 = phi i64 [ 0, %3 ], [ %29, %27 ], [ %47, %34 ]
  %53 = phi i64 [ 0, %3 ], [ %28, %27 ], [ %41, %34 ]
  %54 = bitcast %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %54) #6
  %55 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 1
  %56 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %55, align 8
  %57 = bitcast %"class.v8::internal::Isolate"* %56 to %"class.v8::internal::Factory"*
  %58 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %56, %"class.v8::internal::Isolate"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 1
  %60 = bitcast %"class.v8::internal::Factory"** %59 to %"class.v8::internal::Isolate"**
  store %"class.v8::internal::Isolate"* %56, %"class.v8::internal::Isolate"** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast i64** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 33, i1 false) #6
  %64 = load i64, i64* %62, align 8
  %65 = and i64 %64, -4294967296
  %66 = add i64 %64, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = add i64 %70, 19
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %65, %74
  %76 = add i64 %75, 571
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %65, %79
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 4
  %82 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %81, align 8
  %83 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %51
  %85 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %82, i64 %80) #6
  br label %101

86:                                               ; preds = %51
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 31, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %56) #6
  br label %94

94:                                               ; preds = %92, %86
  %95 = phi i64* [ %93, %92 ], [ %88, %86 ]
  %96 = ptrtoint i64* %95 to i64
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  store i64* %98, i64** %87, align 8
  store i64 %80, i64* %95, align 8
  %99 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %59, align 8
  %100 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  br label %101

101:                                              ; preds = %84, %94
  %102 = phi %"class.v8::internal::Factory"* [ %57, %84 ], [ %99, %94 ]
  %103 = phi %"class.v8::internal::Isolate"* [ %56, %84 ], [ %100, %94 ]
  %104 = phi i64* [ %85, %84 ], [ %95, %94 ]
  %105 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %57, i64* %104, i8 zeroext 0) #6
  store i64* %105, i64** %61, align 8
  %106 = add i64 %53, %2
  %107 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %102, i64 3768
  %108 = bitcast %"class.v8::internal::Factory"* %107 to i64*
  %109 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_130MemoryMeasurementResultBuilder9NewResultEmmm(%"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* nonnull %4, i64 %53, i64 %53, i64 %106) #6
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %103, i64* %105, i64* %108, i64* %109, i32 0) #6
  %110 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 4
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %160, label %247

113:                                              ; preds = %113, %25
  %114 = phi i64 [ 0, %25 ], [ %150, %113 ]
  %115 = phi i64 [ 0, %25 ], [ %156, %113 ]
  %116 = phi %"struct.std::__1::pair.1137"* [ %9, %25 ], [ %157, %113 ]
  %117 = phi i64 [ %26, %25 ], [ %158, %113 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, %114
  %121 = bitcast %"struct.std::__1::pair.1137"* %116 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  %124 = trunc i64 %123 to i32
  %125 = icmp eq i32 %124, %17
  %126 = select i1 %125, i64 %119, i64 %115
  %127 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 1
  %128 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 1, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, %120
  %131 = bitcast %"struct.std::__1::pair.1137"* %127 to i64**
  %132 = load i64*, i64** %131, align 8
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %135 = icmp eq i32 %134, %17
  %136 = select i1 %135, i64 %129, i64 %126
  %137 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 2
  %138 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 2, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, %130
  %141 = bitcast %"struct.std::__1::pair.1137"* %137 to i64**
  %142 = load i64*, i64** %141, align 8
  %143 = load i64, i64* %142, align 8
  %144 = trunc i64 %143 to i32
  %145 = icmp eq i32 %144, %17
  %146 = select i1 %145, i64 %139, i64 %136
  %147 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 3
  %148 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 3, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, %140
  %151 = bitcast %"struct.std::__1::pair.1137"* %147 to i64**
  %152 = load i64*, i64** %151, align 8
  %153 = load i64, i64* %152, align 8
  %154 = trunc i64 %153 to i32
  %155 = icmp eq i32 %154, %17
  %156 = select i1 %155, i64 %149, i64 %146
  %157 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %116, i64 4
  %158 = add i64 %117, -4
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %27, label %113

160:                                              ; preds = %101
  %161 = add i64 %52, %2
  %162 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 4
  store i8 1, i8* %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %102, i64 2512
  %164 = bitcast %"class.v8::internal::Factory"* %163 to i64*
  %165 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_130MemoryMeasurementResultBuilder9NewResultEmmm(%"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* nonnull %4, i64 %52, i64 %52, i64 %161) #6
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %103, i64* %105, i64* %164, i64* %165, i32 0) #6
  %166 = load %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"** %8, align 8
  %167 = load %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"** %10, align 8
  %168 = icmp eq %"struct.std::__1::pair.1137"* %166, %167
  br i1 %168, label %247, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 3
  %171 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 3, i32 0, i32 1
  %172 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %173 = bitcast %"class.v8::internal::Handle"** %171 to i64*
  %174 = bitcast %"class.std::__1::vector.1143"* %170 to i64*
  %175 = bitcast %"class.v8::internal::Handle"** %172 to i64*
  br label %176

176:                                              ; preds = %169, %244
  %177 = phi %"struct.std::__1::pair.1137"* [ %166, %169 ], [ %245, %244 ]
  %178 = bitcast %"struct.std::__1::pair.1137"* %177 to i64**
  %179 = load i64*, i64** %178, align 8
  %180 = load i64, i64* %179, align 8
  %181 = load i64*, i64** %5, align 8
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %180 to i32
  %184 = trunc i64 %182 to i32
  %185 = icmp eq i32 %183, %184
  br i1 %185, label %244, label %186

186:                                              ; preds = %176
  %187 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %177, i64 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, %2
  store i8 1, i8* %162, align 8
  %190 = call fastcc i64* @_ZN2v88internal12_GLOBAL__N_130MemoryMeasurementResultBuilder9NewResultEmmm(%"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* nonnull %4, i64 %188, i64 %188, i64 %189) #6
  %191 = ptrtoint i64* %190 to i64
  %192 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %171, align 8
  %193 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %172, align 8
  %194 = icmp ult %"class.v8::internal::Handle"* %192, %193
  %195 = ptrtoint %"class.v8::internal::Handle"* %193 to i64
  br i1 %194, label %196, label %200

196:                                              ; preds = %186
  %197 = bitcast %"class.v8::internal::Handle"* %192 to i64*
  store i64 %191, i64* %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %192, i64 1
  %199 = ptrtoint %"class.v8::internal::Handle"* %198 to i64
  store i64 %199, i64* %173, align 8
  br label %244

200:                                              ; preds = %186
  %201 = ptrtoint %"class.v8::internal::Handle"* %192 to i64
  %202 = load i64, i64* %174, align 8
  %203 = sub i64 %201, %202
  %204 = ashr exact i64 %203, 3
  %205 = add nsw i64 %204, 1
  %206 = icmp ugt i64 %205, 2305843009213693951
  br i1 %206, label %207, label %209

207:                                              ; preds = %200
  %208 = bitcast %"class.std::__1::vector.1143"* %170 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %208) #13
  unreachable

209:                                              ; preds = %200
  %210 = sub i64 %195, %202
  %211 = ashr exact i64 %210, 3
  %212 = icmp ult i64 %211, 1152921504606846975
  br i1 %212, label %213, label %221

213:                                              ; preds = %209
  %214 = ashr exact i64 %210, 2
  %215 = icmp ult i64 %214, %205
  %216 = select i1 %215, i64 %205, i64 %214
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %213
  %219 = icmp ugt i64 %216, 2305843009213693951
  br i1 %219, label %220, label %221

220:                                              ; preds = %218
  tail call void @abort() #13
  unreachable

221:                                              ; preds = %218, %209
  %222 = phi i64 [ %216, %218 ], [ 2305843009213693951, %209 ]
  %223 = shl i64 %222, 3
  %224 = tail call i8* @_Znwm(i64 %223) #12
  %225 = bitcast i8* %224 to %"class.v8::internal::Handle"*
  br label %226

226:                                              ; preds = %221, %213
  %227 = phi i64 [ %222, %221 ], [ 0, %213 ]
  %228 = phi i8* [ %224, %221 ], [ null, %213 ]
  %229 = phi %"class.v8::internal::Handle"* [ %225, %221 ], [ null, %213 ]
  %230 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %229, i64 %204
  %231 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %229, i64 %227
  %232 = ptrtoint %"class.v8::internal::Handle"* %231 to i64
  %233 = bitcast %"class.v8::internal::Handle"* %230 to i64*
  store i64 %191, i64* %233, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %230, i64 1
  %235 = ptrtoint %"class.v8::internal::Handle"* %234 to i64
  %236 = ptrtoint %"class.v8::internal::Handle"* %229 to i64
  %237 = icmp sgt i64 %203, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %226
  %239 = inttoptr i64 %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %239, i64 %203, i1 false) #6
  br label %240

240:                                              ; preds = %238, %226
  store i64 %236, i64* %174, align 8
  store i64 %235, i64* %173, align 8
  store i64 %232, i64* %175, align 8
  %241 = icmp eq i64 %202, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = inttoptr i64 %202 to i8*
  tail call void @_ZdlPv(i8* %243) #12
  br label %244

244:                                              ; preds = %176, %242, %240, %196
  %245 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %177, i64 1
  %246 = icmp eq %"struct.std::__1::pair.1137"* %245, %167
  br i1 %246, label %247, label %176

247:                                              ; preds = %244, %160, %101
  %248 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 4
  %249 = load i8, i8* %248, align 8, !range !4
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %247
  %252 = load i64*, i64** %61, align 8
  br label %330

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 3
  %255 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 3, i32 0, i32 1
  %256 = bitcast %"class.v8::internal::Handle"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.std::__1::vector.1143"* %254 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = sub i64 %257, %259
  %261 = lshr exact i64 %260, 3
  %262 = trunc i64 %261 to i32
  %263 = bitcast %"class.v8::internal::Factory"** %59 to %"class.v8::internal::FactoryBase"**
  %264 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %263, align 8
  %265 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %264, i32 %262, i8 zeroext 0) #6
  %266 = icmp sgt i32 %262, 0
  %267 = bitcast %"class.v8::internal::FactoryBase"* %264 to %"class.v8::internal::Factory"*
  br i1 %266, label %268, label %274

268:                                              ; preds = %253
  %269 = inttoptr i64 %259 to %"class.v8::internal::Handle"*
  %270 = getelementptr inbounds %"class.std::__1::vector.1143", %"class.std::__1::vector.1143"* %254, i64 0, i32 0, i32 0
  %271 = and i64 %261, 4294967295
  br label %286

272:                                              ; preds = %325
  %273 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %59, align 8
  br label %274

274:                                              ; preds = %272, %253
  %275 = phi %"class.v8::internal::Factory"* [ %273, %272 ], [ %267, %253 ]
  %276 = load i64*, i64** %61, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %275, i64 3328
  %278 = bitcast %"class.v8::internal::Factory"* %277 to i64*
  %279 = load i64, i64* %265, align 8
  %280 = add i64 %279, 3
  %281 = inttoptr i64 %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = ashr i32 %282, 1
  %284 = tail call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %275, i64* %265, i8 zeroext 3, i32 %283, i8 zeroext 0) #6
  %285 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %58, align 8
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %285, i64* %276, i64* %278, i64* %284, i32 0) #6
  br label %330

286:                                              ; preds = %328, %268
  %287 = phi %"class.v8::internal::Handle"* [ %269, %268 ], [ %329, %328 ]
  %288 = phi i64 [ 0, %268 ], [ %326, %328 ]
  %289 = load i64, i64* %265, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Handle", %"class.v8::internal::Handle"* %287, i64 %288, i32 0, i32 0
  %291 = load i64*, i64** %290, align 8
  %292 = load i64, i64* %291, align 8
  %293 = trunc i64 %288 to i32
  %294 = shl i32 %293, 2
  %295 = sext i32 %294 to i64
  %296 = add i64 %289, 7
  %297 = add i64 %296, %295
  %298 = inttoptr i64 %297 to i32*
  %299 = trunc i64 %292 to i32
  store atomic volatile i32 %299, i32* %298 monotonic, align 4
  %300 = and i64 %292, 1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %325, label %302

302:                                              ; preds = %286
  %303 = and i64 %289, -262144
  %304 = or i64 %303, 8
  %305 = inttoptr i64 %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = and i64 %306, 262144
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %313, label %309

309:                                              ; preds = %302
  %310 = or i64 %303, 16
  %311 = inttoptr i64 %310 to %"class.v8::internal::Heap"**
  %312 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %311, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %312, i64 %289, i64 %297, i64 %292) #6
  br label %313

313:                                              ; preds = %309, %302
  %314 = and i64 %292, -262144
  %315 = or i64 %314, 8
  %316 = inttoptr i64 %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = and i64 %317, 24
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %325, label %320

320:                                              ; preds = %313
  %321 = load i64, i64* %305, align 8
  %322 = and i64 %321, 24
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %320
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %289, i64 %297, i64 %292) #6
  br label %325

325:                                              ; preds = %324, %320, %313, %286
  %326 = add nuw nsw i64 %288, 1
  %327 = icmp eq i64 %326, %271
  br i1 %327, label %272, label %328

328:                                              ; preds = %325
  %329 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %270, align 8
  br label %286

330:                                              ; preds = %251, %274
  %331 = phi i64* [ %252, %251 ], [ %276, %274 ]
  %332 = getelementptr inbounds %"class.v8::internal::MeasureMemoryDelegate", %"class.v8::internal::MeasureMemoryDelegate"* %0, i64 0, i32 2, i32 0, i32 0
  %333 = load i64*, i64** %332, align 8
  %334 = tail call i64* @_ZN2v88internal9JSPromise7ResolveENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %333, i64* %331) #6
  %335 = icmp eq i64* %334, null
  br i1 %335, label %336, label %337, !prof !5

336:                                              ; preds = %330
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #13
  unreachable

337:                                              ; preds = %330
  %338 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 3, i32 0, i32 0
  %339 = load %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"** %338, align 8
  %340 = icmp eq %"class.v8::internal::Handle"* %339, null
  br i1 %340, label %346, label %341

341:                                              ; preds = %337
  %342 = ptrtoint %"class.v8::internal::Handle"* %339 to i64
  %343 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %4, i64 0, i32 3, i32 0, i32 1
  %344 = bitcast %"class.v8::internal::Handle"** %343 to i64*
  store i64 %342, i64* %344, align 8
  %345 = bitcast %"class.v8::internal::Handle"* %339 to i8*
  tail call void @_ZdlPv(i8* %345) #12
  br label %346

346:                                              ; preds = %337, %341
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #6
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %7) #6
  ret void
}

declare i64* @_ZN2v88internal9JSPromise7ResolveENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17MemoryMeasurementC2EPNS0_7IsolateE(%"class.v8::internal::MemoryMeasurement"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %3, %"struct.std::__1::__list_node_base"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %3, %"struct.std::__1::__list_node_base"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %12, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %12, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 3
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 4
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 5
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 6
  store i8 0, i8* %20, align 2
  %21 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 7
  tail call void @_ZN2v84base21RandomNumberGeneratorC1Ev(%"class.v8::base::RandomNumberGenerator"* %21) #6
  %22 = load i32, i32* @_ZN2v88internal16FLAG_random_seedE, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %2
  %25 = sext i32 %22 to i64
  tail call void @_ZN2v84base21RandomNumberGenerator7SetSeedEl(%"class.v8::base::RandomNumberGenerator"* %21, i64 %25) #6
  br label %26

26:                                               ; preds = %2, %24
  ret void
}

declare void @_ZN2v84base21RandomNumberGeneratorC1Ev(%"class.v8::base::RandomNumberGenerator"*) unnamed_addr #2

declare void @_ZN2v84base21RandomNumberGenerator7SetSeedEl(%"class.v8::base::RandomNumberGenerator"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17MemoryMeasurement14EnqueueRequestENSt3__110unique_ptrINS_21MeasureMemoryDelegateENS2_14default_deleteIS4_EEEENS_22MeasureMemoryExecutionENS2_6vectorINS0_6HandleINS0_13NativeContextEEENS2_9allocatorISC_EEEE(%"class.v8::internal::MemoryMeasurement"*, %"class.v8::MeasureMemoryDelegate"*, i32, %"class.std::__1::vector.1157"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.v8::internal::MemoryMeasurement::Request", align 8
  %6 = ptrtoint %"class.v8::MeasureMemoryDelegate"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.1157", %"class.std::__1::vector.1157"* %3, i64 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::Handle.1133"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1157"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 3
  %16 = bitcast %"class.v8::internal::Isolate"** %15 to %"class.v8::internal::FactoryBase"**
  %17 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %16, align 8
  %18 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %17, i32 %14, i8 zeroext 0) #6
  %19 = icmp sgt i32 %14, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::vector.1157", %"class.std::__1::vector.1157"* %3, i64 0, i32 0, i32 0
  %22 = and i64 %13, 4294967295
  br label %100

23:                                               ; preds = %147, %4
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 36
  %26 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %25, align 8
  %27 = load i64, i64* %18, align 8
  %28 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %26, i64 %27) #6
  %29 = bitcast %"struct.v8::internal::MemoryMeasurement::Request"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %29) #6
  %30 = bitcast %"struct.v8::internal::MemoryMeasurement::Request"* %5 to i64*
  store i64 %6, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 1, i32 0, i32 0
  store i64* %28, i64** %31, align 8
  %32 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 2
  %33 = shl i64 %12, 29
  %34 = ashr exact i64 %33, 32
  %35 = bitcast %"class.std::__1::vector.90"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #6
  %36 = icmp eq i64 %33, 0
  %37 = ptrtoint i64* %28 to i64
  br i1 %36, label %59, label %38

38:                                               ; preds = %23
  %39 = icmp ugt i64 %34, 2305843009213693951
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector.90"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #13
  unreachable

42:                                               ; preds = %38
  %43 = ashr exact i64 %33, 29
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to i64*
  %46 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 2, i32 0, i32 1
  %47 = bitcast %"class.std::__1::vector.90"* %32 to i8**
  store i8* %44, i8** %47, align 8
  %48 = getelementptr inbounds i64, i64* %45, i64 %34
  %49 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64* %48, i64** %49, align 8
  %50 = bitcast i64** %46 to i64*
  %51 = ptrtoint i8* %44 to i64
  %52 = add nsw i64 %34, -1
  %53 = getelementptr i64, i64* %45, i64 %52
  %54 = ptrtoint i64* %53 to i64
  %55 = sub i64 8, %51
  %56 = add i64 %55, %54
  %57 = and i64 %56, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 %57, i1 false) #6
  %58 = ptrtoint i64* %48 to i64
  store i64 %58, i64* %50, align 8
  br label %59

59:                                               ; preds = %23, %42
  %60 = phi i64 [ %58, %42 ], [ 0, %23 ]
  %61 = phi i64 [ %51, %42 ], [ 0, %23 ]
  %62 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 3
  %63 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 0, i64* %62, align 8
  %64 = tail call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #6
  store i64 %64, i64* %63, align 8
  %65 = tail call i8* @_Znwm(i64 72) #12, !noalias !6
  %66 = bitcast i8* %65 to %"struct.std::__1::__list_node_base"**
  %67 = getelementptr inbounds i8, i8* %65, i64 16
  %68 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::MeasureMemoryDelegate"* null, %"class.v8::MeasureMemoryDelegate"** %68, align 8
  %69 = bitcast i8* %67 to i64*
  store i64 %6, i64* %69, align 8
  %70 = getelementptr inbounds i8, i8* %65, i64 24
  %71 = bitcast i8* %70 to i64*
  store i64 %37, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %65, i64 32
  %73 = bitcast i8* %72 to i64*
  store i64 %61, i64* %73, align 8
  %74 = getelementptr inbounds i8, i8* %65, i64 40
  %75 = bitcast i8* %74 to i64*
  store i64 %60, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %65, i64 48
  %77 = bitcast i8* %76 to i64*
  store i64 %60, i64* %77, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #6
  %78 = getelementptr inbounds i8, i8* %65, i64 56
  %79 = bitcast i64* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false) #6
  %80 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds i8, i8* %65, i64 8
  %82 = bitcast i8* %81 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %80, %"struct.std::__1::__list_node_base"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %83, align 8
  store %"struct.std::__1::__list_node_base"* %84, %"struct.std::__1::__list_node_base"** %66, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %84, i64 0, i32 1
  %86 = bitcast %"struct.std::__1::__list_node_base"** %85 to i8**
  store i8* %65, i8** %86, align 8
  %87 = bitcast %"class.v8::internal::MemoryMeasurement"* %0 to i8**
  store i8* %65, i8** %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %88, align 8
  tail call void @_ZN2v88internal17MemoryMeasurement14ScheduleGCTaskENS_22MeasureMemoryExecutionE(%"class.v8::internal::MemoryMeasurement"* %0, i32 %2)
  %91 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 2, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = icmp eq i64* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %59
  %95 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %5, i64 0, i32 2, i32 0, i32 1
  %96 = bitcast i64** %95 to i64*
  %97 = ptrtoint i64* %92 to i64
  store i64 %97, i64* %96, align 8
  %98 = bitcast i64* %92 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %59, %94
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %29) #6
  ret i1 true

100:                                              ; preds = %147, %20
  %101 = phi i64 [ 0, %20 ], [ %148, %147 ]
  %102 = load i64, i64* %18, align 8
  %103 = load %"class.v8::internal::Handle.1133"*, %"class.v8::internal::Handle.1133"** %21, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Handle.1133", %"class.v8::internal::Handle.1133"* %103, i64 %101, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = load i64, i64* %105, align 8
  %107 = trunc i64 %101 to i32
  %108 = shl i32 %107, 2
  %109 = sext i32 %108 to i64
  %110 = add nsw i64 %109, 7
  %111 = add i64 %110, %102
  %112 = inttoptr i64 %111 to i32*
  %113 = trunc i64 %106 to i32
  %114 = or i32 %113, 2
  store atomic volatile i32 %114, i32* %112 monotonic, align 4
  %115 = and i64 %106, 1
  %116 = icmp ne i64 %115, 0
  %117 = icmp ne i32 %114, 3
  %118 = and i1 %116, %117
  br i1 %118, label %119, label %147

119:                                              ; preds = %100
  %120 = and i64 %102, -262144
  %121 = or i64 %120, 8
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 262144
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %119
  %127 = and i64 %106, -3
  %128 = or i64 %120, 16
  %129 = inttoptr i64 %128 to %"class.v8::internal::Heap"**
  %130 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %129, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %130, i64 %102, i64 %111, i64 %127) #6
  br label %131

131:                                              ; preds = %126, %119
  %132 = and i64 %106, -3
  %133 = and i64 %106, -262144
  %134 = or i64 %133, 8
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 24
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %131
  %140 = and i64 %102, -262144
  %141 = or i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 24
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %139
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %102, i64 %111, i64 %132) #6
  br label %147

147:                                              ; preds = %100, %131, %139, %146
  %148 = add nuw nsw i64 %101, 1
  %149 = icmp eq i64 %148, %22
  br i1 %149, label %23, label %100
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17MemoryMeasurement14ScheduleGCTaskENS_22MeasureMemoryExecutionE(%"class.v8::internal::MemoryMeasurement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = icmp eq i32 %1, 2
  br i1 %4, label %70, label %5

5:                                                ; preds = %2
  %6 = icmp eq i32 %1, 1
  %7 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 5
  %9 = select i1 %6, i8* %7, i8* %8
  %10 = load i8, i8* %9, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %70

12:                                               ; preds = %5
  br i1 %6, label %13, label %14

13:                                               ; preds = %12
  store i8 1, i8* %7, align 2
  br label %15

14:                                               ; preds = %12
  store i8 1, i8* %8, align 1
  br label %15

15:                                               ; preds = %13, %14
  %16 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %17 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 3
  %18 = bitcast %"class.v8::internal::Isolate"** %17 to %"class.v8::Isolate"**
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %20 = bitcast %"class.v8::Platform"* %16 to { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)***
  %21 = load { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)**, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*** %20, align 8
  %22 = getelementptr inbounds { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)** %21, i64 6
  %23 = load { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)** %22, align 8
  %24 = tail call { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %23(%"class.v8::Platform"* %16, %"class.v8::Isolate"* %19) #6
  %25 = extractvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %24, 0
  %26 = extractvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %24, 1
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %28 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement14ScheduleGCTaskENS6_22MeasureMemoryExecutionEE3$_1S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %28, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement14ScheduleGCTaskENS4_22MeasureMemoryExecutionEE3$_1FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %29, align 8
  %30 = bitcast %"class.std::__1::function"* %3 to %"class.v8::internal::MemoryMeasurement"**
  store %"class.v8::internal::MemoryMeasurement"* %0, %"class.v8::internal::MemoryMeasurement"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast [8 x i8]* %31 to i32*
  store i32 %1, i32* %32, align 8
  %33 = call %"class.v8::internal::CancelableTask"* @_ZN2v88internal18MakeCancelableTaskEPNS0_7IsolateENSt3__18functionIFvvEEE(%"class.v8::internal::Isolate"* %27, %"class.std::__1::function"* nonnull %3) #6
  %34 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %34, i64 0, i32 1
  %36 = load void (i8*)*, void (i8*)** %35, align 8
  %37 = icmp eq void (i8*)* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %15
  %39 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void %36(i8* %40) #6
  br label %41

41:                                               ; preds = %15, %38
  %42 = icmp eq %"class.v8::internal::CancelableTask"* %33, null
  %43 = getelementptr inbounds %"class.v8::internal::CancelableTask", %"class.v8::internal::CancelableTask"* %33, i64 0, i32 1
  %44 = select i1 %42, %"class.v8::Task"* null, %"class.v8::Task"* %43
  br i1 %6, label %45, label %49

45:                                               ; preds = %41
  %46 = bitcast %"class.v8::TaskRunner"* %25 to void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)***
  %47 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)**, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)*** %46, align 8
  %48 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)*, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)** %47, align 8
  call void %48(%"class.v8::TaskRunner"* %25, %"class.v8::Task"* %44) #6
  br label %58

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 7
  %51 = call i32 @_ZN2v84base21RandomNumberGenerator7NextIntEi(%"class.v8::base::RandomNumberGenerator"* %50, i32 10) #6
  %52 = add nsw i32 %51, 10
  %53 = sitofp i32 %52 to double
  %54 = bitcast %"class.v8::TaskRunner"* %25 to void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)***
  %55 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)**, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)*, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)** %55, i64 2
  %57 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)*, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)** %56, align 8
  call void %57(%"class.v8::TaskRunner"* %25, %"class.v8::Task"* %44, double %53) #6
  br label %58

58:                                               ; preds = %45, %49
  %59 = icmp eq %"class.std::__1::__shared_weak_count"* %26, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %26, i64 0, i32 0, i32 1
  %62 = atomicrmw add i64* %61, i64 -1 acq_rel
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %26, i64 0, i32 0
  %66 = bitcast %"class.std::__1::__shared_weak_count"* %26 to void (%"class.std::__1::__shared_count"*)***
  %67 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %67, i64 2
  %69 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %68, align 8
  call void %69(%"class.std::__1::__shared_count"* %65) #6
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %26) #6
  br label %70

70:                                               ; preds = %5, %64, %60, %58, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17MemoryMeasurement15StartProcessingEv(%"class.std::__1::vector.90"* noalias sret, %"class.v8::internal::MemoryMeasurement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unordered_set.1166", align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::vector.90"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #6
  br label %130

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %1, i64 0, i32 0
  %12 = bitcast %"class.std::__1::unordered_set.1166"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.1166", %"class.std::__1::unordered_set.1166"* %3, i64 0, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.1185"* %13 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #6
  store i32 1065353216, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %1, i64 0, i32 1
  tail call void @_ZNSt3__14listIN2v88internal17MemoryMeasurement7RequestENS_9allocatorIS4_EEE13__move_assignERS7_NS_17integral_constantIbLb1EEE(%"class.std::__1::list"* %15, %"class.std::__1::list"* dereferenceable(24) %11) #6
  %16 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %15, i64 0, i32 0, i32 0
  %18 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = inttoptr i64 %19 to %"struct.std::__1::__list_node_base"*
  %21 = icmp eq %"struct.std::__1::__list_node_base"* %17, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = bitcast %"class.std::__1::vector.90"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #6
  br label %76

24:                                               ; preds = %10
  %25 = bitcast i64* %4 to i8*
  %26 = getelementptr inbounds %"class.std::__1::unordered_set.1166", %"class.std::__1::unordered_set.1166"* %3, i64 0, i32 0
  br label %83

27:                                               ; preds = %94
  %28 = getelementptr inbounds %"class.std::__1::unordered_set.1166", %"class.std::__1::unordered_set.1166"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::unordered_set.1166", %"class.std::__1::unordered_set.1166"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::vector.90"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #6
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %29, null
  br i1 %32, label %76, label %33

33:                                               ; preds = %27
  %34 = ptrtoint %"struct.std::__1::__hash_node_base.1171"* %29 to i64
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ %38, %35 ], [ 0, %33 ]
  %37 = phi i64 [ %40, %35 ], [ %34, %33 ]
  %38 = add nuw nsw i64 %36, 1
  %39 = inttoptr i64 %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %35

42:                                               ; preds = %35
  %43 = icmp ugt i64 %36, 2305843009213693950
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector.90"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #13
  unreachable

46:                                               ; preds = %42
  %47 = shl i64 %38, 3
  %48 = call i8* @_Znwm(i64 %47) #12
  %49 = bitcast i8* %48 to i64*
  %50 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 1
  %51 = bitcast i64** %50 to i8**
  store i8* %48, i8** %51, align 8
  %52 = bitcast %"class.std::__1::vector.90"* %0 to i8**
  store i8* %48, i8** %52, align 8
  %53 = getelementptr inbounds i64, i64* %49, i64 %38
  %54 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %53, i64** %54, align 8
  br label %55

55:                                               ; preds = %55, %46
  %56 = phi i64* [ %63, %55 ], [ %49, %46 ]
  %57 = phi i64 [ %62, %55 ], [ %34, %46 ]
  %58 = inttoptr i64 %57 to %"struct.std::__1::__hash_node.1252"*
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node.1252", %"struct.std::__1::__hash_node.1252"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %56, align 8
  %61 = inttoptr i64 %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i64, i64* %56, i64 1
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %65, label %55

65:                                               ; preds = %55
  %66 = bitcast i64** %50 to i64*
  %67 = ptrtoint i64* %63 to i64
  store i64 %67, i64* %66, align 8
  %68 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %30, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %65, %70
  %71 = phi %"struct.std::__1::__hash_node_base.1171"* [ %73, %70 ], [ %68, %65 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %71, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %72, align 8
  %74 = bitcast %"struct.std::__1::__hash_node_base.1171"* %71 to i8*
  call void @_ZdlPv(i8* %74) #12
  %75 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %73, null
  br i1 %75, label %76, label %70

76:                                               ; preds = %70, %22, %27, %65
  %77 = getelementptr inbounds %"class.std::__1::unordered_set.1166", %"class.std::__1::unordered_set.1166"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %77, align 8
  store %"struct.std::__1::__hash_node_base.1171"** null, %"struct.std::__1::__hash_node_base.1171"*** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.1171"** %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = bitcast %"struct.std::__1::__hash_node_base.1171"** %78 to i8*
  call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #6
  br label %130

83:                                               ; preds = %24, %94
  %84 = phi %"struct.std::__1::__list_node_base"* [ %20, %24 ], [ %98, %94 ]
  %85 = phi i64 [ %19, %24 ], [ %97, %94 ]
  %86 = inttoptr i64 %85 to %"struct.std::__1::__list_node"*
  %87 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %86, i64 0, i32 1, i32 1, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, 1
  br i1 %93, label %100, label %94

94:                                               ; preds = %121, %83
  %95 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %84, i64 0, i32 1
  %96 = bitcast %"struct.std::__1::__list_node_base"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = inttoptr i64 %97 to %"struct.std::__1::__list_node_base"*
  %99 = icmp eq %"struct.std::__1::__list_node_base"* %17, %98
  br i1 %99, label %27, label %83

100:                                              ; preds = %83, %121
  %101 = phi i64 [ %122, %121 ], [ %89, %83 ]
  %102 = phi i64 [ %123, %121 ], [ 0, %83 ]
  %103 = trunc i64 %102 to i32
  %104 = shl i32 %103, 2
  %105 = sext i32 %104 to i64
  %106 = add i64 %101, 7
  %107 = add i64 %106, %105
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = and i64 %110, 1
  %112 = icmp ne i64 %111, 0
  %113 = icmp ne i32 %109, 3
  %114 = and i1 %113, %112
  br i1 %114, label %115, label %121

115:                                              ; preds = %100
  %116 = and i64 %101, -4294967296
  %117 = and i64 %110, 4294967293
  %118 = or i64 %117, %116
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  store i64 %118, i64* %4, align 8
  %119 = call { %"struct.std::__1::__hash_node_base.1171"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1167"* nonnull %26, i64* nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  %120 = load i64, i64* %88, align 8
  br label %121

121:                                              ; preds = %100, %115
  %122 = phi i64 [ %101, %100 ], [ %120, %115 ]
  %123 = add nuw nsw i64 %102, 1
  %124 = add i64 %122, 3
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = ashr i32 %126, 1
  %128 = sext i32 %127 to i64
  %129 = icmp slt i64 %123, %128
  br i1 %129, label %100, label %94

130:                                              ; preds = %82, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17MemoryMeasurement16FinishProcessingERKNS0_18NativeContextStatsE(%"class.v8::internal::MemoryMeasurement"*, %"class.v8::internal::NativeContextStats"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %252, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::__list_node_base"** %7 to %"struct.std::__1::__list_node"**
  %9 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %11, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::list"* %11 to i8**
  %15 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  br label %16

16:                                               ; preds = %6, %134
  %17 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %17, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.v8::internal::MemoryMeasurement::Request", %"struct.v8::internal::MemoryMeasurement::Request"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"struct.v8::internal::MemoryMeasurement::Request"* %18 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  store %"class.v8::MeasureMemoryDelegate"* null, %"class.v8::MeasureMemoryDelegate"** %19, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %17, i64 0, i32 1, i32 2
  %23 = bitcast %"class.std::__1::vector.90"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %17, i64 0, i32 1, i32 2, i32 0, i32 1
  %26 = bitcast i64** %25 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  %28 = bitcast %"class.std::__1::vector.90"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #6
  %29 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %17, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 0, i32 1
  %33 = bitcast %"struct.std::__1::__list_node_base"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 0, i32 0
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %36, i64 0, i32 1
  %38 = bitcast %"struct.std::__1::__list_node_base"** %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base"* %31 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"struct.std::__1::__list_node_base"** %32 to i64**
  %42 = load i64*, i64** %41, align 8
  store i64 %40, i64* %42, align 8
  %43 = load i64, i64* %3, align 8
  %44 = add i64 %43, -1
  store i64 %44, i64* %3, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 2
  %47 = bitcast %"struct.std::__1::__list_node_base"* %46 to i64**
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %16
  %51 = ptrtoint i64* %48 to i64
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 2, i32 1
  %53 = bitcast %"struct.std::__1::__list_node_base"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i64* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %50, %16
  %56 = bitcast %"struct.std::__1::__list_node_base"* %45 to %"class.v8::MeasureMemoryDelegate"**
  %57 = load %"class.v8::MeasureMemoryDelegate"*, %"class.v8::MeasureMemoryDelegate"** %56, align 8
  store %"class.v8::MeasureMemoryDelegate"* null, %"class.v8::MeasureMemoryDelegate"** %56, align 8
  %58 = icmp eq %"class.v8::MeasureMemoryDelegate"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.v8::MeasureMemoryDelegate"* %57 to void (%"class.v8::MeasureMemoryDelegate"*)***
  %61 = load void (%"class.v8::MeasureMemoryDelegate"*)**, void (%"class.v8::MeasureMemoryDelegate"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %61, i64 1
  %63 = load void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %62, align 8
  tail call void %63(%"class.v8::MeasureMemoryDelegate"* nonnull %57) #6
  br label %64

64:                                               ; preds = %55, %59
  %65 = bitcast %"struct.std::__1::__list_node_base"* %31 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  %66 = extractelement <2 x i64> %27, i32 0
  %67 = sub i64 %66, %24
  %68 = lshr exact i64 %67, 3
  %69 = trunc i64 %68 to i32
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %64
  %72 = extractelement <2 x i64> %21, i32 1
  %73 = inttoptr i64 %72 to i64*
  %74 = inttoptr i64 %24 to i64*
  %75 = and i64 %68, 4294967295
  br label %157

76:                                               ; preds = %248, %64
  %77 = load i64, i64* %9, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %134, label %79

79:                                               ; preds = %76
  %80 = tail call i64 @llvm.ctpop.i64(i64 %77) #6, !range !9
  %81 = icmp ugt i64 %80, 1
  %82 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %10, align 8
  %83 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.261"* %83, null
  br i1 %84, label %134, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %83, i64 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base.261"* %87, null
  br i1 %88, label %134, label %89

89:                                               ; preds = %85
  %90 = add i64 %77, -1
  br i1 %81, label %91, label %111

91:                                               ; preds = %89, %107
  %92 = phi %"struct.std::__1::__hash_node_base.261"* [ %109, %107 ], [ %87, %89 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %92, i64 1
  %94 = bitcast %"struct.std::__1::__hash_node_base.261"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = icmp ult i64 %95, %77
  br i1 %98, label %134, label %99

99:                                               ; preds = %97
  %100 = urem i64 %95, %77
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %107, label %134

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %92, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.261"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %129, label %107

107:                                              ; preds = %102, %99
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %92, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.261"* %109, null
  br i1 %110, label %134, label %91

111:                                              ; preds = %89, %125
  %112 = phi %"struct.std::__1::__hash_node_base.261"* [ %127, %125 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %112, i64 1
  %114 = bitcast %"struct.std::__1::__hash_node_base.261"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = and i64 %115, %90
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %125, label %134

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %112, i64 2
  %122 = bitcast %"struct.std::__1::__hash_node_base.261"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %120, %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %112, i64 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.261"* %127, null
  br i1 %128, label %134, label %111

129:                                              ; preds = %120, %102
  %130 = phi %"struct.std::__1::__hash_node_base.261"* [ %92, %102 ], [ %112, %120 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %130, i64 3
  %132 = bitcast %"struct.std::__1::__hash_node_base.261"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  br label %134

134:                                              ; preds = %117, %125, %97, %99, %107, %76, %79, %85, %129
  %135 = phi i64 [ %133, %129 ], [ 0, %79 ], [ 0, %76 ], [ 0, %85 ], [ 0, %107 ], [ 0, %99 ], [ 0, %97 ], [ 0, %125 ], [ 0, %117 ]
  %136 = tail call i8* @_Znwm(i64 72) #12, !noalias !10
  %137 = bitcast i8* %136 to %"struct.std::__1::__list_node_base"**
  %138 = getelementptr inbounds i8, i8* %136, i64 16
  %139 = bitcast i8* %138 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %139, align 8
  %140 = getelementptr inbounds i8, i8* %136, i64 32
  %141 = bitcast i8* %140 to i64*
  store i64 %24, i64* %141, align 8
  %142 = getelementptr inbounds i8, i8* %136, i64 40
  %143 = bitcast i8* %142 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %143, align 8
  %144 = getelementptr inbounds i8, i8* %136, i64 56
  %145 = bitcast i8* %144 to i64*
  store i64 %135, i64* %145, align 8
  %146 = getelementptr inbounds i8, i8* %136, i64 64
  %147 = bitcast i8* %146 to i64*
  store i64 %30, i64* %147, align 8
  %148 = getelementptr inbounds i8, i8* %136, i64 8
  %149 = bitcast i8* %148 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %12, %"struct.std::__1::__list_node_base"** %149, align 8
  %150 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  store %"struct.std::__1::__list_node_base"* %150, %"struct.std::__1::__list_node_base"** %137, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %150, i64 0, i32 1
  %152 = bitcast %"struct.std::__1::__list_node_base"** %151 to i8**
  store i8* %136, i8** %152, align 8
  store i8* %136, i8** %14, align 8
  %153 = load i64, i64* %15, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %15, align 8
  %155 = load i64, i64* %3, align 8
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %251, label %16

157:                                              ; preds = %248, %71
  %158 = phi i64 [ 0, %71 ], [ %249, %248 ]
  %159 = load i64, i64* %73, align 8
  %160 = trunc i64 %158 to i32
  %161 = shl i32 %160, 2
  %162 = sext i32 %161 to i64
  %163 = add nsw i64 %162, 7
  %164 = add i64 %163, %159
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = and i64 %167, 1
  %169 = icmp ne i64 %168, 0
  %170 = icmp ne i32 %166, 3
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %248

172:                                              ; preds = %157
  %173 = and i64 %159, -4294967296
  %174 = and i64 %167, 4294967293
  %175 = or i64 %174, %173
  %176 = load i64, i64* %9, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %245, label %178

178:                                              ; preds = %172
  %179 = tail call i64 @llvm.ctpop.i64(i64 %176) #6, !range !9
  %180 = icmp ugt i64 %179, 1
  br i1 %180, label %184, label %181

181:                                              ; preds = %178
  %182 = add i64 %176, -1
  %183 = and i64 %182, %175
  br label %188

184:                                              ; preds = %178
  %185 = icmp ugt i64 %176, %175
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = urem i64 %175, %176
  br label %188

188:                                              ; preds = %186, %184, %181
  %189 = phi i64 [ %183, %181 ], [ %187, %186 ], [ %175, %184 ]
  %190 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %10, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %190, i64 %189
  %192 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.261"* %192, null
  br i1 %193, label %245, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %192, i64 0, i32 0
  %196 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %195, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.261"* %196, null
  br i1 %197, label %245, label %198

198:                                              ; preds = %194
  %199 = add i64 %176, -1
  br i1 %180, label %200, label %222

200:                                              ; preds = %198, %218
  %201 = phi %"struct.std::__1::__hash_node_base.261"* [ %220, %218 ], [ %196, %198 ]
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %201, i64 1
  %203 = bitcast %"struct.std::__1::__hash_node_base.261"* %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = icmp eq i64 %204, %175
  br i1 %205, label %213, label %206

206:                                              ; preds = %200
  %207 = icmp ult i64 %204, %176
  br i1 %207, label %210, label %208

208:                                              ; preds = %206
  %209 = urem i64 %204, %176
  br label %210

210:                                              ; preds = %208, %206
  %211 = phi i64 [ %209, %208 ], [ %204, %206 ]
  %212 = icmp eq i64 %211, %189
  br i1 %212, label %218, label %245

213:                                              ; preds = %200
  %214 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %201, i64 2
  %215 = bitcast %"struct.std::__1::__hash_node_base.261"* %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = icmp eq i64 %216, %175
  br i1 %217, label %240, label %218

218:                                              ; preds = %213, %210
  %219 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %201, i64 0, i32 0
  %220 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %219, align 8
  %221 = icmp eq %"struct.std::__1::__hash_node_base.261"* %220, null
  br i1 %221, label %245, label %200

222:                                              ; preds = %198, %236
  %223 = phi %"struct.std::__1::__hash_node_base.261"* [ %238, %236 ], [ %196, %198 ]
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %223, i64 1
  %225 = bitcast %"struct.std::__1::__hash_node_base.261"* %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = icmp eq i64 %226, %175
  br i1 %227, label %231, label %228

228:                                              ; preds = %222
  %229 = and i64 %226, %199
  %230 = icmp eq i64 %229, %189
  br i1 %230, label %236, label %245

231:                                              ; preds = %222
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %223, i64 2
  %233 = bitcast %"struct.std::__1::__hash_node_base.261"* %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = icmp eq i64 %234, %175
  br i1 %235, label %240, label %236

236:                                              ; preds = %231, %228
  %237 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %223, i64 0, i32 0
  %238 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %237, align 8
  %239 = icmp eq %"struct.std::__1::__hash_node_base.261"* %238, null
  br i1 %239, label %245, label %222

240:                                              ; preds = %231, %213
  %241 = phi %"struct.std::__1::__hash_node_base.261"* [ %201, %213 ], [ %223, %231 ]
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %241, i64 3
  %243 = bitcast %"struct.std::__1::__hash_node_base.261"* %242 to i64*
  %244 = load i64, i64* %243, align 8
  br label %245

245:                                              ; preds = %228, %236, %210, %218, %172, %188, %194, %240
  %246 = phi i64 [ %244, %240 ], [ 0, %188 ], [ 0, %172 ], [ 0, %194 ], [ 0, %218 ], [ 0, %210 ], [ 0, %236 ], [ 0, %228 ]
  %247 = getelementptr inbounds i64, i64* %74, i64 %158
  store i64 %246, i64* %247, align 8
  br label %248

248:                                              ; preds = %157, %245
  %249 = add nuw nsw i64 %158, 1
  %250 = icmp eq i64 %249, %75
  br i1 %250, label %76, label %157

251:                                              ; preds = %134
  tail call void @_ZN2v88internal17MemoryMeasurement21ScheduleReportingTaskEv(%"class.v8::internal::MemoryMeasurement"* %0)
  br label %252

252:                                              ; preds = %2, %251
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17MemoryMeasurement21ScheduleReportingTaskEv(%"class.v8::internal::MemoryMeasurement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %49

6:                                                ; preds = %1
  store i8 1, i8* %3, align 8
  %7 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #6
  %8 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 3
  %9 = bitcast %"class.v8::internal::Isolate"** %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::Platform"* %7 to { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)***
  %12 = load { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)**, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*** %11, align 8
  %13 = getelementptr inbounds { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)** %12, i64 6
  %14 = load { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)*, { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.v8::Platform"*, %"class.v8::Isolate"*)** %13, align 8
  %15 = tail call { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %14(%"class.v8::Platform"* %7, %"class.v8::Isolate"* %10) #6
  %16 = extractvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %15, 0
  %17 = extractvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %15, 1
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %19 = ptrtoint %"class.v8::internal::MemoryMeasurement"* %0 to i64
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement21ScheduleReportingTaskEvE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement21ScheduleReportingTaskEvE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %21, align 8
  %22 = bitcast %"class.std::__1::function"* %2 to i64*
  store i64 %19, i64* %22, align 8
  %23 = call %"class.v8::internal::CancelableTask"* @_ZN2v88internal18MakeCancelableTaskEPNS0_7IsolateENSt3__18functionIFvvEEE(%"class.v8::internal::Isolate"* %18, %"class.std::__1::function"* nonnull %2) #6
  %24 = icmp eq %"class.v8::internal::CancelableTask"* %23, null
  %25 = getelementptr inbounds %"class.v8::internal::CancelableTask", %"class.v8::internal::CancelableTask"* %23, i64 0, i32 1
  %26 = select i1 %24, %"class.v8::Task"* null, %"class.v8::Task"* %25
  %27 = bitcast %"class.v8::TaskRunner"* %16 to void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)***
  %28 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)**, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)*** %27, align 8
  %29 = load void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)*, void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)** %28, align 8
  call void %29(%"class.v8::TaskRunner"* %16, %"class.v8::Task"* %26) #6
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %6
  %35 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void %32(i8* %36) #6
  br label %37

37:                                               ; preds = %6, %34
  %38 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %41 = atomicrmw add i64* %40, i64 -1 acq_rel
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %45 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %46 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %46, i64 2
  %48 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %47, align 8
  call void %48(%"class.std::__1::__shared_count"* %44) #6
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #6
  br label %49

49:                                               ; preds = %43, %39, %37, %1
  ret void
}

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

declare %"class.v8::internal::CancelableTask"* @_ZN2v88internal18MakeCancelableTaskEPNS0_7IsolateENSt3__18functionIFvvEEE(%"class.v8::internal::Isolate"*, %"class.std::__1::function"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17MemoryMeasurement15IsGCTaskPendingENS_22MeasureMemoryExecutionE(%"class.v8::internal::MemoryMeasurement"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 5
  %6 = select i1 %3, i8* %4, i8* %5
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal17MemoryMeasurement16SetGCTaskPendingENS_22MeasureMemoryExecutionE(%"class.v8::internal::MemoryMeasurement"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 6
  store i8 1, i8* %5, align 2
  br label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 5
  store i8 1, i8* %7, align 1
  br label %8

8:                                                ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal17MemoryMeasurement13SetGCTaskDoneENS_22MeasureMemoryExecutionE(%"class.v8::internal::MemoryMeasurement"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 6
  store i8 0, i8* %5, align 2
  br label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 5
  store i8 0, i8* %7, align 1
  br label %8

8:                                                ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal17MemoryMeasurement24NextGCTaskDelayInSecondsEv(%"class.v8::internal::MemoryMeasurement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 7
  %3 = tail call i32 @_ZN2v84base21RandomNumberGenerator7NextIntEi(%"class.v8::base::RandomNumberGenerator"* %2, i32 10) #6
  %4 = add nsw i32 %3, 10
  ret i32 %4
}

declare i32 @_ZN2v84base21RandomNumberGenerator7NextIntEi(%"class.v8::base::RandomNumberGenerator"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17MemoryMeasurement13ReportResultsEv(%"class.v8::internal::MemoryMeasurement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1135", align 8
  %3 = alloca %"class.v8::base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %237, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::__list_node_base"** %8 to %"struct.std::__1::__list_node"**
  %10 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::vector.1135"* %2 to i8*
  %12 = getelementptr inbounds %"class.std::__1::vector.1135", %"class.std::__1::vector.1135"* %2, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1135", %"class.std::__1::vector.1135"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.std::__1::pair.1137"** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.1135"* %2 to i64*
  %16 = bitcast %"struct.std::__1::pair.1137"** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.1135", %"class.std::__1::vector.1135"* %2, i64 0, i32 0, i32 0
  %18 = bitcast %"class.v8::base::TimeDelta"* %3 to i8*
  %19 = getelementptr inbounds %"class.v8::base::TimeDelta", %"class.v8::base::TimeDelta"* %3, i64 0, i32 0
  br label %20

20:                                               ; preds = %7, %129
  %21 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.v8::MeasureMemoryDelegate"*, %"class.v8::MeasureMemoryDelegate"** %22, align 8
  store %"class.v8::MeasureMemoryDelegate"* null, %"class.v8::MeasureMemoryDelegate"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 1, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 2
  %27 = bitcast %"class.std::__1::vector.90"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.90"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #6
  %30 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 0
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64*
  store i64 %37, i64* %41, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base"* %34 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64**
  %45 = load i64*, i64** %44, align 8
  store i64 %43, i64* %45, align 8
  %46 = load i64, i64* %4, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %4, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 1
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 2
  %50 = bitcast %"struct.std::__1::__list_node_base"* %49 to i64**
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %20
  %54 = ptrtoint i64* %51 to i64
  %55 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 2, i32 1
  %56 = bitcast %"struct.std::__1::__list_node_base"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast i64* %51 to i8*
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %53, %20
  %59 = bitcast %"struct.std::__1::__list_node_base"* %48 to %"class.v8::MeasureMemoryDelegate"**
  %60 = load %"class.v8::MeasureMemoryDelegate"*, %"class.v8::MeasureMemoryDelegate"** %59, align 8
  store %"class.v8::MeasureMemoryDelegate"* null, %"class.v8::MeasureMemoryDelegate"** %59, align 8
  %61 = icmp eq %"class.v8::MeasureMemoryDelegate"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.v8::MeasureMemoryDelegate"* %60 to void (%"class.v8::MeasureMemoryDelegate"*)***
  %64 = load void (%"class.v8::MeasureMemoryDelegate"*)**, void (%"class.v8::MeasureMemoryDelegate"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %64, i64 1
  %66 = load void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %65, align 8
  call void %66(%"class.v8::MeasureMemoryDelegate"* nonnull %60) #6
  br label %67

67:                                               ; preds = %58, %62
  %68 = bitcast %"struct.std::__1::__list_node_base"* %34 to i8*
  call void @_ZdlPv(i8* %68) #12
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31
  %71 = bitcast %"struct.v8::internal::HandleScopeData"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 31, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #6
  %78 = load i64, i64* %25, align 8
  %79 = add i64 %78, 3
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %67
  %84 = inttoptr i64 %28 to i64*
  br label %132

85:                                               ; preds = %228, %67
  %86 = bitcast %"class.v8::MeasureMemoryDelegate"* %23 to void (%"class.v8::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)***
  %87 = load void (%"class.v8::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)**, void (%"class.v8::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.v8::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)*, void (%"class.v8::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)** %87, i64 3
  %89 = load void (%"class.v8::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)*, void (%"class.v8::MeasureMemoryDelegate"*, %"class.std::__1::vector.1135"*, i64)** %88, align 8
  call void %89(%"class.v8::MeasureMemoryDelegate"* %23, %"class.std::__1::vector.1135"* nonnull dereferenceable(24) %2, i64 %31) #6
  %90 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %90, i64 0, i32 14, i32 0
  %92 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %92, i64 0, i32 81, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %94 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #6
  %95 = sub nsw i64 %94, %33
  store i64 %95, i64* %19, align 8
  %96 = call i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"* nonnull %3) #6
  %97 = trunc i64 %96 to i32
  call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %93, i32 %97) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %98 = load %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"** %17, align 8
  %99 = icmp eq %"struct.std::__1::pair.1137"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %85
  %101 = ptrtoint %"struct.std::__1::pair.1137"* %98 to i64
  store i64 %101, i64* %14, align 8
  %102 = bitcast %"struct.std::__1::pair.1137"* %98 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %85, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6
  %104 = icmp eq %"class.v8::internal::Isolate"* %69, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %103
  %106 = inttoptr i64 %72 to i64*
  %107 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %70, i64 0, i32 0
  %108 = load i64*, i64** %107, align 8
  store i64 %72, i64* %71, align 8
  %109 = load i32, i32* %75, align 8
  %110 = add nsw i32 %109, -1
  store i32 %110, i32* %75, align 8
  %111 = load i64*, i64** %73, align 8
  %112 = icmp eq i64* %111, %74
  br i1 %112, label %115, label %113

113:                                              ; preds = %105
  store i64* %74, i64** %73, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %69) #6
  %114 = load i64*, i64** %107, align 8
  br label %115

115:                                              ; preds = %113, %105
  %116 = phi i64* [ %114, %113 ], [ %106, %105 ]
  %117 = phi i64* [ %74, %113 ], [ %108, %105 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %116, i64* %117) #6
  br label %118

118:                                              ; preds = %103, %115
  %119 = icmp eq i64 %28, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %28 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %120, %118
  %123 = icmp eq %"class.v8::MeasureMemoryDelegate"* %23, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %122
  %125 = bitcast %"class.v8::MeasureMemoryDelegate"* %23 to void (%"class.v8::MeasureMemoryDelegate"*)***
  %126 = load void (%"class.v8::MeasureMemoryDelegate"*)**, void (%"class.v8::MeasureMemoryDelegate"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %126, i64 1
  %128 = load void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %127, align 8
  call void %128(%"class.v8::MeasureMemoryDelegate"* nonnull %23) #6
  br label %129

129:                                              ; preds = %122, %124
  %130 = load i64, i64* %4, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %237, label %20

132:                                              ; preds = %83, %228
  %133 = phi i64 [ 0, %83 ], [ %229, %228 ]
  %134 = phi i64 [ %78, %83 ], [ %230, %228 ]
  %135 = trunc i64 %133 to i32
  %136 = shl i32 %135, 2
  %137 = sext i32 %136 to i64
  %138 = add i64 %134, 7
  %139 = add i64 %138, %137
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = zext i32 %141 to i64
  %143 = and i64 %142, 1
  %144 = icmp ne i64 %143, 0
  %145 = icmp ne i32 %141, 3
  %146 = and i1 %145, %144
  br i1 %146, label %147, label %228

147:                                              ; preds = %132
  %148 = and i64 %134, -4294967296
  %149 = and i64 %142, 4294967293
  %150 = or i64 %149, %148
  %151 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 31, i32 4
  %153 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %152, align 8
  %154 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %147
  %156 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %153, i64 %150) #6
  br label %170

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 31, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 31, i32 1
  %161 = load i64*, i64** %160, align 8
  %162 = icmp eq i64* %159, %161
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %151) #6
  br label %165

165:                                              ; preds = %163, %157
  %166 = phi i64* [ %164, %163 ], [ %159, %157 ]
  %167 = ptrtoint i64* %166 to i64
  %168 = add i64 %167, 8
  %169 = inttoptr i64 %168 to i64*
  store i64* %169, i64** %158, align 8
  store i64 %150, i64* %166, align 8
  br label %170

170:                                              ; preds = %155, %165
  %171 = phi i64* [ %156, %155 ], [ %166, %165 ]
  %172 = getelementptr inbounds i64, i64* %84, i64 %133
  %173 = load i64, i64* %172, align 8
  %174 = load %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"** %12, align 8
  %175 = load %"struct.std::__1::pair.1137"*, %"struct.std::__1::pair.1137"** %13, align 8
  %176 = icmp ult %"struct.std::__1::pair.1137"* %174, %175
  %177 = ptrtoint %"struct.std::__1::pair.1137"* %175 to i64
  br i1 %176, label %178, label %183

178:                                              ; preds = %170
  %179 = bitcast %"struct.std::__1::pair.1137"* %174 to i64**
  store i64* %171, i64** %179, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %174, i64 0, i32 1
  store i64 %173, i64* %180, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %174, i64 1
  %182 = ptrtoint %"struct.std::__1::pair.1137"* %181 to i64
  store i64 %182, i64* %14, align 8
  br label %228

183:                                              ; preds = %170
  %184 = ptrtoint %"struct.std::__1::pair.1137"* %174 to i64
  %185 = load i64, i64* %15, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 4
  %188 = add nsw i64 %187, 1
  %189 = icmp ugt i64 %188, 1152921504606846975
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = bitcast %"class.std::__1::vector.1135"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %191) #13
  unreachable

192:                                              ; preds = %183
  %193 = sub i64 %177, %185
  %194 = ashr exact i64 %193, 4
  %195 = icmp ult i64 %194, 576460752303423487
  br i1 %195, label %196, label %204

196:                                              ; preds = %192
  %197 = ashr exact i64 %193, 3
  %198 = icmp ult i64 %197, %188
  %199 = select i1 %198, i64 %188, i64 %197
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %196
  %202 = icmp ugt i64 %199, 1152921504606846975
  br i1 %202, label %203, label %204

203:                                              ; preds = %201
  call void @abort() #13
  unreachable

204:                                              ; preds = %201, %192
  %205 = phi i64 [ %199, %201 ], [ 1152921504606846975, %192 ]
  %206 = shl i64 %205, 4
  %207 = call i8* @_Znwm(i64 %206) #12
  %208 = bitcast i8* %207 to %"struct.std::__1::pair.1137"*
  br label %209

209:                                              ; preds = %204, %196
  %210 = phi i64 [ %205, %204 ], [ 0, %196 ]
  %211 = phi i8* [ %207, %204 ], [ null, %196 ]
  %212 = phi %"struct.std::__1::pair.1137"* [ %208, %204 ], [ null, %196 ]
  %213 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %212, i64 %187
  %214 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %212, i64 %210
  %215 = ptrtoint %"struct.std::__1::pair.1137"* %214 to i64
  %216 = bitcast %"struct.std::__1::pair.1137"* %213 to i64**
  store i64* %171, i64** %216, align 8
  %217 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %212, i64 %187, i32 1
  store i64 %173, i64* %217, align 8
  %218 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %213, i64 1
  %219 = ptrtoint %"struct.std::__1::pair.1137"* %218 to i64
  %220 = ptrtoint %"struct.std::__1::pair.1137"* %212 to i64
  %221 = icmp sgt i64 %186, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %209
  %223 = inttoptr i64 %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %223, i64 %186, i1 false) #6
  br label %224

224:                                              ; preds = %222, %209
  store i64 %220, i64* %15, align 8
  store i64 %219, i64* %14, align 8
  store i64 %215, i64* %16, align 8
  %225 = icmp eq i64 %185, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %224
  %227 = inttoptr i64 %185 to i8*
  call void @_ZdlPv(i8* %227) #12
  br label %228

228:                                              ; preds = %226, %224, %178, %132
  %229 = add nuw nsw i64 %133, 1
  %230 = load i64, i64* %25, align 8
  %231 = add i64 %230, 3
  %232 = inttoptr i64 %231 to i32*
  %233 = load i32, i32* %232, align 4
  %234 = ashr i32 %233, 1
  %235 = sext i32 %234 to i64
  %236 = icmp slt i64 %229, %235
  br i1 %236, label %132, label %85

237:                                              ; preds = %129, %1
  ret void
}

declare void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"*, i32) local_unnamed_addr #2

declare i64 @_ZNK2v84base9TimeDelta14InMillisecondsEv(%"class.v8::base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::MeasureMemoryDelegate"* @_ZN2v88internal17MemoryMeasurement15DefaultDelegateEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_9JSPromiseEEENS_17MeasureMemoryModeE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 40) #12
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal21MeasureMemoryDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to %"class.v8::internal::Isolate"**
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to i64**
  %11 = getelementptr inbounds i8, i8* %5, i64 24
  %12 = bitcast i8* %11 to i64**
  %13 = getelementptr inbounds i8, i8* %5, i64 32
  %14 = bitcast i8* %13 to i32*
  store i32 %3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 36
  %16 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %15, align 8
  %17 = load i64, i64* %1, align 8
  %18 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %16, i64 %17) #6
  store i64* %18, i64** %12, align 8
  %19 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %15, align 8
  %20 = load i64, i64* %2, align 8
  %21 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %19, i64 %20) #6
  store i64* %21, i64** %10, align 8
  %22 = bitcast i8* %5 to %"class.v8::MeasureMemoryDelegate"*
  ret %"class.v8::MeasureMemoryDelegate"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21NativeContextInferrer15InferForContextEPNS0_7IsolateENS0_7ContextEPm(%"class.v8::internal::NativeContextInferrer"* nocapture readnone, %"class.v8::internal::Isolate"* nocapture readonly, i64, i64* nocapture) local_unnamed_addr #0 align 2 {
  %5 = and i64 %2, -4294967296
  %6 = add i64 %2, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, 19
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 acquire, align 4
  %16 = and i64 %12, 4294967295
  %17 = icmp eq i64 %16, 0
  tail call void @llvm.assume(i1 %17) #6
  %18 = zext i32 %15 to i64
  %19 = or i64 %12, %18
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %4
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %12, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 144
  br i1 %31, label %32, label %33

32:                                               ; preds = %22
  store i64 %19, i64* %3, align 8
  br label %33

33:                                               ; preds = %4, %22, %32
  %34 = phi i1 [ true, %32 ], [ false, %22 ], [ false, %4 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21NativeContextInferrer18InferForJSFunctionEPNS0_7IsolateENS0_10JSFunctionEPm(%"class.v8::internal::NativeContextInferrer"* nocapture readnone, %"class.v8::internal::Isolate"* nocapture readonly, i64, i64* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %2, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = and i64 %6, 4294967295
  %11 = icmp eq i64 %10, 0
  tail call void @llvm.assume(i1 %11) #6
  %12 = zext i32 %9 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %52, label %15

15:                                               ; preds = %4
  %16 = or i64 %6, %12
  %17 = add i64 %16, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %6, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = add i16 %24, -137
  %26 = icmp ult i16 %25, 10
  br i1 %26, label %27, label %52

27:                                               ; preds = %15
  %28 = load atomic i32, i32* %18 acquire, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %6, %29
  %31 = load i64, i64* %5, align 8
  %32 = add i64 %30, 19
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 acquire, align 4
  %35 = and i64 %31, 4294967295
  %36 = icmp eq i64 %35, 0
  tail call void @llvm.assume(i1 %36) #6
  %37 = zext i32 %34 to i64
  %38 = or i64 %31, %37
  %39 = and i64 %37, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %27
  %42 = add i64 %38, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %31, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 144
  br i1 %50, label %51, label %52

51:                                               ; preds = %41
  store i64 %38, i64* %3, align 8
  br label %52

52:                                               ; preds = %51, %41, %27, %15, %4
  %53 = phi i1 [ false, %4 ], [ false, %15 ], [ true, %51 ], [ false, %41 ], [ false, %27 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal21NativeContextInferrer16InferForJSObjectEPNS0_7IsolateENS0_3MapENS0_8JSObjectEPm(%"class.v8::internal::NativeContextInferrer"* nocapture readnone, %"class.v8::internal::Isolate"* nocapture readonly, i64, i64, i64* nocapture) local_unnamed_addr #0 align 2 {
  %6 = add i64 %2, 7
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = icmp eq i16 %8, 189
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  br i1 %9, label %12, label %33

12:                                               ; preds = %5
  %13 = add i64 %3, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %11, 4294967295
  %17 = icmp eq i64 %16, 0
  tail call void @llvm.assume(i1 %17) #6
  %18 = zext i32 %15 to i64
  %19 = or i64 %11, %18
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %12
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %11, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 144
  br i1 %31, label %32, label %33

32:                                               ; preds = %22
  store i64 %19, i64* %4, align 8
  br label %122

33:                                               ; preds = %5, %12, %22
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %35 = add i64 %2, 19
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i64 %11, 4294967295
  %39 = icmp eq i64 %38, 0
  tail call void @llvm.assume(i1 %39) #6
  %40 = zext i32 %37 to i64
  %41 = or i64 %11, %40
  %42 = and i64 %40, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %62, label %44

44:                                               ; preds = %33
  %45 = add i64 %41, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %11, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp eq i16 %52, 172
  br i1 %53, label %54, label %62

54:                                               ; preds = %44
  %55 = add i64 %41, 19
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %11, %58
  %60 = and i64 %58, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %124

62:                                               ; preds = %44, %54, %124, %134, %142, %152, %160, %33
  %63 = phi i64 [ %41, %33 ], [ %41, %44 ], [ %59, %54 ], [ %59, %124 ], [ %139, %134 ], [ %139, %142 ], [ %157, %152 ], [ %157, %160 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %122, label %66

66:                                               ; preds = %62
  %67 = and i64 %63, -4294967296
  %68 = add i64 %63, -1
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %67, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = add i16 %75, -1059
  %77 = icmp ult i16 %76, 15
  br i1 %77, label %78, label %122

78:                                               ; preds = %66
  %79 = add i64 %63, 15
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = zext i32 %81 to i64
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %122, label %85

85:                                               ; preds = %78
  %86 = or i64 %11, %82
  %87 = add i64 %86, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %11, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = add i16 %94, -137
  %96 = icmp ult i16 %95, 10
  br i1 %96, label %97, label %122

97:                                               ; preds = %85
  %98 = load atomic i32, i32* %88 acquire, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %11, %99
  %101 = load i64, i64* %34, align 8
  %102 = add i64 %100, 19
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 acquire, align 4
  %105 = and i64 %101, 4294967295
  %106 = icmp eq i64 %105, 0
  tail call void @llvm.assume(i1 %106) #6
  %107 = zext i32 %104 to i64
  %108 = or i64 %101, %107
  %109 = and i64 %107, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %122, label %111

111:                                              ; preds = %97
  %112 = add i64 %108, -1
  %113 = inttoptr i64 %112 to i32*
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %101, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load atomic i16, i16* %118 monotonic, align 2
  %120 = icmp eq i16 %119, 144
  br i1 %120, label %121, label %122

121:                                              ; preds = %111
  store i64 %108, i64* %4, align 8
  br label %122

122:                                              ; preds = %160, %62, %66, %78, %85, %97, %111, %121, %32
  %123 = phi i1 [ true, %32 ], [ false, %66 ], [ false, %78 ], [ false, %85 ], [ true, %121 ], [ false, %111 ], [ false, %97 ], [ false, %62 ], [ false, %160 ]
  ret i1 %123

124:                                              ; preds = %54
  %125 = add i64 %59, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %11, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp eq i16 %132, 172
  br i1 %133, label %134, label %62

134:                                              ; preds = %124
  %135 = add i64 %59, 19
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i64
  %139 = or i64 %11, %138
  %140 = and i64 %138, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %62, label %142

142:                                              ; preds = %134
  %143 = add i64 %139, -1
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %11, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 172
  br i1 %151, label %152, label %62

152:                                              ; preds = %142
  %153 = add i64 %139, 19
  %154 = inttoptr i64 %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %11, %156
  %158 = and i64 %156, 1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %62, label %160

160:                                              ; preds = %152
  %161 = add i64 %157, -1
  %162 = inttoptr i64 %161 to i32*
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %11, %164
  %166 = add i64 %165, 7
  %167 = inttoptr i64 %166 to i16*
  %168 = load atomic i16, i16* %167 monotonic, align 2
  %169 = icmp eq i16 %168, 172
  br i1 %169, label %122, label %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18NativeContextStats5ClearEv(%"class.v8::internal::NativeContextStats"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node_base.261"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %9
  %10 = phi %"struct.std::__1::__hash_node_base.261"* [ %12, %9 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %10, i64 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %11, align 8
  %13 = bitcast %"struct.std::__1::__hash_node_base.261"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  %14 = icmp eq %"struct.std::__1::__hash_node_base.261"* %12, null
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %5
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %6, align 8
  %16 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = add i64 %17, -1
  %22 = and i64 %17, 3
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = sub i64 %17, %22
  br label %38

26:                                               ; preds = %38, %19
  %27 = phi i64 [ 0, %19 ], [ %52, %38 ]
  %28 = icmp eq i64 %22, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26, %29
  %30 = phi i64 [ %34, %29 ], [ %27, %26 ]
  %31 = phi i64 [ %35, %29 ], [ %22, %26 ]
  %32 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %20, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %32, i64 %30
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %33, align 8
  %34 = add nuw i64 %30, 1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !13

37:                                               ; preds = %26, %29, %15
  store i64 0, i64* %2, align 8
  br label %55

38:                                               ; preds = %38, %24
  %39 = phi i64 [ 0, %24 ], [ %52, %38 ]
  %40 = phi i64 [ %25, %24 ], [ %53, %38 ]
  %41 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %20, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %41, i64 %39
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %42, align 8
  %43 = or i64 %39, 1
  %44 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %20, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %44, i64 %43
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %45, align 8
  %46 = or i64 %39, 2
  %47 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %20, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %47, i64 %46
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %48, align 8
  %49 = or i64 %39, 3
  %50 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %20, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %51, align 8
  %52 = add nuw i64 %39, 4
  %53 = add i64 %40, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %26, label %38

55:                                               ; preds = %1, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18NativeContextStats5MergeERKS1_(%"class.v8::internal::NativeContextStats"*, %"class.v8::internal::NativeContextStats"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1268", align 1
  %5 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.std::__1::__hash_node_base.261"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::tuple.1268", %"class.std::__1::tuple.1268"* %4, i64 0, i32 0
  br label %15

14:                                               ; preds = %15, %2
  ret void

15:                                               ; preds = %9, %15
  %16 = phi i64 [ %7, %9 ], [ %28, %15 ]
  %17 = inttoptr i64 %16 to %"struct.std::__1::__hash_node"*
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  store i64* %20, i64** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #6
  %21 = call { %"struct.std::__1::__hash_node_base.261"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.257"* %10, i64* dereferenceable(8) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1268"* nonnull dereferenceable(1) %4) #6
  %22 = extractvalue { %"struct.std::__1::__hash_node_base.261"*, i8 } %21, 0
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %22, i64 3
  %24 = bitcast %"struct.std::__1::__hash_node_base.261"* %23 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %19
  store i64 %26, i64* %24, align 8
  %27 = inttoptr i64 %16 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18NativeContextStats21IncrementExternalSizeEmNS0_3MapENS0_10HeapObjectE(%"class.v8::internal::NativeContextStats"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1268", align 1
  %7 = alloca i64, align 8
  %8 = alloca %"class.v8::internal::ExternalString", align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %2, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp eq i16 %11, 1086
  br i1 %12, label %13, label %22

13:                                               ; preds = %4
  %14 = add i64 %3, 27
  %15 = inttoptr i64 %14 to i8**
  %16 = load i8*, i8** %15, align 1
  %17 = icmp eq i8* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = add i64 %3, 11
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 1
  br label %27

22:                                               ; preds = %4
  %23 = bitcast %"class.v8::internal::ExternalString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.v8::internal::ExternalString", %"class.v8::internal::ExternalString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %24, align 8
  %25 = call i32 @_ZNK2v88internal14ExternalString19ExternalPayloadSizeEv(%"class.v8::internal::ExternalString"* nonnull %8) #6
  %26 = sext i32 %25 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br label %27

27:                                               ; preds = %18, %13, %22
  %28 = phi i64 [ %26, %22 ], [ %21, %18 ], [ 0, %13 ]
  %29 = getelementptr inbounds %"class.v8::internal::NativeContextStats", %"class.v8::internal::NativeContextStats"* %0, i64 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* %7, i64** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::tuple.1268", %"class.std::__1::tuple.1268"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #6
  %33 = call { %"struct.std::__1::__hash_node_base.261"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.257"* %29, i64* nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1268"* nonnull dereferenceable(1) %6) #6
  %34 = extractvalue { %"struct.std::__1::__hash_node_base.261"*, i8 } %33, 0
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %34, i64 3
  %36 = bitcast %"struct.std::__1::__hash_node_base.261"* %35 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #6
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %28
  store i64 %38, i64* %36, align 8
  ret void
}

declare i32 @_ZNK2v88internal14ExternalString19ExternalPayloadSizeEv(%"class.v8::internal::ExternalString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #6

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64* @_ZN2v88internal12_GLOBAL__N_130MemoryMeasurementResultBuilder9NewResultEmmm(%"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* nocapture readonly, i64, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder", %"class.v8::internal::(anonymous namespace)::MemoryMeasurementResultBuilder"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 19
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %11, %20
  %22 = add i64 %21, 571
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %11, %25
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 4
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %4
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %26) #6
  br label %45

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %6) #6
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i64* [ %39, %38 ], [ %34, %32 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %33, align 8
  store i64 %26, i64* %41, align 8
  br label %45

45:                                               ; preds = %30, %40
  %46 = phi i64* [ %31, %30 ], [ %41, %40 ]
  %47 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %8, i64* %46, i8 zeroext 0) #6
  %48 = bitcast %"class.v8::internal::Factory"** %7 to %"class.v8::internal::FactoryBase"**
  %49 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %48, align 8
  %50 = icmp ult i64 %1, 1073741824
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = shl i64 %1, 1
  %53 = bitcast %"class.v8::internal::FactoryBase"* %49 to %"class.v8::internal::Isolate"*
  %54 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %49, i64 45608
  %55 = bitcast %"class.v8::internal::FactoryBase"* %54 to %"class.v8::internal::CanonicalHandleScope"**
  %56 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %55, align 8
  %57 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %51
  %59 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %56, i64 %52) #6
  br label %81

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %49, i64 45584
  %62 = bitcast %"class.v8::internal::FactoryBase"* %61 to i64**
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %49, i64 45592
  %65 = bitcast %"class.v8::internal::FactoryBase"* %64 to i64**
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %63, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %60
  %69 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %53) #6
  br label %70

70:                                               ; preds = %68, %60
  %71 = phi i64* [ %69, %68 ], [ %63, %60 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %62, align 8
  store i64 %52, i64* %71, align 8
  br label %81

75:                                               ; preds = %45
  %76 = uitofp i64 %1 to double
  %77 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %49) #6
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 3
  %80 = inttoptr i64 %79 to double*
  store double %76, double* %80, align 1
  br label %81

81:                                               ; preds = %58, %70, %75
  %82 = phi i64* [ %77, %75 ], [ %59, %58 ], [ %71, %70 ]
  %83 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %7, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %83, i64 3000
  %85 = bitcast %"class.v8::internal::Factory"* %84 to i64*
  %86 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %86, i64* %47, i64* %85, i64* %82, i32 0) #6
  %87 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %48, align 8
  %88 = icmp ult i64 %2, 1073741824
  br i1 %88, label %89, label %113

89:                                               ; preds = %81
  %90 = shl i64 %2, 1
  %91 = bitcast %"class.v8::internal::FactoryBase"* %87 to %"class.v8::internal::Isolate"*
  %92 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %87, i64 45608
  %93 = bitcast %"class.v8::internal::FactoryBase"* %92 to %"class.v8::internal::CanonicalHandleScope"**
  %94 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %93, align 8
  %95 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %89
  %97 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %94, i64 %90) #6
  br label %119

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %87, i64 45584
  %100 = bitcast %"class.v8::internal::FactoryBase"* %99 to i64**
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %87, i64 45592
  %103 = bitcast %"class.v8::internal::FactoryBase"* %102 to i64**
  %104 = load i64*, i64** %103, align 8
  %105 = icmp eq i64* %101, %104
  br i1 %105, label %106, label %108

106:                                              ; preds = %98
  %107 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %91) #6
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i64* [ %107, %106 ], [ %101, %98 ]
  %110 = ptrtoint i64* %109 to i64
  %111 = add i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  store i64* %112, i64** %100, align 8
  store i64 %90, i64* %109, align 8
  br label %119

113:                                              ; preds = %81
  %114 = uitofp i64 %2 to double
  %115 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %87) #6
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 3
  %118 = inttoptr i64 %117 to double*
  store double %114, double* %118, align 1
  br label %119

119:                                              ; preds = %113, %108, %96
  %120 = phi i64* [ %115, %113 ], [ %97, %96 ], [ %109, %108 ]
  %121 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %48, align 8
  %122 = icmp ult i64 %3, 1073741824
  br i1 %122, label %123, label %147

123:                                              ; preds = %119
  %124 = shl i64 %3, 1
  %125 = bitcast %"class.v8::internal::FactoryBase"* %121 to %"class.v8::internal::Isolate"*
  %126 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %121, i64 45608
  %127 = bitcast %"class.v8::internal::FactoryBase"* %126 to %"class.v8::internal::CanonicalHandleScope"**
  %128 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %127, align 8
  %129 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %123
  %131 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %128, i64 %124) #6
  br label %153

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %121, i64 45584
  %134 = bitcast %"class.v8::internal::FactoryBase"* %133 to i64**
  %135 = load i64*, i64** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %121, i64 45592
  %137 = bitcast %"class.v8::internal::FactoryBase"* %136 to i64**
  %138 = load i64*, i64** %137, align 8
  %139 = icmp eq i64* %135, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %132
  %141 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %125) #6
  br label %142

142:                                              ; preds = %140, %132
  %143 = phi i64* [ %141, %140 ], [ %135, %132 ]
  %144 = ptrtoint i64* %143 to i64
  %145 = add i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  store i64* %146, i64** %134, align 8
  store i64 %124, i64* %143, align 8
  br label %153

147:                                              ; preds = %119
  %148 = uitofp i64 %3 to double
  %149 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %121) #6
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 3
  %152 = inttoptr i64 %151 to double*
  store double %148, double* %152, align 1
  br label %153

153:                                              ; preds = %147, %142, %130
  %154 = phi i64* [ %149, %147 ], [ %131, %130 ], [ %143, %142 ]
  %155 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %48, align 8
  %156 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %155, i32 2, i8 zeroext 0) #6
  %157 = load i64, i64* %156, align 8
  %158 = load i64, i64* %120, align 8
  %159 = add i64 %157, 7
  %160 = inttoptr i64 %159 to i32*
  %161 = trunc i64 %158 to i32
  store atomic volatile i32 %161, i32* %160 monotonic, align 4
  %162 = and i64 %158, 1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %187, label %164

164:                                              ; preds = %153
  %165 = and i64 %157, -262144
  %166 = or i64 %165, 8
  %167 = inttoptr i64 %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = and i64 %168, 262144
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %175, label %171

171:                                              ; preds = %164
  %172 = or i64 %165, 16
  %173 = inttoptr i64 %172 to %"class.v8::internal::Heap"**
  %174 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %173, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %174, i64 %157, i64 %159, i64 %158) #6
  br label %175

175:                                              ; preds = %171, %164
  %176 = and i64 %158, -262144
  %177 = or i64 %176, 8
  %178 = inttoptr i64 %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = and i64 %179, 24
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %187, label %182

182:                                              ; preds = %175
  %183 = load i64, i64* %167, align 8
  %184 = and i64 %183, 24
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %182
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %157, i64 %159, i64 %158) #6
  br label %187

187:                                              ; preds = %186, %182, %175, %153
  %188 = load i64, i64* %156, align 8
  %189 = load i64, i64* %154, align 8
  %190 = add i64 %188, 11
  %191 = inttoptr i64 %190 to i32*
  %192 = trunc i64 %189 to i32
  store atomic volatile i32 %192, i32* %191 monotonic, align 4
  %193 = and i64 %189, 1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %218, label %195

195:                                              ; preds = %187
  %196 = and i64 %188, -262144
  %197 = or i64 %196, 8
  %198 = inttoptr i64 %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = and i64 %199, 262144
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %195
  %203 = or i64 %196, 16
  %204 = inttoptr i64 %203 to %"class.v8::internal::Heap"**
  %205 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %204, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %205, i64 %188, i64 %190, i64 %189) #6
  br label %206

206:                                              ; preds = %202, %195
  %207 = and i64 %189, -262144
  %208 = or i64 %207, 8
  %209 = inttoptr i64 %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, 24
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %218, label %213

213:                                              ; preds = %206
  %214 = load i64, i64* %198, align 8
  %215 = and i64 %214, 24
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %213
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %188, i64 %190, i64 %189) #6
  br label %218

218:                                              ; preds = %187, %206, %213, %217
  %219 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %7, align 8
  %220 = load i64, i64* %156, align 8
  %221 = add i64 %220, 3
  %222 = inttoptr i64 %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = ashr i32 %223, 1
  %225 = tail call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %219, i64* %156, i8 zeroext 3, i32 %224, i8 zeroext 0) #6
  %226 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %7, align 8
  %227 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %226, i64 3008
  %228 = bitcast %"class.v8::internal::Factory"* %227 to i64*
  %229 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  tail call void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %229, i64* %47, i64* %228, i64* %225, i32 0) #6
  ret i64* %47
}

declare void @_ZN2v88internal8JSObject11AddPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #7

declare i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN2v88internal17MemoryMeasurement7RequestENS_9allocatorIS4_EEE13__move_assignERS7_NS_17integral_constantIbLb1EEE(%"class.std::__1::list"*, %"class.std::__1::list"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %50, label %24

24:                                               ; preds = %6, %47
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %47 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 2
  %30 = bitcast %"struct.std::__1::__list_node_base"* %29 to i64**
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %24
  %34 = ptrtoint i64* %31 to i64
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 2, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i64* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %33, %24
  %39 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"class.v8::MeasureMemoryDelegate"**
  %40 = load %"class.v8::MeasureMemoryDelegate"*, %"class.v8::MeasureMemoryDelegate"** %39, align 8
  store %"class.v8::MeasureMemoryDelegate"* null, %"class.v8::MeasureMemoryDelegate"** %39, align 8
  %41 = icmp eq %"class.v8::MeasureMemoryDelegate"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.v8::MeasureMemoryDelegate"* %40 to void (%"class.v8::MeasureMemoryDelegate"*)***
  %44 = load void (%"class.v8::MeasureMemoryDelegate"*)**, void (%"class.v8::MeasureMemoryDelegate"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %44, i64 1
  %46 = load void (%"class.v8::MeasureMemoryDelegate"*)*, void (%"class.v8::MeasureMemoryDelegate"*)** %45, align 8
  tail call void %46(%"class.v8::MeasureMemoryDelegate"* nonnull %40) #6
  br label %47

47:                                               ; preds = %42, %38
  %48 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %48) #12
  %49 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %49, label %50, label %24

50:                                               ; preds = %47, %2, %6
  %51 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %79, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 1
  %57 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %59, i64 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %57, i64 0, i32 0
  %64 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %64, i64 0, i32 1
  %66 = bitcast %"struct.std::__1::__list_node_base"** %65 to i64*
  store i64 %62, i64* %66, align 8
  %67 = bitcast %"struct.std::__1::__list_node_base"* %57 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64**
  %70 = load i64*, i64** %69, align 8
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %57, %"struct.std::__1::__list_node_base"** %73, align 8
  %74 = bitcast %"class.std::__1::list"* %0 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %67, align 8
  store %"struct.std::__1::__list_node_base"* %59, %"struct.std::__1::__list_node_base"** %71, align 8
  store %"struct.std::__1::__list_node_base"* %55, %"struct.std::__1::__list_node_base"** %60, align 8
  %76 = load i64, i64* %51, align 8
  %77 = load i64, i64* %3, align 8
  %78 = add i64 %77, %76
  store i64 %78, i64* %3, align 8
  store i64 0, i64* %51, align 8
  br label %79

79:                                               ; preds = %50, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1171"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1167"*, i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #6, !range !9
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %23, null
  br i1 %24, label %67, label %25

25:                                               ; preds = %18
  %26 = add i64 %6, -1
  br i1 %10, label %27, label %49

27:                                               ; preds = %25, %44
  %28 = phi %"struct.std::__1::__hash_node_base.1171"* [ %30, %44 ], [ %23, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.1171"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = icmp ult i64 %35, %6
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %35, %6
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %40, %39 ], [ %35, %37 ]
  %43 = icmp eq i64 %42, %19
  br i1 %43, label %44, label %67

44:                                               ; preds = %41, %32
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %30, i64 2
  %46 = bitcast %"struct.std::__1::__hash_node_base.1171"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %4
  br i1 %48, label %154, label %27

49:                                               ; preds = %25, %62
  %50 = phi %"struct.std::__1::__hash_node_base.1171"* [ %52, %62 ], [ %23, %25 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %50, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %52, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.1171"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %4
  %59 = and i64 %57, %26
  %60 = icmp eq i64 %59, %19
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %52, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.1171"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %4
  br i1 %66, label %154, label %49

67:                                               ; preds = %54, %49, %41, %27, %18, %3
  %68 = phi i64 [ %19, %18 ], [ undef, %3 ], [ %19, %27 ], [ %19, %41 ], [ %19, %49 ], [ %19, %54 ]
  %69 = tail call i8* @_Znwm(i64 24) #12, !noalias !14
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %2, align 8, !noalias !14
  store i64 %72, i64* %71, align 8, !noalias !14
  %73 = getelementptr inbounds i8, i8* %69, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %4, i64* %74, align 8, !noalias !14
  %75 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.1171"**
  store %"struct.std::__1::__hash_node_base.1171"* null, %"struct.std::__1::__hash_node_base.1171"** %75, align 8, !noalias !14
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %6 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %7, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %67
  %87 = shl i64 %6, 1
  %88 = icmp ult i64 %6, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %6) #6, !range !9
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #6
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm(%"class.std::__1::__hash_table.1167"* %0, i64 %98)
  %99 = load i64, i64* %5, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #6, !range !9
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %4
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %4, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %4, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %67
  %110 = phi i64 [ %6, %67 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %68, %67 ], [ %104, %102 ], [ %4, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.1171"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %69 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.1171"* %118 to i8**
  store i8* %69, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.1171"* %118, %"struct.std::__1::__hash_node_base.1171"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.1171"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #6, !range !9
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.1171"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.1171"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %69 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.1171"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %69, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.1171"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %62, %44, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %44 ], [ 0, %62 ]
  %156 = phi %"struct.std::__1::__hash_node_base.1171"* [ %151, %150 ], [ %30, %44 ], [ %52, %62 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.1171"*, i8 } undef, %"struct.std::__1::__hash_node_base.1171"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.1171"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.1171"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm(%"class.std::__1::__hash_table.1167"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #6
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table.1167"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #6, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #6
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #6, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #6
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table.1167"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table.1167"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1167"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1171"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1171"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1173", %"class.std::__1::__bucket_list_deallocator.1173"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1171"* null, %"struct.std::__1::__hash_node_base.1171"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !17

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1171"* null, %"struct.std::__1::__hash_node_base.1171"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1171"* null, %"struct.std::__1::__hash_node_base.1171"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1171"* null, %"struct.std::__1::__hash_node_base.1171"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1171"* null, %"struct.std::__1::__hash_node_base.1171"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1171"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #6, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1171"* %36, %"struct.std::__1::__hash_node_base.1171"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1171"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1171"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1171"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1171"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1171"* %103 to i64*
  %105 = load i64, i64* %130, align 8
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1171"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1171"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1171"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1171"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1171"* %80, %"struct.std::__1::__hash_node_base.1171"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1171"* %82, %"struct.std::__1::__hash_node_base.1171"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1171"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1171"* %129 to i64*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1171"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1171"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1171"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1171"* %146 to i64*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1171"* %134, %"struct.std::__1::__hash_node_base.1171"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1171"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1171"* %155 to i64*
  %157 = load i64, i64* %147, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1171"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1171"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1171"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1171"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1171"* %132, %"struct.std::__1::__hash_node_base.1171"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1171"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1171", %"struct.std::__1::__hash_node_base.1171"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1171"*, %"struct.std::__1::__hash_node_base.1171"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1171"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1167", %"class.std::__1::__hash_table.1167"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1171"**, %"struct.std::__1::__hash_node_base.1171"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1171"** null, %"struct.std::__1::__hash_node_base.1171"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1171"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1171"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1173", %"class.std::__1::__bucket_list_deallocator.1173"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement21ScheduleReportingTaskEvE3$_0S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::MemoryMeasurement"**
  %3 = load %"class.v8::internal::MemoryMeasurement"*, %"class.v8::internal::MemoryMeasurement"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %3, i64 0, i32 4
  store i8 0, i8* %4, align 8
  tail call void @_ZN2v88internal17MemoryMeasurement13ReportResultsEv(%"class.v8::internal::MemoryMeasurement"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v88internal17MemoryMeasurement14ScheduleGCTaskENS6_22MeasureMemoryExecutionEE3$_1S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::MemoryMeasurement"**
  %3 = load %"class.v8::internal::MemoryMeasurement"*, %"class.v8::internal::MemoryMeasurement"** %2, align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %3, i64 0, i32 6
  store i8 0, i8* %9, align 2
  br label %12

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %3, i64 0, i32 5
  store i8 0, i8* %11, align 1
  br label %12

12:                                               ; preds = %10, %8
  %13 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::MemoryMeasurement", %"class.v8::internal::MemoryMeasurement"* %3, i64 0, i32 3
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 2
  %20 = load i8, i8* @_ZN2v88internal24FLAG_incremental_markingE, align 1, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 2, i32 86, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %24, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i8, i8* %25 seq_cst, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  tail call void @_ZN2v88internal4Heap23StartIncrementalMarkingEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %19, i32 0, i32 24, i32 0) #6
  br label %38

29:                                               ; preds = %22
  %30 = load i32, i32* %5, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  tail call void @_ZN2v88internal4Heap36FinalizeIncrementalMarkingAtomicallyENS0_23GarbageCollectionReasonE(%"class.v8::internal::Heap"* %19, i32 24) #6
  %33 = load i32, i32* %5, align 8
  br label %34

34:                                               ; preds = %32, %29
  %35 = phi i32 [ %33, %32 ], [ %30, %29 ]
  tail call void @_ZN2v88internal17MemoryMeasurement14ScheduleGCTaskENS_22MeasureMemoryExecutionE(%"class.v8::internal::MemoryMeasurement"* %3, i32 %35) #6
  br label %38

36:                                               ; preds = %16
  %37 = tail call zeroext i1 @_ZN2v88internal4Heap14CollectGarbageENS0_15AllocationSpaceENS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %19, i32 1, i32 24, i32 0) #6
  br label %38

38:                                               ; preds = %12, %28, %34, %36
  ret void
}

declare void @_ZN2v88internal4Heap23StartIncrementalMarkingEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap36FinalizeIncrementalMarkingAtomicallyENS0_23GarbageCollectionReasonE(%"class.v8::internal::Heap"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal4Heap14CollectGarbageENS0_15AllocationSpaceENS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.261"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.257"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1268"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %69, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #6, !range !9
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.261"* %25, null
  br i1 %26, label %69, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br i1 %12, label %29, label %51

29:                                               ; preds = %27, %46
  %30 = phi %"struct.std::__1::__hash_node_base.261"* [ %32, %46 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.261"* %32, null
  br i1 %33, label %69, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.261"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = icmp ult i64 %37, %8
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %37, %8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %42, %41 ], [ %37, %39 ]
  %45 = icmp eq i64 %44, %21
  br i1 %45, label %46, label %69

46:                                               ; preds = %43, %34
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %32, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.261"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %6
  br i1 %50, label %160, label %29

51:                                               ; preds = %27, %64
  %52 = phi %"struct.std::__1::__hash_node_base.261"* [ %54, %64 ], [ %25, %27 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %52, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.261"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.261"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %6
  %61 = and i64 %59, %28
  %62 = icmp eq i64 %61, %21
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %54, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.261"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %6
  br i1 %68, label %160, label %51

69:                                               ; preds = %56, %51, %43, %29, %20, %5
  %70 = phi i64 [ %21, %20 ], [ undef, %5 ], [ %21, %29 ], [ %21, %43 ], [ %21, %51 ], [ %21, %56 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !18
  %72 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8, !noalias !18
  %74 = getelementptr inbounds i8, i8* %71, i64 16
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %73, align 8, !noalias !18
  store i64 %76, i64* %75, align 8, !noalias !18
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8, !noalias !18
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %6, i64* %80, align 8, !noalias !18
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.261"**
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %81, align 8, !noalias !18
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %8 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %9, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %8, 1
  %94 = icmp ult i64 %8, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %8) #6, !range !9
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #6
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.257"* %0, i64 %104)
  %105 = load i64, i64* %7, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #6, !range !9
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %6
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %6, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %6, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %8, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %6, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.261"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.261"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.261"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.261"* %124, %"struct.std::__1::__hash_node_base.261"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.261"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.261"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #6, !range !9
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.261"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.261"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.261"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.261"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %46, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %46 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.261"* [ %157, %156 ], [ %32, %46 ], [ %54, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.261"*, i8 } undef, %"struct.std::__1::__hash_node_base.261"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.261"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.261"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.257"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #6
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.257"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #6, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #6
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #6, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #6
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.257"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.257"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.257"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.261"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.261"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.263", %"class.std::__1::__bucket_list_deallocator.263"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !21

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.261"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.261"* null, %"struct.std::__1::__hash_node_base.261"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.261"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #6, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.261"* %36, %"struct.std::__1::__hash_node_base.261"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.261"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.261"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.261"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.261"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.261"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.261"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.261"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.261"* %103 to i64*
  %105 = load i64, i64* %130, align 8
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.261"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.261"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.261"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.261"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.261"* %80, %"struct.std::__1::__hash_node_base.261"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.261"* %82, %"struct.std::__1::__hash_node_base.261"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.261"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.261"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.261"* %129 to i64*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.261"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.261"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.261"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.261"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.261"* %146 to i64*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.261"* %134, %"struct.std::__1::__hash_node_base.261"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.261"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.261"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.261"* %155 to i64*
  %157 = load i64, i64* %147, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.261"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.261"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.261"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.261"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.261"* %132, %"struct.std::__1::__hash_node_base.261"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.261"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.261", %"struct.std::__1::__hash_node_base.261"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.261"*, %"struct.std::__1::__hash_node_base.261"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.261"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.257", %"class.std::__1::__hash_table.257"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.261"**, %"struct.std::__1::__hash_node_base.261"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.261"** null, %"struct.std::__1::__hash_node_base.261"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.261"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.261"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.263", %"class.std::__1::__bucket_list_deallocator.263"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__14listIN2v88internal17MemoryMeasurement7RequestENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__14listIN2v88internal17MemoryMeasurement7RequestENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!9 = !{i64 0, i64 65}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__14listIN2v88internal17MemoryMeasurement7RequestENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14listIN2v88internal17MemoryMeasurement7RequestENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!13 = distinct !{!13, !3}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE21__construct_node_hashImJEEENS_10unique_ptrINS_11__hash_nodeImPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE21__construct_node_hashImJEEENS_10unique_ptrINS_11__hash_nodeImPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!17 = distinct !{!17, !3}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImmEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!21 = distinct !{!21, !3}
