; ModuleID = '../../net/base/schemeful_site.cc'
source_filename = "../../net/base/schemeful_site.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.net::SchemefulSite::ObtainASiteResult" = type <{ %"class.url::Origin", i8, [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.GURL* }
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.3", [4 x i8] }>
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, %union.anon.15 }
%union.anon.15 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.url::Origin" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.std::__1::basic_string" }

@.str = private unnamed_addr constant [21 x i8] c"Net.SiteDomainIsSafe\00", align 1
@_ZN3url9kWsSchemeE = external constant [0 x i8], align 1
@_ZN3url10kWssSchemeE = external constant [0 x i8], align 1
@_ZZN3net13SchemefulSite11ObtainASiteERKN3url6OriginEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net13SchemefulSiteC1ENS0_17ObtainASiteResultE = hidden unnamed_addr alias void (%"class.net::SchemefulSite"*, %"struct.net::SchemefulSite::ObtainASiteResult"*), void (%"class.net::SchemefulSite"*, %"struct.net::SchemefulSite::ObtainASiteResult"*)* @_ZN3net13SchemefulSiteC2ENS0_17ObtainASiteResultE
@_ZN3net13SchemefulSiteC1ERKN3url6OriginE = hidden unnamed_addr alias void (%"class.net::SchemefulSite"*, %"class.url::Origin"*), void (%"class.net::SchemefulSite"*, %"class.url::Origin"*)* @_ZN3net13SchemefulSiteC2ERKN3url6OriginE
@_ZN3net13SchemefulSiteC1ERK4GURL = hidden unnamed_addr alias void (%"class.net::SchemefulSite"*, %class.GURL*), void (%"class.net::SchemefulSite"*, %class.GURL*)* @_ZN3net13SchemefulSiteC2ERK4GURL
@_ZN3net13SchemefulSiteC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"*), void (%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"*)* @_ZN3net13SchemefulSiteC2ERKS0_
@_ZN3net13SchemefulSiteC1EOS0_ = hidden unnamed_addr alias void (%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"*), void (%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"*)* @_ZN3net13SchemefulSiteC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSite11ObtainASiteERKN3url6OriginE(%"struct.net::SchemefulSite::ObtainASiteResult"* noalias sret, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.url::CanonHostInfo", align 16
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %0, i64 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %13, %"class.url::Origin"* dereferenceable(80) %1) #8
  %14 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %0, i64 0, i32 1
  store i8 0, i8* %14, align 8
  br label %322

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #8
  %19 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.url::Origin"* %1 to i8*
  %26 = select i1 %22, i8* %24, i8* %25
  %27 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  %31 = tail call zeroext i1 @_ZN3net31IsStandardSchemeWithNetworkHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %26, i64 %30) #8
  br i1 %31, label %35, label %32

32:                                               ; preds = %15
  %33 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  br label %186

35:                                               ; preds = %15
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #8
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERKN3url6OriginENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* dereferenceable(80) %1, i32 1) #8
  %37 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %41, %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %36, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #8
  %44 = bitcast %"struct.url::CanonHostInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #8
  %45 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %5, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -86, i64 16, i1 false)
  %46 = bitcast %"struct.url::CanonHostInfo"* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %46, align 16
  %47 = load i8, i8* %38, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %18, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %167, label %53

53:                                               ; preds = %43
  %54 = load i8, i8* %9, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  br label %63

58:                                               ; preds = %53
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  %60 = load i8, i8* %38, align 1
  %61 = load i64, i64* %18, align 8
  %62 = zext i8 %60 to i64
  br label %63

63:                                               ; preds = %56, %58
  %64 = phi i64 [ %50, %56 ], [ %62, %58 ]
  %65 = phi i64 [ %49, %56 ], [ %61, %58 ]
  %66 = phi i8 [ %47, %56 ], [ %60, %58 ]
  %67 = phi %"class.std::__1::basic_string"* [ %57, %56 ], [ %59, %58 ]
  %68 = icmp slt i8 %66, 0
  %69 = select i1 %68, i64 %65, i64 %64
  %70 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = icmp eq i64 %69, %77
  %79 = load i8*, i8** %17, align 8
  %80 = select i1 %68, i8* %79, i8* %16
  br i1 %78, label %81, label %109

81:                                               ; preds = %63
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %85 = select i1 %73, i8* %83, i8* %84
  %86 = icmp eq i64 %69, 0
  br i1 %68, label %93, label %87

87:                                               ; preds = %81
  br i1 %86, label %167, label %88

88:                                               ; preds = %87
  %89 = ptrtoint i8* %79 to i64
  %90 = trunc i64 %89 to i8
  %91 = load i8, i8* %85, align 1
  %92 = icmp eq i8 %91, %90
  br i1 %92, label %94, label %109

93:                                               ; preds = %81
  br i1 %86, label %167, label %106

94:                                               ; preds = %88, %101
  %95 = phi i64 [ %98, %101 ], [ %64, %88 ]
  %96 = phi i8* [ %99, %101 ], [ %16, %88 ]
  %97 = phi i8* [ %102, %101 ], [ %85, %88 ]
  %98 = add i64 %95, -1
  %99 = getelementptr inbounds i8, i8* %96, i64 1
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %167, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds i8, i8* %97, i64 1
  %103 = load i8, i8* %99, align 1
  %104 = load i8, i8* %102, align 1
  %105 = icmp eq i8 %103, %104
  br i1 %105, label %94, label %109

106:                                              ; preds = %93
  %107 = call i32 @bcmp(i8* %80, i8* %85, i64 %69) #8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %167, label %109

109:                                              ; preds = %101, %88, %63, %106
  %110 = phi i8* [ %79, %106 ], [ %80, %63 ], [ %80, %88 ], [ %80, %101 ]
  %111 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #8
  call void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %110, i64 %69, %"struct.url::CanonHostInfo"* nonnull %5) #8
  %112 = load i8, i8* %38, align 1
  %113 = icmp slt i8 %112, 0
  %114 = load i64, i64* %18, align 8
  %115 = zext i8 %112 to i64
  %116 = select i1 %113, i64 %114, i64 %115
  %117 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = zext i8 %119 to i64
  %124 = select i1 %120, i64 %122, i64 %123
  %125 = icmp eq i64 %116, %124
  br i1 %125, label %126, label %155

126:                                              ; preds = %109
  %127 = load i8*, i8** %17, align 8
  %128 = select i1 %113, i8* %127, i8* %16
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = select i1 %120, i8* %130, i8* %111
  %132 = icmp eq i64 %116, 0
  br i1 %113, label %139, label %133

133:                                              ; preds = %126
  br i1 %132, label %155, label %134

134:                                              ; preds = %133
  %135 = ptrtoint i8* %127 to i64
  %136 = trunc i64 %135 to i8
  %137 = load i8, i8* %131, align 1
  %138 = icmp eq i8 %137, %136
  br i1 %138, label %143, label %155

139:                                              ; preds = %126
  br i1 %132, label %155, label %140

140:                                              ; preds = %139
  %141 = call i32 @bcmp(i8* %128, i8* %131, i64 %116) #8
  %142 = icmp eq i32 %141, 0
  br label %155

143:                                              ; preds = %134, %150
  %144 = phi i64 [ %147, %150 ], [ %115, %134 ]
  %145 = phi i8* [ %148, %150 ], [ %16, %134 ]
  %146 = phi i8* [ %151, %150 ], [ %131, %134 ]
  %147 = add i64 %144, -1
  %148 = getelementptr inbounds i8, i8* %145, i64 1
  %149 = icmp eq i64 %147, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %143
  %151 = getelementptr inbounds i8, i8* %146, i64 1
  %152 = load i8, i8* %148, align 1
  %153 = load i8, i8* %151, align 1
  %154 = icmp eq i8 %152, %153
  br i1 %154, label %143, label %155

155:                                              ; preds = %143, %150, %134, %109, %133, %139, %140
  %156 = phi i1 [ true, %133 ], [ true, %139 ], [ %142, %140 ], [ false, %109 ], [ false, %134 ], [ false, %150 ], [ true, %143 ]
  br i1 %120, label %157, label %160

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #9
  br label %160

160:                                              ; preds = %157, %155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #8
  br i1 %156, label %167, label %161

161:                                              ; preds = %160
  %162 = load i8, i8* %38, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = load i8*, i8** %17, align 8
  store i8 0, i8* %165, align 1
  store i64 0, i64* %18, align 8
  br label %167

166:                                              ; preds = %161
  store i8 0, i8* %16, align 8
  store i8 0, i8* %38, align 1
  br label %167

167:                                              ; preds = %94, %87, %93, %106, %43, %166, %164, %160
  %168 = phi i1 [ true, %160 ], [ false, %164 ], [ false, %166 ], [ true, %43 ], [ true, %106 ], [ true, %93 ], [ true, %87 ], [ true, %94 ]
  %169 = load atomic i64, i64* @_ZZN3net13SchemefulSite11ObtainASiteERKN3url6OriginEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %170 = inttoptr i64 %169 to %"class.base::HistogramBase"*
  %171 = icmp eq i64 %169, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %167
  %173 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i32 1) #8
  %174 = ptrtoint %"class.base::HistogramBase"* %173 to i64
  store atomic i64 %174, i64* @_ZZN3net13SchemefulSite11ObtainASiteERKN3url6OriginEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %175

175:                                              ; preds = %172, %167
  %176 = phi %"class.base::HistogramBase"* [ %170, %167 ], [ %173, %172 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %176, i1 zeroext %168) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  %177 = load i8, i8* %38, align 1
  %178 = load i64, i64* %18, align 8
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %180 = icmp slt i8 %177, 0
  %181 = zext i8 %177 to i64
  %182 = select i1 %180, i64 %178, i64 %181
  %183 = icmp eq i64 %182, 0
  %184 = xor i1 %183, true
  %185 = zext i1 %184 to i8
  br i1 %183, label %186, label %224

186:                                              ; preds = %32, %175
  %187 = phi i8 [ 0, %32 ], [ %185, %175 ]
  %188 = phi i8* [ %34, %32 ], [ %179, %175 ]
  %189 = load i8, i8* %9, align 8, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  br label %195

193:                                              ; preds = %186
  %194 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %195

195:                                              ; preds = %191, %193
  %196 = phi %"class.std::__1::basic_string"* [ %192, %191 ], [ %194, %193 ]
  %197 = icmp eq %"class.std::__1::basic_string"* %3, %196
  br i1 %197, label %224, label %198

198:                                              ; preds = %195
  %199 = load i8, i8* %188, align 1
  %200 = icmp slt i8 %199, 0
  %201 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %200, label %214, label %205

205:                                              ; preds = %198
  br i1 %204, label %208, label %206

206:                                              ; preds = %205
  %207 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %207, i64 24, i1 false) #8
  br label %224

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %212 = load i64, i64* %211, align 8
  %213 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %210, i64 %212) #8
  br label %224

214:                                              ; preds = %198
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  %220 = zext i8 %203 to i64
  %221 = select i1 %204, i8* %216, i8* %219
  %222 = select i1 %204, i64 %218, i64 %220
  %223 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %221, i64 %222) #8
  br label %224

224:                                              ; preds = %214, %208, %206, %195, %175
  %225 = phi i8 [ %187, %214 ], [ %187, %208 ], [ %187, %206 ], [ %187, %195 ], [ %185, %175 ]
  %226 = phi i8* [ %188, %214 ], [ %188, %208 ], [ %188, %206 ], [ %188, %195 ], [ %179, %175 ]
  %227 = load i8, i8* %9, align 8, !range !2
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %233

231:                                              ; preds = %224
  %232 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %233

233:                                              ; preds = %229, %231
  %234 = phi %"class.std::__1::basic_string"* [ %230, %229 ], [ %232, %231 ]
  %235 = bitcast %"class.std::__1::basic_string"* %234 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  br label %244

242:                                              ; preds = %233
  %243 = bitcast %"class.std::__1::basic_string"* %234 to i8*
  br label %244

244:                                              ; preds = %239, %242
  %245 = phi i8* [ %241, %239 ], [ %243, %242 ]
  %246 = load i8, i8* %9, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %252

250:                                              ; preds = %244
  %251 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %252

252:                                              ; preds = %248, %250
  %253 = phi %"class.std::__1::basic_string"* [ %249, %248 ], [ %251, %250 ]
  %254 = bitcast %"class.std::__1::basic_string"* %253 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %254, i64 0, i32 1, i32 0
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %260 = load i64, i64* %259, align 8
  br label %263

261:                                              ; preds = %252
  %262 = zext i8 %256 to i64
  br label %263

263:                                              ; preds = %258, %261
  %264 = phi i64 [ %260, %258 ], [ %262, %261 ]
  %265 = trunc i64 %264 to i32
  %266 = call i32 @_ZN3url20DefaultPortForSchemeEPKci(i8* %245, i32 %265) #8
  %267 = icmp eq i32 %266, -1
  %268 = select i1 %267, i32 0, i32 %266
  %269 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %0, i64 0, i32 0
  %270 = load i8, i8* %9, align 8, !range !2
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %263
  %273 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %276

274:                                              ; preds = %263
  %275 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %276

276:                                              ; preds = %272, %274
  %277 = phi %"class.std::__1::basic_string"* [ %273, %272 ], [ %275, %274 ]
  %278 = bitcast %"class.std::__1::basic_string"* %277 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %279 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %278, i64 0, i32 1, i32 0
  %280 = load i8, i8* %279, align 1
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %285, label %282

282:                                              ; preds = %276
  %283 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %284 = bitcast %"class.std::__1::basic_string"* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %283, i8* align 8 %284, i64 24, i1 false) #8
  br label %290

285:                                              ; preds = %276
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %287, i64 %289) #8
  br label %290

290:                                              ; preds = %282, %285
  %291 = load i8, i8* %226, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %290
  %294 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %294, i8* nonnull align 8 %16, i64 24, i1 false) #8
  br label %298

295:                                              ; preds = %290
  %296 = load i8*, i8** %17, align 8
  %297 = load i64, i64* %18, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %296, i64 %297) #8
  br label %298

298:                                              ; preds = %293, %295
  %299 = trunc i32 %268 to i16
  call void @_ZN3url6Origin25CreateFromNormalizedTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_t(%"class.url::Origin"* sret %269, %"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8, i16 zeroext %299) #8
  %300 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %0, i64 0, i32 1
  store i8 %225, i8* %300, align 8
  %301 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %308

305:                                              ; preds = %298
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  call void @_ZdlPv(i8* %307) #9
  br label %308

308:                                              ; preds = %298, %305
  %309 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %308
  %314 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load i8*, i8** %314, align 8
  call void @_ZdlPv(i8* %315) #9
  br label %316

316:                                              ; preds = %308, %313
  %317 = load i8, i8* %226, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %321

319:                                              ; preds = %316
  %320 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %320) #9
  br label %321

321:                                              ; preds = %316, %319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  br label %322

322:                                              ; preds = %321, %12
  ret void
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN3net31IsStandardSchemeWithNetworkHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERKN3url6OriginENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* sret, i8*, i64, %"struct.url::CanonHostInfo"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZN3url20DefaultPortForSchemeEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN3url6Origin25CreateFromNormalizedTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_t(%"class.url::Origin"* sret, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSiteC2ENS0_17ObtainASiteResultE(%"class.net::SchemefulSite"*, %"struct.net::SchemefulSite::ObtainASiteResult"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %1, i64 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSiteC2ERKN3url6OriginE(%"class.net::SchemefulSite"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SchemefulSite::ObtainASiteResult", align 8
  call void @_ZN3net13SchemefulSite11ObtainASiteERKN3url6OriginE(%"struct.net::SchemefulSite::ObtainASiteResult"* nonnull sret %3, %"class.url::Origin"* dereferenceable(80) %1)
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %4, %"class.url::Origin"* nonnull dereferenceable(80) %5) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSiteC2ERK4GURL(%"class.net::SchemefulSite"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SchemefulSite::ObtainASiteResult", align 8
  %4 = alloca %"class.url::Origin", align 8
  %5 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #8
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %4, %class.GURL* dereferenceable(120) %1) #8
  %6 = bitcast %"struct.net::SchemefulSite::ObtainASiteResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6)
  call void @_ZN3net13SchemefulSite11ObtainASiteERKN3url6OriginE(%"struct.net::SchemefulSite::ObtainASiteResult"* nonnull sret %3, %"class.url::Origin"* nonnull dereferenceable(80) %4) #8
  %7 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %7, %"class.url::Origin"* nonnull dereferenceable(80) %8) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6)
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #8
  ret void
}

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSiteC2ERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSiteC2EOS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.net::SchemefulSite"* @_ZN3net13SchemefulSiteaSERKS0_(%"class.net::SchemefulSite"* returned, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  ret %"class.net::SchemefulSite"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.net::SchemefulSite"* @_ZN3net13SchemefulSiteaSEOS0_(%"class.net::SchemefulSite"* returned, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  ret %"class.net::SchemefulSite"* %0
}

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13SchemefulSite8FromWireERKN3url6OriginEPS0_(%"class.url::Origin"* dereferenceable(80), %"class.net::SchemefulSite"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SchemefulSite::ObtainASiteResult", align 8
  %4 = alloca %"class.net::SchemefulSite", align 8
  %5 = bitcast %"class.net::SchemefulSite"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 80, i1 false)
  %6 = bitcast %"struct.net::SchemefulSite::ObtainASiteResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6)
  call void @_ZN3net13SchemefulSite11ObtainASiteERKN3url6OriginE(%"struct.net::SchemefulSite::ObtainASiteResult"* nonnull sret %3, %"class.url::Origin"* dereferenceable(80) %0) #8
  %7 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %7, %"class.url::Origin"* nonnull dereferenceable(80) %8) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6)
  %9 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* nonnull %7, %"class.url::Origin"* dereferenceable(80) %0) #8
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  %12 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %11, %"class.url::Origin"* nonnull dereferenceable(80) %7) #8
  br label %13

13:                                               ; preds = %2, %10
  %14 = phi i1 [ true, %10 ], [ false, %2 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #8
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSite29CreateIfHasRegisterableDomainERKN3url6OriginE(%"class.absl::optional.11"* noalias sret, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SchemefulSite::ObtainASiteResult", align 8
  %4 = alloca %"class.net::SchemefulSite", align 8
  %5 = alloca %"struct.net::SchemefulSite::ObtainASiteResult", align 8
  %6 = bitcast %"struct.net::SchemefulSite::ObtainASiteResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 88, i1 false)
  call void @_ZN3net13SchemefulSite11ObtainASiteERKN3url6OriginE(%"struct.net::SchemefulSite::ObtainASiteResult"* nonnull sret %3, %"class.url::Origin"* dereferenceable(80) %1)
  %7 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %union.anon.15* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false) #8
  br label %23

14:                                               ; preds = %2
  %15 = bitcast %"class.net::SchemefulSite"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %16, %"class.url::Origin"* nonnull dereferenceable(80) %17) #8
  %18 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %5, i64 0, i32 1
  %19 = load i8, i8* %7, align 8, !range !2
  store i8 %19, i8* %18, align 8
  %20 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %4, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %20, %"class.url::Origin"* nonnull dereferenceable(80) %16) #8
  %21 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %22, %"class.url::Origin"* nonnull dereferenceable(80) %20) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %20) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #8
  br label %23

23:                                               ; preds = %14, %10
  %24 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSite22ConvertWebSocketToHttpEv(%"class.net::SchemefulSite"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.url::Origin", align 8
  %3 = alloca %class.GURL, align 8
  %4 = alloca %class.GURL, align 8
  %5 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %13

13:                                               ; preds = %9, %11
  %14 = phi %"class.std::__1::basic_string"* [ %10, %9 ], [ %12, %11 ]
  %15 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url9kWsSchemeE, i64 0, i64 0)) #8
  %16 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp eq i64 %15, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %13
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %14, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url9kWsSchemeE, i64 0, i64 0), i64 %15) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %50, label %28

28:                                               ; preds = %13, %25
  %29 = load i8, i8* %6, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0, i32 0, i32 0
  br label %35

33:                                               ; preds = %28
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi %"class.std::__1::basic_string"* [ %32, %31 ], [ %34, %33 ]
  %37 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kWssSchemeE, i64 0, i64 0)) #8
  %38 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = icmp eq i64 %37, %45
  br i1 %46, label %47, label %55

47:                                               ; preds = %35
  %48 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %36, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url10kWssSchemeE, i64 0, i64 0), i64 %37) #8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %47, %25
  %51 = bitcast %"class.url::Origin"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %51) #8
  %52 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %52) #8
  %53 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %53) #8
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %4, %"class.url::Origin"* %5) #8
  call void @_ZN3net33ChangeWebSocketSchemeToHttpSchemeERK4GURL(%class.GURL* nonnull sret %3, %class.GURL* nonnull dereferenceable(120) %4) #8
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %2, %class.GURL* nonnull dereferenceable(120) %3) #8
  %54 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %5, %"class.url::Origin"* nonnull dereferenceable(80) %2) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %2) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %51) #8
  br label %55

55:                                               ; preds = %35, %50, %47
  ret void
}

declare void @_ZN3net33ChangeWebSocketSchemeToHttpSchemeERK4GURL(%class.GURL* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSite11DeserializeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::SchemefulSite"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SchemefulSite::ObtainASiteResult", align 8
  %4 = alloca %"class.url::Origin", align 8
  %5 = alloca %class.GURL, align 8
  %6 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %6) #8
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* %14, i64 %18) #8
  %19 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #8
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %4, %class.GURL* nonnull dereferenceable(120) %5) #8
  %20 = bitcast %"struct.net::SchemefulSite::ObtainASiteResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %20) #8
  call void @_ZN3net13SchemefulSite11ObtainASiteERKN3url6OriginE(%"struct.net::SchemefulSite::ObtainASiteResult"* nonnull sret %3, %"class.url::Origin"* nonnull dereferenceable(80) %4) #8
  %21 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %21, %"class.url::Origin"* nonnull dereferenceable(80) %22) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %20) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %6) #8
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::SchemefulSite"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  tail call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret %0, %"class.url::Origin"* %3) #8
  ret void
}

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net13SchemefulSite14GetDebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::SchemefulSite"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  tail call void @_ZNK3url6Origin14GetDebugStringEb(%"class.std::__1::basic_string"* sret %0, %"class.url::Origin"* %3, i1 zeroext true) #8
  ret void
}

declare void @_ZNK3url6Origin14GetDebugStringEb(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net13SchemefulSite6GetURLEv(%class.GURL* noalias sret, %"class.net::SchemefulSite"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  tail call void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret %0, %"class.url::Origin"* %3) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(80) %"class.url::Origin"* @_ZNK3net13SchemefulSite27GetInternalOriginForTestingEv(%"class.net::SchemefulSite"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  ret %"class.url::Origin"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13SchemefulSiteneERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  %6 = xor i1 %5, true
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #8
  ret i1 %5
}

declare zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSite20DeserializeWithNonceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.absl::optional.11"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SchemefulSite::ObtainASiteResult", align 8
  %4 = alloca %"class.absl::optional.16", align 8
  %5 = alloca %"class.net::SchemefulSite", align 8
  %6 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 88, i1 false)
  call void @_ZN3url6Origin11DeserializeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.absl::optional.16"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon.15* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 80, i1 false) #8
  br label %25

13:                                               ; preds = %2
  %14 = bitcast %"class.net::SchemefulSite"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = bitcast %"struct.net::SchemefulSite::ObtainASiteResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %16)
  call void @_ZN3net13SchemefulSite11ObtainASiteERKN3url6OriginE(%"struct.net::SchemefulSite::ObtainASiteResult"* nonnull sret %3, %"class.url::Origin"* dereferenceable(80) %15) #8
  %17 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.net::SchemefulSite::ObtainASiteResult", %"struct.net::SchemefulSite::ObtainASiteResult"* %3, i64 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* nonnull %17, %"class.url::Origin"* nonnull dereferenceable(80) %18) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %16)
  %19 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional.11", %"class.absl::optional.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %20, %"class.url::Origin"* nonnull dereferenceable(80) %17) #8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #8
  %21 = load i8, i8* %6, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %24) #8
  store i8 0, i8* %6, align 8
  br label %25

25:                                               ; preds = %9, %13, %23
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #8
  ret void
}

declare void @_ZN3url6Origin11DeserializeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.absl::optional.16"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SchemefulSite18SerializeWithNonceEv(%"class.absl::optional.21"* noalias sret, %"class.net::SchemefulSite"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0
  tail call void @_ZN3url6Origin33SerializeWithNonceAndInitIfNeededEv(%"class.absl::optional.21"* sret %0, %"class.url::Origin"* %3) #8
  ret void
}

declare void @_ZN3url6Origin33SerializeWithNonceAndInitIfNeededEv(%"class.absl::optional.21"* sret, %"class.url::Origin"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13SchemefulSite17SchemelesslyEqualERKS0_(%"class.net::SchemefulSite"* nocapture readonly, %"class.net::SchemefulSite"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %0, i64 0, i32 0, i32 0, i32 1
  br label %10

8:                                                ; preds = %2
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi %"class.std::__1::basic_string"* [ %7, %6 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %1, i64 0, i32 0, i32 0, i32 1
  br label %19

17:                                               ; preds = %10
  %18 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi %"class.std::__1::basic_string"* [ %16, %15 ], [ %18, %17 ]
  %21 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp eq i64 %28, %36
  br i1 %37, label %38, label %70

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %42 = select i1 %24, i8* %40, i8* %41
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %46 = select i1 %32, i8* %44, i8* %45
  %47 = icmp eq i64 %28, 0
  br i1 %24, label %54, label %48

48:                                               ; preds = %38
  br i1 %47, label %70, label %49

49:                                               ; preds = %48
  %50 = ptrtoint i8* %40 to i64
  %51 = trunc i64 %50 to i8
  %52 = load i8, i8* %46, align 1
  %53 = icmp eq i8 %52, %51
  br i1 %53, label %58, label %70

54:                                               ; preds = %38
  br i1 %47, label %70, label %55

55:                                               ; preds = %54
  %56 = tail call i32 @bcmp(i8* %42, i8* %46, i64 %28) #8
  %57 = icmp eq i32 %56, 0
  br label %70

58:                                               ; preds = %49, %65
  %59 = phi i64 [ %62, %65 ], [ %27, %49 ]
  %60 = phi i8* [ %63, %65 ], [ %41, %49 ]
  %61 = phi i8* [ %66, %65 ], [ %46, %49 ]
  %62 = add i64 %59, -1
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds i8, i8* %61, i64 1
  %67 = load i8, i8* %63, align 1
  %68 = load i8, i8* %66, align 1
  %69 = icmp eq i8 %67, %68
  br i1 %69, label %58, label %70

70:                                               ; preds = %58, %65, %49, %19, %48, %54, %55
  %71 = phi i1 [ false, %19 ], [ %57, %55 ], [ true, %54 ], [ true, %48 ], [ false, %49 ], [ false, %65 ], [ true, %58 ]
  ret i1 %71
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
