; ModuleID = '../../components/viz/common/gpu/context_cache_controller.cc'
source_filename = "../../components/viz/common/gpu/context_cache_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.viz::ContextCacheController" = type { i32 (...)**, %"class.gpu::ContextSupport"*, %class.scoped_refptr, %class.GrDirectContext*, %"class.std::__1::unique_ptr.69", %"class.base::Lock"*, i32, i32, i8, %"class.base::Lock", i32, %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %class.sk_sp.38, %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.38 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.75 }
%class.scoped_refptr.75 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.76", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.76" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.77" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__cxx_atomic_impl.80" }
%"struct.std::__1::__cxx_atomic_impl.80" = type { %"struct.std::__1::__cxx_atomic_base_impl.81" }
%"struct.std::__1::__cxx_atomic_base_impl.81" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gpu::ContextSupport" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.85", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZTVN3viz22ContextCacheControllerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::ContextCacheController"*)* @_ZN3viz22ContextCacheControllerD2Ev to i8*), i8* bitcast (void (%"class.viz::ContextCacheController"*)* @_ZN3viz22ContextCacheControllerD0Ev to i8*), i8* bitcast (%"class.viz::ContextCacheController::ScopedToken"* (%"class.viz::ContextCacheController"*)* @_ZN3viz22ContextCacheController19ClientBecameVisibleEv to i8*), i8* bitcast (void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)* @_ZN3viz22ContextCacheController22ClientBecameNotVisibleENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)* @_ZN3viz22ContextCacheController36ClientBecameNotVisibleDuringShutdownENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"PostIdleCallback\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"../../components/viz/common/gpu/context_cache_controller.cc\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3viz22ContextCacheController11ScopedTokenC1Ev = hidden unnamed_addr alias void (%"class.viz::ContextCacheController::ScopedToken"*), void (%"class.viz::ContextCacheController::ScopedToken"*)* @_ZN3viz22ContextCacheController11ScopedTokenC2Ev
@_ZN3viz22ContextCacheController11ScopedTokenD1Ev = hidden unnamed_addr alias void (%"class.viz::ContextCacheController::ScopedToken"*), void (%"class.viz::ContextCacheController::ScopedToken"*)* @_ZN3viz22ContextCacheController11ScopedTokenD2Ev
@_ZN3viz22ContextCacheControllerC1EPN3gpu14ContextSupportE13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.viz::ContextCacheController"*, %"class.gpu::ContextSupport"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.viz::ContextCacheController"*, %"class.gpu::ContextSupport"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN3viz22ContextCacheControllerC2EPN3gpu14ContextSupportE13scoped_refptrIN4base22SingleThreadTaskRunnerEE
@_ZN3viz22ContextCacheControllerD1Ev = hidden unnamed_addr alias void (%"class.viz::ContextCacheController"*), void (%"class.viz::ContextCacheController"*)* @_ZN3viz22ContextCacheControllerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz22ContextCacheController11ScopedTokenC2Ev(%"class.viz::ContextCacheController::ScopedToken"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::ContextCacheController::ScopedToken", %"class.viz::ContextCacheController::ScopedToken"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz22ContextCacheController11ScopedTokenD2Ev(%"class.viz::ContextCacheController::ScopedToken"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz22ContextCacheController11ScopedToken7ReleaseEv(%"class.viz::ContextCacheController::ScopedToken"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::ContextCacheController::ScopedToken", %"class.viz::ContextCacheController::ScopedToken"* %0, i64 0, i32 0
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheControllerC2EPN3gpu14ContextSupportE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.viz::ContextCacheController"*, %"class.gpu::ContextSupport"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %7 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3viz22ContextCacheControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 1
  store %"class.gpu::ContextSupport"* %1, %"class.gpu::ContextSupport"** %8, align 8
  %9 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 2
  %10 = bitcast %class.scoped_refptr* %9 to i64*
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 9, i32 0
  %13 = bitcast %class.GrDirectContext** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 33, i1 false)
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %12) #8
  %14 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 10
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %15, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %16) #8
  %17 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 12
  %18 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %17, i64 0, i32 0
  %19 = ptrtoint %"class.viz::ContextCacheController"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %18, i64 %19) #8
  %20 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8, !noalias !2
  %22 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %17, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %22) #8, !noalias !2
  %23 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 12, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !2
  %25 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %25, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %24) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8, !noalias !2
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::WeakPtr"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %26, align 8
  %29 = bitcast %"class.base::WeakPtr"* %15 to i64*
  %30 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.base::internal::WeakReference::Flag"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %31) #8
  %38 = bitcast %"class.base::internal::WeakReference::Flag"* %31 to i8*
  call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %37, %33, %3
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 1
  store i64 %41, i64* %42, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheControllerD2Ev(%"class.viz::ContextCacheController"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3viz22ContextCacheControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.viz::ContextCacheController::ScopedToken"*, %"class.viz::ContextCacheController::ScopedToken"** %3, align 8
  %5 = icmp eq %"class.viz::ContextCacheController::ScopedToken"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store %"class.viz::ContextCacheController::ScopedToken"* null, %"class.viz::ContextCacheController::ScopedToken"** %3, align 8
  tail call void @_ZN3viz22ContextCacheController22ClientBecameNotVisibleENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE(%"class.viz::ContextCacheController"* %0, %"class.viz::ContextCacheController::ScopedToken"* nonnull %4) #8
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %8) #8
  %9 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %9) #8
  %10 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %10) #8
  %11 = load %"class.viz::ContextCacheController::ScopedToken"*, %"class.viz::ContextCacheController::ScopedToken"** %3, align 8
  store %"class.viz::ContextCacheController::ScopedToken"* null, %"class.viz::ContextCacheController::ScopedToken"** %3, align 8
  %12 = icmp eq %"class.viz::ContextCacheController::ScopedToken"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.viz::ContextCacheController::ScopedToken", %"class.viz::ContextCacheController::ScopedToken"* %11, i64 0, i32 0
  tail call void @_ZdlPv(i8* %14) #9
  br label %15

15:                                               ; preds = %7, %13
  %16 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SingleThreadTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %17, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #8
  br label %27

27:                                               ; preds = %15, %19, %24
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheControllerD0Ev(%"class.viz::ContextCacheController"*) unnamed_addr #2 align 2 {
  tail call void @_ZN3viz22ContextCacheControllerD2Ev(%"class.viz::ContextCacheController"* %0) #8
  %2 = bitcast %"class.viz::ContextCacheController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz22ContextCacheController12SetGrContextEP15GrDirectContext(%"class.viz::ContextCacheController"* nocapture, %class.GrDirectContext*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 3
  store %class.GrDirectContext* %1, %class.GrDirectContext** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz22ContextCacheController7SetLockEPN4base4LockE(%"class.viz::ContextCacheController"* nocapture, %"class.base::Lock"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 5
  store %"class.base::Lock"* %1, %"class.base::Lock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.viz::ContextCacheController::ScopedToken"* @_ZN3viz22ContextCacheController19ClientBecameVisibleEv(%"class.viz::ContextCacheController"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = add i32 %3, 1
  store i32 %5, i32* %2, align 8
  br i1 %4, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 1
  %8 = load %"class.gpu::ContextSupport"*, %"class.gpu::ContextSupport"** %7, align 8
  %9 = bitcast %"class.gpu::ContextSupport"* %8 to void (%"class.gpu::ContextSupport"*, i1)***
  %10 = load void (%"class.gpu::ContextSupport"*, i1)**, void (%"class.gpu::ContextSupport"*, i1)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %10, i64 5
  %12 = load void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %11, align 8
  tail call void %12(%"class.gpu::ContextSupport"* %8, i1 zeroext false) #8
  br label %13

13:                                               ; preds = %6, %1
  %14 = tail call i8* @_Znwm(i64 1) #9
  %15 = bitcast i8* %14 to %"class.viz::ContextCacheController::ScopedToken"*
  store i8 0, i8* %14, align 1
  ret %"class.viz::ContextCacheController::ScopedToken"* %15
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheController22ClientBecameNotVisibleENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE(%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.viz::ContextCacheController::ScopedToken", %"class.viz::ContextCacheController::ScopedToken"* %1, i64 0, i32 0
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 9
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13, !prof !5

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %14) #8
  br label %15

15:                                               ; preds = %8, %13
  %16 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 10
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #8
  %20 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 3
  %21 = load %class.GrDirectContext*, %class.GrDirectContext** %20, align 8
  %22 = icmp eq %class.GrDirectContext* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %15
  tail call void @_ZN15GrDirectContext16freeGpuResourcesEv(%class.GrDirectContext* nonnull %21) #8
  br label %24

24:                                               ; preds = %15, %23
  %25 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 1
  %26 = load %"class.gpu::ContextSupport"*, %"class.gpu::ContextSupport"** %25, align 8
  %27 = bitcast %"class.gpu::ContextSupport"* %26 to void (%"class.gpu::ContextSupport"*, i1)***
  %28 = load void (%"class.gpu::ContextSupport"*, i1)**, void (%"class.gpu::ContextSupport"*, i1)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %28, i64 5
  %30 = load void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %29, align 8
  tail call void %30(%"class.gpu::ContextSupport"* %26, i1 zeroext true) #8
  %31 = load %"class.gpu::ContextSupport"*, %"class.gpu::ContextSupport"** %25, align 8
  %32 = bitcast %"class.gpu::ContextSupport"* %31 to void (%"class.gpu::ContextSupport"*)***
  %33 = load void (%"class.gpu::ContextSupport"*)**, void (%"class.gpu::ContextSupport"*)*** %32, align 8
  %34 = load void (%"class.gpu::ContextSupport"*)*, void (%"class.gpu::ContextSupport"*)** %33, align 8
  tail call void %34(%"class.gpu::ContextSupport"* %31) #8
  br label %35

35:                                               ; preds = %24, %2
  %36 = icmp eq %"class.viz::ContextCacheController::ScopedToken"* %1, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %35
  tail call void @_ZdlPv(i8* %3) #9
  br label %38

38:                                               ; preds = %35, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheController30InvalidatePendingIdleCallbacksEv(%"class.viz::ContextCacheController"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !5

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 10
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #8
  ret void
}

declare void @_ZN15GrDirectContext16freeGpuResourcesEv(%class.GrDirectContext*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheController36ClientBecameNotVisibleDuringShutdownENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE(%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.69"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.viz::ContextCacheController::ScopedToken"*, %"class.viz::ContextCacheController::ScopedToken"** %4, align 8
  %6 = icmp eq %"class.viz::ContextCacheController::ScopedToken"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = ptrtoint %"class.viz::ContextCacheController::ScopedToken"* %1 to i64
  %9 = bitcast %"class.std::__1::unique_ptr.69"* %3 to i64*
  store i64 %8, i64* %9, align 8
  br label %15

10:                                               ; preds = %2
  %11 = bitcast %"class.viz::ContextCacheController"* %0 to void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)***
  %12 = load void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)**, void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)*, void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)** %12, i64 3
  %14 = load void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)*, void (%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*)** %13, align 8
  tail call void %14(%"class.viz::ContextCacheController"* %0, %"class.viz::ContextCacheController::ScopedToken"* %1) #8
  br label %15

15:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.viz::ContextCacheController::ScopedToken"* @_ZN3viz22ContextCacheController16ClientBecameBusyEv(%"class.viz::ContextCacheController"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 9
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !5

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 10
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #8
  %16 = tail call i8* @_Znwm(i64 1) #9
  %17 = bitcast i8* %16 to %"class.viz::ContextCacheController::ScopedToken"*
  store i8 0, i8* %16, align 1
  ret %"class.viz::ContextCacheController::ScopedToken"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheController19ClientBecameNotBusyENSt3__110unique_ptrINS0_11ScopedTokenENS1_14default_deleteIS3_EEEE(%"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController::ScopedToken"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.viz::ContextCacheController::ScopedToken", %"class.viz::ContextCacheController::ScopedToken"* %1, i64 0, i32 0
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 3
  %10 = load %class.GrDirectContext*, %class.GrDirectContext** %9, align 8
  %11 = icmp eq %class.GrDirectContext* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN15GrDirectContext22performDeferredCleanupENSt3__16chrono8durationIxNS0_5ratioILl1ELl1000EEEEE(%class.GrDirectContext* nonnull %10, i64 15000) #8
  %13 = load i32, i32* %6, align 4
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ %8, %2 ], [ %13, %12 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %63

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %63, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 2, i32 0
  %23 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %24, label %63, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 8
  %27 = load i8, i8* %26, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %63

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 9
  %31 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %30, i64 0, i32 0, i32 0
  %32 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %31) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34, !prof !5

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %30, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %35) #8
  br label %36

36:                                               ; preds = %29, %34
  %37 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 10
  %38 = load i32, i32* %37, align 8
  %39 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %41 = bitcast %"class.base::SingleThreadTaskRunner"* %40 to %"class.base::TaskRunner"*
  %42 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 154) #8
  %43 = call i8* @_Znwm(i64 72) #9, !noalias !7
  %44 = bitcast i8* %43 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %44, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8, !noalias !7
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::ContextCacheController"*, i32)* @_ZN3viz22ContextCacheController6OnIdleEj to i64), i64 0>, <2 x i64>* %46, align 8, !noalias !7
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = bitcast i8* %47 to %"class.base::internal::WeakReference"*
  %49 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %48, %"class.base::internal::WeakReference"* dereferenceable(8) %49) #8, !noalias !7
  %50 = getelementptr inbounds i8, i8* %43, i64 56
  %51 = bitcast i8* %50 to i64*
  %52 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 1
  %53 = load i64, i64* %52, align 8, !noalias !7
  store i64 %53, i64* %51, align 8, !noalias !7
  %54 = getelementptr inbounds i8, i8* %43, i64 64
  %55 = bitcast i8* %54 to i32*
  store i32 %38, i32* %55, align 4, !noalias !7
  %56 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %43, i8** %56, align 8, !alias.scope !7
  %57 = bitcast %"class.base::SingleThreadTaskRunner"* %40 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %58 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %57, align 8
  %59 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::TaskRunner"* %41, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4, i64 1000000) #8
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %62 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %31) #8
  store i8 1, i8* %26, align 8
  br label %63

63:                                               ; preds = %21, %25, %17, %36, %14
  %64 = icmp eq %"class.viz::ContextCacheController::ScopedToken"* %1, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %63
  call void @_ZdlPv(i8* %5) #9
  br label %66

66:                                               ; preds = %63, %65
  ret void
}

declare void @_ZN15GrDirectContext22performDeferredCleanupENSt3__16chrono8durationIxNS0_5ratioILl1ELl1000EEEEE(%class.GrDirectContext*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz22ContextCacheController16PostIdleCallbackEj(%"class.viz::ContextCacheController"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 2, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = bitcast %"class.base::SingleThreadTaskRunner"* %6 to %"class.base::TaskRunner"*
  %8 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 154) #8
  %9 = call i8* @_Znwm(i64 72) #9, !noalias !12
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8, !noalias !12
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::ContextCacheController"*, i32)* @_ZN3viz22ContextCacheController6OnIdleEj to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !12
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to %"class.base::internal::WeakReference"*
  %15 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %14, %"class.base::internal::WeakReference"* dereferenceable(8) %15) #8, !noalias !12
  %16 = getelementptr inbounds i8, i8* %9, i64 56
  %17 = bitcast i8* %16 to i64*
  %18 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !12
  store i64 %19, i64* %17, align 8, !noalias !12
  %20 = getelementptr inbounds i8, i8* %9, i64 64
  %21 = bitcast i8* %20 to i32*
  store i32 %1, i32* %21, align 4, !noalias !12
  %22 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %9, i8** %22, align 8, !alias.scope !12
  %23 = bitcast %"class.base::SingleThreadTaskRunner"* %6 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %24 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %23, align 8
  %25 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %24, align 8
  %26 = call zeroext i1 %25(%"class.base::TaskRunner"* %7, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4, i64 1000000) #8
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz22ContextCacheController6OnIdleEj(%"class.viz::ContextCacheController"*, i32) #2 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !5

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #8
  br label %13

13:                                               ; preds = %2, %11
  %14 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 10
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %43, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 2, i32 0
  %20 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %19, align 8
  %21 = bitcast %"class.base::SingleThreadTaskRunner"* %20 to %"class.base::TaskRunner"*
  %22 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 154) #8
  %23 = call i8* @_Znwm(i64 72) #9, !noalias !17
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8, !noalias !17
  %25 = getelementptr inbounds i8, i8* %23, i64 32
  %26 = bitcast i8* %25 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::ContextCacheController"*, i32)* @_ZN3viz22ContextCacheController6OnIdleEj to i64), i64 0>, <2 x i64>* %26, align 8, !noalias !17
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = bitcast i8* %27 to %"class.base::internal::WeakReference"*
  %29 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %28, %"class.base::internal::WeakReference"* dereferenceable(8) %29) #8, !noalias !17
  %30 = getelementptr inbounds i8, i8* %23, i64 56
  %31 = bitcast i8* %30 to i64*
  %32 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !17
  store i64 %33, i64* %31, align 8, !noalias !17
  %34 = getelementptr inbounds i8, i8* %23, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %15, i32* %35, align 4, !noalias !17
  %36 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %23, i8** %36, align 8, !alias.scope !17
  %37 = bitcast %"class.base::SingleThreadTaskRunner"* %20 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %38 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %37, align 8
  %39 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %38, align 8
  %40 = call zeroext i1 %39(%"class.base::TaskRunner"* %21, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6, i64 1000000) #8
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %42 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  br label %111

43:                                               ; preds = %13
  %44 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  %45 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 5
  %46 = load %"class.base::Lock"*, %"class.base::Lock"** %45, align 8
  %47 = icmp eq %"class.base::Lock"* %46, null
  br i1 %47, label %84, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %46, i64 0, i32 0, i32 0
  %50 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %49) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %48
  %53 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55, !prof !5

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %56) #8
  br label %57

57:                                               ; preds = %52, %55
  %58 = load i32, i32* %14, align 8
  %59 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %60 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 2, i32 0
  %61 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %60, align 8
  %62 = bitcast %"class.base::SingleThreadTaskRunner"* %61 to %"class.base::TaskRunner"*
  %63 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 154) #8
  %64 = call i8* @_Znwm(i64 72) #9, !noalias !22
  %65 = bitcast i8* %64 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %65, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8, !noalias !22
  %66 = getelementptr inbounds i8, i8* %64, i64 32
  %67 = bitcast i8* %66 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::ContextCacheController"*, i32)* @_ZN3viz22ContextCacheController6OnIdleEj to i64), i64 0>, <2 x i64>* %67, align 8, !noalias !22
  %68 = getelementptr inbounds i8, i8* %64, i64 48
  %69 = bitcast i8* %68 to %"class.base::internal::WeakReference"*
  %70 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %69, %"class.base::internal::WeakReference"* dereferenceable(8) %70) #8, !noalias !22
  %71 = getelementptr inbounds i8, i8* %64, i64 56
  %72 = bitcast i8* %71 to i64*
  %73 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 11, i32 0, i32 1
  %74 = load i64, i64* %73, align 8, !noalias !22
  store i64 %74, i64* %72, align 8, !noalias !22
  %75 = getelementptr inbounds i8, i8* %64, i64 64
  %76 = bitcast i8* %75 to i32*
  store i32 %58, i32* %76, align 4, !noalias !22
  %77 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %64, i8** %77, align 8, !alias.scope !22
  %78 = bitcast %"class.base::SingleThreadTaskRunner"* %61 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %79 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %78, align 8
  %80 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %79, align 8
  %81 = call zeroext i1 %80(%"class.base::TaskRunner"* %62, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4, i64 1000000) #8
  %82 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  %83 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #8
  br label %111

84:                                               ; preds = %43, %48
  %85 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 3
  %86 = load %class.GrDirectContext*, %class.GrDirectContext** %85, align 8
  %87 = icmp eq %class.GrDirectContext* %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  tail call void @_ZN15GrDirectContext16freeGpuResourcesEv(%class.GrDirectContext* nonnull %86) #8
  br label %89

89:                                               ; preds = %84, %88
  %90 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 1
  %91 = load %"class.gpu::ContextSupport"*, %"class.gpu::ContextSupport"** %90, align 8
  %92 = bitcast %"class.gpu::ContextSupport"* %91 to void (%"class.gpu::ContextSupport"*, i1)***
  %93 = load void (%"class.gpu::ContextSupport"*, i1)**, void (%"class.gpu::ContextSupport"*, i1)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %93, i64 5
  %95 = load void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %94, align 8
  tail call void %95(%"class.gpu::ContextSupport"* %91, i1 zeroext true) #8
  %96 = load %"class.gpu::ContextSupport"*, %"class.gpu::ContextSupport"** %90, align 8
  %97 = bitcast %"class.gpu::ContextSupport"* %96 to void (%"class.gpu::ContextSupport"*)***
  %98 = load void (%"class.gpu::ContextSupport"*)**, void (%"class.gpu::ContextSupport"*)*** %97, align 8
  %99 = load void (%"class.gpu::ContextSupport"*)*, void (%"class.gpu::ContextSupport"*)** %98, align 8
  tail call void %99(%"class.gpu::ContextSupport"* %96) #8
  %100 = load %"class.gpu::ContextSupport"*, %"class.gpu::ContextSupport"** %90, align 8
  %101 = bitcast %"class.gpu::ContextSupport"* %100 to void (%"class.gpu::ContextSupport"*, i1)***
  %102 = load void (%"class.gpu::ContextSupport"*, i1)**, void (%"class.gpu::ContextSupport"*, i1)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %102, i64 5
  %104 = load void (%"class.gpu::ContextSupport"*, i1)*, void (%"class.gpu::ContextSupport"*, i1)** %103, align 8
  tail call void %104(%"class.gpu::ContextSupport"* %100, i1 zeroext false) #8
  %105 = getelementptr inbounds %"class.viz::ContextCacheController", %"class.viz::ContextCacheController"* %0, i64 0, i32 8
  store i8 0, i8* %105, align 8
  %106 = load %"class.base::Lock"*, %"class.base::Lock"** %45, align 8
  %107 = icmp eq %"class.base::Lock"* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %89
  %109 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %106, i64 0, i32 0, i32 0
  %110 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %109) #8
  br label %111

111:                                              ; preds = %17, %89, %57, %108
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #7

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #7

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #7

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #7

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #8
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.viz::ContextCacheController"**
  %12 = load %"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController"** %11, align 8
  %13 = icmp eq %"class.viz::ContextCacheController"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #8
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #8
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #8
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.viz::ContextCacheController"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.viz::ContextCacheController"*, i32)**
  %39 = load void (%"class.viz::ContextCacheController"*, i32)*, void (%"class.viz::ContextCacheController"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.viz::ContextCacheController"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.viz::ContextCacheController"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.viz::ContextCacheController"* %30, i32 %44) #8
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz22ContextCacheControllerEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::ContextCacheController"**
  %9 = load %"class.viz::ContextCacheController"*, %"class.viz::ContextCacheController"** %8, align 8
  %10 = icmp ne %"class.viz::ContextCacheController"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #8
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #7

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #7

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3viz22ContextCacheControllerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3viz22ContextCacheControllerEE10GetWeakPtrEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i8 0, i8 2}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIMN3viz22ContextCacheControllerEFvjEJRKNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
