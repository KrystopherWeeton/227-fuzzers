; ModuleID = '../../pdf/ppapi_migration/bitmap.cc'
source_filename = "../../pdf/ppapi_migration/bitmap.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.pp::ImageData" = type { %"class.pp::Resource.base", %struct.PP_ImageDataDesc, i8* }
%"class.pp::Resource.base" = type <{ i32 (...)**, i32 }>
%struct.PP_ImageDataDesc = type { i32, %struct.PP_Size, i32 }
%struct.PP_Size = type { i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf23CreateN32PremulSkBitmapERK7SkISize(%class.SkBitmap* noalias sret, %struct.SkISize* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = bitcast %class.SkBitmap* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 56, i1 false)
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #5
  %5 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = bitcast %struct.SkISize* %1 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %8, align 16, !alias.scope !2
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %10 = bitcast %struct.SkISize* %9 to i64*
  store i64 %7, i64* %10, align 16, !alias.scope !2
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %3) #5
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 16
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = bitcast %class.SkColorSpace* %12 to i8*
  call void @_ZdlPv(i8* %19) #6
  br label %20

20:                                               ; preds = %18, %14, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf23SkBitmapFromPPImageDataENSt3__110unique_ptrIN2pp9ImageDataENS0_14default_deleteIS3_EEEE(%class.SkBitmap* noalias sret, %"class.pp::ImageData"*) local_unnamed_addr #0 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = alloca %class.SkBitmap, align 8
  %5 = getelementptr inbounds %"class.pp::ImageData", %"class.pp::ImageData"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %43, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.pp::ImageData", %"class.pp::ImageData"* %1, i64 0, i32 1, i32 1, i32 0
  %12 = load i32, i32* %11, align 4, !noalias !7
  %13 = icmp sgt i32 %12, 0
  %14 = select i1 %13, i32 %12, i32 0
  %15 = getelementptr inbounds %"class.pp::ImageData", %"class.pp::ImageData"* %1, i64 0, i32 1, i32 1, i32 1
  %16 = load i32, i32* %15, align 4, !noalias !7
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 32
  %21 = zext i32 %14 to i64
  %22 = or i64 %20, %21
  %23 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %23, align 16, !alias.scope !10
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %25 = bitcast %struct.SkISize* %24 to i64*
  store i64 %22, i64* %25, align 16, !alias.scope !10
  %26 = getelementptr inbounds %"class.pp::ImageData", %"class.pp::ImageData"* %1, i64 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.pp::ImageData", %"class.pp::ImageData"* %1, i64 0, i32 1, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %30) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %4) #5
  %31 = sext i32 %29 to i64
  %32 = bitcast %"class.pp::ImageData"* %1 to i8*
  %33 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %4, %struct.SkImageInfo* nonnull dereferenceable(24) %3, i8* %27, i64 %31, void (i8*, i8*)* nonnull @_ZN10chrome_pdf12_GLOBAL__N_116ReleaseImageDataEPvS1_, i8* %32) #5
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %4) #5
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %30) #5
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %10, align 16
  %35 = icmp eq %class.SkColorSpace* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %8
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %41) #6
  br label %42

42:                                               ; preds = %40, %36, %8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  br label %50

43:                                               ; preds = %2
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #5
  %44 = icmp eq %"class.pp::ImageData"* %1, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.pp::ImageData"* %1 to void (%"class.pp::ImageData"*)***
  %47 = load void (%"class.pp::ImageData"*)**, void (%"class.pp::ImageData"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.pp::ImageData"*)*, void (%"class.pp::ImageData"*)** %47, i64 1
  %49 = load void (%"class.pp::ImageData"*)*, void (%"class.pp::ImageData"*)** %48, align 8
  tail call void %49(%"class.pp::ImageData"* nonnull %1) #5
  br label %50

50:                                               ; preds = %42, %43, %45
  ret void
}

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10chrome_pdf12_GLOBAL__N_116ReleaseImageDataEPvS1_(i8* nocapture readnone, i8*) #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %1 to %"class.pp::ImageData"*
  %6 = bitcast i8* %1 to void (%"class.pp::ImageData"*)***
  %7 = load void (%"class.pp::ImageData"*)**, void (%"class.pp::ImageData"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.pp::ImageData"*)*, void (%"class.pp::ImageData"*)** %7, i64 1
  %9 = load void (%"class.pp::ImageData"*)*, void (%"class.pp::ImageData"*)** %8, align 8
  tail call void %9(%"class.pp::ImageData"* nonnull %5) #5
  br label %10

10:                                               ; preds = %4, %2
  ret void
}

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = distinct !{!5, !6, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE: argument 0"}
!6 = distinct !{!6, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK2pp9ImageData4sizeEv: argument 0"}
!9 = distinct !{!9, !"_ZNK2pp9ImageData4sizeEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!12 = distinct !{!12, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
