; ModuleID = '../../ui/gfx/shadow_util.cc'
source_filename = "../../ui/gfx/shadow_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.66, %class.sk_sp.67, %class.sk_sp.97, %class.sk_sp.98, %class.sk_sp.99, %class.sk_sp.100, i32, float, float, i32, %union.anon.101, [4 x i8] }>
%class.sk_sp.66 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.67 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.68", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.27, i32, %"class.absl::optional.73", %"class.std::__1::vector.78", %"class.std::__1::vector.85", %class.sk_sp.92, %class.sk_sp, i32, [4 x i8] }>
%"class.absl::optional.68" = type { %"class.absl::optional_internal::optional_data.69" }
%"class.absl::optional_internal::optional_data.69" = type { %"class.absl::optional_internal::optional_data_base.70" }
%"class.absl::optional_internal::optional_data_base.70" = type { %"class.absl::optional_internal::optional_data_dtor_base.71" }
%"class.absl::optional_internal::optional_data_dtor_base.71" = type { i8, %union.anon.72 }
%union.anon.72 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.27, %"class.gfx::Rect", i32, %class.sk_sp.32, %class.sk_sp.33, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.34 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.32 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.33 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.34 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.27 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.28", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i8* }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { i32*, i32*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i32* }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { float*, float*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { float* }
%class.sk_sp.92 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.93", [7 x i8] }>
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i8 }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.21, i32, i32 }
%class.sk_sp.21 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.97 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.98 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.99 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.100 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.101 = type { i32 }
%"struct.gfx::ShadowDetails" = type { %"class.std::__1::vector", %"class.gfx::ImageSkia" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.9" }
%"struct.std::__1::pair.9" = type { %"struct.std::__1::pair", %"struct.gfx::ShadowDetails" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.gfx::CanvasImageSource" = type { %"class.gfx::ImageSkiaSource", %"class.gfx::Size" }
%"class.gfx::ImageSkiaSource" = type { i32 (...)** }
%"class.gfx::(anonymous namespace)::ShadowNineboxSource" = type <{ %"class.gfx::CanvasImageSource", %"class.std::__1::vector", float, [4 x i8] }>
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.27, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.35, %class.SkPixmap, %class.sk_sp.36 }
%class.sk_sp.35 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.36 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional", %"class.absl::optional.37", %"class.cc::PaintCanvas"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkBitmap }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, [7 x i8], %union.anon.41 }
%union.anon.41 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.56", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.42, [384 x i64], %class.sk_sp.43, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.44", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.50" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.42 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.43 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZNK3gfx6InsetsngEv = comdat any

$_ZN4base12LazyInstanceINSt3__13mapINS1_4pairIiiEEN3gfx13ShadowDetailsENS1_4lessIS4_EENS1_9allocatorINS3_IKS4_S6_EEEEEENS_8internal34DestructorAtExitLazyInstanceTraitsISD_EEE6OnExitEPv = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JS3_S5_EEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN3gfx12_GLOBAL__N_119ShadowNineboxSourceE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::(anonymous namespace)::ShadowNineboxSource"*)* @_ZN3gfx12_GLOBAL__N_119ShadowNineboxSourceD2Ev to i8*), i8* bitcast (void (%"class.gfx::(anonymous namespace)::ShadowNineboxSource"*)* @_ZN3gfx12_GLOBAL__N_119ShadowNineboxSourceD0Ev to i8*), i8* bitcast (void (%"class.gfx::ImageSkiaRep"*, %"class.gfx::CanvasImageSource"*, float)* @_ZN3gfx17CanvasImageSource16GetImageForScaleEf to i8*), i8* bitcast (i1 (%"class.gfx::ImageSkiaSource"*)* @_ZNK3gfx15ImageSkiaSource28HasRepresentationAtAllScalesEv to i8*), i8* bitcast (void (%"class.gfx::(anonymous namespace)::ShadowNineboxSource"*, %"class.gfx::Canvas"*)* @_ZN3gfx12_GLOBAL__N_119ShadowNineboxSource4DrawEPNS_6CanvasE to i8*)] }, align 8
@__const._ZN3gfx12_GLOBAL__N_119ShadowNineboxSource4DrawEPNS_6CanvasE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.66 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.67 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.97 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.98 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.99 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.100 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.101 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN3gfx13ShadowDetailsC1Ev = hidden unnamed_addr alias void (%"struct.gfx::ShadowDetails"*), void (%"struct.gfx::ShadowDetails"*)* @_ZN3gfx13ShadowDetailsC2Ev
@_ZN3gfx13ShadowDetailsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gfx::ShadowDetails"*, %"struct.gfx::ShadowDetails"*), void (%"struct.gfx::ShadowDetails"*, %"struct.gfx::ShadowDetails"*)* @_ZN3gfx13ShadowDetailsC2ERKS0_
@_ZN3gfx13ShadowDetailsD1Ev = hidden unnamed_addr alias void (%"struct.gfx::ShadowDetails"*), void (%"struct.gfx::ShadowDetails"*)* @_ZN3gfx13ShadowDetailsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13ShadowDetailsC2Ev(%"struct.gfx::ShadowDetails"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.gfx::ShadowDetails"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #9
  %3 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %0, i64 0, i32 1
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %3) #9
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13ShadowDetailsC2ERKS0_(%"struct.gfx::ShadowDetails"*, %"struct.gfx::ShadowDetails"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.gfx::ShadowDetails"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.gfx::ShadowValue"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.gfx::ShadowDetails"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.gfx::ShadowDetails"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #10
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #11
  %18 = bitcast i8* %17 to %"class.gfx::ShadowValue"*
  %19 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.gfx::ShadowValue"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.gfx::ShadowDetails"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %18, i64 %10
  %23 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::ShadowValue"* %22, %"class.gfx::ShadowValue"** %23, align 8
  %24 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast %"class.gfx::ShadowValue"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint %"class.gfx::ShadowValue"* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = udiv exact i64 %30, 24
  %34 = bitcast %"class.gfx::ShadowValue"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %34, i64 %30, i1 false) #9
  %35 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %18, i64 %33
  %36 = ptrtoint %"class.gfx::ShadowValue"* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  %40 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %1, i64 0, i32 1
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %40, %"class.gfx::ImageSkia"* dereferenceable(8) %41) #9
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13ShadowDetailsD2Ev(%"struct.gfx::ShadowDetails"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %0, i64 0, i32 1
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %2) #9
  %3 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %3, align 8
  %5 = icmp eq %"class.gfx::ShadowValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.gfx::ShadowValue"* %4 to i64
  %8 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.gfx::ShadowValue"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.gfx::ShadowValue"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.gfx::ShadowDetails"* @_ZN3gfx13ShadowDetails3GetEii(i32, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca <4 x i32>, align 16
  %4 = bitcast <4 x i32>* %3 to %"class.gfx::Rect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.gfx::Insets", align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"struct.gfx::ShadowDetails", align 8
  %12 = alloca %"class.std::__1::vector", align 16
  %13 = alloca %"class.gfx::ImageSkia", align 8
  %14 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0) acquire, align 8
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0)) #9
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #9
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINSt3__13mapINS1_4pairIiiEEN3gfx13ShadowDetailsENS1_4lessIS4_EENS1_9allocatorINS3_IKS4_S6_EEEEEENS_8internal34DestructorAtExitLazyInstanceTraitsISD_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE to i8*)) #9
  br label %21

19:                                               ; preds = %16
  %20 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0) acquire, align 8
  br label %21

21:                                               ; preds = %2, %18, %19
  %22 = phi i64 [ %14, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i64), %18 ], [ %20, %19 ]
  %23 = inttoptr i64 %22 to %"class.std::__1::map"*
  %24 = zext i32 %1 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %0 to i64
  %27 = or i64 %25, %26
  %28 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node"**
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %71, label %32

32:                                               ; preds = %21, %52
  %33 = phi %"class.std::__1::__tree_end_node"* [ %54, %52 ], [ %28, %21 ]
  %34 = phi %"class.std::__1::__tree_node"* [ %55, %52 ], [ %30, %21 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, %0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  br label %52

41:                                               ; preds = %32
  %42 = icmp sgt i32 %36, %0
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, %1
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node"**
  br i1 %46, label %52, label %49

49:                                               ; preds = %43, %41
  %50 = bitcast %"class.std::__1::__tree_node"* %34 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %49, %43, %38
  %53 = phi %"class.std::__1::__tree_node"** [ %50, %49 ], [ %40, %38 ], [ %48, %43 ]
  %54 = phi %"class.std::__1::__tree_end_node"* [ %51, %49 ], [ %33, %38 ], [ %33, %43 ]
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %52
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %28
  br i1 %58, label %71, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::__value_type"*
  %62 = bitcast %"class.std::__1::__tree_end_node"* %60 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, %0
  br i1 %64, label %71, label %65

65:                                               ; preds = %59
  %66 = icmp slt i32 %63, %0
  br i1 %66, label %72, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %61, i64 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, %1
  br i1 %70, label %71, label %72

71:                                               ; preds = %67, %59, %57, %21
  br label %72

72:                                               ; preds = %65, %67, %71
  %73 = phi %"class.std::__1::__tree_end_node"* [ %28, %71 ], [ %54, %67 ], [ %54, %65 ]
  %74 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0) acquire, align 8
  %75 = icmp ugt i64 %74, 1
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0)) #9
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #9
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINSt3__13mapINS1_4pairIiiEEN3gfx13ShadowDetailsENS1_4lessIS4_EENS1_9allocatorINS3_IKS4_S6_EEEEEENS_8internal34DestructorAtExitLazyInstanceTraitsISD_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE to i8*)) #9
  br label %81

79:                                               ; preds = %76
  %80 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0) acquire, align 8
  br label %81

81:                                               ; preds = %72, %78, %79
  %82 = phi i64 [ %74, %72 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i64), %78 ], [ %80, %79 ]
  %83 = inttoptr i64 %82 to %"class.std::__1::map"*
  %84 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %83, i64 0, i32 0, i32 1, i32 0, i32 0
  %85 = icmp eq %"class.std::__1::__tree_end_node"* %73, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 5
  br label %231

88:                                               ; preds = %81
  %89 = bitcast i64* %10 to %"struct.std::__1::pair"*
  %90 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0) acquire, align 8
  %91 = icmp ugt i64 %90, 1
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0)) #9
  br i1 %93, label %94, label %95

94:                                               ; preds = %92
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #9
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINSt3__13mapINS1_4pairIiiEEN3gfx13ShadowDetailsENS1_4lessIS4_EENS1_9allocatorINS3_IKS4_S6_EEEEEENS_8internal34DestructorAtExitLazyInstanceTraitsISD_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE to i8*)) #9
  br label %97

95:                                               ; preds = %92
  %96 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 0) acquire, align 8
  br label %97

97:                                               ; preds = %88, %94, %95
  %98 = phi i64 [ %90, %88 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_114g_shadow_cacheE, i64 0, i32 1, i64 0) to i64), %94 ], [ %96, %95 ]
  %99 = inttoptr i64 %98 to %"class.std::__1::map"*
  %100 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #9
  store i64 %27, i64* %10, align 8
  %101 = bitcast %"struct.gfx::ShadowDetails"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %101) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 24, i1 false) #9
  %102 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %11, i64 0, i32 1
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %102) #9
  %103 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %99, i64 0, i32 0
  %104 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JS3_S5_EEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %103, %"struct.std::__1::pair"* nonnull dereferenceable(8) %89, %"struct.std::__1::pair"* nonnull dereferenceable(8) %89, %"struct.gfx::ShadowDetails"* nonnull dereferenceable(32) %11) #9
  %105 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %104, 0
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %102) #9
  %106 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %11, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %106, align 8
  %108 = icmp eq %"class.gfx::ShadowValue"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %97
  %110 = ptrtoint %"class.gfx::ShadowValue"* %107 to i64
  %111 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %11, i64 0, i32 0, i32 0, i32 1
  %112 = bitcast %"class.gfx::ShadowValue"** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = bitcast %"class.gfx::ShadowValue"* %107 to i8*
  call void @_ZdlPv(i8* %113) #11
  br label %114

114:                                              ; preds = %97, %109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %101) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #9
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 5
  %116 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #9
  call void @_ZN3gfx11ShadowValue18MakeMdShadowValuesEij(%"class.std::__1::vector"* nonnull sret %12, i32 %0, i32 -16777216) #9
  %117 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.std::__1::vector"*
  %118 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.gfx::ShadowValue"**
  %119 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %118, align 8
  %120 = icmp eq %"class.gfx::ShadowValue"* %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %114
  %122 = ptrtoint %"class.gfx::ShadowValue"* %119 to i64
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 6
  %124 = bitcast %"class.std::__1::__tree_end_node"* %123 to i64*
  store i64 %122, i64* %124, align 8
  %125 = bitcast %"class.gfx::ShadowValue"* %119 to i8*
  call void @_ZdlPv(i8* %125) #11
  %126 = bitcast %"class.std::__1::__tree_end_node"* %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #9
  br label %127

127:                                              ; preds = %121, %114
  %128 = bitcast %"class.std::__1::__tree_end_node"* %115 to i64*
  %129 = bitcast %"class.std::__1::vector"* %12 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 16
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 6
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to i64*
  %133 = bitcast %"class.std::__1::__tree_end_node"* %115 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast %"class.gfx::ShadowValue"** %134 to i64*
  %136 = load i64, i64* %135, align 16
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 7
  %138 = bitcast %"class.std::__1::__tree_end_node"* %137 to i64*
  store i64 %136, i64* %138, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #9
  %139 = call i8* @_Znwm(i64 48) #11
  %140 = sitofp i32 %1 to float
  %141 = bitcast i64* %9 to %"class.gfx::Size"*
  %142 = bitcast i8* %139 to %"class.gfx::CanvasImageSource"*
  %143 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #9
  %144 = bitcast { i64, i64 }* %5 to %"class.gfx::Insets"*
  %145 = bitcast { i64, i64 }* %6 to %"class.gfx::Insets"*
  %146 = bitcast { i64, i64 }* %7 to %"class.gfx::Insets"*
  %147 = bitcast <4 x i32>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #9
  store <4 x i32> <i32 0, i32 0, i32 1, i32 1>, <4 x i32>* %3, align 16
  %148 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #9
  %149 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #9
  %150 = call { i64, i64 } @_ZN3gfx11ShadowValue13GetBlurRegionERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24) %117) #9
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %152 = extractvalue { i64, i64 } %150, 0
  store i64 %152, i64* %151, align 8
  %153 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %154 = extractvalue { i64, i64 } %150, 1
  store i64 %154, i64* %153, align 8
  %155 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %145) #9
  %156 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %157 = extractvalue { i64, i64 } %155, 0
  store i64 %157, i64* %156, align 8
  %158 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %159 = extractvalue { i64, i64 } %155, 1
  store i64 %159, i64* %158, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Insets"* nonnull dereferenceable(16) %144) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #9
  %160 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #9
  %161 = bitcast %"class.gfx::Insets"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #9
  %162 = fptosi float %140 to i32
  %163 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %8, i64 0, i32 0
  store i32 %162, i32* %163, align 4
  %164 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %8, i64 0, i32 1
  store i32 %162, i32* %164, align 4
  %165 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %8, i64 0, i32 2
  %166 = icmp sgt i32 %162, 0
  %167 = sub nuw nsw i32 2147483647, %162
  %168 = icmp ult i32 %167, %162
  %169 = and i1 %166, %168
  br i1 %169, label %176, label %170

170:                                              ; preds = %127
  %171 = icmp slt i32 %162, 0
  %172 = sub nsw i32 -2147483648, %162
  %173 = icmp sgt i32 %172, %162
  %174 = and i1 %171, %173
  %175 = select i1 %174, i32 %172, i32 %162
  br label %176

176:                                              ; preds = %170, %127
  %177 = phi i32 [ %175, %170 ], [ %167, %127 ]
  store i32 %177, i32* %165, align 4
  %178 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %8, i64 0, i32 3
  store i32 %177, i32* %178, align 4
  %179 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %8) #9
  %180 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %181 = extractvalue { i64, i64 } %179, 0
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %183 = extractvalue { i64, i64 } %179, 1
  store i64 %183, i64* %182, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Insets"* nonnull dereferenceable(16) %146) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #9
  %184 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %185 = bitcast %"class.gfx::Size"* %184 to i64*
  %186 = load i64, i64* %185, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #9
  store i64 %186, i64* %9, align 8
  call void @_ZN3gfx17CanvasImageSourceC2ERKNS_4SizeE(%"class.gfx::CanvasImageSource"* nonnull %142, %"class.gfx::Size"* nonnull dereferenceable(8) %141) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #9
  %187 = bitcast i8* %139 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_119ShadowNineboxSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %188 = getelementptr inbounds i8, i8* %139, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #9
  %189 = load i64, i64* %132, align 8
  %190 = load i64, i64* %128, align 8
  %191 = sub i64 %189, %190
  %192 = sdiv exact i64 %191, 24
  %193 = icmp eq i64 %191, 0
  br i1 %193, label %221, label %194

194:                                              ; preds = %176
  %195 = icmp ugt i64 %192, 768614336404564650
  br i1 %195, label %196, label %198

196:                                              ; preds = %194
  %197 = bitcast i8* %188 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %197) #10
  unreachable

198:                                              ; preds = %194
  %199 = call i8* @_Znwm(i64 %191) #11
  %200 = bitcast i8* %199 to %"class.gfx::ShadowValue"*
  %201 = getelementptr inbounds i8, i8* %139, i64 24
  %202 = bitcast i8* %201 to i8**
  store i8* %199, i8** %202, align 8
  %203 = bitcast i8* %188 to i8**
  store i8* %199, i8** %203, align 8
  %204 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %200, i64 %192
  %205 = getelementptr inbounds i8, i8* %139, i64 32
  %206 = bitcast i8* %205 to %"class.gfx::ShadowValue"**
  store %"class.gfx::ShadowValue"* %204, %"class.gfx::ShadowValue"** %206, align 8
  %207 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %118, align 8
  %208 = load i64, i64* %132, align 8
  %209 = bitcast i8* %201 to i64*
  %210 = ptrtoint i8* %199 to i64
  %211 = ptrtoint %"class.gfx::ShadowValue"* %207 to i64
  %212 = sub i64 %208, %211
  %213 = icmp sgt i64 %212, 0
  br i1 %213, label %214, label %219

214:                                              ; preds = %198
  %215 = udiv exact i64 %212, 24
  %216 = bitcast %"class.gfx::ShadowValue"* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %199, i8* align 8 %216, i64 %212, i1 false) #9
  %217 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %200, i64 %215
  %218 = ptrtoint %"class.gfx::ShadowValue"* %217 to i64
  br label %219

219:                                              ; preds = %214, %198
  %220 = phi i64 [ %218, %214 ], [ %210, %198 ]
  store i64 %220, i64* %209, align 8
  br label %221

221:                                              ; preds = %219, %176
  %222 = getelementptr inbounds i8, i8* %139, i64 40
  %223 = bitcast i8* %222 to float*
  store float %140, float* %223, align 8
  %224 = bitcast %"class.gfx::ImageSkia"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #9
  %225 = getelementptr inbounds i8, i8* %139, i64 8
  %226 = bitcast i8* %225 to %"class.gfx::Size"*
  %227 = bitcast i8* %139 to %"class.gfx::ImageSkiaSource"*
  call void @_ZN3gfx9ImageSkiaC1ENSt3__110unique_ptrINS_15ImageSkiaSourceENS1_14default_deleteIS3_EEEERKNS_4SizeE(%"class.gfx::ImageSkia"* nonnull %13, %"class.gfx::ImageSkiaSource"* nonnull %227, %"class.gfx::Size"* dereferenceable(8) %226) #9
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 8
  %229 = bitcast %"class.std::__1::__tree_end_node"* %228 to %"class.gfx::ImageSkia"*
  %230 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %229, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %13) #9
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #9
  br label %231

231:                                              ; preds = %221, %86
  %232 = phi %"class.std::__1::__tree_end_node"* [ %87, %86 ], [ %115, %221 ]
  %233 = bitcast %"class.std::__1::__tree_end_node"* %232 to %"struct.gfx::ShadowDetails"*
  ret %"struct.gfx::ShadowDetails"* %233
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN3gfx11ShadowValue18MakeMdShadowValuesEij(%"class.std::__1::vector"* sret, i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3gfx9ImageSkiaC1ENSt3__110unique_ptrINS_15ImageSkiaSourceENS1_14default_deleteIS3_EEEERKNS_4SizeE(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkiaSource"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3gfx17CanvasImageSourceC2ERKNS_4SizeE(%"class.gfx::CanvasImageSource"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_119ShadowNineboxSourceD2Ev(%"class.gfx::(anonymous namespace)::ShadowNineboxSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_119ShadowNineboxSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %3, align 8
  %5 = icmp eq %"class.gfx::ShadowValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.gfx::ShadowValue"* %4 to i64
  %8 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.gfx::ShadowValue"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.gfx::ShadowValue"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_119ShadowNineboxSourceD0Ev(%"class.gfx::(anonymous namespace)::ShadowNineboxSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_119ShadowNineboxSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %3, align 8
  %5 = icmp eq %"class.gfx::ShadowValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.gfx::ShadowValue"* %4 to i64
  %8 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.gfx::ShadowValue"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.gfx::ShadowValue"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"* %12) #9
  %13 = bitcast %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

declare void @_ZN3gfx17CanvasImageSource16GetImageForScaleEf(%"class.gfx::ImageSkiaRep"* sret, %"class.gfx::CanvasImageSource"*, float) unnamed_addr #1

declare zeroext i1 @_ZNK3gfx15ImageSkiaSource28HasRepresentationAtAllScalesEv(%"class.gfx::ImageSkiaSource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_119ShadowNineboxSource4DrawEPNS_6CanvasE(%"class.gfx::(anonymous namespace)::ShadowNineboxSource"*, %"class.gfx::Canvas"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintFlags", align 8
  %4 = alloca %class.sk_sp.99, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Insets"*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"class.gfx::Insets"*
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca %class.SkRRect, align 4
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %13 = bitcast %"class.cc::PaintFlags"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN3gfx12_GLOBAL__N_119ShadowNineboxSource4DrawEPNS_6CanvasE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %3) #9
  %14 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 1
  call void @_ZN3gfx22CreateShadowDrawLooperERKNSt3__16vectorINS_11ShadowValueENS0_9allocatorIS2_EEEE(%class.sk_sp.99* nonnull sret %4, %"class.std::__1::vector"* dereferenceable(24) %14) #9
  %15 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %3, i64 0, i32 4
  %16 = getelementptr inbounds %class.sk_sp.99, %class.sk_sp.99* %4, i64 0, i32 0
  %17 = bitcast %class.sk_sp.99* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.SkDrawLooper* null, %class.SkDrawLooper** %16, align 8
  %19 = getelementptr inbounds %class.sk_sp.99, %class.sk_sp.99* %15, i64 0, i32 0
  %20 = load %class.SkDrawLooper*, %class.SkDrawLooper** %19, align 8
  %21 = bitcast %class.sk_sp.99* %15 to i64*
  store i64 %18, i64* %21, align 8
  %22 = icmp eq %class.SkDrawLooper* %20, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkDrawLooper* %20 to %class.SkRefCntBase*
  %29 = bitcast %class.SkDrawLooper* %20 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  call void %32(%class.SkRefCntBase* nonnull %28) #9
  br label %33

33:                                               ; preds = %2, %23, %27
  %34 = load %class.SkDrawLooper*, %class.SkDrawLooper** %16, align 8
  %35 = icmp eq %class.SkDrawLooper* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %class.SkDrawLooper* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.SkDrawLooper* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  call void %45(%class.SkRefCntBase* nonnull %41) #9
  br label %46

46:                                               ; preds = %33, %36, %40
  %47 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %49 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #9
  %50 = call { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24) %14) #9
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %52 = extractvalue { i64, i64 } %50, 0
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %54 = extractvalue { i64, i64 } %50, 1
  store i64 %54, i64* %53, align 8
  %55 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %8)
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %57 = extractvalue { i64, i64 } %55, 0
  store i64 %57, i64* %56, align 8
  %58 = extractvalue { i64, i64 } %55, 1
  store i64 %58, i64* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #9
  %59 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %60, align 4
  store i32 0, i32* %61, align 4
  %63 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1
  %64 = bitcast %"class.gfx::Size"* %62 to i64*
  %65 = bitcast %"class.gfx::Size"* %63 to i64*
  %66 = load i64, i64* %64, align 4
  store i64 %66, i64* %65, align 4
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %9, %"class.gfx::Insets"* nonnull dereferenceable(16) %6) #9
  %67 = bitcast %class.SkRRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %67) #9
  %68 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %10, i64 0, i32 2
  %69 = bitcast %class.SkRRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %69, i8 -1, i64 48, i1 false)
  store i32 -1431655766, i32* %68, align 4
  %70 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #9
  %71 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %9) #9
  %72 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %73 = extractvalue { <2 x float>, <2 x float> } %71, 0
  store <2 x float> %73, <2 x float>* %72, align 8
  %74 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %75 = extractvalue { <2 x float>, <2 x float> } %71, 1
  store <2 x float> %75, <2 x float>* %74, align 8
  %76 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ShadowNineboxSource", %"class.gfx::(anonymous namespace)::ShadowNineboxSource"* %0, i64 0, i32 2
  %77 = load float, float* %76, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %67, i8 0, i64 52, i1 false) #9, !alias.scope !2
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %10, %struct.SkRect* nonnull dereferenceable(16) %12, float %77, float %77) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #9
  %78 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 4
  %79 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %78, align 8
  %80 = bitcast %"class.cc::PaintCanvas"* %79 to void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)***
  %81 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)** %81, i64 19
  %83 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)** %82, align 8
  call void %83(%"class.cc::PaintCanvas"* %79, %class.SkRRect* nonnull dereferenceable(52) %10, i32 0, i1 zeroext true) #9
  %84 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %3, i64 0, i32 6
  store i32 0, i32* %84, align 8
  %85 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %78, align 8
  %86 = bitcast %"class.cc::PaintCanvas"* %85 to void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)***
  %87 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)**, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %87, i64 31
  %89 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %88, align 8
  call void %89(%"class.cc::PaintCanvas"* %85, %class.SkRRect* nonnull dereferenceable(52) %10, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %67) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #9
  ret void
}

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx11ShadowValue13GetBlurRegionERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i1 @llvm.is.constant.i32(i32 %3) #9
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sub i32 0, %3
  %7 = icmp eq i32 %6, -2147483648
  %8 = select i1 %7, i32 2147483647, i32 %6
  br label %14

9:                                                ; preds = %1
  %10 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %3) #9
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 2147483647, i32 %12
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi i32 [ %8, %5 ], [ %13, %9 ]
  %16 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = tail call i1 @llvm.is.constant.i32(i32 %17) #9
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = sub i32 0, %17
  %21 = icmp eq i32 %20, -2147483648
  %22 = select i1 %21, i32 2147483647, i32 %20
  br label %28

23:                                               ; preds = %14
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %17) #9
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi i32 [ %22, %19 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = tail call i1 @llvm.is.constant.i32(i32 %31) #9
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = sub i32 0, %31
  %35 = icmp eq i32 %34, -2147483648
  %36 = select i1 %35, i32 2147483647, i32 %34
  br label %42

37:                                               ; preds = %28
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %31) #9
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 2147483647, i32 %40
  br label %42

42:                                               ; preds = %33, %37
  %43 = phi i32 [ %36, %33 ], [ %41, %37 ]
  %44 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = tail call i1 @llvm.is.constant.i32(i32 %45) #9
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = sub i32 0, %45
  %49 = icmp eq i32 %48, -2147483648
  %50 = select i1 %49, i32 2147483647, i32 %48
  br label %56

51:                                               ; preds = %42
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %45) #9
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 2147483647, i32 %54
  br label %56

56:                                               ; preds = %47, %51
  %57 = phi i32 [ %50, %47 ], [ %55, %51 ]
  %58 = icmp sgt i32 %15, 0
  %59 = icmp sgt i32 %43, 0
  %60 = and i1 %58, %59
  %61 = sub nuw nsw i32 2147483647, %15
  %62 = icmp ult i32 %61, %43
  %63 = and i1 %62, %60
  br i1 %63, label %71, label %64

64:                                               ; preds = %56
  %65 = and i32 %43, %15
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %15
  %68 = icmp sgt i32 %67, %43
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %43
  br label %71

71:                                               ; preds = %64, %56
  %72 = phi i32 [ %70, %64 ], [ %61, %56 ]
  %73 = icmp sgt i32 %29, 0
  %74 = icmp sgt i32 %57, 0
  %75 = and i1 %73, %74
  %76 = sub nuw nsw i32 2147483647, %29
  %77 = icmp ult i32 %76, %57
  %78 = and i1 %77, %75
  br i1 %78, label %86, label %79

79:                                               ; preds = %71
  %80 = and i32 %57, %29
  %81 = icmp slt i32 %80, 0
  %82 = sub nsw i32 -2147483648, %29
  %83 = icmp sgt i32 %82, %57
  %84 = and i1 %83, %81
  %85 = select i1 %84, i32 %82, i32 %57
  br label %86

86:                                               ; preds = %71, %79
  %87 = phi i32 [ %85, %79 ], [ %76, %71 ]
  %88 = zext i32 %29 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %15 to i64
  %91 = or i64 %89, %90
  %92 = insertvalue { i64, i64 } undef, i64 %91, 0
  %93 = zext i32 %87 to i64
  %94 = shl nuw i64 %93, 32
  %95 = zext i32 %72 to i64
  %96 = or i64 %94, %95
  %97 = insertvalue { i64, i64 } %92, i64 %96, 1
  ret { i64, i64 } %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind
declare void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

declare void @_ZN3gfx22CreateShadowDrawLooperERKNSt3__16vectorINS_11ShadowValueENS0_9allocatorIS2_EEEE(%class.sk_sp.99* sret, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

declare void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceINSt3__13mapINS1_4pairIiiEEN3gfx13ShadowDetailsENS1_4lessIS4_EENS1_9allocatorINS3_IKS4_S6_EEEEEENS_8internal34DestructorAtExitLazyInstanceTraitsISD_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.std::__1::map"*
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #9
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %10) #9
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %11, align 8
  %13 = icmp eq %"class.gfx::ShadowValue"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = ptrtoint %"class.gfx::ShadowValue"* %12 to i64
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast %"class.gfx::ShadowValue"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.gfx::ShadowValue"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %4, %14
  %20 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JS3_S5_EEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.std::__1::pair"* dereferenceable(8), %"struct.std::__1::pair"* dereferenceable(8), %"struct.gfx::ShadowDetails"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %43, %9
  %16 = phi %"class.std::__1::__tree_node"* [ %46, %43 ], [ %7, %9 ]
  %17 = phi %"class.std::__1::__tree_node_base"** [ %45, %43 ], [ %10, %9 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %12, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = icmp slt i32 %19, %12
  br i1 %22, label %35, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %14, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %23, %15
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  br label %49

33:                                               ; preds = %23
  %34 = icmp slt i32 %25, %14
  br i1 %34, label %35, label %41

35:                                               ; preds = %33, %21
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  br label %49

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  br label %49

43:                                               ; preds = %35, %27
  %44 = phi %"class.std::__1::__tree_node_base"* [ %29, %27 ], [ %37, %35 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %28, %27 ], [ %36, %35 ]
  %46 = bitcast %"class.std::__1::__tree_node_base"* %44 to %"class.std::__1::__tree_node"*
  br label %15

47:                                               ; preds = %4
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %49

49:                                               ; preds = %31, %39, %41, %47
  %50 = phi %"class.std::__1::__tree_end_node"* [ %5, %47 ], [ %32, %31 ], [ %40, %39 ], [ %42, %41 ]
  %51 = phi %"class.std::__1::__tree_node_base"** [ %48, %47 ], [ %28, %31 ], [ %36, %39 ], [ %17, %41 ]
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to %"class.std::__1::__tree_node"**
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %118

55:                                               ; preds = %49
  %56 = tail call i8* @_Znwm(i64 72) #11, !noalias !5
  %57 = getelementptr inbounds i8, i8* %56, i64 32
  %58 = bitcast %"struct.std::__1::pair"* %2 to i64*
  %59 = bitcast i8* %57 to i64*
  %60 = load i64, i64* %58, align 4, !noalias !5
  store i64 %60, i64* %59, align 8, !noalias !5
  %61 = getelementptr inbounds i8, i8* %56, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #9, !noalias !5
  %62 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %3, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.gfx::ShadowValue"** %62 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !5
  %65 = bitcast %"struct.gfx::ShadowDetails"* %3 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !5
  %67 = sub i64 %64, %66
  %68 = sdiv exact i64 %67, 24
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %55
  %71 = icmp ugt i64 %68, 768614336404564650
  br i1 %71, label %72, label %74

72:                                               ; preds = %70
  %73 = bitcast i8* %61 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %73) #10, !noalias !5
  unreachable

74:                                               ; preds = %70
  %75 = tail call i8* @_Znwm(i64 %67) #11, !noalias !5
  %76 = bitcast i8* %75 to %"class.gfx::ShadowValue"*
  %77 = getelementptr inbounds i8, i8* %56, i64 48
  %78 = bitcast i8* %77 to i8**
  store i8* %75, i8** %78, align 8, !noalias !5
  %79 = bitcast i8* %61 to i8**
  store i8* %75, i8** %79, align 8, !noalias !5
  %80 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %76, i64 %68
  %81 = getelementptr inbounds i8, i8* %56, i64 56
  %82 = bitcast i8* %81 to %"class.gfx::ShadowValue"**
  store %"class.gfx::ShadowValue"* %80, %"class.gfx::ShadowValue"** %82, align 8, !noalias !5
  %83 = bitcast i8* %77 to i64*
  %84 = ptrtoint i8* %75 to i64
  %85 = icmp sgt i64 %67, 0
  br i1 %85, label %86, label %91

86:                                               ; preds = %74
  %87 = udiv exact i64 %67, 24
  %88 = inttoptr i64 %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 %88, i64 %67, i1 false) #9, !noalias !5
  %89 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %76, i64 %87
  %90 = ptrtoint %"class.gfx::ShadowValue"* %89 to i64
  br label %91

91:                                               ; preds = %86, %74
  %92 = phi i64 [ %90, %86 ], [ %84, %74 ]
  store i64 %92, i64* %83, align 8, !noalias !5
  br label %93

93:                                               ; preds = %55, %91
  %94 = getelementptr inbounds i8, i8* %56, i64 64
  %95 = bitcast i8* %94 to %"class.gfx::ImageSkia"*
  %96 = getelementptr inbounds %"struct.gfx::ShadowDetails", %"struct.gfx::ShadowDetails"* %3, i64 0, i32 1
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %95, %"class.gfx::ImageSkia"* dereferenceable(8) %96) #9, !noalias !5
  %97 = bitcast i8* %56 to %"class.std::__1::__tree_node"*
  %98 = bitcast i8* %56 to %"class.std::__1::__tree_node_base"*
  %99 = getelementptr inbounds i8, i8* %56, i64 16
  %100 = bitcast i8* %99 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %100, align 8
  %101 = bitcast %"class.std::__1::__tree_node_base"** %51 to i8**
  store i8* %56, i8** %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %93
  %108 = ptrtoint %"class.std::__1::__tree_node_base"* %105 to i64
  %109 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %108, i64* %109, align 8
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  br label %111

111:                                              ; preds = %107, %93
  %112 = phi %"class.std::__1::__tree_node_base"* [ %98, %93 ], [ %110, %107 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %114, %"class.std::__1::__tree_node_base"* %112) #9
  %115 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %115, align 8
  br label %118

118:                                              ; preds = %111, %49
  %119 = phi i8 [ 1, %111 ], [ 0, %49 ]
  %120 = phi %"class.std::__1::__tree_node"* [ %97, %111 ], [ %53, %49 ]
  %121 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %120, i64 0, i32 0, i32 0
  %122 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %121, 0
  %123 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %122, i8 %119, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7SkRRect10MakeRectXYERK6SkRectff: argument 0"}
!4 = distinct !{!4, !"_ZN7SkRRect10MakeRectXYERK6SkRectff"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJS3_S5_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN3gfx13ShadowDetailsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJS3_S5_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
