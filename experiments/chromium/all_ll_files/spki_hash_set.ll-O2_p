; ModuleID = '../../services/network/public/cpp/spki_hash_set.cc'
source_filename = "../../services/network/public/cpp/spki_hash_set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"*, %"class.std::__1::__compressed_pair.8" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.net::SHA256HashValue"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.net::HashValue" = type { i32, %union.anon.13 }
%union.anon.13 = type { %"struct.net::SHA256HashValue" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer" = type { %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::allocator.11"* }
%"class.std::__1::allocator.11" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN3net15SHA256HashValueENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3net15SHA256HashValueERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"sha256/\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"../../services/network/public/cpp/spki_hash_set.cc\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"Invalid SPKI: \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network17CreateSPKIHashSetERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEE(%"class.base::internal::flat_tree"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.net::HashValue", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"struct.net::SHA256HashValue", align 1
  %7 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::internal::flat_tree"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %10, %12
  br i1 %13, label %30, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.net::HashValue"* %3 to i8*
  %17 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %3, i64 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.logging::LogMessage"* %5 to i8*
  %24 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  %26 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %6, i64 0, i32 0, i64 0
  %27 = bitcast %"struct.net::SHA256HashValue"** %15 to i64*
  %28 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  br label %31

30:                                               ; preds = %97, %2
  ret void

31:                                               ; preds = %14, %97
  %32 = phi %"class.std::__1::basic_string"* [ %10, %14 ], [ %98, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -86, i64 32, i1 false)
  store i32 0, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %32) #9
  %33 = load i8, i8* %20, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %21, align 8
  %36 = select i1 %34, i8* %35, i8* %18
  %37 = load i64, i64* %22, align 8
  %38 = zext i8 %33 to i64
  %39 = select i1 %34, i64 %37, i64 %38
  %40 = call zeroext i1 @_ZN3net9HashValue10FromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HashValue"* nonnull %3, i8* %36, i64 %39) #9
  %41 = load i8, i8* %20, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %31, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br i1 %40, label %63, label %46

46:                                               ; preds = %45
  %47 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %47, label %48, label %97

48:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %23) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 19, i32 2) #9
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14) #9
  %50 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %59 = zext i8 %52 to i64
  %60 = select i1 %53, i8* %55, i8* %58
  %61 = select i1 %53, i64 %57, i64 %59
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %49, i8* %60, i64 %61) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %23) #9
  br label %97

63:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %26, i8 -86, i64 32, i1 false)
  %64 = call i8* @_ZN3net9HashValue4dataEv(%"class.net::HashValue"* nonnull %3) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %64, i64 32, i1 false)
  %65 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %7, align 8
  %66 = load i64, i64* %27, align 8
  %67 = ptrtoint %"struct.net::SHA256HashValue"* %65 to i64
  %68 = sub i64 %66, %67
  %69 = icmp eq i64 %68, 0
  %70 = inttoptr i64 %66 to %"struct.net::SHA256HashValue"*
  br i1 %69, label %87, label %71

71:                                               ; preds = %63
  %72 = ashr exact i64 %68, 5
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi %"struct.net::SHA256HashValue"* [ %65, %71 ], [ %85, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %84, %73 ]
  %76 = lshr i64 %75, 1
  %77 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %74, i64 %76
  %78 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %77, i64 0, i32 0, i64 0
  %79 = call i32 @memcmp(i8* %78, i8* nonnull %26, i64 32) #11
  %80 = icmp slt i32 %79, 0
  %81 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %77, i64 1
  %82 = xor i64 %76, -1
  %83 = add i64 %75, %82
  %84 = select i1 %80, i64 %83, i64 %76
  %85 = select i1 %80, %"struct.net::SHA256HashValue"* %81, %"struct.net::SHA256HashValue"* %74
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %87, label %73

87:                                               ; preds = %73, %63
  %88 = phi %"struct.net::SHA256HashValue"* [ %65, %63 ], [ %85, %73 ]
  %89 = icmp eq %"struct.net::SHA256HashValue"* %88, %70
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %88, i64 0, i32 0, i64 0
  %92 = call i32 @memcmp(i8* nonnull %26, i8* %91, i64 32) #11
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %90, %87
  %95 = call %"struct.net::SHA256HashValue"* @_ZNSt3__16vectorIN3net15SHA256HashValueENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.6"* %28, %"struct.net::SHA256HashValue"* %88, %"struct.net::SHA256HashValue"* nonnull dereferenceable(32) %6) #9
  br label %96

96:                                               ; preds = %90, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #9
  br label %97

97:                                               ; preds = %48, %46, %96
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %16) #9
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %99 = icmp eq %"class.std::__1::basic_string"* %98, %12
  br i1 %99, label %30, label %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net9HashValue10FromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HashValue"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare i8* @_ZN3net9HashValue4dataEv(%"class.net::HashValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.net::SHA256HashValue"* @_ZNSt3__16vectorIN3net15SHA256HashValueENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.6"*, %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.net::SHA256HashValue"* %1 to i64
  %5 = alloca [32 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %10, align 8
  %12 = icmp ult %"struct.net::SHA256HashValue"* %9, %11
  %13 = ptrtoint %"struct.net::SHA256HashValue"* %9 to i64
  %14 = ptrtoint %"struct.net::SHA256HashValue"* %11 to i64
  br i1 %12, label %15, label %83

15:                                               ; preds = %3
  %16 = icmp eq %"struct.net::SHA256HashValue"* %9, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %1, i64 0, i32 0, i64 0
  %19 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %19, i64 32, i1 false) #9
  %20 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %1, i64 1
  %21 = ptrtoint %"struct.net::SHA256HashValue"* %20 to i64
  %22 = bitcast %"struct.net::SHA256HashValue"** %8 to i64*
  store i64 %21, i64* %22, align 8
  br label %225

23:                                               ; preds = %15
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24)
  %25 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %2, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 %25, i64 32, i1 false)
  %26 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %1, i64 1
  %27 = ptrtoint %"struct.net::SHA256HashValue"* %26 to i64
  %28 = sub i64 %13, %27
  %29 = ashr exact i64 %28, 5
  %30 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %1, i64 %29
  %31 = bitcast %"struct.net::SHA256HashValue"** %8 to i64*
  %32 = icmp ult %"struct.net::SHA256HashValue"* %30, %9
  br i1 %32, label %33, label %60

33:                                               ; preds = %23
  %34 = sub nsw i64 0, %29
  %35 = xor i64 %4, -1
  %36 = getelementptr %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %9, i64 %34, i32 0, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 5
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 3
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %33, %42
  %43 = phi %"struct.net::SHA256HashValue"* [ %49, %42 ], [ %9, %33 ]
  %44 = phi %"struct.net::SHA256HashValue"* [ %48, %42 ], [ %30, %33 ]
  %45 = phi i64 [ %50, %42 ], [ %40, %33 ]
  %46 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %43, i64 0, i32 0, i64 0
  %47 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %44, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %47, i64 32, i1 false) #9
  %48 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %44, i64 1
  %49 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %43, i64 1
  %50 = add i64 %45, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %42, !llvm.loop !3

52:                                               ; preds = %42, %33
  %53 = phi %"struct.net::SHA256HashValue"* [ %9, %33 ], [ %49, %42 ]
  %54 = phi %"struct.net::SHA256HashValue"* [ %30, %33 ], [ %48, %42 ]
  %55 = phi %"struct.net::SHA256HashValue"* [ undef, %33 ], [ %49, %42 ]
  %56 = icmp ult i8* %36, inttoptr (i64 96 to i8*)
  br i1 %56, label %57, label %67

57:                                               ; preds = %67, %52
  %58 = phi %"struct.net::SHA256HashValue"* [ %55, %52 ], [ %79, %67 ]
  %59 = ptrtoint %"struct.net::SHA256HashValue"* %58 to i64
  br label %60

60:                                               ; preds = %57, %23
  %61 = phi i64 [ %59, %57 ], [ %13, %23 ]
  store i64 %61, i64* %31, align 8
  %62 = icmp eq i64 %28, 0
  br i1 %62, label %81, label %63

63:                                               ; preds = %60
  %64 = sub nsw i64 0, %29
  %65 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %9, i64 %64, i32 0, i64 0
  %66 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %66, i64 %28, i1 false) #9
  br label %81

67:                                               ; preds = %52, %67
  %68 = phi %"struct.net::SHA256HashValue"* [ %79, %67 ], [ %53, %52 ]
  %69 = phi %"struct.net::SHA256HashValue"* [ %78, %67 ], [ %54, %52 ]
  %70 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %68, i64 0, i32 0, i64 0
  %71 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %69, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %71, i64 32, i1 false) #9
  %72 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %68, i64 1, i32 0, i64 0
  %73 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %69, i64 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %73, i64 32, i1 false) #9
  %74 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %68, i64 2, i32 0, i64 0
  %75 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %69, i64 2, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %75, i64 32, i1 false) #9
  %76 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %68, i64 3, i32 0, i64 0
  %77 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %69, i64 3, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %77, i64 32, i1 false) #9
  %78 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %69, i64 4
  %79 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %68, i64 4
  %80 = icmp ult %"struct.net::SHA256HashValue"* %78, %9
  br i1 %80, label %67, label %57

81:                                               ; preds = %60, %63
  %82 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %1, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* nonnull align 8 %24, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24)
  br label %225

83:                                               ; preds = %3
  %84 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2
  %85 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %85) #9
  %86 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %89 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %91 = bitcast %"struct.net::SHA256HashValue"** %8 to i64*
  %92 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %93 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 40, i1 false)
  %94 = load i64, i64* %92, align 8
  %95 = sub i64 %13, %94
  %96 = ashr exact i64 %95, 5
  %97 = add nsw i64 %96, 1
  %98 = icmp ugt i64 %97, 576460752303423487
  br i1 %98, label %99, label %101

99:                                               ; preds = %83
  %100 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #12
  unreachable

101:                                              ; preds = %83
  %102 = bitcast %"struct.net::SHA256HashValue"** %10 to i64*
  %103 = sub i64 %14, %94
  %104 = ashr exact i64 %103, 5
  %105 = icmp ult i64 %104, 288230376151711743
  br i1 %105, label %110, label %106

106:                                              ; preds = %101
  %107 = sub i64 %4, %94
  %108 = ashr exact i64 %107, 5
  store %"struct.net::SHA256HashValue"* null, %"struct.net::SHA256HashValue"** %89, align 8
  %109 = bitcast %"class.std::__1::allocator.11"** %90 to %"class.std::__1::__compressed_pair.8"**
  store %"class.std::__1::__compressed_pair.8"* %84, %"class.std::__1::__compressed_pair.8"** %109, align 8
  br label %121

110:                                              ; preds = %101
  %111 = ashr exact i64 %103, 4
  %112 = icmp ult i64 %111, %97
  %113 = select i1 %112, i64 %97, i64 %111
  %114 = sub i64 %4, %94
  %115 = ashr exact i64 %114, 5
  store %"struct.net::SHA256HashValue"* null, %"struct.net::SHA256HashValue"** %89, align 8
  %116 = bitcast %"class.std::__1::allocator.11"** %90 to %"class.std::__1::__compressed_pair.8"**
  store %"class.std::__1::__compressed_pair.8"* %84, %"class.std::__1::__compressed_pair.8"** %116, align 8
  %117 = icmp eq i64 %113, 0
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ugt i64 %113, 576460752303423487
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  tail call void @abort() #12
  unreachable

121:                                              ; preds = %106, %118
  %122 = phi i64 [ 576460752303423487, %106 ], [ %113, %118 ]
  %123 = phi i64 [ %108, %106 ], [ %115, %118 ]
  %124 = shl i64 %122, 5
  %125 = tail call i8* @_Znwm(i64 %124) #10
  %126 = bitcast i8* %125 to %"struct.net::SHA256HashValue"*
  br label %127

127:                                              ; preds = %110, %121
  %128 = phi i64 [ %123, %121 ], [ %115, %110 ]
  %129 = phi i64 [ %122, %121 ], [ 0, %110 ]
  %130 = phi %"struct.net::SHA256HashValue"* [ %126, %121 ], [ null, %110 ]
  store %"struct.net::SHA256HashValue"* %130, %"struct.net::SHA256HashValue"** %86, align 8
  %131 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %130, i64 %128
  store %"struct.net::SHA256HashValue"* %131, %"struct.net::SHA256HashValue"** %88, align 8
  store %"struct.net::SHA256HashValue"* %131, %"struct.net::SHA256HashValue"** %87, align 8
  %132 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %130, i64 %129
  store %"struct.net::SHA256HashValue"* %132, %"struct.net::SHA256HashValue"** %89, align 8
  call void @_ZNSt3__114__split_bufferIN3net15SHA256HashValueERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"struct.net::SHA256HashValue"* dereferenceable(32) %2)
  %133 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %87, align 8
  %134 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %7, align 8
  %135 = ptrtoint %"struct.net::SHA256HashValue"* %134 to i64
  %136 = sub i64 %4, %135
  %137 = ashr exact i64 %136, 5
  %138 = sub nsw i64 0, %137
  %139 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %133, i64 %138
  store %"struct.net::SHA256HashValue"* %139, %"struct.net::SHA256HashValue"** %87, align 8
  %140 = icmp sgt i64 %136, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %127
  %142 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %139, i64 0, i32 0, i64 0
  %143 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %134, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %142, i8* align 1 %143, i64 %136, i1 false) #9
  br label %144

144:                                              ; preds = %141, %127
  %145 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %8, align 8
  %146 = icmp eq %"struct.net::SHA256HashValue"* %145, %1
  br i1 %146, label %147, label %151

147:                                              ; preds = %144
  %148 = ptrtoint %"struct.net::SHA256HashValue"* %145 to i64
  %149 = bitcast %"struct.net::SHA256HashValue"** %88 to i64*
  %150 = load i64, i64* %149, align 8
  br label %199

151:                                              ; preds = %144
  %152 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %88, align 8
  %153 = sub i64 0, %4
  %154 = getelementptr %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %145, i64 -1, i32 0, i64 %153
  %155 = ptrtoint i8* %154 to i64
  %156 = lshr i64 %155, 5
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 3
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %151, %160
  %161 = phi %"struct.net::SHA256HashValue"* [ %168, %160 ], [ %152, %151 ]
  %162 = phi %"struct.net::SHA256HashValue"* [ %166, %160 ], [ %1, %151 ]
  %163 = phi i64 [ %169, %160 ], [ %158, %151 ]
  %164 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %161, i64 0, i32 0, i64 0
  %165 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %162, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %165, i64 32, i1 false) #9
  %166 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %162, i64 1
  %167 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %88, align 8
  %168 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %167, i64 1
  store %"struct.net::SHA256HashValue"* %168, %"struct.net::SHA256HashValue"** %88, align 8
  %169 = add i64 %163, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !5

171:                                              ; preds = %160, %151
  %172 = phi %"struct.net::SHA256HashValue"* [ undef, %151 ], [ %168, %160 ]
  %173 = phi %"struct.net::SHA256HashValue"* [ %152, %151 ], [ %168, %160 ]
  %174 = phi %"struct.net::SHA256HashValue"* [ %1, %151 ], [ %166, %160 ]
  %175 = icmp ult i8* %154, inttoptr (i64 96 to i8*)
  br i1 %175, label %194, label %176

176:                                              ; preds = %171, %176
  %177 = phi %"struct.net::SHA256HashValue"* [ %192, %176 ], [ %173, %171 ]
  %178 = phi %"struct.net::SHA256HashValue"* [ %191, %176 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %177, i64 0, i32 0, i64 0
  %180 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %178, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %179, i8* align 1 %180, i64 32, i1 false) #9
  %181 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %88, align 8
  %182 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %181, i64 1
  store %"struct.net::SHA256HashValue"* %182, %"struct.net::SHA256HashValue"** %88, align 8
  %183 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %182, i64 0, i32 0, i64 0
  %184 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %178, i64 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 32, i1 false) #9
  %185 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %181, i64 2
  store %"struct.net::SHA256HashValue"* %185, %"struct.net::SHA256HashValue"** %88, align 8
  %186 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %185, i64 0, i32 0, i64 0
  %187 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %178, i64 2, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %186, i8* align 1 %187, i64 32, i1 false) #9
  %188 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %181, i64 3
  store %"struct.net::SHA256HashValue"* %188, %"struct.net::SHA256HashValue"** %88, align 8
  %189 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %188, i64 0, i32 0, i64 0
  %190 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %178, i64 3, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %189, i8* align 1 %190, i64 32, i1 false) #9
  %191 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %178, i64 4
  %192 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %181, i64 4
  store %"struct.net::SHA256HashValue"* %192, %"struct.net::SHA256HashValue"** %88, align 8
  %193 = icmp eq %"struct.net::SHA256HashValue"* %191, %145
  br i1 %193, label %194, label %176

194:                                              ; preds = %176, %171
  %195 = phi %"struct.net::SHA256HashValue"* [ %172, %171 ], [ %192, %176 ]
  %196 = ptrtoint %"struct.net::SHA256HashValue"* %195 to i64
  %197 = load i64, i64* %91, align 8
  %198 = bitcast %"struct.net::SHA256HashValue"** %88 to i64*
  br label %199

199:                                              ; preds = %147, %194
  %200 = phi i64* [ %149, %147 ], [ %198, %194 ]
  %201 = phi i64 [ %150, %147 ], [ %196, %194 ]
  %202 = phi i64 [ %148, %147 ], [ %197, %194 ]
  %203 = load i64, i64* %92, align 8
  %204 = bitcast %"struct.net::SHA256HashValue"** %87 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %92, align 8
  store i64 %203, i64* %204, align 8
  store i64 %201, i64* %91, align 8
  store i64 %202, i64* %200, align 8
  %206 = load i64, i64* %102, align 8
  %207 = bitcast %"struct.net::SHA256HashValue"** %89 to i64*
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %102, align 8
  store i64 %206, i64* %207, align 8
  %209 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %203, i64* %209, align 8
  %210 = inttoptr i64 %203 to %"struct.net::SHA256HashValue"*
  %211 = inttoptr i64 %202 to %"struct.net::SHA256HashValue"*
  %212 = icmp eq %"struct.net::SHA256HashValue"* %211, %210
  br i1 %212, label %220, label %213

213:                                              ; preds = %199
  %214 = sub i64 0, %203
  %215 = getelementptr %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %211, i64 -1, i32 0, i64 %214
  %216 = ptrtoint i8* %215 to i64
  %217 = lshr i64 %216, 5
  %218 = xor i64 %217, -1
  %219 = getelementptr %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %211, i64 %218
  store %"struct.net::SHA256HashValue"* %219, %"struct.net::SHA256HashValue"** %88, align 8
  br label %220

220:                                              ; preds = %213, %199
  %221 = icmp eq i64 %203, 0
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %210, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %223) #10
  br label %224

224:                                              ; preds = %220, %222
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %85) #9
  br label %225

225:                                              ; preds = %17, %81, %224
  %226 = phi %"struct.net::SHA256HashValue"* [ %1, %17 ], [ %1, %81 ], [ %133, %224 ]
  ret %"struct.net::SHA256HashValue"* %226
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3net15SHA256HashValueERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"struct.net::SHA256HashValue"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %5, align 8
  %7 = icmp eq %"struct.net::SHA256HashValue"* %4, %6
  %8 = ptrtoint %"struct.net::SHA256HashValue"* %6 to i64
  br i1 %7, label %9, label %107

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %12, align 8
  %14 = icmp ugt %"struct.net::SHA256HashValue"* %11, %13
  %15 = ptrtoint %"struct.net::SHA256HashValue"* %13 to i64
  br i1 %14, label %16, label %35

16:                                               ; preds = %9
  %17 = ptrtoint %"struct.net::SHA256HashValue"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 5
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %11, i64 %21
  %23 = ptrtoint %"struct.net::SHA256HashValue"* %4 to i64
  %24 = sub i64 %23, %17
  %25 = ashr exact i64 %24, 5
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %22, i64 0, i32 0, i64 0
  %29 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %11, i64 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %24, i1 false) #9
  %30 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %10, align 8
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi %"struct.net::SHA256HashValue"* [ %11, %16 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %22, i64 %25
  store %"struct.net::SHA256HashValue"* %33, %"struct.net::SHA256HashValue"** %3, align 8
  %34 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %32, i64 %21
  store %"struct.net::SHA256HashValue"* %34, %"struct.net::SHA256HashValue"** %10, align 8
  br label %107

35:                                               ; preds = %9
  %36 = bitcast %"struct.net::SHA256HashValue"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %15
  %39 = ashr exact i64 %38, 4
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 576460752303423487
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #12
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 5
  %47 = tail call i8* @_Znwm(i64 %46) #10
  %48 = bitcast i8* %47 to %"struct.net::SHA256HashValue"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %48, i64 %45
  %51 = ptrtoint %"struct.net::SHA256HashValue"* %50 to i64
  %52 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %48, i64 %41
  %53 = ptrtoint %"struct.net::SHA256HashValue"* %52 to i64
  %54 = ptrtoint %"struct.net::SHA256HashValue"* %11 to i64
  %55 = ptrtoint %"struct.net::SHA256HashValue"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 5
  %58 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %97, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -32
  %62 = lshr i64 %61, 5
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %60, %66
  %67 = phi %"struct.net::SHA256HashValue"* [ %72, %66 ], [ %50, %60 ]
  %68 = phi %"struct.net::SHA256HashValue"* [ %73, %66 ], [ %11, %60 ]
  %69 = phi i64 [ %74, %66 ], [ %64, %60 ]
  %70 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %67, i64 0, i32 0, i64 0
  %71 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %68, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %71, i64 32, i1 false) #9
  %72 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %67, i64 1
  %73 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %68, i64 1
  %74 = add i64 %69, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %66, !llvm.loop !6

76:                                               ; preds = %66, %60
  %77 = phi %"struct.net::SHA256HashValue"* [ %50, %60 ], [ %72, %66 ]
  %78 = phi %"struct.net::SHA256HashValue"* [ %11, %60 ], [ %73, %66 ]
  %79 = icmp ult i64 %61, 96
  br i1 %79, label %94, label %80

80:                                               ; preds = %76, %80
  %81 = phi %"struct.net::SHA256HashValue"* [ %91, %80 ], [ %77, %76 ]
  %82 = phi %"struct.net::SHA256HashValue"* [ %92, %80 ], [ %78, %76 ]
  %83 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %81, i64 0, i32 0, i64 0
  %84 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %82, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %83, i8* align 1 %84, i64 32, i1 false) #9
  %85 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %81, i64 1, i32 0, i64 0
  %86 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %82, i64 1, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 32, i1 false) #9
  %87 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %81, i64 2, i32 0, i64 0
  %88 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %82, i64 2, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 32, i1 false) #9
  %89 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %81, i64 3, i32 0, i64 0
  %90 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %82, i64 3, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %90, i64 32, i1 false) #9
  %91 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %81, i64 4
  %92 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %82, i64 4
  %93 = icmp eq %"struct.net::SHA256HashValue"* %58, %91
  br i1 %93, label %94, label %80

94:                                               ; preds = %80, %76
  %95 = ptrtoint %"struct.net::SHA256HashValue"* %58 to i64
  %96 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %12, align 8
  br label %97

97:                                               ; preds = %44, %94
  %98 = phi %"struct.net::SHA256HashValue"* [ %96, %94 ], [ %13, %44 ]
  %99 = phi i64 [ %95, %94 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %100 = bitcast %"struct.net::SHA256HashValue"** %10 to i64*
  store i64 %51, i64* %100, align 8
  %101 = bitcast %"struct.net::SHA256HashValue"** %3 to i64*
  store i64 %99, i64* %101, align 8
  store i64 %53, i64* %36, align 8
  %102 = icmp eq %"struct.net::SHA256HashValue"* %98, null
  %103 = inttoptr i64 %99 to %"struct.net::SHA256HashValue"*
  br i1 %102, label %107, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %98, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %105) #10
  %106 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %3, align 8
  br label %107

107:                                              ; preds = %104, %97, %31, %2
  %108 = phi %"struct.net::SHA256HashValue"* [ %106, %104 ], [ %103, %97 ], [ %33, %31 ], [ %4, %2 ]
  %109 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %108, i64 0, i32 0, i64 0
  %110 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* align 1 %110, i64 32, i1 false) #9
  %111 = load %"struct.net::SHA256HashValue"*, %"struct.net::SHA256HashValue"** %3, align 8
  %112 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %111, i64 1
  store %"struct.net::SHA256HashValue"* %112, %"struct.net::SHA256HashValue"** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
