; ModuleID = '../../third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc'
source_filename = "../../third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::container_internal::HashtablezSampler" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.1", %"struct.absl::container_internal::HashtablezInfo", %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { %"struct.absl::container_internal::HashtablezInfo"* }
%"struct.absl::container_internal::HashtablezInfo" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.absl::Mutex", %"struct.absl::container_internal::HashtablezInfo"*, %"struct.absl::container_internal::HashtablezInfo"*, %"class.absl::Time", i32, [64 x i8*] }
%"class.absl::Mutex" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.absl::Time" = type { %"class.absl::Duration" }
%"class.absl::Duration" = type <{ i64, i32, [4 x i8] }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { void (%"struct.absl::container_internal::HashtablezInfo"*)* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"struct.absl::container_internal::HashtablezInfo"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }

@_ZN4absl18container_internal14HashtablezInfo14kMaxStackDepthE = hidden local_unnamed_addr constant i32 64, align 4
@_ZZN4absl18container_internal17HashtablezSampler6GlobalEvE7sampler = internal unnamed_addr global %"class.absl::container_internal::HashtablezSampler"* null, align 8
@_ZGVZN4absl18container_internal17HashtablezSampler6GlobalEvE7sampler = internal global i64 0, align 8
@.str = private unnamed_addr constant [75 x i8] c"../../third_party/abseil-cpp/absl/container/internal/hashtablez_sampler.cc\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"Invalid hashtablez sample rate: %lld\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Invalid hashtablez max samples: %lld\00", align 1
@_ZN4absl18container_internal12_GLOBAL__N_124g_hashtablez_max_samplesE.0.0 = internal unnamed_addr global i32 1048576, align 4
@_ZZN4absl18container_internalL19ShouldForceSamplingEvE12global_state.0.0 = internal unnamed_addr global i32 2, align 4

@_ZN4absl18container_internal14HashtablezInfoC1Ev = hidden unnamed_addr alias void (%"struct.absl::container_internal::HashtablezInfo"*), void (%"struct.absl::container_internal::HashtablezInfo"*)* @_ZN4absl18container_internal14HashtablezInfoC2Ev
@_ZN4absl18container_internal14HashtablezInfoD1Ev = hidden unnamed_addr alias void (%"struct.absl::container_internal::HashtablezInfo"*), void (%"struct.absl::container_internal::HashtablezInfo"*)* @_ZN4absl18container_internal14HashtablezInfoD2Ev
@_ZN4absl18container_internal17HashtablezSamplerC1Ev = hidden unnamed_addr alias void (%"class.absl::container_internal::HashtablezSampler"*), void (%"class.absl::container_internal::HashtablezSampler"*)* @_ZN4absl18container_internal17HashtablezSamplerC2Ev
@_ZN4absl18container_internal17HashtablezSamplerD1Ev = hidden unnamed_addr alias void (%"class.absl::container_internal::HashtablezSampler"*), void (%"class.absl::container_internal::HashtablezSampler"*)* @_ZN4absl18container_internal17HashtablezSamplerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(664) %"class.absl::container_internal::HashtablezSampler"* @_ZN4absl18container_internal17HashtablezSampler6GlobalEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4absl18container_internal17HashtablezSampler6GlobalEvE7sampler to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %46, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4absl18container_internal17HashtablezSampler6GlobalEvE7sampler) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %46, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 664) #9
  %8 = getelementptr inbounds i8, i8* %7, i64 24
  %9 = getelementptr inbounds i8, i8* %7, i64 96
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 120
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds i8, i8* %7, i64 128
  %14 = bitcast i8* %13 to i32*
  %15 = bitcast i8* %8 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #8
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 32
  %17 = bitcast i8* %16 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 40
  %19 = bitcast i8* %18 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 48
  %21 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 56
  %23 = bitcast i8* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 64
  %25 = bitcast i8* %24 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  %26 = getelementptr inbounds i8, i8* %7, i64 72
  %27 = bitcast i8* %26 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 80
  %29 = bitcast i8* %28 to i64*
  store atomic i64 -1, i64* %29 monotonic, align 8
  %30 = getelementptr inbounds i8, i8* %7, i64 88
  %31 = bitcast i8* %30 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  %32 = tail call { i64, i32 } @_ZN4absl3NowEv() #8
  %33 = extractvalue { i64, i32 } %32, 0
  %34 = extractvalue { i64, i32 } %32, 1
  store i64 %33, i64* %12, align 8
  store i32 %34, i32* %14, align 8
  %35 = getelementptr inbounds i8, i8* %7, i64 144
  %36 = bitcast i8* %35 to i8**
  %37 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %36, i32 64, i32 0) #8
  %38 = getelementptr inbounds i8, i8* %7, i64 136
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %7, i64 112
  %41 = bitcast i8* %40 to %"struct.absl::container_internal::HashtablezInfo"**
  store %"struct.absl::container_internal::HashtablezInfo"* null, %"struct.absl::container_internal::HashtablezInfo"** %41, align 8
  %42 = getelementptr inbounds i8, i8* %7, i64 656
  %43 = bitcast i8* %42 to void (%"struct.absl::container_internal::HashtablezInfo"*)**
  store void (%"struct.absl::container_internal::HashtablezInfo"*)* null, void (%"struct.absl::container_internal::HashtablezInfo"*)** %43, align 8
  %44 = bitcast i8* %9 to %"class.absl::Mutex"*
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %44) #8
  %45 = bitcast i8* %40 to i8**
  store i8* %8, i8** %45, align 8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %44) #8
  store i8* %7, i8** bitcast (%"class.absl::container_internal::HashtablezSampler"** @_ZZN4absl18container_internal17HashtablezSampler6GlobalEvE7sampler to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4absl18container_internal17HashtablezSampler6GlobalEvE7sampler) #8
  br label %46

46:                                               ; preds = %3, %6, %0
  %47 = load %"class.absl::container_internal::HashtablezSampler"*, %"class.absl::container_internal::HashtablezSampler"** @_ZZN4absl18container_internal17HashtablezSampler6GlobalEvE7sampler, align 8
  ret %"class.absl::container_internal::HashtablezSampler"* %47
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void (%"struct.absl::container_internal::HashtablezInfo"*)* @_ZN4absl18container_internal17HashtablezSampler18SetDisposeCallbackEPFvRKNS0_14HashtablezInfoEE(%"class.absl::container_internal::HashtablezSampler"* nocapture, void (%"struct.absl::container_internal::HashtablezInfo"*)*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 4, i32 0
  %4 = ptrtoint void (%"struct.absl::container_internal::HashtablezInfo"*)* %1 to i64
  %5 = bitcast %"struct.std::__1::__atomic_base.11"* %3 to i64*
  %6 = atomicrmw xchg i64* %5, i64 %4 monotonic
  %7 = inttoptr i64 %6 to void (%"struct.absl::container_internal::HashtablezInfo"*)*
  ret void (%"struct.absl::container_internal::HashtablezInfo"*)* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal14HashtablezInfoC2Ev(%"struct.absl::container_internal::HashtablezInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 12, i32 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %6 monotonic, align 8
  %7 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 -1, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = tail call { i64, i32 } @_ZN4absl3NowEv() #8
  %15 = extractvalue { i64, i32 } %14, 0
  %16 = extractvalue { i64, i32 } %14, 1
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 8
  %17 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 14, i64 0
  %18 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %17, i32 64, i32 0) #8
  %19 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 13
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 11
  store %"struct.absl::container_internal::HashtablezInfo"* null, %"struct.absl::container_internal::HashtablezInfo"** %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal14HashtablezInfo18PrepareForSamplingEv(%"struct.absl::container_internal::HashtablezInfo"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %2 monotonic, align 8
  %3 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %4 monotonic, align 8
  %5 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %6 monotonic, align 8
  %7 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 -1, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = tail call { i64, i32 } @_ZN4absl3NowEv() #8
  %12 = extractvalue { i64, i32 } %11, 0
  %13 = extractvalue { i64, i32 } %11, 1
  %14 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 12, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 14, i64 0
  %17 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %16, i32 64, i32 0) #8
  %18 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 13
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 11
  store %"struct.absl::container_internal::HashtablezInfo"* null, %"struct.absl::container_internal::HashtablezInfo"** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal14HashtablezInfoD2Ev(%"struct.absl::container_internal::HashtablezInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 9
  tail call void @_ZN4absl5MutexD1Ev(%"class.absl::Mutex"* %2) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4absl5MutexD1Ev(%"class.absl::Mutex"*) unnamed_addr #4

declare { i64, i32 } @_ZN4absl3NowEv() local_unnamed_addr #5

declare i32 @_ZN4absl13GetStackTraceEPPvii(i8**, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal17HashtablezSamplerC2Ev(%"class.absl::container_internal::HashtablezSampler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 12, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 12, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.absl::container_internal::HashtablezSampler"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  store atomic i64 0, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 -1, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = tail call { i64, i32 } @_ZN4absl3NowEv() #8
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  store i64 %17, i64* %4, align 8
  store i32 %18, i32* %5, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 14, i64 0
  %20 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %19, i32 64, i32 0) #8
  %21 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 13
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 11
  store %"struct.absl::container_internal::HashtablezInfo"* null, %"struct.absl::container_internal::HashtablezInfo"** %22, align 8
  %23 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store void (%"struct.absl::container_internal::HashtablezInfo"*)* null, void (%"struct.absl::container_internal::HashtablezInfo"*)** %23, align 8
  %24 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %24) #8
  store %"struct.absl::container_internal::HashtablezInfo"* %2, %"struct.absl::container_internal::HashtablezInfo"** %22, align 8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %24) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal17HashtablezSamplerD2Ev(%"class.absl::container_internal::HashtablezSampler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"struct.std::__1::__atomic_base.2"* %2 to i64*
  %4 = load atomic i64, i64* %3 acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = inttoptr i64 %4 to %"struct.absl::container_internal::HashtablezInfo"*
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"struct.absl::container_internal::HashtablezInfo"* [ %11, %8 ], [ %7, %6 ]
  %10 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %9, i64 0, i32 10
  %11 = load %"struct.absl::container_internal::HashtablezInfo"*, %"struct.absl::container_internal::HashtablezInfo"** %10, align 8
  %12 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %9, i64 0, i32 9
  tail call void @_ZN4absl5MutexD1Ev(%"class.absl::Mutex"* %12) #8
  %13 = bitcast %"struct.absl::container_internal::HashtablezInfo"* %9 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  %14 = icmp eq %"struct.absl::container_internal::HashtablezInfo"* %11, null
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %1
  %16 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 9
  tail call void @_ZN4absl5MutexD1Ev(%"class.absl::Mutex"* %16) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal17HashtablezSampler7PushNewEPNS0_14HashtablezInfoE(%"class.absl::container_internal::HashtablezSampler"* nocapture, %"struct.absl::container_internal::HashtablezInfo"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base.2"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = inttoptr i64 %5 to %"struct.absl::container_internal::HashtablezInfo"*
  %7 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %1, i64 0, i32 10
  store %"struct.absl::container_internal::HashtablezInfo"* %6, %"struct.absl::container_internal::HashtablezInfo"** %7, align 8
  %8 = ptrtoint %"struct.absl::container_internal::HashtablezInfo"* %1 to i64
  %9 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %7 to i64*
  %10 = cmpxchg weak i64* %4, i64 %5, i64 %8 release monotonic
  %11 = extractvalue { i64, i1 } %10, 1
  br i1 %11, label %17, label %12

12:                                               ; preds = %2, %12
  %13 = phi { i64, i1 } [ %15, %12 ], [ %10, %2 ]
  %14 = extractvalue { i64, i1 } %13, 0
  store i64 %14, i64* %9, align 8
  %15 = cmpxchg weak i64* %4, i64 %14, i64 %8 release monotonic
  %16 = extractvalue { i64, i1 } %15, 1
  br i1 %16, label %17, label %12

17:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal17HashtablezSampler8PushDeadEPNS0_14HashtablezInfoE(%"class.absl::container_internal::HashtablezSampler"*, %"struct.absl::container_internal::HashtablezInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 4, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base.11"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to void (%"struct.absl::container_internal::HashtablezInfo"*)*
  tail call void %8(%"struct.absl::container_internal::HashtablezInfo"* dereferenceable(632) %1) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %10) #8
  %11 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %1, i64 0, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %11) #8
  %12 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 11
  %13 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %1, i64 0, i32 11
  %16 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %15 to i64*
  store i64 %14, i64* %16, align 8
  store %"struct.absl::container_internal::HashtablezInfo"* %1, %"struct.absl::container_internal::HashtablezInfo"** %12, align 8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %11) #8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.absl::container_internal::HashtablezInfo"* @_ZN4absl18container_internal17HashtablezSampler7PopDeadEv(%"class.absl::container_internal::HashtablezSampler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %3) #8
  %4 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 11
  %5 = load %"struct.absl::container_internal::HashtablezInfo"*, %"struct.absl::container_internal::HashtablezInfo"** %4, align 8
  %6 = icmp eq %"struct.absl::container_internal::HashtablezInfo"* %5, %2
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %8) #8
  %9 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 11
  %10 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %4 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %19 monotonic, align 8
  %20 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 -1, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %21 monotonic, align 8
  %22 = tail call { i64, i32 } @_ZN4absl3NowEv() #8
  %23 = extractvalue { i64, i32 } %22, 0
  %24 = extractvalue { i64, i32 } %22, 1
  %25 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 12, i32 0, i32 0
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 12, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 14, i64 0
  %28 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %27, i32 64, i32 0) #8
  %29 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %5, i64 0, i32 13
  store i32 %28, i32* %29, align 8
  store %"struct.absl::container_internal::HashtablezInfo"* null, %"struct.absl::container_internal::HashtablezInfo"** %9, align 8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %8) #8
  br label %30

30:                                               ; preds = %1, %7
  %31 = phi %"struct.absl::container_internal::HashtablezInfo"* [ %5, %7 ], [ null, %1 ]
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %3) #8
  ret %"struct.absl::container_internal::HashtablezInfo"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.absl::container_internal::HashtablezInfo"* @_ZN4absl18container_internal17HashtablezSampler8RegisterEv(%"class.absl::container_internal::HashtablezSampler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i64* %2, i64 1 monotonic
  %4 = load atomic i32, i32* @_ZN4absl18container_internal12_GLOBAL__N_124g_hashtablez_max_samplesE.0.0 monotonic, align 4
  %5 = sext i32 %4 to i64
  %6 = icmp sgt i64 %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = atomicrmw sub i64* %2, i64 1 monotonic
  %9 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i64* %9, i64 1 monotonic
  br label %65

11:                                               ; preds = %1
  %12 = tail call %"struct.absl::container_internal::HashtablezInfo"* @_ZN4absl18container_internal17HashtablezSampler7PopDeadEv(%"class.absl::container_internal::HashtablezSampler"* %0)
  %13 = icmp eq %"struct.absl::container_internal::HashtablezInfo"* %12, null
  br i1 %13, label %14, label %65

14:                                               ; preds = %11
  %15 = tail call i8* @_Znwm(i64 632) #9
  %16 = bitcast i8* %15 to %"struct.absl::container_internal::HashtablezInfo"*
  %17 = getelementptr inbounds i8, i8* %15, i64 72
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 96
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 104
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = bitcast i8* %15 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds i8, i8* %15, i64 8
  %25 = bitcast i8* %24 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  %26 = getelementptr inbounds i8, i8* %15, i64 16
  %27 = bitcast i8* %26 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds i8, i8* %15, i64 24
  %29 = bitcast i8* %28 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  %30 = getelementptr inbounds i8, i8* %15, i64 32
  %31 = bitcast i8* %30 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds i8, i8* %15, i64 40
  %33 = bitcast i8* %32 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds i8, i8* %15, i64 48
  %35 = bitcast i8* %34 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  %36 = getelementptr inbounds i8, i8* %15, i64 56
  %37 = bitcast i8* %36 to i64*
  store atomic i64 -1, i64* %37 monotonic, align 8
  %38 = getelementptr inbounds i8, i8* %15, i64 64
  %39 = bitcast i8* %38 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  %40 = tail call { i64, i32 } @_ZN4absl3NowEv() #8
  %41 = extractvalue { i64, i32 } %40, 0
  %42 = extractvalue { i64, i32 } %40, 1
  store i64 %41, i64* %20, align 8
  store i32 %42, i32* %22, align 8
  %43 = getelementptr inbounds i8, i8* %15, i64 120
  %44 = bitcast i8* %43 to i8**
  %45 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %44, i32 64, i32 0) #8
  %46 = getelementptr inbounds i8, i8* %15, i64 112
  %47 = bitcast i8* %46 to i32*
  store i32 %45, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %15, i64 88
  %49 = bitcast i8* %48 to %"struct.absl::container_internal::HashtablezInfo"**
  store %"struct.absl::container_internal::HashtablezInfo"* null, %"struct.absl::container_internal::HashtablezInfo"** %49, align 8
  %50 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 2, i32 0
  %51 = bitcast %"struct.std::__1::__atomic_base.2"* %50 to i64*
  %52 = load atomic i64, i64* %51 monotonic, align 8
  %53 = inttoptr i64 %52 to %"struct.absl::container_internal::HashtablezInfo"*
  %54 = getelementptr inbounds i8, i8* %15, i64 80
  %55 = bitcast i8* %54 to %"struct.absl::container_internal::HashtablezInfo"**
  store %"struct.absl::container_internal::HashtablezInfo"* %53, %"struct.absl::container_internal::HashtablezInfo"** %55, align 8
  %56 = ptrtoint i8* %15 to i64
  %57 = bitcast i8* %54 to i64*
  %58 = cmpxchg weak i64* %51, i64 %52, i64 %56 release monotonic
  %59 = extractvalue { i64, i1 } %58, 1
  br i1 %59, label %65, label %60

60:                                               ; preds = %14, %60
  %61 = phi { i64, i1 } [ %63, %60 ], [ %58, %14 ]
  %62 = extractvalue { i64, i1 } %61, 0
  store i64 %62, i64* %57, align 8
  %63 = cmpxchg weak i64* %51, i64 %62, i64 %56 release monotonic
  %64 = extractvalue { i64, i1 } %63, 1
  br i1 %64, label %65, label %60

65:                                               ; preds = %60, %14, %11, %7
  %66 = phi %"struct.absl::container_internal::HashtablezInfo"* [ null, %7 ], [ %12, %11 ], [ %16, %14 ], [ %16, %60 ]
  ret %"struct.absl::container_internal::HashtablezInfo"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal17HashtablezSampler10UnregisterEPNS0_14HashtablezInfoE(%"class.absl::container_internal::HashtablezSampler"*, %"struct.absl::container_internal::HashtablezInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 4, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base.11"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to void (%"struct.absl::container_internal::HashtablezInfo"*)*
  tail call void %8(%"struct.absl::container_internal::HashtablezInfo"* dereferenceable(632) %1) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %10) #8
  %11 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %1, i64 0, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %11) #8
  %12 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 3, i32 11
  %13 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %1, i64 0, i32 11
  %16 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %15 to i64*
  store i64 %14, i64* %16, align 8
  store %"struct.absl::container_internal::HashtablezInfo"* %1, %"struct.absl::container_internal::HashtablezInfo"** %12, align 8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %11) #8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %10) #8
  %17 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i64* %17, i64 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4absl18container_internal17HashtablezSampler7IterateERKNSt3__18functionIFvRKNS0_14HashtablezInfoEEEE(%"class.absl::container_internal::HashtablezSampler"* nocapture readonly, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 2, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base.2"* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"struct.absl::container_internal::HashtablezInfo"*
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %7, %19
  %12 = phi %"struct.absl::container_internal::HashtablezInfo"* [ %8, %7 ], [ %21, %19 ]
  %13 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %12, i64 0, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %13) #8
  %14 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %12, i64 0, i32 11
  %15 = load %"struct.absl::container_internal::HashtablezInfo"*, %"struct.absl::container_internal::HashtablezInfo"** %14, align 8
  %16 = icmp eq %"struct.absl::container_internal::HashtablezInfo"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = load void (%"union.std::__1::__function::__policy_storage"*, %"struct.absl::container_internal::HashtablezInfo"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"struct.absl::container_internal::HashtablezInfo"*)** %9, align 8
  tail call void %18(%"union.std::__1::__function::__policy_storage"* %10, %"struct.absl::container_internal::HashtablezInfo"* nonnull dereferenceable(632) %12) #8
  br label %19

19:                                               ; preds = %17, %11
  %20 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %12, i64 0, i32 10
  %21 = load %"struct.absl::container_internal::HashtablezInfo"*, %"struct.absl::container_internal::HashtablezInfo"** %20, align 8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %13) #8
  %22 = icmp eq %"struct.absl::container_internal::HashtablezInfo"* %21, null
  br i1 %22, label %23, label %11

23:                                               ; preds = %19, %2
  %24 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i64, i64* %24 monotonic, align 8
  ret i64 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.absl::container_internal::HashtablezInfo"* @_ZN4absl18container_internal10SampleSlowEPl(i64* nocapture) local_unnamed_addr #0 {
  %2 = load atomic i32, i32* @_ZZN4absl18container_internalL19ShouldForceSamplingEvE12global_state.0.0 monotonic, align 4
  switch i32 %2, label %6 [
    i32 0, label %12
    i32 2, label %3
  ], !prof !3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @AbslContainerInternalSampleEverything() #8
  %5 = zext i1 %4 to i32
  store atomic i32 %5, i32* @_ZZN4absl18container_internalL19ShouldForceSamplingEvE12global_state.0.0 monotonic, align 4
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %2, %1 ]
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12, !prof !4

9:                                                ; preds = %6
  store i64 1, i64* %0, align 8
  %10 = tail call dereferenceable(664) %"class.absl::container_internal::HashtablezSampler"* @_ZN4absl18container_internal17HashtablezSampler6GlobalEv()
  %11 = tail call %"struct.absl::container_internal::HashtablezInfo"* @_ZN4absl18container_internal17HashtablezSampler8RegisterEv(%"class.absl::container_internal::HashtablezSampler"* %10)
  br label %13

12:                                               ; preds = %1, %6
  store i64 9223372036854775807, i64* %0, align 8
  br label %13

13:                                               ; preds = %12, %9
  %14 = phi %"struct.absl::container_internal::HashtablezInfo"* [ %11, %9 ], [ null, %12 ]
  ret %"struct.absl::container_internal::HashtablezInfo"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal12UnsampleSlowEPNS0_14HashtablezInfoE(%"struct.absl::container_internal::HashtablezInfo"*) local_unnamed_addr #0 {
  %2 = tail call dereferenceable(664) %"class.absl::container_internal::HashtablezSampler"* @_ZN4absl18container_internal17HashtablezSampler6GlobalEv()
  %3 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %2, i64 0, i32 4, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base.11"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = inttoptr i64 %5 to void (%"struct.absl::container_internal::HashtablezInfo"*)*
  tail call void %8(%"struct.absl::container_internal::HashtablezInfo"* dereferenceable(632) %0) #8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %2, i64 0, i32 3, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %10) #8
  %11 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 9
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %11) #8
  %12 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %2, i64 0, i32 3, i32 11
  %13 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 11
  %16 = bitcast %"struct.absl::container_internal::HashtablezInfo"** %15 to i64*
  store i64 %14, i64* %16, align 8
  store %"struct.absl::container_internal::HashtablezInfo"* %0, %"struct.absl::container_internal::HashtablezInfo"** %12, align 8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %11) #8
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %10) #8
  %17 = getelementptr inbounds %"class.absl::container_internal::HashtablezSampler", %"class.absl::container_internal::HashtablezSampler"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i64* %17, i64 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal16RecordInsertSlowEPNS0_14HashtablezInfoEmm(%"struct.absl::container_internal::HashtablezInfo"* nocapture, i64, i64) local_unnamed_addr #0 {
  %4 = lshr i64 %2, 4
  %5 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw and i64* %5, i64 %1 monotonic
  %7 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw or i64* %7, i64 %1 monotonic
  %9 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw xor i64* %9, i64 %1 monotonic
  %11 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = icmp ult i64 %12, %4
  %14 = select i1 %13, i64 %4, i64 %12
  store atomic i64 %14, i64* %11 monotonic, align 8
  %15 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i64* %15, i64 %4 monotonic
  %17 = getelementptr inbounds %"struct.absl::container_internal::HashtablezInfo", %"struct.absl::container_internal::HashtablezInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i64* %17, i64 1 monotonic
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal20SetHashtablezEnabledEb(i1 zeroext) local_unnamed_addr #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal28SetHashtablezSampleParameterEi(i32) local_unnamed_addr #0 {
  %2 = icmp sgt i32 %0, 0
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 53), i32 259, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i64 %4) #8
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

declare void @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18container_internal23SetHashtablezMaxSamplesEi(i32) local_unnamed_addr #0 {
  %2 = icmp sgt i32 %0, 0
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  store atomic i32 %0, i32* @_ZN4absl18container_internal12_GLOBAL__N_124g_hashtablez_max_samplesE.0.0 release, align 4
  br label %6

4:                                                ; preds = %1
  %5 = sext i32 %0 to i64
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 53), i32 268, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i64 %5) #8
  br label %6

6:                                                ; preds = %4, %3
  ret void
}

declare void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"*) local_unnamed_addr #5

declare void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"*) local_unnamed_addr #5

declare zeroext i1 @AbslContainerInternalSampleEverything() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 4000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
