; ModuleID = '../../ui/gfx/half_float.cc'
source_filename = "../../ui/gfx/half_float.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx16FloatToHalfFloatEPKfPtm(float* nocapture readonly, i16* nocapture, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %71, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 8
  br i1 %6, label %7, label %29

7:                                                ; preds = %69, %29, %5
  %8 = phi i64 [ 0, %29 ], [ 0, %5 ], [ %38, %69 ]
  %9 = xor i64 %8, -1
  %10 = and i64 %2, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds float, float* %0, i64 %8
  %14 = load float, float* %13, align 4
  %15 = fmul float %14, 0x38F0000000000000
  %16 = bitcast float %15 to i32
  %17 = add i32 %16, 4096
  %18 = lshr i32 %17, 16
  %19 = and i32 %18, 32768
  %20 = lshr i32 %17, 13
  %21 = or i32 %19, %20
  %22 = trunc i32 %21 to i16
  %23 = getelementptr inbounds i16, i16* %1, i64 %8
  store i16 %22, i16* %23, align 2
  %24 = or i64 %8, 1
  br label %25

25:                                               ; preds = %7, %12
  %26 = phi i64 [ %8, %7 ], [ %24, %12 ]
  %27 = sub i64 0, %2
  %28 = icmp eq i64 %9, %27
  br i1 %28, label %71, label %72

29:                                               ; preds = %5
  %30 = getelementptr i16, i16* %1, i64 %2
  %31 = getelementptr float, float* %0, i64 %2
  %32 = bitcast float* %31 to i16*
  %33 = icmp ugt i16* %32, %1
  %34 = bitcast i16* %30 to float*
  %35 = icmp ugt float* %34, %0
  %36 = and i1 %33, %35
  br i1 %36, label %7, label %37

37:                                               ; preds = %29
  %38 = and i64 %2, -8
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %67, %39 ]
  %41 = getelementptr inbounds float, float* %0, i64 %40
  %42 = bitcast float* %41 to <4 x float>*
  %43 = load <4 x float>, <4 x float>* %42, align 4, !alias.scope !2
  %44 = getelementptr inbounds float, float* %41, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 4, !alias.scope !2
  %47 = fmul <4 x float> %43, <float 0x38F0000000000000, float 0x38F0000000000000, float 0x38F0000000000000, float 0x38F0000000000000>
  %48 = fmul <4 x float> %46, <float 0x38F0000000000000, float 0x38F0000000000000, float 0x38F0000000000000, float 0x38F0000000000000>
  %49 = bitcast <4 x float> %47 to <4 x i32>
  %50 = bitcast <4 x float> %48 to <4 x i32>
  %51 = add <4 x i32> %49, <i32 4096, i32 4096, i32 4096, i32 4096>
  %52 = add <4 x i32> %50, <i32 4096, i32 4096, i32 4096, i32 4096>
  %53 = lshr <4 x i32> %51, <i32 16, i32 16, i32 16, i32 16>
  %54 = lshr <4 x i32> %52, <i32 16, i32 16, i32 16, i32 16>
  %55 = and <4 x i32> %53, <i32 32768, i32 32768, i32 32768, i32 32768>
  %56 = and <4 x i32> %54, <i32 32768, i32 32768, i32 32768, i32 32768>
  %57 = lshr <4 x i32> %51, <i32 13, i32 13, i32 13, i32 13>
  %58 = lshr <4 x i32> %52, <i32 13, i32 13, i32 13, i32 13>
  %59 = or <4 x i32> %55, %57
  %60 = or <4 x i32> %56, %58
  %61 = trunc <4 x i32> %59 to <4 x i16>
  %62 = trunc <4 x i32> %60 to <4 x i16>
  %63 = getelementptr inbounds i16, i16* %1, i64 %40
  %64 = bitcast i16* %63 to <4 x i16>*
  store <4 x i16> %61, <4 x i16>* %64, align 2, !alias.scope !5, !noalias !2
  %65 = getelementptr inbounds i16, i16* %63, i64 4
  %66 = bitcast i16* %65 to <4 x i16>*
  store <4 x i16> %62, <4 x i16>* %66, align 2, !alias.scope !5, !noalias !2
  %67 = add i64 %40, 8
  %68 = icmp eq i64 %67, %38
  br i1 %68, label %69, label %39, !llvm.loop !7

69:                                               ; preds = %39
  %70 = icmp eq i64 %38, %2
  br i1 %70, label %71, label %7

71:                                               ; preds = %25, %72, %69, %3
  ret void

72:                                               ; preds = %25, %72
  %73 = phi i64 [ %97, %72 ], [ %26, %25 ]
  %74 = getelementptr inbounds float, float* %0, i64 %73
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, 0x38F0000000000000
  %77 = bitcast float %76 to i32
  %78 = add i32 %77, 4096
  %79 = lshr i32 %78, 16
  %80 = and i32 %79, 32768
  %81 = lshr i32 %78, 13
  %82 = or i32 %80, %81
  %83 = trunc i32 %82 to i16
  %84 = getelementptr inbounds i16, i16* %1, i64 %73
  store i16 %83, i16* %84, align 2
  %85 = add nuw i64 %73, 1
  %86 = getelementptr inbounds float, float* %0, i64 %85
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, 0x38F0000000000000
  %89 = bitcast float %88 to i32
  %90 = add i32 %89, 4096
  %91 = lshr i32 %90, 16
  %92 = and i32 %91, 32768
  %93 = lshr i32 %90, 13
  %94 = or i32 %92, %93
  %95 = trunc i32 %94 to i16
  %96 = getelementptr inbounds i16, i16* %1, i64 %85
  store i16 %95, i16* %96, align 2
  %97 = add nuw i64 %73, 2
  %98 = icmp eq i64 %97, %2
  br i1 %98, label %71, label %72, !llvm.loop !9
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
