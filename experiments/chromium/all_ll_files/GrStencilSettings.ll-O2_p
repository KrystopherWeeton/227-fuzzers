; ModuleID = '../../third_party/skia/src/gpu/GrStencilSettings.cpp'
source_filename = "../../third_party/skia/src/gpu/GrStencilSettings.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings.0 }
%struct.GrTStencilFaceSettings.0 = type { i16, i16, i16, i8, i8, i16 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray*, i32, i32 }
%class.SkTArray = type { i32*, i64 }

@_ZL7gUnused = internal constant %struct.GrUserStencilSettings { [2 x i16] [i16 31, i16 28], %struct.GrTStencilFaceSettings zeroinitializer, [2 x i16] [i16 31, i16 28], %struct.GrTStencilFaceSettings zeroinitializer }, align 2
@_ZN21GrUserStencilSettings7kUnusedE = hidden local_unnamed_addr constant %struct.GrUserStencilSettings* @_ZL7gUnused, align 8
@_ZL19gUserStencilOpToRaw = internal unnamed_addr constant [13 x i8] c"\00\01\02\03\04\05\06\07\01\02\03\02\01", align 1
@_ZL21gUserStencilTestToRaw = internal unnamed_addr constant [12 x i16] [i16 0, i16 6, i16 4, i16 5, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7], align 16
@_ZL18gSetStencilClipBit = internal constant %struct.GrUserStencilSettings { [2 x i16] [i16 26, i16 26], %struct.GrTStencilFaceSettings { i16 0, i16 4, i16 0, i8 9, i8 9, i16 0 }, [2 x i16] [i16 26, i16 26], %struct.GrTStencilFaceSettings { i16 0, i16 4, i16 0, i8 9, i8 9, i16 0 } }, align 2
@_ZL19gZeroStencilClipBit = internal constant %struct.GrUserStencilSettings { [2 x i16] [i16 26, i16 26], %struct.GrTStencilFaceSettings { i16 0, i16 4, i16 0, i8 8, i8 8, i16 0 }, [2 x i16] [i16 26, i16 26], %struct.GrTStencilFaceSettings { i16 0, i16 4, i16 0, i8 8, i8 8, i16 0 } }, align 2
@.str = private unnamed_addr constant [13 x i8] c"stencilFlags\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"stencilCWFace\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"stencilCCWFace\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrStencilSettings5resetERK21GrUserStencilSettingsbi(%class.GrStencilSettings* nocapture, %struct.GrUserStencilSettings* nocapture readonly dereferenceable(28), i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = zext i1 %2 to i64
  %6 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 0, i64 %5
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = and i32 %8, 16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %98, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 0
  store i32 %8, i32* %12, align 4
  %13 = and i32 %8, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %284

15:                                               ; preds = %11
  %16 = add nsw i32 %3, -1
  %17 = shl i32 1, %16
  %18 = add nsw i32 %17, -1
  %19 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 3
  %20 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 4
  %21 = load i8, i8* %19, align 1
  %22 = load i8, i8* %20, align 1
  %23 = icmp ult i8 %21, %22
  %24 = select i1 %23, i8 %22, i8 %21
  %25 = icmp ult i8 %24, 8
  br i1 %25, label %26, label %31

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 5
  %28 = load i16, i16* %27, align 2
  %29 = trunc i32 %18 to i16
  %30 = and i16 %28, %29
  br label %42

31:                                               ; preds = %15
  %32 = icmp ult i8 %24, 11
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = trunc i32 %17 to i16
  br label %42

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 5
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = and i32 %18, %38
  %40 = or i32 %39, %17
  %41 = trunc i32 %40 to i16
  br label %42

42:                                               ; preds = %35, %33, %26
  %43 = phi i16 [ %41, %35 ], [ %34, %33 ], [ %30, %26 ]
  %44 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 5
  store i16 %43, i16* %44, align 2
  %45 = load i8, i8* %20, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 4
  store i8 %48, i8* %49, align 1
  %50 = load i8, i8* %19, align 2
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 3
  store i8 %53, i8* %54, align 2
  br i1 %2, label %55, label %59

55:                                               ; preds = %42
  %56 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 1
  %57 = load i16, i16* %56, align 2
  %58 = icmp ugt i16 %57, 3
  br i1 %58, label %59, label %70

59:                                               ; preds = %55, %42
  %60 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 2
  %61 = load i16, i16* %60, align 2
  %62 = trunc i32 %18 to i16
  %63 = and i16 %61, %62
  %64 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 2
  store i16 %63, i16* %64, align 2
  %65 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 1
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i64
  %68 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %67
  %69 = load i16, i16* %68, align 2
  br label %87

70:                                               ; preds = %55
  %71 = icmp eq i16 %57, 0
  br i1 %71, label %84, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 2
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i32
  %76 = and i32 %18, %75
  %77 = or i32 %76, %17
  %78 = trunc i32 %77 to i16
  %79 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 2
  store i16 %78, i16* %79, align 2
  %80 = load i16, i16* %56, align 2
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %81
  %83 = load i16, i16* %82, align 2
  br label %87

84:                                               ; preds = %70
  %85 = trunc i32 %17 to i16
  %86 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 2
  store i16 %85, i16* %86, align 2
  br label %87

87:                                               ; preds = %59, %72, %84
  %88 = phi i16 [ %69, %59 ], [ %83, %72 ], [ 6, %84 ]
  %89 = phi i16 [ %63, %59 ], [ %78, %72 ], [ %85, %84 ]
  %90 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 1
  store i16 %88, i16* %90, align 2
  %91 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 0
  %92 = load i16, i16* %91, align 2
  %93 = or i16 %89, %43
  %94 = trunc i32 %17 to i16
  %95 = or i16 %92, %94
  %96 = and i16 %95, %93
  %97 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 0
  store i16 %96, i16* %97, align 2
  br label %284

98:                                               ; preds = %4
  %99 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 2, i64 %5
  %100 = load i16, i16* %99, align 2
  %101 = and i16 %100, %7
  %102 = zext i16 %101 to i32
  %103 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 0
  store i32 %102, i32* %103, align 4
  %104 = and i32 %102, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %284

106:                                              ; preds = %98
  %107 = and i32 %8, 1
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  br i1 %108, label %110, label %193

110:                                              ; preds = %106
  %111 = add nsw i32 %3, -1
  %112 = shl i32 1, %111
  %113 = add nsw i32 %112, -1
  %114 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 3
  %115 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 4
  %116 = load i8, i8* %114, align 1
  %117 = load i8, i8* %115, align 1
  %118 = icmp ult i8 %116, %117
  %119 = select i1 %118, i8 %117, i8 %116
  %120 = icmp ult i8 %119, 8
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 5
  %123 = load i16, i16* %122, align 2
  %124 = trunc i32 %113 to i16
  %125 = and i16 %123, %124
  br label %137

126:                                              ; preds = %110
  %127 = icmp ult i8 %119, 11
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = trunc i32 %112 to i16
  br label %137

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 5
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = and i32 %113, %133
  %135 = or i32 %134, %112
  %136 = trunc i32 %135 to i16
  br label %137

137:                                              ; preds = %130, %128, %121
  %138 = phi i16 [ %136, %130 ], [ %129, %128 ], [ %125, %121 ]
  %139 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 5
  store i16 %138, i16* %139, align 2
  %140 = load i8, i8* %115, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 4
  store i8 %143, i8* %144, align 1
  %145 = load i8, i8* %114, align 2
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 3
  store i8 %148, i8* %149, align 2
  br i1 %2, label %150, label %154

150:                                              ; preds = %137
  %151 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 1
  %152 = load i16, i16* %151, align 2
  %153 = icmp ugt i16 %152, 3
  br i1 %153, label %154, label %165

154:                                              ; preds = %150, %137
  %155 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 2
  %156 = load i16, i16* %155, align 2
  %157 = trunc i32 %113 to i16
  %158 = and i16 %156, %157
  %159 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 2
  store i16 %158, i16* %159, align 2
  %160 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 1
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i64
  %163 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %162
  %164 = load i16, i16* %163, align 2
  br label %182

165:                                              ; preds = %150
  %166 = icmp eq i16 %152, 0
  br i1 %166, label %179, label %167

167:                                              ; preds = %165
  %168 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 2
  %169 = load i16, i16* %168, align 2
  %170 = zext i16 %169 to i32
  %171 = and i32 %113, %170
  %172 = or i32 %171, %112
  %173 = trunc i32 %172 to i16
  %174 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 2
  store i16 %173, i16* %174, align 2
  %175 = load i16, i16* %151, align 2
  %176 = zext i16 %175 to i64
  %177 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %176
  %178 = load i16, i16* %177, align 2
  br label %182

179:                                              ; preds = %165
  %180 = trunc i32 %112 to i16
  %181 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 2
  store i16 %180, i16* %181, align 2
  br label %182

182:                                              ; preds = %154, %167, %179
  %183 = phi i16 [ %164, %154 ], [ %178, %167 ], [ 6, %179 ]
  %184 = phi i16 [ %158, %154 ], [ %173, %167 ], [ %180, %179 ]
  %185 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 1
  store i16 %183, i16* %185, align 2
  %186 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 1, i32 0
  %187 = load i16, i16* %186, align 2
  %188 = or i16 %184, %138
  %189 = trunc i32 %112 to i16
  %190 = or i16 %187, %189
  %191 = and i16 %190, %188
  %192 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %109, i64 0, i32 0, i32 0
  store i16 %191, i16* %192, align 2
  br label %195

193:                                              ; preds = %106
  %194 = bitcast %"struct.GrStencilSettings::Face"* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %194, i8 0, i64 10, i1 false) #6
  br label %195

195:                                              ; preds = %193, %182
  %196 = and i16 %100, 1
  %197 = icmp eq i16 %196, 0
  %198 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2
  br i1 %197, label %199, label %282

199:                                              ; preds = %195
  %200 = add nsw i32 %3, -1
  %201 = shl i32 1, %200
  %202 = add nsw i32 %201, -1
  %203 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 3
  %204 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 4
  %205 = load i8, i8* %203, align 1
  %206 = load i8, i8* %204, align 1
  %207 = icmp ult i8 %205, %206
  %208 = select i1 %207, i8 %206, i8 %205
  %209 = icmp ult i8 %208, 8
  br i1 %209, label %210, label %215

210:                                              ; preds = %199
  %211 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 5
  %212 = load i16, i16* %211, align 2
  %213 = trunc i32 %202 to i16
  %214 = and i16 %212, %213
  br label %226

215:                                              ; preds = %199
  %216 = icmp ult i8 %208, 11
  br i1 %216, label %217, label %219

217:                                              ; preds = %215
  %218 = trunc i32 %201 to i16
  br label %226

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 5
  %221 = load i16, i16* %220, align 2
  %222 = zext i16 %221 to i32
  %223 = and i32 %202, %222
  %224 = or i32 %223, %201
  %225 = trunc i32 %224 to i16
  br label %226

226:                                              ; preds = %219, %217, %210
  %227 = phi i16 [ %225, %219 ], [ %218, %217 ], [ %214, %210 ]
  %228 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 5
  store i16 %227, i16* %228, align 2
  %229 = load i8, i8* %204, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 4
  store i8 %232, i8* %233, align 1
  %234 = load i8, i8* %203, align 2
  %235 = zext i8 %234 to i64
  %236 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 3
  store i8 %237, i8* %238, align 2
  br i1 %2, label %239, label %243

239:                                              ; preds = %226
  %240 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 1
  %241 = load i16, i16* %240, align 2
  %242 = icmp ugt i16 %241, 3
  br i1 %242, label %243, label %254

243:                                              ; preds = %239, %226
  %244 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 2
  %245 = load i16, i16* %244, align 2
  %246 = trunc i32 %202 to i16
  %247 = and i16 %245, %246
  %248 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 2
  store i16 %247, i16* %248, align 2
  %249 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 1
  %250 = load i16, i16* %249, align 2
  %251 = zext i16 %250 to i64
  %252 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %251
  %253 = load i16, i16* %252, align 2
  br label %271

254:                                              ; preds = %239
  %255 = icmp eq i16 %241, 0
  br i1 %255, label %268, label %256

256:                                              ; preds = %254
  %257 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 2
  %258 = load i16, i16* %257, align 2
  %259 = zext i16 %258 to i32
  %260 = and i32 %202, %259
  %261 = or i32 %260, %201
  %262 = trunc i32 %261 to i16
  %263 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 2
  store i16 %262, i16* %263, align 2
  %264 = load i16, i16* %240, align 2
  %265 = zext i16 %264 to i64
  %266 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %265
  %267 = load i16, i16* %266, align 2
  br label %271

268:                                              ; preds = %254
  %269 = trunc i32 %201 to i16
  %270 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 2
  store i16 %269, i16* %270, align 2
  br label %271

271:                                              ; preds = %243, %256, %268
  %272 = phi i16 [ %253, %243 ], [ %267, %256 ], [ 6, %268 ]
  %273 = phi i16 [ %247, %243 ], [ %262, %256 ], [ %269, %268 ]
  %274 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 1
  store i16 %272, i16* %274, align 2
  %275 = getelementptr inbounds %struct.GrUserStencilSettings, %struct.GrUserStencilSettings* %1, i64 0, i32 3, i32 0
  %276 = load i16, i16* %275, align 2
  %277 = or i16 %273, %227
  %278 = trunc i32 %201 to i16
  %279 = or i16 %276, %278
  %280 = and i16 %279, %277
  %281 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %198, i64 0, i32 0, i32 0
  store i16 %280, i16* %281, align 2
  br label %284

282:                                              ; preds = %195
  %283 = bitcast %"struct.GrStencilSettings::Face"* %198 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %283, i8 0, i64 10, i1 false) #6
  br label %284

284:                                              ; preds = %98, %11, %282, %271, %87
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN17GrStencilSettings4Face5resetERK22GrTStencilFaceSettingsI17GrUserStencilTest15GrUserStencilOpEbi(%"struct.GrStencilSettings::Face"* nocapture, %struct.GrTStencilFaceSettings* nocapture readonly dereferenceable(10), i1 zeroext, i32) local_unnamed_addr #2 align 2 {
  %5 = add nsw i32 %3, -1
  %6 = shl i32 1, %5
  %7 = add nsw i32 %6, -1
  %8 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 3
  %9 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 4
  %10 = load i8, i8* %8, align 1
  %11 = load i8, i8* %9, align 1
  %12 = icmp ult i8 %10, %11
  %13 = select i1 %12, i8 %11, i8 %10
  %14 = icmp ult i8 %13, 8
  br i1 %14, label %15, label %20

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 5
  %17 = load i16, i16* %16, align 2
  %18 = trunc i32 %7 to i16
  %19 = and i16 %17, %18
  br label %31

20:                                               ; preds = %4
  %21 = icmp ult i8 %13, 11
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = trunc i32 %6 to i16
  br label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 5
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = and i32 %7, %27
  %29 = or i32 %28, %6
  %30 = trunc i32 %29 to i16
  br label %31

31:                                               ; preds = %22, %24, %15
  %32 = phi i16 [ %23, %22 ], [ %30, %24 ], [ %19, %15 ]
  %33 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 5
  store i16 %32, i16* %33, align 2
  %34 = load i8, i8* %9, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 4
  store i8 %37, i8* %38, align 1
  %39 = load i8, i8* %8, align 2
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZL19gUserStencilOpToRaw, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 3
  store i8 %42, i8* %43, align 2
  br i1 %2, label %44, label %48

44:                                               ; preds = %31
  %45 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 1
  %46 = load i16, i16* %45, align 2
  %47 = icmp ugt i16 %46, 3
  br i1 %47, label %48, label %59

48:                                               ; preds = %44, %31
  %49 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 2
  %50 = load i16, i16* %49, align 2
  %51 = trunc i32 %7 to i16
  %52 = and i16 %50, %51
  %53 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 2
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 1
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i64
  %57 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %56
  %58 = load i16, i16* %57, align 2
  br label %76

59:                                               ; preds = %44
  %60 = icmp eq i16 %46, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 2
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = and i32 %7, %64
  %66 = or i32 %65, %6
  %67 = trunc i32 %66 to i16
  %68 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 2
  store i16 %67, i16* %68, align 2
  %69 = load i16, i16* %45, align 2
  %70 = zext i16 %69 to i64
  %71 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZL21gUserStencilTestToRaw, i64 0, i64 %70
  %72 = load i16, i16* %71, align 2
  br label %76

73:                                               ; preds = %59
  %74 = trunc i32 %6 to i16
  %75 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 2
  store i16 %74, i16* %75, align 2
  br label %76

76:                                               ; preds = %61, %73, %48
  %77 = phi i16 [ %72, %61 ], [ 6, %73 ], [ %58, %48 ]
  %78 = phi i16 [ %67, %61 ], [ %74, %73 ], [ %52, %48 ]
  %79 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 1
  store i16 %77, i16* %79, align 2
  %80 = getelementptr inbounds %struct.GrTStencilFaceSettings, %struct.GrTStencilFaceSettings* %1, i64 0, i32 0
  %81 = load i16, i16* %80, align 2
  %82 = or i16 %32, %78
  %83 = trunc i32 %6 to i16
  %84 = or i16 %81, %83
  %85 = and i16 %82, %84
  %86 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %0, i64 0, i32 0, i32 0
  store i16 %85, i16* %86, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrStencilSettings4Face11setDisabledEv(%"struct.GrStencilSettings::Face"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.GrStencilSettings::Face"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %2, i8 0, i64 10, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrStencilSettings5resetERKS_(%class.GrStencilSettings* nocapture, %class.GrStencilSettings* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = and i32 %4, 33
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = and i32 %4, 16
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  %12 = bitcast %"struct.GrStencilSettings::Face"* %11 to i8*
  %13 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %1, i64 0, i32 1
  %14 = bitcast %"struct.GrStencilSettings::Face"* %13 to i8*
  br i1 %10, label %16, label %15

15:                                               ; preds = %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %14, i64 10, i1 false)
  br label %17

16:                                               ; preds = %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %14, i64 20, i1 false)
  br label %17

17:                                               ; preds = %2, %16, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17GrStencilSettingseqERKS_(%class.GrStencilSettings* nocapture readonly, %class.GrStencilSettings* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = or i32 %6, %4
  %8 = and i32 %7, 33
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = and i32 %7, 32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %38

13:                                               ; preds = %10
  %14 = and i32 %6, %4
  %15 = and i32 %14, 1
  %16 = icmp ne i32 %15, 0
  br label %38

17:                                               ; preds = %2
  %18 = and i32 %6, %4
  %19 = and i32 %18, 16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  %23 = bitcast %"struct.GrStencilSettings::Face"* %22 to i8*
  %24 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %1, i64 0, i32 1
  %25 = bitcast %"struct.GrStencilSettings::Face"* %24 to i8*
  %26 = tail call i32 @bcmp(i8* %23, i8* %25, i64 10)
  %27 = icmp eq i32 %26, 0
  br label %38

28:                                               ; preds = %17
  %29 = and i32 %7, 16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  %33 = bitcast %"struct.GrStencilSettings::Face"* %32 to i8*
  %34 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %1, i64 0, i32 1
  %35 = bitcast %"struct.GrStencilSettings::Face"* %34 to i8*
  %36 = tail call i32 @bcmp(i8* %33, i8* %35, i64 20)
  %37 = icmp eq i32 %36, 0
  br label %38

38:                                               ; preds = %28, %10, %31, %21, %13
  %39 = phi i1 [ %16, %13 ], [ %27, %21 ], [ %37, %31 ], [ false, %10 ], [ false, %28 ]
  ret i1 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.GrUserStencilSettings* @_ZN17GrStencilSettings18SetClipBitSettingsEb(i1 zeroext) local_unnamed_addr #4 align 2 {
  %2 = select i1 %0, %struct.GrUserStencilSettings* @_ZL18gSetStencilClipBit, %struct.GrUserStencilSettings* @_ZL19gZeroStencilClipBit
  ret %struct.GrUserStencilSettings* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17GrStencilSettings6genKeyEP21GrProcessorKeyBuilderb(%class.GrStencilSettings* nocapture readonly, %class.GrProcessorKeyBuilder*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.GrStencilSettings::Face", align 2
  %5 = alloca [2 x %"struct.GrStencilSettings::Face"], align 16
  %6 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %class.GrProcessorKeyBuilder* %1 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %9 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %9, i64 2
  %11 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %10, align 8
  tail call void %11(%class.GrProcessorKeyBuilder* %1, i32 6, i32 %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #6
  %12 = load i32, i32* %6, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %406

15:                                               ; preds = %3
  %16 = and i32 %12, 16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %148, label %18

18:                                               ; preds = %15
  br i1 %2, label %19, label %85

19:                                               ; preds = %18
  %20 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  %21 = bitcast %"struct.GrStencilSettings::Face"* %20 to i8*
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %25 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %24, i64 2
  %26 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %25, align 8
  tail call void %26(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %27 = getelementptr inbounds i8, i8* %21, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %31 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %30, i64 2
  %32 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %31, align 8
  tail call void %32(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %29, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %33 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast i16* %33 to i8*
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %38 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %37, i64 2
  %39 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %38, align 8
  tail call void %39(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %40 = getelementptr inbounds i8, i8* %34, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %44 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %43, i64 2
  %45 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %44, align 8
  tail call void %45(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %42, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %46 = getelementptr inbounds i16, i16* %33, i64 1
  %47 = bitcast i16* %46 to i8*
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %51 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %50, i64 2
  %52 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %51, align 8
  tail call void %52(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %49, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %53 = getelementptr inbounds i8, i8* %47, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %57 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %56, i64 2
  %58 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %57, align 8
  tail call void %58(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %55, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %59 = getelementptr inbounds i16, i16* %33, i64 2
  %60 = bitcast i16* %59 to i8*
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %64 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %63, i64 2
  %65 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %64, align 8
  tail call void %65(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %62, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %66 = getelementptr inbounds i8, i8* %60, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %70 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %69, i64 2
  %71 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %70, align 8
  tail call void %71(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %68, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %72 = getelementptr inbounds i16, i16* %33, i64 3
  %73 = bitcast i16* %72 to i8*
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %77 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %76, i64 2
  %78 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %77, align 8
  tail call void %78(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %75, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %79 = getelementptr inbounds i8, i8* %73, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %83 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %82, i64 2
  %84 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %83, align 8
  tail call void %84(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %81, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %406

85:                                               ; preds = %18
  %86 = bitcast %"struct.GrStencilSettings::Face"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %86) #6
  %87 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %4, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  %89 = bitcast %"struct.GrStencilSettings::Face"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %86, i8* align 4 %89, i64 10, i1 false)
  store i16 0, i16* %87, align 2
  %90 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %91 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %90, i64 2
  %92 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %91, align 8
  tail call void %92(%class.GrProcessorKeyBuilder* %1, i32 8, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %93 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %94 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %93, i64 2
  %95 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %94, align 8
  tail call void %95(%class.GrProcessorKeyBuilder* %1, i32 8, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %96 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %4, i64 0, i32 0, i32 1
  %97 = bitcast i16* %96 to i8*
  %98 = load i8, i8* %97, align 2
  %99 = zext i8 %98 to i32
  %100 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %101 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %100, i64 2
  %102 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %101, align 8
  tail call void %102(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %99, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %103 = getelementptr inbounds i8, i8* %97, i64 1
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %107 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %106, i64 2
  %108 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %107, align 8
  tail call void %108(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %105, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %109 = getelementptr inbounds i16, i16* %96, i64 1
  %110 = bitcast i16* %109 to i8*
  %111 = load i8, i8* %110, align 2
  %112 = zext i8 %111 to i32
  %113 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %114 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %113, i64 2
  %115 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %114, align 8
  tail call void %115(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %112, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %116 = getelementptr inbounds i8, i8* %110, i64 1
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %120 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %119, i64 2
  %121 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %120, align 8
  tail call void %121(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %118, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %122 = getelementptr inbounds i16, i16* %96, i64 2
  %123 = bitcast i16* %122 to i8*
  %124 = load i8, i8* %123, align 2
  %125 = zext i8 %124 to i32
  %126 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %127 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %126, i64 2
  %128 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %127, align 8
  tail call void %128(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %125, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %129 = getelementptr inbounds i8, i8* %123, i64 1
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %133 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %132, i64 2
  %134 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %133, align 8
  tail call void %134(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %131, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %135 = getelementptr inbounds i16, i16* %96, i64 3
  %136 = bitcast i16* %135 to i8*
  %137 = load i8, i8* %136, align 2
  %138 = zext i8 %137 to i32
  %139 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %140 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %139, i64 2
  %141 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %140, align 8
  tail call void %141(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %138, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %142 = getelementptr inbounds i8, i8* %136, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %146 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %145, i64 2
  %147 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %146, align 8
  tail call void %147(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %144, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %86) #6
  br label %406

148:                                              ; preds = %15
  br i1 %2, label %149, label %280

149:                                              ; preds = %148
  %150 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  %151 = bitcast %"struct.GrStencilSettings::Face"* %150 to i8*
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %155 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %154, i64 2
  %156 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %155, align 8
  tail call void %156(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %153, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %157 = getelementptr inbounds i8, i8* %151, i64 1
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %161 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %160, i64 2
  %162 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %161, align 8
  tail call void %162(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %159, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %163 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1, i32 0, i32 1
  %164 = bitcast i16* %163 to i8*
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %168 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %167, i64 2
  %169 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %168, align 8
  tail call void %169(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %166, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %170 = getelementptr inbounds i8, i8* %164, i64 1
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %174 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %173, i64 2
  %175 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %174, align 8
  tail call void %175(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %172, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %176 = getelementptr inbounds i16, i16* %163, i64 1
  %177 = bitcast i16* %176 to i8*
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %181 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %180, i64 2
  %182 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %181, align 8
  tail call void %182(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %179, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %183 = getelementptr inbounds i8, i8* %177, i64 1
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %187 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %186, i64 2
  %188 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %187, align 8
  tail call void %188(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %185, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %189 = getelementptr inbounds i16, i16* %163, i64 2
  %190 = bitcast i16* %189 to i8*
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %194 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %193, i64 2
  %195 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %194, align 8
  tail call void %195(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %192, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %196 = getelementptr inbounds i8, i8* %190, i64 1
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %200 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %199, i64 2
  %201 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %200, align 8
  tail call void %201(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %198, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %202 = getelementptr inbounds i16, i16* %163, i64 3
  %203 = bitcast i16* %202 to i8*
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %207 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %206, i64 2
  %208 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %207, align 8
  tail call void %208(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %205, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %209 = getelementptr inbounds i8, i8* %203, i64 1
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %213 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %212, i64 2
  %214 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %213, align 8
  tail call void %214(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %215 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2
  %216 = bitcast %"struct.GrStencilSettings::Face"* %215 to i8*
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %220 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %219, i64 2
  %221 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %220, align 8
  tail call void %221(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %218, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %222 = getelementptr inbounds i8, i8* %216, i64 1
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %226 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %225, i64 2
  %227 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %226, align 8
  tail call void %227(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %224, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %228 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2, i32 0, i32 1
  %229 = bitcast i16* %228 to i8*
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %233 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %232, i64 2
  %234 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %233, align 8
  tail call void %234(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %231, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %235 = getelementptr inbounds i8, i8* %229, i64 1
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %239 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %238, i64 2
  %240 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %239, align 8
  tail call void %240(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %237, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %241 = getelementptr inbounds i16, i16* %228, i64 1
  %242 = bitcast i16* %241 to i8*
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %246 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %245, i64 2
  %247 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %246, align 8
  tail call void %247(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %244, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %248 = getelementptr inbounds i8, i8* %242, i64 1
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  %251 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %252 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %251, i64 2
  %253 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %252, align 8
  tail call void %253(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %250, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %254 = getelementptr inbounds i16, i16* %228, i64 2
  %255 = bitcast i16* %254 to i8*
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %259 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %258, i64 2
  %260 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %259, align 8
  tail call void %260(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %257, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %261 = getelementptr inbounds i8, i8* %255, i64 1
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %265 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %264, i64 2
  %266 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %265, align 8
  tail call void %266(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %263, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %267 = getelementptr inbounds i16, i16* %228, i64 3
  %268 = bitcast i16* %267 to i8*
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  %271 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %272 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %271, i64 2
  %273 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %272, align 8
  tail call void %273(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %270, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %274 = getelementptr inbounds i8, i8* %268, i64 1
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i32
  %277 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %278 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %277, i64 2
  %279 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %278, align 8
  tail call void %279(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %276, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %406

280:                                              ; preds = %148
  %281 = bitcast [2 x %"struct.GrStencilSettings::Face"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %281) #6
  %282 = getelementptr inbounds [2 x %"struct.GrStencilSettings::Face"], [2 x %"struct.GrStencilSettings::Face"]* %5, i64 0, i64 0, i32 0, i32 0
  %283 = getelementptr inbounds [2 x %"struct.GrStencilSettings::Face"], [2 x %"struct.GrStencilSettings::Face"]* %5, i64 0, i64 1
  %284 = getelementptr inbounds %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face"* %283, i64 0, i32 0, i32 0
  %285 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 1
  %286 = bitcast %"struct.GrStencilSettings::Face"* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %281, i8* align 2 %286, i64 10, i1 false)
  store i16 0, i16* %282, align 16
  %287 = getelementptr inbounds %class.GrStencilSettings, %class.GrStencilSettings* %0, i64 0, i32 2
  %288 = bitcast %"struct.GrStencilSettings::Face"* %283 to i8*
  %289 = bitcast %"struct.GrStencilSettings::Face"* %287 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %288, i8* align 2 %289, i64 10, i1 false)
  store i16 0, i16* %284, align 2
  %290 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %291 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %290, i64 2
  %292 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %291, align 8
  tail call void %292(%class.GrProcessorKeyBuilder* %1, i32 8, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %293 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %294 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %293, i64 2
  %295 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %294, align 8
  tail call void %295(%class.GrProcessorKeyBuilder* %1, i32 8, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %296 = getelementptr inbounds [2 x %"struct.GrStencilSettings::Face"], [2 x %"struct.GrStencilSettings::Face"]* %5, i64 0, i64 0, i32 0, i32 1
  %297 = bitcast i16* %296 to i8*
  %298 = load i8, i8* %297, align 2
  %299 = zext i8 %298 to i32
  %300 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %301 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %300, i64 2
  %302 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %301, align 8
  tail call void %302(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %299, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %303 = getelementptr inbounds i8, i8* %297, i64 1
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  %306 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %307 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %306, i64 2
  %308 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %307, align 8
  tail call void %308(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %305, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %309 = getelementptr inbounds i16, i16* %296, i64 1
  %310 = bitcast i16* %309 to i8*
  %311 = load i8, i8* %310, align 2
  %312 = zext i8 %311 to i32
  %313 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %314 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %313, i64 2
  %315 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %314, align 8
  tail call void %315(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %312, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %316 = getelementptr inbounds i8, i8* %310, i64 1
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %320 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %319, i64 2
  %321 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %320, align 8
  tail call void %321(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %318, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %322 = getelementptr inbounds i16, i16* %296, i64 2
  %323 = bitcast i16* %322 to i8*
  %324 = load i8, i8* %323, align 2
  %325 = zext i8 %324 to i32
  %326 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %327 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %326, i64 2
  %328 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %327, align 8
  tail call void %328(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %325, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %329 = getelementptr inbounds i8, i8* %323, i64 1
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %333 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %332, i64 2
  %334 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %333, align 8
  tail call void %334(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %331, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %335 = getelementptr inbounds i16, i16* %296, i64 3
  %336 = bitcast i16* %335 to i8*
  %337 = load i8, i8* %336, align 2
  %338 = zext i8 %337 to i32
  %339 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %340 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %339, i64 2
  %341 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %340, align 8
  tail call void %341(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %338, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %342 = getelementptr inbounds i8, i8* %336, i64 1
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %346 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %345, i64 2
  %347 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %346, align 8
  tail call void %347(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %344, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #6
  %348 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %349 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %348, i64 2
  %350 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %349, align 8
  tail call void %350(%class.GrProcessorKeyBuilder* %1, i32 8, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %351 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %352 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %351, i64 2
  %353 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %352, align 8
  tail call void %353(%class.GrProcessorKeyBuilder* %1, i32 8, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %354 = getelementptr inbounds [2 x %"struct.GrStencilSettings::Face"], [2 x %"struct.GrStencilSettings::Face"]* %5, i64 0, i64 1, i32 0, i32 1
  %355 = bitcast i16* %354 to i8*
  %356 = load i8, i8* %355, align 2
  %357 = zext i8 %356 to i32
  %358 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %359 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %358, i64 2
  %360 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %359, align 8
  tail call void %360(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %357, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %361 = getelementptr inbounds i8, i8* %355, i64 1
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i32
  %364 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %365 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %364, i64 2
  %366 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %365, align 8
  tail call void %366(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %363, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %367 = getelementptr inbounds i16, i16* %354, i64 1
  %368 = bitcast i16* %367 to i8*
  %369 = load i8, i8* %368, align 2
  %370 = zext i8 %369 to i32
  %371 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %372 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %371, i64 2
  %373 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %372, align 8
  tail call void %373(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %370, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %374 = getelementptr inbounds i8, i8* %368, i64 1
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i32
  %377 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %378 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %377, i64 2
  %379 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %378, align 8
  tail call void %379(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %376, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %380 = getelementptr inbounds i16, i16* %354, i64 2
  %381 = bitcast i16* %380 to i8*
  %382 = load i8, i8* %381, align 2
  %383 = zext i8 %382 to i32
  %384 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %385 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %384, i64 2
  %386 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %385, align 8
  tail call void %386(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %383, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %387 = getelementptr inbounds i8, i8* %381, i64 1
  %388 = load i8, i8* %387, align 1
  %389 = zext i8 %388 to i32
  %390 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %391 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %390, i64 2
  %392 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %391, align 8
  tail call void %392(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %389, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %393 = getelementptr inbounds i16, i16* %354, i64 3
  %394 = bitcast i16* %393 to i8*
  %395 = load i8, i8* %394, align 2
  %396 = zext i8 %395 to i32
  %397 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %398 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %397, i64 2
  %399 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %398, align 8
  tail call void %399(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %396, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  %400 = getelementptr inbounds i8, i8* %394, i64 1
  %401 = load i8, i8* %400, align 1
  %402 = zext i8 %401 to i32
  %403 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %8, align 8
  %404 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %403, i64 2
  %405 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %404, align 8
  tail call void %405(%class.GrProcessorKeyBuilder* %1, i32 8, i32 %402, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %281) #6
  br label %406

406:                                              ; preds = %19, %149, %3, %280, %85
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
