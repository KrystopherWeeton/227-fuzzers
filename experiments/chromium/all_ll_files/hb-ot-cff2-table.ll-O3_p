; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-cff2-table.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-cff2-table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CFF::byte_str_ref_t" = type <{ %"struct.CFF::byte_str_t", i32, i8, [3 x i8] }>
%"struct.CFF::byte_str_t" = type { %struct.hb_array_t }
%struct.hb_array_t = type { i8*, i32, i32 }
%struct.hb_vector_t.155 = type { i32, i32, %"struct.CFF::blend_arg_t"* }
%"struct.CFF::blend_arg_t" = type { %"struct.CFF::number_t", i32, i32, %struct.hb_vector_t.156 }
%"struct.CFF::number_t" = type { double }
%struct.hb_vector_t.156 = type { i32, i32, %"struct.CFF::number_t"* }
%"struct.CFF::call_context_t" = type { %"struct.CFF::byte_str_ref_t", i32, i32 }
%struct.hb_vector_t.158 = type { i32, i32, %"struct.CFF::call_context_t"* }
%"struct.CFF::Subrs" = type { %"struct.CFF::CFFIndex" }
%"struct.CFF::CFFIndex" = type { %"struct.OT::IntType", %"struct.OT::IntType.1", [1 x %"struct.OT::IntType.1"] }
%"struct.OT::IntType" = type { %struct.BEInt }
%struct.BEInt = type { [4 x i8] }
%"struct.OT::IntType.1" = type { %struct.BEInt.2 }
%struct.BEInt.2 = type { i8 }
%"struct.CFF::point_t" = type { %"struct.CFF::number_t", %"struct.CFF::number_t" }
%"struct.CFF::CFF2VariationStore" = type { %"struct.OT::IntType.3", %"struct.OT::VariationStore" }
%"struct.OT::IntType.3" = type { %struct.BEInt.4 }
%struct.BEInt.4 = type { [2 x i8] }
%"struct.OT::VariationStore" = type { %"struct.OT::IntType.3", %"struct.OT::OffsetTo", %"struct.OT::ArrayOf" }
%"struct.OT::OffsetTo" = type { %"struct.OT::Offset" }
%"struct.OT::Offset" = type { %"struct.OT::IntType" }
%"struct.OT::ArrayOf" = type { %"struct.OT::IntType.3", [1 x %"struct.OT::OffsetTo.5"] }
%"struct.OT::OffsetTo.5" = type { %"struct.OT::Offset" }
%struct.hb_vector_t.159 = type { i32, i32, float* }
%"struct.OT::cff2::accelerator_t" = type { %"struct.OT::cff2::accelerator_templ_t.base", [4 x i8] }
%"struct.OT::cff2::accelerator_templ_t.base" = type <{ %struct.hb_blob_t*, %struct.hb_sanitize_context_t, %"struct.CFF::cff2_top_dict_values_t", %"struct.CFF::Subrs"*, %"struct.CFF::CFF2VariationStore"*, %"struct.CFF::CFFIndex"*, %"struct.CFF::CFF2FDArray"*, %"struct.CFF::CFF2FDSelect"*, i32, [4 x i8], %struct.hb_vector_t.10, %struct.hb_vector_t.11, i32 }>
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_sanitize_context_t = type <{ %struct.hb_dispatch_context_t, [4 x i8], i8*, i8*, i32, i32, i8, [3 x i8], i32, %struct.hb_blob_t*, i32, i8, [3 x i8] }>
%struct.hb_dispatch_context_t = type { i32 }
%"struct.CFF::cff2_top_dict_values_t" = type { %"struct.CFF::top_dict_values_t", i32, i32 }
%"struct.CFF::top_dict_values_t" = type { %"struct.CFF::dict_values_t", i32, i32 }
%"struct.CFF::dict_values_t" = type { %"struct.CFF::parsed_values_t" }
%"struct.CFF::parsed_values_t" = type { i32, %struct.hb_vector_t.0 }
%struct.hb_vector_t.0 = type { i32, i32, %"struct.CFF::op_str_t"* }
%"struct.CFF::op_str_t" = type { i32, %"struct.CFF::byte_str_t" }
%"struct.CFF::CFF2FDArray" = type { %"struct.CFF::FDArray" }
%"struct.CFF::FDArray" = type { %"struct.CFF::CFFIndexOf" }
%"struct.CFF::CFFIndexOf" = type { %"struct.CFF::CFFIndex" }
%"struct.CFF::CFF2FDSelect" = type { %"struct.OT::IntType.1", %union.anon }
%union.anon = type { %"struct.CFF::FDSelect3_4.7" }
%"struct.CFF::FDSelect3_4.7" = type { %"struct.OT::ArrayOf.8" }
%"struct.OT::ArrayOf.8" = type { %"struct.OT::IntType", [1 x %"struct.CFF::FDSelect3_4_Range.9"] }
%"struct.CFF::FDSelect3_4_Range.9" = type { %"struct.OT::IntType", %"struct.OT::IntType.3" }
%struct.hb_vector_t.10 = type { i32, i32, %"struct.CFF::cff2_font_dict_values_t"* }
%"struct.CFF::cff2_font_dict_values_t" = type <{ %"struct.CFF::dict_values_t", %"struct.CFF::table_info_t", [4 x i8] }>
%"struct.CFF::table_info_t" = type { i32, i32, i32 }
%struct.hb_vector_t.11 = type { i32, i32, %"struct.CFF::cff2_private_dict_values_base_t"* }
%"struct.CFF::cff2_private_dict_values_base_t" = type <{ %"struct.CFF::dict_values_t.12", i32, [4 x i8], %"struct.CFF::Subrs"*, i32, [4 x i8] }>
%"struct.CFF::dict_values_t.12" = type { %"struct.CFF::parsed_values_t.13" }
%"struct.CFF::parsed_values_t.13" = type { i32, %struct.hb_vector_t.14 }
%struct.hb_vector_t.14 = type { i32, i32, %"struct.CFF::dict_val_t"* }
%"struct.CFF::dict_val_t" = type { %"struct.CFF::op_str_t", %"struct.CFF::number_t" }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.150 }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.141 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.15 }
%struct.hb_atomic_ptr_t.15 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.21, %struct.hb_face_lazy_loader_t.24, %struct.hb_table_lazy_loader_t.28, %struct.hb_face_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.35, %struct.hb_table_lazy_loader_t.39, %struct.hb_face_lazy_loader_t.42, %struct.hb_table_lazy_loader_t.46, %struct.hb_face_lazy_loader_t.49, %struct.hb_face_lazy_loader_t.53, %struct.hb_face_lazy_loader_t.57, %struct.hb_face_lazy_loader_t.61, %struct.hb_table_lazy_loader_t.65, %struct.hb_table_lazy_loader_t.68, %struct.hb_table_lazy_loader_t.71, %struct.hb_face_lazy_loader_t.74, %struct.hb_table_lazy_loader_t.78, %struct.hb_table_lazy_loader_t.81, %struct.hb_face_lazy_loader_t.84, %struct.hb_face_lazy_loader_t.88, %struct.hb_face_lazy_loader_t.92, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_table_lazy_loader_t.111, %struct.hb_table_lazy_loader_t.114, %struct.hb_table_lazy_loader_t.117, %struct.hb_table_lazy_loader_t.120, %struct.hb_table_lazy_loader_t.123, %struct.hb_face_lazy_loader_t.126, %struct.hb_face_lazy_loader_t.130, %struct.hb_face_lazy_loader_t.134, %struct.hb_table_lazy_loader_t.138 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.16 }
%struct.hb_lazy_loader_t.16 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_atomic_ptr_t.17 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.18 }
%struct.hb_lazy_loader_t.18 = type { %struct.hb_atomic_ptr_t.20 }
%struct.hb_atomic_ptr_t.20 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.21 = type { %struct.hb_lazy_loader_t.22 }
%struct.hb_lazy_loader_t.22 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_face_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.27 }
%struct.hb_atomic_ptr_t.27 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.28 = type { %struct.hb_lazy_loader_t.29 }
%struct.hb_lazy_loader_t.29 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_face_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.34 }
%struct.hb_atomic_ptr_t.34 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.35 = type { %struct.hb_lazy_loader_t.36 }
%struct.hb_lazy_loader_t.36 = type { %struct.hb_atomic_ptr_t.38 }
%struct.hb_atomic_ptr_t.38 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.39 = type { %struct.hb_lazy_loader_t.40 }
%struct.hb_lazy_loader_t.40 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_face_lazy_loader_t.49 = type { %struct.hb_lazy_loader_t.50 }
%struct.hb_lazy_loader_t.50 = type { %struct.hb_atomic_ptr_t.52 }
%struct.hb_atomic_ptr_t.52 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.56 }
%struct.hb_atomic_ptr_t.56 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.57 = type { %struct.hb_lazy_loader_t.58 }
%struct.hb_lazy_loader_t.58 = type { %struct.hb_atomic_ptr_t.60 }
%struct.hb_atomic_ptr_t.60 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.61 = type { %struct.hb_lazy_loader_t.62 }
%struct.hb_lazy_loader_t.62 = type { %struct.hb_atomic_ptr_t.64 }
%struct.hb_atomic_ptr_t.64 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type { %"struct.OT::cff2::accelerator_t.base", [4 x i8] }
%"struct.OT::cff2::accelerator_t.base" = type { %"struct.OT::cff2::accelerator_templ_t.base" }
%struct.hb_table_lazy_loader_t.65 = type { %struct.hb_lazy_loader_t.66 }
%struct.hb_lazy_loader_t.66 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.68 = type { %struct.hb_lazy_loader_t.69 }
%struct.hb_lazy_loader_t.69 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.71 = type { %struct.hb_lazy_loader_t.72 }
%struct.hb_lazy_loader_t.72 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_face_lazy_loader_t.74 = type { %struct.hb_lazy_loader_t.75 }
%struct.hb_lazy_loader_t.75 = type { %struct.hb_atomic_ptr_t.77 }
%struct.hb_atomic_ptr_t.77 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.78 = type { %struct.hb_lazy_loader_t.79 }
%struct.hb_lazy_loader_t.79 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_face_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.87 }
%struct.hb_atomic_ptr_t.87 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.88 = type { %struct.hb_lazy_loader_t.89 }
%struct.hb_lazy_loader_t.89 = type { %struct.hb_atomic_ptr_t.91 }
%struct.hb_atomic_ptr_t.91 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.92 = type { %struct.hb_lazy_loader_t.93 }
%struct.hb_lazy_loader_t.93 = type { %struct.hb_atomic_ptr_t.95 }
%struct.hb_atomic_ptr_t.95 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.114 = type { %struct.hb_lazy_loader_t.115 }
%struct.hb_lazy_loader_t.115 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.117 = type { %struct.hb_lazy_loader_t.118 }
%struct.hb_lazy_loader_t.118 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.120 = type { %struct.hb_lazy_loader_t.121 }
%struct.hb_lazy_loader_t.121 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_face_lazy_loader_t.126 = type { %struct.hb_lazy_loader_t.127 }
%struct.hb_lazy_loader_t.127 = type { %struct.hb_atomic_ptr_t.129 }
%struct.hb_atomic_ptr_t.129 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.130 = type { %struct.hb_lazy_loader_t.131 }
%struct.hb_lazy_loader_t.131 = type { %struct.hb_atomic_ptr_t.133 }
%struct.hb_atomic_ptr_t.133 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.134 = type { %struct.hb_lazy_loader_t.135 }
%struct.hb_lazy_loader_t.135 = type { %struct.hb_atomic_ptr_t.137 }
%struct.hb_atomic_ptr_t.137 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.138 = type { %struct.hb_lazy_loader_t.139 }
%struct.hb_lazy_loader_t.139 = type { %struct.hb_atomic_ptr_t.17 }
%struct.hb_atomic_ptr_t.141 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon, %struct.anon.142, %struct.anon.143 }
%struct.anon = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.142 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.143 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.145], [2 x %struct.hb_vector_t.146] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.144 }
%struct.hb_vector_t.144 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.145 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.146 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.147 }
%struct.hb_vector_t.147 = type { i32, i32, i32* }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon.148, %struct.anon.149, %"union.hb_font_funcs_t::get_t" }
%struct.anon.148 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.149 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.150 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.151 }
%struct.hb_shaper_lazy_loader_t.151 = type { %struct.hb_lazy_loader_t.152 }
%struct.hb_lazy_loader_t.152 = type { %struct.hb_atomic_ptr_t.154 }
%struct.hb_atomic_ptr_t.154 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%"struct.CFF::cff2_cs_interpreter_t" = type { %"struct.CFF::cs_interpreter_t" }
%"struct.CFF::cs_interpreter_t" = type { %"struct.CFF::interpreter_t" }
%"struct.CFF::interpreter_t" = type { %"struct.CFF::cff2_cs_interp_env_t" }
%"struct.CFF::cff2_cs_interp_env_t" = type <{ %"struct.CFF::cs_interp_env_t", i32*, i32, [4 x i8], %"struct.CFF::CFF2VariationStore"*, i32, i32, %struct.hb_vector_t.159, i8, i8, i8, [5 x i8] }>
%"struct.CFF::cs_interp_env_t" = type { %"struct.CFF::interp_env_t.base", [7 x i8], %"struct.CFF::call_context_t", i8, i8, i8, i32, i32, i32, %"struct.CFF::call_stack_t", %"struct.CFF::biased_subrs_t", %"struct.CFF::biased_subrs_t", %"struct.CFF::point_t" }
%"struct.CFF::interp_env_t.base" = type <{ %"struct.CFF::byte_str_ref_t", %"struct.CFF::arg_stack_t", i8 }>
%"struct.CFF::arg_stack_t" = type { %"struct.CFF::cff_stack_t" }
%"struct.CFF::cff_stack_t" = type { i8, i32, %struct.hb_vector_t.155 }
%"struct.CFF::call_stack_t" = type { %"struct.CFF::cff_stack_t.157" }
%"struct.CFF::cff_stack_t.157" = type { i8, i32, %struct.hb_vector_t.158 }
%"struct.CFF::biased_subrs_t" = type { i32, %"struct.CFF::Subrs"* }
%struct.cff2_extents_param_t = type { i8, %"struct.CFF::number_t", %"struct.CFF::number_t", %"struct.CFF::number_t", %"struct.CFF::number_t" }
%"struct.CFF::FDSelect0" = type { [1 x %"struct.OT::IntType.1"] }
%"struct.CFF::FDSelect3_4" = type { %"struct.OT::ArrayOf.6" }
%"struct.OT::ArrayOf.6" = type { %"struct.OT::IntType.3", [1 x %"struct.CFF::FDSelect3_4_Range"] }
%"struct.CFF::FDSelect3_4_Range" = type { %"struct.OT::IntType.3", %"struct.OT::IntType.1" }
%"struct.CFF::interp_env_t" = type <{ %"struct.CFF::byte_str_ref_t", %"struct.CFF::arg_stack_t", i8, [7 x i8] }>
%"struct.OT::VarData" = type { %"struct.OT::IntType.3", %"struct.OT::IntType.3", %"struct.OT::ArrayOf.166" }
%"struct.OT::ArrayOf.166" = type { %"struct.OT::IntType.3", [1 x %"struct.OT::IntType.3"] }
%"struct.OT::VarRegionList" = type { %"struct.OT::IntType.3", %"struct.OT::IntType.3", %"struct.OT::UnsizedArrayOf" }
%"struct.OT::UnsizedArrayOf" = type { [1 x %"struct.OT::VarRegionAxis"] }
%"struct.OT::VarRegionAxis" = type { %"struct.OT::F2DOT14", %"struct.OT::F2DOT14", %"struct.OT::F2DOT14" }
%"struct.OT::F2DOT14" = type { %"struct.OT::IntType.167" }
%"struct.OT::IntType.167" = type { %struct.BEInt.168 }
%struct.BEInt.168 = type { [2 x i8] }

$_ZN3CFF13interpreter_tINS_20cff2_cs_interp_env_tEED2Ev = comdat any

$_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE9length_atEj = comdat any

$_ZN3CFF15cs_interp_env_tINS_11blend_arg_tENS_5SubrsIN2OT7IntTypeIjLj4EEEEEE4initERKNS_10byte_str_tEPKS6_SC_ = comdat any

$_ZN3CFF15cff2_cs_opset_tI23cff2_cs_opset_extents_t20cff2_extents_param_t25cff2_path_procs_extents_tE10process_opEjRNS_20cff2_cs_interp_env_tERS2_ = comdat any

$_ZN3CFF10cs_opset_tINS_11blend_arg_tE23cff2_cs_opset_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_t25cff2_path_procs_extents_tE10process_opEjRS3_RS4_ = comdat any

$_ZN3CFF15cff2_cs_opset_tI23cff2_cs_opset_extents_t20cff2_extents_param_t25cff2_path_procs_extents_tE13process_blendERNS_20cff2_cs_interp_env_tERS2_ = comdat any

$_ZN3CFF15cs_interp_env_tINS_11blend_arg_tENS_5SubrsIN2OT7IntTypeIjLj4EEEEEE9call_subrERKNS_14biased_subrs_tIS6_EENS_9cs_type_tE = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7rmovetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7rlinetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7hlinetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7vlinetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9rrcurvetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE10rcurvelineERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE10rlinecurveERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9vvcurvetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9hhcurvetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9vhcurvetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9hvcurvetoERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE5hflexERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE4flexERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE6hflex1ERS2_RS3_ = comdat any

$_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE5flex1ERS2_RS3_ = comdat any

$_ZN3CFF7opset_tINS_11blend_arg_tEE10process_opEjRNS_12interp_env_tIS1_EE = comdat any

$_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_ = comdat any

$_ZN3CFF20cff2_cs_interp_env_t13process_blendEv = comdat any

$_ZNK2OT14VariationStore11get_scalarsEjPKijPfj = comdat any

$_ZNK2OT13VarRegionList8evaluateEjPKij = comdat any

@__const._ZNK2OT4cff213accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t.interp = private unnamed_addr constant { { { <{ { <{ %"struct.CFF::byte_str_ref_t", { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } }, i8 }>, [7 x i8], %"struct.CFF::call_context_t", i8, i8, i8, [1 x i8], i32, i32, i32, { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, %"struct.CFF::point_t" }, i32*, i32, [4 x i8], %"struct.CFF::CFF2VariationStore"*, i32, i32, %struct.hb_vector_t.159, i8, i8, i8, [5 x i8] }> } } } { { { <{ { <{ %"struct.CFF::byte_str_ref_t", { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } }, i8 }>, [7 x i8], %"struct.CFF::call_context_t", i8, i8, i8, [1 x i8], i32, i32, i32, { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, %"struct.CFF::point_t" }, i32*, i32, [4 x i8], %"struct.CFF::CFF2VariationStore"*, i32, i32, %struct.hb_vector_t.159, i8, i8, i8, [5 x i8] }> } } { { <{ { <{ %"struct.CFF::byte_str_ref_t", { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } }, i8 }>, [7 x i8], %"struct.CFF::call_context_t", i8, i8, i8, [1 x i8], i32, i32, i32, { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, %"struct.CFF::point_t" }, i32*, i32, [4 x i8], %"struct.CFF::CFF2VariationStore"*, i32, i32, %struct.hb_vector_t.159, i8, i8, i8, [5 x i8] }> } { <{ { <{ %"struct.CFF::byte_str_ref_t", { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } }, i8 }>, [7 x i8], %"struct.CFF::call_context_t", i8, i8, i8, [1 x i8], i32, i32, i32, { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, %"struct.CFF::point_t" }, i32*, i32, [4 x i8], %"struct.CFF::CFF2VariationStore"*, i32, i32, %struct.hb_vector_t.159, i8, i8, i8, [5 x i8] }> <{ { <{ %"struct.CFF::byte_str_ref_t", { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } }, i8 }>, [7 x i8], %"struct.CFF::call_context_t", i8, i8, i8, [1 x i8], i32, i32, i32, { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, %"struct.CFF::point_t" } { <{ %"struct.CFF::byte_str_ref_t", { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } }, i8 }> <{ %"struct.CFF::byte_str_ref_t" <{ %"struct.CFF::byte_str_t" { %struct.hb_array_t { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } } { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.hb_vector_t.155 { i32 -1431655766, i32 -1431655766, %"struct.CFF::blend_arg_t"* inttoptr (i64 -6148914691236517206 to %"struct.CFF::blend_arg_t"*) } } }, i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.CFF::call_context_t" { %"struct.CFF::byte_str_ref_t" <{ %"struct.CFF::byte_str_t" { %struct.hb_array_t { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i32 -1431655766, i32 -1431655766 }, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } } { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.hb_vector_t.158 { i32 -1431655766, i32 -1431655766, %"struct.CFF::call_context_t"* inttoptr (i64 -6148914691236517206 to %"struct.CFF::call_context_t"*) } } }, { i32, [4 x i8], %"struct.CFF::Subrs"* } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.CFF::Subrs"* inttoptr (i64 -6148914691236517206 to %"struct.CFF::Subrs"*) }, { i32, [4 x i8], %"struct.CFF::Subrs"* } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.CFF::Subrs"* inttoptr (i64 -6148914691236517206 to %"struct.CFF::Subrs"*) }, %"struct.CFF::point_t" { %"struct.CFF::number_t" { double 0xFFFFFFFFFFFFFFFF }, %"struct.CFF::number_t" { double 0xFFFFFFFFFFFFFFFF } } }, i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.CFF::CFF2VariationStore"* inttoptr (i64 -6148914691236517206 to %"struct.CFF::CFF2VariationStore"*), i32 -1431655766, i32 -1431655766, %struct.hb_vector_t.159 { i32 -1431655766, i32 -1431655766, float* inttoptr (i64 -6148914691236517206 to float*) }, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }> } } }, align 8
@_hb_NullPool = external hidden constant [48 x i64], align 16
@_hb_CrapPool = external hidden global [48 x i64], align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2OT4cff213accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t(%"struct.OT::cff2::accelerator_t"* nocapture readonly, %struct.hb_font_t* nocapture readonly, i32, %struct.hb_glyph_extents_t* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.CFF::cff2_cs_interpreter_t", align 8
  %6 = alloca %"struct.CFF::byte_str_t", align 8
  %7 = alloca %struct.cff2_extents_param_t, align 8
  %8 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 0
  %9 = load %struct.hb_blob_t*, %struct.hb_blob_t** %8, align 8
  %10 = icmp eq %struct.hb_blob_t* %9, null
  br i1 %10, label %524, label %11, !prof !2

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 12
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %13, %2
  br i1 %14, label %15, label %524, !prof !3

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 7
  %17 = load %"struct.CFF::CFF2FDSelect"*, %"struct.CFF::CFF2FDSelect"** %16, align 8
  %18 = icmp eq %"struct.CFF::CFF2FDSelect"* %17, bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::CFF2FDSelect"*)
  br i1 %18, label %148, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 1
  switch i8 %21, label %148 [
    i8 0, label %22
    i8 3, label %29
    i8 4, label %64
  ]

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1
  %24 = bitcast %union.anon* %23 to %"struct.CFF::FDSelect0"*
  %25 = zext i32 %2 to i64
  %26 = getelementptr inbounds %"struct.CFF::FDSelect0", %"struct.CFF::FDSelect0"* %24, i64 0, i32 0, i64 %25, i32 0, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  br label %148

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1
  %31 = bitcast %union.anon* %30 to %"struct.CFF::FDSelect3_4"*
  %32 = bitcast %union.anon* %30 to i16*
  %33 = load i16, i16* %32, align 1
  %34 = tail call i16 @llvm.bswap.i16(i16 %33) #6
  %35 = icmp ugt i16 %34, 1
  br i1 %35, label %36, label %53

36:                                               ; preds = %29
  %37 = zext i16 %34 to i64
  br label %38

38:                                               ; preds = %47, %36
  %39 = phi i64 [ 1, %36 ], [ %48, %47 ]
  %40 = phi i32 [ 1, %36 ], [ %49, %47 ]
  %41 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %31, i64 0, i32 0, i32 1, i64 %39
  %42 = bitcast %"struct.CFF::FDSelect3_4_Range"* %41 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = tail call i16 @llvm.bswap.i16(i16 %43) #6
  %45 = zext i16 %44 to i32
  %46 = icmp ugt i32 %45, %2
  br i1 %46, label %51, label %47

47:                                               ; preds = %38
  %48 = add nuw nsw i64 %39, 1
  %49 = add nuw nsw i32 %40, 1
  %50 = icmp eq i64 %48, %37
  br i1 %50, label %53, label %38

51:                                               ; preds = %38
  %52 = trunc i64 %39 to i32
  br label %53

53:                                               ; preds = %47, %51, %29
  %54 = phi i32 [ 1, %29 ], [ %52, %51 ], [ %49, %47 ]
  %55 = zext i16 %34 to i32
  %56 = add i32 %54, -1
  %57 = icmp ult i32 %56, %55
  %58 = zext i32 %56 to i64
  %59 = getelementptr inbounds %"struct.CFF::FDSelect3_4", %"struct.CFF::FDSelect3_4"* %31, i64 0, i32 0, i32 1, i64 %58
  %60 = select i1 %57, %"struct.CFF::FDSelect3_4_Range"* %59, %"struct.CFF::FDSelect3_4_Range"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range"*), !prof !3
  %61 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range", %"struct.CFF::FDSelect3_4_Range"* %60, i64 0, i32 1, i32 0, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  br label %148

64:                                               ; preds = %19
  %65 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0
  %66 = bitcast %"struct.CFF::FDSelect3_4.7"* %65 to i32*
  %67 = load i32, i32* %66, align 1
  %68 = tail call i32 @llvm.bswap.i32(i32 %67) #6
  %69 = icmp ugt i32 %68, 1
  br i1 %69, label %86, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = shl i32 %67, 24
  %78 = zext i8 %72 to i32
  %79 = shl nuw nsw i32 %78, 16
  %80 = or i32 %79, %77
  %81 = zext i8 %74 to i32
  %82 = shl nuw nsw i32 %81, 8
  %83 = or i32 %80, %82
  %84 = zext i8 %76 to i32
  %85 = or i32 %83, %84
  br label %135

86:                                               ; preds = %64
  %87 = shl i32 %67, 24
  %88 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 16
  %92 = or i32 %91, %87
  %93 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %92, %96
  %98 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = or i32 %97, %100
  %102 = zext i32 %101 to i64
  %103 = zext i32 %68 to i64
  br label %104

104:                                              ; preds = %129, %86
  %105 = phi i64 [ 1, %86 ], [ %130, %129 ]
  %106 = phi i32 [ 1, %86 ], [ %131, %129 ]
  %107 = icmp ult i64 %105, %102
  %108 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 1, i64 %105
  %109 = select i1 %107, %"struct.CFF::FDSelect3_4_Range.9"* %108, %"struct.CFF::FDSelect3_4_Range.9"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range.9"*), !prof !3
  %110 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.9", %"struct.CFF::FDSelect3_4_Range.9"* %109, i64 0, i32 0, i32 0, i32 0, i64 0
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw i32 %112, 24
  %114 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.9", %"struct.CFF::FDSelect3_4_Range.9"* %109, i64 0, i32 0, i32 0, i32 0, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 16
  %118 = or i32 %117, %113
  %119 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.9", %"struct.CFF::FDSelect3_4_Range.9"* %109, i64 0, i32 0, i32 0, i32 0, i64 2
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 8
  %123 = or i32 %118, %122
  %124 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.9", %"struct.CFF::FDSelect3_4_Range.9"* %109, i64 0, i32 0, i32 0, i32 0, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = or i32 %123, %126
  %128 = icmp ugt i32 %127, %2
  br i1 %128, label %133, label %129

129:                                              ; preds = %104
  %130 = add nuw nsw i64 %105, 1
  %131 = add nuw i32 %106, 1
  %132 = icmp eq i64 %130, %103
  br i1 %132, label %135, label %104

133:                                              ; preds = %104
  %134 = trunc i64 %105 to i32
  br label %135

135:                                              ; preds = %129, %70, %133
  %136 = phi i32 [ %85, %70 ], [ %101, %133 ], [ %101, %129 ]
  %137 = phi i32 [ 1, %70 ], [ %134, %133 ], [ %131, %129 ]
  %138 = add i32 %137, -1
  %139 = icmp ugt i32 %136, %138
  %140 = zext i32 %138 to i64
  %141 = getelementptr inbounds %"struct.CFF::CFF2FDSelect", %"struct.CFF::CFF2FDSelect"* %17, i64 0, i32 1, i32 0, i32 0, i32 1, i64 %140
  %142 = select i1 %139, %"struct.CFF::FDSelect3_4_Range.9"* %141, %"struct.CFF::FDSelect3_4_Range.9"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::FDSelect3_4_Range.9"*), !prof !3
  %143 = getelementptr inbounds %"struct.CFF::FDSelect3_4_Range.9", %"struct.CFF::FDSelect3_4_Range.9"* %142, i64 0, i32 1
  %144 = bitcast %"struct.OT::IntType.3"* %143 to i16*
  %145 = load i16, i16* %144, align 1
  %146 = tail call i16 @llvm.bswap.i16(i16 %145) #6
  %147 = zext i16 %146 to i32
  br label %148

148:                                              ; preds = %15, %19, %22, %53, %135
  %149 = phi i32 [ %147, %135 ], [ %63, %53 ], [ %28, %22 ], [ 0, %15 ], [ 0, %19 ]
  %150 = bitcast %"struct.CFF::cff2_cs_interpreter_t"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %150) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %150, i8* align 8 bitcast ({ { { <{ { <{ %"struct.CFF::byte_str_ref_t", { { i8, [3 x i8], i32, %struct.hb_vector_t.155 } }, i8 }>, [7 x i8], %"struct.CFF::call_context_t", i8, i8, i8, [1 x i8], i32, i32, i32, { { i8, [3 x i8], i32, %struct.hb_vector_t.158 } }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, { i32, [4 x i8], %"struct.CFF::Subrs"* }, %"struct.CFF::point_t" }, i32*, i32, [4 x i8], %"struct.CFF::CFF2VariationStore"*, i32, i32, %struct.hb_vector_t.159, i8, i8, i8, [5 x i8] }> } } }* @__const._ZNK2OT4cff213accelerator_t11get_extentsEP9hb_font_tjP18hb_glyph_extents_t.interp to i8*), i64 232, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 21, i1 false) #6
  %151 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %152 = bitcast %struct.hb_vector_t.155* %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 16, i1 false) #6
  %153 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %154 = bitcast %"struct.CFF::call_context_t"* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 21, i1 false) #6
  %155 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9, i32 0, i32 2
  %156 = bitcast %struct.hb_vector_t.158* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 16, i1 false) #6
  %157 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 7
  %158 = bitcast %struct.hb_vector_t.159* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 16, i1 false) #6
  %159 = bitcast %"struct.CFF::byte_str_t"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #6
  %160 = getelementptr inbounds %"struct.CFF::byte_str_t", %"struct.CFF::byte_str_t"* %6, i64 0, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.CFF::byte_str_t", %"struct.CFF::byte_str_t"* %6, i64 0, i32 0, i32 1
  %162 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 5
  %163 = bitcast %"struct.CFF::byte_str_t"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 16, i1 false)
  %164 = load %"struct.CFF::CFFIndex"*, %"struct.CFF::CFFIndex"** %162, align 8
  %165 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %164, i64 0, i32 0, i32 0, i32 0, i64 0
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = shl nuw i32 %167, 24
  %169 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %164, i64 0, i32 0, i32 0, i32 0, i64 1
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 16
  %173 = or i32 %172, %168
  %174 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %164, i64 0, i32 0, i32 0, i32 0, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = shl nuw nsw i32 %176, 8
  %178 = or i32 %173, %177
  %179 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %164, i64 0, i32 0, i32 0, i32 0, i64 3
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = or i32 %178, %181
  %183 = icmp ugt i32 %182, %2
  br i1 %183, label %187, label %184, !prof !3

184:                                              ; preds = %148
  %185 = load i8*, i8** bitcast ([48 x i64]* @_hb_NullPool to i8**), align 16
  %186 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 1), align 8
  br label %270

187:                                              ; preds = %148
  %188 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %164, i64 0, i32 0, i32 0, i32 0, i64 5
  %189 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %164, i64 0, i32 1, i32 0, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i64
  %192 = zext i8 %166 to i64
  %193 = shl nuw nsw i64 %192, 24
  %194 = zext i8 %170 to i64
  %195 = shl nuw nsw i64 %194, 16
  %196 = or i64 %195, %193
  %197 = zext i8 %175 to i64
  %198 = shl nuw nsw i64 %197, 8
  %199 = or i64 %196, %198
  %200 = zext i8 %180 to i64
  %201 = or i64 %199, %200
  %202 = add nuw nsw i64 %201, 1
  %203 = mul nuw nsw i64 %202, %191
  %204 = and i64 %203, 4294967295
  %205 = getelementptr inbounds i8, i8* %188, i64 %204
  %206 = zext i8 %190 to i32
  %207 = icmp eq i8 %190, 0
  br i1 %207, label %264, label %208

208:                                              ; preds = %187
  %209 = mul i32 %206, %2
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %164, i64 0, i32 2, i64 %210
  %212 = add nsw i32 %206, -1
  %213 = and i32 %206, 3
  %214 = icmp ult i32 %212, 3
  br i1 %214, label %244, label %215

215:                                              ; preds = %208
  %216 = sub nsw i32 %206, %213
  br label %217

217:                                              ; preds = %217, %215
  %218 = phi i32 [ 0, %215 ], [ %241, %217 ]
  %219 = phi %"struct.OT::IntType.1"* [ %211, %215 ], [ %237, %217 ]
  %220 = phi i32 [ %216, %215 ], [ %242, %217 ]
  %221 = shl i32 %218, 8
  %222 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %219, i64 0, i32 0, i32 0
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = or i32 %221, %224
  %226 = shl i32 %225, 8
  %227 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %219, i64 1, i32 0, i32 0
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = or i32 %226, %229
  %231 = shl i32 %230, 8
  %232 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %219, i64 2, i32 0, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = or i32 %231, %234
  %236 = shl i32 %235, 8
  %237 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %219, i64 4
  %238 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %219, i64 3, i32 0, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = or i32 %236, %240
  %242 = add i32 %220, -4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %217

244:                                              ; preds = %217, %208
  %245 = phi i32 [ undef, %208 ], [ %241, %217 ]
  %246 = phi i32 [ 0, %208 ], [ %241, %217 ]
  %247 = phi %"struct.OT::IntType.1"* [ %211, %208 ], [ %237, %217 ]
  %248 = icmp eq i32 %213, 0
  br i1 %248, label %261, label %249

249:                                              ; preds = %244, %249
  %250 = phi i32 [ %258, %249 ], [ %246, %244 ]
  %251 = phi %"struct.OT::IntType.1"* [ %254, %249 ], [ %247, %244 ]
  %252 = phi i32 [ %259, %249 ], [ %213, %244 ]
  %253 = shl i32 %250, 8
  %254 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %251, i64 1
  %255 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %251, i64 0, i32 0, i32 0
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = or i32 %253, %257
  %259 = add i32 %252, -1
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %249, !llvm.loop !4

261:                                              ; preds = %249, %244
  %262 = phi i32 [ %245, %244 ], [ %258, %249 ]
  %263 = zext i32 %262 to i64
  br label %264

264:                                              ; preds = %261, %187
  %265 = phi i64 [ 0, %187 ], [ %263, %261 ]
  %266 = getelementptr inbounds i8, i8* %205, i64 %265
  %267 = getelementptr inbounds i8, i8* %266, i64 -1
  %268 = tail call i32 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE9length_atEj(%"struct.CFF::CFFIndex"* %164, i32 %2) #6
  %269 = zext i32 %268 to i64
  br label %270

270:                                              ; preds = %184, %264
  %271 = phi i64 [ %269, %264 ], [ %186, %184 ]
  %272 = phi i8* [ %267, %264 ], [ %185, %184 ]
  store i8* %272, i8** %160, align 8
  %273 = bitcast i32* %161 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 11
  %275 = load i32*, i32** %274, align 8
  %276 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 10
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %279 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 3
  %280 = load %"struct.CFF::Subrs"*, %"struct.CFF::Subrs"** %279, align 8
  %281 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 11, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = icmp ugt i32 %282, %149
  br i1 %283, label %284, label %289, !prof !3

284:                                              ; preds = %270
  %285 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 11, i32 2
  %286 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %285, align 8
  %287 = zext i32 %149 to i64
  %288 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %286, i64 %287
  br label %289

289:                                              ; preds = %284, %270
  %290 = phi %"struct.CFF::cff2_private_dict_values_base_t"* [ %288, %284 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::cff2_private_dict_values_base_t"*), %270 ]
  %291 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %290, i64 0, i32 3
  %292 = load %"struct.CFF::Subrs"*, %"struct.CFF::Subrs"** %291, align 8
  call void @_ZN3CFF15cs_interp_env_tINS_11blend_arg_tENS_5SubrsIN2OT7IntTypeIjLj4EEEEEE4initERKNS_10byte_str_tEPKS6_SC_(%"struct.CFF::cs_interp_env_t"* nonnull %278, %"struct.CFF::byte_str_t"* nonnull dereferenceable(16) %6, %"struct.CFF::Subrs"* %280, %"struct.CFF::Subrs"* %292) #6
  %293 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32* %275, i32** %293, align 8
  %294 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %277, i32* %294, align 8
  %295 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 4
  %296 = bitcast %"struct.CFF::CFF2VariationStore"** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 4
  %299 = bitcast %"struct.CFF::CFF2VariationStore"** %298 to i64*
  store i64 %297, i64* %299, align 8
  %300 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 10
  store i8 0, i8* %300, align 2
  %301 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 9
  store i8 0, i8* %301, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 16, i1 false) #6
  %302 = icmp eq i32 %277, 0
  %303 = icmp eq i32* %275, null
  %304 = or i1 %303, %302
  br i1 %304, label %310, label %305

305:                                              ; preds = %289
  %306 = inttoptr i64 %297 to i16*
  %307 = load i16, i16* %306, align 1
  %308 = icmp ne i16 %307, 0
  %309 = zext i1 %308 to i8
  br label %310

310:                                              ; preds = %305, %289
  %311 = phi i8 [ 0, %289 ], [ %309, %305 ]
  %312 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 8
  store i8 %311, i8* %312, align 8
  %313 = load i32, i32* %281, align 4
  %314 = icmp ugt i32 %313, %149
  br i1 %314, label %315, label %320, !prof !3

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"struct.OT::cff2::accelerator_t", %"struct.OT::cff2::accelerator_t"* %0, i64 0, i32 0, i32 11, i32 2
  %317 = load %"struct.CFF::cff2_private_dict_values_base_t"*, %"struct.CFF::cff2_private_dict_values_base_t"** %316, align 8
  %318 = zext i32 %149 to i64
  %319 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %317, i64 %318
  br label %320

320:                                              ; preds = %310, %315
  %321 = phi %"struct.CFF::cff2_private_dict_values_base_t"* [ %319, %315 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.CFF::cff2_private_dict_values_base_t"*), %310 ]
  %322 = getelementptr inbounds %"struct.CFF::cff2_private_dict_values_base_t", %"struct.CFF::cff2_private_dict_values_base_t"* %321, i64 0, i32 4
  %323 = load i32, i32* %322, align 8
  %324 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 6
  store i32 %323, i32* %324, align 4
  %325 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %325) #6
  %326 = bitcast %struct.cff2_extents_param_t* %7 to i64*
  store i64 -6148914691236517206, i64* %326, align 8
  store i8 0, i8* %325, align 8
  %327 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %7, i64 0, i32 1, i32 0
  %328 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %7, i64 0, i32 2, i32 0
  %329 = bitcast double* %327 to <2 x double>*
  store <2 x double> <double 0x41DFFFFFFFC00000, double 0x41DFFFFFFFC00000>, <2 x double>* %329, align 8
  %330 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %7, i64 0, i32 3, i32 0
  %331 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %7, i64 0, i32 4, i32 0
  %332 = bitcast double* %330 to <2 x double>*
  store <2 x double> <double 0xC1E0000000000000, double 0xC1E0000000000000>, <2 x double>* %332, align 8
  %333 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0
  %334 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  store i8 0, i8* %334, align 8
  %335 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9, i32 0, i32 2, i32 0
  %336 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %338 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %339 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %340 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %342 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %343 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8, i8* bitcast ([48 x i64]* @_hb_NullPool to i8*), align 16
  %345 = zext i8 %344 to i32
  %346 = or i32 %345, 256
  %347 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 9, i32 0, i32 1
  %348 = load i8, i8* %337, align 4, !range !6
  br label %349

349:                                              ; preds = %416, %320
  %350 = phi i8 [ %407, %416 ], [ %348, %320 ]
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %397

352:                                              ; preds = %349
  %353 = load i32, i32* %341, align 8
  %354 = add i32 %353, 1
  %355 = load i32, i32* %342, align 8
  %356 = icmp ugt i32 %354, %355
  br i1 %356, label %397, label %357

357:                                              ; preds = %352
  %358 = icmp ult i32 %353, %355
  br i1 %358, label %360, label %359, !prof !3

359:                                              ; preds = %357
  store i8 1, i8* %337, align 4
  br label %364

360:                                              ; preds = %357
  %361 = load i8*, i8** %343, align 8
  %362 = zext i32 %353 to i64
  %363 = getelementptr inbounds i8, i8* %361, i64 %362
  br label %364

364:                                              ; preds = %360, %359
  %365 = phi i1 [ false, %359 ], [ true, %360 ]
  %366 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %359 ], [ %363, %360 ]
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i32
  %369 = icmp eq i8 %367, 12
  br i1 %369, label %370, label %386

370:                                              ; preds = %364
  br i1 %365, label %371, label %401, !prof !7

371:                                              ; preds = %370
  %372 = icmp ult i32 %354, %355
  br i1 %372, label %374, label %373, !prof !3

373:                                              ; preds = %371
  store i8 1, i8* %337, align 4
  br label %384

374:                                              ; preds = %371
  %375 = load i8*, i8** %343, align 8
  %376 = zext i32 %354 to i64
  %377 = getelementptr inbounds i8, i8* %375, i64 %376
  %378 = load i8, i8* %377, align 1
  %379 = zext i8 %378 to i32
  %380 = or i32 %379, 256
  %381 = icmp ugt i32 %353, %355
  br i1 %381, label %384, label %382, !prof !8

382:                                              ; preds = %374
  store i32 %354, i32* %341, align 8
  %383 = add i32 %353, 2
  br label %387

384:                                              ; preds = %374, %373
  %385 = phi i32 [ %380, %374 ], [ %346, %373 ]
  store i32 %355, i32* %341, align 8
  store i8 1, i8* %337, align 4
  br label %395

386:                                              ; preds = %364
  br i1 %365, label %387, label %395, !prof !3

387:                                              ; preds = %386, %382
  %388 = phi i32 [ %354, %386 ], [ %383, %382 ]
  %389 = phi i32 [ %368, %386 ], [ %380, %382 ]
  %390 = phi i32 [ %353, %386 ], [ %354, %382 ]
  %391 = icmp ule i32 %390, %355
  %392 = icmp ule i32 %388, %355
  %393 = and i1 %392, %391
  br i1 %393, label %394, label %395, !prof !9

394:                                              ; preds = %387
  store i32 %388, i32* %341, align 8
  br label %401

395:                                              ; preds = %387, %386, %384
  %396 = phi i32 [ %389, %387 ], [ %385, %384 ], [ %368, %386 ]
  store i32 %355, i32* %341, align 8
  store i8 1, i8* %337, align 4
  br label %401

397:                                              ; preds = %352, %349
  %398 = load i32, i32* %347, align 4
  %399 = icmp eq i32 %398, 0
  %400 = select i1 %399, i32 14, i32 11
  br label %401

401:                                              ; preds = %370, %394, %395, %397
  %402 = phi i32 [ %400, %397 ], [ %389, %394 ], [ %396, %395 ], [ 65535, %370 ]
  call void @_ZN3CFF15cff2_cs_opset_tI23cff2_cs_opset_extents_t20cff2_extents_param_t25cff2_path_procs_extents_tE10process_opEjRNS_20cff2_cs_interp_env_tERS2_(i32 %402, %"struct.CFF::cff2_cs_interp_env_t"* nonnull dereferenceable(232) %333, %struct.cff2_extents_param_t* nonnull dereferenceable(40) %7) #6
  %403 = load i8, i8* %340, align 8, !range !6
  %404 = load i32, i32* %335, align 8
  %405 = load i8, i8* %336, align 8
  %406 = or i8 %405, %403
  %407 = load i8, i8* %337, align 4
  %408 = or i8 %406, %407
  %409 = load i8, i8* %338, align 8
  %410 = or i8 %408, %409
  %411 = icmp ne i8 %410, 0
  %412 = load i32, i32* %339, align 8
  %413 = or i32 %412, %404
  %414 = icmp slt i32 %413, 0
  %415 = or i1 %411, %414
  br i1 %415, label %521, label %416, !prof !10

416:                                              ; preds = %401
  %417 = load i8, i8* %334, align 8, !range !6
  %418 = icmp eq i8 %417, 0
  br i1 %418, label %349, label %419

419:                                              ; preds = %416
  %420 = load double, double* %330, align 8
  %421 = load double, double* %327, align 8
  %422 = fcmp ule double %420, %421
  br i1 %422, label %423, label %426

423:                                              ; preds = %419
  %424 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 2
  store i32 0, i32* %424, align 4
  %425 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 0
  store i32 0, i32* %425, align 4
  br label %470

426:                                              ; preds = %419
  %427 = fptrunc double %421 to float
  %428 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 3
  %429 = load i32, i32* %428, align 8
  %430 = sitofp i32 %429 to float
  %431 = fmul float %427, %430
  %432 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 2
  %433 = load %struct.hb_face_t*, %struct.hb_face_t** %432, align 8
  %434 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %433, i64 0, i32 5, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %440, !prof !2

437:                                              ; preds = %426
  %438 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %433) #6
  %439 = load double, double* %330, align 8
  br label %440

440:                                              ; preds = %426, %437
  %441 = phi double [ %439, %437 ], [ %420, %426 ]
  %442 = phi i32 [ %438, %437 ], [ %435, %426 ]
  %443 = uitofp i32 %442 to float
  %444 = fdiv float %431, %443
  %445 = fadd float %444, 5.000000e-01
  %446 = call float @llvm.floor.f32(float %445) #6
  %447 = fptosi float %446 to i32
  %448 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 0
  store i32 %447, i32* %448, align 4
  %449 = fptrunc double %441 to float
  %450 = load i32, i32* %428, align 8
  %451 = sitofp i32 %450 to float
  %452 = fmul float %449, %451
  %453 = load %struct.hb_face_t*, %struct.hb_face_t** %432, align 8
  %454 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %453, i64 0, i32 5, i32 0
  %455 = load atomic i32, i32* %454 monotonic, align 4
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %460, !prof !2

457:                                              ; preds = %440
  %458 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %453) #6
  %459 = load i32, i32* %448, align 4
  br label %460

460:                                              ; preds = %440, %457
  %461 = phi i32 [ %459, %457 ], [ %447, %440 ]
  %462 = phi i32 [ %458, %457 ], [ %455, %440 ]
  %463 = uitofp i32 %462 to float
  %464 = fdiv float %452, %463
  %465 = fadd float %464, 5.000000e-01
  %466 = call float @llvm.floor.f32(float %465) #6
  %467 = fptosi float %466 to i32
  %468 = sub nsw i32 %467, %461
  %469 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 2
  store i32 %468, i32* %469, align 4
  br label %470

470:                                              ; preds = %460, %423
  %471 = load double, double* %331, align 8
  %472 = load double, double* %328, align 8
  %473 = fcmp ule double %471, %472
  br i1 %473, label %474, label %477

474:                                              ; preds = %470
  %475 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 3
  store i32 0, i32* %475, align 4
  %476 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 1
  store i32 0, i32* %476, align 4
  br label %521

477:                                              ; preds = %470
  %478 = fptrunc double %471 to float
  %479 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 4
  %480 = load i32, i32* %479, align 4
  %481 = sitofp i32 %480 to float
  %482 = fmul float %478, %481
  %483 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %1, i64 0, i32 2
  %484 = load %struct.hb_face_t*, %struct.hb_face_t** %483, align 8
  %485 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %484, i64 0, i32 5, i32 0
  %486 = load atomic i32, i32* %485 monotonic, align 4
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %491, !prof !2

488:                                              ; preds = %477
  %489 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %484) #6
  %490 = load double, double* %328, align 8
  br label %491

491:                                              ; preds = %477, %488
  %492 = phi double [ %490, %488 ], [ %472, %477 ]
  %493 = phi i32 [ %489, %488 ], [ %486, %477 ]
  %494 = uitofp i32 %493 to float
  %495 = fdiv float %482, %494
  %496 = fadd float %495, 5.000000e-01
  %497 = call float @llvm.floor.f32(float %496) #6
  %498 = fptosi float %497 to i32
  %499 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 1
  store i32 %498, i32* %499, align 4
  %500 = fptrunc double %492 to float
  %501 = load i32, i32* %479, align 4
  %502 = sitofp i32 %501 to float
  %503 = fmul float %500, %502
  %504 = load %struct.hb_face_t*, %struct.hb_face_t** %483, align 8
  %505 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %504, i64 0, i32 5, i32 0
  %506 = load atomic i32, i32* %505 monotonic, align 4
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %511, !prof !2

508:                                              ; preds = %491
  %509 = call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %504) #6
  %510 = load i32, i32* %499, align 4
  br label %511

511:                                              ; preds = %491, %508
  %512 = phi i32 [ %510, %508 ], [ %498, %491 ]
  %513 = phi i32 [ %509, %508 ], [ %506, %491 ]
  %514 = uitofp i32 %513 to float
  %515 = fdiv float %503, %514
  %516 = fadd float %515, 5.000000e-01
  %517 = call float @llvm.floor.f32(float %516) #6
  %518 = fptosi float %517 to i32
  %519 = sub nsw i32 %518, %512
  %520 = getelementptr inbounds %struct.hb_glyph_extents_t, %struct.hb_glyph_extents_t* %3, i64 0, i32 3
  store i32 %519, i32* %520, align 4
  br label %521

521:                                              ; preds = %401, %474, %511
  %522 = phi i1 [ true, %511 ], [ true, %474 ], [ false, %401 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %325) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #6
  %523 = getelementptr inbounds %"struct.CFF::cff2_cs_interpreter_t", %"struct.CFF::cff2_cs_interpreter_t"* %5, i64 0, i32 0, i32 0
  call void @_ZN3CFF13interpreter_tINS_20cff2_cs_interp_env_tEED2Ev(%"struct.CFF::interpreter_t"* nonnull %523) #6
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %150) #6
  br label %524

524:                                              ; preds = %11, %4, %521
  %525 = phi i1 [ %522, %521 ], [ false, %11 ], [ false, %4 ]
  ret i1 %525
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF13interpreter_tINS_20cff2_cs_interp_env_tEED2Ev(%"struct.CFF::interpreter_t"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.CFF::interpreter_t", %"struct.CFF::interpreter_t"* %0, i64 0, i32 0, i32 7
  %3 = getelementptr inbounds %"struct.CFF::interpreter_t", %"struct.CFF::interpreter_t"* %0, i64 0, i32 0, i32 7, i32 2
  %4 = bitcast float** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @free(i8* %5) #6
  %6 = bitcast %struct.hb_vector_t.159* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #6
  %7 = getelementptr inbounds %"struct.CFF::interpreter_t", %"struct.CFF::interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %8 = getelementptr inbounds %"struct.CFF::interpreter_t", %"struct.CFF::interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"struct.CFF::interpreter_t", %"struct.CFF::interpreter_t"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  br i1 %10, label %24, label %12

12:                                               ; preds = %1
  %13 = zext i32 %9 to i64
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %22, %14 ]
  %16 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %11, align 8
  %17 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %16, i64 %15, i32 3
  %18 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %16, i64 %15, i32 3, i32 2
  %19 = bitcast %"struct.CFF::number_t"** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #6
  %21 = bitcast %struct.hb_vector_t.156* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = add nuw nsw i64 %15, 1
  %23 = icmp eq i64 %22, %13
  br i1 %23, label %24, label %14

24:                                               ; preds = %14, %1
  %25 = bitcast %"struct.CFF::blend_arg_t"** %11 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @free(i8* %26) #6
  %27 = bitcast %struct.hb_vector_t.155* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #6
  %28 = getelementptr inbounds %"struct.CFF::interpreter_t", %"struct.CFF::interpreter_t"* %0, i64 0, i32 0, i32 0, i32 9, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.CFF::interpreter_t", %"struct.CFF::interpreter_t"* %0, i64 0, i32 0, i32 0, i32 9, i32 0, i32 2, i32 2
  %30 = bitcast %"struct.CFF::call_context_t"** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void @free(i8* %31) #6
  %32 = bitcast %struct.hb_vector_t.158* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #6
  %33 = load i8*, i8** %4, align 8
  tail call void @free(i8* %33) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #6
  %34 = load i8*, i8** %30, align 8
  tail call void @free(i8* %34) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #6
  %35 = load i8*, i8** %25, align 8
  tail call void @free(i8* %35) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #6
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #2

declare hidden i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE9length_atEj(%"struct.CFF::CFFIndex"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = add i32 %1, 1
  %4 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp eq i8 %5, 0
  br i1 %7, label %352, label %8

8:                                                ; preds = %2
  %9 = mul i32 %3, %6
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %10
  %12 = add nsw i32 %6, -1
  %13 = and i32 %6, 3
  %14 = icmp ult i32 %12, 3
  br i1 %14, label %44, label %15

15:                                               ; preds = %8
  %16 = sub nsw i32 %6, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32 [ 0, %15 ], [ %41, %17 ]
  %19 = phi %"struct.OT::IntType.1"* [ %11, %15 ], [ %37, %17 ]
  %20 = phi i32 [ %16, %15 ], [ %42, %17 ]
  %21 = shl i32 %18, 8
  %22 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %19, i64 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = or i32 %21, %24
  %26 = shl i32 %25, 8
  %27 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %19, i64 1, i32 0, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = or i32 %26, %29
  %31 = shl i32 %30, 8
  %32 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %19, i64 2, i32 0, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = or i32 %31, %34
  %36 = shl i32 %35, 8
  %37 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %19, i64 4
  %38 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %19, i64 3, i32 0, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %36, %40
  %42 = add i32 %20, -4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %17

44:                                               ; preds = %17, %8
  %45 = phi i32 [ undef, %8 ], [ %41, %17 ]
  %46 = phi i32 [ 0, %8 ], [ %41, %17 ]
  %47 = phi %"struct.OT::IntType.1"* [ %11, %8 ], [ %37, %17 ]
  %48 = icmp eq i32 %13, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %44, %49
  %50 = phi i32 [ %58, %49 ], [ %46, %44 ]
  %51 = phi %"struct.OT::IntType.1"* [ %54, %49 ], [ %47, %44 ]
  %52 = phi i32 [ %59, %49 ], [ %13, %44 ]
  %53 = shl i32 %50, 8
  %54 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %51, i64 1
  %55 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %51, i64 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %53, %57
  %59 = add i32 %52, -1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %49, !llvm.loop !11

61:                                               ; preds = %49, %44
  %62 = phi i32 [ %45, %44 ], [ %58, %49 ]
  %63 = mul i32 %6, %1
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %64
  %66 = add nsw i32 %6, -1
  %67 = and i32 %6, 3
  %68 = icmp ult i32 %66, 3
  br i1 %68, label %98, label %69

69:                                               ; preds = %61
  %70 = sub nsw i32 %6, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i32 [ 0, %69 ], [ %95, %71 ]
  %73 = phi %"struct.OT::IntType.1"* [ %65, %69 ], [ %91, %71 ]
  %74 = phi i32 [ %70, %69 ], [ %96, %71 ]
  %75 = shl i32 %72, 8
  %76 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %73, i64 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = or i32 %75, %78
  %80 = shl i32 %79, 8
  %81 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %73, i64 1, i32 0, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = or i32 %80, %83
  %85 = shl i32 %84, 8
  %86 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %73, i64 2, i32 0, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %85, %88
  %90 = shl i32 %89, 8
  %91 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %73, i64 4
  %92 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %73, i64 3, i32 0, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = or i32 %90, %94
  %96 = add i32 %74, -4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %71

98:                                               ; preds = %71, %61
  %99 = phi i32 [ undef, %61 ], [ %95, %71 ]
  %100 = phi i32 [ 0, %61 ], [ %95, %71 ]
  %101 = phi %"struct.OT::IntType.1"* [ %65, %61 ], [ %91, %71 ]
  %102 = icmp eq i32 %67, 0
  br i1 %102, label %115, label %103

103:                                              ; preds = %98, %103
  %104 = phi i32 [ %112, %103 ], [ %100, %98 ]
  %105 = phi %"struct.OT::IntType.1"* [ %108, %103 ], [ %101, %98 ]
  %106 = phi i32 [ %113, %103 ], [ %67, %98 ]
  %107 = shl i32 %104, 8
  %108 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %105, i64 1
  %109 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %105, i64 0, i32 0, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = or i32 %107, %111
  %113 = add i32 %106, -1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %103, !llvm.loop !12

115:                                              ; preds = %103, %98
  %116 = phi i32 [ %99, %98 ], [ %112, %103 ]
  %117 = icmp ult i32 %62, %116
  br i1 %117, label %356, label %118, !prof !2

118:                                              ; preds = %115
  %119 = add nsw i32 %6, -1
  %120 = and i32 %6, 3
  %121 = icmp ult i32 %119, 3
  br i1 %121, label %151, label %122

122:                                              ; preds = %118
  %123 = sub nsw i32 %6, %120
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i32 [ 0, %122 ], [ %148, %124 ]
  %126 = phi %"struct.OT::IntType.1"* [ %11, %122 ], [ %144, %124 ]
  %127 = phi i32 [ %123, %122 ], [ %149, %124 ]
  %128 = shl i32 %125, 8
  %129 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %126, i64 0, i32 0, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = or i32 %128, %131
  %133 = shl i32 %132, 8
  %134 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %126, i64 1, i32 0, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = or i32 %133, %136
  %138 = shl i32 %137, 8
  %139 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %126, i64 2, i32 0, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = or i32 %138, %141
  %143 = shl i32 %142, 8
  %144 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %126, i64 4
  %145 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %126, i64 3, i32 0, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = or i32 %143, %147
  %149 = add i32 %127, -4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %124

151:                                              ; preds = %124, %118
  %152 = phi i32 [ undef, %118 ], [ %148, %124 ]
  %153 = phi i32 [ 0, %118 ], [ %148, %124 ]
  %154 = phi %"struct.OT::IntType.1"* [ %11, %118 ], [ %144, %124 ]
  %155 = icmp eq i32 %120, 0
  br i1 %155, label %168, label %156

156:                                              ; preds = %151, %156
  %157 = phi i32 [ %165, %156 ], [ %153, %151 ]
  %158 = phi %"struct.OT::IntType.1"* [ %161, %156 ], [ %154, %151 ]
  %159 = phi i32 [ %166, %156 ], [ %120, %151 ]
  %160 = shl i32 %157, 8
  %161 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %158, i64 1
  %162 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %158, i64 0, i32 0, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = or i32 %160, %164
  %166 = add i32 %159, -1
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %156, !llvm.loop !13

168:                                              ; preds = %156, %151
  %169 = phi i32 [ %152, %151 ], [ %165, %156 ]
  br i1 %7, label %241, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = shl nuw nsw i32 %173, 16
  %175 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = shl nuw i32 %177, 24
  %179 = or i32 %178, %174
  %180 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = shl nuw nsw i32 %182, 8
  %184 = or i32 %179, %183
  %185 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = or i32 %184, %187
  %189 = mul i32 %188, %6
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %190
  %192 = add nsw i32 %6, -1
  %193 = and i32 %6, 3
  %194 = icmp ult i32 %192, 3
  br i1 %194, label %224, label %195

195:                                              ; preds = %170
  %196 = sub nsw i32 %6, %193
  br label %197

197:                                              ; preds = %197, %195
  %198 = phi i32 [ 0, %195 ], [ %221, %197 ]
  %199 = phi %"struct.OT::IntType.1"* [ %191, %195 ], [ %217, %197 ]
  %200 = phi i32 [ %196, %195 ], [ %222, %197 ]
  %201 = shl i32 %198, 8
  %202 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %199, i64 0, i32 0, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = or i32 %201, %204
  %206 = shl i32 %205, 8
  %207 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %199, i64 1, i32 0, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = or i32 %206, %209
  %211 = shl i32 %210, 8
  %212 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %199, i64 2, i32 0, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = or i32 %211, %214
  %216 = shl i32 %215, 8
  %217 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %199, i64 4
  %218 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %199, i64 3, i32 0, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = or i32 %216, %220
  %222 = add i32 %200, -4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %197

224:                                              ; preds = %197, %170
  %225 = phi i32 [ undef, %170 ], [ %221, %197 ]
  %226 = phi i32 [ 0, %170 ], [ %221, %197 ]
  %227 = phi %"struct.OT::IntType.1"* [ %191, %170 ], [ %217, %197 ]
  %228 = icmp eq i32 %193, 0
  br i1 %228, label %241, label %229

229:                                              ; preds = %224, %229
  %230 = phi i32 [ %238, %229 ], [ %226, %224 ]
  %231 = phi %"struct.OT::IntType.1"* [ %234, %229 ], [ %227, %224 ]
  %232 = phi i32 [ %239, %229 ], [ %193, %224 ]
  %233 = shl i32 %230, 8
  %234 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %231, i64 1
  %235 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %231, i64 0, i32 0, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = or i32 %233, %237
  %239 = add i32 %232, -1
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %229, !llvm.loop !14

241:                                              ; preds = %224, %229, %168
  %242 = phi i32 [ 0, %168 ], [ %225, %224 ], [ %238, %229 ]
  %243 = icmp ugt i32 %169, %242
  br i1 %243, label %356, label %244, !prof !2

244:                                              ; preds = %241
  br i1 %7, label %352, label %245

245:                                              ; preds = %244
  %246 = mul i32 %3, %6
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %247
  %249 = add nsw i32 %6, -1
  %250 = and i32 %6, 3
  %251 = icmp ult i32 %249, 3
  br i1 %251, label %281, label %252

252:                                              ; preds = %245
  %253 = sub nsw i32 %6, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i32 [ 0, %252 ], [ %278, %254 ]
  %256 = phi %"struct.OT::IntType.1"* [ %248, %252 ], [ %274, %254 ]
  %257 = phi i32 [ %253, %252 ], [ %279, %254 ]
  %258 = shl i32 %255, 8
  %259 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %256, i64 0, i32 0, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = or i32 %258, %261
  %263 = shl i32 %262, 8
  %264 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %256, i64 1, i32 0, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = or i32 %263, %266
  %268 = shl i32 %267, 8
  %269 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %256, i64 2, i32 0, i32 0
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = or i32 %268, %271
  %273 = shl i32 %272, 8
  %274 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %256, i64 4
  %275 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %256, i64 3, i32 0, i32 0
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = or i32 %273, %277
  %279 = add i32 %257, -4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %254

281:                                              ; preds = %254, %245
  %282 = phi i32 [ undef, %245 ], [ %278, %254 ]
  %283 = phi i32 [ 0, %245 ], [ %278, %254 ]
  %284 = phi %"struct.OT::IntType.1"* [ %248, %245 ], [ %274, %254 ]
  %285 = icmp eq i32 %250, 0
  br i1 %285, label %298, label %286

286:                                              ; preds = %281, %286
  %287 = phi i32 [ %295, %286 ], [ %283, %281 ]
  %288 = phi %"struct.OT::IntType.1"* [ %291, %286 ], [ %284, %281 ]
  %289 = phi i32 [ %296, %286 ], [ %250, %281 ]
  %290 = shl i32 %287, 8
  %291 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %288, i64 1
  %292 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %288, i64 0, i32 0, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i32
  %295 = or i32 %290, %294
  %296 = add i32 %289, -1
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %286, !llvm.loop !15

298:                                              ; preds = %286, %281
  %299 = phi i32 [ %282, %281 ], [ %295, %286 ]
  %300 = mul i32 %6, %1
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds %"struct.CFF::CFFIndex", %"struct.CFF::CFFIndex"* %0, i64 0, i32 2, i64 %301
  %303 = add nsw i32 %6, -1
  %304 = and i32 %6, 3
  %305 = icmp ult i32 %303, 3
  br i1 %305, label %335, label %306

306:                                              ; preds = %298
  %307 = sub nsw i32 %6, %304
  br label %308

308:                                              ; preds = %308, %306
  %309 = phi i32 [ 0, %306 ], [ %332, %308 ]
  %310 = phi %"struct.OT::IntType.1"* [ %302, %306 ], [ %328, %308 ]
  %311 = phi i32 [ %307, %306 ], [ %333, %308 ]
  %312 = shl i32 %309, 8
  %313 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %310, i64 0, i32 0, i32 0
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = or i32 %312, %315
  %317 = shl i32 %316, 8
  %318 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %310, i64 1, i32 0, i32 0
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = or i32 %317, %320
  %322 = shl i32 %321, 8
  %323 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %310, i64 2, i32 0, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = or i32 %322, %325
  %327 = shl i32 %326, 8
  %328 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %310, i64 4
  %329 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %310, i64 3, i32 0, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = or i32 %327, %331
  %333 = add i32 %311, -4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %308

335:                                              ; preds = %308, %298
  %336 = phi i32 [ undef, %298 ], [ %332, %308 ]
  %337 = phi i32 [ 0, %298 ], [ %332, %308 ]
  %338 = phi %"struct.OT::IntType.1"* [ %302, %298 ], [ %328, %308 ]
  %339 = icmp eq i32 %304, 0
  br i1 %339, label %352, label %340

340:                                              ; preds = %335, %340
  %341 = phi i32 [ %349, %340 ], [ %337, %335 ]
  %342 = phi %"struct.OT::IntType.1"* [ %345, %340 ], [ %338, %335 ]
  %343 = phi i32 [ %350, %340 ], [ %304, %335 ]
  %344 = shl i32 %341, 8
  %345 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %342, i64 1
  %346 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %342, i64 0, i32 0, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = or i32 %344, %348
  %350 = add i32 %343, -1
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %340, !llvm.loop !16

352:                                              ; preds = %335, %340, %2, %244
  %353 = phi i32 [ 0, %244 ], [ 0, %2 ], [ %299, %340 ], [ %299, %335 ]
  %354 = phi i32 [ 0, %244 ], [ 0, %2 ], [ %336, %335 ], [ %349, %340 ]
  %355 = sub i32 %353, %354
  br label %356

356:                                              ; preds = %115, %241, %352
  %357 = phi i32 [ %355, %352 ], [ 0, %241 ], [ 0, %115 ]
  ret i32 %357
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF15cs_interp_env_tINS_11blend_arg_tENS_5SubrsIN2OT7IntTypeIjLj4EEEEEE4initERKNS_10byte_str_tEPKS6_SC_(%"struct.CFF::cs_interp_env_t"*, %"struct.CFF::byte_str_t"* dereferenceable(16), %"struct.CFF::Subrs"*, %"struct.CFF::Subrs"*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.CFF::cs_interp_env_t"* %0 to i8*
  %6 = bitcast %"struct.CFF::byte_str_t"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #6
  %7 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %11 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 20, i1 false) #6
  %12 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %13 = tail call i8* @malloc(i64 18976) #6
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16, !prof !2

15:                                               ; preds = %4
  store i32 -1, i32* %12, align 8
  br label %38

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %18 = bitcast %"struct.CFF::blend_arg_t"** %17 to i8**
  store i8* %13, i8** %18, align 8
  store i32 593, i32* %12, align 8
  %19 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16416, i1 false) #6
  store i32 513, i32* %19, align 4
  br label %20

20:                                               ; preds = %29, %16
  %21 = phi i32 [ 513, %16 ], [ %35, %29 ]
  %22 = phi i64 [ 0, %16 ], [ %34, %29 ]
  %23 = zext i32 %21 to i64
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %29

26:                                               ; preds = %20
  %27 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %17, align 8
  %28 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 %22
  br label %29

29:                                               ; preds = %26, %25
  %30 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %25 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 0, i32 0
  store double 0.000000e+00, double* %31, align 8
  %32 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 3
  %33 = bitcast %struct.hb_vector_t.156* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #6
  %34 = add nuw nsw i64 %22, 1
  %35 = load i32, i32* %19, align 4
  %36 = zext i32 %35 to i64
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %20, label %38

38:                                               ; preds = %29, %15
  %39 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2
  %41 = bitcast %"struct.CFF::call_context_t"* %40 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %6, i64 16, i1 false)
  %42 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 0, i32 2
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 2
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 4
  store i8 1, i8* %46, align 1
  %47 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 5
  store i8 0, i8* %47, align 2
  %48 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 6
  %49 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 12
  %50 = bitcast %"struct.CFF::point_t"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #6
  %51 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 1
  %52 = bitcast i32* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 20, i1 false) #6
  %53 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 0
  %54 = bitcast i32* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 13, i1 false)
  %55 = call i8* @malloc(i64 640)
  %56 = icmp eq i8* %55, null
  br i1 %56, label %73, label %57, !prof !2

57:                                               ; preds = %38
  %58 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 2
  %59 = bitcast %"struct.CFF::call_context_t"** %58 to i8**
  store i8* %55, i8** %59, align 8
  store i32 20, i32* %53, align 8
  %60 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 1
  %63 = icmp ult i32 %61, 10
  br i1 %63, label %64, label %72

64:                                               ; preds = %57
  %65 = bitcast i8* %55 to %"struct.CFF::call_context_t"*
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds %"struct.CFF::call_context_t", %"struct.CFF::call_context_t"* %65, i64 %66
  %68 = bitcast %"struct.CFF::call_context_t"* %67 to i8*
  %69 = sub nuw nsw i32 10, %61
  %70 = zext i32 %69 to i64
  %71 = shl nuw nsw i64 %70, 5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 %71, i1 false) #6
  br label %72

72:                                               ; preds = %57, %64
  store i32 10, i32* %62, align 4
  br label %77

73:                                               ; preds = %38
  %74 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 1
  %75 = load i32, i32* %74, align 4
  store i32 -1, i32* %53, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %99, label %77

77:                                               ; preds = %72, %73
  %78 = phi i32 [ 10, %72 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 1
  %80 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 2
  br label %81

81:                                               ; preds = %90, %77
  %82 = phi i32 [ %78, %77 ], [ %96, %90 ]
  %83 = phi i64 [ 0, %77 ], [ %95, %90 ]
  %84 = zext i32 %82 to i64
  %85 = icmp ult i64 %83, %84
  br i1 %85, label %87, label %86, !prof !3

86:                                               ; preds = %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %90

87:                                               ; preds = %81
  %88 = load %"struct.CFF::call_context_t"*, %"struct.CFF::call_context_t"** %80, align 8
  %89 = getelementptr inbounds %"struct.CFF::call_context_t", %"struct.CFF::call_context_t"* %88, i64 %83
  br label %90

90:                                               ; preds = %87, %86
  %91 = phi %"struct.CFF::call_context_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::call_context_t"*), %86 ], [ %89, %87 ]
  %92 = bitcast %"struct.CFF::call_context_t"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 21, i1 false) #6
  %93 = getelementptr inbounds %"struct.CFF::call_context_t", %"struct.CFF::call_context_t"* %91, i64 0, i32 1
  store i32 0, i32* %93, align 8
  %94 = getelementptr inbounds %"struct.CFF::call_context_t", %"struct.CFF::call_context_t"* %91, i64 0, i32 2
  store i32 0, i32* %94, align 4
  %95 = add nuw nsw i64 %83, 1
  %96 = load i32, i32* %79, align 4
  %97 = zext i32 %96 to i64
  %98 = icmp ult i64 %95, %97
  br i1 %98, label %81, label %99

99:                                               ; preds = %90, %73
  %100 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 10
  %101 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 10, i32 1
  store %"struct.CFF::Subrs"* %2, %"struct.CFF::Subrs"** %101, align 8
  %102 = icmp eq %"struct.CFF::Subrs"* %2, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw i32 %106, 24
  %108 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = shl nuw nsw i32 %110, 16
  %112 = or i32 %111, %107
  %113 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 8
  %117 = or i32 %112, %116
  %118 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = or i32 %117, %120
  %122 = icmp ult i32 %121, 1240
  br i1 %122, label %123, label %125

123:                                              ; preds = %103, %99
  %124 = getelementptr inbounds %"struct.CFF::biased_subrs_t", %"struct.CFF::biased_subrs_t"* %100, i64 0, i32 0
  store i32 107, i32* %124, align 8
  br label %130

125:                                              ; preds = %103
  %126 = icmp ult i32 %121, 33900
  %127 = getelementptr inbounds %"struct.CFF::biased_subrs_t", %"struct.CFF::biased_subrs_t"* %100, i64 0, i32 0
  br i1 %126, label %128, label %129

128:                                              ; preds = %125
  store i32 1131, i32* %127, align 8
  br label %130

129:                                              ; preds = %125
  store i32 32768, i32* %127, align 8
  br label %130

130:                                              ; preds = %123, %128, %129
  %131 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 11
  %132 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 11, i32 1
  store %"struct.CFF::Subrs"* %3, %"struct.CFF::Subrs"** %132, align 8
  %133 = icmp eq %"struct.CFF::Subrs"* %3, null
  br i1 %133, label %154, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = shl nuw i32 %137, 24
  %139 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = shl nuw nsw i32 %141, 16
  %143 = or i32 %142, %138
  %144 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = shl nuw nsw i32 %146, 8
  %148 = or i32 %143, %147
  %149 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = or i32 %148, %151
  %153 = icmp ult i32 %152, 1240
  br i1 %153, label %154, label %156

154:                                              ; preds = %134, %130
  %155 = getelementptr inbounds %"struct.CFF::biased_subrs_t", %"struct.CFF::biased_subrs_t"* %131, i64 0, i32 0
  store i32 107, i32* %155, align 8
  br label %161

156:                                              ; preds = %134
  %157 = icmp ult i32 %152, 33900
  %158 = getelementptr inbounds %"struct.CFF::biased_subrs_t", %"struct.CFF::biased_subrs_t"* %131, i64 0, i32 0
  br i1 %157, label %159, label %160

159:                                              ; preds = %156
  store i32 1131, i32* %158, align 8
  br label %161

160:                                              ; preds = %156
  store i32 32768, i32* %158, align 8
  br label %161

161:                                              ; preds = %154, %159, %160
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF15cff2_cs_opset_tI23cff2_cs_opset_extents_t20cff2_extents_param_t25cff2_path_procs_extents_tE10process_opEjRNS_20cff2_cs_interp_env_tERS2_(i32, %"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %83 [
    i32 10, label %4
    i32 29, label %4
    i32 16, label %25
    i32 15, label %26
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %9, %7
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %17

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %14 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %14, i64 %15
  br label %17

17:                                               ; preds = %11, %12
  %18 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %11 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %18, i64 0, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22, !prof !3

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %23, align 8
  br label %84

24:                                               ; preds = %17
  tail call void @_ZN3CFF10cs_opset_tINS_11blend_arg_tE23cff2_cs_opset_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_t25cff2_path_procs_extents_tE10process_opEjRS3_RS4_(i32 %0, %"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  br label %84

25:                                               ; preds = %3
  tail call void @_ZN3CFF15cff2_cs_opset_tI23cff2_cs_opset_extents_t20cff2_extents_param_t25cff2_path_procs_extents_tE13process_blendERNS_20cff2_cs_interp_env_tERS2_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  br label %84

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  %30 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, %29
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %26
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %39

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %36 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %35, align 8
  %37 = zext i32 %29 to i64
  %38 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %36, i64 %37
  br label %39

39:                                               ; preds = %33, %34
  %40 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %33 ], [ %38, %34 ]
  %41 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %40, i64 0, i32 3, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44, !prof !3

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %45, align 8
  br label %84

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1
  %48 = load i32, i32* %27, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %59, label %50, !prof !2

50:                                               ; preds = %46
  %51 = add i32 %48, -1
  store i32 %51, i32* %27, align 4
  %52 = icmp ugt i32 %31, %51
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %61

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %56 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %55, align 8
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %56, i64 %57
  br label %61

59:                                               ; preds = %46
  %60 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %47, i64 0, i32 0, i32 0
  store i8 1, i8* %60, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %61

61:                                               ; preds = %59, %54, %53
  %62 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %59 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %53 ], [ %58, %54 ]
  %63 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %62, i64 0, i32 0, i32 0
  %64 = load double, double* %63, align 8
  %65 = fptosi double %64 to i32
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %47, i64 0, i32 0, i32 0
  store i8 1, i8* %68, align 8
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i32 [ 0, %67 ], [ %65, %61 ]
  %71 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 9
  %72 = load i8, i8* %71, align 1, !range !6
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %78, !prof !3

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 10
  %76 = load i8, i8* %75, align 2, !range !6
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78, !prof !3

78:                                               ; preds = %74, %69
  %79 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %79, align 8
  br label %82

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 6
  store i32 %70, i32* %81, align 4
  br label %82

82:                                               ; preds = %78, %80
  store i8 1, i8* %71, align 1
  store i32 0, i32* %27, align 4
  br label %84

83:                                               ; preds = %3
  tail call void @_ZN3CFF10cs_opset_tINS_11blend_arg_tE23cff2_cs_opset_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_t25cff2_path_procs_extents_tE10process_opEjRS3_RS4_(i32 %0, %"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  br label %84

84:                                               ; preds = %83, %82, %44, %25, %24, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF10cs_opset_tINS_11blend_arg_tE23cff2_cs_opset_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_t25cff2_path_procs_extents_tE10process_opEjRS3_RS4_(i32, %"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %501 [
    i32 11, label %4
    i32 14, label %33
    i32 255, label %36
    i32 10, label %114
    i32 29, label %117
    i32 1, label %120
    i32 18, label %120
    i32 3, label %127
    i32 23, label %127
    i32 19, label %134
    i32 20, label %134
    i32 21, label %171
    i32 22, label %195
    i32 4, label %334
    i32 5, label %473
    i32 6, label %475
    i32 7, label %477
    i32 8, label %479
    i32 24, label %481
    i32 25, label %483
    i32 26, label %485
    i32 27, label %487
    i32 30, label %489
    i32 31, label %491
    i32 290, label %493
    i32 291, label %495
    i32 292, label %497
    i32 293, label %499
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 4, !range !6
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8, !prof !3

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %9, align 8
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 9, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %25, label %14, !prof !2

14:                                               ; preds = %10
  %15 = add i32 %12, -1
  store i32 %15, i32* %11, align 4
  %16 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 9, i32 0, i32 2, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %15
  br i1 %18, label %20, label %19, !prof !3

19:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 9, i32 0, i32 2, i32 2
  %22 = load %"struct.CFF::call_context_t"*, %"struct.CFF::call_context_t"** %21, align 8
  %23 = zext i32 %15 to i64
  %24 = getelementptr inbounds %"struct.CFF::call_context_t", %"struct.CFF::call_context_t"* %22, i64 %23
  br label %27

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 9, i32 0, i32 0
  store i8 1, i8* %26, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %27

27:                                               ; preds = %19, %20, %25
  %28 = phi %"struct.CFF::call_context_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::call_context_t"*), %25 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::call_context_t"*), %19 ], [ %24, %20 ]
  %29 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 2
  %30 = bitcast %"struct.CFF::call_context_t"* %29 to i8*
  %31 = bitcast %"struct.CFF::call_context_t"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 32, i1 false) #6
  %32 = bitcast %"struct.CFF::cff2_cs_interp_env_t"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %31, i64 21, i1 false) #6
  br label %503

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 3
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %35, align 4
  br label %503

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %38 = load i8, i8* %37, align 4, !range !6
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %503, !prof !17

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, 4
  %44 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp ugt i32 %43, %45
  br i1 %46, label %503, label %47, !prof !2

47:                                               ; preds = %40
  %48 = icmp ult i32 %42, %45
  br i1 %48, label %50, label %49, !prof !3

49:                                               ; preds = %47
  store i8 1, i8* %37, align 4
  br label %55

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = zext i32 %42 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  br label %55

55:                                               ; preds = %50, %49
  %56 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %49 ], [ %54, %50 ]
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw i32 %58, 24
  %60 = getelementptr inbounds i8, i8* %56, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 16
  %64 = or i32 %63, %59
  %65 = getelementptr inbounds i8, i8* %56, i64 2
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 8
  %69 = or i32 %64, %68
  %70 = getelementptr inbounds i8, i8* %56, i64 3
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp ult i32 %75, %77
  br i1 %78, label %79, label %85, !prof !3

79:                                               ; preds = %55
  %80 = add nuw i32 %75, 1
  store i32 %80, i32* %74, align 4
  %81 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %82 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %81, align 8
  %83 = zext i32 %75 to i64
  %84 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %82, i64 %83
  br label %87

85:                                               ; preds = %55
  %86 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %86, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %87

87:                                               ; preds = %85, %79
  %88 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %85 ], [ %84, %79 ]
  %89 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %88, i64 0, i32 2
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %88, i64 0, i32 1
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %88, i64 0, i32 3, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %96, label %94, !prof !2

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %88, i64 0, i32 3, i32 1
  store i32 0, i32* %95, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = sitofp i32 %73 to double
  %98 = fmul double %97, 0x3EF0000000000000
  %99 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %88, i64 0, i32 0, i32 0
  store double %98, double* %99, align 8
  %100 = load i8, i8* %37, align 4, !range !6
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102, !prof !3

102:                                              ; preds = %96
  %103 = load i32, i32* %44, align 8
  br label %112

104:                                              ; preds = %96
  %105 = load i32, i32* %41, align 8
  %106 = load i32, i32* %44, align 8
  %107 = icmp ule i32 %105, %106
  %108 = add i32 %105, 4
  %109 = icmp ule i32 %108, %106
  %110 = and i1 %107, %109
  br i1 %110, label %111, label %112, !prof !9

111:                                              ; preds = %104
  store i32 %108, i32* %41, align 8
  br label %503

112:                                              ; preds = %104, %102
  %113 = phi i32 [ %103, %102 ], [ %106, %104 ]
  store i32 %113, i32* %41, align 8
  store i8 1, i8* %37, align 4
  br label %503

114:                                              ; preds = %3
  %115 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0
  %116 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 11
  tail call void @_ZN3CFF15cs_interp_env_tINS_11blend_arg_tENS_5SubrsIN2OT7IntTypeIjLj4EEEEEE9call_subrERKNS_14biased_subrs_tIS6_EENS_9cs_type_tE(%"struct.CFF::cs_interp_env_t"* %115, %"struct.CFF::biased_subrs_t"* dereferenceable(16) %116, i32 2)
  br label %503

117:                                              ; preds = %3
  %118 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 10
  tail call void @_ZN3CFF15cs_interp_env_tINS_11blend_arg_tENS_5SubrsIN2OT7IntTypeIjLj4EEEEEE9call_subrERKNS_14biased_subrs_tIS6_EENS_9cs_type_tE(%"struct.CFF::cs_interp_env_t"* %118, %"struct.CFF::biased_subrs_t"* dereferenceable(16) %119, i32 1)
  br label %503

120:                                              ; preds = %3, %3
  %121 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = lshr i32 %122, 1
  %124 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 6
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, %123
  store i32 %126, i32* %124, align 4
  store i32 0, i32* %121, align 4
  br label %503

127:                                              ; preds = %3, %3
  %128 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = lshr i32 %129, 1
  %131 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 7
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, %130
  store i32 %133, i32* %131, align 8
  store i32 0, i32* %128, align 4
  br label %503

134:                                              ; preds = %3, %3
  %135 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 5
  %136 = load i8, i8* %135, align 2, !range !6
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 8
  %140 = load i32, i32* %139, align 4
  br label %154

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = lshr i32 %143, 1
  %145 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 7
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, %144
  store i32 %147, i32* %145, align 8
  %148 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 6
  %149 = load i32, i32* %148, align 4
  %150 = add i32 %147, 7
  %151 = add i32 %150, %149
  %152 = lshr i32 %151, 3
  %153 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 8
  store i32 %152, i32* %153, align 4
  store i8 1, i8* %135, align 2
  br label %154

154:                                              ; preds = %141, %138
  %155 = phi i32 [ %140, %138 ], [ %152, %141 ]
  %156 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %157 = load i8, i8* %156, align 4, !range !6
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %503, !prof !17

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i32, i32* %160, align 8
  %162 = add i32 %161, %155
  %163 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = load i32, i32* %163, align 8
  %165 = icmp ugt i32 %162, %164
  br i1 %165, label %503, label %166, !prof !2

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %167, align 4
  %168 = icmp ugt i32 %161, %164
  br i1 %168, label %170, label %169, !prof !8

169:                                              ; preds = %166
  store i32 %162, i32* %160, align 8
  br label %503

170:                                              ; preds = %166
  store i32 %164, i32* %160, align 8
  store i8 1, i8* %156, align 4
  br label %503

171:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7rmovetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %172 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 4
  %173 = load i8, i8* %172, align 1, !range !6
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %193

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 5
  %177 = load i8, i8* %176, align 2, !range !6
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %192

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = lshr i32 %181, 1
  %183 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 7
  %184 = load i32, i32* %183, align 8
  %185 = add i32 %184, %182
  store i32 %185, i32* %183, align 8
  %186 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 6
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %185, 7
  %189 = add i32 %188, %187
  %190 = lshr i32 %189, 3
  %191 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 8
  store i32 %190, i32* %191, align 4
  store i8 1, i8* %176, align 2
  br label %192

192:                                              ; preds = %179, %175
  store i8 1, i8* %172, align 1
  br label %193

193:                                              ; preds = %171, %192
  %194 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %194, align 4
  br label %503

195:                                              ; preds = %3
  %196 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 12, i32 0, i32 0
  %197 = load double, double* %196, align 8
  %198 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 12, i32 1, i32 0
  %199 = bitcast double* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %215, label %204, !prof !2

204:                                              ; preds = %195
  %205 = add i32 %202, -1
  store i32 %205, i32* %201, align 4
  %206 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = icmp ugt i32 %207, %205
  br i1 %208, label %210, label %209, !prof !3

209:                                              ; preds = %204
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %217

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %212 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %211, align 8
  %213 = zext i32 %205 to i64
  %214 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %212, i64 %213
  br label %217

215:                                              ; preds = %195
  %216 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %216, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %217

217:                                              ; preds = %215, %210, %209
  %218 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %215 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %209 ], [ %214, %210 ]
  %219 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 8
  %220 = load i8, i8* %219, align 8, !range !6
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %308, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %218, i64 0, i32 3, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %308, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 7, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = icmp eq i32 %228, %224
  br i1 %229, label %230, label %308, !prof !3

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %218, i64 0, i32 0, i32 0
  %232 = load double, double* %231, align 8
  %233 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 7, i32 2
  %234 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %218, i64 0, i32 3, i32 2
  %235 = zext i32 %224 to i64
  %236 = load float*, float** %233, align 8
  %237 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %234, align 8
  %238 = add nsw i64 %235, -1
  %239 = and i64 %235, 3
  %240 = icmp ult i64 %238, 3
  br i1 %240, label %243, label %241

241:                                              ; preds = %230
  %242 = sub nsw i64 %235, %239
  br label %270

243:                                              ; preds = %270, %230
  %244 = phi double [ undef, %230 ], [ %304, %270 ]
  %245 = phi i64 [ 0, %230 ], [ %305, %270 ]
  %246 = phi double [ %232, %230 ], [ %304, %270 ]
  %247 = icmp eq i64 %239, 0
  br i1 %247, label %262, label %248

248:                                              ; preds = %243, %248
  %249 = phi i64 [ %259, %248 ], [ %245, %243 ]
  %250 = phi double [ %258, %248 ], [ %246, %243 ]
  %251 = phi i64 [ %260, %248 ], [ %239, %243 ]
  %252 = getelementptr inbounds float, float* %236, i64 %249
  %253 = load float, float* %252, align 4
  %254 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %237, i64 %249, i32 0
  %255 = load double, double* %254, align 8
  %256 = fpext float %253 to double
  %257 = fmul double %255, %256
  %258 = fadd double %250, %257
  %259 = add nuw nsw i64 %249, 1
  %260 = add i64 %251, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %248, !llvm.loop !18

262:                                              ; preds = %248, %243
  %263 = phi double [ %244, %243 ], [ %258, %248 ]
  %264 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %218, i64 0, i32 2
  store i32 0, i32* %264, align 4
  %265 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %218, i64 0, i32 1
  store i32 0, i32* %265, align 8
  %266 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %218, i64 0, i32 3, i32 0
  %267 = load i32, i32* %266, align 8
  %268 = icmp slt i32 %267, 0
  store double %263, double* %231, align 8
  br i1 %268, label %308, label %269, !prof !2

269:                                              ; preds = %262
  store i32 0, i32* %223, align 4
  br label %308

270:                                              ; preds = %270, %241
  %271 = phi i64 [ 0, %241 ], [ %305, %270 ]
  %272 = phi double [ %232, %241 ], [ %304, %270 ]
  %273 = phi i64 [ %242, %241 ], [ %306, %270 ]
  %274 = getelementptr inbounds float, float* %236, i64 %271
  %275 = load float, float* %274, align 4
  %276 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %237, i64 %271, i32 0
  %277 = load double, double* %276, align 8
  %278 = fpext float %275 to double
  %279 = fmul double %277, %278
  %280 = fadd double %272, %279
  %281 = or i64 %271, 1
  %282 = getelementptr inbounds float, float* %236, i64 %281
  %283 = load float, float* %282, align 4
  %284 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %237, i64 %281, i32 0
  %285 = load double, double* %284, align 8
  %286 = fpext float %283 to double
  %287 = fmul double %285, %286
  %288 = fadd double %280, %287
  %289 = or i64 %271, 2
  %290 = getelementptr inbounds float, float* %236, i64 %289
  %291 = load float, float* %290, align 4
  %292 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %237, i64 %289, i32 0
  %293 = load double, double* %292, align 8
  %294 = fpext float %291 to double
  %295 = fmul double %293, %294
  %296 = fadd double %288, %295
  %297 = or i64 %271, 3
  %298 = getelementptr inbounds float, float* %236, i64 %297
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %237, i64 %297, i32 0
  %301 = load double, double* %300, align 8
  %302 = fpext float %299 to double
  %303 = fmul double %301, %302
  %304 = fadd double %296, %303
  %305 = add nuw nsw i64 %271, 4
  %306 = add i64 %273, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %243, label %270

308:                                              ; preds = %217, %222, %226, %262, %269
  %309 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %218, i64 0, i32 0, i32 0
  %310 = load double, double* %309, align 8
  %311 = fadd double %197, %310
  %312 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %2, i64 0, i32 0
  store i8 0, i8* %312, align 8
  store double %311, double* %196, align 8
  store i64 %200, i64* %199, align 8
  %313 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 4
  %314 = load i8, i8* %313, align 1, !range !6
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %316, label %333

316:                                              ; preds = %308
  %317 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 5
  %318 = load i8, i8* %317, align 2, !range !6
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %332

320:                                              ; preds = %316
  %321 = load i32, i32* %201, align 4
  %322 = lshr i32 %321, 1
  %323 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 7
  %324 = load i32, i32* %323, align 8
  %325 = add i32 %324, %322
  store i32 %325, i32* %323, align 8
  %326 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 6
  %327 = load i32, i32* %326, align 4
  %328 = add i32 %325, 7
  %329 = add i32 %328, %327
  %330 = lshr i32 %329, 3
  %331 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 8
  store i32 %330, i32* %331, align 4
  store i8 1, i8* %317, align 2
  br label %332

332:                                              ; preds = %320, %316
  store i8 1, i8* %313, align 1
  br label %333

333:                                              ; preds = %308, %332
  store i32 0, i32* %201, align 4
  br label %503

334:                                              ; preds = %3
  %335 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 12, i32 0, i32 0
  %336 = bitcast double* %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 12, i32 1, i32 0
  %339 = load double, double* %338, align 8
  %340 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %354, label %343, !prof !2

343:                                              ; preds = %334
  %344 = add i32 %341, -1
  store i32 %344, i32* %340, align 4
  %345 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = icmp ugt i32 %346, %344
  br i1 %347, label %349, label %348, !prof !3

348:                                              ; preds = %343
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %356

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %351 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %350, align 8
  %352 = zext i32 %344 to i64
  %353 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %351, i64 %352
  br label %356

354:                                              ; preds = %334
  %355 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %355, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %356

356:                                              ; preds = %354, %349, %348
  %357 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %354 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %348 ], [ %353, %349 ]
  %358 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 8
  %359 = load i8, i8* %358, align 8, !range !6
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %447, label %361

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %357, i64 0, i32 3, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %447, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 7, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %367, %363
  br i1 %368, label %369, label %447, !prof !3

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %357, i64 0, i32 0, i32 0
  %371 = load double, double* %370, align 8
  %372 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 7, i32 2
  %373 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %357, i64 0, i32 3, i32 2
  %374 = zext i32 %363 to i64
  %375 = load float*, float** %372, align 8
  %376 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %373, align 8
  %377 = add nsw i64 %374, -1
  %378 = and i64 %374, 3
  %379 = icmp ult i64 %377, 3
  br i1 %379, label %382, label %380

380:                                              ; preds = %369
  %381 = sub nsw i64 %374, %378
  br label %409

382:                                              ; preds = %409, %369
  %383 = phi double [ undef, %369 ], [ %443, %409 ]
  %384 = phi i64 [ 0, %369 ], [ %444, %409 ]
  %385 = phi double [ %371, %369 ], [ %443, %409 ]
  %386 = icmp eq i64 %378, 0
  br i1 %386, label %401, label %387

387:                                              ; preds = %382, %387
  %388 = phi i64 [ %398, %387 ], [ %384, %382 ]
  %389 = phi double [ %397, %387 ], [ %385, %382 ]
  %390 = phi i64 [ %399, %387 ], [ %378, %382 ]
  %391 = getelementptr inbounds float, float* %375, i64 %388
  %392 = load float, float* %391, align 4
  %393 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %376, i64 %388, i32 0
  %394 = load double, double* %393, align 8
  %395 = fpext float %392 to double
  %396 = fmul double %394, %395
  %397 = fadd double %389, %396
  %398 = add nuw nsw i64 %388, 1
  %399 = add i64 %390, -1
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %401, label %387, !llvm.loop !19

401:                                              ; preds = %387, %382
  %402 = phi double [ %383, %382 ], [ %397, %387 ]
  %403 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %357, i64 0, i32 2
  store i32 0, i32* %403, align 4
  %404 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %357, i64 0, i32 1
  store i32 0, i32* %404, align 8
  %405 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %357, i64 0, i32 3, i32 0
  %406 = load i32, i32* %405, align 8
  %407 = icmp slt i32 %406, 0
  store double %402, double* %370, align 8
  br i1 %407, label %447, label %408, !prof !2

408:                                              ; preds = %401
  store i32 0, i32* %362, align 4
  br label %447

409:                                              ; preds = %409, %380
  %410 = phi i64 [ 0, %380 ], [ %444, %409 ]
  %411 = phi double [ %371, %380 ], [ %443, %409 ]
  %412 = phi i64 [ %381, %380 ], [ %445, %409 ]
  %413 = getelementptr inbounds float, float* %375, i64 %410
  %414 = load float, float* %413, align 4
  %415 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %376, i64 %410, i32 0
  %416 = load double, double* %415, align 8
  %417 = fpext float %414 to double
  %418 = fmul double %416, %417
  %419 = fadd double %411, %418
  %420 = or i64 %410, 1
  %421 = getelementptr inbounds float, float* %375, i64 %420
  %422 = load float, float* %421, align 4
  %423 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %376, i64 %420, i32 0
  %424 = load double, double* %423, align 8
  %425 = fpext float %422 to double
  %426 = fmul double %424, %425
  %427 = fadd double %419, %426
  %428 = or i64 %410, 2
  %429 = getelementptr inbounds float, float* %375, i64 %428
  %430 = load float, float* %429, align 4
  %431 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %376, i64 %428, i32 0
  %432 = load double, double* %431, align 8
  %433 = fpext float %430 to double
  %434 = fmul double %432, %433
  %435 = fadd double %427, %434
  %436 = or i64 %410, 3
  %437 = getelementptr inbounds float, float* %375, i64 %436
  %438 = load float, float* %437, align 4
  %439 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %376, i64 %436, i32 0
  %440 = load double, double* %439, align 8
  %441 = fpext float %438 to double
  %442 = fmul double %440, %441
  %443 = fadd double %435, %442
  %444 = add nuw nsw i64 %410, 4
  %445 = add i64 %412, -4
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %382, label %409

447:                                              ; preds = %356, %361, %365, %401, %408
  %448 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %357, i64 0, i32 0, i32 0
  %449 = load double, double* %448, align 8
  %450 = fadd double %339, %449
  %451 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %2, i64 0, i32 0
  store i8 0, i8* %451, align 8
  store i64 %337, i64* %336, align 8
  store double %450, double* %338, align 8
  %452 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 4
  %453 = load i8, i8* %452, align 1, !range !6
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %455, label %472

455:                                              ; preds = %447
  %456 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 5
  %457 = load i8, i8* %456, align 2, !range !6
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %459, label %471

459:                                              ; preds = %455
  %460 = load i32, i32* %340, align 4
  %461 = lshr i32 %460, 1
  %462 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 7
  %463 = load i32, i32* %462, align 8
  %464 = add i32 %463, %461
  store i32 %464, i32* %462, align 8
  %465 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 6
  %466 = load i32, i32* %465, align 4
  %467 = add i32 %464, 7
  %468 = add i32 %467, %466
  %469 = lshr i32 %468, 3
  %470 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 8
  store i32 %469, i32* %470, align 4
  store i8 1, i8* %456, align 2
  br label %471

471:                                              ; preds = %459, %455
  store i8 1, i8* %452, align 1
  br label %472

472:                                              ; preds = %447, %471
  store i32 0, i32* %340, align 4
  br label %503

473:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7rlinetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %474 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %474, align 4
  br label %503

475:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7hlinetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %476 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %476, align 4
  br label %503

477:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7vlinetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %478 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %478, align 4
  br label %503

479:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9rrcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %480 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %480, align 4
  br label %503

481:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE10rcurvelineERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %482 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %482, align 4
  br label %503

483:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE10rlinecurveERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %484 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %484, align 4
  br label %503

485:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9vvcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %486 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %486, align 4
  br label %503

487:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9hhcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %488 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %488, align 4
  br label %503

489:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9vhcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %490 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %490, align 4
  br label %503

491:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9hvcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %492 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %492, align 4
  br label %503

493:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE5hflexERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %494 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %494, align 4
  br label %503

495:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE4flexERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %496 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %496, align 4
  br label %503

497:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE6hflex1ERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %498 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %498, align 4
  br label %503

499:                                              ; preds = %3
  tail call void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE5flex1ERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %1, %struct.cff2_extents_param_t* dereferenceable(40) %2)
  %500 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %500, align 4
  br label %503

501:                                              ; preds = %3
  %502 = bitcast %"struct.CFF::cff2_cs_interp_env_t"* %1 to %"struct.CFF::interp_env_t"*
  tail call void @_ZN3CFF7opset_tINS_11blend_arg_tEE10process_opEjRNS_12interp_env_tIS1_EE(i32 %0, %"struct.CFF::interp_env_t"* dereferenceable(56) %502)
  br label %503

503:                                              ; preds = %170, %169, %159, %154, %112, %111, %40, %36, %501, %499, %497, %495, %493, %491, %489, %487, %485, %483, %481, %479, %477, %475, %473, %472, %333, %193, %127, %120, %117, %114, %33, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF15cff2_cs_opset_tI23cff2_cs_opset_extents_t20cff2_extents_param_t25cff2_path_procs_extents_tE13process_blendERNS_20cff2_cs_interp_env_tERS2_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3CFF20cff2_cs_interp_env_t13process_blendEv(%"struct.CFF::cff2_cs_interp_env_t"* %0)
  %3 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %20, label %9, !prof !2

9:                                                ; preds = %2
  %10 = add i32 %7, -1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, %10
  br i1 %13, label %15, label %14, !prof !3

14:                                               ; preds = %9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %17 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %16, align 8
  %18 = zext i32 %10 to i64
  %19 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %17, i64 %18
  br label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %5, i64 0, i32 0, i32 0
  store i8 1, i8* %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %22

22:                                               ; preds = %20, %15, %14
  %23 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %20 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %14 ], [ %19, %15 ]
  %24 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 0, i32 0
  %25 = load double, double* %24, align 8
  %26 = fptosi double %25 to i32
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %5, i64 0, i32 0, i32 0
  store i8 1, i8* %29, align 8
  br label %30

30:                                               ; preds = %22, %28
  %31 = phi i32 [ 0, %28 ], [ %26, %22 ]
  %32 = load i32, i32* %6, align 4
  %33 = add i32 %4, 1
  %34 = mul i32 %31, %33
  %35 = sub i32 %32, %34
  %36 = icmp ult i32 %32, %34
  br i1 %36, label %118, label %37, !prof !2

37:                                               ; preds = %30
  %38 = icmp eq i32 %31, 0
  br i1 %38, label %120, label %39

39:                                               ; preds = %37
  %40 = add i32 %35, %31
  %41 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %42 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %43 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %5, i64 0, i32 0, i32 0
  %44 = icmp sgt i32 %4, 0
  %45 = select i1 %44, i32 %4, i32 0
  %46 = icmp eq i32 %4, 0
  %47 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  %48 = zext i32 %4 to i64
  %49 = zext i32 %31 to i64
  br i1 %46, label %55, label %50

50:                                               ; preds = %39
  %51 = and i64 %48, 1
  %52 = icmp eq i32 %4, 1
  %53 = sub nsw i64 %48, %51
  %54 = icmp eq i64 %51, 0
  br label %128

55:                                               ; preds = %39, %116
  %56 = phi i32 [ %117, %116 ], [ %32, %39 ]
  %57 = phi i64 [ %114, %116 ], [ 0, %39 ]
  %58 = trunc i64 %57 to i32
  %59 = add i32 %35, %58
  %60 = icmp ugt i32 %56, %59
  br i1 %60, label %62, label %61, !prof !3

61:                                               ; preds = %55
  store i8 1, i8* %43, align 8
  br label %62

62:                                               ; preds = %61, %55
  %63 = load i32, i32* %42, align 4
  %64 = icmp ugt i32 %63, %59
  br i1 %64, label %66, label %65, !prof !3

65:                                               ; preds = %62
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %70

66:                                               ; preds = %62
  %67 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %41, align 8
  %68 = zext i32 %59 to i64
  %69 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %67, i64 %68
  br label %70

70:                                               ; preds = %66, %65
  %71 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %65 ], [ %69, %66 ]
  %72 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %71, i64 0, i32 1
  store i32 %31, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %71, i64 0, i32 2
  store i32 %58, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %71, i64 0, i32 3, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %113, label %77, !prof !2

77:                                               ; preds = %70
  %78 = icmp ult i32 %75, %45
  br i1 %78, label %79, label %98, !prof !2

79:                                               ; preds = %77, %79
  %80 = phi i32 [ %83, %79 ], [ %75, %77 ]
  %81 = lshr i32 %80, 1
  %82 = add i32 %80, 8
  %83 = add i32 %82, %81
  %84 = icmp ugt i32 %83, %45
  br i1 %84, label %85, label %79

85:                                               ; preds = %79
  %86 = icmp uge i32 %83, %75
  %87 = icmp ult i32 %83, 536870911
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %112, !prof !9

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %71, i64 0, i32 3, i32 2
  %91 = bitcast %"struct.CFF::number_t"** %90 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = zext i32 %83 to i64
  %94 = shl nuw nsw i64 %93, 3
  %95 = tail call i8* @realloc(i8* %92, i64 %94) #6
  %96 = icmp eq i8* %95, null
  br i1 %96, label %112, label %97, !prof !2

97:                                               ; preds = %89
  store i8* %95, i8** %91, align 8
  store i32 %83, i32* %74, align 8
  br label %98

98:                                               ; preds = %97, %77
  %99 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %71, i64 0, i32 3, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp ugt i32 %45, %100
  br i1 %101, label %102, label %111

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %71, i64 0, i32 3, i32 2
  %104 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %103, align 8
  %105 = zext i32 %100 to i64
  %106 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %104, i64 %105
  %107 = bitcast %"struct.CFF::number_t"* %106 to i8*
  %108 = sub i32 %45, %100
  %109 = zext i32 %108 to i64
  %110 = shl nuw nsw i64 %109, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 %110, i1 false) #6
  br label %111

111:                                              ; preds = %102, %98
  store i32 %45, i32* %99, align 4
  br label %113

112:                                              ; preds = %89, %85
  store i32 -1, i32* %74, align 8
  br label %113

113:                                              ; preds = %70, %111, %112
  %114 = add nuw nsw i64 %57, 1
  %115 = icmp ult i64 %114, %49
  br i1 %115, label %116, label %120

116:                                              ; preds = %113
  %117 = load i32, i32* %6, align 4
  br label %55

118:                                              ; preds = %30
  %119 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %119, align 8
  br label %245

120:                                              ; preds = %240, %113, %37
  %121 = mul i32 %31, %4
  %122 = load i32, i32* %6, align 4
  %123 = icmp ult i32 %122, %121
  br i1 %123, label %126, label %124, !prof !2

124:                                              ; preds = %120
  %125 = sub i32 %122, %121
  store i32 %125, i32* %6, align 4
  br label %245

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"struct.CFF::arg_stack_t", %"struct.CFF::arg_stack_t"* %5, i64 0, i32 0, i32 0
  store i8 1, i8* %127, align 8
  br label %245

128:                                              ; preds = %50, %243
  %129 = phi i32 [ %244, %243 ], [ %32, %50 ]
  %130 = phi i64 [ %241, %243 ], [ 0, %50 ]
  %131 = trunc i64 %130 to i32
  %132 = mul i32 %4, %131
  %133 = add i32 %40, %132
  %134 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %41, align 8
  %135 = load i32, i32* %42, align 4
  %136 = icmp ne i32 %133, 0
  %137 = tail call i32 @llvm.usub.sat.i32(i32 %135, i32 %133) #6
  %138 = zext i32 %133 to i64
  %139 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 %138
  %140 = select i1 %136, i32 %137, i32 %135
  %141 = select i1 %136, %"struct.CFF::blend_arg_t"* %139, %"struct.CFF::blend_arg_t"* %134
  %142 = zext i32 %140 to i64
  %143 = add i32 %35, %131
  %144 = icmp ugt i32 %129, %143
  br i1 %144, label %146, label %145, !prof !3

145:                                              ; preds = %128
  store i8 1, i8* %43, align 8
  br label %146

146:                                              ; preds = %145, %128
  %147 = icmp ugt i32 %135, %143
  br i1 %147, label %149, label %148, !prof !3

148:                                              ; preds = %146
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %152

149:                                              ; preds = %146
  %150 = zext i32 %143 to i64
  %151 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 %150
  br label %152

152:                                              ; preds = %148, %149
  %153 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %148 ], [ %151, %149 ]
  %154 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 1
  store i32 %31, i32* %154, align 8
  %155 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 2
  store i32 %131, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 3, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %195, label %159, !prof !2

159:                                              ; preds = %152
  %160 = icmp ult i32 %157, %45
  br i1 %160, label %161, label %181, !prof !2

161:                                              ; preds = %159, %161
  %162 = phi i32 [ %165, %161 ], [ %157, %159 ]
  %163 = lshr i32 %162, 1
  %164 = add i32 %162, 8
  %165 = add i32 %164, %163
  %166 = icmp ugt i32 %165, %45
  br i1 %166, label %167, label %161

167:                                              ; preds = %161
  %168 = icmp uge i32 %165, %157
  %169 = icmp ult i32 %165, 536870911
  %170 = and i1 %168, %169
  br i1 %170, label %171, label %179, !prof !9

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 3, i32 2
  %173 = bitcast %"struct.CFF::number_t"** %172 to i8**
  %174 = load i8*, i8** %173, align 8
  %175 = zext i32 %165 to i64
  %176 = shl nuw nsw i64 %175, 3
  %177 = tail call i8* @realloc(i8* %174, i64 %176) #6
  %178 = icmp eq i8* %177, null
  br i1 %178, label %179, label %180, !prof !2

179:                                              ; preds = %171, %167
  store i32 -1, i32* %156, align 8
  br label %195

180:                                              ; preds = %171
  store i8* %177, i8** %173, align 8
  store i32 %165, i32* %156, align 8
  br label %181

181:                                              ; preds = %180, %159
  %182 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 3, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp ugt i32 %45, %183
  br i1 %184, label %185, label %194

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 3, i32 2
  %187 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %186, align 8
  %188 = zext i32 %183 to i64
  %189 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %187, i64 %188
  %190 = bitcast %"struct.CFF::number_t"* %189 to i8*
  %191 = sub i32 %45, %183
  %192 = zext i32 %191 to i64
  %193 = shl nuw nsw i64 %192, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 %193, i1 false) #6
  br label %194

194:                                              ; preds = %185, %181
  store i32 %45, i32* %182, align 4
  br label %195

195:                                              ; preds = %152, %179, %194
  %196 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 3, i32 1
  %197 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %153, i64 0, i32 3, i32 2
  br i1 %52, label %222, label %198

198:                                              ; preds = %195, %250
  %199 = phi i64 [ %256, %250 ], [ 0, %195 ]
  %200 = phi i64 [ %257, %250 ], [ %53, %195 ]
  %201 = icmp ult i64 %199, %142
  %202 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %141, i64 %199
  %203 = load i32, i32* %196, align 4
  %204 = zext i32 %203 to i64
  %205 = icmp ult i64 %199, %204
  br i1 %205, label %207, label %206, !prof !3

206:                                              ; preds = %198
  store i64 %47, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %210

207:                                              ; preds = %198
  %208 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %197, align 8
  %209 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %208, i64 %199
  br label %210

210:                                              ; preds = %207, %206
  %211 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %206 ], [ %209, %207 ]
  %212 = bitcast %"struct.CFF::blend_arg_t"* %202 to i64*
  %213 = select i1 %201, i64* %212, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), !prof !3
  %214 = bitcast %"struct.CFF::number_t"* %211 to i64*
  %215 = load i64, i64* %213, align 8
  store i64 %215, i64* %214, align 8
  %216 = or i64 %199, 1
  %217 = icmp ult i64 %216, %142
  %218 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %141, i64 %216
  %219 = load i32, i32* %196, align 4
  %220 = zext i32 %219 to i64
  %221 = icmp ult i64 %216, %220
  br i1 %221, label %247, label %246, !prof !3

222:                                              ; preds = %250, %195
  %223 = phi i64 [ 0, %195 ], [ %256, %250 ]
  br i1 %54, label %240, label %224

224:                                              ; preds = %222
  %225 = icmp ult i64 %223, %142
  %226 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %141, i64 %223
  %227 = load i32, i32* %196, align 4
  %228 = zext i32 %227 to i64
  %229 = icmp ult i64 %223, %228
  br i1 %229, label %231, label %230, !prof !3

230:                                              ; preds = %224
  store i64 %47, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %234

231:                                              ; preds = %224
  %232 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %197, align 8
  %233 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %232, i64 %223
  br label %234

234:                                              ; preds = %231, %230
  %235 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %230 ], [ %233, %231 ]
  %236 = bitcast %"struct.CFF::blend_arg_t"* %226 to i64*
  %237 = select i1 %225, i64* %236, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), !prof !3
  %238 = bitcast %"struct.CFF::number_t"* %235 to i64*
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %238, align 8
  br label %240

240:                                              ; preds = %222, %234
  %241 = add nuw nsw i64 %130, 1
  %242 = icmp ult i64 %241, %49
  br i1 %242, label %243, label %120

243:                                              ; preds = %240
  %244 = load i32, i32* %6, align 4
  br label %128

245:                                              ; preds = %126, %124, %118
  ret void

246:                                              ; preds = %210
  store i64 %47, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %250

247:                                              ; preds = %210
  %248 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %197, align 8
  %249 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %248, i64 %216
  br label %250

250:                                              ; preds = %247, %246
  %251 = phi %"struct.CFF::number_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::number_t"*), %246 ], [ %249, %247 ]
  %252 = bitcast %"struct.CFF::blend_arg_t"* %218 to i64*
  %253 = select i1 %217, i64* %252, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), !prof !3
  %254 = bitcast %"struct.CFF::number_t"* %251 to i64*
  %255 = load i64, i64* %253, align 8
  store i64 %255, i64* %254, align 8
  %256 = add nuw nsw i64 %199, 2
  %257 = add i64 %200, -2
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %222, label %198
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF15cs_interp_env_tINS_11blend_arg_tENS_5SubrsIN2OT7IntTypeIjLj4EEEEEE9call_subrERKNS_14biased_subrs_tIS6_EENS_9cs_type_tE(%"struct.CFF::cs_interp_env_t"*, %"struct.CFF::biased_subrs_t"* dereferenceable(16), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7, !prof !2

7:                                                ; preds = %3
  %8 = add i32 %5, -1
  store i32 %8, i32* %4, align 4
  %9 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i32 %10, %8
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %20

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %15 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %14, align 8
  %16 = zext i32 %8 to i64
  %17 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %15, i64 %16
  br label %20

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %20

20:                                               ; preds = %18, %13, %12
  %21 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %18 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %12 ], [ %17, %13 ]
  %22 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %21, i64 0, i32 0, i32 0
  %23 = load double, double* %22, align 8
  %24 = fptosi double %23 to i32
  %25 = getelementptr inbounds %"struct.CFF::biased_subrs_t", %"struct.CFF::biased_subrs_t"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, %24
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %57, label %29, !prof !2

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"struct.CFF::biased_subrs_t", %"struct.CFF::biased_subrs_t"* %1, i64 0, i32 1
  %31 = load %"struct.CFF::Subrs"*, %"struct.CFF::Subrs"** %30, align 8
  %32 = icmp eq %"struct.CFF::Subrs"* %31, null
  br i1 %32, label %57, label %33, !prof !20

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw i32 %36, 24
  %38 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 16
  %42 = or i32 %41, %37
  %43 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = or i32 %42, %46
  %48 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = icmp ult i32 %27, %51
  br i1 %52, label %53, label %57, !prof !3

53:                                               ; preds = %33
  %54 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp ugt i32 %55, 9
  br i1 %56, label %57, label %59, !prof !2

57:                                               ; preds = %29, %20, %33, %53
  %58 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %58, align 8
  br label %195

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2
  %61 = bitcast %"struct.CFF::call_context_t"* %60 to i8*
  %62 = bitcast %"struct.CFF::cs_interp_env_t"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 21, i1 false)
  %63 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp ult i32 %55, %64
  br i1 %65, label %66, label %73, !prof !3

66:                                               ; preds = %59
  %67 = add nuw nsw i32 %55, 1
  store i32 %67, i32* %54, align 4
  %68 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 2, i32 2
  %69 = load %"struct.CFF::call_context_t"*, %"struct.CFF::call_context_t"** %68, align 8
  %70 = zext i32 %55 to i64
  %71 = getelementptr inbounds %"struct.CFF::call_context_t", %"struct.CFF::call_context_t"* %69, i64 %70
  %72 = bitcast %"struct.CFF::call_context_t"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %61, i64 32, i1 false) #6
  br label %75

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 9, i32 0, i32 0
  store i8 1, i8* %74, align 8
  br label %75

75:                                               ; preds = %66, %73
  %76 = load %"struct.CFF::Subrs"*, %"struct.CFF::Subrs"** %30, align 8
  %77 = icmp eq %"struct.CFF::Subrs"* %76, null
  %78 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0
  br i1 %77, label %99, label %79, !prof !2

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw i32 %82, 24
  %84 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 16
  %88 = or i32 %87, %83
  %89 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl nuw nsw i32 %91, 8
  %93 = or i32 %88, %92
  %94 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = or i32 %93, %96
  %98 = icmp ugt i32 %97, %27
  br i1 %98, label %102, label %99, !prof !3

99:                                               ; preds = %79, %75
  %100 = load i8*, i8** bitcast ([48 x i64]* @_hb_NullPool to i8**), align 16
  %101 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 1), align 8
  br label %185

102:                                              ; preds = %79
  %103 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i64 5
  %104 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0, i32 1, i32 0, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i64
  %107 = zext i8 %81 to i64
  %108 = shl nuw nsw i64 %107, 24
  %109 = zext i8 %85 to i64
  %110 = shl nuw nsw i64 %109, 16
  %111 = or i64 %110, %108
  %112 = zext i8 %90 to i64
  %113 = shl nuw nsw i64 %112, 8
  %114 = or i64 %111, %113
  %115 = zext i8 %95 to i64
  %116 = or i64 %114, %115
  %117 = add nuw nsw i64 %116, 1
  %118 = mul nuw nsw i64 %117, %106
  %119 = and i64 %118, 4294967295
  %120 = getelementptr inbounds i8, i8* %103, i64 %119
  %121 = zext i8 %105 to i32
  %122 = icmp eq i8 %105, 0
  br i1 %122, label %179, label %123

123:                                              ; preds = %102
  %124 = mul i32 %27, %121
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %"struct.CFF::Subrs", %"struct.CFF::Subrs"* %76, i64 0, i32 0, i32 2, i64 %125
  %127 = add nsw i32 %121, -1
  %128 = and i32 %121, 3
  %129 = icmp ult i32 %127, 3
  br i1 %129, label %159, label %130

130:                                              ; preds = %123
  %131 = sub nsw i32 %121, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i32 [ 0, %130 ], [ %156, %132 ]
  %134 = phi %"struct.OT::IntType.1"* [ %126, %130 ], [ %152, %132 ]
  %135 = phi i32 [ %131, %130 ], [ %157, %132 ]
  %136 = shl i32 %133, 8
  %137 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %134, i64 0, i32 0, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = or i32 %136, %139
  %141 = shl i32 %140, 8
  %142 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %134, i64 1, i32 0, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = or i32 %141, %144
  %146 = shl i32 %145, 8
  %147 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %134, i64 2, i32 0, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = or i32 %146, %149
  %151 = shl i32 %150, 8
  %152 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %134, i64 4
  %153 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %134, i64 3, i32 0, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = or i32 %151, %155
  %157 = add i32 %135, -4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %132

159:                                              ; preds = %132, %123
  %160 = phi i32 [ undef, %123 ], [ %156, %132 ]
  %161 = phi i32 [ 0, %123 ], [ %156, %132 ]
  %162 = phi %"struct.OT::IntType.1"* [ %126, %123 ], [ %152, %132 ]
  %163 = icmp eq i32 %128, 0
  br i1 %163, label %176, label %164

164:                                              ; preds = %159, %164
  %165 = phi i32 [ %173, %164 ], [ %161, %159 ]
  %166 = phi %"struct.OT::IntType.1"* [ %169, %164 ], [ %162, %159 ]
  %167 = phi i32 [ %174, %164 ], [ %128, %159 ]
  %168 = shl i32 %165, 8
  %169 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %166, i64 1
  %170 = getelementptr inbounds %"struct.OT::IntType.1", %"struct.OT::IntType.1"* %166, i64 0, i32 0, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = or i32 %168, %172
  %174 = add i32 %167, -1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %164, !llvm.loop !21

176:                                              ; preds = %164, %159
  %177 = phi i32 [ %160, %159 ], [ %173, %164 ]
  %178 = zext i32 %177 to i64
  br label %179

179:                                              ; preds = %176, %102
  %180 = phi i64 [ 0, %102 ], [ %178, %176 ]
  %181 = getelementptr inbounds i8, i8* %120, i64 %180
  %182 = getelementptr inbounds i8, i8* %181, i64 -1
  %183 = tail call i32 @_ZNK3CFF8CFFIndexIN2OT7IntTypeIjLj4EEEE9length_atEj(%"struct.CFF::CFFIndex"* %78, i32 %27) #6
  %184 = zext i32 %183 to i64
  br label %185

185:                                              ; preds = %179, %99
  %186 = phi i8* [ %100, %99 ], [ %182, %179 ]
  %187 = phi i64 [ %101, %99 ], [ %184, %179 ]
  %188 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8* %186, i8** %188, align 8
  %189 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %190 = bitcast i32* %189 to i64*
  store i64 %187, i64* %190, align 8
  %191 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %191, align 8
  %192 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 0, i32 2
  store i8 0, i8* %192, align 4
  %193 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 1
  store i32 %2, i32* %193, align 8
  %194 = getelementptr inbounds %"struct.CFF::cs_interp_env_t", %"struct.CFF::cs_interp_env_t"* %0, i64 0, i32 2, i32 2
  store i32 %27, i32* %194, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %61, i64 21, i1 false)
  br label %195

195:                                              ; preds = %185, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7rmovetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %4 = bitcast double* %3 to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8
  %6 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %20, label %9, !prof !2

9:                                                ; preds = %2
  %10 = add i32 %7, -1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, %10
  br i1 %13, label %15, label %14, !prof !3

14:                                               ; preds = %9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %17 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %16, align 8
  %18 = zext i32 %10 to i64
  %19 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %17, i64 %18
  br label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %22

22:                                               ; preds = %20, %15, %14
  %23 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %20 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %14 ], [ %19, %15 ]
  %24 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %25 = load i8, i8* %24, align 8, !range !6
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %113, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 3, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %113, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %29
  br i1 %34, label %35, label %113, !prof !3

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 0, i32 0
  %37 = load double, double* %36, align 8
  %38 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %39 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 3, i32 2
  %40 = zext i32 %29 to i64
  %41 = load float*, float** %38, align 8
  %42 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %39, align 8
  %43 = add nsw i64 %40, -1
  %44 = and i64 %40, 3
  %45 = icmp ult i64 %43, 3
  br i1 %45, label %48, label %46

46:                                               ; preds = %35
  %47 = sub nsw i64 %40, %44
  br label %75

48:                                               ; preds = %75, %35
  %49 = phi double [ undef, %35 ], [ %109, %75 ]
  %50 = phi i64 [ 0, %35 ], [ %110, %75 ]
  %51 = phi double [ %37, %35 ], [ %109, %75 ]
  %52 = icmp eq i64 %44, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %48, %53
  %54 = phi i64 [ %64, %53 ], [ %50, %48 ]
  %55 = phi double [ %63, %53 ], [ %51, %48 ]
  %56 = phi i64 [ %65, %53 ], [ %44, %48 ]
  %57 = getelementptr inbounds float, float* %41, i64 %54
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %42, i64 %54, i32 0
  %60 = load double, double* %59, align 8
  %61 = fpext float %58 to double
  %62 = fmul double %60, %61
  %63 = fadd double %55, %62
  %64 = add nuw nsw i64 %54, 1
  %65 = add i64 %56, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %53, !llvm.loop !22

67:                                               ; preds = %53, %48
  %68 = phi double [ %49, %48 ], [ %63, %53 ]
  %69 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 2
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 1
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 3, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp slt i32 %72, 0
  store double %68, double* %36, align 8
  br i1 %73, label %113, label %74, !prof !2

74:                                               ; preds = %67
  store i32 0, i32* %28, align 4
  br label %113

75:                                               ; preds = %75, %46
  %76 = phi i64 [ 0, %46 ], [ %110, %75 ]
  %77 = phi double [ %37, %46 ], [ %109, %75 ]
  %78 = phi i64 [ %47, %46 ], [ %111, %75 ]
  %79 = getelementptr inbounds float, float* %41, i64 %76
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %42, i64 %76, i32 0
  %82 = load double, double* %81, align 8
  %83 = fpext float %80 to double
  %84 = fmul double %82, %83
  %85 = fadd double %77, %84
  %86 = or i64 %76, 1
  %87 = getelementptr inbounds float, float* %41, i64 %86
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %42, i64 %86, i32 0
  %90 = load double, double* %89, align 8
  %91 = fpext float %88 to double
  %92 = fmul double %90, %91
  %93 = fadd double %85, %92
  %94 = or i64 %76, 2
  %95 = getelementptr inbounds float, float* %41, i64 %94
  %96 = load float, float* %95, align 4
  %97 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %42, i64 %94, i32 0
  %98 = load double, double* %97, align 8
  %99 = fpext float %96 to double
  %100 = fmul double %98, %99
  %101 = fadd double %93, %100
  %102 = or i64 %76, 3
  %103 = getelementptr inbounds float, float* %41, i64 %102
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %42, i64 %102, i32 0
  %106 = load double, double* %105, align 8
  %107 = fpext float %104 to double
  %108 = fmul double %106, %107
  %109 = fadd double %101, %108
  %110 = add nuw nsw i64 %76, 4
  %111 = add i64 %78, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %48, label %75

113:                                              ; preds = %22, %27, %31, %67, %74
  %114 = load i32, i32* %6, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %127, label %116, !prof !2

116:                                              ; preds = %113
  %117 = add i32 %114, -1
  store i32 %117, i32* %6, align 4
  %118 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = icmp ugt i32 %119, %117
  br i1 %120, label %122, label %121, !prof !3

121:                                              ; preds = %116
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %129

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %124 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %123, align 8
  %125 = zext i32 %117 to i64
  %126 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %124, i64 %125
  br label %129

127:                                              ; preds = %113
  %128 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %128, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %129

129:                                              ; preds = %127, %122, %121
  %130 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %127 ], [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %121 ], [ %126, %122 ]
  %131 = load i8, i8* %24, align 8, !range !6
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %219, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %130, i64 0, i32 3, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %219, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, %135
  br i1 %140, label %141, label %219, !prof !3

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %130, i64 0, i32 0, i32 0
  %143 = load double, double* %142, align 8
  %144 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %145 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %130, i64 0, i32 3, i32 2
  %146 = zext i32 %135 to i64
  %147 = load float*, float** %144, align 8
  %148 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %145, align 8
  %149 = add nsw i64 %146, -1
  %150 = and i64 %146, 3
  %151 = icmp ult i64 %149, 3
  br i1 %151, label %154, label %152

152:                                              ; preds = %141
  %153 = sub nsw i64 %146, %150
  br label %181

154:                                              ; preds = %181, %141
  %155 = phi double [ undef, %141 ], [ %215, %181 ]
  %156 = phi i64 [ 0, %141 ], [ %216, %181 ]
  %157 = phi double [ %143, %141 ], [ %215, %181 ]
  %158 = icmp eq i64 %150, 0
  br i1 %158, label %173, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %170, %159 ], [ %156, %154 ]
  %161 = phi double [ %169, %159 ], [ %157, %154 ]
  %162 = phi i64 [ %171, %159 ], [ %150, %154 ]
  %163 = getelementptr inbounds float, float* %147, i64 %160
  %164 = load float, float* %163, align 4
  %165 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %148, i64 %160, i32 0
  %166 = load double, double* %165, align 8
  %167 = fpext float %164 to double
  %168 = fmul double %166, %167
  %169 = fadd double %161, %168
  %170 = add nuw nsw i64 %160, 1
  %171 = add i64 %162, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %159, !llvm.loop !23

173:                                              ; preds = %159, %154
  %174 = phi double [ %155, %154 ], [ %169, %159 ]
  %175 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %130, i64 0, i32 2
  store i32 0, i32* %175, align 4
  %176 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %130, i64 0, i32 1
  store i32 0, i32* %176, align 8
  %177 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %130, i64 0, i32 3, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = icmp slt i32 %178, 0
  store double %174, double* %142, align 8
  br i1 %179, label %219, label %180, !prof !2

180:                                              ; preds = %173
  store i32 0, i32* %134, align 4
  br label %219

181:                                              ; preds = %181, %152
  %182 = phi i64 [ 0, %152 ], [ %216, %181 ]
  %183 = phi double [ %143, %152 ], [ %215, %181 ]
  %184 = phi i64 [ %153, %152 ], [ %217, %181 ]
  %185 = getelementptr inbounds float, float* %147, i64 %182
  %186 = load float, float* %185, align 4
  %187 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %148, i64 %182, i32 0
  %188 = load double, double* %187, align 8
  %189 = fpext float %186 to double
  %190 = fmul double %188, %189
  %191 = fadd double %183, %190
  %192 = or i64 %182, 1
  %193 = getelementptr inbounds float, float* %147, i64 %192
  %194 = load float, float* %193, align 4
  %195 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %148, i64 %192, i32 0
  %196 = load double, double* %195, align 8
  %197 = fpext float %194 to double
  %198 = fmul double %196, %197
  %199 = fadd double %191, %198
  %200 = or i64 %182, 2
  %201 = getelementptr inbounds float, float* %147, i64 %200
  %202 = load float, float* %201, align 4
  %203 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %148, i64 %200, i32 0
  %204 = load double, double* %203, align 8
  %205 = fpext float %202 to double
  %206 = fmul double %204, %205
  %207 = fadd double %199, %206
  %208 = or i64 %182, 3
  %209 = getelementptr inbounds float, float* %147, i64 %208
  %210 = load float, float* %209, align 4
  %211 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %148, i64 %208, i32 0
  %212 = load double, double* %211, align 8
  %213 = fpext float %210 to double
  %214 = fmul double %212, %213
  %215 = fadd double %207, %214
  %216 = add nuw nsw i64 %182, 4
  %217 = add i64 %184, -4
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %154, label %181

219:                                              ; preds = %129, %133, %137, %173, %180
  %220 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %130, i64 0, i32 0, i32 0
  %221 = load double, double* %220, align 8
  %222 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %23, i64 0, i32 0, i32 0
  %223 = load double, double* %222, align 8
  %224 = insertelement <2 x double> undef, double %221, i32 0
  %225 = insertelement <2 x double> %224, double %223, i32 1
  %226 = fadd <2 x double> %5, %225
  %227 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  store i8 0, i8* %227, align 8
  %228 = bitcast double* %3 to <2 x double>*
  store <2 x double> %226, <2 x double>* %228, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7rlinetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %12 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %13 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %14 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %15 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %16 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %20 = bitcast double* %7 to <2 x double>*
  %21 = bitcast double* %7 to <2 x double>*
  br label %23

22:                                               ; preds = %281, %2
  ret void

23:                                               ; preds = %6, %281
  %24 = phi i32 [ %4, %6 ], [ %283, %281 ]
  %25 = phi i32 [ 2, %6 ], [ %282, %281 ]
  %26 = phi i32 [ 0, %6 ], [ %25, %281 ]
  %27 = load <2 x double>, <2 x double>* %20, align 8
  %28 = icmp ugt i32 %24, %26
  br i1 %28, label %30, label %29, !prof !3

29:                                               ; preds = %23
  store i8 1, i8* %9, align 8
  br label %30

30:                                               ; preds = %29, %23
  %31 = load i32, i32* %10, align 4
  %32 = icmp ugt i32 %31, %26
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %30
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %38

34:                                               ; preds = %30
  %35 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %11, align 8
  %36 = zext i32 %26 to i64
  %37 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %35, i64 %36
  br label %38

38:                                               ; preds = %34, %33
  %39 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %33 ], [ %37, %34 ]
  %40 = load i8, i8* %12, align 8, !range !6
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %126, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 0, i32 3, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %126, label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %13, align 4
  %48 = icmp eq i32 %47, %44
  br i1 %48, label %49, label %126, !prof !3

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 0, i32 0, i32 0
  %51 = load double, double* %50, align 8
  %52 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 0, i32 3, i32 2
  %53 = zext i32 %44 to i64
  %54 = load float*, float** %14, align 8
  %55 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %52, align 8
  %56 = add nsw i64 %53, -1
  %57 = and i64 %53, 3
  %58 = icmp ult i64 %56, 3
  br i1 %58, label %61, label %59

59:                                               ; preds = %49
  %60 = sub nsw i64 %53, %57
  br label %88

61:                                               ; preds = %88, %49
  %62 = phi double [ undef, %49 ], [ %122, %88 ]
  %63 = phi i64 [ 0, %49 ], [ %123, %88 ]
  %64 = phi double [ %51, %49 ], [ %122, %88 ]
  %65 = icmp eq i64 %57, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %61, %66
  %67 = phi i64 [ %77, %66 ], [ %63, %61 ]
  %68 = phi double [ %76, %66 ], [ %64, %61 ]
  %69 = phi i64 [ %78, %66 ], [ %57, %61 ]
  %70 = getelementptr inbounds float, float* %54, i64 %67
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %55, i64 %67, i32 0
  %73 = load double, double* %72, align 8
  %74 = fpext float %71 to double
  %75 = fmul double %73, %74
  %76 = fadd double %68, %75
  %77 = add nuw nsw i64 %67, 1
  %78 = add i64 %69, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %66, !llvm.loop !24

80:                                               ; preds = %66, %61
  %81 = phi double [ %62, %61 ], [ %76, %66 ]
  %82 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 0, i32 2
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 0, i32 1
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 0, i32 3, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %85, 0
  store double %81, double* %50, align 8
  br i1 %86, label %126, label %87, !prof !2

87:                                               ; preds = %80
  store i32 0, i32* %43, align 4
  br label %126

88:                                               ; preds = %88, %59
  %89 = phi i64 [ 0, %59 ], [ %123, %88 ]
  %90 = phi double [ %51, %59 ], [ %122, %88 ]
  %91 = phi i64 [ %60, %59 ], [ %124, %88 ]
  %92 = getelementptr inbounds float, float* %54, i64 %89
  %93 = load float, float* %92, align 4
  %94 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %55, i64 %89, i32 0
  %95 = load double, double* %94, align 8
  %96 = fpext float %93 to double
  %97 = fmul double %95, %96
  %98 = fadd double %90, %97
  %99 = or i64 %89, 1
  %100 = getelementptr inbounds float, float* %54, i64 %99
  %101 = load float, float* %100, align 4
  %102 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %55, i64 %99, i32 0
  %103 = load double, double* %102, align 8
  %104 = fpext float %101 to double
  %105 = fmul double %103, %104
  %106 = fadd double %98, %105
  %107 = or i64 %89, 2
  %108 = getelementptr inbounds float, float* %54, i64 %107
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %55, i64 %107, i32 0
  %111 = load double, double* %110, align 8
  %112 = fpext float %109 to double
  %113 = fmul double %111, %112
  %114 = fadd double %106, %113
  %115 = or i64 %89, 3
  %116 = getelementptr inbounds float, float* %54, i64 %115
  %117 = load float, float* %116, align 4
  %118 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %55, i64 %115, i32 0
  %119 = load double, double* %118, align 8
  %120 = fpext float %117 to double
  %121 = fmul double %119, %120
  %122 = fadd double %114, %121
  %123 = add nuw nsw i64 %89, 4
  %124 = add i64 %91, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %61, label %88

126:                                              ; preds = %38, %42, %46, %80, %87
  %127 = or i32 %26, 1
  %128 = load i32, i32* %3, align 4
  %129 = icmp ugt i32 %128, %127
  br i1 %129, label %131, label %130, !prof !3

130:                                              ; preds = %126
  store i8 1, i8* %9, align 8
  br label %131

131:                                              ; preds = %130, %126
  %132 = load i32, i32* %10, align 4
  %133 = icmp ugt i32 %132, %127
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %131
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %139

135:                                              ; preds = %131
  %136 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %11, align 8
  %137 = zext i32 %127 to i64
  %138 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 %137
  br label %139

139:                                              ; preds = %135, %134
  %140 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %134 ], [ %138, %135 ]
  %141 = load i8, i8* %12, align 8, !range !6
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %227, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 0, i32 3, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %227, label %147

147:                                              ; preds = %143
  %148 = load i32, i32* %13, align 4
  %149 = icmp eq i32 %148, %145
  br i1 %149, label %150, label %227, !prof !3

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 0, i32 0, i32 0
  %152 = load double, double* %151, align 8
  %153 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 0, i32 3, i32 2
  %154 = zext i32 %145 to i64
  %155 = load float*, float** %14, align 8
  %156 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %153, align 8
  %157 = add nsw i64 %154, -1
  %158 = and i64 %154, 3
  %159 = icmp ult i64 %157, 3
  br i1 %159, label %162, label %160

160:                                              ; preds = %150
  %161 = sub nsw i64 %154, %158
  br label %189

162:                                              ; preds = %189, %150
  %163 = phi double [ undef, %150 ], [ %223, %189 ]
  %164 = phi i64 [ 0, %150 ], [ %224, %189 ]
  %165 = phi double [ %152, %150 ], [ %223, %189 ]
  %166 = icmp eq i64 %158, 0
  br i1 %166, label %181, label %167

167:                                              ; preds = %162, %167
  %168 = phi i64 [ %178, %167 ], [ %164, %162 ]
  %169 = phi double [ %177, %167 ], [ %165, %162 ]
  %170 = phi i64 [ %179, %167 ], [ %158, %162 ]
  %171 = getelementptr inbounds float, float* %155, i64 %168
  %172 = load float, float* %171, align 4
  %173 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %156, i64 %168, i32 0
  %174 = load double, double* %173, align 8
  %175 = fpext float %172 to double
  %176 = fmul double %174, %175
  %177 = fadd double %169, %176
  %178 = add nuw nsw i64 %168, 1
  %179 = add i64 %170, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %167, !llvm.loop !25

181:                                              ; preds = %167, %162
  %182 = phi double [ %163, %162 ], [ %177, %167 ]
  %183 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 0, i32 2
  store i32 0, i32* %183, align 4
  %184 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 0, i32 1
  store i32 0, i32* %184, align 8
  %185 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 0, i32 3, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = icmp slt i32 %186, 0
  store double %182, double* %151, align 8
  br i1 %187, label %227, label %188, !prof !2

188:                                              ; preds = %181
  store i32 0, i32* %144, align 4
  br label %227

189:                                              ; preds = %189, %160
  %190 = phi i64 [ 0, %160 ], [ %224, %189 ]
  %191 = phi double [ %152, %160 ], [ %223, %189 ]
  %192 = phi i64 [ %161, %160 ], [ %225, %189 ]
  %193 = getelementptr inbounds float, float* %155, i64 %190
  %194 = load float, float* %193, align 4
  %195 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %156, i64 %190, i32 0
  %196 = load double, double* %195, align 8
  %197 = fpext float %194 to double
  %198 = fmul double %196, %197
  %199 = fadd double %191, %198
  %200 = or i64 %190, 1
  %201 = getelementptr inbounds float, float* %155, i64 %200
  %202 = load float, float* %201, align 4
  %203 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %156, i64 %200, i32 0
  %204 = load double, double* %203, align 8
  %205 = fpext float %202 to double
  %206 = fmul double %204, %205
  %207 = fadd double %199, %206
  %208 = or i64 %190, 2
  %209 = getelementptr inbounds float, float* %155, i64 %208
  %210 = load float, float* %209, align 4
  %211 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %156, i64 %208, i32 0
  %212 = load double, double* %211, align 8
  %213 = fpext float %210 to double
  %214 = fmul double %212, %213
  %215 = fadd double %207, %214
  %216 = or i64 %190, 3
  %217 = getelementptr inbounds float, float* %155, i64 %216
  %218 = load float, float* %217, align 4
  %219 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %156, i64 %216, i32 0
  %220 = load double, double* %219, align 8
  %221 = fpext float %218 to double
  %222 = fmul double %220, %221
  %223 = fadd double %215, %222
  %224 = add nuw nsw i64 %190, 4
  %225 = add i64 %192, -4
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %162, label %189

227:                                              ; preds = %139, %143, %147, %181, %188
  %228 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 0, i32 0, i32 0
  %229 = load double, double* %228, align 8
  %230 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 0, i32 0, i32 0
  %231 = load double, double* %230, align 8
  %232 = insertelement <2 x double> undef, double %229, i32 0
  %233 = insertelement <2 x double> %232, double %231, i32 1
  %234 = fadd <2 x double> %27, %233
  %235 = load i8, i8* %15, align 8, !range !6
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %259

237:                                              ; preds = %227
  store i8 1, i8* %15, align 8
  %238 = load double, double* %16, align 8
  %239 = load double, double* %7, align 8
  %240 = fcmp ogt double %238, %239
  br i1 %240, label %241, label %243

241:                                              ; preds = %237
  store double %239, double* %16, align 8
  %242 = load double, double* %7, align 8
  br label %243

243:                                              ; preds = %241, %237
  %244 = phi double [ %242, %241 ], [ %239, %237 ]
  %245 = load double, double* %17, align 8
  %246 = fcmp ogt double %244, %245
  br i1 %246, label %247, label %248

247:                                              ; preds = %243
  store double %244, double* %17, align 8
  br label %248

248:                                              ; preds = %247, %243
  %249 = load double, double* %18, align 8
  %250 = load double, double* %8, align 8
  %251 = fcmp ogt double %249, %250
  br i1 %251, label %252, label %254

252:                                              ; preds = %248
  store double %250, double* %18, align 8
  %253 = load double, double* %8, align 8
  br label %254

254:                                              ; preds = %252, %248
  %255 = phi double [ %253, %252 ], [ %250, %248 ]
  %256 = load double, double* %19, align 8
  %257 = fcmp ogt double %255, %256
  br i1 %257, label %258, label %259

258:                                              ; preds = %254
  store double %255, double* %19, align 8
  br label %259

259:                                              ; preds = %258, %254, %227
  store <2 x double> %234, <2 x double>* %21, align 8
  %260 = load double, double* %16, align 8
  %261 = extractelement <2 x double> %234, i32 0
  %262 = fcmp ogt double %260, %261
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  store double %261, double* %16, align 8
  %264 = load double, double* %7, align 8
  br label %265

265:                                              ; preds = %263, %259
  %266 = phi double [ %264, %263 ], [ %261, %259 ]
  %267 = load double, double* %17, align 8
  %268 = fcmp ogt double %266, %267
  br i1 %268, label %269, label %270

269:                                              ; preds = %265
  store double %266, double* %17, align 8
  br label %270

270:                                              ; preds = %269, %265
  %271 = load double, double* %18, align 8
  %272 = load double, double* %8, align 8
  %273 = fcmp ogt double %271, %272
  br i1 %273, label %274, label %276

274:                                              ; preds = %270
  store double %272, double* %18, align 8
  %275 = load double, double* %8, align 8
  br label %276

276:                                              ; preds = %274, %270
  %277 = phi double [ %275, %274 ], [ %272, %270 ]
  %278 = load double, double* %19, align 8
  %279 = fcmp ogt double %277, %278
  br i1 %279, label %280, label %281

280:                                              ; preds = %276
  store double %277, double* %19, align 8
  br label %281

281:                                              ; preds = %276, %280
  %282 = add i32 %25, 2
  %283 = load i32, i32* %3, align 4
  %284 = icmp ugt i32 %282, %283
  br i1 %284, label %22, label %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7hlinetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %327, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %12 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %13 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %14 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %15 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %16 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  br label %20

20:                                               ; preds = %6, %323
  %21 = phi i32 [ %4, %6 ], [ %325, %323 ]
  %22 = phi i32 [ 2, %6 ], [ %324, %323 ]
  %23 = phi i32 [ 0, %6 ], [ %22, %323 ]
  %24 = load double, double* %7, align 8
  %25 = load double, double* %8, align 8
  %26 = icmp ugt i32 %21, %23
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %20
  store i8 1, i8* %9, align 8
  br label %28

28:                                               ; preds = %27, %20
  %29 = load i32, i32* %10, align 4
  %30 = icmp ugt i32 %29, %23
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %36

32:                                               ; preds = %28
  %33 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %11, align 8
  %34 = zext i32 %23 to i64
  %35 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %33, i64 %34
  br label %36

36:                                               ; preds = %32, %31
  %37 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %31 ], [ %35, %32 ]
  %38 = load i8, i8* %12, align 8, !range !6
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %124, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 3, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %124, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %13, align 4
  %46 = icmp eq i32 %45, %42
  br i1 %46, label %47, label %124, !prof !3

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 0, i32 0
  %49 = load double, double* %48, align 8
  %50 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 3, i32 2
  %51 = zext i32 %42 to i64
  %52 = load float*, float** %14, align 8
  %53 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %50, align 8
  %54 = add nsw i64 %51, -1
  %55 = and i64 %51, 3
  %56 = icmp ult i64 %54, 3
  br i1 %56, label %59, label %57

57:                                               ; preds = %47
  %58 = sub nsw i64 %51, %55
  br label %86

59:                                               ; preds = %86, %47
  %60 = phi double [ undef, %47 ], [ %120, %86 ]
  %61 = phi i64 [ 0, %47 ], [ %121, %86 ]
  %62 = phi double [ %49, %47 ], [ %120, %86 ]
  %63 = icmp eq i64 %55, 0
  br i1 %63, label %78, label %64

64:                                               ; preds = %59, %64
  %65 = phi i64 [ %75, %64 ], [ %61, %59 ]
  %66 = phi double [ %74, %64 ], [ %62, %59 ]
  %67 = phi i64 [ %76, %64 ], [ %55, %59 ]
  %68 = getelementptr inbounds float, float* %52, i64 %65
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %65, i32 0
  %71 = load double, double* %70, align 8
  %72 = fpext float %69 to double
  %73 = fmul double %71, %72
  %74 = fadd double %66, %73
  %75 = add nuw nsw i64 %65, 1
  %76 = add i64 %67, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %64, !llvm.loop !26

78:                                               ; preds = %64, %59
  %79 = phi double [ %60, %59 ], [ %74, %64 ]
  %80 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 2
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 1
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 3, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp slt i32 %83, 0
  store double %79, double* %48, align 8
  br i1 %84, label %124, label %85, !prof !2

85:                                               ; preds = %78
  store i32 0, i32* %41, align 4
  br label %124

86:                                               ; preds = %86, %57
  %87 = phi i64 [ 0, %57 ], [ %121, %86 ]
  %88 = phi double [ %49, %57 ], [ %120, %86 ]
  %89 = phi i64 [ %58, %57 ], [ %122, %86 ]
  %90 = getelementptr inbounds float, float* %52, i64 %87
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %87, i32 0
  %93 = load double, double* %92, align 8
  %94 = fpext float %91 to double
  %95 = fmul double %93, %94
  %96 = fadd double %88, %95
  %97 = or i64 %87, 1
  %98 = getelementptr inbounds float, float* %52, i64 %97
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %97, i32 0
  %101 = load double, double* %100, align 8
  %102 = fpext float %99 to double
  %103 = fmul double %101, %102
  %104 = fadd double %96, %103
  %105 = or i64 %87, 2
  %106 = getelementptr inbounds float, float* %52, i64 %105
  %107 = load float, float* %106, align 4
  %108 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %105, i32 0
  %109 = load double, double* %108, align 8
  %110 = fpext float %107 to double
  %111 = fmul double %109, %110
  %112 = fadd double %104, %111
  %113 = or i64 %87, 3
  %114 = getelementptr inbounds float, float* %52, i64 %113
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %113, i32 0
  %117 = load double, double* %116, align 8
  %118 = fpext float %115 to double
  %119 = fmul double %117, %118
  %120 = fadd double %112, %119
  %121 = add nuw nsw i64 %87, 4
  %122 = add i64 %89, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %59, label %86

124:                                              ; preds = %36, %40, %44, %78, %85
  %125 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 0, i32 0
  %126 = load double, double* %125, align 8
  %127 = fadd double %24, %126
  %128 = load i8, i8* %15, align 8, !range !6
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %152

130:                                              ; preds = %124
  store i8 1, i8* %15, align 8
  %131 = load double, double* %16, align 8
  %132 = load double, double* %7, align 8
  %133 = fcmp ogt double %131, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  store double %132, double* %16, align 8
  %135 = load double, double* %7, align 8
  br label %136

136:                                              ; preds = %134, %130
  %137 = phi double [ %135, %134 ], [ %132, %130 ]
  %138 = load double, double* %17, align 8
  %139 = fcmp ogt double %137, %138
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  store double %137, double* %17, align 8
  br label %141

141:                                              ; preds = %140, %136
  %142 = load double, double* %18, align 8
  %143 = load double, double* %8, align 8
  %144 = fcmp ogt double %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  store double %143, double* %18, align 8
  %146 = load double, double* %8, align 8
  br label %147

147:                                              ; preds = %145, %141
  %148 = phi double [ %146, %145 ], [ %143, %141 ]
  %149 = load double, double* %19, align 8
  %150 = fcmp ogt double %148, %149
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  store double %148, double* %19, align 8
  br label %152

152:                                              ; preds = %151, %147, %124
  store double %127, double* %7, align 8
  store double %25, double* %8, align 8
  %153 = load double, double* %16, align 8
  %154 = fcmp ogt double %153, %127
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  store double %127, double* %16, align 8
  %156 = load double, double* %7, align 8
  br label %157

157:                                              ; preds = %155, %152
  %158 = phi double [ %156, %155 ], [ %127, %152 ]
  %159 = load double, double* %17, align 8
  %160 = fcmp ogt double %158, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %157
  store double %158, double* %17, align 8
  br label %162

162:                                              ; preds = %161, %157
  %163 = load double, double* %18, align 8
  %164 = load double, double* %8, align 8
  %165 = fcmp ogt double %163, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  store double %164, double* %18, align 8
  %167 = load double, double* %8, align 8
  br label %168

168:                                              ; preds = %166, %162
  %169 = phi double [ %167, %166 ], [ %164, %162 ]
  %170 = load double, double* %19, align 8
  %171 = fcmp ogt double %169, %170
  br i1 %171, label %172, label %173

172:                                              ; preds = %168
  store double %169, double* %19, align 8
  br label %173

173:                                              ; preds = %168, %172
  %174 = or i32 %23, 1
  %175 = load i32, i32* %3, align 4
  %176 = icmp ugt i32 %175, %174
  br i1 %176, label %178, label %177, !prof !3

177:                                              ; preds = %173
  store i8 1, i8* %9, align 8
  br label %178

178:                                              ; preds = %177, %173
  %179 = load i32, i32* %10, align 4
  %180 = icmp ugt i32 %179, %174
  br i1 %180, label %182, label %181, !prof !3

181:                                              ; preds = %178
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %186

182:                                              ; preds = %178
  %183 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %11, align 8
  %184 = zext i32 %174 to i64
  %185 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %183, i64 %184
  br label %186

186:                                              ; preds = %182, %181
  %187 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %181 ], [ %185, %182 ]
  %188 = load i8, i8* %12, align 8, !range !6
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %274, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 3, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %274, label %194

194:                                              ; preds = %190
  %195 = load i32, i32* %13, align 4
  %196 = icmp eq i32 %195, %192
  br i1 %196, label %197, label %274, !prof !3

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 0, i32 0
  %199 = load double, double* %198, align 8
  %200 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 3, i32 2
  %201 = zext i32 %192 to i64
  %202 = load float*, float** %14, align 8
  %203 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %200, align 8
  %204 = add nsw i64 %201, -1
  %205 = and i64 %201, 3
  %206 = icmp ult i64 %204, 3
  br i1 %206, label %209, label %207

207:                                              ; preds = %197
  %208 = sub nsw i64 %201, %205
  br label %236

209:                                              ; preds = %236, %197
  %210 = phi double [ undef, %197 ], [ %270, %236 ]
  %211 = phi i64 [ 0, %197 ], [ %271, %236 ]
  %212 = phi double [ %199, %197 ], [ %270, %236 ]
  %213 = icmp eq i64 %205, 0
  br i1 %213, label %228, label %214

214:                                              ; preds = %209, %214
  %215 = phi i64 [ %225, %214 ], [ %211, %209 ]
  %216 = phi double [ %224, %214 ], [ %212, %209 ]
  %217 = phi i64 [ %226, %214 ], [ %205, %209 ]
  %218 = getelementptr inbounds float, float* %202, i64 %215
  %219 = load float, float* %218, align 4
  %220 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %215, i32 0
  %221 = load double, double* %220, align 8
  %222 = fpext float %219 to double
  %223 = fmul double %221, %222
  %224 = fadd double %216, %223
  %225 = add nuw nsw i64 %215, 1
  %226 = add i64 %217, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %214, !llvm.loop !27

228:                                              ; preds = %214, %209
  %229 = phi double [ %210, %209 ], [ %224, %214 ]
  %230 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 2
  store i32 0, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 1
  store i32 0, i32* %231, align 8
  %232 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 3, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp slt i32 %233, 0
  store double %229, double* %198, align 8
  br i1 %234, label %274, label %235, !prof !2

235:                                              ; preds = %228
  store i32 0, i32* %191, align 4
  br label %274

236:                                              ; preds = %236, %207
  %237 = phi i64 [ 0, %207 ], [ %271, %236 ]
  %238 = phi double [ %199, %207 ], [ %270, %236 ]
  %239 = phi i64 [ %208, %207 ], [ %272, %236 ]
  %240 = getelementptr inbounds float, float* %202, i64 %237
  %241 = load float, float* %240, align 4
  %242 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %237, i32 0
  %243 = load double, double* %242, align 8
  %244 = fpext float %241 to double
  %245 = fmul double %243, %244
  %246 = fadd double %238, %245
  %247 = or i64 %237, 1
  %248 = getelementptr inbounds float, float* %202, i64 %247
  %249 = load float, float* %248, align 4
  %250 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %247, i32 0
  %251 = load double, double* %250, align 8
  %252 = fpext float %249 to double
  %253 = fmul double %251, %252
  %254 = fadd double %246, %253
  %255 = or i64 %237, 2
  %256 = getelementptr inbounds float, float* %202, i64 %255
  %257 = load float, float* %256, align 4
  %258 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %255, i32 0
  %259 = load double, double* %258, align 8
  %260 = fpext float %257 to double
  %261 = fmul double %259, %260
  %262 = fadd double %254, %261
  %263 = or i64 %237, 3
  %264 = getelementptr inbounds float, float* %202, i64 %263
  %265 = load float, float* %264, align 4
  %266 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %263, i32 0
  %267 = load double, double* %266, align 8
  %268 = fpext float %265 to double
  %269 = fmul double %267, %268
  %270 = fadd double %262, %269
  %271 = add nuw nsw i64 %237, 4
  %272 = add i64 %239, -4
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %209, label %236

274:                                              ; preds = %186, %190, %194, %228, %235
  %275 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 0, i32 0
  %276 = load double, double* %275, align 8
  %277 = fadd double %25, %276
  %278 = load i8, i8* %15, align 8, !range !6
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %280, label %302

280:                                              ; preds = %274
  store i8 1, i8* %15, align 8
  %281 = load double, double* %16, align 8
  %282 = load double, double* %7, align 8
  %283 = fcmp ogt double %281, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  store double %282, double* %16, align 8
  %285 = load double, double* %7, align 8
  br label %286

286:                                              ; preds = %284, %280
  %287 = phi double [ %285, %284 ], [ %282, %280 ]
  %288 = load double, double* %17, align 8
  %289 = fcmp ogt double %287, %288
  br i1 %289, label %290, label %291

290:                                              ; preds = %286
  store double %287, double* %17, align 8
  br label %291

291:                                              ; preds = %290, %286
  %292 = load double, double* %18, align 8
  %293 = load double, double* %8, align 8
  %294 = fcmp ogt double %292, %293
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  store double %293, double* %18, align 8
  %296 = load double, double* %8, align 8
  br label %297

297:                                              ; preds = %295, %291
  %298 = phi double [ %296, %295 ], [ %293, %291 ]
  %299 = load double, double* %19, align 8
  %300 = fcmp ogt double %298, %299
  br i1 %300, label %301, label %302

301:                                              ; preds = %297
  store double %298, double* %19, align 8
  br label %302

302:                                              ; preds = %301, %297, %274
  store double %127, double* %7, align 8
  store double %277, double* %8, align 8
  %303 = load double, double* %16, align 8
  %304 = fcmp ogt double %303, %127
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  store double %127, double* %16, align 8
  %306 = load double, double* %7, align 8
  br label %307

307:                                              ; preds = %305, %302
  %308 = phi double [ %306, %305 ], [ %127, %302 ]
  %309 = load double, double* %17, align 8
  %310 = fcmp ogt double %308, %309
  br i1 %310, label %311, label %312

311:                                              ; preds = %307
  store double %308, double* %17, align 8
  br label %312

312:                                              ; preds = %311, %307
  %313 = load double, double* %18, align 8
  %314 = load double, double* %8, align 8
  %315 = fcmp ogt double %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store double %314, double* %18, align 8
  %317 = load double, double* %8, align 8
  br label %318

318:                                              ; preds = %316, %312
  %319 = phi double [ %317, %316 ], [ %314, %312 ]
  %320 = load double, double* %19, align 8
  %321 = fcmp ogt double %319, %320
  br i1 %321, label %322, label %323

322:                                              ; preds = %318
  store double %319, double* %19, align 8
  br label %323

323:                                              ; preds = %318, %322
  %324 = add i32 %22, 2
  %325 = load i32, i32* %3, align 4
  %326 = icmp ugt i32 %324, %325
  br i1 %326, label %327, label %20

327:                                              ; preds = %323, %2
  %328 = phi i32 [ 0, %2 ], [ %22, %323 ]
  %329 = phi i32 [ %4, %2 ], [ %325, %323 ]
  %330 = icmp ult i32 %328, %329
  br i1 %330, label %331, label %495

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %333 = load double, double* %332, align 8
  %334 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %335 = bitcast double* %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = icmp ugt i32 %338, %328
  br i1 %339, label %341, label %340, !prof !3

340:                                              ; preds = %331
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %346

341:                                              ; preds = %331
  %342 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %343 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %342, align 8
  %344 = zext i32 %328 to i64
  %345 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %343, i64 %344
  br label %346

346:                                              ; preds = %341, %340
  %347 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %340 ], [ %345, %341 ]
  %348 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %349 = load i8, i8* %348, align 8, !range !6
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %437, label %351

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 3, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %437, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = icmp eq i32 %357, %353
  br i1 %358, label %359, label %437, !prof !3

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 0, i32 0
  %361 = load double, double* %360, align 8
  %362 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %363 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 3, i32 2
  %364 = zext i32 %353 to i64
  %365 = load float*, float** %362, align 8
  %366 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %363, align 8
  %367 = add nsw i64 %364, -1
  %368 = and i64 %364, 3
  %369 = icmp ult i64 %367, 3
  br i1 %369, label %372, label %370

370:                                              ; preds = %359
  %371 = sub nsw i64 %364, %368
  br label %399

372:                                              ; preds = %399, %359
  %373 = phi double [ undef, %359 ], [ %433, %399 ]
  %374 = phi i64 [ 0, %359 ], [ %434, %399 ]
  %375 = phi double [ %361, %359 ], [ %433, %399 ]
  %376 = icmp eq i64 %368, 0
  br i1 %376, label %391, label %377

377:                                              ; preds = %372, %377
  %378 = phi i64 [ %388, %377 ], [ %374, %372 ]
  %379 = phi double [ %387, %377 ], [ %375, %372 ]
  %380 = phi i64 [ %389, %377 ], [ %368, %372 ]
  %381 = getelementptr inbounds float, float* %365, i64 %378
  %382 = load float, float* %381, align 4
  %383 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %378, i32 0
  %384 = load double, double* %383, align 8
  %385 = fpext float %382 to double
  %386 = fmul double %384, %385
  %387 = fadd double %379, %386
  %388 = add nuw nsw i64 %378, 1
  %389 = add i64 %380, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %377, !llvm.loop !28

391:                                              ; preds = %377, %372
  %392 = phi double [ %373, %372 ], [ %387, %377 ]
  %393 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 2
  store i32 0, i32* %393, align 4
  %394 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 1
  store i32 0, i32* %394, align 8
  %395 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 3, i32 0
  %396 = load i32, i32* %395, align 8
  %397 = icmp slt i32 %396, 0
  store double %392, double* %360, align 8
  br i1 %397, label %437, label %398, !prof !2

398:                                              ; preds = %391
  store i32 0, i32* %352, align 4
  br label %437

399:                                              ; preds = %399, %370
  %400 = phi i64 [ 0, %370 ], [ %434, %399 ]
  %401 = phi double [ %361, %370 ], [ %433, %399 ]
  %402 = phi i64 [ %371, %370 ], [ %435, %399 ]
  %403 = getelementptr inbounds float, float* %365, i64 %400
  %404 = load float, float* %403, align 4
  %405 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %400, i32 0
  %406 = load double, double* %405, align 8
  %407 = fpext float %404 to double
  %408 = fmul double %406, %407
  %409 = fadd double %401, %408
  %410 = or i64 %400, 1
  %411 = getelementptr inbounds float, float* %365, i64 %410
  %412 = load float, float* %411, align 4
  %413 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %410, i32 0
  %414 = load double, double* %413, align 8
  %415 = fpext float %412 to double
  %416 = fmul double %414, %415
  %417 = fadd double %409, %416
  %418 = or i64 %400, 2
  %419 = getelementptr inbounds float, float* %365, i64 %418
  %420 = load float, float* %419, align 4
  %421 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %418, i32 0
  %422 = load double, double* %421, align 8
  %423 = fpext float %420 to double
  %424 = fmul double %422, %423
  %425 = fadd double %417, %424
  %426 = or i64 %400, 3
  %427 = getelementptr inbounds float, float* %365, i64 %426
  %428 = load float, float* %427, align 4
  %429 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %426, i32 0
  %430 = load double, double* %429, align 8
  %431 = fpext float %428 to double
  %432 = fmul double %430, %431
  %433 = fadd double %425, %432
  %434 = add nuw nsw i64 %400, 4
  %435 = add i64 %402, -4
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %372, label %399

437:                                              ; preds = %346, %351, %355, %391, %398
  %438 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 0, i32 0
  %439 = load double, double* %438, align 8
  %440 = fadd double %333, %439
  %441 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %442 = load i8, i8* %441, align 8, !range !6
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %444, label %470

444:                                              ; preds = %437
  store i8 1, i8* %441, align 8
  %445 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %446 = load double, double* %445, align 8
  %447 = load double, double* %332, align 8
  %448 = fcmp ogt double %446, %447
  br i1 %448, label %449, label %451

449:                                              ; preds = %444
  store double %447, double* %445, align 8
  %450 = load double, double* %332, align 8
  br label %451

451:                                              ; preds = %449, %444
  %452 = phi double [ %450, %449 ], [ %447, %444 ]
  %453 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %454 = load double, double* %453, align 8
  %455 = fcmp ogt double %452, %454
  br i1 %455, label %456, label %457

456:                                              ; preds = %451
  store double %452, double* %453, align 8
  br label %457

457:                                              ; preds = %456, %451
  %458 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %459 = load double, double* %458, align 8
  %460 = load double, double* %334, align 8
  %461 = fcmp ogt double %459, %460
  br i1 %461, label %462, label %464

462:                                              ; preds = %457
  store double %460, double* %458, align 8
  %463 = load double, double* %334, align 8
  br label %464

464:                                              ; preds = %462, %457
  %465 = phi double [ %463, %462 ], [ %460, %457 ]
  %466 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %467 = load double, double* %466, align 8
  %468 = fcmp ogt double %465, %467
  br i1 %468, label %469, label %470

469:                                              ; preds = %464
  store double %465, double* %466, align 8
  br label %470

470:                                              ; preds = %469, %464, %437
  store double %440, double* %332, align 8
  store i64 %336, i64* %335, align 8
  %471 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %472 = load double, double* %471, align 8
  %473 = fcmp ogt double %472, %440
  br i1 %473, label %474, label %476

474:                                              ; preds = %470
  store double %440, double* %471, align 8
  %475 = load double, double* %332, align 8
  br label %476

476:                                              ; preds = %474, %470
  %477 = phi double [ %475, %474 ], [ %440, %470 ]
  %478 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %479 = load double, double* %478, align 8
  %480 = fcmp ogt double %477, %479
  br i1 %480, label %481, label %482

481:                                              ; preds = %476
  store double %477, double* %478, align 8
  br label %482

482:                                              ; preds = %481, %476
  %483 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %484 = load double, double* %483, align 8
  %485 = load double, double* %334, align 8
  %486 = fcmp ogt double %484, %485
  br i1 %486, label %487, label %489

487:                                              ; preds = %482
  store double %485, double* %483, align 8
  %488 = load double, double* %334, align 8
  br label %489

489:                                              ; preds = %487, %482
  %490 = phi double [ %488, %487 ], [ %485, %482 ]
  %491 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %492 = load double, double* %491, align 8
  %493 = fcmp ogt double %490, %492
  br i1 %493, label %494, label %495

494:                                              ; preds = %489
  store double %490, double* %491, align 8
  br label %495

495:                                              ; preds = %494, %489, %327
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE7vlinetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %327, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %12 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %13 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %14 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %15 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %16 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  br label %20

20:                                               ; preds = %6, %323
  %21 = phi i32 [ %4, %6 ], [ %325, %323 ]
  %22 = phi i32 [ 2, %6 ], [ %324, %323 ]
  %23 = phi i32 [ 0, %6 ], [ %22, %323 ]
  %24 = load double, double* %7, align 8
  %25 = load double, double* %8, align 8
  %26 = icmp ugt i32 %21, %23
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %20
  store i8 1, i8* %9, align 8
  br label %28

28:                                               ; preds = %27, %20
  %29 = load i32, i32* %10, align 4
  %30 = icmp ugt i32 %29, %23
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %36

32:                                               ; preds = %28
  %33 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %11, align 8
  %34 = zext i32 %23 to i64
  %35 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %33, i64 %34
  br label %36

36:                                               ; preds = %32, %31
  %37 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %31 ], [ %35, %32 ]
  %38 = load i8, i8* %12, align 8, !range !6
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %124, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 3, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %124, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %13, align 4
  %46 = icmp eq i32 %45, %42
  br i1 %46, label %47, label %124, !prof !3

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 0, i32 0
  %49 = load double, double* %48, align 8
  %50 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 3, i32 2
  %51 = zext i32 %42 to i64
  %52 = load float*, float** %14, align 8
  %53 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %50, align 8
  %54 = add nsw i64 %51, -1
  %55 = and i64 %51, 3
  %56 = icmp ult i64 %54, 3
  br i1 %56, label %59, label %57

57:                                               ; preds = %47
  %58 = sub nsw i64 %51, %55
  br label %86

59:                                               ; preds = %86, %47
  %60 = phi double [ undef, %47 ], [ %120, %86 ]
  %61 = phi i64 [ 0, %47 ], [ %121, %86 ]
  %62 = phi double [ %49, %47 ], [ %120, %86 ]
  %63 = icmp eq i64 %55, 0
  br i1 %63, label %78, label %64

64:                                               ; preds = %59, %64
  %65 = phi i64 [ %75, %64 ], [ %61, %59 ]
  %66 = phi double [ %74, %64 ], [ %62, %59 ]
  %67 = phi i64 [ %76, %64 ], [ %55, %59 ]
  %68 = getelementptr inbounds float, float* %52, i64 %65
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %65, i32 0
  %71 = load double, double* %70, align 8
  %72 = fpext float %69 to double
  %73 = fmul double %71, %72
  %74 = fadd double %66, %73
  %75 = add nuw nsw i64 %65, 1
  %76 = add i64 %67, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %64, !llvm.loop !29

78:                                               ; preds = %64, %59
  %79 = phi double [ %60, %59 ], [ %74, %64 ]
  %80 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 2
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 1
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 3, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp slt i32 %83, 0
  store double %79, double* %48, align 8
  br i1 %84, label %124, label %85, !prof !2

85:                                               ; preds = %78
  store i32 0, i32* %41, align 4
  br label %124

86:                                               ; preds = %86, %57
  %87 = phi i64 [ 0, %57 ], [ %121, %86 ]
  %88 = phi double [ %49, %57 ], [ %120, %86 ]
  %89 = phi i64 [ %58, %57 ], [ %122, %86 ]
  %90 = getelementptr inbounds float, float* %52, i64 %87
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %87, i32 0
  %93 = load double, double* %92, align 8
  %94 = fpext float %91 to double
  %95 = fmul double %93, %94
  %96 = fadd double %88, %95
  %97 = or i64 %87, 1
  %98 = getelementptr inbounds float, float* %52, i64 %97
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %97, i32 0
  %101 = load double, double* %100, align 8
  %102 = fpext float %99 to double
  %103 = fmul double %101, %102
  %104 = fadd double %96, %103
  %105 = or i64 %87, 2
  %106 = getelementptr inbounds float, float* %52, i64 %105
  %107 = load float, float* %106, align 4
  %108 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %105, i32 0
  %109 = load double, double* %108, align 8
  %110 = fpext float %107 to double
  %111 = fmul double %109, %110
  %112 = fadd double %104, %111
  %113 = or i64 %87, 3
  %114 = getelementptr inbounds float, float* %52, i64 %113
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %53, i64 %113, i32 0
  %117 = load double, double* %116, align 8
  %118 = fpext float %115 to double
  %119 = fmul double %117, %118
  %120 = fadd double %112, %119
  %121 = add nuw nsw i64 %87, 4
  %122 = add i64 %89, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %59, label %86

124:                                              ; preds = %36, %40, %44, %78, %85
  %125 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %37, i64 0, i32 0, i32 0
  %126 = load double, double* %125, align 8
  %127 = fadd double %25, %126
  %128 = load i8, i8* %15, align 8, !range !6
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %152

130:                                              ; preds = %124
  store i8 1, i8* %15, align 8
  %131 = load double, double* %16, align 8
  %132 = load double, double* %7, align 8
  %133 = fcmp ogt double %131, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  store double %132, double* %16, align 8
  %135 = load double, double* %7, align 8
  br label %136

136:                                              ; preds = %134, %130
  %137 = phi double [ %135, %134 ], [ %132, %130 ]
  %138 = load double, double* %17, align 8
  %139 = fcmp ogt double %137, %138
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  store double %137, double* %17, align 8
  br label %141

141:                                              ; preds = %140, %136
  %142 = load double, double* %18, align 8
  %143 = load double, double* %8, align 8
  %144 = fcmp ogt double %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  store double %143, double* %18, align 8
  %146 = load double, double* %8, align 8
  br label %147

147:                                              ; preds = %145, %141
  %148 = phi double [ %146, %145 ], [ %143, %141 ]
  %149 = load double, double* %19, align 8
  %150 = fcmp ogt double %148, %149
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  store double %148, double* %19, align 8
  br label %152

152:                                              ; preds = %151, %147, %124
  store double %24, double* %7, align 8
  store double %127, double* %8, align 8
  %153 = load double, double* %16, align 8
  %154 = fcmp ogt double %153, %24
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  store double %24, double* %16, align 8
  %156 = load double, double* %7, align 8
  br label %157

157:                                              ; preds = %155, %152
  %158 = phi double [ %156, %155 ], [ %24, %152 ]
  %159 = load double, double* %17, align 8
  %160 = fcmp ogt double %158, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %157
  store double %158, double* %17, align 8
  br label %162

162:                                              ; preds = %161, %157
  %163 = load double, double* %18, align 8
  %164 = load double, double* %8, align 8
  %165 = fcmp ogt double %163, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  store double %164, double* %18, align 8
  %167 = load double, double* %8, align 8
  br label %168

168:                                              ; preds = %166, %162
  %169 = phi double [ %167, %166 ], [ %164, %162 ]
  %170 = load double, double* %19, align 8
  %171 = fcmp ogt double %169, %170
  br i1 %171, label %172, label %173

172:                                              ; preds = %168
  store double %169, double* %19, align 8
  br label %173

173:                                              ; preds = %168, %172
  %174 = or i32 %23, 1
  %175 = load i32, i32* %3, align 4
  %176 = icmp ugt i32 %175, %174
  br i1 %176, label %178, label %177, !prof !3

177:                                              ; preds = %173
  store i8 1, i8* %9, align 8
  br label %178

178:                                              ; preds = %177, %173
  %179 = load i32, i32* %10, align 4
  %180 = icmp ugt i32 %179, %174
  br i1 %180, label %182, label %181, !prof !3

181:                                              ; preds = %178
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %186

182:                                              ; preds = %178
  %183 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %11, align 8
  %184 = zext i32 %174 to i64
  %185 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %183, i64 %184
  br label %186

186:                                              ; preds = %182, %181
  %187 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %181 ], [ %185, %182 ]
  %188 = load i8, i8* %12, align 8, !range !6
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %274, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 3, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %274, label %194

194:                                              ; preds = %190
  %195 = load i32, i32* %13, align 4
  %196 = icmp eq i32 %195, %192
  br i1 %196, label %197, label %274, !prof !3

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 0, i32 0
  %199 = load double, double* %198, align 8
  %200 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 3, i32 2
  %201 = zext i32 %192 to i64
  %202 = load float*, float** %14, align 8
  %203 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %200, align 8
  %204 = add nsw i64 %201, -1
  %205 = and i64 %201, 3
  %206 = icmp ult i64 %204, 3
  br i1 %206, label %209, label %207

207:                                              ; preds = %197
  %208 = sub nsw i64 %201, %205
  br label %236

209:                                              ; preds = %236, %197
  %210 = phi double [ undef, %197 ], [ %270, %236 ]
  %211 = phi i64 [ 0, %197 ], [ %271, %236 ]
  %212 = phi double [ %199, %197 ], [ %270, %236 ]
  %213 = icmp eq i64 %205, 0
  br i1 %213, label %228, label %214

214:                                              ; preds = %209, %214
  %215 = phi i64 [ %225, %214 ], [ %211, %209 ]
  %216 = phi double [ %224, %214 ], [ %212, %209 ]
  %217 = phi i64 [ %226, %214 ], [ %205, %209 ]
  %218 = getelementptr inbounds float, float* %202, i64 %215
  %219 = load float, float* %218, align 4
  %220 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %215, i32 0
  %221 = load double, double* %220, align 8
  %222 = fpext float %219 to double
  %223 = fmul double %221, %222
  %224 = fadd double %216, %223
  %225 = add nuw nsw i64 %215, 1
  %226 = add i64 %217, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %214, !llvm.loop !30

228:                                              ; preds = %214, %209
  %229 = phi double [ %210, %209 ], [ %224, %214 ]
  %230 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 2
  store i32 0, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 1
  store i32 0, i32* %231, align 8
  %232 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 3, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp slt i32 %233, 0
  store double %229, double* %198, align 8
  br i1 %234, label %274, label %235, !prof !2

235:                                              ; preds = %228
  store i32 0, i32* %191, align 4
  br label %274

236:                                              ; preds = %236, %207
  %237 = phi i64 [ 0, %207 ], [ %271, %236 ]
  %238 = phi double [ %199, %207 ], [ %270, %236 ]
  %239 = phi i64 [ %208, %207 ], [ %272, %236 ]
  %240 = getelementptr inbounds float, float* %202, i64 %237
  %241 = load float, float* %240, align 4
  %242 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %237, i32 0
  %243 = load double, double* %242, align 8
  %244 = fpext float %241 to double
  %245 = fmul double %243, %244
  %246 = fadd double %238, %245
  %247 = or i64 %237, 1
  %248 = getelementptr inbounds float, float* %202, i64 %247
  %249 = load float, float* %248, align 4
  %250 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %247, i32 0
  %251 = load double, double* %250, align 8
  %252 = fpext float %249 to double
  %253 = fmul double %251, %252
  %254 = fadd double %246, %253
  %255 = or i64 %237, 2
  %256 = getelementptr inbounds float, float* %202, i64 %255
  %257 = load float, float* %256, align 4
  %258 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %255, i32 0
  %259 = load double, double* %258, align 8
  %260 = fpext float %257 to double
  %261 = fmul double %259, %260
  %262 = fadd double %254, %261
  %263 = or i64 %237, 3
  %264 = getelementptr inbounds float, float* %202, i64 %263
  %265 = load float, float* %264, align 4
  %266 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %203, i64 %263, i32 0
  %267 = load double, double* %266, align 8
  %268 = fpext float %265 to double
  %269 = fmul double %267, %268
  %270 = fadd double %262, %269
  %271 = add nuw nsw i64 %237, 4
  %272 = add i64 %239, -4
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %209, label %236

274:                                              ; preds = %186, %190, %194, %228, %235
  %275 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %187, i64 0, i32 0, i32 0
  %276 = load double, double* %275, align 8
  %277 = fadd double %24, %276
  %278 = load i8, i8* %15, align 8, !range !6
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %280, label %302

280:                                              ; preds = %274
  store i8 1, i8* %15, align 8
  %281 = load double, double* %16, align 8
  %282 = load double, double* %7, align 8
  %283 = fcmp ogt double %281, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  store double %282, double* %16, align 8
  %285 = load double, double* %7, align 8
  br label %286

286:                                              ; preds = %284, %280
  %287 = phi double [ %285, %284 ], [ %282, %280 ]
  %288 = load double, double* %17, align 8
  %289 = fcmp ogt double %287, %288
  br i1 %289, label %290, label %291

290:                                              ; preds = %286
  store double %287, double* %17, align 8
  br label %291

291:                                              ; preds = %290, %286
  %292 = load double, double* %18, align 8
  %293 = load double, double* %8, align 8
  %294 = fcmp ogt double %292, %293
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  store double %293, double* %18, align 8
  %296 = load double, double* %8, align 8
  br label %297

297:                                              ; preds = %295, %291
  %298 = phi double [ %296, %295 ], [ %293, %291 ]
  %299 = load double, double* %19, align 8
  %300 = fcmp ogt double %298, %299
  br i1 %300, label %301, label %302

301:                                              ; preds = %297
  store double %298, double* %19, align 8
  br label %302

302:                                              ; preds = %301, %297, %274
  store double %277, double* %7, align 8
  store double %127, double* %8, align 8
  %303 = load double, double* %16, align 8
  %304 = fcmp ogt double %303, %277
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  store double %277, double* %16, align 8
  %306 = load double, double* %7, align 8
  br label %307

307:                                              ; preds = %305, %302
  %308 = phi double [ %306, %305 ], [ %277, %302 ]
  %309 = load double, double* %17, align 8
  %310 = fcmp ogt double %308, %309
  br i1 %310, label %311, label %312

311:                                              ; preds = %307
  store double %308, double* %17, align 8
  br label %312

312:                                              ; preds = %311, %307
  %313 = load double, double* %18, align 8
  %314 = load double, double* %8, align 8
  %315 = fcmp ogt double %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store double %314, double* %18, align 8
  %317 = load double, double* %8, align 8
  br label %318

318:                                              ; preds = %316, %312
  %319 = phi double [ %317, %316 ], [ %314, %312 ]
  %320 = load double, double* %19, align 8
  %321 = fcmp ogt double %319, %320
  br i1 %321, label %322, label %323

322:                                              ; preds = %318
  store double %319, double* %19, align 8
  br label %323

323:                                              ; preds = %318, %322
  %324 = add i32 %22, 2
  %325 = load i32, i32* %3, align 4
  %326 = icmp ugt i32 %324, %325
  br i1 %326, label %327, label %20

327:                                              ; preds = %323, %2
  %328 = phi i32 [ 0, %2 ], [ %22, %323 ]
  %329 = phi i32 [ %4, %2 ], [ %325, %323 ]
  %330 = icmp ult i32 %328, %329
  br i1 %330, label %331, label %497

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %333 = bitcast double* %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %336 = load double, double* %335, align 8
  %337 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = icmp ugt i32 %338, %328
  br i1 %339, label %341, label %340, !prof !3

340:                                              ; preds = %331
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %346

341:                                              ; preds = %331
  %342 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %343 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %342, align 8
  %344 = zext i32 %328 to i64
  %345 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %343, i64 %344
  br label %346

346:                                              ; preds = %341, %340
  %347 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %340 ], [ %345, %341 ]
  %348 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %349 = load i8, i8* %348, align 8, !range !6
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %437, label %351

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 3, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %437, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = icmp eq i32 %357, %353
  br i1 %358, label %359, label %437, !prof !3

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 0, i32 0
  %361 = load double, double* %360, align 8
  %362 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %363 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 3, i32 2
  %364 = zext i32 %353 to i64
  %365 = load float*, float** %362, align 8
  %366 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %363, align 8
  %367 = add nsw i64 %364, -1
  %368 = and i64 %364, 3
  %369 = icmp ult i64 %367, 3
  br i1 %369, label %372, label %370

370:                                              ; preds = %359
  %371 = sub nsw i64 %364, %368
  br label %399

372:                                              ; preds = %399, %359
  %373 = phi double [ undef, %359 ], [ %433, %399 ]
  %374 = phi i64 [ 0, %359 ], [ %434, %399 ]
  %375 = phi double [ %361, %359 ], [ %433, %399 ]
  %376 = icmp eq i64 %368, 0
  br i1 %376, label %391, label %377

377:                                              ; preds = %372, %377
  %378 = phi i64 [ %388, %377 ], [ %374, %372 ]
  %379 = phi double [ %387, %377 ], [ %375, %372 ]
  %380 = phi i64 [ %389, %377 ], [ %368, %372 ]
  %381 = getelementptr inbounds float, float* %365, i64 %378
  %382 = load float, float* %381, align 4
  %383 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %378, i32 0
  %384 = load double, double* %383, align 8
  %385 = fpext float %382 to double
  %386 = fmul double %384, %385
  %387 = fadd double %379, %386
  %388 = add nuw nsw i64 %378, 1
  %389 = add i64 %380, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %377, !llvm.loop !31

391:                                              ; preds = %377, %372
  %392 = phi double [ %373, %372 ], [ %387, %377 ]
  %393 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 2
  store i32 0, i32* %393, align 4
  %394 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 1
  store i32 0, i32* %394, align 8
  %395 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 3, i32 0
  %396 = load i32, i32* %395, align 8
  %397 = icmp slt i32 %396, 0
  store double %392, double* %360, align 8
  br i1 %397, label %437, label %398, !prof !2

398:                                              ; preds = %391
  store i32 0, i32* %352, align 4
  br label %437

399:                                              ; preds = %399, %370
  %400 = phi i64 [ 0, %370 ], [ %434, %399 ]
  %401 = phi double [ %361, %370 ], [ %433, %399 ]
  %402 = phi i64 [ %371, %370 ], [ %435, %399 ]
  %403 = getelementptr inbounds float, float* %365, i64 %400
  %404 = load float, float* %403, align 4
  %405 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %400, i32 0
  %406 = load double, double* %405, align 8
  %407 = fpext float %404 to double
  %408 = fmul double %406, %407
  %409 = fadd double %401, %408
  %410 = or i64 %400, 1
  %411 = getelementptr inbounds float, float* %365, i64 %410
  %412 = load float, float* %411, align 4
  %413 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %410, i32 0
  %414 = load double, double* %413, align 8
  %415 = fpext float %412 to double
  %416 = fmul double %414, %415
  %417 = fadd double %409, %416
  %418 = or i64 %400, 2
  %419 = getelementptr inbounds float, float* %365, i64 %418
  %420 = load float, float* %419, align 4
  %421 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %418, i32 0
  %422 = load double, double* %421, align 8
  %423 = fpext float %420 to double
  %424 = fmul double %422, %423
  %425 = fadd double %417, %424
  %426 = or i64 %400, 3
  %427 = getelementptr inbounds float, float* %365, i64 %426
  %428 = load float, float* %427, align 4
  %429 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %366, i64 %426, i32 0
  %430 = load double, double* %429, align 8
  %431 = fpext float %428 to double
  %432 = fmul double %430, %431
  %433 = fadd double %425, %432
  %434 = add nuw nsw i64 %400, 4
  %435 = add i64 %402, -4
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %372, label %399

437:                                              ; preds = %346, %351, %355, %391, %398
  %438 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %347, i64 0, i32 0, i32 0
  %439 = load double, double* %438, align 8
  %440 = fadd double %336, %439
  %441 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %442 = load i8, i8* %441, align 8, !range !6
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %444, label %470

444:                                              ; preds = %437
  store i8 1, i8* %441, align 8
  %445 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %446 = load double, double* %445, align 8
  %447 = load double, double* %332, align 8
  %448 = fcmp ogt double %446, %447
  br i1 %448, label %449, label %451

449:                                              ; preds = %444
  store double %447, double* %445, align 8
  %450 = load double, double* %332, align 8
  br label %451

451:                                              ; preds = %449, %444
  %452 = phi double [ %450, %449 ], [ %447, %444 ]
  %453 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %454 = load double, double* %453, align 8
  %455 = fcmp ogt double %452, %454
  br i1 %455, label %456, label %457

456:                                              ; preds = %451
  store double %452, double* %453, align 8
  br label %457

457:                                              ; preds = %456, %451
  %458 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %459 = load double, double* %458, align 8
  %460 = load double, double* %335, align 8
  %461 = fcmp ogt double %459, %460
  br i1 %461, label %462, label %464

462:                                              ; preds = %457
  store double %460, double* %458, align 8
  %463 = load double, double* %335, align 8
  br label %464

464:                                              ; preds = %462, %457
  %465 = phi double [ %463, %462 ], [ %460, %457 ]
  %466 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %467 = load double, double* %466, align 8
  %468 = fcmp ogt double %465, %467
  br i1 %468, label %469, label %470

469:                                              ; preds = %464
  store double %465, double* %466, align 8
  br label %470

470:                                              ; preds = %469, %464, %437
  store i64 %334, i64* %333, align 8
  store double %440, double* %335, align 8
  %471 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %472 = load double, double* %471, align 8
  %473 = bitcast i64 %334 to double
  %474 = fcmp ogt double %472, %473
  br i1 %474, label %475, label %478

475:                                              ; preds = %470
  %476 = bitcast double* %471 to i64*
  store i64 %334, i64* %476, align 8
  %477 = load double, double* %332, align 8
  br label %478

478:                                              ; preds = %475, %470
  %479 = phi double [ %477, %475 ], [ %473, %470 ]
  %480 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %481 = load double, double* %480, align 8
  %482 = fcmp ogt double %479, %481
  br i1 %482, label %483, label %484

483:                                              ; preds = %478
  store double %479, double* %480, align 8
  br label %484

484:                                              ; preds = %483, %478
  %485 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %486 = load double, double* %485, align 8
  %487 = load double, double* %335, align 8
  %488 = fcmp ogt double %486, %487
  br i1 %488, label %489, label %491

489:                                              ; preds = %484
  store double %487, double* %485, align 8
  %490 = load double, double* %335, align 8
  br label %491

491:                                              ; preds = %489, %484
  %492 = phi double [ %490, %489 ], [ %487, %484 ]
  %493 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %494 = load double, double* %493, align 8
  %495 = fcmp ogt double %492, %494
  br i1 %495, label %496, label %497

496:                                              ; preds = %491
  store double %492, double* %493, align 8
  br label %497

497:                                              ; preds = %496, %491, %327
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9rrcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca %"struct.CFF::point_t", align 8
  %5 = alloca %"struct.CFF::point_t", align 8
  %6 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 6
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = bitcast %"struct.CFF::point_t"* %3 to i8*
  %11 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %14 = bitcast %"struct.CFF::point_t"* %13 to i8*
  %15 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %17 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %18 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %19 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %20 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %21 = bitcast %"struct.CFF::point_t"* %4 to i8*
  %22 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 1, i32 0
  %24 = bitcast %"struct.CFF::point_t"* %5 to i8*
  %25 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 1, i32 0
  br label %28

27:                                               ; preds = %651, %2
  ret void

28:                                               ; preds = %9, %651
  %29 = phi i32 [ %7, %9 ], [ %661, %651 ]
  %30 = phi i32 [ 6, %9 ], [ %660, %651 ]
  %31 = phi i32 [ 0, %9 ], [ %30, %651 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %14, i64 16, i1 false)
  %32 = icmp ugt i32 %29, %31
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %28
  store i8 1, i8* %15, align 8
  br label %34

34:                                               ; preds = %33, %28
  %35 = load i32, i32* %16, align 4
  %36 = icmp ugt i32 %35, %31
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %34
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %42

38:                                               ; preds = %34
  %39 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %17, align 8
  %40 = zext i32 %31 to i64
  %41 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 %40
  br label %42

42:                                               ; preds = %38, %37
  %43 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %37 ], [ %41, %38 ]
  %44 = load i8, i8* %18, align 8, !range !6
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %130, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %130, label %50

50:                                               ; preds = %46
  %51 = load i32, i32* %19, align 4
  %52 = icmp eq i32 %51, %48
  br i1 %52, label %53, label %130, !prof !3

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 0, i32 0
  %55 = load double, double* %54, align 8
  %56 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 3, i32 2
  %57 = zext i32 %48 to i64
  %58 = load float*, float** %20, align 8
  %59 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %56, align 8
  %60 = add nsw i64 %57, -1
  %61 = and i64 %57, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %65, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %57, %61
  br label %92

65:                                               ; preds = %92, %53
  %66 = phi double [ undef, %53 ], [ %126, %92 ]
  %67 = phi i64 [ 0, %53 ], [ %127, %92 ]
  %68 = phi double [ %55, %53 ], [ %126, %92 ]
  %69 = icmp eq i64 %61, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %65, %70
  %71 = phi i64 [ %81, %70 ], [ %67, %65 ]
  %72 = phi double [ %80, %70 ], [ %68, %65 ]
  %73 = phi i64 [ %82, %70 ], [ %61, %65 ]
  %74 = getelementptr inbounds float, float* %58, i64 %71
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %71, i32 0
  %77 = load double, double* %76, align 8
  %78 = fpext float %75 to double
  %79 = fmul double %77, %78
  %80 = fadd double %72, %79
  %81 = add nuw nsw i64 %71, 1
  %82 = add i64 %73, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70, !llvm.loop !32

84:                                               ; preds = %70, %65
  %85 = phi double [ %66, %65 ], [ %80, %70 ]
  %86 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 2
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 1
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 3, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %89, 0
  store double %85, double* %54, align 8
  br i1 %90, label %130, label %91, !prof !2

91:                                               ; preds = %84
  store i32 0, i32* %47, align 4
  br label %130

92:                                               ; preds = %92, %63
  %93 = phi i64 [ 0, %63 ], [ %127, %92 ]
  %94 = phi double [ %55, %63 ], [ %126, %92 ]
  %95 = phi i64 [ %64, %63 ], [ %128, %92 ]
  %96 = getelementptr inbounds float, float* %58, i64 %93
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %93, i32 0
  %99 = load double, double* %98, align 8
  %100 = fpext float %97 to double
  %101 = fmul double %99, %100
  %102 = fadd double %94, %101
  %103 = or i64 %93, 1
  %104 = getelementptr inbounds float, float* %58, i64 %103
  %105 = load float, float* %104, align 4
  %106 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %103, i32 0
  %107 = load double, double* %106, align 8
  %108 = fpext float %105 to double
  %109 = fmul double %107, %108
  %110 = fadd double %102, %109
  %111 = or i64 %93, 2
  %112 = getelementptr inbounds float, float* %58, i64 %111
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %111, i32 0
  %115 = load double, double* %114, align 8
  %116 = fpext float %113 to double
  %117 = fmul double %115, %116
  %118 = fadd double %110, %117
  %119 = or i64 %93, 3
  %120 = getelementptr inbounds float, float* %58, i64 %119
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %119, i32 0
  %123 = load double, double* %122, align 8
  %124 = fpext float %121 to double
  %125 = fmul double %123, %124
  %126 = fadd double %118, %125
  %127 = add nuw nsw i64 %93, 4
  %128 = add i64 %95, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %65, label %92

130:                                              ; preds = %42, %46, %50, %84, %91
  %131 = or i32 %31, 1
  %132 = load i32, i32* %6, align 4
  %133 = icmp ugt i32 %132, %131
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %130
  store i8 1, i8* %15, align 8
  br label %135

135:                                              ; preds = %134, %130
  %136 = load i32, i32* %16, align 4
  %137 = icmp ugt i32 %136, %131
  br i1 %137, label %139, label %138, !prof !3

138:                                              ; preds = %135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %143

139:                                              ; preds = %135
  %140 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %17, align 8
  %141 = zext i32 %131 to i64
  %142 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 %141
  br label %143

143:                                              ; preds = %139, %138
  %144 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %138 ], [ %142, %139 ]
  %145 = load i8, i8* %18, align 8, !range !6
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %231, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 3, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %231, label %151

151:                                              ; preds = %147
  %152 = load i32, i32* %19, align 4
  %153 = icmp eq i32 %152, %149
  br i1 %153, label %154, label %231, !prof !3

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 0, i32 0
  %156 = load double, double* %155, align 8
  %157 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 3, i32 2
  %158 = zext i32 %149 to i64
  %159 = load float*, float** %20, align 8
  %160 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %157, align 8
  %161 = add nsw i64 %158, -1
  %162 = and i64 %158, 3
  %163 = icmp ult i64 %161, 3
  br i1 %163, label %166, label %164

164:                                              ; preds = %154
  %165 = sub nsw i64 %158, %162
  br label %193

166:                                              ; preds = %193, %154
  %167 = phi double [ undef, %154 ], [ %227, %193 ]
  %168 = phi i64 [ 0, %154 ], [ %228, %193 ]
  %169 = phi double [ %156, %154 ], [ %227, %193 ]
  %170 = icmp eq i64 %162, 0
  br i1 %170, label %185, label %171

171:                                              ; preds = %166, %171
  %172 = phi i64 [ %182, %171 ], [ %168, %166 ]
  %173 = phi double [ %181, %171 ], [ %169, %166 ]
  %174 = phi i64 [ %183, %171 ], [ %162, %166 ]
  %175 = getelementptr inbounds float, float* %159, i64 %172
  %176 = load float, float* %175, align 4
  %177 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %172, i32 0
  %178 = load double, double* %177, align 8
  %179 = fpext float %176 to double
  %180 = fmul double %178, %179
  %181 = fadd double %173, %180
  %182 = add nuw nsw i64 %172, 1
  %183 = add i64 %174, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %171, !llvm.loop !33

185:                                              ; preds = %171, %166
  %186 = phi double [ %167, %166 ], [ %181, %171 ]
  %187 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 2
  store i32 0, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 1
  store i32 0, i32* %188, align 8
  %189 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 3, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = icmp slt i32 %190, 0
  store double %186, double* %155, align 8
  br i1 %191, label %231, label %192, !prof !2

192:                                              ; preds = %185
  store i32 0, i32* %148, align 4
  br label %231

193:                                              ; preds = %193, %164
  %194 = phi i64 [ 0, %164 ], [ %228, %193 ]
  %195 = phi double [ %156, %164 ], [ %227, %193 ]
  %196 = phi i64 [ %165, %164 ], [ %229, %193 ]
  %197 = getelementptr inbounds float, float* %159, i64 %194
  %198 = load float, float* %197, align 4
  %199 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %194, i32 0
  %200 = load double, double* %199, align 8
  %201 = fpext float %198 to double
  %202 = fmul double %200, %201
  %203 = fadd double %195, %202
  %204 = or i64 %194, 1
  %205 = getelementptr inbounds float, float* %159, i64 %204
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %204, i32 0
  %208 = load double, double* %207, align 8
  %209 = fpext float %206 to double
  %210 = fmul double %208, %209
  %211 = fadd double %203, %210
  %212 = or i64 %194, 2
  %213 = getelementptr inbounds float, float* %159, i64 %212
  %214 = load float, float* %213, align 4
  %215 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %212, i32 0
  %216 = load double, double* %215, align 8
  %217 = fpext float %214 to double
  %218 = fmul double %216, %217
  %219 = fadd double %211, %218
  %220 = or i64 %194, 3
  %221 = getelementptr inbounds float, float* %159, i64 %220
  %222 = load float, float* %221, align 4
  %223 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %220, i32 0
  %224 = load double, double* %223, align 8
  %225 = fpext float %222 to double
  %226 = fmul double %224, %225
  %227 = fadd double %219, %226
  %228 = add nuw nsw i64 %194, 4
  %229 = add i64 %196, -4
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %166, label %193

231:                                              ; preds = %143, %147, %151, %185, %192
  %232 = load double, double* %11, align 8
  %233 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 0, i32 0
  %234 = load double, double* %233, align 8
  %235 = fadd double %232, %234
  store double %235, double* %11, align 8
  %236 = load double, double* %12, align 8
  %237 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 0, i32 0
  %238 = load double, double* %237, align 8
  %239 = fadd double %236, %238
  store double %239, double* %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %10, i64 16, i1 false)
  %240 = add i32 %31, 2
  %241 = load i32, i32* %6, align 4
  %242 = icmp ugt i32 %241, %240
  br i1 %242, label %244, label %243, !prof !3

243:                                              ; preds = %231
  store i8 1, i8* %15, align 8
  br label %244

244:                                              ; preds = %243, %231
  %245 = load i32, i32* %16, align 4
  %246 = icmp ugt i32 %245, %240
  br i1 %246, label %248, label %247, !prof !3

247:                                              ; preds = %244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %252

248:                                              ; preds = %244
  %249 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %17, align 8
  %250 = zext i32 %240 to i64
  %251 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %249, i64 %250
  br label %252

252:                                              ; preds = %248, %247
  %253 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %247 ], [ %251, %248 ]
  %254 = load i8, i8* %18, align 8, !range !6
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %340, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 3, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %340, label %260

260:                                              ; preds = %256
  %261 = load i32, i32* %19, align 4
  %262 = icmp eq i32 %261, %258
  br i1 %262, label %263, label %340, !prof !3

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 0, i32 0
  %265 = load double, double* %264, align 8
  %266 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 3, i32 2
  %267 = zext i32 %258 to i64
  %268 = load float*, float** %20, align 8
  %269 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %266, align 8
  %270 = add nsw i64 %267, -1
  %271 = and i64 %267, 3
  %272 = icmp ult i64 %270, 3
  br i1 %272, label %275, label %273

273:                                              ; preds = %263
  %274 = sub nsw i64 %267, %271
  br label %302

275:                                              ; preds = %302, %263
  %276 = phi double [ undef, %263 ], [ %336, %302 ]
  %277 = phi i64 [ 0, %263 ], [ %337, %302 ]
  %278 = phi double [ %265, %263 ], [ %336, %302 ]
  %279 = icmp eq i64 %271, 0
  br i1 %279, label %294, label %280

280:                                              ; preds = %275, %280
  %281 = phi i64 [ %291, %280 ], [ %277, %275 ]
  %282 = phi double [ %290, %280 ], [ %278, %275 ]
  %283 = phi i64 [ %292, %280 ], [ %271, %275 ]
  %284 = getelementptr inbounds float, float* %268, i64 %281
  %285 = load float, float* %284, align 4
  %286 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %281, i32 0
  %287 = load double, double* %286, align 8
  %288 = fpext float %285 to double
  %289 = fmul double %287, %288
  %290 = fadd double %282, %289
  %291 = add nuw nsw i64 %281, 1
  %292 = add i64 %283, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %280, !llvm.loop !34

294:                                              ; preds = %280, %275
  %295 = phi double [ %276, %275 ], [ %290, %280 ]
  %296 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 2
  store i32 0, i32* %296, align 4
  %297 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 1
  store i32 0, i32* %297, align 8
  %298 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 3, i32 0
  %299 = load i32, i32* %298, align 8
  %300 = icmp slt i32 %299, 0
  store double %295, double* %264, align 8
  br i1 %300, label %340, label %301, !prof !2

301:                                              ; preds = %294
  store i32 0, i32* %257, align 4
  br label %340

302:                                              ; preds = %302, %273
  %303 = phi i64 [ 0, %273 ], [ %337, %302 ]
  %304 = phi double [ %265, %273 ], [ %336, %302 ]
  %305 = phi i64 [ %274, %273 ], [ %338, %302 ]
  %306 = getelementptr inbounds float, float* %268, i64 %303
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %303, i32 0
  %309 = load double, double* %308, align 8
  %310 = fpext float %307 to double
  %311 = fmul double %309, %310
  %312 = fadd double %304, %311
  %313 = or i64 %303, 1
  %314 = getelementptr inbounds float, float* %268, i64 %313
  %315 = load float, float* %314, align 4
  %316 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %313, i32 0
  %317 = load double, double* %316, align 8
  %318 = fpext float %315 to double
  %319 = fmul double %317, %318
  %320 = fadd double %312, %319
  %321 = or i64 %303, 2
  %322 = getelementptr inbounds float, float* %268, i64 %321
  %323 = load float, float* %322, align 4
  %324 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %321, i32 0
  %325 = load double, double* %324, align 8
  %326 = fpext float %323 to double
  %327 = fmul double %325, %326
  %328 = fadd double %320, %327
  %329 = or i64 %303, 3
  %330 = getelementptr inbounds float, float* %268, i64 %329
  %331 = load float, float* %330, align 4
  %332 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %329, i32 0
  %333 = load double, double* %332, align 8
  %334 = fpext float %331 to double
  %335 = fmul double %333, %334
  %336 = fadd double %328, %335
  %337 = add nuw nsw i64 %303, 4
  %338 = add i64 %305, -4
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %275, label %302

340:                                              ; preds = %252, %256, %260, %294, %301
  %341 = add i32 %31, 3
  %342 = load i32, i32* %6, align 4
  %343 = icmp ugt i32 %342, %341
  br i1 %343, label %345, label %344, !prof !3

344:                                              ; preds = %340
  store i8 1, i8* %15, align 8
  br label %345

345:                                              ; preds = %344, %340
  %346 = load i32, i32* %16, align 4
  %347 = icmp ugt i32 %346, %341
  br i1 %347, label %349, label %348, !prof !3

348:                                              ; preds = %345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %353

349:                                              ; preds = %345
  %350 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %17, align 8
  %351 = zext i32 %341 to i64
  %352 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %350, i64 %351
  br label %353

353:                                              ; preds = %349, %348
  %354 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %348 ], [ %352, %349 ]
  %355 = load i8, i8* %18, align 8, !range !6
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %441, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 3, i32 1
  %359 = load i32, i32* %358, align 4
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %441, label %361

361:                                              ; preds = %357
  %362 = load i32, i32* %19, align 4
  %363 = icmp eq i32 %362, %359
  br i1 %363, label %364, label %441, !prof !3

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 0, i32 0
  %366 = load double, double* %365, align 8
  %367 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 3, i32 2
  %368 = zext i32 %359 to i64
  %369 = load float*, float** %20, align 8
  %370 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %367, align 8
  %371 = add nsw i64 %368, -1
  %372 = and i64 %368, 3
  %373 = icmp ult i64 %371, 3
  br i1 %373, label %376, label %374

374:                                              ; preds = %364
  %375 = sub nsw i64 %368, %372
  br label %403

376:                                              ; preds = %403, %364
  %377 = phi double [ undef, %364 ], [ %437, %403 ]
  %378 = phi i64 [ 0, %364 ], [ %438, %403 ]
  %379 = phi double [ %366, %364 ], [ %437, %403 ]
  %380 = icmp eq i64 %372, 0
  br i1 %380, label %395, label %381

381:                                              ; preds = %376, %381
  %382 = phi i64 [ %392, %381 ], [ %378, %376 ]
  %383 = phi double [ %391, %381 ], [ %379, %376 ]
  %384 = phi i64 [ %393, %381 ], [ %372, %376 ]
  %385 = getelementptr inbounds float, float* %369, i64 %382
  %386 = load float, float* %385, align 4
  %387 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %382, i32 0
  %388 = load double, double* %387, align 8
  %389 = fpext float %386 to double
  %390 = fmul double %388, %389
  %391 = fadd double %383, %390
  %392 = add nuw nsw i64 %382, 1
  %393 = add i64 %384, -1
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %381, !llvm.loop !35

395:                                              ; preds = %381, %376
  %396 = phi double [ %377, %376 ], [ %391, %381 ]
  %397 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 2
  store i32 0, i32* %397, align 4
  %398 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 1
  store i32 0, i32* %398, align 8
  %399 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 3, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = icmp slt i32 %400, 0
  store double %396, double* %365, align 8
  br i1 %401, label %441, label %402, !prof !2

402:                                              ; preds = %395
  store i32 0, i32* %358, align 4
  br label %441

403:                                              ; preds = %403, %374
  %404 = phi i64 [ 0, %374 ], [ %438, %403 ]
  %405 = phi double [ %366, %374 ], [ %437, %403 ]
  %406 = phi i64 [ %375, %374 ], [ %439, %403 ]
  %407 = getelementptr inbounds float, float* %369, i64 %404
  %408 = load float, float* %407, align 4
  %409 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %404, i32 0
  %410 = load double, double* %409, align 8
  %411 = fpext float %408 to double
  %412 = fmul double %410, %411
  %413 = fadd double %405, %412
  %414 = or i64 %404, 1
  %415 = getelementptr inbounds float, float* %369, i64 %414
  %416 = load float, float* %415, align 4
  %417 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %414, i32 0
  %418 = load double, double* %417, align 8
  %419 = fpext float %416 to double
  %420 = fmul double %418, %419
  %421 = fadd double %413, %420
  %422 = or i64 %404, 2
  %423 = getelementptr inbounds float, float* %369, i64 %422
  %424 = load float, float* %423, align 4
  %425 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %422, i32 0
  %426 = load double, double* %425, align 8
  %427 = fpext float %424 to double
  %428 = fmul double %426, %427
  %429 = fadd double %421, %428
  %430 = or i64 %404, 3
  %431 = getelementptr inbounds float, float* %369, i64 %430
  %432 = load float, float* %431, align 4
  %433 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %430, i32 0
  %434 = load double, double* %433, align 8
  %435 = fpext float %432 to double
  %436 = fmul double %434, %435
  %437 = fadd double %429, %436
  %438 = add nuw nsw i64 %404, 4
  %439 = add i64 %406, -4
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %376, label %403

441:                                              ; preds = %353, %357, %361, %395, %402
  %442 = load double, double* %22, align 8
  %443 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 0, i32 0
  %444 = load double, double* %443, align 8
  %445 = fadd double %442, %444
  store double %445, double* %22, align 8
  %446 = load double, double* %23, align 8
  %447 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 0, i32 0
  %448 = load double, double* %447, align 8
  %449 = fadd double %446, %448
  store double %449, double* %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %21, i64 16, i1 false)
  %450 = add i32 %31, 4
  %451 = load i32, i32* %6, align 4
  %452 = icmp ugt i32 %451, %450
  br i1 %452, label %454, label %453, !prof !3

453:                                              ; preds = %441
  store i8 1, i8* %15, align 8
  br label %454

454:                                              ; preds = %453, %441
  %455 = load i32, i32* %16, align 4
  %456 = icmp ugt i32 %455, %450
  br i1 %456, label %458, label %457, !prof !3

457:                                              ; preds = %454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %462

458:                                              ; preds = %454
  %459 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %17, align 8
  %460 = zext i32 %450 to i64
  %461 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 %460
  br label %462

462:                                              ; preds = %458, %457
  %463 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %457 ], [ %461, %458 ]
  %464 = load i8, i8* %18, align 8, !range !6
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %550, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 3, i32 1
  %468 = load i32, i32* %467, align 4
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %550, label %470

470:                                              ; preds = %466
  %471 = load i32, i32* %19, align 4
  %472 = icmp eq i32 %471, %468
  br i1 %472, label %473, label %550, !prof !3

473:                                              ; preds = %470
  %474 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 0, i32 0
  %475 = load double, double* %474, align 8
  %476 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 3, i32 2
  %477 = zext i32 %468 to i64
  %478 = load float*, float** %20, align 8
  %479 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %476, align 8
  %480 = add nsw i64 %477, -1
  %481 = and i64 %477, 3
  %482 = icmp ult i64 %480, 3
  br i1 %482, label %485, label %483

483:                                              ; preds = %473
  %484 = sub nsw i64 %477, %481
  br label %512

485:                                              ; preds = %512, %473
  %486 = phi double [ undef, %473 ], [ %546, %512 ]
  %487 = phi i64 [ 0, %473 ], [ %547, %512 ]
  %488 = phi double [ %475, %473 ], [ %546, %512 ]
  %489 = icmp eq i64 %481, 0
  br i1 %489, label %504, label %490

490:                                              ; preds = %485, %490
  %491 = phi i64 [ %501, %490 ], [ %487, %485 ]
  %492 = phi double [ %500, %490 ], [ %488, %485 ]
  %493 = phi i64 [ %502, %490 ], [ %481, %485 ]
  %494 = getelementptr inbounds float, float* %478, i64 %491
  %495 = load float, float* %494, align 4
  %496 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %491, i32 0
  %497 = load double, double* %496, align 8
  %498 = fpext float %495 to double
  %499 = fmul double %497, %498
  %500 = fadd double %492, %499
  %501 = add nuw nsw i64 %491, 1
  %502 = add i64 %493, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %490, !llvm.loop !36

504:                                              ; preds = %490, %485
  %505 = phi double [ %486, %485 ], [ %500, %490 ]
  %506 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 2
  store i32 0, i32* %506, align 4
  %507 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 1
  store i32 0, i32* %507, align 8
  %508 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 3, i32 0
  %509 = load i32, i32* %508, align 8
  %510 = icmp slt i32 %509, 0
  store double %505, double* %474, align 8
  br i1 %510, label %550, label %511, !prof !2

511:                                              ; preds = %504
  store i32 0, i32* %467, align 4
  br label %550

512:                                              ; preds = %512, %483
  %513 = phi i64 [ 0, %483 ], [ %547, %512 ]
  %514 = phi double [ %475, %483 ], [ %546, %512 ]
  %515 = phi i64 [ %484, %483 ], [ %548, %512 ]
  %516 = getelementptr inbounds float, float* %478, i64 %513
  %517 = load float, float* %516, align 4
  %518 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %513, i32 0
  %519 = load double, double* %518, align 8
  %520 = fpext float %517 to double
  %521 = fmul double %519, %520
  %522 = fadd double %514, %521
  %523 = or i64 %513, 1
  %524 = getelementptr inbounds float, float* %478, i64 %523
  %525 = load float, float* %524, align 4
  %526 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %523, i32 0
  %527 = load double, double* %526, align 8
  %528 = fpext float %525 to double
  %529 = fmul double %527, %528
  %530 = fadd double %522, %529
  %531 = or i64 %513, 2
  %532 = getelementptr inbounds float, float* %478, i64 %531
  %533 = load float, float* %532, align 4
  %534 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %531, i32 0
  %535 = load double, double* %534, align 8
  %536 = fpext float %533 to double
  %537 = fmul double %535, %536
  %538 = fadd double %530, %537
  %539 = or i64 %513, 3
  %540 = getelementptr inbounds float, float* %478, i64 %539
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %539, i32 0
  %543 = load double, double* %542, align 8
  %544 = fpext float %541 to double
  %545 = fmul double %543, %544
  %546 = fadd double %538, %545
  %547 = add nuw nsw i64 %513, 4
  %548 = add i64 %515, -4
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %485, label %512

550:                                              ; preds = %462, %466, %470, %504, %511
  %551 = add i32 %31, 5
  %552 = load i32, i32* %6, align 4
  %553 = icmp ugt i32 %552, %551
  br i1 %553, label %555, label %554, !prof !3

554:                                              ; preds = %550
  store i8 1, i8* %15, align 8
  br label %555

555:                                              ; preds = %554, %550
  %556 = load i32, i32* %16, align 4
  %557 = icmp ugt i32 %556, %551
  br i1 %557, label %559, label %558, !prof !3

558:                                              ; preds = %555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %563

559:                                              ; preds = %555
  %560 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %17, align 8
  %561 = zext i32 %551 to i64
  %562 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %560, i64 %561
  br label %563

563:                                              ; preds = %559, %558
  %564 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %558 ], [ %562, %559 ]
  %565 = load i8, i8* %18, align 8, !range !6
  %566 = icmp eq i8 %565, 0
  br i1 %566, label %651, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 1
  %569 = load i32, i32* %568, align 4
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %651, label %571

571:                                              ; preds = %567
  %572 = load i32, i32* %19, align 4
  %573 = icmp eq i32 %572, %569
  br i1 %573, label %574, label %651, !prof !3

574:                                              ; preds = %571
  %575 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 0, i32 0
  %576 = load double, double* %575, align 8
  %577 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 2
  %578 = zext i32 %569 to i64
  %579 = load float*, float** %20, align 8
  %580 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %577, align 8
  %581 = add nsw i64 %578, -1
  %582 = and i64 %578, 3
  %583 = icmp ult i64 %581, 3
  br i1 %583, label %586, label %584

584:                                              ; preds = %574
  %585 = sub nsw i64 %578, %582
  br label %613

586:                                              ; preds = %613, %574
  %587 = phi double [ undef, %574 ], [ %647, %613 ]
  %588 = phi i64 [ 0, %574 ], [ %648, %613 ]
  %589 = phi double [ %576, %574 ], [ %647, %613 ]
  %590 = icmp eq i64 %582, 0
  br i1 %590, label %605, label %591

591:                                              ; preds = %586, %591
  %592 = phi i64 [ %602, %591 ], [ %588, %586 ]
  %593 = phi double [ %601, %591 ], [ %589, %586 ]
  %594 = phi i64 [ %603, %591 ], [ %582, %586 ]
  %595 = getelementptr inbounds float, float* %579, i64 %592
  %596 = load float, float* %595, align 4
  %597 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %592, i32 0
  %598 = load double, double* %597, align 8
  %599 = fpext float %596 to double
  %600 = fmul double %598, %599
  %601 = fadd double %593, %600
  %602 = add nuw nsw i64 %592, 1
  %603 = add i64 %594, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %591, !llvm.loop !37

605:                                              ; preds = %591, %586
  %606 = phi double [ %587, %586 ], [ %601, %591 ]
  %607 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 2
  store i32 0, i32* %607, align 4
  %608 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 1
  store i32 0, i32* %608, align 8
  %609 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 0
  %610 = load i32, i32* %609, align 8
  %611 = icmp slt i32 %610, 0
  store double %606, double* %575, align 8
  br i1 %611, label %651, label %612, !prof !2

612:                                              ; preds = %605
  store i32 0, i32* %568, align 4
  br label %651

613:                                              ; preds = %613, %584
  %614 = phi i64 [ 0, %584 ], [ %648, %613 ]
  %615 = phi double [ %576, %584 ], [ %647, %613 ]
  %616 = phi i64 [ %585, %584 ], [ %649, %613 ]
  %617 = getelementptr inbounds float, float* %579, i64 %614
  %618 = load float, float* %617, align 4
  %619 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %614, i32 0
  %620 = load double, double* %619, align 8
  %621 = fpext float %618 to double
  %622 = fmul double %620, %621
  %623 = fadd double %615, %622
  %624 = or i64 %614, 1
  %625 = getelementptr inbounds float, float* %579, i64 %624
  %626 = load float, float* %625, align 4
  %627 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %624, i32 0
  %628 = load double, double* %627, align 8
  %629 = fpext float %626 to double
  %630 = fmul double %628, %629
  %631 = fadd double %623, %630
  %632 = or i64 %614, 2
  %633 = getelementptr inbounds float, float* %579, i64 %632
  %634 = load float, float* %633, align 4
  %635 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %632, i32 0
  %636 = load double, double* %635, align 8
  %637 = fpext float %634 to double
  %638 = fmul double %636, %637
  %639 = fadd double %631, %638
  %640 = or i64 %614, 3
  %641 = getelementptr inbounds float, float* %579, i64 %640
  %642 = load float, float* %641, align 4
  %643 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %640, i32 0
  %644 = load double, double* %643, align 8
  %645 = fpext float %642 to double
  %646 = fmul double %644, %645
  %647 = fadd double %639, %646
  %648 = add nuw nsw i64 %614, 4
  %649 = add i64 %616, -4
  %650 = icmp eq i64 %649, 0
  br i1 %650, label %586, label %613

651:                                              ; preds = %563, %567, %571, %605, %612
  %652 = load double, double* %25, align 8
  %653 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 0, i32 0
  %654 = load double, double* %653, align 8
  %655 = fadd double %652, %654
  store double %655, double* %25, align 8
  %656 = load double, double* %26, align 8
  %657 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 0, i32 0
  %658 = load double, double* %657, align 8
  %659 = fadd double %656, %658
  store double %659, double* %26, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  %660 = add i32 %30, 6
  %661 = load i32, i32* %6, align 4
  %662 = icmp ugt i32 %660, %661
  br i1 %662, label %27, label %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE10rcurvelineERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca %"struct.CFF::point_t", align 8
  %5 = alloca %"struct.CFF::point_t", align 8
  %6 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 8
  br i1 %8, label %941, label %9, !prof !2

9:                                                ; preds = %2
  %10 = add i32 %7, -2
  %11 = bitcast %"struct.CFF::point_t"* %3 to i8*
  %12 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %15 = bitcast %"struct.CFF::point_t"* %14 to i8*
  %16 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %18 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %19 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %21 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %22 = bitcast %"struct.CFF::point_t"* %4 to i8*
  %23 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 1, i32 0
  %25 = bitcast %"struct.CFF::point_t"* %5 to i8*
  %26 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 1, i32 0
  br label %28

28:                                               ; preds = %651, %9
  %29 = phi i32 [ %7, %9 ], [ %662, %651 ]
  %30 = phi i32 [ 6, %9 ], [ %660, %651 ]
  %31 = phi i32 [ 0, %9 ], [ %30, %651 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %15, i64 16, i1 false)
  %32 = icmp ugt i32 %29, %31
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %28
  store i8 1, i8* %16, align 8
  br label %34

34:                                               ; preds = %33, %28
  %35 = load i32, i32* %17, align 4
  %36 = icmp ugt i32 %35, %31
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %34
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %42

38:                                               ; preds = %34
  %39 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %18, align 8
  %40 = zext i32 %31 to i64
  %41 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %39, i64 %40
  br label %42

42:                                               ; preds = %38, %37
  %43 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %37 ], [ %41, %38 ]
  %44 = load i8, i8* %19, align 8, !range !6
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %130, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %130, label %50

50:                                               ; preds = %46
  %51 = load i32, i32* %20, align 4
  %52 = icmp eq i32 %51, %48
  br i1 %52, label %53, label %130, !prof !3

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 0, i32 0
  %55 = load double, double* %54, align 8
  %56 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 3, i32 2
  %57 = zext i32 %48 to i64
  %58 = load float*, float** %21, align 8
  %59 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %56, align 8
  %60 = add nsw i64 %57, -1
  %61 = and i64 %57, 3
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %65, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %57, %61
  br label %92

65:                                               ; preds = %92, %53
  %66 = phi double [ undef, %53 ], [ %126, %92 ]
  %67 = phi i64 [ 0, %53 ], [ %127, %92 ]
  %68 = phi double [ %55, %53 ], [ %126, %92 ]
  %69 = icmp eq i64 %61, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %65, %70
  %71 = phi i64 [ %81, %70 ], [ %67, %65 ]
  %72 = phi double [ %80, %70 ], [ %68, %65 ]
  %73 = phi i64 [ %82, %70 ], [ %61, %65 ]
  %74 = getelementptr inbounds float, float* %58, i64 %71
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %71, i32 0
  %77 = load double, double* %76, align 8
  %78 = fpext float %75 to double
  %79 = fmul double %77, %78
  %80 = fadd double %72, %79
  %81 = add nuw nsw i64 %71, 1
  %82 = add i64 %73, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70, !llvm.loop !38

84:                                               ; preds = %70, %65
  %85 = phi double [ %66, %65 ], [ %80, %70 ]
  %86 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 2
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 1
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 3, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %89, 0
  store double %85, double* %54, align 8
  br i1 %90, label %130, label %91, !prof !2

91:                                               ; preds = %84
  store i32 0, i32* %47, align 4
  br label %130

92:                                               ; preds = %92, %63
  %93 = phi i64 [ 0, %63 ], [ %127, %92 ]
  %94 = phi double [ %55, %63 ], [ %126, %92 ]
  %95 = phi i64 [ %64, %63 ], [ %128, %92 ]
  %96 = getelementptr inbounds float, float* %58, i64 %93
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %93, i32 0
  %99 = load double, double* %98, align 8
  %100 = fpext float %97 to double
  %101 = fmul double %99, %100
  %102 = fadd double %94, %101
  %103 = or i64 %93, 1
  %104 = getelementptr inbounds float, float* %58, i64 %103
  %105 = load float, float* %104, align 4
  %106 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %103, i32 0
  %107 = load double, double* %106, align 8
  %108 = fpext float %105 to double
  %109 = fmul double %107, %108
  %110 = fadd double %102, %109
  %111 = or i64 %93, 2
  %112 = getelementptr inbounds float, float* %58, i64 %111
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %111, i32 0
  %115 = load double, double* %114, align 8
  %116 = fpext float %113 to double
  %117 = fmul double %115, %116
  %118 = fadd double %110, %117
  %119 = or i64 %93, 3
  %120 = getelementptr inbounds float, float* %58, i64 %119
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %59, i64 %119, i32 0
  %123 = load double, double* %122, align 8
  %124 = fpext float %121 to double
  %125 = fmul double %123, %124
  %126 = fadd double %118, %125
  %127 = add nuw nsw i64 %93, 4
  %128 = add i64 %95, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %65, label %92

130:                                              ; preds = %42, %46, %50, %84, %91
  %131 = or i32 %31, 1
  %132 = load i32, i32* %6, align 4
  %133 = icmp ugt i32 %132, %131
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %130
  store i8 1, i8* %16, align 8
  br label %135

135:                                              ; preds = %134, %130
  %136 = load i32, i32* %17, align 4
  %137 = icmp ugt i32 %136, %131
  br i1 %137, label %139, label %138, !prof !3

138:                                              ; preds = %135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %143

139:                                              ; preds = %135
  %140 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %18, align 8
  %141 = zext i32 %131 to i64
  %142 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %140, i64 %141
  br label %143

143:                                              ; preds = %139, %138
  %144 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %138 ], [ %142, %139 ]
  %145 = load i8, i8* %19, align 8, !range !6
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %231, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 3, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %231, label %151

151:                                              ; preds = %147
  %152 = load i32, i32* %20, align 4
  %153 = icmp eq i32 %152, %149
  br i1 %153, label %154, label %231, !prof !3

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 0, i32 0
  %156 = load double, double* %155, align 8
  %157 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 3, i32 2
  %158 = zext i32 %149 to i64
  %159 = load float*, float** %21, align 8
  %160 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %157, align 8
  %161 = add nsw i64 %158, -1
  %162 = and i64 %158, 3
  %163 = icmp ult i64 %161, 3
  br i1 %163, label %166, label %164

164:                                              ; preds = %154
  %165 = sub nsw i64 %158, %162
  br label %193

166:                                              ; preds = %193, %154
  %167 = phi double [ undef, %154 ], [ %227, %193 ]
  %168 = phi i64 [ 0, %154 ], [ %228, %193 ]
  %169 = phi double [ %156, %154 ], [ %227, %193 ]
  %170 = icmp eq i64 %162, 0
  br i1 %170, label %185, label %171

171:                                              ; preds = %166, %171
  %172 = phi i64 [ %182, %171 ], [ %168, %166 ]
  %173 = phi double [ %181, %171 ], [ %169, %166 ]
  %174 = phi i64 [ %183, %171 ], [ %162, %166 ]
  %175 = getelementptr inbounds float, float* %159, i64 %172
  %176 = load float, float* %175, align 4
  %177 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %172, i32 0
  %178 = load double, double* %177, align 8
  %179 = fpext float %176 to double
  %180 = fmul double %178, %179
  %181 = fadd double %173, %180
  %182 = add nuw nsw i64 %172, 1
  %183 = add i64 %174, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %171, !llvm.loop !39

185:                                              ; preds = %171, %166
  %186 = phi double [ %167, %166 ], [ %181, %171 ]
  %187 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 2
  store i32 0, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 1
  store i32 0, i32* %188, align 8
  %189 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 3, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = icmp slt i32 %190, 0
  store double %186, double* %155, align 8
  br i1 %191, label %231, label %192, !prof !2

192:                                              ; preds = %185
  store i32 0, i32* %148, align 4
  br label %231

193:                                              ; preds = %193, %164
  %194 = phi i64 [ 0, %164 ], [ %228, %193 ]
  %195 = phi double [ %156, %164 ], [ %227, %193 ]
  %196 = phi i64 [ %165, %164 ], [ %229, %193 ]
  %197 = getelementptr inbounds float, float* %159, i64 %194
  %198 = load float, float* %197, align 4
  %199 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %194, i32 0
  %200 = load double, double* %199, align 8
  %201 = fpext float %198 to double
  %202 = fmul double %200, %201
  %203 = fadd double %195, %202
  %204 = or i64 %194, 1
  %205 = getelementptr inbounds float, float* %159, i64 %204
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %204, i32 0
  %208 = load double, double* %207, align 8
  %209 = fpext float %206 to double
  %210 = fmul double %208, %209
  %211 = fadd double %203, %210
  %212 = or i64 %194, 2
  %213 = getelementptr inbounds float, float* %159, i64 %212
  %214 = load float, float* %213, align 4
  %215 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %212, i32 0
  %216 = load double, double* %215, align 8
  %217 = fpext float %214 to double
  %218 = fmul double %216, %217
  %219 = fadd double %211, %218
  %220 = or i64 %194, 3
  %221 = getelementptr inbounds float, float* %159, i64 %220
  %222 = load float, float* %221, align 4
  %223 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %160, i64 %220, i32 0
  %224 = load double, double* %223, align 8
  %225 = fpext float %222 to double
  %226 = fmul double %224, %225
  %227 = fadd double %219, %226
  %228 = add nuw nsw i64 %194, 4
  %229 = add i64 %196, -4
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %166, label %193

231:                                              ; preds = %143, %147, %151, %185, %192
  %232 = load double, double* %12, align 8
  %233 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 0, i32 0, i32 0
  %234 = load double, double* %233, align 8
  %235 = fadd double %232, %234
  store double %235, double* %12, align 8
  %236 = load double, double* %13, align 8
  %237 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %144, i64 0, i32 0, i32 0
  %238 = load double, double* %237, align 8
  %239 = fadd double %236, %238
  store double %239, double* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %11, i64 16, i1 false)
  %240 = add i32 %31, 2
  %241 = load i32, i32* %6, align 4
  %242 = icmp ugt i32 %241, %240
  br i1 %242, label %244, label %243, !prof !3

243:                                              ; preds = %231
  store i8 1, i8* %16, align 8
  br label %244

244:                                              ; preds = %243, %231
  %245 = load i32, i32* %17, align 4
  %246 = icmp ugt i32 %245, %240
  br i1 %246, label %248, label %247, !prof !3

247:                                              ; preds = %244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %252

248:                                              ; preds = %244
  %249 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %18, align 8
  %250 = zext i32 %240 to i64
  %251 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %249, i64 %250
  br label %252

252:                                              ; preds = %248, %247
  %253 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %247 ], [ %251, %248 ]
  %254 = load i8, i8* %19, align 8, !range !6
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %340, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 3, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %340, label %260

260:                                              ; preds = %256
  %261 = load i32, i32* %20, align 4
  %262 = icmp eq i32 %261, %258
  br i1 %262, label %263, label %340, !prof !3

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 0, i32 0
  %265 = load double, double* %264, align 8
  %266 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 3, i32 2
  %267 = zext i32 %258 to i64
  %268 = load float*, float** %21, align 8
  %269 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %266, align 8
  %270 = add nsw i64 %267, -1
  %271 = and i64 %267, 3
  %272 = icmp ult i64 %270, 3
  br i1 %272, label %275, label %273

273:                                              ; preds = %263
  %274 = sub nsw i64 %267, %271
  br label %302

275:                                              ; preds = %302, %263
  %276 = phi double [ undef, %263 ], [ %336, %302 ]
  %277 = phi i64 [ 0, %263 ], [ %337, %302 ]
  %278 = phi double [ %265, %263 ], [ %336, %302 ]
  %279 = icmp eq i64 %271, 0
  br i1 %279, label %294, label %280

280:                                              ; preds = %275, %280
  %281 = phi i64 [ %291, %280 ], [ %277, %275 ]
  %282 = phi double [ %290, %280 ], [ %278, %275 ]
  %283 = phi i64 [ %292, %280 ], [ %271, %275 ]
  %284 = getelementptr inbounds float, float* %268, i64 %281
  %285 = load float, float* %284, align 4
  %286 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %281, i32 0
  %287 = load double, double* %286, align 8
  %288 = fpext float %285 to double
  %289 = fmul double %287, %288
  %290 = fadd double %282, %289
  %291 = add nuw nsw i64 %281, 1
  %292 = add i64 %283, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %280, !llvm.loop !40

294:                                              ; preds = %280, %275
  %295 = phi double [ %276, %275 ], [ %290, %280 ]
  %296 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 2
  store i32 0, i32* %296, align 4
  %297 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 1
  store i32 0, i32* %297, align 8
  %298 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 3, i32 0
  %299 = load i32, i32* %298, align 8
  %300 = icmp slt i32 %299, 0
  store double %295, double* %264, align 8
  br i1 %300, label %340, label %301, !prof !2

301:                                              ; preds = %294
  store i32 0, i32* %257, align 4
  br label %340

302:                                              ; preds = %302, %273
  %303 = phi i64 [ 0, %273 ], [ %337, %302 ]
  %304 = phi double [ %265, %273 ], [ %336, %302 ]
  %305 = phi i64 [ %274, %273 ], [ %338, %302 ]
  %306 = getelementptr inbounds float, float* %268, i64 %303
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %303, i32 0
  %309 = load double, double* %308, align 8
  %310 = fpext float %307 to double
  %311 = fmul double %309, %310
  %312 = fadd double %304, %311
  %313 = or i64 %303, 1
  %314 = getelementptr inbounds float, float* %268, i64 %313
  %315 = load float, float* %314, align 4
  %316 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %313, i32 0
  %317 = load double, double* %316, align 8
  %318 = fpext float %315 to double
  %319 = fmul double %317, %318
  %320 = fadd double %312, %319
  %321 = or i64 %303, 2
  %322 = getelementptr inbounds float, float* %268, i64 %321
  %323 = load float, float* %322, align 4
  %324 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %321, i32 0
  %325 = load double, double* %324, align 8
  %326 = fpext float %323 to double
  %327 = fmul double %325, %326
  %328 = fadd double %320, %327
  %329 = or i64 %303, 3
  %330 = getelementptr inbounds float, float* %268, i64 %329
  %331 = load float, float* %330, align 4
  %332 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %269, i64 %329, i32 0
  %333 = load double, double* %332, align 8
  %334 = fpext float %331 to double
  %335 = fmul double %333, %334
  %336 = fadd double %328, %335
  %337 = add nuw nsw i64 %303, 4
  %338 = add i64 %305, -4
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %275, label %302

340:                                              ; preds = %252, %256, %260, %294, %301
  %341 = add i32 %31, 3
  %342 = load i32, i32* %6, align 4
  %343 = icmp ugt i32 %342, %341
  br i1 %343, label %345, label %344, !prof !3

344:                                              ; preds = %340
  store i8 1, i8* %16, align 8
  br label %345

345:                                              ; preds = %344, %340
  %346 = load i32, i32* %17, align 4
  %347 = icmp ugt i32 %346, %341
  br i1 %347, label %349, label %348, !prof !3

348:                                              ; preds = %345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %353

349:                                              ; preds = %345
  %350 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %18, align 8
  %351 = zext i32 %341 to i64
  %352 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %350, i64 %351
  br label %353

353:                                              ; preds = %349, %348
  %354 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %348 ], [ %352, %349 ]
  %355 = load i8, i8* %19, align 8, !range !6
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %441, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 3, i32 1
  %359 = load i32, i32* %358, align 4
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %441, label %361

361:                                              ; preds = %357
  %362 = load i32, i32* %20, align 4
  %363 = icmp eq i32 %362, %359
  br i1 %363, label %364, label %441, !prof !3

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 0, i32 0
  %366 = load double, double* %365, align 8
  %367 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 3, i32 2
  %368 = zext i32 %359 to i64
  %369 = load float*, float** %21, align 8
  %370 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %367, align 8
  %371 = add nsw i64 %368, -1
  %372 = and i64 %368, 3
  %373 = icmp ult i64 %371, 3
  br i1 %373, label %376, label %374

374:                                              ; preds = %364
  %375 = sub nsw i64 %368, %372
  br label %403

376:                                              ; preds = %403, %364
  %377 = phi double [ undef, %364 ], [ %437, %403 ]
  %378 = phi i64 [ 0, %364 ], [ %438, %403 ]
  %379 = phi double [ %366, %364 ], [ %437, %403 ]
  %380 = icmp eq i64 %372, 0
  br i1 %380, label %395, label %381

381:                                              ; preds = %376, %381
  %382 = phi i64 [ %392, %381 ], [ %378, %376 ]
  %383 = phi double [ %391, %381 ], [ %379, %376 ]
  %384 = phi i64 [ %393, %381 ], [ %372, %376 ]
  %385 = getelementptr inbounds float, float* %369, i64 %382
  %386 = load float, float* %385, align 4
  %387 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %382, i32 0
  %388 = load double, double* %387, align 8
  %389 = fpext float %386 to double
  %390 = fmul double %388, %389
  %391 = fadd double %383, %390
  %392 = add nuw nsw i64 %382, 1
  %393 = add i64 %384, -1
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %381, !llvm.loop !41

395:                                              ; preds = %381, %376
  %396 = phi double [ %377, %376 ], [ %391, %381 ]
  %397 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 2
  store i32 0, i32* %397, align 4
  %398 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 1
  store i32 0, i32* %398, align 8
  %399 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 3, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = icmp slt i32 %400, 0
  store double %396, double* %365, align 8
  br i1 %401, label %441, label %402, !prof !2

402:                                              ; preds = %395
  store i32 0, i32* %358, align 4
  br label %441

403:                                              ; preds = %403, %374
  %404 = phi i64 [ 0, %374 ], [ %438, %403 ]
  %405 = phi double [ %366, %374 ], [ %437, %403 ]
  %406 = phi i64 [ %375, %374 ], [ %439, %403 ]
  %407 = getelementptr inbounds float, float* %369, i64 %404
  %408 = load float, float* %407, align 4
  %409 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %404, i32 0
  %410 = load double, double* %409, align 8
  %411 = fpext float %408 to double
  %412 = fmul double %410, %411
  %413 = fadd double %405, %412
  %414 = or i64 %404, 1
  %415 = getelementptr inbounds float, float* %369, i64 %414
  %416 = load float, float* %415, align 4
  %417 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %414, i32 0
  %418 = load double, double* %417, align 8
  %419 = fpext float %416 to double
  %420 = fmul double %418, %419
  %421 = fadd double %413, %420
  %422 = or i64 %404, 2
  %423 = getelementptr inbounds float, float* %369, i64 %422
  %424 = load float, float* %423, align 4
  %425 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %422, i32 0
  %426 = load double, double* %425, align 8
  %427 = fpext float %424 to double
  %428 = fmul double %426, %427
  %429 = fadd double %421, %428
  %430 = or i64 %404, 3
  %431 = getelementptr inbounds float, float* %369, i64 %430
  %432 = load float, float* %431, align 4
  %433 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %430, i32 0
  %434 = load double, double* %433, align 8
  %435 = fpext float %432 to double
  %436 = fmul double %434, %435
  %437 = fadd double %429, %436
  %438 = add nuw nsw i64 %404, 4
  %439 = add i64 %406, -4
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %376, label %403

441:                                              ; preds = %353, %357, %361, %395, %402
  %442 = load double, double* %23, align 8
  %443 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %253, i64 0, i32 0, i32 0
  %444 = load double, double* %443, align 8
  %445 = fadd double %442, %444
  store double %445, double* %23, align 8
  %446 = load double, double* %24, align 8
  %447 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %354, i64 0, i32 0, i32 0
  %448 = load double, double* %447, align 8
  %449 = fadd double %446, %448
  store double %449, double* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %22, i64 16, i1 false)
  %450 = add i32 %31, 4
  %451 = load i32, i32* %6, align 4
  %452 = icmp ugt i32 %451, %450
  br i1 %452, label %454, label %453, !prof !3

453:                                              ; preds = %441
  store i8 1, i8* %16, align 8
  br label %454

454:                                              ; preds = %453, %441
  %455 = load i32, i32* %17, align 4
  %456 = icmp ugt i32 %455, %450
  br i1 %456, label %458, label %457, !prof !3

457:                                              ; preds = %454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %462

458:                                              ; preds = %454
  %459 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %18, align 8
  %460 = zext i32 %450 to i64
  %461 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 %460
  br label %462

462:                                              ; preds = %458, %457
  %463 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %457 ], [ %461, %458 ]
  %464 = load i8, i8* %19, align 8, !range !6
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %550, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 3, i32 1
  %468 = load i32, i32* %467, align 4
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %550, label %470

470:                                              ; preds = %466
  %471 = load i32, i32* %20, align 4
  %472 = icmp eq i32 %471, %468
  br i1 %472, label %473, label %550, !prof !3

473:                                              ; preds = %470
  %474 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 0, i32 0
  %475 = load double, double* %474, align 8
  %476 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 3, i32 2
  %477 = zext i32 %468 to i64
  %478 = load float*, float** %21, align 8
  %479 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %476, align 8
  %480 = add nsw i64 %477, -1
  %481 = and i64 %477, 3
  %482 = icmp ult i64 %480, 3
  br i1 %482, label %485, label %483

483:                                              ; preds = %473
  %484 = sub nsw i64 %477, %481
  br label %512

485:                                              ; preds = %512, %473
  %486 = phi double [ undef, %473 ], [ %546, %512 ]
  %487 = phi i64 [ 0, %473 ], [ %547, %512 ]
  %488 = phi double [ %475, %473 ], [ %546, %512 ]
  %489 = icmp eq i64 %481, 0
  br i1 %489, label %504, label %490

490:                                              ; preds = %485, %490
  %491 = phi i64 [ %501, %490 ], [ %487, %485 ]
  %492 = phi double [ %500, %490 ], [ %488, %485 ]
  %493 = phi i64 [ %502, %490 ], [ %481, %485 ]
  %494 = getelementptr inbounds float, float* %478, i64 %491
  %495 = load float, float* %494, align 4
  %496 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %491, i32 0
  %497 = load double, double* %496, align 8
  %498 = fpext float %495 to double
  %499 = fmul double %497, %498
  %500 = fadd double %492, %499
  %501 = add nuw nsw i64 %491, 1
  %502 = add i64 %493, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %490, !llvm.loop !42

504:                                              ; preds = %490, %485
  %505 = phi double [ %486, %485 ], [ %500, %490 ]
  %506 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 2
  store i32 0, i32* %506, align 4
  %507 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 1
  store i32 0, i32* %507, align 8
  %508 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 3, i32 0
  %509 = load i32, i32* %508, align 8
  %510 = icmp slt i32 %509, 0
  store double %505, double* %474, align 8
  br i1 %510, label %550, label %511, !prof !2

511:                                              ; preds = %504
  store i32 0, i32* %467, align 4
  br label %550

512:                                              ; preds = %512, %483
  %513 = phi i64 [ 0, %483 ], [ %547, %512 ]
  %514 = phi double [ %475, %483 ], [ %546, %512 ]
  %515 = phi i64 [ %484, %483 ], [ %548, %512 ]
  %516 = getelementptr inbounds float, float* %478, i64 %513
  %517 = load float, float* %516, align 4
  %518 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %513, i32 0
  %519 = load double, double* %518, align 8
  %520 = fpext float %517 to double
  %521 = fmul double %519, %520
  %522 = fadd double %514, %521
  %523 = or i64 %513, 1
  %524 = getelementptr inbounds float, float* %478, i64 %523
  %525 = load float, float* %524, align 4
  %526 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %523, i32 0
  %527 = load double, double* %526, align 8
  %528 = fpext float %525 to double
  %529 = fmul double %527, %528
  %530 = fadd double %522, %529
  %531 = or i64 %513, 2
  %532 = getelementptr inbounds float, float* %478, i64 %531
  %533 = load float, float* %532, align 4
  %534 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %531, i32 0
  %535 = load double, double* %534, align 8
  %536 = fpext float %533 to double
  %537 = fmul double %535, %536
  %538 = fadd double %530, %537
  %539 = or i64 %513, 3
  %540 = getelementptr inbounds float, float* %478, i64 %539
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %539, i32 0
  %543 = load double, double* %542, align 8
  %544 = fpext float %541 to double
  %545 = fmul double %543, %544
  %546 = fadd double %538, %545
  %547 = add nuw nsw i64 %513, 4
  %548 = add i64 %515, -4
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %485, label %512

550:                                              ; preds = %462, %466, %470, %504, %511
  %551 = add i32 %31, 5
  %552 = load i32, i32* %6, align 4
  %553 = icmp ugt i32 %552, %551
  br i1 %553, label %555, label %554, !prof !3

554:                                              ; preds = %550
  store i8 1, i8* %16, align 8
  br label %555

555:                                              ; preds = %554, %550
  %556 = load i32, i32* %17, align 4
  %557 = icmp ugt i32 %556, %551
  br i1 %557, label %559, label %558, !prof !3

558:                                              ; preds = %555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %563

559:                                              ; preds = %555
  %560 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %18, align 8
  %561 = zext i32 %551 to i64
  %562 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %560, i64 %561
  br label %563

563:                                              ; preds = %559, %558
  %564 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %558 ], [ %562, %559 ]
  %565 = load i8, i8* %19, align 8, !range !6
  %566 = icmp eq i8 %565, 0
  br i1 %566, label %651, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 1
  %569 = load i32, i32* %568, align 4
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %651, label %571

571:                                              ; preds = %567
  %572 = load i32, i32* %20, align 4
  %573 = icmp eq i32 %572, %569
  br i1 %573, label %574, label %651, !prof !3

574:                                              ; preds = %571
  %575 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 0, i32 0
  %576 = load double, double* %575, align 8
  %577 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 2
  %578 = zext i32 %569 to i64
  %579 = load float*, float** %21, align 8
  %580 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %577, align 8
  %581 = add nsw i64 %578, -1
  %582 = and i64 %578, 3
  %583 = icmp ult i64 %581, 3
  br i1 %583, label %586, label %584

584:                                              ; preds = %574
  %585 = sub nsw i64 %578, %582
  br label %613

586:                                              ; preds = %613, %574
  %587 = phi double [ undef, %574 ], [ %647, %613 ]
  %588 = phi i64 [ 0, %574 ], [ %648, %613 ]
  %589 = phi double [ %576, %574 ], [ %647, %613 ]
  %590 = icmp eq i64 %582, 0
  br i1 %590, label %605, label %591

591:                                              ; preds = %586, %591
  %592 = phi i64 [ %602, %591 ], [ %588, %586 ]
  %593 = phi double [ %601, %591 ], [ %589, %586 ]
  %594 = phi i64 [ %603, %591 ], [ %582, %586 ]
  %595 = getelementptr inbounds float, float* %579, i64 %592
  %596 = load float, float* %595, align 4
  %597 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %592, i32 0
  %598 = load double, double* %597, align 8
  %599 = fpext float %596 to double
  %600 = fmul double %598, %599
  %601 = fadd double %593, %600
  %602 = add nuw nsw i64 %592, 1
  %603 = add i64 %594, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %591, !llvm.loop !43

605:                                              ; preds = %591, %586
  %606 = phi double [ %587, %586 ], [ %601, %591 ]
  %607 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 2
  store i32 0, i32* %607, align 4
  %608 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 1
  store i32 0, i32* %608, align 8
  %609 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 0
  %610 = load i32, i32* %609, align 8
  %611 = icmp slt i32 %610, 0
  store double %606, double* %575, align 8
  br i1 %611, label %651, label %612, !prof !2

612:                                              ; preds = %605
  store i32 0, i32* %568, align 4
  br label %651

613:                                              ; preds = %613, %584
  %614 = phi i64 [ 0, %584 ], [ %648, %613 ]
  %615 = phi double [ %576, %584 ], [ %647, %613 ]
  %616 = phi i64 [ %585, %584 ], [ %649, %613 ]
  %617 = getelementptr inbounds float, float* %579, i64 %614
  %618 = load float, float* %617, align 4
  %619 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %614, i32 0
  %620 = load double, double* %619, align 8
  %621 = fpext float %618 to double
  %622 = fmul double %620, %621
  %623 = fadd double %615, %622
  %624 = or i64 %614, 1
  %625 = getelementptr inbounds float, float* %579, i64 %624
  %626 = load float, float* %625, align 4
  %627 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %624, i32 0
  %628 = load double, double* %627, align 8
  %629 = fpext float %626 to double
  %630 = fmul double %628, %629
  %631 = fadd double %623, %630
  %632 = or i64 %614, 2
  %633 = getelementptr inbounds float, float* %579, i64 %632
  %634 = load float, float* %633, align 4
  %635 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %632, i32 0
  %636 = load double, double* %635, align 8
  %637 = fpext float %634 to double
  %638 = fmul double %636, %637
  %639 = fadd double %631, %638
  %640 = or i64 %614, 3
  %641 = getelementptr inbounds float, float* %579, i64 %640
  %642 = load float, float* %641, align 4
  %643 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %580, i64 %640, i32 0
  %644 = load double, double* %643, align 8
  %645 = fpext float %642 to double
  %646 = fmul double %644, %645
  %647 = fadd double %639, %646
  %648 = add nuw nsw i64 %614, 4
  %649 = add i64 %616, -4
  %650 = icmp eq i64 %649, 0
  br i1 %650, label %586, label %613

651:                                              ; preds = %563, %567, %571, %605, %612
  %652 = load double, double* %26, align 8
  %653 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %463, i64 0, i32 0, i32 0
  %654 = load double, double* %653, align 8
  %655 = fadd double %652, %654
  store double %655, double* %26, align 8
  %656 = load double, double* %27, align 8
  %657 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 0, i32 0
  %658 = load double, double* %657, align 8
  %659 = fadd double %656, %658
  store double %659, double* %27, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  %660 = add i32 %30, 6
  %661 = icmp ugt i32 %660, %10
  %662 = load i32, i32* %6, align 4
  br i1 %661, label %663, label %28

663:                                              ; preds = %651
  %664 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %665 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %666 = bitcast double* %664 to <2 x double>*
  %667 = load <2 x double>, <2 x double>* %666, align 8
  %668 = icmp ugt i32 %662, %30
  br i1 %668, label %671, label %669, !prof !3

669:                                              ; preds = %663
  %670 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %670, align 8
  br label %671

671:                                              ; preds = %669, %663
  %672 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %673 = load i32, i32* %672, align 4
  %674 = icmp ugt i32 %673, %30
  br i1 %674, label %676, label %675, !prof !3

675:                                              ; preds = %671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %681

676:                                              ; preds = %671
  %677 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %678 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %677, align 8
  %679 = zext i32 %30 to i64
  %680 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %678, i64 %679
  br label %681

681:                                              ; preds = %676, %675
  %682 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %675 ], [ %680, %676 ]
  %683 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %684 = load i8, i8* %683, align 8, !range !6
  %685 = icmp eq i8 %684, 0
  br i1 %685, label %772, label %686

686:                                              ; preds = %681
  %687 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %682, i64 0, i32 3, i32 1
  %688 = load i32, i32* %687, align 4
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %772, label %690

690:                                              ; preds = %686
  %691 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %692 = load i32, i32* %691, align 4
  %693 = icmp eq i32 %692, %688
  br i1 %693, label %694, label %772, !prof !3

694:                                              ; preds = %690
  %695 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %682, i64 0, i32 0, i32 0
  %696 = load double, double* %695, align 8
  %697 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %698 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %682, i64 0, i32 3, i32 2
  %699 = zext i32 %688 to i64
  %700 = load float*, float** %697, align 8
  %701 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %698, align 8
  %702 = add nsw i64 %699, -1
  %703 = and i64 %699, 3
  %704 = icmp ult i64 %702, 3
  br i1 %704, label %707, label %705

705:                                              ; preds = %694
  %706 = sub nsw i64 %699, %703
  br label %734

707:                                              ; preds = %734, %694
  %708 = phi double [ undef, %694 ], [ %768, %734 ]
  %709 = phi i64 [ 0, %694 ], [ %769, %734 ]
  %710 = phi double [ %696, %694 ], [ %768, %734 ]
  %711 = icmp eq i64 %703, 0
  br i1 %711, label %726, label %712

712:                                              ; preds = %707, %712
  %713 = phi i64 [ %723, %712 ], [ %709, %707 ]
  %714 = phi double [ %722, %712 ], [ %710, %707 ]
  %715 = phi i64 [ %724, %712 ], [ %703, %707 ]
  %716 = getelementptr inbounds float, float* %700, i64 %713
  %717 = load float, float* %716, align 4
  %718 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %713, i32 0
  %719 = load double, double* %718, align 8
  %720 = fpext float %717 to double
  %721 = fmul double %719, %720
  %722 = fadd double %714, %721
  %723 = add nuw nsw i64 %713, 1
  %724 = add i64 %715, -1
  %725 = icmp eq i64 %724, 0
  br i1 %725, label %726, label %712, !llvm.loop !44

726:                                              ; preds = %712, %707
  %727 = phi double [ %708, %707 ], [ %722, %712 ]
  %728 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %682, i64 0, i32 2
  store i32 0, i32* %728, align 4
  %729 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %682, i64 0, i32 1
  store i32 0, i32* %729, align 8
  %730 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %682, i64 0, i32 3, i32 0
  %731 = load i32, i32* %730, align 8
  %732 = icmp slt i32 %731, 0
  store double %727, double* %695, align 8
  br i1 %732, label %772, label %733, !prof !2

733:                                              ; preds = %726
  store i32 0, i32* %687, align 4
  br label %772

734:                                              ; preds = %734, %705
  %735 = phi i64 [ 0, %705 ], [ %769, %734 ]
  %736 = phi double [ %696, %705 ], [ %768, %734 ]
  %737 = phi i64 [ %706, %705 ], [ %770, %734 ]
  %738 = getelementptr inbounds float, float* %700, i64 %735
  %739 = load float, float* %738, align 4
  %740 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %735, i32 0
  %741 = load double, double* %740, align 8
  %742 = fpext float %739 to double
  %743 = fmul double %741, %742
  %744 = fadd double %736, %743
  %745 = or i64 %735, 1
  %746 = getelementptr inbounds float, float* %700, i64 %745
  %747 = load float, float* %746, align 4
  %748 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %745, i32 0
  %749 = load double, double* %748, align 8
  %750 = fpext float %747 to double
  %751 = fmul double %749, %750
  %752 = fadd double %744, %751
  %753 = or i64 %735, 2
  %754 = getelementptr inbounds float, float* %700, i64 %753
  %755 = load float, float* %754, align 4
  %756 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %753, i32 0
  %757 = load double, double* %756, align 8
  %758 = fpext float %755 to double
  %759 = fmul double %757, %758
  %760 = fadd double %752, %759
  %761 = or i64 %735, 3
  %762 = getelementptr inbounds float, float* %700, i64 %761
  %763 = load float, float* %762, align 4
  %764 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %761, i32 0
  %765 = load double, double* %764, align 8
  %766 = fpext float %763 to double
  %767 = fmul double %765, %766
  %768 = fadd double %760, %767
  %769 = add nuw nsw i64 %735, 4
  %770 = add i64 %737, -4
  %771 = icmp eq i64 %770, 0
  br i1 %771, label %707, label %734

772:                                              ; preds = %681, %686, %690, %726, %733
  %773 = or i32 %30, 1
  %774 = load i32, i32* %6, align 4
  %775 = icmp ugt i32 %774, %773
  br i1 %775, label %778, label %776, !prof !3

776:                                              ; preds = %772
  %777 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %777, align 8
  br label %778

778:                                              ; preds = %776, %772
  %779 = load i32, i32* %672, align 4
  %780 = icmp ugt i32 %779, %773
  br i1 %780, label %782, label %781, !prof !3

781:                                              ; preds = %778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %787

782:                                              ; preds = %778
  %783 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %784 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %783, align 8
  %785 = zext i32 %773 to i64
  %786 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %784, i64 %785
  br label %787

787:                                              ; preds = %782, %781
  %788 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %781 ], [ %786, %782 ]
  %789 = load i8, i8* %683, align 8, !range !6
  %790 = icmp eq i8 %789, 0
  br i1 %790, label %877, label %791

791:                                              ; preds = %787
  %792 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %788, i64 0, i32 3, i32 1
  %793 = load i32, i32* %792, align 4
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %877, label %795

795:                                              ; preds = %791
  %796 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %797 = load i32, i32* %796, align 4
  %798 = icmp eq i32 %797, %793
  br i1 %798, label %799, label %877, !prof !3

799:                                              ; preds = %795
  %800 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %788, i64 0, i32 0, i32 0
  %801 = load double, double* %800, align 8
  %802 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %803 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %788, i64 0, i32 3, i32 2
  %804 = zext i32 %793 to i64
  %805 = load float*, float** %802, align 8
  %806 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %803, align 8
  %807 = add nsw i64 %804, -1
  %808 = and i64 %804, 3
  %809 = icmp ult i64 %807, 3
  br i1 %809, label %812, label %810

810:                                              ; preds = %799
  %811 = sub nsw i64 %804, %808
  br label %839

812:                                              ; preds = %839, %799
  %813 = phi double [ undef, %799 ], [ %873, %839 ]
  %814 = phi i64 [ 0, %799 ], [ %874, %839 ]
  %815 = phi double [ %801, %799 ], [ %873, %839 ]
  %816 = icmp eq i64 %808, 0
  br i1 %816, label %831, label %817

817:                                              ; preds = %812, %817
  %818 = phi i64 [ %828, %817 ], [ %814, %812 ]
  %819 = phi double [ %827, %817 ], [ %815, %812 ]
  %820 = phi i64 [ %829, %817 ], [ %808, %812 ]
  %821 = getelementptr inbounds float, float* %805, i64 %818
  %822 = load float, float* %821, align 4
  %823 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %806, i64 %818, i32 0
  %824 = load double, double* %823, align 8
  %825 = fpext float %822 to double
  %826 = fmul double %824, %825
  %827 = fadd double %819, %826
  %828 = add nuw nsw i64 %818, 1
  %829 = add i64 %820, -1
  %830 = icmp eq i64 %829, 0
  br i1 %830, label %831, label %817, !llvm.loop !45

831:                                              ; preds = %817, %812
  %832 = phi double [ %813, %812 ], [ %827, %817 ]
  %833 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %788, i64 0, i32 2
  store i32 0, i32* %833, align 4
  %834 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %788, i64 0, i32 1
  store i32 0, i32* %834, align 8
  %835 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %788, i64 0, i32 3, i32 0
  %836 = load i32, i32* %835, align 8
  %837 = icmp slt i32 %836, 0
  store double %832, double* %800, align 8
  br i1 %837, label %877, label %838, !prof !2

838:                                              ; preds = %831
  store i32 0, i32* %792, align 4
  br label %877

839:                                              ; preds = %839, %810
  %840 = phi i64 [ 0, %810 ], [ %874, %839 ]
  %841 = phi double [ %801, %810 ], [ %873, %839 ]
  %842 = phi i64 [ %811, %810 ], [ %875, %839 ]
  %843 = getelementptr inbounds float, float* %805, i64 %840
  %844 = load float, float* %843, align 4
  %845 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %806, i64 %840, i32 0
  %846 = load double, double* %845, align 8
  %847 = fpext float %844 to double
  %848 = fmul double %846, %847
  %849 = fadd double %841, %848
  %850 = or i64 %840, 1
  %851 = getelementptr inbounds float, float* %805, i64 %850
  %852 = load float, float* %851, align 4
  %853 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %806, i64 %850, i32 0
  %854 = load double, double* %853, align 8
  %855 = fpext float %852 to double
  %856 = fmul double %854, %855
  %857 = fadd double %849, %856
  %858 = or i64 %840, 2
  %859 = getelementptr inbounds float, float* %805, i64 %858
  %860 = load float, float* %859, align 4
  %861 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %806, i64 %858, i32 0
  %862 = load double, double* %861, align 8
  %863 = fpext float %860 to double
  %864 = fmul double %862, %863
  %865 = fadd double %857, %864
  %866 = or i64 %840, 3
  %867 = getelementptr inbounds float, float* %805, i64 %866
  %868 = load float, float* %867, align 4
  %869 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %806, i64 %866, i32 0
  %870 = load double, double* %869, align 8
  %871 = fpext float %868 to double
  %872 = fmul double %870, %871
  %873 = fadd double %865, %872
  %874 = add nuw nsw i64 %840, 4
  %875 = add i64 %842, -4
  %876 = icmp eq i64 %875, 0
  br i1 %876, label %812, label %839

877:                                              ; preds = %787, %791, %795, %831, %838
  %878 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %682, i64 0, i32 0, i32 0
  %879 = load double, double* %878, align 8
  %880 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %788, i64 0, i32 0, i32 0
  %881 = load double, double* %880, align 8
  %882 = insertelement <2 x double> undef, double %879, i32 0
  %883 = insertelement <2 x double> %882, double %881, i32 1
  %884 = fadd <2 x double> %667, %883
  %885 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %886 = load i8, i8* %885, align 8, !range !6
  %887 = icmp eq i8 %886, 0
  br i1 %887, label %888, label %914

888:                                              ; preds = %877
  store i8 1, i8* %885, align 8
  %889 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %890 = load double, double* %889, align 8
  %891 = load double, double* %664, align 8
  %892 = fcmp ogt double %890, %891
  br i1 %892, label %893, label %895

893:                                              ; preds = %888
  store double %891, double* %889, align 8
  %894 = load double, double* %664, align 8
  br label %895

895:                                              ; preds = %893, %888
  %896 = phi double [ %894, %893 ], [ %891, %888 ]
  %897 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %898 = load double, double* %897, align 8
  %899 = fcmp ogt double %896, %898
  br i1 %899, label %900, label %901

900:                                              ; preds = %895
  store double %896, double* %897, align 8
  br label %901

901:                                              ; preds = %900, %895
  %902 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %903 = load double, double* %902, align 8
  %904 = load double, double* %665, align 8
  %905 = fcmp ogt double %903, %904
  br i1 %905, label %906, label %908

906:                                              ; preds = %901
  store double %904, double* %902, align 8
  %907 = load double, double* %665, align 8
  br label %908

908:                                              ; preds = %906, %901
  %909 = phi double [ %907, %906 ], [ %904, %901 ]
  %910 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %911 = load double, double* %910, align 8
  %912 = fcmp ogt double %909, %911
  br i1 %912, label %913, label %914

913:                                              ; preds = %908
  store double %909, double* %910, align 8
  br label %914

914:                                              ; preds = %913, %908, %877
  %915 = bitcast double* %664 to <2 x double>*
  store <2 x double> %884, <2 x double>* %915, align 8
  %916 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %917 = load double, double* %916, align 8
  %918 = extractelement <2 x double> %884, i32 0
  %919 = fcmp ogt double %917, %918
  br i1 %919, label %920, label %922

920:                                              ; preds = %914
  store double %918, double* %916, align 8
  %921 = load double, double* %664, align 8
  br label %922

922:                                              ; preds = %920, %914
  %923 = phi double [ %921, %920 ], [ %918, %914 ]
  %924 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %925 = load double, double* %924, align 8
  %926 = fcmp ogt double %923, %925
  br i1 %926, label %927, label %928

927:                                              ; preds = %922
  store double %923, double* %924, align 8
  br label %928

928:                                              ; preds = %927, %922
  %929 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %930 = load double, double* %929, align 8
  %931 = load double, double* %665, align 8
  %932 = fcmp ogt double %930, %931
  br i1 %932, label %933, label %935

933:                                              ; preds = %928
  store double %931, double* %929, align 8
  %934 = load double, double* %665, align 8
  br label %935

935:                                              ; preds = %933, %928
  %936 = phi double [ %934, %933 ], [ %931, %928 ]
  %937 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %938 = load double, double* %937, align 8
  %939 = fcmp ogt double %936, %938
  br i1 %939, label %940, label %941

940:                                              ; preds = %935
  store double %936, double* %937, align 8
  br label %941

941:                                              ; preds = %940, %935, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE10rlinecurveERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca %"struct.CFF::point_t", align 8
  %5 = alloca %"struct.CFF::point_t", align 8
  %6 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 8
  br i1 %8, label %953, label %9, !prof !2

9:                                                ; preds = %2
  %10 = add i32 %7, -6
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %15 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %16 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %17 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %18 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %19 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %20 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %22 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %24 = bitcast double* %11 to <2 x double>*
  %25 = bitcast double* %11 to <2 x double>*
  br label %26

26:                                               ; preds = %284, %9
  %27 = phi i32 [ %7, %9 ], [ %287, %284 ]
  %28 = phi i32 [ 2, %9 ], [ %285, %284 ]
  %29 = phi i32 [ 0, %9 ], [ %28, %284 ]
  %30 = load <2 x double>, <2 x double>* %24, align 8
  %31 = icmp ugt i32 %27, %29
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %26
  store i8 1, i8* %13, align 8
  br label %33

33:                                               ; preds = %32, %26
  %34 = load i32, i32* %14, align 4
  %35 = icmp ugt i32 %34, %29
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %33
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %41

37:                                               ; preds = %33
  %38 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %15, align 8
  %39 = zext i32 %29 to i64
  %40 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 %39
  br label %41

41:                                               ; preds = %37, %36
  %42 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %36 ], [ %40, %37 ]
  %43 = load i8, i8* %16, align 8, !range !6
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %129, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %42, i64 0, i32 3, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %129, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %17, align 4
  %51 = icmp eq i32 %50, %47
  br i1 %51, label %52, label %129, !prof !3

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %42, i64 0, i32 0, i32 0
  %54 = load double, double* %53, align 8
  %55 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %42, i64 0, i32 3, i32 2
  %56 = zext i32 %47 to i64
  %57 = load float*, float** %18, align 8
  %58 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %55, align 8
  %59 = add nsw i64 %56, -1
  %60 = and i64 %56, 3
  %61 = icmp ult i64 %59, 3
  br i1 %61, label %64, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %56, %60
  br label %91

64:                                               ; preds = %91, %52
  %65 = phi double [ undef, %52 ], [ %125, %91 ]
  %66 = phi i64 [ 0, %52 ], [ %126, %91 ]
  %67 = phi double [ %54, %52 ], [ %125, %91 ]
  %68 = icmp eq i64 %60, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %64, %69
  %70 = phi i64 [ %80, %69 ], [ %66, %64 ]
  %71 = phi double [ %79, %69 ], [ %67, %64 ]
  %72 = phi i64 [ %81, %69 ], [ %60, %64 ]
  %73 = getelementptr inbounds float, float* %57, i64 %70
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %58, i64 %70, i32 0
  %76 = load double, double* %75, align 8
  %77 = fpext float %74 to double
  %78 = fmul double %76, %77
  %79 = fadd double %71, %78
  %80 = add nuw nsw i64 %70, 1
  %81 = add i64 %72, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %69, !llvm.loop !46

83:                                               ; preds = %69, %64
  %84 = phi double [ %65, %64 ], [ %79, %69 ]
  %85 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %42, i64 0, i32 2
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %42, i64 0, i32 1
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %42, i64 0, i32 3, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp slt i32 %88, 0
  store double %84, double* %53, align 8
  br i1 %89, label %129, label %90, !prof !2

90:                                               ; preds = %83
  store i32 0, i32* %46, align 4
  br label %129

91:                                               ; preds = %91, %62
  %92 = phi i64 [ 0, %62 ], [ %126, %91 ]
  %93 = phi double [ %54, %62 ], [ %125, %91 ]
  %94 = phi i64 [ %63, %62 ], [ %127, %91 ]
  %95 = getelementptr inbounds float, float* %57, i64 %92
  %96 = load float, float* %95, align 4
  %97 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %58, i64 %92, i32 0
  %98 = load double, double* %97, align 8
  %99 = fpext float %96 to double
  %100 = fmul double %98, %99
  %101 = fadd double %93, %100
  %102 = or i64 %92, 1
  %103 = getelementptr inbounds float, float* %57, i64 %102
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %58, i64 %102, i32 0
  %106 = load double, double* %105, align 8
  %107 = fpext float %104 to double
  %108 = fmul double %106, %107
  %109 = fadd double %101, %108
  %110 = or i64 %92, 2
  %111 = getelementptr inbounds float, float* %57, i64 %110
  %112 = load float, float* %111, align 4
  %113 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %58, i64 %110, i32 0
  %114 = load double, double* %113, align 8
  %115 = fpext float %112 to double
  %116 = fmul double %114, %115
  %117 = fadd double %109, %116
  %118 = or i64 %92, 3
  %119 = getelementptr inbounds float, float* %57, i64 %118
  %120 = load float, float* %119, align 4
  %121 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %58, i64 %118, i32 0
  %122 = load double, double* %121, align 8
  %123 = fpext float %120 to double
  %124 = fmul double %122, %123
  %125 = fadd double %117, %124
  %126 = add nuw nsw i64 %92, 4
  %127 = add i64 %94, -4
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %64, label %91

129:                                              ; preds = %41, %45, %49, %83, %90
  %130 = or i32 %29, 1
  %131 = load i32, i32* %6, align 4
  %132 = icmp ugt i32 %131, %130
  br i1 %132, label %134, label %133, !prof !3

133:                                              ; preds = %129
  store i8 1, i8* %13, align 8
  br label %134

134:                                              ; preds = %133, %129
  %135 = load i32, i32* %14, align 4
  %136 = icmp ugt i32 %135, %130
  br i1 %136, label %138, label %137, !prof !3

137:                                              ; preds = %134
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %142

138:                                              ; preds = %134
  %139 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %15, align 8
  %140 = zext i32 %130 to i64
  %141 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %139, i64 %140
  br label %142

142:                                              ; preds = %138, %137
  %143 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %137 ], [ %141, %138 ]
  %144 = load i8, i8* %16, align 8, !range !6
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %230, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %143, i64 0, i32 3, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %230, label %150

150:                                              ; preds = %146
  %151 = load i32, i32* %17, align 4
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %153, label %230, !prof !3

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %143, i64 0, i32 0, i32 0
  %155 = load double, double* %154, align 8
  %156 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %143, i64 0, i32 3, i32 2
  %157 = zext i32 %148 to i64
  %158 = load float*, float** %18, align 8
  %159 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %156, align 8
  %160 = add nsw i64 %157, -1
  %161 = and i64 %157, 3
  %162 = icmp ult i64 %160, 3
  br i1 %162, label %165, label %163

163:                                              ; preds = %153
  %164 = sub nsw i64 %157, %161
  br label %192

165:                                              ; preds = %192, %153
  %166 = phi double [ undef, %153 ], [ %226, %192 ]
  %167 = phi i64 [ 0, %153 ], [ %227, %192 ]
  %168 = phi double [ %155, %153 ], [ %226, %192 ]
  %169 = icmp eq i64 %161, 0
  br i1 %169, label %184, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %181, %170 ], [ %167, %165 ]
  %172 = phi double [ %180, %170 ], [ %168, %165 ]
  %173 = phi i64 [ %182, %170 ], [ %161, %165 ]
  %174 = getelementptr inbounds float, float* %158, i64 %171
  %175 = load float, float* %174, align 4
  %176 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %159, i64 %171, i32 0
  %177 = load double, double* %176, align 8
  %178 = fpext float %175 to double
  %179 = fmul double %177, %178
  %180 = fadd double %172, %179
  %181 = add nuw nsw i64 %171, 1
  %182 = add i64 %173, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %170, !llvm.loop !47

184:                                              ; preds = %170, %165
  %185 = phi double [ %166, %165 ], [ %180, %170 ]
  %186 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %143, i64 0, i32 2
  store i32 0, i32* %186, align 4
  %187 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %143, i64 0, i32 1
  store i32 0, i32* %187, align 8
  %188 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %143, i64 0, i32 3, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = icmp slt i32 %189, 0
  store double %185, double* %154, align 8
  br i1 %190, label %230, label %191, !prof !2

191:                                              ; preds = %184
  store i32 0, i32* %147, align 4
  br label %230

192:                                              ; preds = %192, %163
  %193 = phi i64 [ 0, %163 ], [ %227, %192 ]
  %194 = phi double [ %155, %163 ], [ %226, %192 ]
  %195 = phi i64 [ %164, %163 ], [ %228, %192 ]
  %196 = getelementptr inbounds float, float* %158, i64 %193
  %197 = load float, float* %196, align 4
  %198 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %159, i64 %193, i32 0
  %199 = load double, double* %198, align 8
  %200 = fpext float %197 to double
  %201 = fmul double %199, %200
  %202 = fadd double %194, %201
  %203 = or i64 %193, 1
  %204 = getelementptr inbounds float, float* %158, i64 %203
  %205 = load float, float* %204, align 4
  %206 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %159, i64 %203, i32 0
  %207 = load double, double* %206, align 8
  %208 = fpext float %205 to double
  %209 = fmul double %207, %208
  %210 = fadd double %202, %209
  %211 = or i64 %193, 2
  %212 = getelementptr inbounds float, float* %158, i64 %211
  %213 = load float, float* %212, align 4
  %214 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %159, i64 %211, i32 0
  %215 = load double, double* %214, align 8
  %216 = fpext float %213 to double
  %217 = fmul double %215, %216
  %218 = fadd double %210, %217
  %219 = or i64 %193, 3
  %220 = getelementptr inbounds float, float* %158, i64 %219
  %221 = load float, float* %220, align 4
  %222 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %159, i64 %219, i32 0
  %223 = load double, double* %222, align 8
  %224 = fpext float %221 to double
  %225 = fmul double %223, %224
  %226 = fadd double %218, %225
  %227 = add nuw nsw i64 %193, 4
  %228 = add i64 %195, -4
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %165, label %192

230:                                              ; preds = %142, %146, %150, %184, %191
  %231 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %42, i64 0, i32 0, i32 0
  %232 = load double, double* %231, align 8
  %233 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %143, i64 0, i32 0, i32 0
  %234 = load double, double* %233, align 8
  %235 = insertelement <2 x double> undef, double %232, i32 0
  %236 = insertelement <2 x double> %235, double %234, i32 1
  %237 = fadd <2 x double> %30, %236
  %238 = load i8, i8* %19, align 8, !range !6
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %262

240:                                              ; preds = %230
  store i8 1, i8* %19, align 8
  %241 = load double, double* %20, align 8
  %242 = load double, double* %11, align 8
  %243 = fcmp ogt double %241, %242
  br i1 %243, label %244, label %246

244:                                              ; preds = %240
  store double %242, double* %20, align 8
  %245 = load double, double* %11, align 8
  br label %246

246:                                              ; preds = %244, %240
  %247 = phi double [ %245, %244 ], [ %242, %240 ]
  %248 = load double, double* %21, align 8
  %249 = fcmp ogt double %247, %248
  br i1 %249, label %250, label %251

250:                                              ; preds = %246
  store double %247, double* %21, align 8
  br label %251

251:                                              ; preds = %250, %246
  %252 = load double, double* %22, align 8
  %253 = load double, double* %12, align 8
  %254 = fcmp ogt double %252, %253
  br i1 %254, label %255, label %257

255:                                              ; preds = %251
  store double %253, double* %22, align 8
  %256 = load double, double* %12, align 8
  br label %257

257:                                              ; preds = %255, %251
  %258 = phi double [ %256, %255 ], [ %253, %251 ]
  %259 = load double, double* %23, align 8
  %260 = fcmp ogt double %258, %259
  br i1 %260, label %261, label %262

261:                                              ; preds = %257
  store double %258, double* %23, align 8
  br label %262

262:                                              ; preds = %261, %257, %230
  store <2 x double> %237, <2 x double>* %25, align 8
  %263 = load double, double* %20, align 8
  %264 = extractelement <2 x double> %237, i32 0
  %265 = fcmp ogt double %263, %264
  br i1 %265, label %266, label %268

266:                                              ; preds = %262
  store double %264, double* %20, align 8
  %267 = load double, double* %11, align 8
  br label %268

268:                                              ; preds = %266, %262
  %269 = phi double [ %267, %266 ], [ %264, %262 ]
  %270 = load double, double* %21, align 8
  %271 = fcmp ogt double %269, %270
  br i1 %271, label %272, label %273

272:                                              ; preds = %268
  store double %269, double* %21, align 8
  br label %273

273:                                              ; preds = %272, %268
  %274 = load double, double* %22, align 8
  %275 = load double, double* %12, align 8
  %276 = fcmp ogt double %274, %275
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  store double %275, double* %22, align 8
  %278 = load double, double* %12, align 8
  br label %279

279:                                              ; preds = %277, %273
  %280 = phi double [ %278, %277 ], [ %275, %273 ]
  %281 = load double, double* %23, align 8
  %282 = fcmp ogt double %280, %281
  br i1 %282, label %283, label %284

283:                                              ; preds = %279
  store double %280, double* %23, align 8
  br label %284

284:                                              ; preds = %279, %283
  %285 = add i32 %28, 2
  %286 = icmp ugt i32 %285, %10
  %287 = load i32, i32* %6, align 4
  br i1 %286, label %288, label %26

288:                                              ; preds = %284
  %289 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %289) #6
  %290 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %292 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %293 = bitcast %"struct.CFF::point_t"* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %289, i8* align 8 %293, i64 16, i1 false)
  %294 = icmp ugt i32 %287, %28
  br i1 %294, label %297, label %295, !prof !3

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %296, align 8
  br label %297

297:                                              ; preds = %295, %288
  %298 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = icmp ugt i32 %299, %28
  br i1 %300, label %302, label %301, !prof !3

301:                                              ; preds = %297
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %307

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %304 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %303, align 8
  %305 = zext i32 %28 to i64
  %306 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %304, i64 %305
  br label %307

307:                                              ; preds = %302, %301
  %308 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %301 ], [ %306, %302 ]
  %309 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %310 = load i8, i8* %309, align 8, !range !6
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %398, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %308, i64 0, i32 3, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %398, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, %314
  br i1 %319, label %320, label %398, !prof !3

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %308, i64 0, i32 0, i32 0
  %322 = load double, double* %321, align 8
  %323 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %324 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %308, i64 0, i32 3, i32 2
  %325 = zext i32 %314 to i64
  %326 = load float*, float** %323, align 8
  %327 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %324, align 8
  %328 = add nsw i64 %325, -1
  %329 = and i64 %325, 3
  %330 = icmp ult i64 %328, 3
  br i1 %330, label %333, label %331

331:                                              ; preds = %320
  %332 = sub nsw i64 %325, %329
  br label %360

333:                                              ; preds = %360, %320
  %334 = phi double [ undef, %320 ], [ %394, %360 ]
  %335 = phi i64 [ 0, %320 ], [ %395, %360 ]
  %336 = phi double [ %322, %320 ], [ %394, %360 ]
  %337 = icmp eq i64 %329, 0
  br i1 %337, label %352, label %338

338:                                              ; preds = %333, %338
  %339 = phi i64 [ %349, %338 ], [ %335, %333 ]
  %340 = phi double [ %348, %338 ], [ %336, %333 ]
  %341 = phi i64 [ %350, %338 ], [ %329, %333 ]
  %342 = getelementptr inbounds float, float* %326, i64 %339
  %343 = load float, float* %342, align 4
  %344 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %327, i64 %339, i32 0
  %345 = load double, double* %344, align 8
  %346 = fpext float %343 to double
  %347 = fmul double %345, %346
  %348 = fadd double %340, %347
  %349 = add nuw nsw i64 %339, 1
  %350 = add i64 %341, -1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %338, !llvm.loop !48

352:                                              ; preds = %338, %333
  %353 = phi double [ %334, %333 ], [ %348, %338 ]
  %354 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %308, i64 0, i32 2
  store i32 0, i32* %354, align 4
  %355 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %308, i64 0, i32 1
  store i32 0, i32* %355, align 8
  %356 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %308, i64 0, i32 3, i32 0
  %357 = load i32, i32* %356, align 8
  %358 = icmp slt i32 %357, 0
  store double %353, double* %321, align 8
  br i1 %358, label %398, label %359, !prof !2

359:                                              ; preds = %352
  store i32 0, i32* %313, align 4
  br label %398

360:                                              ; preds = %360, %331
  %361 = phi i64 [ 0, %331 ], [ %395, %360 ]
  %362 = phi double [ %322, %331 ], [ %394, %360 ]
  %363 = phi i64 [ %332, %331 ], [ %396, %360 ]
  %364 = getelementptr inbounds float, float* %326, i64 %361
  %365 = load float, float* %364, align 4
  %366 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %327, i64 %361, i32 0
  %367 = load double, double* %366, align 8
  %368 = fpext float %365 to double
  %369 = fmul double %367, %368
  %370 = fadd double %362, %369
  %371 = or i64 %361, 1
  %372 = getelementptr inbounds float, float* %326, i64 %371
  %373 = load float, float* %372, align 4
  %374 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %327, i64 %371, i32 0
  %375 = load double, double* %374, align 8
  %376 = fpext float %373 to double
  %377 = fmul double %375, %376
  %378 = fadd double %370, %377
  %379 = or i64 %361, 2
  %380 = getelementptr inbounds float, float* %326, i64 %379
  %381 = load float, float* %380, align 4
  %382 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %327, i64 %379, i32 0
  %383 = load double, double* %382, align 8
  %384 = fpext float %381 to double
  %385 = fmul double %383, %384
  %386 = fadd double %378, %385
  %387 = or i64 %361, 3
  %388 = getelementptr inbounds float, float* %326, i64 %387
  %389 = load float, float* %388, align 4
  %390 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %327, i64 %387, i32 0
  %391 = load double, double* %390, align 8
  %392 = fpext float %389 to double
  %393 = fmul double %391, %392
  %394 = fadd double %386, %393
  %395 = add nuw nsw i64 %361, 4
  %396 = add i64 %363, -4
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %333, label %360

398:                                              ; preds = %307, %312, %316, %352, %359
  %399 = or i32 %28, 1
  %400 = load i32, i32* %6, align 4
  %401 = icmp ugt i32 %400, %399
  br i1 %401, label %404, label %402, !prof !3

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %403, align 8
  br label %404

404:                                              ; preds = %402, %398
  %405 = load i32, i32* %298, align 4
  %406 = icmp ugt i32 %405, %399
  br i1 %406, label %408, label %407, !prof !3

407:                                              ; preds = %404
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %413

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %410 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %409, align 8
  %411 = zext i32 %399 to i64
  %412 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %410, i64 %411
  br label %413

413:                                              ; preds = %408, %407
  %414 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %407 ], [ %412, %408 ]
  %415 = load i8, i8* %309, align 8, !range !6
  %416 = icmp eq i8 %415, 0
  br i1 %416, label %503, label %417

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %414, i64 0, i32 3, i32 1
  %419 = load i32, i32* %418, align 4
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %503, label %421

421:                                              ; preds = %417
  %422 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = icmp eq i32 %423, %419
  br i1 %424, label %425, label %503, !prof !3

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %414, i64 0, i32 0, i32 0
  %427 = load double, double* %426, align 8
  %428 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %429 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %414, i64 0, i32 3, i32 2
  %430 = zext i32 %419 to i64
  %431 = load float*, float** %428, align 8
  %432 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %429, align 8
  %433 = add nsw i64 %430, -1
  %434 = and i64 %430, 3
  %435 = icmp ult i64 %433, 3
  br i1 %435, label %438, label %436

436:                                              ; preds = %425
  %437 = sub nsw i64 %430, %434
  br label %465

438:                                              ; preds = %465, %425
  %439 = phi double [ undef, %425 ], [ %499, %465 ]
  %440 = phi i64 [ 0, %425 ], [ %500, %465 ]
  %441 = phi double [ %427, %425 ], [ %499, %465 ]
  %442 = icmp eq i64 %434, 0
  br i1 %442, label %457, label %443

443:                                              ; preds = %438, %443
  %444 = phi i64 [ %454, %443 ], [ %440, %438 ]
  %445 = phi double [ %453, %443 ], [ %441, %438 ]
  %446 = phi i64 [ %455, %443 ], [ %434, %438 ]
  %447 = getelementptr inbounds float, float* %431, i64 %444
  %448 = load float, float* %447, align 4
  %449 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %432, i64 %444, i32 0
  %450 = load double, double* %449, align 8
  %451 = fpext float %448 to double
  %452 = fmul double %450, %451
  %453 = fadd double %445, %452
  %454 = add nuw nsw i64 %444, 1
  %455 = add i64 %446, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %443, !llvm.loop !49

457:                                              ; preds = %443, %438
  %458 = phi double [ %439, %438 ], [ %453, %443 ]
  %459 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %414, i64 0, i32 2
  store i32 0, i32* %459, align 4
  %460 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %414, i64 0, i32 1
  store i32 0, i32* %460, align 8
  %461 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %414, i64 0, i32 3, i32 0
  %462 = load i32, i32* %461, align 8
  %463 = icmp slt i32 %462, 0
  store double %458, double* %426, align 8
  br i1 %463, label %503, label %464, !prof !2

464:                                              ; preds = %457
  store i32 0, i32* %418, align 4
  br label %503

465:                                              ; preds = %465, %436
  %466 = phi i64 [ 0, %436 ], [ %500, %465 ]
  %467 = phi double [ %427, %436 ], [ %499, %465 ]
  %468 = phi i64 [ %437, %436 ], [ %501, %465 ]
  %469 = getelementptr inbounds float, float* %431, i64 %466
  %470 = load float, float* %469, align 4
  %471 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %432, i64 %466, i32 0
  %472 = load double, double* %471, align 8
  %473 = fpext float %470 to double
  %474 = fmul double %472, %473
  %475 = fadd double %467, %474
  %476 = or i64 %466, 1
  %477 = getelementptr inbounds float, float* %431, i64 %476
  %478 = load float, float* %477, align 4
  %479 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %432, i64 %476, i32 0
  %480 = load double, double* %479, align 8
  %481 = fpext float %478 to double
  %482 = fmul double %480, %481
  %483 = fadd double %475, %482
  %484 = or i64 %466, 2
  %485 = getelementptr inbounds float, float* %431, i64 %484
  %486 = load float, float* %485, align 4
  %487 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %432, i64 %484, i32 0
  %488 = load double, double* %487, align 8
  %489 = fpext float %486 to double
  %490 = fmul double %488, %489
  %491 = fadd double %483, %490
  %492 = or i64 %466, 3
  %493 = getelementptr inbounds float, float* %431, i64 %492
  %494 = load float, float* %493, align 4
  %495 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %432, i64 %492, i32 0
  %496 = load double, double* %495, align 8
  %497 = fpext float %494 to double
  %498 = fmul double %496, %497
  %499 = fadd double %491, %498
  %500 = add nuw nsw i64 %466, 4
  %501 = add i64 %468, -4
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %438, label %465

503:                                              ; preds = %413, %417, %421, %457, %464
  %504 = load double, double* %290, align 8
  %505 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %308, i64 0, i32 0, i32 0
  %506 = load double, double* %505, align 8
  %507 = fadd double %504, %506
  store double %507, double* %290, align 8
  %508 = load double, double* %291, align 8
  %509 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %414, i64 0, i32 0, i32 0
  %510 = load double, double* %509, align 8
  %511 = fadd double %508, %510
  store double %511, double* %291, align 8
  %512 = bitcast %"struct.CFF::point_t"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %512) #6
  %513 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 0, i32 0
  %514 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %512, i8* nonnull align 8 %289, i64 16, i1 false)
  %515 = load i32, i32* %6, align 4
  %516 = icmp ugt i32 %515, %285
  br i1 %516, label %519, label %517, !prof !3

517:                                              ; preds = %503
  %518 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %518, align 8
  br label %519

519:                                              ; preds = %517, %503
  %520 = load i32, i32* %298, align 4
  %521 = icmp ugt i32 %520, %285
  br i1 %521, label %523, label %522, !prof !3

522:                                              ; preds = %519
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %528

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %525 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %524, align 8
  %526 = zext i32 %285 to i64
  %527 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %525, i64 %526
  br label %528

528:                                              ; preds = %523, %522
  %529 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %522 ], [ %527, %523 ]
  %530 = load i8, i8* %309, align 8, !range !6
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %618, label %532

532:                                              ; preds = %528
  %533 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %529, i64 0, i32 3, i32 1
  %534 = load i32, i32* %533, align 4
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %618, label %536

536:                                              ; preds = %532
  %537 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %538 = load i32, i32* %537, align 4
  %539 = icmp eq i32 %538, %534
  br i1 %539, label %540, label %618, !prof !3

540:                                              ; preds = %536
  %541 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %529, i64 0, i32 0, i32 0
  %542 = load double, double* %541, align 8
  %543 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %544 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %529, i64 0, i32 3, i32 2
  %545 = zext i32 %534 to i64
  %546 = load float*, float** %543, align 8
  %547 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %544, align 8
  %548 = add nsw i64 %545, -1
  %549 = and i64 %545, 3
  %550 = icmp ult i64 %548, 3
  br i1 %550, label %553, label %551

551:                                              ; preds = %540
  %552 = sub nsw i64 %545, %549
  br label %580

553:                                              ; preds = %580, %540
  %554 = phi double [ undef, %540 ], [ %614, %580 ]
  %555 = phi i64 [ 0, %540 ], [ %615, %580 ]
  %556 = phi double [ %542, %540 ], [ %614, %580 ]
  %557 = icmp eq i64 %549, 0
  br i1 %557, label %572, label %558

558:                                              ; preds = %553, %558
  %559 = phi i64 [ %569, %558 ], [ %555, %553 ]
  %560 = phi double [ %568, %558 ], [ %556, %553 ]
  %561 = phi i64 [ %570, %558 ], [ %549, %553 ]
  %562 = getelementptr inbounds float, float* %546, i64 %559
  %563 = load float, float* %562, align 4
  %564 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %547, i64 %559, i32 0
  %565 = load double, double* %564, align 8
  %566 = fpext float %563 to double
  %567 = fmul double %565, %566
  %568 = fadd double %560, %567
  %569 = add nuw nsw i64 %559, 1
  %570 = add i64 %561, -1
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %572, label %558, !llvm.loop !50

572:                                              ; preds = %558, %553
  %573 = phi double [ %554, %553 ], [ %568, %558 ]
  %574 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %529, i64 0, i32 2
  store i32 0, i32* %574, align 4
  %575 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %529, i64 0, i32 1
  store i32 0, i32* %575, align 8
  %576 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %529, i64 0, i32 3, i32 0
  %577 = load i32, i32* %576, align 8
  %578 = icmp slt i32 %577, 0
  store double %573, double* %541, align 8
  br i1 %578, label %618, label %579, !prof !2

579:                                              ; preds = %572
  store i32 0, i32* %533, align 4
  br label %618

580:                                              ; preds = %580, %551
  %581 = phi i64 [ 0, %551 ], [ %615, %580 ]
  %582 = phi double [ %542, %551 ], [ %614, %580 ]
  %583 = phi i64 [ %552, %551 ], [ %616, %580 ]
  %584 = getelementptr inbounds float, float* %546, i64 %581
  %585 = load float, float* %584, align 4
  %586 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %547, i64 %581, i32 0
  %587 = load double, double* %586, align 8
  %588 = fpext float %585 to double
  %589 = fmul double %587, %588
  %590 = fadd double %582, %589
  %591 = or i64 %581, 1
  %592 = getelementptr inbounds float, float* %546, i64 %591
  %593 = load float, float* %592, align 4
  %594 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %547, i64 %591, i32 0
  %595 = load double, double* %594, align 8
  %596 = fpext float %593 to double
  %597 = fmul double %595, %596
  %598 = fadd double %590, %597
  %599 = or i64 %581, 2
  %600 = getelementptr inbounds float, float* %546, i64 %599
  %601 = load float, float* %600, align 4
  %602 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %547, i64 %599, i32 0
  %603 = load double, double* %602, align 8
  %604 = fpext float %601 to double
  %605 = fmul double %603, %604
  %606 = fadd double %598, %605
  %607 = or i64 %581, 3
  %608 = getelementptr inbounds float, float* %546, i64 %607
  %609 = load float, float* %608, align 4
  %610 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %547, i64 %607, i32 0
  %611 = load double, double* %610, align 8
  %612 = fpext float %609 to double
  %613 = fmul double %611, %612
  %614 = fadd double %606, %613
  %615 = add nuw nsw i64 %581, 4
  %616 = add i64 %583, -4
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %553, label %580

618:                                              ; preds = %528, %532, %536, %572, %579
  %619 = add i32 %28, 3
  %620 = load i32, i32* %6, align 4
  %621 = icmp ugt i32 %620, %619
  br i1 %621, label %624, label %622, !prof !3

622:                                              ; preds = %618
  %623 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %623, align 8
  br label %624

624:                                              ; preds = %622, %618
  %625 = load i32, i32* %298, align 4
  %626 = icmp ugt i32 %625, %619
  br i1 %626, label %628, label %627, !prof !3

627:                                              ; preds = %624
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %633

628:                                              ; preds = %624
  %629 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %630 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %629, align 8
  %631 = zext i32 %619 to i64
  %632 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %630, i64 %631
  br label %633

633:                                              ; preds = %628, %627
  %634 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %627 ], [ %632, %628 ]
  %635 = load i8, i8* %309, align 8, !range !6
  %636 = icmp eq i8 %635, 0
  br i1 %636, label %723, label %637

637:                                              ; preds = %633
  %638 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %634, i64 0, i32 3, i32 1
  %639 = load i32, i32* %638, align 4
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %723, label %641

641:                                              ; preds = %637
  %642 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %643 = load i32, i32* %642, align 4
  %644 = icmp eq i32 %643, %639
  br i1 %644, label %645, label %723, !prof !3

645:                                              ; preds = %641
  %646 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %634, i64 0, i32 0, i32 0
  %647 = load double, double* %646, align 8
  %648 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %649 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %634, i64 0, i32 3, i32 2
  %650 = zext i32 %639 to i64
  %651 = load float*, float** %648, align 8
  %652 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %649, align 8
  %653 = add nsw i64 %650, -1
  %654 = and i64 %650, 3
  %655 = icmp ult i64 %653, 3
  br i1 %655, label %658, label %656

656:                                              ; preds = %645
  %657 = sub nsw i64 %650, %654
  br label %685

658:                                              ; preds = %685, %645
  %659 = phi double [ undef, %645 ], [ %719, %685 ]
  %660 = phi i64 [ 0, %645 ], [ %720, %685 ]
  %661 = phi double [ %647, %645 ], [ %719, %685 ]
  %662 = icmp eq i64 %654, 0
  br i1 %662, label %677, label %663

663:                                              ; preds = %658, %663
  %664 = phi i64 [ %674, %663 ], [ %660, %658 ]
  %665 = phi double [ %673, %663 ], [ %661, %658 ]
  %666 = phi i64 [ %675, %663 ], [ %654, %658 ]
  %667 = getelementptr inbounds float, float* %651, i64 %664
  %668 = load float, float* %667, align 4
  %669 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %652, i64 %664, i32 0
  %670 = load double, double* %669, align 8
  %671 = fpext float %668 to double
  %672 = fmul double %670, %671
  %673 = fadd double %665, %672
  %674 = add nuw nsw i64 %664, 1
  %675 = add i64 %666, -1
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %663, !llvm.loop !51

677:                                              ; preds = %663, %658
  %678 = phi double [ %659, %658 ], [ %673, %663 ]
  %679 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %634, i64 0, i32 2
  store i32 0, i32* %679, align 4
  %680 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %634, i64 0, i32 1
  store i32 0, i32* %680, align 8
  %681 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %634, i64 0, i32 3, i32 0
  %682 = load i32, i32* %681, align 8
  %683 = icmp slt i32 %682, 0
  store double %678, double* %646, align 8
  br i1 %683, label %723, label %684, !prof !2

684:                                              ; preds = %677
  store i32 0, i32* %638, align 4
  br label %723

685:                                              ; preds = %685, %656
  %686 = phi i64 [ 0, %656 ], [ %720, %685 ]
  %687 = phi double [ %647, %656 ], [ %719, %685 ]
  %688 = phi i64 [ %657, %656 ], [ %721, %685 ]
  %689 = getelementptr inbounds float, float* %651, i64 %686
  %690 = load float, float* %689, align 4
  %691 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %652, i64 %686, i32 0
  %692 = load double, double* %691, align 8
  %693 = fpext float %690 to double
  %694 = fmul double %692, %693
  %695 = fadd double %687, %694
  %696 = or i64 %686, 1
  %697 = getelementptr inbounds float, float* %651, i64 %696
  %698 = load float, float* %697, align 4
  %699 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %652, i64 %696, i32 0
  %700 = load double, double* %699, align 8
  %701 = fpext float %698 to double
  %702 = fmul double %700, %701
  %703 = fadd double %695, %702
  %704 = or i64 %686, 2
  %705 = getelementptr inbounds float, float* %651, i64 %704
  %706 = load float, float* %705, align 4
  %707 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %652, i64 %704, i32 0
  %708 = load double, double* %707, align 8
  %709 = fpext float %706 to double
  %710 = fmul double %708, %709
  %711 = fadd double %703, %710
  %712 = or i64 %686, 3
  %713 = getelementptr inbounds float, float* %651, i64 %712
  %714 = load float, float* %713, align 4
  %715 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %652, i64 %712, i32 0
  %716 = load double, double* %715, align 8
  %717 = fpext float %714 to double
  %718 = fmul double %716, %717
  %719 = fadd double %711, %718
  %720 = add nuw nsw i64 %686, 4
  %721 = add i64 %688, -4
  %722 = icmp eq i64 %721, 0
  br i1 %722, label %658, label %685

723:                                              ; preds = %633, %637, %641, %677, %684
  %724 = load double, double* %513, align 8
  %725 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %529, i64 0, i32 0, i32 0
  %726 = load double, double* %725, align 8
  %727 = fadd double %724, %726
  store double %727, double* %513, align 8
  %728 = load double, double* %514, align 8
  %729 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %634, i64 0, i32 0, i32 0
  %730 = load double, double* %729, align 8
  %731 = fadd double %728, %730
  store double %731, double* %514, align 8
  %732 = bitcast %"struct.CFF::point_t"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %732) #6
  %733 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 0, i32 0
  %734 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %732, i8* nonnull align 8 %512, i64 16, i1 false)
  %735 = add i32 %28, 4
  %736 = load i32, i32* %6, align 4
  %737 = icmp ugt i32 %736, %735
  br i1 %737, label %740, label %738, !prof !3

738:                                              ; preds = %723
  %739 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %739, align 8
  br label %740

740:                                              ; preds = %738, %723
  %741 = load i32, i32* %298, align 4
  %742 = icmp ugt i32 %741, %735
  br i1 %742, label %744, label %743, !prof !3

743:                                              ; preds = %740
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %749

744:                                              ; preds = %740
  %745 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %746 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %745, align 8
  %747 = zext i32 %735 to i64
  %748 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %746, i64 %747
  br label %749

749:                                              ; preds = %744, %743
  %750 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %743 ], [ %748, %744 ]
  %751 = load i8, i8* %309, align 8, !range !6
  %752 = icmp eq i8 %751, 0
  br i1 %752, label %839, label %753

753:                                              ; preds = %749
  %754 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %750, i64 0, i32 3, i32 1
  %755 = load i32, i32* %754, align 4
  %756 = icmp eq i32 %755, 0
  br i1 %756, label %839, label %757

757:                                              ; preds = %753
  %758 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %759 = load i32, i32* %758, align 4
  %760 = icmp eq i32 %759, %755
  br i1 %760, label %761, label %839, !prof !3

761:                                              ; preds = %757
  %762 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %750, i64 0, i32 0, i32 0
  %763 = load double, double* %762, align 8
  %764 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %765 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %750, i64 0, i32 3, i32 2
  %766 = zext i32 %755 to i64
  %767 = load float*, float** %764, align 8
  %768 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %765, align 8
  %769 = add nsw i64 %766, -1
  %770 = and i64 %766, 3
  %771 = icmp ult i64 %769, 3
  br i1 %771, label %774, label %772

772:                                              ; preds = %761
  %773 = sub nsw i64 %766, %770
  br label %801

774:                                              ; preds = %801, %761
  %775 = phi double [ undef, %761 ], [ %835, %801 ]
  %776 = phi i64 [ 0, %761 ], [ %836, %801 ]
  %777 = phi double [ %763, %761 ], [ %835, %801 ]
  %778 = icmp eq i64 %770, 0
  br i1 %778, label %793, label %779

779:                                              ; preds = %774, %779
  %780 = phi i64 [ %790, %779 ], [ %776, %774 ]
  %781 = phi double [ %789, %779 ], [ %777, %774 ]
  %782 = phi i64 [ %791, %779 ], [ %770, %774 ]
  %783 = getelementptr inbounds float, float* %767, i64 %780
  %784 = load float, float* %783, align 4
  %785 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %768, i64 %780, i32 0
  %786 = load double, double* %785, align 8
  %787 = fpext float %784 to double
  %788 = fmul double %786, %787
  %789 = fadd double %781, %788
  %790 = add nuw nsw i64 %780, 1
  %791 = add i64 %782, -1
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %793, label %779, !llvm.loop !52

793:                                              ; preds = %779, %774
  %794 = phi double [ %775, %774 ], [ %789, %779 ]
  %795 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %750, i64 0, i32 2
  store i32 0, i32* %795, align 4
  %796 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %750, i64 0, i32 1
  store i32 0, i32* %796, align 8
  %797 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %750, i64 0, i32 3, i32 0
  %798 = load i32, i32* %797, align 8
  %799 = icmp slt i32 %798, 0
  store double %794, double* %762, align 8
  br i1 %799, label %839, label %800, !prof !2

800:                                              ; preds = %793
  store i32 0, i32* %754, align 4
  br label %839

801:                                              ; preds = %801, %772
  %802 = phi i64 [ 0, %772 ], [ %836, %801 ]
  %803 = phi double [ %763, %772 ], [ %835, %801 ]
  %804 = phi i64 [ %773, %772 ], [ %837, %801 ]
  %805 = getelementptr inbounds float, float* %767, i64 %802
  %806 = load float, float* %805, align 4
  %807 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %768, i64 %802, i32 0
  %808 = load double, double* %807, align 8
  %809 = fpext float %806 to double
  %810 = fmul double %808, %809
  %811 = fadd double %803, %810
  %812 = or i64 %802, 1
  %813 = getelementptr inbounds float, float* %767, i64 %812
  %814 = load float, float* %813, align 4
  %815 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %768, i64 %812, i32 0
  %816 = load double, double* %815, align 8
  %817 = fpext float %814 to double
  %818 = fmul double %816, %817
  %819 = fadd double %811, %818
  %820 = or i64 %802, 2
  %821 = getelementptr inbounds float, float* %767, i64 %820
  %822 = load float, float* %821, align 4
  %823 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %768, i64 %820, i32 0
  %824 = load double, double* %823, align 8
  %825 = fpext float %822 to double
  %826 = fmul double %824, %825
  %827 = fadd double %819, %826
  %828 = or i64 %802, 3
  %829 = getelementptr inbounds float, float* %767, i64 %828
  %830 = load float, float* %829, align 4
  %831 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %768, i64 %828, i32 0
  %832 = load double, double* %831, align 8
  %833 = fpext float %830 to double
  %834 = fmul double %832, %833
  %835 = fadd double %827, %834
  %836 = add nuw nsw i64 %802, 4
  %837 = add i64 %804, -4
  %838 = icmp eq i64 %837, 0
  br i1 %838, label %774, label %801

839:                                              ; preds = %749, %753, %757, %793, %800
  %840 = add i32 %28, 5
  %841 = load i32, i32* %6, align 4
  %842 = icmp ugt i32 %841, %840
  br i1 %842, label %845, label %843, !prof !3

843:                                              ; preds = %839
  %844 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %844, align 8
  br label %845

845:                                              ; preds = %843, %839
  %846 = load i32, i32* %298, align 4
  %847 = icmp ugt i32 %846, %840
  br i1 %847, label %849, label %848, !prof !3

848:                                              ; preds = %845
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %854

849:                                              ; preds = %845
  %850 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %851 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %850, align 8
  %852 = zext i32 %840 to i64
  %853 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %851, i64 %852
  br label %854

854:                                              ; preds = %849, %848
  %855 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %848 ], [ %853, %849 ]
  %856 = load i8, i8* %309, align 8, !range !6
  %857 = icmp eq i8 %856, 0
  br i1 %857, label %944, label %858

858:                                              ; preds = %854
  %859 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %855, i64 0, i32 3, i32 1
  %860 = load i32, i32* %859, align 4
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %944, label %862

862:                                              ; preds = %858
  %863 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %864 = load i32, i32* %863, align 4
  %865 = icmp eq i32 %864, %860
  br i1 %865, label %866, label %944, !prof !3

866:                                              ; preds = %862
  %867 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %855, i64 0, i32 0, i32 0
  %868 = load double, double* %867, align 8
  %869 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %870 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %855, i64 0, i32 3, i32 2
  %871 = zext i32 %860 to i64
  %872 = load float*, float** %869, align 8
  %873 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %870, align 8
  %874 = add nsw i64 %871, -1
  %875 = and i64 %871, 3
  %876 = icmp ult i64 %874, 3
  br i1 %876, label %879, label %877

877:                                              ; preds = %866
  %878 = sub nsw i64 %871, %875
  br label %906

879:                                              ; preds = %906, %866
  %880 = phi double [ undef, %866 ], [ %940, %906 ]
  %881 = phi i64 [ 0, %866 ], [ %941, %906 ]
  %882 = phi double [ %868, %866 ], [ %940, %906 ]
  %883 = icmp eq i64 %875, 0
  br i1 %883, label %898, label %884

884:                                              ; preds = %879, %884
  %885 = phi i64 [ %895, %884 ], [ %881, %879 ]
  %886 = phi double [ %894, %884 ], [ %882, %879 ]
  %887 = phi i64 [ %896, %884 ], [ %875, %879 ]
  %888 = getelementptr inbounds float, float* %872, i64 %885
  %889 = load float, float* %888, align 4
  %890 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %873, i64 %885, i32 0
  %891 = load double, double* %890, align 8
  %892 = fpext float %889 to double
  %893 = fmul double %891, %892
  %894 = fadd double %886, %893
  %895 = add nuw nsw i64 %885, 1
  %896 = add i64 %887, -1
  %897 = icmp eq i64 %896, 0
  br i1 %897, label %898, label %884, !llvm.loop !53

898:                                              ; preds = %884, %879
  %899 = phi double [ %880, %879 ], [ %894, %884 ]
  %900 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %855, i64 0, i32 2
  store i32 0, i32* %900, align 4
  %901 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %855, i64 0, i32 1
  store i32 0, i32* %901, align 8
  %902 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %855, i64 0, i32 3, i32 0
  %903 = load i32, i32* %902, align 8
  %904 = icmp slt i32 %903, 0
  store double %899, double* %867, align 8
  br i1 %904, label %944, label %905, !prof !2

905:                                              ; preds = %898
  store i32 0, i32* %859, align 4
  br label %944

906:                                              ; preds = %906, %877
  %907 = phi i64 [ 0, %877 ], [ %941, %906 ]
  %908 = phi double [ %868, %877 ], [ %940, %906 ]
  %909 = phi i64 [ %878, %877 ], [ %942, %906 ]
  %910 = getelementptr inbounds float, float* %872, i64 %907
  %911 = load float, float* %910, align 4
  %912 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %873, i64 %907, i32 0
  %913 = load double, double* %912, align 8
  %914 = fpext float %911 to double
  %915 = fmul double %913, %914
  %916 = fadd double %908, %915
  %917 = or i64 %907, 1
  %918 = getelementptr inbounds float, float* %872, i64 %917
  %919 = load float, float* %918, align 4
  %920 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %873, i64 %917, i32 0
  %921 = load double, double* %920, align 8
  %922 = fpext float %919 to double
  %923 = fmul double %921, %922
  %924 = fadd double %916, %923
  %925 = or i64 %907, 2
  %926 = getelementptr inbounds float, float* %872, i64 %925
  %927 = load float, float* %926, align 4
  %928 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %873, i64 %925, i32 0
  %929 = load double, double* %928, align 8
  %930 = fpext float %927 to double
  %931 = fmul double %929, %930
  %932 = fadd double %924, %931
  %933 = or i64 %907, 3
  %934 = getelementptr inbounds float, float* %872, i64 %933
  %935 = load float, float* %934, align 4
  %936 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %873, i64 %933, i32 0
  %937 = load double, double* %936, align 8
  %938 = fpext float %935 to double
  %939 = fmul double %937, %938
  %940 = fadd double %932, %939
  %941 = add nuw nsw i64 %907, 4
  %942 = add i64 %909, -4
  %943 = icmp eq i64 %942, 0
  br i1 %943, label %879, label %906

944:                                              ; preds = %854, %858, %862, %898, %905
  %945 = load double, double* %733, align 8
  %946 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %750, i64 0, i32 0, i32 0
  %947 = load double, double* %946, align 8
  %948 = fadd double %945, %947
  store double %948, double* %733, align 8
  %949 = load double, double* %734, align 8
  %950 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %855, i64 0, i32 0, i32 0
  %951 = load double, double* %950, align 8
  %952 = fadd double %949, %951
  store double %952, double* %734, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %732) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %512) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %289) #6
  br label %953

953:                                              ; preds = %2, %944
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9vvcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca %"struct.CFF::point_t", align 8
  %5 = alloca %"struct.CFF::point_t", align 8
  %6 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %10 = bitcast %"struct.CFF::point_t"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %124, label %15

15:                                               ; preds = %2
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %18, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %26 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %25, align 8
  br label %27

27:                                               ; preds = %24, %23
  %28 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %23 ], [ %26, %24 ]
  %29 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %30 = load i8, i8* %29, align 8, !range !6
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %118, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 3, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %118, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %34
  br i1 %39, label %40, label %118, !prof !3

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 0, i32 0
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %44 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 3, i32 2
  %45 = zext i32 %34 to i64
  %46 = load float*, float** %43, align 8
  %47 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %44, align 8
  %48 = add nsw i64 %45, -1
  %49 = and i64 %45, 3
  %50 = icmp ult i64 %48, 3
  br i1 %50, label %53, label %51

51:                                               ; preds = %40
  %52 = sub nsw i64 %45, %49
  br label %80

53:                                               ; preds = %80, %40
  %54 = phi double [ undef, %40 ], [ %114, %80 ]
  %55 = phi i64 [ 0, %40 ], [ %115, %80 ]
  %56 = phi double [ %42, %40 ], [ %114, %80 ]
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %72, label %58

58:                                               ; preds = %53, %58
  %59 = phi i64 [ %69, %58 ], [ %55, %53 ]
  %60 = phi double [ %68, %58 ], [ %56, %53 ]
  %61 = phi i64 [ %70, %58 ], [ %49, %53 ]
  %62 = getelementptr inbounds float, float* %46, i64 %59
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %59, i32 0
  %65 = load double, double* %64, align 8
  %66 = fpext float %63 to double
  %67 = fmul double %65, %66
  %68 = fadd double %60, %67
  %69 = add nuw nsw i64 %59, 1
  %70 = add i64 %61, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %58, !llvm.loop !54

72:                                               ; preds = %58, %53
  %73 = phi double [ %54, %53 ], [ %68, %58 ]
  %74 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 2
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 1
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 3, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp slt i32 %77, 0
  store double %73, double* %41, align 8
  br i1 %78, label %118, label %79, !prof !2

79:                                               ; preds = %72
  store i32 0, i32* %33, align 4
  br label %118

80:                                               ; preds = %80, %51
  %81 = phi i64 [ 0, %51 ], [ %115, %80 ]
  %82 = phi double [ %42, %51 ], [ %114, %80 ]
  %83 = phi i64 [ %52, %51 ], [ %116, %80 ]
  %84 = getelementptr inbounds float, float* %46, i64 %81
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %81, i32 0
  %87 = load double, double* %86, align 8
  %88 = fpext float %85 to double
  %89 = fmul double %87, %88
  %90 = fadd double %82, %89
  %91 = or i64 %81, 1
  %92 = getelementptr inbounds float, float* %46, i64 %91
  %93 = load float, float* %92, align 4
  %94 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %91, i32 0
  %95 = load double, double* %94, align 8
  %96 = fpext float %93 to double
  %97 = fmul double %95, %96
  %98 = fadd double %90, %97
  %99 = or i64 %81, 2
  %100 = getelementptr inbounds float, float* %46, i64 %99
  %101 = load float, float* %100, align 4
  %102 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %99, i32 0
  %103 = load double, double* %102, align 8
  %104 = fpext float %101 to double
  %105 = fmul double %103, %104
  %106 = fadd double %98, %105
  %107 = or i64 %81, 3
  %108 = getelementptr inbounds float, float* %46, i64 %107
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %107, i32 0
  %111 = load double, double* %110, align 8
  %112 = fpext float %109 to double
  %113 = fmul double %111, %112
  %114 = fadd double %106, %113
  %115 = add nuw nsw i64 %81, 4
  %116 = add i64 %83, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %53, label %80

118:                                              ; preds = %27, %32, %36, %72, %79
  %119 = load double, double* %7, align 8
  %120 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 0, i32 0
  %121 = load double, double* %120, align 8
  %122 = fadd double %119, %121
  store double %122, double* %7, align 8
  %123 = load i32, i32* %11, align 4
  br label %124

124:                                              ; preds = %2, %118
  %125 = phi i32 [ %123, %118 ], [ %12, %2 ]
  %126 = phi i32 [ 1, %118 ], [ 0, %2 ]
  %127 = or i32 %126, 4
  %128 = icmp ugt i32 %127, %125
  br i1 %128, label %566, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %132 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %133 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %134 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %135 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %136 = bitcast %"struct.CFF::point_t"* %4 to i8*
  %137 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 1, i32 0
  %139 = bitcast %"struct.CFF::point_t"* %5 to i8*
  %140 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 1, i32 0
  br label %141

141:                                              ; preds = %129, %558
  %142 = phi i32 [ %125, %129 ], [ %564, %558 ]
  %143 = phi i32 [ %127, %129 ], [ %563, %558 ]
  %144 = phi i32 [ %126, %129 ], [ %143, %558 ]
  %145 = icmp ugt i32 %142, %144
  br i1 %145, label %147, label %146, !prof !3

146:                                              ; preds = %141
  store i8 1, i8* %130, align 8
  br label %147

147:                                              ; preds = %146, %141
  %148 = load i32, i32* %131, align 4
  %149 = icmp ugt i32 %148, %144
  br i1 %149, label %151, label %150, !prof !3

150:                                              ; preds = %147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %155

151:                                              ; preds = %147
  %152 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %153 = zext i32 %144 to i64
  %154 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %152, i64 %153
  br label %155

155:                                              ; preds = %151, %150
  %156 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %150 ], [ %154, %151 ]
  %157 = load i8, i8* %133, align 8, !range !6
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %243, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 3, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %243, label %163

163:                                              ; preds = %159
  %164 = load i32, i32* %134, align 4
  %165 = icmp eq i32 %164, %161
  br i1 %165, label %166, label %243, !prof !3

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 0, i32 0
  %168 = load double, double* %167, align 8
  %169 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 3, i32 2
  %170 = zext i32 %161 to i64
  %171 = load float*, float** %135, align 8
  %172 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %169, align 8
  %173 = add nsw i64 %170, -1
  %174 = and i64 %170, 3
  %175 = icmp ult i64 %173, 3
  br i1 %175, label %178, label %176

176:                                              ; preds = %166
  %177 = sub nsw i64 %170, %174
  br label %205

178:                                              ; preds = %205, %166
  %179 = phi double [ undef, %166 ], [ %239, %205 ]
  %180 = phi i64 [ 0, %166 ], [ %240, %205 ]
  %181 = phi double [ %168, %166 ], [ %239, %205 ]
  %182 = icmp eq i64 %174, 0
  br i1 %182, label %197, label %183

183:                                              ; preds = %178, %183
  %184 = phi i64 [ %194, %183 ], [ %180, %178 ]
  %185 = phi double [ %193, %183 ], [ %181, %178 ]
  %186 = phi i64 [ %195, %183 ], [ %174, %178 ]
  %187 = getelementptr inbounds float, float* %171, i64 %184
  %188 = load float, float* %187, align 4
  %189 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %184, i32 0
  %190 = load double, double* %189, align 8
  %191 = fpext float %188 to double
  %192 = fmul double %190, %191
  %193 = fadd double %185, %192
  %194 = add nuw nsw i64 %184, 1
  %195 = add i64 %186, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %183, !llvm.loop !55

197:                                              ; preds = %183, %178
  %198 = phi double [ %179, %178 ], [ %193, %183 ]
  %199 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 2
  store i32 0, i32* %199, align 4
  %200 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 1
  store i32 0, i32* %200, align 8
  %201 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 3, i32 0
  %202 = load i32, i32* %201, align 8
  %203 = icmp slt i32 %202, 0
  store double %198, double* %167, align 8
  br i1 %203, label %243, label %204, !prof !2

204:                                              ; preds = %197
  store i32 0, i32* %160, align 4
  br label %243

205:                                              ; preds = %205, %176
  %206 = phi i64 [ 0, %176 ], [ %240, %205 ]
  %207 = phi double [ %168, %176 ], [ %239, %205 ]
  %208 = phi i64 [ %177, %176 ], [ %241, %205 ]
  %209 = getelementptr inbounds float, float* %171, i64 %206
  %210 = load float, float* %209, align 4
  %211 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %206, i32 0
  %212 = load double, double* %211, align 8
  %213 = fpext float %210 to double
  %214 = fmul double %212, %213
  %215 = fadd double %207, %214
  %216 = or i64 %206, 1
  %217 = getelementptr inbounds float, float* %171, i64 %216
  %218 = load float, float* %217, align 4
  %219 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %216, i32 0
  %220 = load double, double* %219, align 8
  %221 = fpext float %218 to double
  %222 = fmul double %220, %221
  %223 = fadd double %215, %222
  %224 = or i64 %206, 2
  %225 = getelementptr inbounds float, float* %171, i64 %224
  %226 = load float, float* %225, align 4
  %227 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %224, i32 0
  %228 = load double, double* %227, align 8
  %229 = fpext float %226 to double
  %230 = fmul double %228, %229
  %231 = fadd double %223, %230
  %232 = or i64 %206, 3
  %233 = getelementptr inbounds float, float* %171, i64 %232
  %234 = load float, float* %233, align 4
  %235 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %232, i32 0
  %236 = load double, double* %235, align 8
  %237 = fpext float %234 to double
  %238 = fmul double %236, %237
  %239 = fadd double %231, %238
  %240 = add nuw nsw i64 %206, 4
  %241 = add i64 %208, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %178, label %205

243:                                              ; preds = %155, %159, %163, %197, %204
  %244 = load double, double* %8, align 8
  %245 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 0, i32 0
  %246 = load double, double* %245, align 8
  %247 = fadd double %244, %246
  store double %247, double* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %136, i8* nonnull align 8 %6, i64 16, i1 false)
  %248 = add i32 %144, 1
  %249 = load i32, i32* %11, align 4
  %250 = icmp ugt i32 %249, %248
  br i1 %250, label %252, label %251, !prof !3

251:                                              ; preds = %243
  store i8 1, i8* %130, align 8
  br label %252

252:                                              ; preds = %251, %243
  %253 = load i32, i32* %131, align 4
  %254 = icmp ugt i32 %253, %248
  br i1 %254, label %256, label %255, !prof !3

255:                                              ; preds = %252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %260

256:                                              ; preds = %252
  %257 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %258 = zext i32 %248 to i64
  %259 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %257, i64 %258
  br label %260

260:                                              ; preds = %256, %255
  %261 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %255 ], [ %259, %256 ]
  %262 = load i8, i8* %133, align 8, !range !6
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %348, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 3, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %348, label %268

268:                                              ; preds = %264
  %269 = load i32, i32* %134, align 4
  %270 = icmp eq i32 %269, %266
  br i1 %270, label %271, label %348, !prof !3

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 0, i32 0
  %273 = load double, double* %272, align 8
  %274 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 3, i32 2
  %275 = zext i32 %266 to i64
  %276 = load float*, float** %135, align 8
  %277 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %274, align 8
  %278 = add nsw i64 %275, -1
  %279 = and i64 %275, 3
  %280 = icmp ult i64 %278, 3
  br i1 %280, label %283, label %281

281:                                              ; preds = %271
  %282 = sub nsw i64 %275, %279
  br label %310

283:                                              ; preds = %310, %271
  %284 = phi double [ undef, %271 ], [ %344, %310 ]
  %285 = phi i64 [ 0, %271 ], [ %345, %310 ]
  %286 = phi double [ %273, %271 ], [ %344, %310 ]
  %287 = icmp eq i64 %279, 0
  br i1 %287, label %302, label %288

288:                                              ; preds = %283, %288
  %289 = phi i64 [ %299, %288 ], [ %285, %283 ]
  %290 = phi double [ %298, %288 ], [ %286, %283 ]
  %291 = phi i64 [ %300, %288 ], [ %279, %283 ]
  %292 = getelementptr inbounds float, float* %276, i64 %289
  %293 = load float, float* %292, align 4
  %294 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %289, i32 0
  %295 = load double, double* %294, align 8
  %296 = fpext float %293 to double
  %297 = fmul double %295, %296
  %298 = fadd double %290, %297
  %299 = add nuw nsw i64 %289, 1
  %300 = add i64 %291, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %288, !llvm.loop !56

302:                                              ; preds = %288, %283
  %303 = phi double [ %284, %283 ], [ %298, %288 ]
  %304 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 2
  store i32 0, i32* %304, align 4
  %305 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 1
  store i32 0, i32* %305, align 8
  %306 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 3, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp slt i32 %307, 0
  store double %303, double* %272, align 8
  br i1 %308, label %348, label %309, !prof !2

309:                                              ; preds = %302
  store i32 0, i32* %265, align 4
  br label %348

310:                                              ; preds = %310, %281
  %311 = phi i64 [ 0, %281 ], [ %345, %310 ]
  %312 = phi double [ %273, %281 ], [ %344, %310 ]
  %313 = phi i64 [ %282, %281 ], [ %346, %310 ]
  %314 = getelementptr inbounds float, float* %276, i64 %311
  %315 = load float, float* %314, align 4
  %316 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %311, i32 0
  %317 = load double, double* %316, align 8
  %318 = fpext float %315 to double
  %319 = fmul double %317, %318
  %320 = fadd double %312, %319
  %321 = or i64 %311, 1
  %322 = getelementptr inbounds float, float* %276, i64 %321
  %323 = load float, float* %322, align 4
  %324 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %321, i32 0
  %325 = load double, double* %324, align 8
  %326 = fpext float %323 to double
  %327 = fmul double %325, %326
  %328 = fadd double %320, %327
  %329 = or i64 %311, 2
  %330 = getelementptr inbounds float, float* %276, i64 %329
  %331 = load float, float* %330, align 4
  %332 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %329, i32 0
  %333 = load double, double* %332, align 8
  %334 = fpext float %331 to double
  %335 = fmul double %333, %334
  %336 = fadd double %328, %335
  %337 = or i64 %311, 3
  %338 = getelementptr inbounds float, float* %276, i64 %337
  %339 = load float, float* %338, align 4
  %340 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %337, i32 0
  %341 = load double, double* %340, align 8
  %342 = fpext float %339 to double
  %343 = fmul double %341, %342
  %344 = fadd double %336, %343
  %345 = add nuw nsw i64 %311, 4
  %346 = add i64 %313, -4
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %283, label %310

348:                                              ; preds = %260, %264, %268, %302, %309
  %349 = add i32 %144, 2
  %350 = load i32, i32* %11, align 4
  %351 = icmp ugt i32 %350, %349
  br i1 %351, label %353, label %352, !prof !3

352:                                              ; preds = %348
  store i8 1, i8* %130, align 8
  br label %353

353:                                              ; preds = %352, %348
  %354 = load i32, i32* %131, align 4
  %355 = icmp ugt i32 %354, %349
  br i1 %355, label %357, label %356, !prof !3

356:                                              ; preds = %353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %361

357:                                              ; preds = %353
  %358 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %359 = zext i32 %349 to i64
  %360 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %358, i64 %359
  br label %361

361:                                              ; preds = %357, %356
  %362 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %356 ], [ %360, %357 ]
  %363 = load i8, i8* %133, align 8, !range !6
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %449, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 3, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %449, label %369

369:                                              ; preds = %365
  %370 = load i32, i32* %134, align 4
  %371 = icmp eq i32 %370, %367
  br i1 %371, label %372, label %449, !prof !3

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 0, i32 0
  %374 = load double, double* %373, align 8
  %375 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 3, i32 2
  %376 = zext i32 %367 to i64
  %377 = load float*, float** %135, align 8
  %378 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %375, align 8
  %379 = add nsw i64 %376, -1
  %380 = and i64 %376, 3
  %381 = icmp ult i64 %379, 3
  br i1 %381, label %384, label %382

382:                                              ; preds = %372
  %383 = sub nsw i64 %376, %380
  br label %411

384:                                              ; preds = %411, %372
  %385 = phi double [ undef, %372 ], [ %445, %411 ]
  %386 = phi i64 [ 0, %372 ], [ %446, %411 ]
  %387 = phi double [ %374, %372 ], [ %445, %411 ]
  %388 = icmp eq i64 %380, 0
  br i1 %388, label %403, label %389

389:                                              ; preds = %384, %389
  %390 = phi i64 [ %400, %389 ], [ %386, %384 ]
  %391 = phi double [ %399, %389 ], [ %387, %384 ]
  %392 = phi i64 [ %401, %389 ], [ %380, %384 ]
  %393 = getelementptr inbounds float, float* %377, i64 %390
  %394 = load float, float* %393, align 4
  %395 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %390, i32 0
  %396 = load double, double* %395, align 8
  %397 = fpext float %394 to double
  %398 = fmul double %396, %397
  %399 = fadd double %391, %398
  %400 = add nuw nsw i64 %390, 1
  %401 = add i64 %392, -1
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %389, !llvm.loop !57

403:                                              ; preds = %389, %384
  %404 = phi double [ %385, %384 ], [ %399, %389 ]
  %405 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 2
  store i32 0, i32* %405, align 4
  %406 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 1
  store i32 0, i32* %406, align 8
  %407 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 3, i32 0
  %408 = load i32, i32* %407, align 8
  %409 = icmp slt i32 %408, 0
  store double %404, double* %373, align 8
  br i1 %409, label %449, label %410, !prof !2

410:                                              ; preds = %403
  store i32 0, i32* %366, align 4
  br label %449

411:                                              ; preds = %411, %382
  %412 = phi i64 [ 0, %382 ], [ %446, %411 ]
  %413 = phi double [ %374, %382 ], [ %445, %411 ]
  %414 = phi i64 [ %383, %382 ], [ %447, %411 ]
  %415 = getelementptr inbounds float, float* %377, i64 %412
  %416 = load float, float* %415, align 4
  %417 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %412, i32 0
  %418 = load double, double* %417, align 8
  %419 = fpext float %416 to double
  %420 = fmul double %418, %419
  %421 = fadd double %413, %420
  %422 = or i64 %412, 1
  %423 = getelementptr inbounds float, float* %377, i64 %422
  %424 = load float, float* %423, align 4
  %425 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %422, i32 0
  %426 = load double, double* %425, align 8
  %427 = fpext float %424 to double
  %428 = fmul double %426, %427
  %429 = fadd double %421, %428
  %430 = or i64 %412, 2
  %431 = getelementptr inbounds float, float* %377, i64 %430
  %432 = load float, float* %431, align 4
  %433 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %430, i32 0
  %434 = load double, double* %433, align 8
  %435 = fpext float %432 to double
  %436 = fmul double %434, %435
  %437 = fadd double %429, %436
  %438 = or i64 %412, 3
  %439 = getelementptr inbounds float, float* %377, i64 %438
  %440 = load float, float* %439, align 4
  %441 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %438, i32 0
  %442 = load double, double* %441, align 8
  %443 = fpext float %440 to double
  %444 = fmul double %442, %443
  %445 = fadd double %437, %444
  %446 = add nuw nsw i64 %412, 4
  %447 = add i64 %414, -4
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %384, label %411

449:                                              ; preds = %361, %365, %369, %403, %410
  %450 = load double, double* %137, align 8
  %451 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 0, i32 0
  %452 = load double, double* %451, align 8
  %453 = fadd double %450, %452
  store double %453, double* %137, align 8
  %454 = load double, double* %138, align 8
  %455 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 0, i32 0
  %456 = load double, double* %455, align 8
  %457 = fadd double %454, %456
  store double %457, double* %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* nonnull align 8 %136, i64 16, i1 false)
  %458 = add i32 %144, 3
  %459 = load i32, i32* %11, align 4
  %460 = icmp ugt i32 %459, %458
  br i1 %460, label %462, label %461, !prof !3

461:                                              ; preds = %449
  store i8 1, i8* %130, align 8
  br label %462

462:                                              ; preds = %461, %449
  %463 = load i32, i32* %131, align 4
  %464 = icmp ugt i32 %463, %458
  br i1 %464, label %466, label %465, !prof !3

465:                                              ; preds = %462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %470

466:                                              ; preds = %462
  %467 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %468 = zext i32 %458 to i64
  %469 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %467, i64 %468
  br label %470

470:                                              ; preds = %466, %465
  %471 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %465 ], [ %469, %466 ]
  %472 = load i8, i8* %133, align 8, !range !6
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %558, label %474

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 3, i32 1
  %476 = load i32, i32* %475, align 4
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %558, label %478

478:                                              ; preds = %474
  %479 = load i32, i32* %134, align 4
  %480 = icmp eq i32 %479, %476
  br i1 %480, label %481, label %558, !prof !3

481:                                              ; preds = %478
  %482 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 0, i32 0
  %483 = load double, double* %482, align 8
  %484 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 3, i32 2
  %485 = zext i32 %476 to i64
  %486 = load float*, float** %135, align 8
  %487 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %484, align 8
  %488 = add nsw i64 %485, -1
  %489 = and i64 %485, 3
  %490 = icmp ult i64 %488, 3
  br i1 %490, label %493, label %491

491:                                              ; preds = %481
  %492 = sub nsw i64 %485, %489
  br label %520

493:                                              ; preds = %520, %481
  %494 = phi double [ undef, %481 ], [ %554, %520 ]
  %495 = phi i64 [ 0, %481 ], [ %555, %520 ]
  %496 = phi double [ %483, %481 ], [ %554, %520 ]
  %497 = icmp eq i64 %489, 0
  br i1 %497, label %512, label %498

498:                                              ; preds = %493, %498
  %499 = phi i64 [ %509, %498 ], [ %495, %493 ]
  %500 = phi double [ %508, %498 ], [ %496, %493 ]
  %501 = phi i64 [ %510, %498 ], [ %489, %493 ]
  %502 = getelementptr inbounds float, float* %486, i64 %499
  %503 = load float, float* %502, align 4
  %504 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %499, i32 0
  %505 = load double, double* %504, align 8
  %506 = fpext float %503 to double
  %507 = fmul double %505, %506
  %508 = fadd double %500, %507
  %509 = add nuw nsw i64 %499, 1
  %510 = add i64 %501, -1
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %512, label %498, !llvm.loop !58

512:                                              ; preds = %498, %493
  %513 = phi double [ %494, %493 ], [ %508, %498 ]
  %514 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 2
  store i32 0, i32* %514, align 4
  %515 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 1
  store i32 0, i32* %515, align 8
  %516 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 3, i32 0
  %517 = load i32, i32* %516, align 8
  %518 = icmp slt i32 %517, 0
  store double %513, double* %482, align 8
  br i1 %518, label %558, label %519, !prof !2

519:                                              ; preds = %512
  store i32 0, i32* %475, align 4
  br label %558

520:                                              ; preds = %520, %491
  %521 = phi i64 [ 0, %491 ], [ %555, %520 ]
  %522 = phi double [ %483, %491 ], [ %554, %520 ]
  %523 = phi i64 [ %492, %491 ], [ %556, %520 ]
  %524 = getelementptr inbounds float, float* %486, i64 %521
  %525 = load float, float* %524, align 4
  %526 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %521, i32 0
  %527 = load double, double* %526, align 8
  %528 = fpext float %525 to double
  %529 = fmul double %527, %528
  %530 = fadd double %522, %529
  %531 = or i64 %521, 1
  %532 = getelementptr inbounds float, float* %486, i64 %531
  %533 = load float, float* %532, align 4
  %534 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %531, i32 0
  %535 = load double, double* %534, align 8
  %536 = fpext float %533 to double
  %537 = fmul double %535, %536
  %538 = fadd double %530, %537
  %539 = or i64 %521, 2
  %540 = getelementptr inbounds float, float* %486, i64 %539
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %539, i32 0
  %543 = load double, double* %542, align 8
  %544 = fpext float %541 to double
  %545 = fmul double %543, %544
  %546 = fadd double %538, %545
  %547 = or i64 %521, 3
  %548 = getelementptr inbounds float, float* %486, i64 %547
  %549 = load float, float* %548, align 4
  %550 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %547, i32 0
  %551 = load double, double* %550, align 8
  %552 = fpext float %549 to double
  %553 = fmul double %551, %552
  %554 = fadd double %546, %553
  %555 = add nuw nsw i64 %521, 4
  %556 = add i64 %523, -4
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %493, label %520

558:                                              ; preds = %470, %474, %478, %512, %519
  %559 = load double, double* %140, align 8
  %560 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 0, i32 0
  %561 = load double, double* %560, align 8
  %562 = fadd double %559, %561
  store double %562, double* %140, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %10, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #6
  %563 = add i32 %143, 4
  %564 = load i32, i32* %11, align 4
  %565 = icmp ugt i32 %563, %564
  br i1 %565, label %566, label %141

566:                                              ; preds = %558, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9hhcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca %"struct.CFF::point_t", align 8
  %5 = alloca %"struct.CFF::point_t", align 8
  %6 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %10 = bitcast %"struct.CFF::point_t"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %124, label %15

15:                                               ; preds = %2
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %18, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %26 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %25, align 8
  br label %27

27:                                               ; preds = %24, %23
  %28 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %23 ], [ %26, %24 ]
  %29 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %30 = load i8, i8* %29, align 8, !range !6
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %118, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 3, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %118, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %34
  br i1 %39, label %40, label %118, !prof !3

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 0, i32 0
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %44 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 3, i32 2
  %45 = zext i32 %34 to i64
  %46 = load float*, float** %43, align 8
  %47 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %44, align 8
  %48 = add nsw i64 %45, -1
  %49 = and i64 %45, 3
  %50 = icmp ult i64 %48, 3
  br i1 %50, label %53, label %51

51:                                               ; preds = %40
  %52 = sub nsw i64 %45, %49
  br label %80

53:                                               ; preds = %80, %40
  %54 = phi double [ undef, %40 ], [ %114, %80 ]
  %55 = phi i64 [ 0, %40 ], [ %115, %80 ]
  %56 = phi double [ %42, %40 ], [ %114, %80 ]
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %72, label %58

58:                                               ; preds = %53, %58
  %59 = phi i64 [ %69, %58 ], [ %55, %53 ]
  %60 = phi double [ %68, %58 ], [ %56, %53 ]
  %61 = phi i64 [ %70, %58 ], [ %49, %53 ]
  %62 = getelementptr inbounds float, float* %46, i64 %59
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %59, i32 0
  %65 = load double, double* %64, align 8
  %66 = fpext float %63 to double
  %67 = fmul double %65, %66
  %68 = fadd double %60, %67
  %69 = add nuw nsw i64 %59, 1
  %70 = add i64 %61, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %58, !llvm.loop !59

72:                                               ; preds = %58, %53
  %73 = phi double [ %54, %53 ], [ %68, %58 ]
  %74 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 2
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 1
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 3, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp slt i32 %77, 0
  store double %73, double* %41, align 8
  br i1 %78, label %118, label %79, !prof !2

79:                                               ; preds = %72
  store i32 0, i32* %33, align 4
  br label %118

80:                                               ; preds = %80, %51
  %81 = phi i64 [ 0, %51 ], [ %115, %80 ]
  %82 = phi double [ %42, %51 ], [ %114, %80 ]
  %83 = phi i64 [ %52, %51 ], [ %116, %80 ]
  %84 = getelementptr inbounds float, float* %46, i64 %81
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %81, i32 0
  %87 = load double, double* %86, align 8
  %88 = fpext float %85 to double
  %89 = fmul double %87, %88
  %90 = fadd double %82, %89
  %91 = or i64 %81, 1
  %92 = getelementptr inbounds float, float* %46, i64 %91
  %93 = load float, float* %92, align 4
  %94 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %91, i32 0
  %95 = load double, double* %94, align 8
  %96 = fpext float %93 to double
  %97 = fmul double %95, %96
  %98 = fadd double %90, %97
  %99 = or i64 %81, 2
  %100 = getelementptr inbounds float, float* %46, i64 %99
  %101 = load float, float* %100, align 4
  %102 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %99, i32 0
  %103 = load double, double* %102, align 8
  %104 = fpext float %101 to double
  %105 = fmul double %103, %104
  %106 = fadd double %98, %105
  %107 = or i64 %81, 3
  %108 = getelementptr inbounds float, float* %46, i64 %107
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %47, i64 %107, i32 0
  %111 = load double, double* %110, align 8
  %112 = fpext float %109 to double
  %113 = fmul double %111, %112
  %114 = fadd double %106, %113
  %115 = add nuw nsw i64 %81, 4
  %116 = add i64 %83, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %53, label %80

118:                                              ; preds = %27, %32, %36, %72, %79
  %119 = load double, double* %8, align 8
  %120 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %28, i64 0, i32 0, i32 0
  %121 = load double, double* %120, align 8
  %122 = fadd double %119, %121
  store double %122, double* %8, align 8
  %123 = load i32, i32* %11, align 4
  br label %124

124:                                              ; preds = %2, %118
  %125 = phi i32 [ %123, %118 ], [ %12, %2 ]
  %126 = phi i32 [ 1, %118 ], [ 0, %2 ]
  %127 = or i32 %126, 4
  %128 = icmp ugt i32 %127, %125
  br i1 %128, label %566, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %132 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %133 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %134 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %135 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %136 = bitcast %"struct.CFF::point_t"* %4 to i8*
  %137 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 1, i32 0
  %139 = bitcast %"struct.CFF::point_t"* %5 to i8*
  %140 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 0, i32 0
  br label %141

141:                                              ; preds = %129, %558
  %142 = phi i32 [ %125, %129 ], [ %564, %558 ]
  %143 = phi i32 [ %127, %129 ], [ %563, %558 ]
  %144 = phi i32 [ %126, %129 ], [ %143, %558 ]
  %145 = icmp ugt i32 %142, %144
  br i1 %145, label %147, label %146, !prof !3

146:                                              ; preds = %141
  store i8 1, i8* %130, align 8
  br label %147

147:                                              ; preds = %146, %141
  %148 = load i32, i32* %131, align 4
  %149 = icmp ugt i32 %148, %144
  br i1 %149, label %151, label %150, !prof !3

150:                                              ; preds = %147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %155

151:                                              ; preds = %147
  %152 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %153 = zext i32 %144 to i64
  %154 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %152, i64 %153
  br label %155

155:                                              ; preds = %151, %150
  %156 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %150 ], [ %154, %151 ]
  %157 = load i8, i8* %133, align 8, !range !6
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %243, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 3, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %243, label %163

163:                                              ; preds = %159
  %164 = load i32, i32* %134, align 4
  %165 = icmp eq i32 %164, %161
  br i1 %165, label %166, label %243, !prof !3

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 0, i32 0
  %168 = load double, double* %167, align 8
  %169 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 3, i32 2
  %170 = zext i32 %161 to i64
  %171 = load float*, float** %135, align 8
  %172 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %169, align 8
  %173 = add nsw i64 %170, -1
  %174 = and i64 %170, 3
  %175 = icmp ult i64 %173, 3
  br i1 %175, label %178, label %176

176:                                              ; preds = %166
  %177 = sub nsw i64 %170, %174
  br label %205

178:                                              ; preds = %205, %166
  %179 = phi double [ undef, %166 ], [ %239, %205 ]
  %180 = phi i64 [ 0, %166 ], [ %240, %205 ]
  %181 = phi double [ %168, %166 ], [ %239, %205 ]
  %182 = icmp eq i64 %174, 0
  br i1 %182, label %197, label %183

183:                                              ; preds = %178, %183
  %184 = phi i64 [ %194, %183 ], [ %180, %178 ]
  %185 = phi double [ %193, %183 ], [ %181, %178 ]
  %186 = phi i64 [ %195, %183 ], [ %174, %178 ]
  %187 = getelementptr inbounds float, float* %171, i64 %184
  %188 = load float, float* %187, align 4
  %189 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %184, i32 0
  %190 = load double, double* %189, align 8
  %191 = fpext float %188 to double
  %192 = fmul double %190, %191
  %193 = fadd double %185, %192
  %194 = add nuw nsw i64 %184, 1
  %195 = add i64 %186, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %183, !llvm.loop !60

197:                                              ; preds = %183, %178
  %198 = phi double [ %179, %178 ], [ %193, %183 ]
  %199 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 2
  store i32 0, i32* %199, align 4
  %200 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 1
  store i32 0, i32* %200, align 8
  %201 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 3, i32 0
  %202 = load i32, i32* %201, align 8
  %203 = icmp slt i32 %202, 0
  store double %198, double* %167, align 8
  br i1 %203, label %243, label %204, !prof !2

204:                                              ; preds = %197
  store i32 0, i32* %160, align 4
  br label %243

205:                                              ; preds = %205, %176
  %206 = phi i64 [ 0, %176 ], [ %240, %205 ]
  %207 = phi double [ %168, %176 ], [ %239, %205 ]
  %208 = phi i64 [ %177, %176 ], [ %241, %205 ]
  %209 = getelementptr inbounds float, float* %171, i64 %206
  %210 = load float, float* %209, align 4
  %211 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %206, i32 0
  %212 = load double, double* %211, align 8
  %213 = fpext float %210 to double
  %214 = fmul double %212, %213
  %215 = fadd double %207, %214
  %216 = or i64 %206, 1
  %217 = getelementptr inbounds float, float* %171, i64 %216
  %218 = load float, float* %217, align 4
  %219 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %216, i32 0
  %220 = load double, double* %219, align 8
  %221 = fpext float %218 to double
  %222 = fmul double %220, %221
  %223 = fadd double %215, %222
  %224 = or i64 %206, 2
  %225 = getelementptr inbounds float, float* %171, i64 %224
  %226 = load float, float* %225, align 4
  %227 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %224, i32 0
  %228 = load double, double* %227, align 8
  %229 = fpext float %226 to double
  %230 = fmul double %228, %229
  %231 = fadd double %223, %230
  %232 = or i64 %206, 3
  %233 = getelementptr inbounds float, float* %171, i64 %232
  %234 = load float, float* %233, align 4
  %235 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %172, i64 %232, i32 0
  %236 = load double, double* %235, align 8
  %237 = fpext float %234 to double
  %238 = fmul double %236, %237
  %239 = fadd double %231, %238
  %240 = add nuw nsw i64 %206, 4
  %241 = add i64 %208, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %178, label %205

243:                                              ; preds = %155, %159, %163, %197, %204
  %244 = load double, double* %7, align 8
  %245 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %156, i64 0, i32 0, i32 0
  %246 = load double, double* %245, align 8
  %247 = fadd double %244, %246
  store double %247, double* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %136, i8* nonnull align 8 %6, i64 16, i1 false)
  %248 = add i32 %144, 1
  %249 = load i32, i32* %11, align 4
  %250 = icmp ugt i32 %249, %248
  br i1 %250, label %252, label %251, !prof !3

251:                                              ; preds = %243
  store i8 1, i8* %130, align 8
  br label %252

252:                                              ; preds = %251, %243
  %253 = load i32, i32* %131, align 4
  %254 = icmp ugt i32 %253, %248
  br i1 %254, label %256, label %255, !prof !3

255:                                              ; preds = %252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %260

256:                                              ; preds = %252
  %257 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %258 = zext i32 %248 to i64
  %259 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %257, i64 %258
  br label %260

260:                                              ; preds = %256, %255
  %261 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %255 ], [ %259, %256 ]
  %262 = load i8, i8* %133, align 8, !range !6
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %348, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 3, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %348, label %268

268:                                              ; preds = %264
  %269 = load i32, i32* %134, align 4
  %270 = icmp eq i32 %269, %266
  br i1 %270, label %271, label %348, !prof !3

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 0, i32 0
  %273 = load double, double* %272, align 8
  %274 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 3, i32 2
  %275 = zext i32 %266 to i64
  %276 = load float*, float** %135, align 8
  %277 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %274, align 8
  %278 = add nsw i64 %275, -1
  %279 = and i64 %275, 3
  %280 = icmp ult i64 %278, 3
  br i1 %280, label %283, label %281

281:                                              ; preds = %271
  %282 = sub nsw i64 %275, %279
  br label %310

283:                                              ; preds = %310, %271
  %284 = phi double [ undef, %271 ], [ %344, %310 ]
  %285 = phi i64 [ 0, %271 ], [ %345, %310 ]
  %286 = phi double [ %273, %271 ], [ %344, %310 ]
  %287 = icmp eq i64 %279, 0
  br i1 %287, label %302, label %288

288:                                              ; preds = %283, %288
  %289 = phi i64 [ %299, %288 ], [ %285, %283 ]
  %290 = phi double [ %298, %288 ], [ %286, %283 ]
  %291 = phi i64 [ %300, %288 ], [ %279, %283 ]
  %292 = getelementptr inbounds float, float* %276, i64 %289
  %293 = load float, float* %292, align 4
  %294 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %289, i32 0
  %295 = load double, double* %294, align 8
  %296 = fpext float %293 to double
  %297 = fmul double %295, %296
  %298 = fadd double %290, %297
  %299 = add nuw nsw i64 %289, 1
  %300 = add i64 %291, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %288, !llvm.loop !61

302:                                              ; preds = %288, %283
  %303 = phi double [ %284, %283 ], [ %298, %288 ]
  %304 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 2
  store i32 0, i32* %304, align 4
  %305 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 1
  store i32 0, i32* %305, align 8
  %306 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 3, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp slt i32 %307, 0
  store double %303, double* %272, align 8
  br i1 %308, label %348, label %309, !prof !2

309:                                              ; preds = %302
  store i32 0, i32* %265, align 4
  br label %348

310:                                              ; preds = %310, %281
  %311 = phi i64 [ 0, %281 ], [ %345, %310 ]
  %312 = phi double [ %273, %281 ], [ %344, %310 ]
  %313 = phi i64 [ %282, %281 ], [ %346, %310 ]
  %314 = getelementptr inbounds float, float* %276, i64 %311
  %315 = load float, float* %314, align 4
  %316 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %311, i32 0
  %317 = load double, double* %316, align 8
  %318 = fpext float %315 to double
  %319 = fmul double %317, %318
  %320 = fadd double %312, %319
  %321 = or i64 %311, 1
  %322 = getelementptr inbounds float, float* %276, i64 %321
  %323 = load float, float* %322, align 4
  %324 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %321, i32 0
  %325 = load double, double* %324, align 8
  %326 = fpext float %323 to double
  %327 = fmul double %325, %326
  %328 = fadd double %320, %327
  %329 = or i64 %311, 2
  %330 = getelementptr inbounds float, float* %276, i64 %329
  %331 = load float, float* %330, align 4
  %332 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %329, i32 0
  %333 = load double, double* %332, align 8
  %334 = fpext float %331 to double
  %335 = fmul double %333, %334
  %336 = fadd double %328, %335
  %337 = or i64 %311, 3
  %338 = getelementptr inbounds float, float* %276, i64 %337
  %339 = load float, float* %338, align 4
  %340 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %277, i64 %337, i32 0
  %341 = load double, double* %340, align 8
  %342 = fpext float %339 to double
  %343 = fmul double %341, %342
  %344 = fadd double %336, %343
  %345 = add nuw nsw i64 %311, 4
  %346 = add i64 %313, -4
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %283, label %310

348:                                              ; preds = %260, %264, %268, %302, %309
  %349 = add i32 %144, 2
  %350 = load i32, i32* %11, align 4
  %351 = icmp ugt i32 %350, %349
  br i1 %351, label %353, label %352, !prof !3

352:                                              ; preds = %348
  store i8 1, i8* %130, align 8
  br label %353

353:                                              ; preds = %352, %348
  %354 = load i32, i32* %131, align 4
  %355 = icmp ugt i32 %354, %349
  br i1 %355, label %357, label %356, !prof !3

356:                                              ; preds = %353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %361

357:                                              ; preds = %353
  %358 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %359 = zext i32 %349 to i64
  %360 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %358, i64 %359
  br label %361

361:                                              ; preds = %357, %356
  %362 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %356 ], [ %360, %357 ]
  %363 = load i8, i8* %133, align 8, !range !6
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %449, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 3, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %449, label %369

369:                                              ; preds = %365
  %370 = load i32, i32* %134, align 4
  %371 = icmp eq i32 %370, %367
  br i1 %371, label %372, label %449, !prof !3

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 0, i32 0
  %374 = load double, double* %373, align 8
  %375 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 3, i32 2
  %376 = zext i32 %367 to i64
  %377 = load float*, float** %135, align 8
  %378 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %375, align 8
  %379 = add nsw i64 %376, -1
  %380 = and i64 %376, 3
  %381 = icmp ult i64 %379, 3
  br i1 %381, label %384, label %382

382:                                              ; preds = %372
  %383 = sub nsw i64 %376, %380
  br label %411

384:                                              ; preds = %411, %372
  %385 = phi double [ undef, %372 ], [ %445, %411 ]
  %386 = phi i64 [ 0, %372 ], [ %446, %411 ]
  %387 = phi double [ %374, %372 ], [ %445, %411 ]
  %388 = icmp eq i64 %380, 0
  br i1 %388, label %403, label %389

389:                                              ; preds = %384, %389
  %390 = phi i64 [ %400, %389 ], [ %386, %384 ]
  %391 = phi double [ %399, %389 ], [ %387, %384 ]
  %392 = phi i64 [ %401, %389 ], [ %380, %384 ]
  %393 = getelementptr inbounds float, float* %377, i64 %390
  %394 = load float, float* %393, align 4
  %395 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %390, i32 0
  %396 = load double, double* %395, align 8
  %397 = fpext float %394 to double
  %398 = fmul double %396, %397
  %399 = fadd double %391, %398
  %400 = add nuw nsw i64 %390, 1
  %401 = add i64 %392, -1
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %389, !llvm.loop !62

403:                                              ; preds = %389, %384
  %404 = phi double [ %385, %384 ], [ %399, %389 ]
  %405 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 2
  store i32 0, i32* %405, align 4
  %406 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 1
  store i32 0, i32* %406, align 8
  %407 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 3, i32 0
  %408 = load i32, i32* %407, align 8
  %409 = icmp slt i32 %408, 0
  store double %404, double* %373, align 8
  br i1 %409, label %449, label %410, !prof !2

410:                                              ; preds = %403
  store i32 0, i32* %366, align 4
  br label %449

411:                                              ; preds = %411, %382
  %412 = phi i64 [ 0, %382 ], [ %446, %411 ]
  %413 = phi double [ %374, %382 ], [ %445, %411 ]
  %414 = phi i64 [ %383, %382 ], [ %447, %411 ]
  %415 = getelementptr inbounds float, float* %377, i64 %412
  %416 = load float, float* %415, align 4
  %417 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %412, i32 0
  %418 = load double, double* %417, align 8
  %419 = fpext float %416 to double
  %420 = fmul double %418, %419
  %421 = fadd double %413, %420
  %422 = or i64 %412, 1
  %423 = getelementptr inbounds float, float* %377, i64 %422
  %424 = load float, float* %423, align 4
  %425 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %422, i32 0
  %426 = load double, double* %425, align 8
  %427 = fpext float %424 to double
  %428 = fmul double %426, %427
  %429 = fadd double %421, %428
  %430 = or i64 %412, 2
  %431 = getelementptr inbounds float, float* %377, i64 %430
  %432 = load float, float* %431, align 4
  %433 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %430, i32 0
  %434 = load double, double* %433, align 8
  %435 = fpext float %432 to double
  %436 = fmul double %434, %435
  %437 = fadd double %429, %436
  %438 = or i64 %412, 3
  %439 = getelementptr inbounds float, float* %377, i64 %438
  %440 = load float, float* %439, align 4
  %441 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %378, i64 %438, i32 0
  %442 = load double, double* %441, align 8
  %443 = fpext float %440 to double
  %444 = fmul double %442, %443
  %445 = fadd double %437, %444
  %446 = add nuw nsw i64 %412, 4
  %447 = add i64 %414, -4
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %384, label %411

449:                                              ; preds = %361, %365, %369, %403, %410
  %450 = load double, double* %137, align 8
  %451 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %261, i64 0, i32 0, i32 0
  %452 = load double, double* %451, align 8
  %453 = fadd double %450, %452
  store double %453, double* %137, align 8
  %454 = load double, double* %138, align 8
  %455 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %362, i64 0, i32 0, i32 0
  %456 = load double, double* %455, align 8
  %457 = fadd double %454, %456
  store double %457, double* %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* nonnull align 8 %136, i64 16, i1 false)
  %458 = add i32 %144, 3
  %459 = load i32, i32* %11, align 4
  %460 = icmp ugt i32 %459, %458
  br i1 %460, label %462, label %461, !prof !3

461:                                              ; preds = %449
  store i8 1, i8* %130, align 8
  br label %462

462:                                              ; preds = %461, %449
  %463 = load i32, i32* %131, align 4
  %464 = icmp ugt i32 %463, %458
  br i1 %464, label %466, label %465, !prof !3

465:                                              ; preds = %462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %470

466:                                              ; preds = %462
  %467 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %468 = zext i32 %458 to i64
  %469 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %467, i64 %468
  br label %470

470:                                              ; preds = %466, %465
  %471 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %465 ], [ %469, %466 ]
  %472 = load i8, i8* %133, align 8, !range !6
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %558, label %474

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 3, i32 1
  %476 = load i32, i32* %475, align 4
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %558, label %478

478:                                              ; preds = %474
  %479 = load i32, i32* %134, align 4
  %480 = icmp eq i32 %479, %476
  br i1 %480, label %481, label %558, !prof !3

481:                                              ; preds = %478
  %482 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 0, i32 0
  %483 = load double, double* %482, align 8
  %484 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 3, i32 2
  %485 = zext i32 %476 to i64
  %486 = load float*, float** %135, align 8
  %487 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %484, align 8
  %488 = add nsw i64 %485, -1
  %489 = and i64 %485, 3
  %490 = icmp ult i64 %488, 3
  br i1 %490, label %493, label %491

491:                                              ; preds = %481
  %492 = sub nsw i64 %485, %489
  br label %520

493:                                              ; preds = %520, %481
  %494 = phi double [ undef, %481 ], [ %554, %520 ]
  %495 = phi i64 [ 0, %481 ], [ %555, %520 ]
  %496 = phi double [ %483, %481 ], [ %554, %520 ]
  %497 = icmp eq i64 %489, 0
  br i1 %497, label %512, label %498

498:                                              ; preds = %493, %498
  %499 = phi i64 [ %509, %498 ], [ %495, %493 ]
  %500 = phi double [ %508, %498 ], [ %496, %493 ]
  %501 = phi i64 [ %510, %498 ], [ %489, %493 ]
  %502 = getelementptr inbounds float, float* %486, i64 %499
  %503 = load float, float* %502, align 4
  %504 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %499, i32 0
  %505 = load double, double* %504, align 8
  %506 = fpext float %503 to double
  %507 = fmul double %505, %506
  %508 = fadd double %500, %507
  %509 = add nuw nsw i64 %499, 1
  %510 = add i64 %501, -1
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %512, label %498, !llvm.loop !63

512:                                              ; preds = %498, %493
  %513 = phi double [ %494, %493 ], [ %508, %498 ]
  %514 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 2
  store i32 0, i32* %514, align 4
  %515 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 1
  store i32 0, i32* %515, align 8
  %516 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 3, i32 0
  %517 = load i32, i32* %516, align 8
  %518 = icmp slt i32 %517, 0
  store double %513, double* %482, align 8
  br i1 %518, label %558, label %519, !prof !2

519:                                              ; preds = %512
  store i32 0, i32* %475, align 4
  br label %558

520:                                              ; preds = %520, %491
  %521 = phi i64 [ 0, %491 ], [ %555, %520 ]
  %522 = phi double [ %483, %491 ], [ %554, %520 ]
  %523 = phi i64 [ %492, %491 ], [ %556, %520 ]
  %524 = getelementptr inbounds float, float* %486, i64 %521
  %525 = load float, float* %524, align 4
  %526 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %521, i32 0
  %527 = load double, double* %526, align 8
  %528 = fpext float %525 to double
  %529 = fmul double %527, %528
  %530 = fadd double %522, %529
  %531 = or i64 %521, 1
  %532 = getelementptr inbounds float, float* %486, i64 %531
  %533 = load float, float* %532, align 4
  %534 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %531, i32 0
  %535 = load double, double* %534, align 8
  %536 = fpext float %533 to double
  %537 = fmul double %535, %536
  %538 = fadd double %530, %537
  %539 = or i64 %521, 2
  %540 = getelementptr inbounds float, float* %486, i64 %539
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %539, i32 0
  %543 = load double, double* %542, align 8
  %544 = fpext float %541 to double
  %545 = fmul double %543, %544
  %546 = fadd double %538, %545
  %547 = or i64 %521, 3
  %548 = getelementptr inbounds float, float* %486, i64 %547
  %549 = load float, float* %548, align 4
  %550 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %487, i64 %547, i32 0
  %551 = load double, double* %550, align 8
  %552 = fpext float %549 to double
  %553 = fmul double %551, %552
  %554 = fadd double %546, %553
  %555 = add nuw nsw i64 %521, 4
  %556 = add i64 %523, -4
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %493, label %520

558:                                              ; preds = %470, %474, %478, %512, %519
  %559 = load double, double* %140, align 8
  %560 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %471, i64 0, i32 0, i32 0
  %561 = load double, double* %560, align 8
  %562 = fadd double %559, %561
  store double %562, double* %140, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %10, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #6
  %563 = add i32 %143, 4
  %564 = load i32, i32* %11, align 4
  %565 = icmp ugt i32 %563, %564
  br i1 %565, label %566, label %141

566:                                              ; preds = %558, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9vhcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca %"struct.CFF::point_t", align 8
  %5 = alloca %"struct.CFF::point_t", align 8
  %6 = alloca %"struct.CFF::point_t", align 8
  %7 = alloca <2 x double>, align 16
  %8 = bitcast <2 x double>* %7 to %"struct.CFF::point_t"*
  %9 = alloca %"struct.CFF::point_t", align 8
  %10 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %13 = bitcast %"struct.CFF::point_t"* %4 to i8*
  %14 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6
  %15 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 1, i32 0
  %17 = bitcast %"struct.CFF::point_t"* %5 to i8*
  %18 = bitcast %"struct.CFF::point_t"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #6
  %19 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %22 = bitcast %"struct.CFF::point_t"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -1, i64 16, i1 false)
  %23 = load i32, i32* %21, align 4
  %24 = and i32 %23, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %37

26:                                               ; preds = %2
  %27 = icmp ult i32 %23, 8
  br i1 %27, label %2394, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %30 = bitcast %"struct.CFF::point_t"* %29 to i8*
  %31 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %33 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %34 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %35 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %36 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  br label %1438

37:                                               ; preds = %2
  %38 = bitcast %"struct.CFF::point_t"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  %39 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %6, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %6, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %42 = bitcast %"struct.CFF::point_t"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %42, i64 16, i1 false)
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %45, align 8
  br label %46

46:                                               ; preds = %37, %44
  %47 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %53 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %52, align 8
  br label %54

54:                                               ; preds = %51, %50
  %55 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %50 ], [ %53, %51 ]
  %56 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %57 = load i8, i8* %56, align 8, !range !6
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %145, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 3, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %145, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %61
  br i1 %66, label %67, label %145, !prof !3

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 0, i32 0
  %69 = load double, double* %68, align 8
  %70 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %71 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 3, i32 2
  %72 = zext i32 %61 to i64
  %73 = load float*, float** %70, align 8
  %74 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %71, align 8
  %75 = add nsw i64 %72, -1
  %76 = and i64 %72, 3
  %77 = icmp ult i64 %75, 3
  br i1 %77, label %80, label %78

78:                                               ; preds = %67
  %79 = sub nsw i64 %72, %76
  br label %107

80:                                               ; preds = %107, %67
  %81 = phi double [ undef, %67 ], [ %141, %107 ]
  %82 = phi i64 [ 0, %67 ], [ %142, %107 ]
  %83 = phi double [ %69, %67 ], [ %141, %107 ]
  %84 = icmp eq i64 %76, 0
  br i1 %84, label %99, label %85

85:                                               ; preds = %80, %85
  %86 = phi i64 [ %96, %85 ], [ %82, %80 ]
  %87 = phi double [ %95, %85 ], [ %83, %80 ]
  %88 = phi i64 [ %97, %85 ], [ %76, %80 ]
  %89 = getelementptr inbounds float, float* %73, i64 %86
  %90 = load float, float* %89, align 4
  %91 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %86, i32 0
  %92 = load double, double* %91, align 8
  %93 = fpext float %90 to double
  %94 = fmul double %92, %93
  %95 = fadd double %87, %94
  %96 = add nuw nsw i64 %86, 1
  %97 = add i64 %88, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %85, !llvm.loop !64

99:                                               ; preds = %85, %80
  %100 = phi double [ %81, %80 ], [ %95, %85 ]
  %101 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 2
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 1
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 3, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp slt i32 %104, 0
  store double %100, double* %68, align 8
  br i1 %105, label %145, label %106, !prof !2

106:                                              ; preds = %99
  store i32 0, i32* %60, align 4
  br label %145

107:                                              ; preds = %107, %78
  %108 = phi i64 [ 0, %78 ], [ %142, %107 ]
  %109 = phi double [ %69, %78 ], [ %141, %107 ]
  %110 = phi i64 [ %79, %78 ], [ %143, %107 ]
  %111 = getelementptr inbounds float, float* %73, i64 %108
  %112 = load float, float* %111, align 4
  %113 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %108, i32 0
  %114 = load double, double* %113, align 8
  %115 = fpext float %112 to double
  %116 = fmul double %114, %115
  %117 = fadd double %109, %116
  %118 = or i64 %108, 1
  %119 = getelementptr inbounds float, float* %73, i64 %118
  %120 = load float, float* %119, align 4
  %121 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %118, i32 0
  %122 = load double, double* %121, align 8
  %123 = fpext float %120 to double
  %124 = fmul double %122, %123
  %125 = fadd double %117, %124
  %126 = or i64 %108, 2
  %127 = getelementptr inbounds float, float* %73, i64 %126
  %128 = load float, float* %127, align 4
  %129 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %126, i32 0
  %130 = load double, double* %129, align 8
  %131 = fpext float %128 to double
  %132 = fmul double %130, %131
  %133 = fadd double %125, %132
  %134 = or i64 %108, 3
  %135 = getelementptr inbounds float, float* %73, i64 %134
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %134, i32 0
  %138 = load double, double* %137, align 8
  %139 = fpext float %136 to double
  %140 = fmul double %138, %139
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %80, label %107

145:                                              ; preds = %54, %59, %63, %99, %106
  %146 = load double, double* %40, align 8
  %147 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 0, i32 0
  %148 = load double, double* %147, align 8
  %149 = fadd double %146, %148
  store double %149, double* %40, align 8
  %150 = bitcast <2 x double>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #6
  %151 = getelementptr inbounds <2 x double>, <2 x double>* %7, i64 0, i64 0
  %152 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %8, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %150, i8* nonnull align 8 %38, i64 16, i1 false)
  %153 = load i32, i32* %21, align 4
  %154 = icmp ugt i32 %153, 1
  br i1 %154, label %157, label %155, !prof !3

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %156, align 8
  br label %157

157:                                              ; preds = %155, %145
  %158 = load i32, i32* %47, align 4
  %159 = icmp ugt i32 %158, 1
  br i1 %159, label %161, label %160, !prof !3

160:                                              ; preds = %157
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %165

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %163 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %162, align 8
  %164 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %163, i64 1
  br label %165

165:                                              ; preds = %161, %160
  %166 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %160 ], [ %164, %161 ]
  %167 = load i8, i8* %56, align 8, !range !6
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %255, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 3, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %255, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, %171
  br i1 %176, label %177, label %255, !prof !3

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 0, i32 0
  %179 = load double, double* %178, align 8
  %180 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %181 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 3, i32 2
  %182 = zext i32 %171 to i64
  %183 = load float*, float** %180, align 8
  %184 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %181, align 8
  %185 = add nsw i64 %182, -1
  %186 = and i64 %182, 3
  %187 = icmp ult i64 %185, 3
  br i1 %187, label %190, label %188

188:                                              ; preds = %177
  %189 = sub nsw i64 %182, %186
  br label %217

190:                                              ; preds = %217, %177
  %191 = phi double [ undef, %177 ], [ %251, %217 ]
  %192 = phi i64 [ 0, %177 ], [ %252, %217 ]
  %193 = phi double [ %179, %177 ], [ %251, %217 ]
  %194 = icmp eq i64 %186, 0
  br i1 %194, label %209, label %195

195:                                              ; preds = %190, %195
  %196 = phi i64 [ %206, %195 ], [ %192, %190 ]
  %197 = phi double [ %205, %195 ], [ %193, %190 ]
  %198 = phi i64 [ %207, %195 ], [ %186, %190 ]
  %199 = getelementptr inbounds float, float* %183, i64 %196
  %200 = load float, float* %199, align 4
  %201 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %196, i32 0
  %202 = load double, double* %201, align 8
  %203 = fpext float %200 to double
  %204 = fmul double %202, %203
  %205 = fadd double %197, %204
  %206 = add nuw nsw i64 %196, 1
  %207 = add i64 %198, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %195, !llvm.loop !65

209:                                              ; preds = %195, %190
  %210 = phi double [ %191, %190 ], [ %205, %195 ]
  %211 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 2
  store i32 0, i32* %211, align 4
  %212 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 1
  store i32 0, i32* %212, align 8
  %213 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 3, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = icmp slt i32 %214, 0
  store double %210, double* %178, align 8
  br i1 %215, label %255, label %216, !prof !2

216:                                              ; preds = %209
  store i32 0, i32* %170, align 4
  br label %255

217:                                              ; preds = %217, %188
  %218 = phi i64 [ 0, %188 ], [ %252, %217 ]
  %219 = phi double [ %179, %188 ], [ %251, %217 ]
  %220 = phi i64 [ %189, %188 ], [ %253, %217 ]
  %221 = getelementptr inbounds float, float* %183, i64 %218
  %222 = load float, float* %221, align 4
  %223 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %218, i32 0
  %224 = load double, double* %223, align 8
  %225 = fpext float %222 to double
  %226 = fmul double %224, %225
  %227 = fadd double %219, %226
  %228 = or i64 %218, 1
  %229 = getelementptr inbounds float, float* %183, i64 %228
  %230 = load float, float* %229, align 4
  %231 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %228, i32 0
  %232 = load double, double* %231, align 8
  %233 = fpext float %230 to double
  %234 = fmul double %232, %233
  %235 = fadd double %227, %234
  %236 = or i64 %218, 2
  %237 = getelementptr inbounds float, float* %183, i64 %236
  %238 = load float, float* %237, align 4
  %239 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %236, i32 0
  %240 = load double, double* %239, align 8
  %241 = fpext float %238 to double
  %242 = fmul double %240, %241
  %243 = fadd double %235, %242
  %244 = or i64 %218, 3
  %245 = getelementptr inbounds float, float* %183, i64 %244
  %246 = load float, float* %245, align 4
  %247 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %244, i32 0
  %248 = load double, double* %247, align 8
  %249 = fpext float %246 to double
  %250 = fmul double %248, %249
  %251 = fadd double %243, %250
  %252 = add nuw nsw i64 %218, 4
  %253 = add i64 %220, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %190, label %217

255:                                              ; preds = %165, %169, %173, %209, %216
  %256 = load i32, i32* %21, align 4
  %257 = icmp ugt i32 %256, 2
  br i1 %257, label %260, label %258, !prof !3

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %259, align 8
  br label %260

260:                                              ; preds = %258, %255
  %261 = load i32, i32* %47, align 4
  %262 = icmp ugt i32 %261, 2
  br i1 %262, label %264, label %263, !prof !3

263:                                              ; preds = %260
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %268

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %266 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %265, align 8
  %267 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %266, i64 2
  br label %268

268:                                              ; preds = %264, %263
  %269 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %263 ], [ %267, %264 ]
  %270 = load i8, i8* %56, align 8, !range !6
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %358, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 3, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %358, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, %274
  br i1 %279, label %280, label %358, !prof !3

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 0, i32 0
  %282 = load double, double* %281, align 8
  %283 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %284 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 3, i32 2
  %285 = zext i32 %274 to i64
  %286 = load float*, float** %283, align 8
  %287 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %284, align 8
  %288 = add nsw i64 %285, -1
  %289 = and i64 %285, 3
  %290 = icmp ult i64 %288, 3
  br i1 %290, label %293, label %291

291:                                              ; preds = %280
  %292 = sub nsw i64 %285, %289
  br label %320

293:                                              ; preds = %320, %280
  %294 = phi double [ undef, %280 ], [ %354, %320 ]
  %295 = phi i64 [ 0, %280 ], [ %355, %320 ]
  %296 = phi double [ %282, %280 ], [ %354, %320 ]
  %297 = icmp eq i64 %289, 0
  br i1 %297, label %312, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %309, %298 ], [ %295, %293 ]
  %300 = phi double [ %308, %298 ], [ %296, %293 ]
  %301 = phi i64 [ %310, %298 ], [ %289, %293 ]
  %302 = getelementptr inbounds float, float* %286, i64 %299
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %299, i32 0
  %305 = load double, double* %304, align 8
  %306 = fpext float %303 to double
  %307 = fmul double %305, %306
  %308 = fadd double %300, %307
  %309 = add nuw nsw i64 %299, 1
  %310 = add i64 %301, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %298, !llvm.loop !66

312:                                              ; preds = %298, %293
  %313 = phi double [ %294, %293 ], [ %308, %298 ]
  %314 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 2
  store i32 0, i32* %314, align 4
  %315 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 1
  store i32 0, i32* %315, align 8
  %316 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 3, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp slt i32 %317, 0
  store double %313, double* %281, align 8
  br i1 %318, label %358, label %319, !prof !2

319:                                              ; preds = %312
  store i32 0, i32* %273, align 4
  br label %358

320:                                              ; preds = %320, %291
  %321 = phi i64 [ 0, %291 ], [ %355, %320 ]
  %322 = phi double [ %282, %291 ], [ %354, %320 ]
  %323 = phi i64 [ %292, %291 ], [ %356, %320 ]
  %324 = getelementptr inbounds float, float* %286, i64 %321
  %325 = load float, float* %324, align 4
  %326 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %321, i32 0
  %327 = load double, double* %326, align 8
  %328 = fpext float %325 to double
  %329 = fmul double %327, %328
  %330 = fadd double %322, %329
  %331 = or i64 %321, 1
  %332 = getelementptr inbounds float, float* %286, i64 %331
  %333 = load float, float* %332, align 4
  %334 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %331, i32 0
  %335 = load double, double* %334, align 8
  %336 = fpext float %333 to double
  %337 = fmul double %335, %336
  %338 = fadd double %330, %337
  %339 = or i64 %321, 2
  %340 = getelementptr inbounds float, float* %286, i64 %339
  %341 = load float, float* %340, align 4
  %342 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %339, i32 0
  %343 = load double, double* %342, align 8
  %344 = fpext float %341 to double
  %345 = fmul double %343, %344
  %346 = fadd double %338, %345
  %347 = or i64 %321, 3
  %348 = getelementptr inbounds float, float* %286, i64 %347
  %349 = load float, float* %348, align 4
  %350 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %347, i32 0
  %351 = load double, double* %350, align 8
  %352 = fpext float %349 to double
  %353 = fmul double %351, %352
  %354 = fadd double %346, %353
  %355 = add nuw nsw i64 %321, 4
  %356 = add i64 %323, -4
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %293, label %320

358:                                              ; preds = %268, %272, %276, %312, %319
  %359 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 0, i32 0
  %360 = load double, double* %359, align 8
  %361 = load <2 x double>, <2 x double>* %7, align 16
  %362 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 0, i32 0
  %363 = load double, double* %362, align 8
  %364 = insertelement <2 x double> undef, double %360, i32 0
  %365 = insertelement <2 x double> %364, double %363, i32 1
  %366 = fadd <2 x double> %361, %365
  store <2 x double> %366, <2 x double>* %7, align 16
  %367 = bitcast %"struct.CFF::point_t"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %367) #6
  %368 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %9, i64 0, i32 0, i32 0
  %369 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %9, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %367, i8* nonnull align 16 %150, i64 16, i1 false)
  %370 = load i32, i32* %21, align 4
  %371 = icmp ugt i32 %370, 3
  br i1 %371, label %374, label %372, !prof !3

372:                                              ; preds = %358
  %373 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %373, align 8
  br label %374

374:                                              ; preds = %372, %358
  %375 = load i32, i32* %47, align 4
  %376 = icmp ugt i32 %375, 3
  br i1 %376, label %378, label %377, !prof !3

377:                                              ; preds = %374
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %382

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %380 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %379, align 8
  %381 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %380, i64 3
  br label %382

382:                                              ; preds = %378, %377
  %383 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %377 ], [ %381, %378 ]
  %384 = load i8, i8* %56, align 8, !range !6
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %472, label %386

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 3, i32 1
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %472, label %390

390:                                              ; preds = %386
  %391 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = icmp eq i32 %392, %388
  br i1 %393, label %394, label %472, !prof !3

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 0, i32 0
  %396 = load double, double* %395, align 8
  %397 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %398 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 3, i32 2
  %399 = zext i32 %388 to i64
  %400 = load float*, float** %397, align 8
  %401 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %398, align 8
  %402 = add nsw i64 %399, -1
  %403 = and i64 %399, 3
  %404 = icmp ult i64 %402, 3
  br i1 %404, label %407, label %405

405:                                              ; preds = %394
  %406 = sub nsw i64 %399, %403
  br label %434

407:                                              ; preds = %434, %394
  %408 = phi double [ undef, %394 ], [ %468, %434 ]
  %409 = phi i64 [ 0, %394 ], [ %469, %434 ]
  %410 = phi double [ %396, %394 ], [ %468, %434 ]
  %411 = icmp eq i64 %403, 0
  br i1 %411, label %426, label %412

412:                                              ; preds = %407, %412
  %413 = phi i64 [ %423, %412 ], [ %409, %407 ]
  %414 = phi double [ %422, %412 ], [ %410, %407 ]
  %415 = phi i64 [ %424, %412 ], [ %403, %407 ]
  %416 = getelementptr inbounds float, float* %400, i64 %413
  %417 = load float, float* %416, align 4
  %418 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %413, i32 0
  %419 = load double, double* %418, align 8
  %420 = fpext float %417 to double
  %421 = fmul double %419, %420
  %422 = fadd double %414, %421
  %423 = add nuw nsw i64 %413, 1
  %424 = add i64 %415, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %412, !llvm.loop !67

426:                                              ; preds = %412, %407
  %427 = phi double [ %408, %407 ], [ %422, %412 ]
  %428 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 2
  store i32 0, i32* %428, align 4
  %429 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 1
  store i32 0, i32* %429, align 8
  %430 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 3, i32 0
  %431 = load i32, i32* %430, align 8
  %432 = icmp slt i32 %431, 0
  store double %427, double* %395, align 8
  br i1 %432, label %472, label %433, !prof !2

433:                                              ; preds = %426
  store i32 0, i32* %387, align 4
  br label %472

434:                                              ; preds = %434, %405
  %435 = phi i64 [ 0, %405 ], [ %469, %434 ]
  %436 = phi double [ %396, %405 ], [ %468, %434 ]
  %437 = phi i64 [ %406, %405 ], [ %470, %434 ]
  %438 = getelementptr inbounds float, float* %400, i64 %435
  %439 = load float, float* %438, align 4
  %440 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %435, i32 0
  %441 = load double, double* %440, align 8
  %442 = fpext float %439 to double
  %443 = fmul double %441, %442
  %444 = fadd double %436, %443
  %445 = or i64 %435, 1
  %446 = getelementptr inbounds float, float* %400, i64 %445
  %447 = load float, float* %446, align 4
  %448 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %445, i32 0
  %449 = load double, double* %448, align 8
  %450 = fpext float %447 to double
  %451 = fmul double %449, %450
  %452 = fadd double %444, %451
  %453 = or i64 %435, 2
  %454 = getelementptr inbounds float, float* %400, i64 %453
  %455 = load float, float* %454, align 4
  %456 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %453, i32 0
  %457 = load double, double* %456, align 8
  %458 = fpext float %455 to double
  %459 = fmul double %457, %458
  %460 = fadd double %452, %459
  %461 = or i64 %435, 3
  %462 = getelementptr inbounds float, float* %400, i64 %461
  %463 = load float, float* %462, align 4
  %464 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %461, i32 0
  %465 = load double, double* %464, align 8
  %466 = fpext float %463 to double
  %467 = fmul double %465, %466
  %468 = fadd double %460, %467
  %469 = add nuw nsw i64 %435, 4
  %470 = add i64 %437, -4
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %407, label %434

472:                                              ; preds = %382, %386, %390, %426, %433
  %473 = load double, double* %368, align 8
  %474 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 0, i32 0
  %475 = load double, double* %474, align 8
  %476 = fadd double %473, %475
  store double %476, double* %368, align 8
  %477 = load i32, i32* %21, align 4
  %478 = icmp ult i32 %477, 12
  br i1 %478, label %1329, label %479

479:                                              ; preds = %472
  %480 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %481 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %482 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %483 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  br label %484

484:                                              ; preds = %479, %1321
  %485 = phi i32 [ 12, %479 ], [ %1326, %1321 ]
  %486 = phi i32 [ 4, %479 ], [ %485, %1321 ]
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %9)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %42, i64 16, i1 false)
  %487 = load i32, i32* %21, align 4
  %488 = icmp ugt i32 %487, %486
  br i1 %488, label %490, label %489, !prof !3

489:                                              ; preds = %484
  store i8 1, i8* %480, align 8
  br label %490

490:                                              ; preds = %489, %484
  %491 = load i32, i32* %47, align 4
  %492 = icmp ugt i32 %491, %486
  br i1 %492, label %494, label %493, !prof !3

493:                                              ; preds = %490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %498

494:                                              ; preds = %490
  %495 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %496 = zext i32 %486 to i64
  %497 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %495, i64 %496
  br label %498

498:                                              ; preds = %494, %493
  %499 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %493 ], [ %497, %494 ]
  %500 = load i8, i8* %56, align 8, !range !6
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %586, label %502

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 3, i32 1
  %504 = load i32, i32* %503, align 4
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %586, label %506

506:                                              ; preds = %502
  %507 = load i32, i32* %482, align 4
  %508 = icmp eq i32 %507, %504
  br i1 %508, label %509, label %586, !prof !3

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 0, i32 0
  %511 = load double, double* %510, align 8
  %512 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 3, i32 2
  %513 = zext i32 %504 to i64
  %514 = load float*, float** %483, align 8
  %515 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %512, align 8
  %516 = add nsw i64 %513, -1
  %517 = and i64 %513, 3
  %518 = icmp ult i64 %516, 3
  br i1 %518, label %521, label %519

519:                                              ; preds = %509
  %520 = sub nsw i64 %513, %517
  br label %548

521:                                              ; preds = %548, %509
  %522 = phi double [ undef, %509 ], [ %582, %548 ]
  %523 = phi i64 [ 0, %509 ], [ %583, %548 ]
  %524 = phi double [ %511, %509 ], [ %582, %548 ]
  %525 = icmp eq i64 %517, 0
  br i1 %525, label %540, label %526

526:                                              ; preds = %521, %526
  %527 = phi i64 [ %537, %526 ], [ %523, %521 ]
  %528 = phi double [ %536, %526 ], [ %524, %521 ]
  %529 = phi i64 [ %538, %526 ], [ %517, %521 ]
  %530 = getelementptr inbounds float, float* %514, i64 %527
  %531 = load float, float* %530, align 4
  %532 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %527, i32 0
  %533 = load double, double* %532, align 8
  %534 = fpext float %531 to double
  %535 = fmul double %533, %534
  %536 = fadd double %528, %535
  %537 = add nuw nsw i64 %527, 1
  %538 = add i64 %529, -1
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %526, !llvm.loop !68

540:                                              ; preds = %526, %521
  %541 = phi double [ %522, %521 ], [ %536, %526 ]
  %542 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 2
  store i32 0, i32* %542, align 4
  %543 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 1
  store i32 0, i32* %543, align 8
  %544 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 3, i32 0
  %545 = load i32, i32* %544, align 8
  %546 = icmp slt i32 %545, 0
  store double %541, double* %510, align 8
  br i1 %546, label %586, label %547, !prof !2

547:                                              ; preds = %540
  store i32 0, i32* %503, align 4
  br label %586

548:                                              ; preds = %548, %519
  %549 = phi i64 [ 0, %519 ], [ %583, %548 ]
  %550 = phi double [ %511, %519 ], [ %582, %548 ]
  %551 = phi i64 [ %520, %519 ], [ %584, %548 ]
  %552 = getelementptr inbounds float, float* %514, i64 %549
  %553 = load float, float* %552, align 4
  %554 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %549, i32 0
  %555 = load double, double* %554, align 8
  %556 = fpext float %553 to double
  %557 = fmul double %555, %556
  %558 = fadd double %550, %557
  %559 = or i64 %549, 1
  %560 = getelementptr inbounds float, float* %514, i64 %559
  %561 = load float, float* %560, align 4
  %562 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %559, i32 0
  %563 = load double, double* %562, align 8
  %564 = fpext float %561 to double
  %565 = fmul double %563, %564
  %566 = fadd double %558, %565
  %567 = or i64 %549, 2
  %568 = getelementptr inbounds float, float* %514, i64 %567
  %569 = load float, float* %568, align 4
  %570 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %567, i32 0
  %571 = load double, double* %570, align 8
  %572 = fpext float %569 to double
  %573 = fmul double %571, %572
  %574 = fadd double %566, %573
  %575 = or i64 %549, 3
  %576 = getelementptr inbounds float, float* %514, i64 %575
  %577 = load float, float* %576, align 4
  %578 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %575, i32 0
  %579 = load double, double* %578, align 8
  %580 = fpext float %577 to double
  %581 = fmul double %579, %580
  %582 = fadd double %574, %581
  %583 = add nuw nsw i64 %549, 4
  %584 = add i64 %551, -4
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %521, label %548

586:                                              ; preds = %498, %502, %506, %540, %547
  %587 = load double, double* %39, align 8
  %588 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 0, i32 0
  %589 = load double, double* %588, align 8
  %590 = fadd double %587, %589
  store double %590, double* %39, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %150, i8* nonnull align 8 %38, i64 16, i1 false)
  %591 = or i32 %486, 1
  %592 = load i32, i32* %21, align 4
  %593 = icmp ugt i32 %592, %591
  br i1 %593, label %595, label %594, !prof !3

594:                                              ; preds = %586
  store i8 1, i8* %480, align 8
  br label %595

595:                                              ; preds = %594, %586
  %596 = load i32, i32* %47, align 4
  %597 = icmp ugt i32 %596, %591
  br i1 %597, label %599, label %598, !prof !3

598:                                              ; preds = %595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %603

599:                                              ; preds = %595
  %600 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %601 = zext i32 %591 to i64
  %602 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %600, i64 %601
  br label %603

603:                                              ; preds = %599, %598
  %604 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %598 ], [ %602, %599 ]
  %605 = load i8, i8* %56, align 8, !range !6
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %691, label %607

607:                                              ; preds = %603
  %608 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 3, i32 1
  %609 = load i32, i32* %608, align 4
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %691, label %611

611:                                              ; preds = %607
  %612 = load i32, i32* %482, align 4
  %613 = icmp eq i32 %612, %609
  br i1 %613, label %614, label %691, !prof !3

614:                                              ; preds = %611
  %615 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 0, i32 0
  %616 = load double, double* %615, align 8
  %617 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 3, i32 2
  %618 = zext i32 %609 to i64
  %619 = load float*, float** %483, align 8
  %620 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %617, align 8
  %621 = add nsw i64 %618, -1
  %622 = and i64 %618, 3
  %623 = icmp ult i64 %621, 3
  br i1 %623, label %626, label %624

624:                                              ; preds = %614
  %625 = sub nsw i64 %618, %622
  br label %653

626:                                              ; preds = %653, %614
  %627 = phi double [ undef, %614 ], [ %687, %653 ]
  %628 = phi i64 [ 0, %614 ], [ %688, %653 ]
  %629 = phi double [ %616, %614 ], [ %687, %653 ]
  %630 = icmp eq i64 %622, 0
  br i1 %630, label %645, label %631

631:                                              ; preds = %626, %631
  %632 = phi i64 [ %642, %631 ], [ %628, %626 ]
  %633 = phi double [ %641, %631 ], [ %629, %626 ]
  %634 = phi i64 [ %643, %631 ], [ %622, %626 ]
  %635 = getelementptr inbounds float, float* %619, i64 %632
  %636 = load float, float* %635, align 4
  %637 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %632, i32 0
  %638 = load double, double* %637, align 8
  %639 = fpext float %636 to double
  %640 = fmul double %638, %639
  %641 = fadd double %633, %640
  %642 = add nuw nsw i64 %632, 1
  %643 = add i64 %634, -1
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %645, label %631, !llvm.loop !69

645:                                              ; preds = %631, %626
  %646 = phi double [ %627, %626 ], [ %641, %631 ]
  %647 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 2
  store i32 0, i32* %647, align 4
  %648 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 1
  store i32 0, i32* %648, align 8
  %649 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 3, i32 0
  %650 = load i32, i32* %649, align 8
  %651 = icmp slt i32 %650, 0
  store double %646, double* %615, align 8
  br i1 %651, label %691, label %652, !prof !2

652:                                              ; preds = %645
  store i32 0, i32* %608, align 4
  br label %691

653:                                              ; preds = %653, %624
  %654 = phi i64 [ 0, %624 ], [ %688, %653 ]
  %655 = phi double [ %616, %624 ], [ %687, %653 ]
  %656 = phi i64 [ %625, %624 ], [ %689, %653 ]
  %657 = getelementptr inbounds float, float* %619, i64 %654
  %658 = load float, float* %657, align 4
  %659 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %654, i32 0
  %660 = load double, double* %659, align 8
  %661 = fpext float %658 to double
  %662 = fmul double %660, %661
  %663 = fadd double %655, %662
  %664 = or i64 %654, 1
  %665 = getelementptr inbounds float, float* %619, i64 %664
  %666 = load float, float* %665, align 4
  %667 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %664, i32 0
  %668 = load double, double* %667, align 8
  %669 = fpext float %666 to double
  %670 = fmul double %668, %669
  %671 = fadd double %663, %670
  %672 = or i64 %654, 2
  %673 = getelementptr inbounds float, float* %619, i64 %672
  %674 = load float, float* %673, align 4
  %675 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %672, i32 0
  %676 = load double, double* %675, align 8
  %677 = fpext float %674 to double
  %678 = fmul double %676, %677
  %679 = fadd double %671, %678
  %680 = or i64 %654, 3
  %681 = getelementptr inbounds float, float* %619, i64 %680
  %682 = load float, float* %681, align 4
  %683 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %680, i32 0
  %684 = load double, double* %683, align 8
  %685 = fpext float %682 to double
  %686 = fmul double %684, %685
  %687 = fadd double %679, %686
  %688 = add nuw nsw i64 %654, 4
  %689 = add i64 %656, -4
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %626, label %653

691:                                              ; preds = %603, %607, %611, %645, %652
  %692 = or i32 %486, 2
  %693 = load i32, i32* %21, align 4
  %694 = icmp ugt i32 %693, %692
  br i1 %694, label %696, label %695, !prof !3

695:                                              ; preds = %691
  store i8 1, i8* %480, align 8
  br label %696

696:                                              ; preds = %695, %691
  %697 = load i32, i32* %47, align 4
  %698 = icmp ugt i32 %697, %692
  br i1 %698, label %700, label %699, !prof !3

699:                                              ; preds = %696
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %704

700:                                              ; preds = %696
  %701 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %702 = zext i32 %692 to i64
  %703 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %701, i64 %702
  br label %704

704:                                              ; preds = %700, %699
  %705 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %699 ], [ %703, %700 ]
  %706 = load i8, i8* %56, align 8, !range !6
  %707 = icmp eq i8 %706, 0
  br i1 %707, label %792, label %708

708:                                              ; preds = %704
  %709 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 3, i32 1
  %710 = load i32, i32* %709, align 4
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %792, label %712

712:                                              ; preds = %708
  %713 = load i32, i32* %482, align 4
  %714 = icmp eq i32 %713, %710
  br i1 %714, label %715, label %792, !prof !3

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 0, i32 0
  %717 = load double, double* %716, align 8
  %718 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 3, i32 2
  %719 = zext i32 %710 to i64
  %720 = load float*, float** %483, align 8
  %721 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %718, align 8
  %722 = add nsw i64 %719, -1
  %723 = and i64 %719, 3
  %724 = icmp ult i64 %722, 3
  br i1 %724, label %727, label %725

725:                                              ; preds = %715
  %726 = sub nsw i64 %719, %723
  br label %754

727:                                              ; preds = %754, %715
  %728 = phi double [ undef, %715 ], [ %788, %754 ]
  %729 = phi i64 [ 0, %715 ], [ %789, %754 ]
  %730 = phi double [ %717, %715 ], [ %788, %754 ]
  %731 = icmp eq i64 %723, 0
  br i1 %731, label %746, label %732

732:                                              ; preds = %727, %732
  %733 = phi i64 [ %743, %732 ], [ %729, %727 ]
  %734 = phi double [ %742, %732 ], [ %730, %727 ]
  %735 = phi i64 [ %744, %732 ], [ %723, %727 ]
  %736 = getelementptr inbounds float, float* %720, i64 %733
  %737 = load float, float* %736, align 4
  %738 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %733, i32 0
  %739 = load double, double* %738, align 8
  %740 = fpext float %737 to double
  %741 = fmul double %739, %740
  %742 = fadd double %734, %741
  %743 = add nuw nsw i64 %733, 1
  %744 = add i64 %735, -1
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %732, !llvm.loop !70

746:                                              ; preds = %732, %727
  %747 = phi double [ %728, %727 ], [ %742, %732 ]
  %748 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 2
  store i32 0, i32* %748, align 4
  %749 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 1
  store i32 0, i32* %749, align 8
  %750 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 3, i32 0
  %751 = load i32, i32* %750, align 8
  %752 = icmp slt i32 %751, 0
  store double %747, double* %716, align 8
  br i1 %752, label %792, label %753, !prof !2

753:                                              ; preds = %746
  store i32 0, i32* %709, align 4
  br label %792

754:                                              ; preds = %754, %725
  %755 = phi i64 [ 0, %725 ], [ %789, %754 ]
  %756 = phi double [ %717, %725 ], [ %788, %754 ]
  %757 = phi i64 [ %726, %725 ], [ %790, %754 ]
  %758 = getelementptr inbounds float, float* %720, i64 %755
  %759 = load float, float* %758, align 4
  %760 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %755, i32 0
  %761 = load double, double* %760, align 8
  %762 = fpext float %759 to double
  %763 = fmul double %761, %762
  %764 = fadd double %756, %763
  %765 = or i64 %755, 1
  %766 = getelementptr inbounds float, float* %720, i64 %765
  %767 = load float, float* %766, align 4
  %768 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %765, i32 0
  %769 = load double, double* %768, align 8
  %770 = fpext float %767 to double
  %771 = fmul double %769, %770
  %772 = fadd double %764, %771
  %773 = or i64 %755, 2
  %774 = getelementptr inbounds float, float* %720, i64 %773
  %775 = load float, float* %774, align 4
  %776 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %773, i32 0
  %777 = load double, double* %776, align 8
  %778 = fpext float %775 to double
  %779 = fmul double %777, %778
  %780 = fadd double %772, %779
  %781 = or i64 %755, 3
  %782 = getelementptr inbounds float, float* %720, i64 %781
  %783 = load float, float* %782, align 4
  %784 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %781, i32 0
  %785 = load double, double* %784, align 8
  %786 = fpext float %783 to double
  %787 = fmul double %785, %786
  %788 = fadd double %780, %787
  %789 = add nuw nsw i64 %755, 4
  %790 = add i64 %757, -4
  %791 = icmp eq i64 %790, 0
  br i1 %791, label %727, label %754

792:                                              ; preds = %704, %708, %712, %746, %753
  %793 = load double, double* %151, align 16
  %794 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 0, i32 0
  %795 = load double, double* %794, align 8
  %796 = fadd double %793, %795
  store double %796, double* %151, align 16
  %797 = load double, double* %152, align 8
  %798 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 0, i32 0
  %799 = load double, double* %798, align 8
  %800 = fadd double %797, %799
  store double %800, double* %152, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %367, i8* nonnull align 16 %150, i64 16, i1 false)
  %801 = or i32 %486, 3
  %802 = load i32, i32* %21, align 4
  %803 = icmp ugt i32 %802, %801
  br i1 %803, label %805, label %804, !prof !3

804:                                              ; preds = %792
  store i8 1, i8* %480, align 8
  br label %805

805:                                              ; preds = %804, %792
  %806 = load i32, i32* %47, align 4
  %807 = icmp ugt i32 %806, %801
  br i1 %807, label %809, label %808, !prof !3

808:                                              ; preds = %805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %813

809:                                              ; preds = %805
  %810 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %811 = zext i32 %801 to i64
  %812 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %810, i64 %811
  br label %813

813:                                              ; preds = %809, %808
  %814 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %808 ], [ %812, %809 ]
  %815 = load i8, i8* %56, align 8, !range !6
  %816 = icmp eq i8 %815, 0
  br i1 %816, label %901, label %817

817:                                              ; preds = %813
  %818 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 3, i32 1
  %819 = load i32, i32* %818, align 4
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %901, label %821

821:                                              ; preds = %817
  %822 = load i32, i32* %482, align 4
  %823 = icmp eq i32 %822, %819
  br i1 %823, label %824, label %901, !prof !3

824:                                              ; preds = %821
  %825 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 0, i32 0
  %826 = load double, double* %825, align 8
  %827 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 3, i32 2
  %828 = zext i32 %819 to i64
  %829 = load float*, float** %483, align 8
  %830 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %827, align 8
  %831 = add nsw i64 %828, -1
  %832 = and i64 %828, 3
  %833 = icmp ult i64 %831, 3
  br i1 %833, label %836, label %834

834:                                              ; preds = %824
  %835 = sub nsw i64 %828, %832
  br label %863

836:                                              ; preds = %863, %824
  %837 = phi double [ undef, %824 ], [ %897, %863 ]
  %838 = phi i64 [ 0, %824 ], [ %898, %863 ]
  %839 = phi double [ %826, %824 ], [ %897, %863 ]
  %840 = icmp eq i64 %832, 0
  br i1 %840, label %855, label %841

841:                                              ; preds = %836, %841
  %842 = phi i64 [ %852, %841 ], [ %838, %836 ]
  %843 = phi double [ %851, %841 ], [ %839, %836 ]
  %844 = phi i64 [ %853, %841 ], [ %832, %836 ]
  %845 = getelementptr inbounds float, float* %829, i64 %842
  %846 = load float, float* %845, align 4
  %847 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %842, i32 0
  %848 = load double, double* %847, align 8
  %849 = fpext float %846 to double
  %850 = fmul double %848, %849
  %851 = fadd double %843, %850
  %852 = add nuw nsw i64 %842, 1
  %853 = add i64 %844, -1
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %855, label %841, !llvm.loop !71

855:                                              ; preds = %841, %836
  %856 = phi double [ %837, %836 ], [ %851, %841 ]
  %857 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 2
  store i32 0, i32* %857, align 4
  %858 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 1
  store i32 0, i32* %858, align 8
  %859 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 3, i32 0
  %860 = load i32, i32* %859, align 8
  %861 = icmp slt i32 %860, 0
  store double %856, double* %825, align 8
  br i1 %861, label %901, label %862, !prof !2

862:                                              ; preds = %855
  store i32 0, i32* %818, align 4
  br label %901

863:                                              ; preds = %863, %834
  %864 = phi i64 [ 0, %834 ], [ %898, %863 ]
  %865 = phi double [ %826, %834 ], [ %897, %863 ]
  %866 = phi i64 [ %835, %834 ], [ %899, %863 ]
  %867 = getelementptr inbounds float, float* %829, i64 %864
  %868 = load float, float* %867, align 4
  %869 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %864, i32 0
  %870 = load double, double* %869, align 8
  %871 = fpext float %868 to double
  %872 = fmul double %870, %871
  %873 = fadd double %865, %872
  %874 = or i64 %864, 1
  %875 = getelementptr inbounds float, float* %829, i64 %874
  %876 = load float, float* %875, align 4
  %877 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %874, i32 0
  %878 = load double, double* %877, align 8
  %879 = fpext float %876 to double
  %880 = fmul double %878, %879
  %881 = fadd double %873, %880
  %882 = or i64 %864, 2
  %883 = getelementptr inbounds float, float* %829, i64 %882
  %884 = load float, float* %883, align 4
  %885 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %882, i32 0
  %886 = load double, double* %885, align 8
  %887 = fpext float %884 to double
  %888 = fmul double %886, %887
  %889 = fadd double %881, %888
  %890 = or i64 %864, 3
  %891 = getelementptr inbounds float, float* %829, i64 %890
  %892 = load float, float* %891, align 4
  %893 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %890, i32 0
  %894 = load double, double* %893, align 8
  %895 = fpext float %892 to double
  %896 = fmul double %894, %895
  %897 = fadd double %889, %896
  %898 = add nuw nsw i64 %864, 4
  %899 = add i64 %866, -4
  %900 = icmp eq i64 %899, 0
  br i1 %900, label %836, label %863

901:                                              ; preds = %813, %817, %821, %855, %862
  %902 = load double, double* %369, align 8
  %903 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 0, i32 0
  %904 = load double, double* %903, align 8
  %905 = fadd double %902, %904
  store double %905, double* %369, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %9)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %367, i64 16, i1 false)
  %906 = add i32 %486, 4
  %907 = load i32, i32* %21, align 4
  %908 = icmp ugt i32 %907, %906
  br i1 %908, label %910, label %909, !prof !3

909:                                              ; preds = %901
  store i8 1, i8* %480, align 8
  br label %910

910:                                              ; preds = %909, %901
  %911 = load i32, i32* %47, align 4
  %912 = icmp ugt i32 %911, %906
  br i1 %912, label %914, label %913, !prof !3

913:                                              ; preds = %910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %918

914:                                              ; preds = %910
  %915 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %916 = zext i32 %906 to i64
  %917 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %915, i64 %916
  br label %918

918:                                              ; preds = %914, %913
  %919 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %913 ], [ %917, %914 ]
  %920 = load i8, i8* %56, align 8, !range !6
  %921 = icmp eq i8 %920, 0
  br i1 %921, label %1006, label %922

922:                                              ; preds = %918
  %923 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 3, i32 1
  %924 = load i32, i32* %923, align 4
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %1006, label %926

926:                                              ; preds = %922
  %927 = load i32, i32* %482, align 4
  %928 = icmp eq i32 %927, %924
  br i1 %928, label %929, label %1006, !prof !3

929:                                              ; preds = %926
  %930 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 0, i32 0
  %931 = load double, double* %930, align 8
  %932 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 3, i32 2
  %933 = zext i32 %924 to i64
  %934 = load float*, float** %483, align 8
  %935 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %932, align 8
  %936 = add nsw i64 %933, -1
  %937 = and i64 %933, 3
  %938 = icmp ult i64 %936, 3
  br i1 %938, label %941, label %939

939:                                              ; preds = %929
  %940 = sub nsw i64 %933, %937
  br label %968

941:                                              ; preds = %968, %929
  %942 = phi double [ undef, %929 ], [ %1002, %968 ]
  %943 = phi i64 [ 0, %929 ], [ %1003, %968 ]
  %944 = phi double [ %931, %929 ], [ %1002, %968 ]
  %945 = icmp eq i64 %937, 0
  br i1 %945, label %960, label %946

946:                                              ; preds = %941, %946
  %947 = phi i64 [ %957, %946 ], [ %943, %941 ]
  %948 = phi double [ %956, %946 ], [ %944, %941 ]
  %949 = phi i64 [ %958, %946 ], [ %937, %941 ]
  %950 = getelementptr inbounds float, float* %934, i64 %947
  %951 = load float, float* %950, align 4
  %952 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %947, i32 0
  %953 = load double, double* %952, align 8
  %954 = fpext float %951 to double
  %955 = fmul double %953, %954
  %956 = fadd double %948, %955
  %957 = add nuw nsw i64 %947, 1
  %958 = add i64 %949, -1
  %959 = icmp eq i64 %958, 0
  br i1 %959, label %960, label %946, !llvm.loop !72

960:                                              ; preds = %946, %941
  %961 = phi double [ %942, %941 ], [ %956, %946 ]
  %962 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 2
  store i32 0, i32* %962, align 4
  %963 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 1
  store i32 0, i32* %963, align 8
  %964 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 3, i32 0
  %965 = load i32, i32* %964, align 8
  %966 = icmp slt i32 %965, 0
  store double %961, double* %930, align 8
  br i1 %966, label %1006, label %967, !prof !2

967:                                              ; preds = %960
  store i32 0, i32* %923, align 4
  br label %1006

968:                                              ; preds = %968, %939
  %969 = phi i64 [ 0, %939 ], [ %1003, %968 ]
  %970 = phi double [ %931, %939 ], [ %1002, %968 ]
  %971 = phi i64 [ %940, %939 ], [ %1004, %968 ]
  %972 = getelementptr inbounds float, float* %934, i64 %969
  %973 = load float, float* %972, align 4
  %974 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %969, i32 0
  %975 = load double, double* %974, align 8
  %976 = fpext float %973 to double
  %977 = fmul double %975, %976
  %978 = fadd double %970, %977
  %979 = or i64 %969, 1
  %980 = getelementptr inbounds float, float* %934, i64 %979
  %981 = load float, float* %980, align 4
  %982 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %979, i32 0
  %983 = load double, double* %982, align 8
  %984 = fpext float %981 to double
  %985 = fmul double %983, %984
  %986 = fadd double %978, %985
  %987 = or i64 %969, 2
  %988 = getelementptr inbounds float, float* %934, i64 %987
  %989 = load float, float* %988, align 4
  %990 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %987, i32 0
  %991 = load double, double* %990, align 8
  %992 = fpext float %989 to double
  %993 = fmul double %991, %992
  %994 = fadd double %986, %993
  %995 = or i64 %969, 3
  %996 = getelementptr inbounds float, float* %934, i64 %995
  %997 = load float, float* %996, align 4
  %998 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %995, i32 0
  %999 = load double, double* %998, align 8
  %1000 = fpext float %997 to double
  %1001 = fmul double %999, %1000
  %1002 = fadd double %994, %1001
  %1003 = add nuw nsw i64 %969, 4
  %1004 = add i64 %971, -4
  %1005 = icmp eq i64 %1004, 0
  br i1 %1005, label %941, label %968

1006:                                             ; preds = %918, %922, %926, %960, %967
  %1007 = load double, double* %40, align 8
  %1008 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 0, i32 0
  %1009 = load double, double* %1008, align 8
  %1010 = fadd double %1007, %1009
  store double %1010, double* %40, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %150, i8* nonnull align 8 %38, i64 16, i1 false)
  %1011 = add i32 %486, 5
  %1012 = load i32, i32* %21, align 4
  %1013 = icmp ugt i32 %1012, %1011
  br i1 %1013, label %1015, label %1014, !prof !3

1014:                                             ; preds = %1006
  store i8 1, i8* %480, align 8
  br label %1015

1015:                                             ; preds = %1014, %1006
  %1016 = load i32, i32* %47, align 4
  %1017 = icmp ugt i32 %1016, %1011
  br i1 %1017, label %1019, label %1018, !prof !3

1018:                                             ; preds = %1015
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1023

1019:                                             ; preds = %1015
  %1020 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %1021 = zext i32 %1011 to i64
  %1022 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1020, i64 %1021
  br label %1023

1023:                                             ; preds = %1019, %1018
  %1024 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1018 ], [ %1022, %1019 ]
  %1025 = load i8, i8* %56, align 8, !range !6
  %1026 = icmp eq i8 %1025, 0
  br i1 %1026, label %1111, label %1027

1027:                                             ; preds = %1023
  %1028 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 3, i32 1
  %1029 = load i32, i32* %1028, align 4
  %1030 = icmp eq i32 %1029, 0
  br i1 %1030, label %1111, label %1031

1031:                                             ; preds = %1027
  %1032 = load i32, i32* %482, align 4
  %1033 = icmp eq i32 %1032, %1029
  br i1 %1033, label %1034, label %1111, !prof !3

1034:                                             ; preds = %1031
  %1035 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 0, i32 0
  %1036 = load double, double* %1035, align 8
  %1037 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 3, i32 2
  %1038 = zext i32 %1029 to i64
  %1039 = load float*, float** %483, align 8
  %1040 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1037, align 8
  %1041 = add nsw i64 %1038, -1
  %1042 = and i64 %1038, 3
  %1043 = icmp ult i64 %1041, 3
  br i1 %1043, label %1046, label %1044

1044:                                             ; preds = %1034
  %1045 = sub nsw i64 %1038, %1042
  br label %1073

1046:                                             ; preds = %1073, %1034
  %1047 = phi double [ undef, %1034 ], [ %1107, %1073 ]
  %1048 = phi i64 [ 0, %1034 ], [ %1108, %1073 ]
  %1049 = phi double [ %1036, %1034 ], [ %1107, %1073 ]
  %1050 = icmp eq i64 %1042, 0
  br i1 %1050, label %1065, label %1051

1051:                                             ; preds = %1046, %1051
  %1052 = phi i64 [ %1062, %1051 ], [ %1048, %1046 ]
  %1053 = phi double [ %1061, %1051 ], [ %1049, %1046 ]
  %1054 = phi i64 [ %1063, %1051 ], [ %1042, %1046 ]
  %1055 = getelementptr inbounds float, float* %1039, i64 %1052
  %1056 = load float, float* %1055, align 4
  %1057 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1052, i32 0
  %1058 = load double, double* %1057, align 8
  %1059 = fpext float %1056 to double
  %1060 = fmul double %1058, %1059
  %1061 = fadd double %1053, %1060
  %1062 = add nuw nsw i64 %1052, 1
  %1063 = add i64 %1054, -1
  %1064 = icmp eq i64 %1063, 0
  br i1 %1064, label %1065, label %1051, !llvm.loop !73

1065:                                             ; preds = %1051, %1046
  %1066 = phi double [ %1047, %1046 ], [ %1061, %1051 ]
  %1067 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 2
  store i32 0, i32* %1067, align 4
  %1068 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 1
  store i32 0, i32* %1068, align 8
  %1069 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 3, i32 0
  %1070 = load i32, i32* %1069, align 8
  %1071 = icmp slt i32 %1070, 0
  store double %1066, double* %1035, align 8
  br i1 %1071, label %1111, label %1072, !prof !2

1072:                                             ; preds = %1065
  store i32 0, i32* %1028, align 4
  br label %1111

1073:                                             ; preds = %1073, %1044
  %1074 = phi i64 [ 0, %1044 ], [ %1108, %1073 ]
  %1075 = phi double [ %1036, %1044 ], [ %1107, %1073 ]
  %1076 = phi i64 [ %1045, %1044 ], [ %1109, %1073 ]
  %1077 = getelementptr inbounds float, float* %1039, i64 %1074
  %1078 = load float, float* %1077, align 4
  %1079 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1074, i32 0
  %1080 = load double, double* %1079, align 8
  %1081 = fpext float %1078 to double
  %1082 = fmul double %1080, %1081
  %1083 = fadd double %1075, %1082
  %1084 = or i64 %1074, 1
  %1085 = getelementptr inbounds float, float* %1039, i64 %1084
  %1086 = load float, float* %1085, align 4
  %1087 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1084, i32 0
  %1088 = load double, double* %1087, align 8
  %1089 = fpext float %1086 to double
  %1090 = fmul double %1088, %1089
  %1091 = fadd double %1083, %1090
  %1092 = or i64 %1074, 2
  %1093 = getelementptr inbounds float, float* %1039, i64 %1092
  %1094 = load float, float* %1093, align 4
  %1095 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1092, i32 0
  %1096 = load double, double* %1095, align 8
  %1097 = fpext float %1094 to double
  %1098 = fmul double %1096, %1097
  %1099 = fadd double %1091, %1098
  %1100 = or i64 %1074, 3
  %1101 = getelementptr inbounds float, float* %1039, i64 %1100
  %1102 = load float, float* %1101, align 4
  %1103 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1100, i32 0
  %1104 = load double, double* %1103, align 8
  %1105 = fpext float %1102 to double
  %1106 = fmul double %1104, %1105
  %1107 = fadd double %1099, %1106
  %1108 = add nuw nsw i64 %1074, 4
  %1109 = add i64 %1076, -4
  %1110 = icmp eq i64 %1109, 0
  br i1 %1110, label %1046, label %1073

1111:                                             ; preds = %1023, %1027, %1031, %1065, %1072
  %1112 = add i32 %486, 6
  %1113 = load i32, i32* %21, align 4
  %1114 = icmp ugt i32 %1113, %1112
  br i1 %1114, label %1116, label %1115, !prof !3

1115:                                             ; preds = %1111
  store i8 1, i8* %480, align 8
  br label %1116

1116:                                             ; preds = %1115, %1111
  %1117 = load i32, i32* %47, align 4
  %1118 = icmp ugt i32 %1117, %1112
  br i1 %1118, label %1120, label %1119, !prof !3

1119:                                             ; preds = %1116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1124

1120:                                             ; preds = %1116
  %1121 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %1122 = zext i32 %1112 to i64
  %1123 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1121, i64 %1122
  br label %1124

1124:                                             ; preds = %1120, %1119
  %1125 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1119 ], [ %1123, %1120 ]
  %1126 = load i8, i8* %56, align 8, !range !6
  %1127 = icmp eq i8 %1126, 0
  br i1 %1127, label %1212, label %1128

1128:                                             ; preds = %1124
  %1129 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 3, i32 1
  %1130 = load i32, i32* %1129, align 4
  %1131 = icmp eq i32 %1130, 0
  br i1 %1131, label %1212, label %1132

1132:                                             ; preds = %1128
  %1133 = load i32, i32* %482, align 4
  %1134 = icmp eq i32 %1133, %1130
  br i1 %1134, label %1135, label %1212, !prof !3

1135:                                             ; preds = %1132
  %1136 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 0, i32 0
  %1137 = load double, double* %1136, align 8
  %1138 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 3, i32 2
  %1139 = zext i32 %1130 to i64
  %1140 = load float*, float** %483, align 8
  %1141 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1138, align 8
  %1142 = add nsw i64 %1139, -1
  %1143 = and i64 %1139, 3
  %1144 = icmp ult i64 %1142, 3
  br i1 %1144, label %1147, label %1145

1145:                                             ; preds = %1135
  %1146 = sub nsw i64 %1139, %1143
  br label %1174

1147:                                             ; preds = %1174, %1135
  %1148 = phi double [ undef, %1135 ], [ %1208, %1174 ]
  %1149 = phi i64 [ 0, %1135 ], [ %1209, %1174 ]
  %1150 = phi double [ %1137, %1135 ], [ %1208, %1174 ]
  %1151 = icmp eq i64 %1143, 0
  br i1 %1151, label %1166, label %1152

1152:                                             ; preds = %1147, %1152
  %1153 = phi i64 [ %1163, %1152 ], [ %1149, %1147 ]
  %1154 = phi double [ %1162, %1152 ], [ %1150, %1147 ]
  %1155 = phi i64 [ %1164, %1152 ], [ %1143, %1147 ]
  %1156 = getelementptr inbounds float, float* %1140, i64 %1153
  %1157 = load float, float* %1156, align 4
  %1158 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1153, i32 0
  %1159 = load double, double* %1158, align 8
  %1160 = fpext float %1157 to double
  %1161 = fmul double %1159, %1160
  %1162 = fadd double %1154, %1161
  %1163 = add nuw nsw i64 %1153, 1
  %1164 = add i64 %1155, -1
  %1165 = icmp eq i64 %1164, 0
  br i1 %1165, label %1166, label %1152, !llvm.loop !74

1166:                                             ; preds = %1152, %1147
  %1167 = phi double [ %1148, %1147 ], [ %1162, %1152 ]
  %1168 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 2
  store i32 0, i32* %1168, align 4
  %1169 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 1
  store i32 0, i32* %1169, align 8
  %1170 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 3, i32 0
  %1171 = load i32, i32* %1170, align 8
  %1172 = icmp slt i32 %1171, 0
  store double %1167, double* %1136, align 8
  br i1 %1172, label %1212, label %1173, !prof !2

1173:                                             ; preds = %1166
  store i32 0, i32* %1129, align 4
  br label %1212

1174:                                             ; preds = %1174, %1145
  %1175 = phi i64 [ 0, %1145 ], [ %1209, %1174 ]
  %1176 = phi double [ %1137, %1145 ], [ %1208, %1174 ]
  %1177 = phi i64 [ %1146, %1145 ], [ %1210, %1174 ]
  %1178 = getelementptr inbounds float, float* %1140, i64 %1175
  %1179 = load float, float* %1178, align 4
  %1180 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1175, i32 0
  %1181 = load double, double* %1180, align 8
  %1182 = fpext float %1179 to double
  %1183 = fmul double %1181, %1182
  %1184 = fadd double %1176, %1183
  %1185 = or i64 %1175, 1
  %1186 = getelementptr inbounds float, float* %1140, i64 %1185
  %1187 = load float, float* %1186, align 4
  %1188 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1185, i32 0
  %1189 = load double, double* %1188, align 8
  %1190 = fpext float %1187 to double
  %1191 = fmul double %1189, %1190
  %1192 = fadd double %1184, %1191
  %1193 = or i64 %1175, 2
  %1194 = getelementptr inbounds float, float* %1140, i64 %1193
  %1195 = load float, float* %1194, align 4
  %1196 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1193, i32 0
  %1197 = load double, double* %1196, align 8
  %1198 = fpext float %1195 to double
  %1199 = fmul double %1197, %1198
  %1200 = fadd double %1192, %1199
  %1201 = or i64 %1175, 3
  %1202 = getelementptr inbounds float, float* %1140, i64 %1201
  %1203 = load float, float* %1202, align 4
  %1204 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1201, i32 0
  %1205 = load double, double* %1204, align 8
  %1206 = fpext float %1203 to double
  %1207 = fmul double %1205, %1206
  %1208 = fadd double %1200, %1207
  %1209 = add nuw nsw i64 %1175, 4
  %1210 = add i64 %1177, -4
  %1211 = icmp eq i64 %1210, 0
  br i1 %1211, label %1147, label %1174

1212:                                             ; preds = %1124, %1128, %1132, %1166, %1173
  %1213 = load double, double* %151, align 16
  %1214 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 0, i32 0
  %1215 = load double, double* %1214, align 8
  %1216 = fadd double %1213, %1215
  store double %1216, double* %151, align 16
  %1217 = load double, double* %152, align 8
  %1218 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 0, i32 0
  %1219 = load double, double* %1218, align 8
  %1220 = fadd double %1217, %1219
  store double %1220, double* %152, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %367, i8* nonnull align 16 %150, i64 16, i1 false)
  %1221 = add i32 %486, 7
  %1222 = load i32, i32* %21, align 4
  %1223 = icmp ugt i32 %1222, %1221
  br i1 %1223, label %1225, label %1224, !prof !3

1224:                                             ; preds = %1212
  store i8 1, i8* %480, align 8
  br label %1225

1225:                                             ; preds = %1224, %1212
  %1226 = load i32, i32* %47, align 4
  %1227 = icmp ugt i32 %1226, %1221
  br i1 %1227, label %1229, label %1228, !prof !3

1228:                                             ; preds = %1225
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1233

1229:                                             ; preds = %1225
  %1230 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %1231 = zext i32 %1221 to i64
  %1232 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1230, i64 %1231
  br label %1233

1233:                                             ; preds = %1229, %1228
  %1234 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1228 ], [ %1232, %1229 ]
  %1235 = load i8, i8* %56, align 8, !range !6
  %1236 = icmp eq i8 %1235, 0
  br i1 %1236, label %1321, label %1237

1237:                                             ; preds = %1233
  %1238 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 3, i32 1
  %1239 = load i32, i32* %1238, align 4
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1321, label %1241

1241:                                             ; preds = %1237
  %1242 = load i32, i32* %482, align 4
  %1243 = icmp eq i32 %1242, %1239
  br i1 %1243, label %1244, label %1321, !prof !3

1244:                                             ; preds = %1241
  %1245 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 0, i32 0
  %1246 = load double, double* %1245, align 8
  %1247 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 3, i32 2
  %1248 = zext i32 %1239 to i64
  %1249 = load float*, float** %483, align 8
  %1250 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1247, align 8
  %1251 = add nsw i64 %1248, -1
  %1252 = and i64 %1248, 3
  %1253 = icmp ult i64 %1251, 3
  br i1 %1253, label %1256, label %1254

1254:                                             ; preds = %1244
  %1255 = sub nsw i64 %1248, %1252
  br label %1283

1256:                                             ; preds = %1283, %1244
  %1257 = phi double [ undef, %1244 ], [ %1317, %1283 ]
  %1258 = phi i64 [ 0, %1244 ], [ %1318, %1283 ]
  %1259 = phi double [ %1246, %1244 ], [ %1317, %1283 ]
  %1260 = icmp eq i64 %1252, 0
  br i1 %1260, label %1275, label %1261

1261:                                             ; preds = %1256, %1261
  %1262 = phi i64 [ %1272, %1261 ], [ %1258, %1256 ]
  %1263 = phi double [ %1271, %1261 ], [ %1259, %1256 ]
  %1264 = phi i64 [ %1273, %1261 ], [ %1252, %1256 ]
  %1265 = getelementptr inbounds float, float* %1249, i64 %1262
  %1266 = load float, float* %1265, align 4
  %1267 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1262, i32 0
  %1268 = load double, double* %1267, align 8
  %1269 = fpext float %1266 to double
  %1270 = fmul double %1268, %1269
  %1271 = fadd double %1263, %1270
  %1272 = add nuw nsw i64 %1262, 1
  %1273 = add i64 %1264, -1
  %1274 = icmp eq i64 %1273, 0
  br i1 %1274, label %1275, label %1261, !llvm.loop !75

1275:                                             ; preds = %1261, %1256
  %1276 = phi double [ %1257, %1256 ], [ %1271, %1261 ]
  %1277 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 2
  store i32 0, i32* %1277, align 4
  %1278 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 1
  store i32 0, i32* %1278, align 8
  %1279 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 3, i32 0
  %1280 = load i32, i32* %1279, align 8
  %1281 = icmp slt i32 %1280, 0
  store double %1276, double* %1245, align 8
  br i1 %1281, label %1321, label %1282, !prof !2

1282:                                             ; preds = %1275
  store i32 0, i32* %1238, align 4
  br label %1321

1283:                                             ; preds = %1283, %1254
  %1284 = phi i64 [ 0, %1254 ], [ %1318, %1283 ]
  %1285 = phi double [ %1246, %1254 ], [ %1317, %1283 ]
  %1286 = phi i64 [ %1255, %1254 ], [ %1319, %1283 ]
  %1287 = getelementptr inbounds float, float* %1249, i64 %1284
  %1288 = load float, float* %1287, align 4
  %1289 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1284, i32 0
  %1290 = load double, double* %1289, align 8
  %1291 = fpext float %1288 to double
  %1292 = fmul double %1290, %1291
  %1293 = fadd double %1285, %1292
  %1294 = or i64 %1284, 1
  %1295 = getelementptr inbounds float, float* %1249, i64 %1294
  %1296 = load float, float* %1295, align 4
  %1297 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1294, i32 0
  %1298 = load double, double* %1297, align 8
  %1299 = fpext float %1296 to double
  %1300 = fmul double %1298, %1299
  %1301 = fadd double %1293, %1300
  %1302 = or i64 %1284, 2
  %1303 = getelementptr inbounds float, float* %1249, i64 %1302
  %1304 = load float, float* %1303, align 4
  %1305 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1302, i32 0
  %1306 = load double, double* %1305, align 8
  %1307 = fpext float %1304 to double
  %1308 = fmul double %1306, %1307
  %1309 = fadd double %1301, %1308
  %1310 = or i64 %1284, 3
  %1311 = getelementptr inbounds float, float* %1249, i64 %1310
  %1312 = load float, float* %1311, align 4
  %1313 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1310, i32 0
  %1314 = load double, double* %1313, align 8
  %1315 = fpext float %1312 to double
  %1316 = fmul double %1314, %1315
  %1317 = fadd double %1309, %1316
  %1318 = add nuw nsw i64 %1284, 4
  %1319 = add i64 %1286, -4
  %1320 = icmp eq i64 %1319, 0
  br i1 %1320, label %1256, label %1283

1321:                                             ; preds = %1233, %1237, %1241, %1275, %1282
  %1322 = load double, double* %368, align 8
  %1323 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 0, i32 0
  %1324 = load double, double* %1323, align 8
  %1325 = fadd double %1322, %1324
  store double %1325, double* %368, align 8
  %1326 = add i32 %485, 8
  %1327 = load i32, i32* %21, align 4
  %1328 = icmp ugt i32 %1326, %1327
  br i1 %1328, label %1329, label %484

1329:                                             ; preds = %1321, %472
  %1330 = phi i32 [ 4, %472 ], [ %485, %1321 ]
  %1331 = phi i32 [ %477, %472 ], [ %1327, %1321 ]
  %1332 = icmp ult i32 %1330, %1331
  br i1 %1332, label %1333, label %1437

1333:                                             ; preds = %1329
  %1334 = load i32, i32* %47, align 4
  %1335 = icmp ugt i32 %1334, %1330
  br i1 %1335, label %1337, label %1336, !prof !3

1336:                                             ; preds = %1333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1342

1337:                                             ; preds = %1333
  %1338 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1339 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %1338, align 8
  %1340 = zext i32 %1330 to i64
  %1341 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1339, i64 %1340
  br label %1342

1342:                                             ; preds = %1337, %1336
  %1343 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1336 ], [ %1341, %1337 ]
  %1344 = load i8, i8* %56, align 8, !range !6
  %1345 = icmp eq i8 %1344, 0
  br i1 %1345, label %1432, label %1346

1346:                                             ; preds = %1342
  %1347 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 3, i32 1
  %1348 = load i32, i32* %1347, align 4
  %1349 = icmp eq i32 %1348, 0
  br i1 %1349, label %1432, label %1350

1350:                                             ; preds = %1346
  %1351 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %1352 = load i32, i32* %1351, align 4
  %1353 = icmp eq i32 %1352, %1348
  br i1 %1353, label %1354, label %1432, !prof !3

1354:                                             ; preds = %1350
  %1355 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 0, i32 0
  %1356 = load double, double* %1355, align 8
  %1357 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %1358 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 3, i32 2
  %1359 = zext i32 %1348 to i64
  %1360 = load float*, float** %1357, align 8
  %1361 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1358, align 8
  %1362 = add nsw i64 %1359, -1
  %1363 = and i64 %1359, 3
  %1364 = icmp ult i64 %1362, 3
  br i1 %1364, label %1367, label %1365

1365:                                             ; preds = %1354
  %1366 = sub nsw i64 %1359, %1363
  br label %1394

1367:                                             ; preds = %1394, %1354
  %1368 = phi double [ undef, %1354 ], [ %1428, %1394 ]
  %1369 = phi i64 [ 0, %1354 ], [ %1429, %1394 ]
  %1370 = phi double [ %1356, %1354 ], [ %1428, %1394 ]
  %1371 = icmp eq i64 %1363, 0
  br i1 %1371, label %1386, label %1372

1372:                                             ; preds = %1367, %1372
  %1373 = phi i64 [ %1383, %1372 ], [ %1369, %1367 ]
  %1374 = phi double [ %1382, %1372 ], [ %1370, %1367 ]
  %1375 = phi i64 [ %1384, %1372 ], [ %1363, %1367 ]
  %1376 = getelementptr inbounds float, float* %1360, i64 %1373
  %1377 = load float, float* %1376, align 4
  %1378 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1373, i32 0
  %1379 = load double, double* %1378, align 8
  %1380 = fpext float %1377 to double
  %1381 = fmul double %1379, %1380
  %1382 = fadd double %1374, %1381
  %1383 = add nuw nsw i64 %1373, 1
  %1384 = add i64 %1375, -1
  %1385 = icmp eq i64 %1384, 0
  br i1 %1385, label %1386, label %1372, !llvm.loop !76

1386:                                             ; preds = %1372, %1367
  %1387 = phi double [ %1368, %1367 ], [ %1382, %1372 ]
  %1388 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 2
  store i32 0, i32* %1388, align 4
  %1389 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 1
  store i32 0, i32* %1389, align 8
  %1390 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 3, i32 0
  %1391 = load i32, i32* %1390, align 8
  %1392 = icmp slt i32 %1391, 0
  store double %1387, double* %1355, align 8
  br i1 %1392, label %1432, label %1393, !prof !2

1393:                                             ; preds = %1386
  store i32 0, i32* %1347, align 4
  br label %1432

1394:                                             ; preds = %1394, %1365
  %1395 = phi i64 [ 0, %1365 ], [ %1429, %1394 ]
  %1396 = phi double [ %1356, %1365 ], [ %1428, %1394 ]
  %1397 = phi i64 [ %1366, %1365 ], [ %1430, %1394 ]
  %1398 = getelementptr inbounds float, float* %1360, i64 %1395
  %1399 = load float, float* %1398, align 4
  %1400 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1395, i32 0
  %1401 = load double, double* %1400, align 8
  %1402 = fpext float %1399 to double
  %1403 = fmul double %1401, %1402
  %1404 = fadd double %1396, %1403
  %1405 = or i64 %1395, 1
  %1406 = getelementptr inbounds float, float* %1360, i64 %1405
  %1407 = load float, float* %1406, align 4
  %1408 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1405, i32 0
  %1409 = load double, double* %1408, align 8
  %1410 = fpext float %1407 to double
  %1411 = fmul double %1409, %1410
  %1412 = fadd double %1404, %1411
  %1413 = or i64 %1395, 2
  %1414 = getelementptr inbounds float, float* %1360, i64 %1413
  %1415 = load float, float* %1414, align 4
  %1416 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1413, i32 0
  %1417 = load double, double* %1416, align 8
  %1418 = fpext float %1415 to double
  %1419 = fmul double %1417, %1418
  %1420 = fadd double %1412, %1419
  %1421 = or i64 %1395, 3
  %1422 = getelementptr inbounds float, float* %1360, i64 %1421
  %1423 = load float, float* %1422, align 4
  %1424 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1421, i32 0
  %1425 = load double, double* %1424, align 8
  %1426 = fpext float %1423 to double
  %1427 = fmul double %1425, %1426
  %1428 = fadd double %1420, %1427
  %1429 = add nuw nsw i64 %1395, 4
  %1430 = add i64 %1397, -4
  %1431 = icmp eq i64 %1430, 0
  br i1 %1431, label %1367, label %1394

1432:                                             ; preds = %1342, %1346, %1350, %1386, %1393
  %1433 = load double, double* %369, align 8
  %1434 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 0, i32 0
  %1435 = load double, double* %1434, align 8
  %1436 = fadd double %1433, %1435
  store double %1436, double* %369, align 8
  br label %1437

1437:                                             ; preds = %1432, %1329
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %367) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  br label %2394

1438:                                             ; preds = %28, %2390
  %1439 = phi i32 [ %23, %28 ], [ %2392, %2390 ]
  %1440 = phi i32 [ 8, %28 ], [ %2391, %2390 ]
  %1441 = phi i32 [ 0, %28 ], [ %1440, %2390 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %30, i64 16, i1 false)
  %1442 = icmp ugt i32 %1439, %1441
  br i1 %1442, label %1444, label %1443, !prof !3

1443:                                             ; preds = %1438
  store i8 1, i8* %31, align 8
  br label %1444

1444:                                             ; preds = %1443, %1438
  %1445 = load i32, i32* %32, align 4
  %1446 = icmp ugt i32 %1445, %1441
  br i1 %1446, label %1448, label %1447, !prof !3

1447:                                             ; preds = %1444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1452

1448:                                             ; preds = %1444
  %1449 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1450 = zext i32 %1441 to i64
  %1451 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1449, i64 %1450
  br label %1452

1452:                                             ; preds = %1448, %1447
  %1453 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1447 ], [ %1451, %1448 ]
  %1454 = load i8, i8* %34, align 8, !range !6
  %1455 = icmp eq i8 %1454, 0
  br i1 %1455, label %1540, label %1456

1456:                                             ; preds = %1452
  %1457 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 3, i32 1
  %1458 = load i32, i32* %1457, align 4
  %1459 = icmp eq i32 %1458, 0
  br i1 %1459, label %1540, label %1460

1460:                                             ; preds = %1456
  %1461 = load i32, i32* %35, align 4
  %1462 = icmp eq i32 %1461, %1458
  br i1 %1462, label %1463, label %1540, !prof !3

1463:                                             ; preds = %1460
  %1464 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 0, i32 0
  %1465 = load double, double* %1464, align 8
  %1466 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 3, i32 2
  %1467 = zext i32 %1458 to i64
  %1468 = load float*, float** %36, align 8
  %1469 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1466, align 8
  %1470 = add nsw i64 %1467, -1
  %1471 = and i64 %1467, 3
  %1472 = icmp ult i64 %1470, 3
  br i1 %1472, label %1475, label %1473

1473:                                             ; preds = %1463
  %1474 = sub nsw i64 %1467, %1471
  br label %1502

1475:                                             ; preds = %1502, %1463
  %1476 = phi double [ undef, %1463 ], [ %1536, %1502 ]
  %1477 = phi i64 [ 0, %1463 ], [ %1537, %1502 ]
  %1478 = phi double [ %1465, %1463 ], [ %1536, %1502 ]
  %1479 = icmp eq i64 %1471, 0
  br i1 %1479, label %1494, label %1480

1480:                                             ; preds = %1475, %1480
  %1481 = phi i64 [ %1491, %1480 ], [ %1477, %1475 ]
  %1482 = phi double [ %1490, %1480 ], [ %1478, %1475 ]
  %1483 = phi i64 [ %1492, %1480 ], [ %1471, %1475 ]
  %1484 = getelementptr inbounds float, float* %1468, i64 %1481
  %1485 = load float, float* %1484, align 4
  %1486 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1481, i32 0
  %1487 = load double, double* %1486, align 8
  %1488 = fpext float %1485 to double
  %1489 = fmul double %1487, %1488
  %1490 = fadd double %1482, %1489
  %1491 = add nuw nsw i64 %1481, 1
  %1492 = add i64 %1483, -1
  %1493 = icmp eq i64 %1492, 0
  br i1 %1493, label %1494, label %1480, !llvm.loop !77

1494:                                             ; preds = %1480, %1475
  %1495 = phi double [ %1476, %1475 ], [ %1490, %1480 ]
  %1496 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 2
  store i32 0, i32* %1496, align 4
  %1497 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 1
  store i32 0, i32* %1497, align 8
  %1498 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 3, i32 0
  %1499 = load i32, i32* %1498, align 8
  %1500 = icmp slt i32 %1499, 0
  store double %1495, double* %1464, align 8
  br i1 %1500, label %1540, label %1501, !prof !2

1501:                                             ; preds = %1494
  store i32 0, i32* %1457, align 4
  br label %1540

1502:                                             ; preds = %1502, %1473
  %1503 = phi i64 [ 0, %1473 ], [ %1537, %1502 ]
  %1504 = phi double [ %1465, %1473 ], [ %1536, %1502 ]
  %1505 = phi i64 [ %1474, %1473 ], [ %1538, %1502 ]
  %1506 = getelementptr inbounds float, float* %1468, i64 %1503
  %1507 = load float, float* %1506, align 4
  %1508 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1503, i32 0
  %1509 = load double, double* %1508, align 8
  %1510 = fpext float %1507 to double
  %1511 = fmul double %1509, %1510
  %1512 = fadd double %1504, %1511
  %1513 = or i64 %1503, 1
  %1514 = getelementptr inbounds float, float* %1468, i64 %1513
  %1515 = load float, float* %1514, align 4
  %1516 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1513, i32 0
  %1517 = load double, double* %1516, align 8
  %1518 = fpext float %1515 to double
  %1519 = fmul double %1517, %1518
  %1520 = fadd double %1512, %1519
  %1521 = or i64 %1503, 2
  %1522 = getelementptr inbounds float, float* %1468, i64 %1521
  %1523 = load float, float* %1522, align 4
  %1524 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1521, i32 0
  %1525 = load double, double* %1524, align 8
  %1526 = fpext float %1523 to double
  %1527 = fmul double %1525, %1526
  %1528 = fadd double %1520, %1527
  %1529 = or i64 %1503, 3
  %1530 = getelementptr inbounds float, float* %1468, i64 %1529
  %1531 = load float, float* %1530, align 4
  %1532 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1529, i32 0
  %1533 = load double, double* %1532, align 8
  %1534 = fpext float %1531 to double
  %1535 = fmul double %1533, %1534
  %1536 = fadd double %1528, %1535
  %1537 = add nuw nsw i64 %1503, 4
  %1538 = add i64 %1505, -4
  %1539 = icmp eq i64 %1538, 0
  br i1 %1539, label %1475, label %1502

1540:                                             ; preds = %1452, %1456, %1460, %1494, %1501
  %1541 = load double, double* %12, align 8
  %1542 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 0, i32 0
  %1543 = load double, double* %1542, align 8
  %1544 = fadd double %1541, %1543
  store double %1544, double* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %10, i64 16, i1 false)
  %1545 = or i32 %1441, 1
  %1546 = load i32, i32* %21, align 4
  %1547 = icmp ugt i32 %1546, %1545
  br i1 %1547, label %1549, label %1548, !prof !3

1548:                                             ; preds = %1540
  store i8 1, i8* %31, align 8
  br label %1549

1549:                                             ; preds = %1548, %1540
  %1550 = load i32, i32* %32, align 4
  %1551 = icmp ugt i32 %1550, %1545
  br i1 %1551, label %1553, label %1552, !prof !3

1552:                                             ; preds = %1549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1557

1553:                                             ; preds = %1549
  %1554 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1555 = zext i32 %1545 to i64
  %1556 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1554, i64 %1555
  br label %1557

1557:                                             ; preds = %1553, %1552
  %1558 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1552 ], [ %1556, %1553 ]
  %1559 = load i8, i8* %34, align 8, !range !6
  %1560 = icmp eq i8 %1559, 0
  br i1 %1560, label %1645, label %1561

1561:                                             ; preds = %1557
  %1562 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 3, i32 1
  %1563 = load i32, i32* %1562, align 4
  %1564 = icmp eq i32 %1563, 0
  br i1 %1564, label %1645, label %1565

1565:                                             ; preds = %1561
  %1566 = load i32, i32* %35, align 4
  %1567 = icmp eq i32 %1566, %1563
  br i1 %1567, label %1568, label %1645, !prof !3

1568:                                             ; preds = %1565
  %1569 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 0, i32 0
  %1570 = load double, double* %1569, align 8
  %1571 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 3, i32 2
  %1572 = zext i32 %1563 to i64
  %1573 = load float*, float** %36, align 8
  %1574 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1571, align 8
  %1575 = add nsw i64 %1572, -1
  %1576 = and i64 %1572, 3
  %1577 = icmp ult i64 %1575, 3
  br i1 %1577, label %1580, label %1578

1578:                                             ; preds = %1568
  %1579 = sub nsw i64 %1572, %1576
  br label %1607

1580:                                             ; preds = %1607, %1568
  %1581 = phi double [ undef, %1568 ], [ %1641, %1607 ]
  %1582 = phi i64 [ 0, %1568 ], [ %1642, %1607 ]
  %1583 = phi double [ %1570, %1568 ], [ %1641, %1607 ]
  %1584 = icmp eq i64 %1576, 0
  br i1 %1584, label %1599, label %1585

1585:                                             ; preds = %1580, %1585
  %1586 = phi i64 [ %1596, %1585 ], [ %1582, %1580 ]
  %1587 = phi double [ %1595, %1585 ], [ %1583, %1580 ]
  %1588 = phi i64 [ %1597, %1585 ], [ %1576, %1580 ]
  %1589 = getelementptr inbounds float, float* %1573, i64 %1586
  %1590 = load float, float* %1589, align 4
  %1591 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1586, i32 0
  %1592 = load double, double* %1591, align 8
  %1593 = fpext float %1590 to double
  %1594 = fmul double %1592, %1593
  %1595 = fadd double %1587, %1594
  %1596 = add nuw nsw i64 %1586, 1
  %1597 = add i64 %1588, -1
  %1598 = icmp eq i64 %1597, 0
  br i1 %1598, label %1599, label %1585, !llvm.loop !78

1599:                                             ; preds = %1585, %1580
  %1600 = phi double [ %1581, %1580 ], [ %1595, %1585 ]
  %1601 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 2
  store i32 0, i32* %1601, align 4
  %1602 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 1
  store i32 0, i32* %1602, align 8
  %1603 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 3, i32 0
  %1604 = load i32, i32* %1603, align 8
  %1605 = icmp slt i32 %1604, 0
  store double %1600, double* %1569, align 8
  br i1 %1605, label %1645, label %1606, !prof !2

1606:                                             ; preds = %1599
  store i32 0, i32* %1562, align 4
  br label %1645

1607:                                             ; preds = %1607, %1578
  %1608 = phi i64 [ 0, %1578 ], [ %1642, %1607 ]
  %1609 = phi double [ %1570, %1578 ], [ %1641, %1607 ]
  %1610 = phi i64 [ %1579, %1578 ], [ %1643, %1607 ]
  %1611 = getelementptr inbounds float, float* %1573, i64 %1608
  %1612 = load float, float* %1611, align 4
  %1613 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1608, i32 0
  %1614 = load double, double* %1613, align 8
  %1615 = fpext float %1612 to double
  %1616 = fmul double %1614, %1615
  %1617 = fadd double %1609, %1616
  %1618 = or i64 %1608, 1
  %1619 = getelementptr inbounds float, float* %1573, i64 %1618
  %1620 = load float, float* %1619, align 4
  %1621 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1618, i32 0
  %1622 = load double, double* %1621, align 8
  %1623 = fpext float %1620 to double
  %1624 = fmul double %1622, %1623
  %1625 = fadd double %1617, %1624
  %1626 = or i64 %1608, 2
  %1627 = getelementptr inbounds float, float* %1573, i64 %1626
  %1628 = load float, float* %1627, align 4
  %1629 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1626, i32 0
  %1630 = load double, double* %1629, align 8
  %1631 = fpext float %1628 to double
  %1632 = fmul double %1630, %1631
  %1633 = fadd double %1625, %1632
  %1634 = or i64 %1608, 3
  %1635 = getelementptr inbounds float, float* %1573, i64 %1634
  %1636 = load float, float* %1635, align 4
  %1637 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1634, i32 0
  %1638 = load double, double* %1637, align 8
  %1639 = fpext float %1636 to double
  %1640 = fmul double %1638, %1639
  %1641 = fadd double %1633, %1640
  %1642 = add nuw nsw i64 %1608, 4
  %1643 = add i64 %1610, -4
  %1644 = icmp eq i64 %1643, 0
  br i1 %1644, label %1580, label %1607

1645:                                             ; preds = %1557, %1561, %1565, %1599, %1606
  %1646 = or i32 %1441, 2
  %1647 = load i32, i32* %21, align 4
  %1648 = icmp ugt i32 %1647, %1646
  br i1 %1648, label %1650, label %1649, !prof !3

1649:                                             ; preds = %1645
  store i8 1, i8* %31, align 8
  br label %1650

1650:                                             ; preds = %1649, %1645
  %1651 = load i32, i32* %32, align 4
  %1652 = icmp ugt i32 %1651, %1646
  br i1 %1652, label %1654, label %1653, !prof !3

1653:                                             ; preds = %1650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1658

1654:                                             ; preds = %1650
  %1655 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1656 = zext i32 %1646 to i64
  %1657 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1655, i64 %1656
  br label %1658

1658:                                             ; preds = %1654, %1653
  %1659 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1653 ], [ %1657, %1654 ]
  %1660 = load i8, i8* %34, align 8, !range !6
  %1661 = icmp eq i8 %1660, 0
  br i1 %1661, label %1746, label %1662

1662:                                             ; preds = %1658
  %1663 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 3, i32 1
  %1664 = load i32, i32* %1663, align 4
  %1665 = icmp eq i32 %1664, 0
  br i1 %1665, label %1746, label %1666

1666:                                             ; preds = %1662
  %1667 = load i32, i32* %35, align 4
  %1668 = icmp eq i32 %1667, %1664
  br i1 %1668, label %1669, label %1746, !prof !3

1669:                                             ; preds = %1666
  %1670 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 0, i32 0
  %1671 = load double, double* %1670, align 8
  %1672 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 3, i32 2
  %1673 = zext i32 %1664 to i64
  %1674 = load float*, float** %36, align 8
  %1675 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1672, align 8
  %1676 = add nsw i64 %1673, -1
  %1677 = and i64 %1673, 3
  %1678 = icmp ult i64 %1676, 3
  br i1 %1678, label %1681, label %1679

1679:                                             ; preds = %1669
  %1680 = sub nsw i64 %1673, %1677
  br label %1708

1681:                                             ; preds = %1708, %1669
  %1682 = phi double [ undef, %1669 ], [ %1742, %1708 ]
  %1683 = phi i64 [ 0, %1669 ], [ %1743, %1708 ]
  %1684 = phi double [ %1671, %1669 ], [ %1742, %1708 ]
  %1685 = icmp eq i64 %1677, 0
  br i1 %1685, label %1700, label %1686

1686:                                             ; preds = %1681, %1686
  %1687 = phi i64 [ %1697, %1686 ], [ %1683, %1681 ]
  %1688 = phi double [ %1696, %1686 ], [ %1684, %1681 ]
  %1689 = phi i64 [ %1698, %1686 ], [ %1677, %1681 ]
  %1690 = getelementptr inbounds float, float* %1674, i64 %1687
  %1691 = load float, float* %1690, align 4
  %1692 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1687, i32 0
  %1693 = load double, double* %1692, align 8
  %1694 = fpext float %1691 to double
  %1695 = fmul double %1693, %1694
  %1696 = fadd double %1688, %1695
  %1697 = add nuw nsw i64 %1687, 1
  %1698 = add i64 %1689, -1
  %1699 = icmp eq i64 %1698, 0
  br i1 %1699, label %1700, label %1686, !llvm.loop !79

1700:                                             ; preds = %1686, %1681
  %1701 = phi double [ %1682, %1681 ], [ %1696, %1686 ]
  %1702 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 2
  store i32 0, i32* %1702, align 4
  %1703 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 1
  store i32 0, i32* %1703, align 8
  %1704 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 3, i32 0
  %1705 = load i32, i32* %1704, align 8
  %1706 = icmp slt i32 %1705, 0
  store double %1701, double* %1670, align 8
  br i1 %1706, label %1746, label %1707, !prof !2

1707:                                             ; preds = %1700
  store i32 0, i32* %1663, align 4
  br label %1746

1708:                                             ; preds = %1708, %1679
  %1709 = phi i64 [ 0, %1679 ], [ %1743, %1708 ]
  %1710 = phi double [ %1671, %1679 ], [ %1742, %1708 ]
  %1711 = phi i64 [ %1680, %1679 ], [ %1744, %1708 ]
  %1712 = getelementptr inbounds float, float* %1674, i64 %1709
  %1713 = load float, float* %1712, align 4
  %1714 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1709, i32 0
  %1715 = load double, double* %1714, align 8
  %1716 = fpext float %1713 to double
  %1717 = fmul double %1715, %1716
  %1718 = fadd double %1710, %1717
  %1719 = or i64 %1709, 1
  %1720 = getelementptr inbounds float, float* %1674, i64 %1719
  %1721 = load float, float* %1720, align 4
  %1722 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1719, i32 0
  %1723 = load double, double* %1722, align 8
  %1724 = fpext float %1721 to double
  %1725 = fmul double %1723, %1724
  %1726 = fadd double %1718, %1725
  %1727 = or i64 %1709, 2
  %1728 = getelementptr inbounds float, float* %1674, i64 %1727
  %1729 = load float, float* %1728, align 4
  %1730 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1727, i32 0
  %1731 = load double, double* %1730, align 8
  %1732 = fpext float %1729 to double
  %1733 = fmul double %1731, %1732
  %1734 = fadd double %1726, %1733
  %1735 = or i64 %1709, 3
  %1736 = getelementptr inbounds float, float* %1674, i64 %1735
  %1737 = load float, float* %1736, align 4
  %1738 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1735, i32 0
  %1739 = load double, double* %1738, align 8
  %1740 = fpext float %1737 to double
  %1741 = fmul double %1739, %1740
  %1742 = fadd double %1734, %1741
  %1743 = add nuw nsw i64 %1709, 4
  %1744 = add i64 %1711, -4
  %1745 = icmp eq i64 %1744, 0
  br i1 %1745, label %1681, label %1708

1746:                                             ; preds = %1658, %1662, %1666, %1700, %1707
  %1747 = load double, double* %15, align 8
  %1748 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 0, i32 0
  %1749 = load double, double* %1748, align 8
  %1750 = fadd double %1747, %1749
  store double %1750, double* %15, align 8
  %1751 = load double, double* %16, align 8
  %1752 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 0, i32 0
  %1753 = load double, double* %1752, align 8
  %1754 = fadd double %1751, %1753
  store double %1754, double* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %13, i64 16, i1 false)
  %1755 = or i32 %1441, 3
  %1756 = load i32, i32* %21, align 4
  %1757 = icmp ugt i32 %1756, %1755
  br i1 %1757, label %1759, label %1758, !prof !3

1758:                                             ; preds = %1746
  store i8 1, i8* %31, align 8
  br label %1759

1759:                                             ; preds = %1758, %1746
  %1760 = load i32, i32* %32, align 4
  %1761 = icmp ugt i32 %1760, %1755
  br i1 %1761, label %1763, label %1762, !prof !3

1762:                                             ; preds = %1759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1767

1763:                                             ; preds = %1759
  %1764 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1765 = zext i32 %1755 to i64
  %1766 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1764, i64 %1765
  br label %1767

1767:                                             ; preds = %1763, %1762
  %1768 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1762 ], [ %1766, %1763 ]
  %1769 = load i8, i8* %34, align 8, !range !6
  %1770 = icmp eq i8 %1769, 0
  br i1 %1770, label %1855, label %1771

1771:                                             ; preds = %1767
  %1772 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 3, i32 1
  %1773 = load i32, i32* %1772, align 4
  %1774 = icmp eq i32 %1773, 0
  br i1 %1774, label %1855, label %1775

1775:                                             ; preds = %1771
  %1776 = load i32, i32* %35, align 4
  %1777 = icmp eq i32 %1776, %1773
  br i1 %1777, label %1778, label %1855, !prof !3

1778:                                             ; preds = %1775
  %1779 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 0, i32 0
  %1780 = load double, double* %1779, align 8
  %1781 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 3, i32 2
  %1782 = zext i32 %1773 to i64
  %1783 = load float*, float** %36, align 8
  %1784 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1781, align 8
  %1785 = add nsw i64 %1782, -1
  %1786 = and i64 %1782, 3
  %1787 = icmp ult i64 %1785, 3
  br i1 %1787, label %1790, label %1788

1788:                                             ; preds = %1778
  %1789 = sub nsw i64 %1782, %1786
  br label %1817

1790:                                             ; preds = %1817, %1778
  %1791 = phi double [ undef, %1778 ], [ %1851, %1817 ]
  %1792 = phi i64 [ 0, %1778 ], [ %1852, %1817 ]
  %1793 = phi double [ %1780, %1778 ], [ %1851, %1817 ]
  %1794 = icmp eq i64 %1786, 0
  br i1 %1794, label %1809, label %1795

1795:                                             ; preds = %1790, %1795
  %1796 = phi i64 [ %1806, %1795 ], [ %1792, %1790 ]
  %1797 = phi double [ %1805, %1795 ], [ %1793, %1790 ]
  %1798 = phi i64 [ %1807, %1795 ], [ %1786, %1790 ]
  %1799 = getelementptr inbounds float, float* %1783, i64 %1796
  %1800 = load float, float* %1799, align 4
  %1801 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1796, i32 0
  %1802 = load double, double* %1801, align 8
  %1803 = fpext float %1800 to double
  %1804 = fmul double %1802, %1803
  %1805 = fadd double %1797, %1804
  %1806 = add nuw nsw i64 %1796, 1
  %1807 = add i64 %1798, -1
  %1808 = icmp eq i64 %1807, 0
  br i1 %1808, label %1809, label %1795, !llvm.loop !80

1809:                                             ; preds = %1795, %1790
  %1810 = phi double [ %1791, %1790 ], [ %1805, %1795 ]
  %1811 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 2
  store i32 0, i32* %1811, align 4
  %1812 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 1
  store i32 0, i32* %1812, align 8
  %1813 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 3, i32 0
  %1814 = load i32, i32* %1813, align 8
  %1815 = icmp slt i32 %1814, 0
  store double %1810, double* %1779, align 8
  br i1 %1815, label %1855, label %1816, !prof !2

1816:                                             ; preds = %1809
  store i32 0, i32* %1772, align 4
  br label %1855

1817:                                             ; preds = %1817, %1788
  %1818 = phi i64 [ 0, %1788 ], [ %1852, %1817 ]
  %1819 = phi double [ %1780, %1788 ], [ %1851, %1817 ]
  %1820 = phi i64 [ %1789, %1788 ], [ %1853, %1817 ]
  %1821 = getelementptr inbounds float, float* %1783, i64 %1818
  %1822 = load float, float* %1821, align 4
  %1823 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1818, i32 0
  %1824 = load double, double* %1823, align 8
  %1825 = fpext float %1822 to double
  %1826 = fmul double %1824, %1825
  %1827 = fadd double %1819, %1826
  %1828 = or i64 %1818, 1
  %1829 = getelementptr inbounds float, float* %1783, i64 %1828
  %1830 = load float, float* %1829, align 4
  %1831 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1828, i32 0
  %1832 = load double, double* %1831, align 8
  %1833 = fpext float %1830 to double
  %1834 = fmul double %1832, %1833
  %1835 = fadd double %1827, %1834
  %1836 = or i64 %1818, 2
  %1837 = getelementptr inbounds float, float* %1783, i64 %1836
  %1838 = load float, float* %1837, align 4
  %1839 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1836, i32 0
  %1840 = load double, double* %1839, align 8
  %1841 = fpext float %1838 to double
  %1842 = fmul double %1840, %1841
  %1843 = fadd double %1835, %1842
  %1844 = or i64 %1818, 3
  %1845 = getelementptr inbounds float, float* %1783, i64 %1844
  %1846 = load float, float* %1845, align 4
  %1847 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1844, i32 0
  %1848 = load double, double* %1847, align 8
  %1849 = fpext float %1846 to double
  %1850 = fmul double %1848, %1849
  %1851 = fadd double %1843, %1850
  %1852 = add nuw nsw i64 %1818, 4
  %1853 = add i64 %1820, -4
  %1854 = icmp eq i64 %1853, 0
  br i1 %1854, label %1790, label %1817

1855:                                             ; preds = %1767, %1771, %1775, %1809, %1816
  %1856 = load double, double* %19, align 8
  %1857 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 0, i32 0
  %1858 = load double, double* %1857, align 8
  %1859 = fadd double %1856, %1858
  store double %1859, double* %19, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %17, i64 16, i1 false)
  %1860 = or i32 %1441, 4
  %1861 = load i32, i32* %21, align 4
  %1862 = icmp ugt i32 %1861, %1860
  br i1 %1862, label %1864, label %1863, !prof !3

1863:                                             ; preds = %1855
  store i8 1, i8* %31, align 8
  br label %1864

1864:                                             ; preds = %1863, %1855
  %1865 = load i32, i32* %32, align 4
  %1866 = icmp ugt i32 %1865, %1860
  br i1 %1866, label %1868, label %1867, !prof !3

1867:                                             ; preds = %1864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1872

1868:                                             ; preds = %1864
  %1869 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1870 = zext i32 %1860 to i64
  %1871 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1869, i64 %1870
  br label %1872

1872:                                             ; preds = %1868, %1867
  %1873 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1867 ], [ %1871, %1868 ]
  %1874 = load i8, i8* %34, align 8, !range !6
  %1875 = icmp eq i8 %1874, 0
  br i1 %1875, label %1960, label %1876

1876:                                             ; preds = %1872
  %1877 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 3, i32 1
  %1878 = load i32, i32* %1877, align 4
  %1879 = icmp eq i32 %1878, 0
  br i1 %1879, label %1960, label %1880

1880:                                             ; preds = %1876
  %1881 = load i32, i32* %35, align 4
  %1882 = icmp eq i32 %1881, %1878
  br i1 %1882, label %1883, label %1960, !prof !3

1883:                                             ; preds = %1880
  %1884 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 0, i32 0
  %1885 = load double, double* %1884, align 8
  %1886 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 3, i32 2
  %1887 = zext i32 %1878 to i64
  %1888 = load float*, float** %36, align 8
  %1889 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1886, align 8
  %1890 = add nsw i64 %1887, -1
  %1891 = and i64 %1887, 3
  %1892 = icmp ult i64 %1890, 3
  br i1 %1892, label %1895, label %1893

1893:                                             ; preds = %1883
  %1894 = sub nsw i64 %1887, %1891
  br label %1922

1895:                                             ; preds = %1922, %1883
  %1896 = phi double [ undef, %1883 ], [ %1956, %1922 ]
  %1897 = phi i64 [ 0, %1883 ], [ %1957, %1922 ]
  %1898 = phi double [ %1885, %1883 ], [ %1956, %1922 ]
  %1899 = icmp eq i64 %1891, 0
  br i1 %1899, label %1914, label %1900

1900:                                             ; preds = %1895, %1900
  %1901 = phi i64 [ %1911, %1900 ], [ %1897, %1895 ]
  %1902 = phi double [ %1910, %1900 ], [ %1898, %1895 ]
  %1903 = phi i64 [ %1912, %1900 ], [ %1891, %1895 ]
  %1904 = getelementptr inbounds float, float* %1888, i64 %1901
  %1905 = load float, float* %1904, align 4
  %1906 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1901, i32 0
  %1907 = load double, double* %1906, align 8
  %1908 = fpext float %1905 to double
  %1909 = fmul double %1907, %1908
  %1910 = fadd double %1902, %1909
  %1911 = add nuw nsw i64 %1901, 1
  %1912 = add i64 %1903, -1
  %1913 = icmp eq i64 %1912, 0
  br i1 %1913, label %1914, label %1900, !llvm.loop !81

1914:                                             ; preds = %1900, %1895
  %1915 = phi double [ %1896, %1895 ], [ %1910, %1900 ]
  %1916 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 2
  store i32 0, i32* %1916, align 4
  %1917 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 1
  store i32 0, i32* %1917, align 8
  %1918 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 3, i32 0
  %1919 = load i32, i32* %1918, align 8
  %1920 = icmp slt i32 %1919, 0
  store double %1915, double* %1884, align 8
  br i1 %1920, label %1960, label %1921, !prof !2

1921:                                             ; preds = %1914
  store i32 0, i32* %1877, align 4
  br label %1960

1922:                                             ; preds = %1922, %1893
  %1923 = phi i64 [ 0, %1893 ], [ %1957, %1922 ]
  %1924 = phi double [ %1885, %1893 ], [ %1956, %1922 ]
  %1925 = phi i64 [ %1894, %1893 ], [ %1958, %1922 ]
  %1926 = getelementptr inbounds float, float* %1888, i64 %1923
  %1927 = load float, float* %1926, align 4
  %1928 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1923, i32 0
  %1929 = load double, double* %1928, align 8
  %1930 = fpext float %1927 to double
  %1931 = fmul double %1929, %1930
  %1932 = fadd double %1924, %1931
  %1933 = or i64 %1923, 1
  %1934 = getelementptr inbounds float, float* %1888, i64 %1933
  %1935 = load float, float* %1934, align 4
  %1936 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1933, i32 0
  %1937 = load double, double* %1936, align 8
  %1938 = fpext float %1935 to double
  %1939 = fmul double %1937, %1938
  %1940 = fadd double %1932, %1939
  %1941 = or i64 %1923, 2
  %1942 = getelementptr inbounds float, float* %1888, i64 %1941
  %1943 = load float, float* %1942, align 4
  %1944 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1941, i32 0
  %1945 = load double, double* %1944, align 8
  %1946 = fpext float %1943 to double
  %1947 = fmul double %1945, %1946
  %1948 = fadd double %1940, %1947
  %1949 = or i64 %1923, 3
  %1950 = getelementptr inbounds float, float* %1888, i64 %1949
  %1951 = load float, float* %1950, align 4
  %1952 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1949, i32 0
  %1953 = load double, double* %1952, align 8
  %1954 = fpext float %1951 to double
  %1955 = fmul double %1953, %1954
  %1956 = fadd double %1948, %1955
  %1957 = add nuw nsw i64 %1923, 4
  %1958 = add i64 %1925, -4
  %1959 = icmp eq i64 %1958, 0
  br i1 %1959, label %1895, label %1922

1960:                                             ; preds = %1872, %1876, %1880, %1914, %1921
  %1961 = load double, double* %11, align 8
  %1962 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 0, i32 0
  %1963 = load double, double* %1962, align 8
  %1964 = fadd double %1961, %1963
  store double %1964, double* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %10, i64 16, i1 false)
  %1965 = or i32 %1441, 5
  %1966 = load i32, i32* %21, align 4
  %1967 = icmp ugt i32 %1966, %1965
  br i1 %1967, label %1969, label %1968, !prof !3

1968:                                             ; preds = %1960
  store i8 1, i8* %31, align 8
  br label %1969

1969:                                             ; preds = %1968, %1960
  %1970 = load i32, i32* %32, align 4
  %1971 = icmp ugt i32 %1970, %1965
  br i1 %1971, label %1973, label %1972, !prof !3

1972:                                             ; preds = %1969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1977

1973:                                             ; preds = %1969
  %1974 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1975 = zext i32 %1965 to i64
  %1976 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1974, i64 %1975
  br label %1977

1977:                                             ; preds = %1973, %1972
  %1978 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1972 ], [ %1976, %1973 ]
  %1979 = load i8, i8* %34, align 8, !range !6
  %1980 = icmp eq i8 %1979, 0
  br i1 %1980, label %2065, label %1981

1981:                                             ; preds = %1977
  %1982 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 3, i32 1
  %1983 = load i32, i32* %1982, align 4
  %1984 = icmp eq i32 %1983, 0
  br i1 %1984, label %2065, label %1985

1985:                                             ; preds = %1981
  %1986 = load i32, i32* %35, align 4
  %1987 = icmp eq i32 %1986, %1983
  br i1 %1987, label %1988, label %2065, !prof !3

1988:                                             ; preds = %1985
  %1989 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 0, i32 0
  %1990 = load double, double* %1989, align 8
  %1991 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 3, i32 2
  %1992 = zext i32 %1983 to i64
  %1993 = load float*, float** %36, align 8
  %1994 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1991, align 8
  %1995 = add nsw i64 %1992, -1
  %1996 = and i64 %1992, 3
  %1997 = icmp ult i64 %1995, 3
  br i1 %1997, label %2000, label %1998

1998:                                             ; preds = %1988
  %1999 = sub nsw i64 %1992, %1996
  br label %2027

2000:                                             ; preds = %2027, %1988
  %2001 = phi double [ undef, %1988 ], [ %2061, %2027 ]
  %2002 = phi i64 [ 0, %1988 ], [ %2062, %2027 ]
  %2003 = phi double [ %1990, %1988 ], [ %2061, %2027 ]
  %2004 = icmp eq i64 %1996, 0
  br i1 %2004, label %2019, label %2005

2005:                                             ; preds = %2000, %2005
  %2006 = phi i64 [ %2016, %2005 ], [ %2002, %2000 ]
  %2007 = phi double [ %2015, %2005 ], [ %2003, %2000 ]
  %2008 = phi i64 [ %2017, %2005 ], [ %1996, %2000 ]
  %2009 = getelementptr inbounds float, float* %1993, i64 %2006
  %2010 = load float, float* %2009, align 4
  %2011 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2006, i32 0
  %2012 = load double, double* %2011, align 8
  %2013 = fpext float %2010 to double
  %2014 = fmul double %2012, %2013
  %2015 = fadd double %2007, %2014
  %2016 = add nuw nsw i64 %2006, 1
  %2017 = add i64 %2008, -1
  %2018 = icmp eq i64 %2017, 0
  br i1 %2018, label %2019, label %2005, !llvm.loop !82

2019:                                             ; preds = %2005, %2000
  %2020 = phi double [ %2001, %2000 ], [ %2015, %2005 ]
  %2021 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 2
  store i32 0, i32* %2021, align 4
  %2022 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 1
  store i32 0, i32* %2022, align 8
  %2023 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 3, i32 0
  %2024 = load i32, i32* %2023, align 8
  %2025 = icmp slt i32 %2024, 0
  store double %2020, double* %1989, align 8
  br i1 %2025, label %2065, label %2026, !prof !2

2026:                                             ; preds = %2019
  store i32 0, i32* %1982, align 4
  br label %2065

2027:                                             ; preds = %2027, %1998
  %2028 = phi i64 [ 0, %1998 ], [ %2062, %2027 ]
  %2029 = phi double [ %1990, %1998 ], [ %2061, %2027 ]
  %2030 = phi i64 [ %1999, %1998 ], [ %2063, %2027 ]
  %2031 = getelementptr inbounds float, float* %1993, i64 %2028
  %2032 = load float, float* %2031, align 4
  %2033 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2028, i32 0
  %2034 = load double, double* %2033, align 8
  %2035 = fpext float %2032 to double
  %2036 = fmul double %2034, %2035
  %2037 = fadd double %2029, %2036
  %2038 = or i64 %2028, 1
  %2039 = getelementptr inbounds float, float* %1993, i64 %2038
  %2040 = load float, float* %2039, align 4
  %2041 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2038, i32 0
  %2042 = load double, double* %2041, align 8
  %2043 = fpext float %2040 to double
  %2044 = fmul double %2042, %2043
  %2045 = fadd double %2037, %2044
  %2046 = or i64 %2028, 2
  %2047 = getelementptr inbounds float, float* %1993, i64 %2046
  %2048 = load float, float* %2047, align 4
  %2049 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2046, i32 0
  %2050 = load double, double* %2049, align 8
  %2051 = fpext float %2048 to double
  %2052 = fmul double %2050, %2051
  %2053 = fadd double %2045, %2052
  %2054 = or i64 %2028, 3
  %2055 = getelementptr inbounds float, float* %1993, i64 %2054
  %2056 = load float, float* %2055, align 4
  %2057 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2054, i32 0
  %2058 = load double, double* %2057, align 8
  %2059 = fpext float %2056 to double
  %2060 = fmul double %2058, %2059
  %2061 = fadd double %2053, %2060
  %2062 = add nuw nsw i64 %2028, 4
  %2063 = add i64 %2030, -4
  %2064 = icmp eq i64 %2063, 0
  br i1 %2064, label %2000, label %2027

2065:                                             ; preds = %1977, %1981, %1985, %2019, %2026
  %2066 = or i32 %1441, 6
  %2067 = load i32, i32* %21, align 4
  %2068 = icmp ugt i32 %2067, %2066
  br i1 %2068, label %2070, label %2069, !prof !3

2069:                                             ; preds = %2065
  store i8 1, i8* %31, align 8
  br label %2070

2070:                                             ; preds = %2069, %2065
  %2071 = load i32, i32* %32, align 4
  %2072 = icmp ugt i32 %2071, %2066
  br i1 %2072, label %2074, label %2073, !prof !3

2073:                                             ; preds = %2070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %2078

2074:                                             ; preds = %2070
  %2075 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %2076 = zext i32 %2066 to i64
  %2077 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2075, i64 %2076
  br label %2078

2078:                                             ; preds = %2074, %2073
  %2079 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %2073 ], [ %2077, %2074 ]
  %2080 = load i8, i8* %34, align 8, !range !6
  %2081 = icmp eq i8 %2080, 0
  br i1 %2081, label %2166, label %2082

2082:                                             ; preds = %2078
  %2083 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 3, i32 1
  %2084 = load i32, i32* %2083, align 4
  %2085 = icmp eq i32 %2084, 0
  br i1 %2085, label %2166, label %2086

2086:                                             ; preds = %2082
  %2087 = load i32, i32* %35, align 4
  %2088 = icmp eq i32 %2087, %2084
  br i1 %2088, label %2089, label %2166, !prof !3

2089:                                             ; preds = %2086
  %2090 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 0, i32 0
  %2091 = load double, double* %2090, align 8
  %2092 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 3, i32 2
  %2093 = zext i32 %2084 to i64
  %2094 = load float*, float** %36, align 8
  %2095 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %2092, align 8
  %2096 = add nsw i64 %2093, -1
  %2097 = and i64 %2093, 3
  %2098 = icmp ult i64 %2096, 3
  br i1 %2098, label %2101, label %2099

2099:                                             ; preds = %2089
  %2100 = sub nsw i64 %2093, %2097
  br label %2128

2101:                                             ; preds = %2128, %2089
  %2102 = phi double [ undef, %2089 ], [ %2162, %2128 ]
  %2103 = phi i64 [ 0, %2089 ], [ %2163, %2128 ]
  %2104 = phi double [ %2091, %2089 ], [ %2162, %2128 ]
  %2105 = icmp eq i64 %2097, 0
  br i1 %2105, label %2120, label %2106

2106:                                             ; preds = %2101, %2106
  %2107 = phi i64 [ %2117, %2106 ], [ %2103, %2101 ]
  %2108 = phi double [ %2116, %2106 ], [ %2104, %2101 ]
  %2109 = phi i64 [ %2118, %2106 ], [ %2097, %2101 ]
  %2110 = getelementptr inbounds float, float* %2094, i64 %2107
  %2111 = load float, float* %2110, align 4
  %2112 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2107, i32 0
  %2113 = load double, double* %2112, align 8
  %2114 = fpext float %2111 to double
  %2115 = fmul double %2113, %2114
  %2116 = fadd double %2108, %2115
  %2117 = add nuw nsw i64 %2107, 1
  %2118 = add i64 %2109, -1
  %2119 = icmp eq i64 %2118, 0
  br i1 %2119, label %2120, label %2106, !llvm.loop !83

2120:                                             ; preds = %2106, %2101
  %2121 = phi double [ %2102, %2101 ], [ %2116, %2106 ]
  %2122 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 2
  store i32 0, i32* %2122, align 4
  %2123 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 1
  store i32 0, i32* %2123, align 8
  %2124 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 3, i32 0
  %2125 = load i32, i32* %2124, align 8
  %2126 = icmp slt i32 %2125, 0
  store double %2121, double* %2090, align 8
  br i1 %2126, label %2166, label %2127, !prof !2

2127:                                             ; preds = %2120
  store i32 0, i32* %2083, align 4
  br label %2166

2128:                                             ; preds = %2128, %2099
  %2129 = phi i64 [ 0, %2099 ], [ %2163, %2128 ]
  %2130 = phi double [ %2091, %2099 ], [ %2162, %2128 ]
  %2131 = phi i64 [ %2100, %2099 ], [ %2164, %2128 ]
  %2132 = getelementptr inbounds float, float* %2094, i64 %2129
  %2133 = load float, float* %2132, align 4
  %2134 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2129, i32 0
  %2135 = load double, double* %2134, align 8
  %2136 = fpext float %2133 to double
  %2137 = fmul double %2135, %2136
  %2138 = fadd double %2130, %2137
  %2139 = or i64 %2129, 1
  %2140 = getelementptr inbounds float, float* %2094, i64 %2139
  %2141 = load float, float* %2140, align 4
  %2142 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2139, i32 0
  %2143 = load double, double* %2142, align 8
  %2144 = fpext float %2141 to double
  %2145 = fmul double %2143, %2144
  %2146 = fadd double %2138, %2145
  %2147 = or i64 %2129, 2
  %2148 = getelementptr inbounds float, float* %2094, i64 %2147
  %2149 = load float, float* %2148, align 4
  %2150 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2147, i32 0
  %2151 = load double, double* %2150, align 8
  %2152 = fpext float %2149 to double
  %2153 = fmul double %2151, %2152
  %2154 = fadd double %2146, %2153
  %2155 = or i64 %2129, 3
  %2156 = getelementptr inbounds float, float* %2094, i64 %2155
  %2157 = load float, float* %2156, align 4
  %2158 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2155, i32 0
  %2159 = load double, double* %2158, align 8
  %2160 = fpext float %2157 to double
  %2161 = fmul double %2159, %2160
  %2162 = fadd double %2154, %2161
  %2163 = add nuw nsw i64 %2129, 4
  %2164 = add i64 %2131, -4
  %2165 = icmp eq i64 %2164, 0
  br i1 %2165, label %2101, label %2128

2166:                                             ; preds = %2078, %2082, %2086, %2120, %2127
  %2167 = load double, double* %15, align 8
  %2168 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 0, i32 0
  %2169 = load double, double* %2168, align 8
  %2170 = fadd double %2167, %2169
  store double %2170, double* %15, align 8
  %2171 = load double, double* %16, align 8
  %2172 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 0, i32 0
  %2173 = load double, double* %2172, align 8
  %2174 = fadd double %2171, %2173
  store double %2174, double* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %13, i64 16, i1 false)
  %2175 = or i32 %1441, 7
  %2176 = load i32, i32* %21, align 4
  %2177 = icmp ugt i32 %2176, %2175
  br i1 %2177, label %2179, label %2178, !prof !3

2178:                                             ; preds = %2166
  store i8 1, i8* %31, align 8
  br label %2179

2179:                                             ; preds = %2178, %2166
  %2180 = load i32, i32* %32, align 4
  %2181 = icmp ugt i32 %2180, %2175
  br i1 %2181, label %2183, label %2182, !prof !3

2182:                                             ; preds = %2179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %2187

2183:                                             ; preds = %2179
  %2184 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %2185 = zext i32 %2175 to i64
  %2186 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2184, i64 %2185
  br label %2187

2187:                                             ; preds = %2183, %2182
  %2188 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %2182 ], [ %2186, %2183 ]
  %2189 = load i8, i8* %34, align 8, !range !6
  %2190 = icmp eq i8 %2189, 0
  br i1 %2190, label %2275, label %2191

2191:                                             ; preds = %2187
  %2192 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 3, i32 1
  %2193 = load i32, i32* %2192, align 4
  %2194 = icmp eq i32 %2193, 0
  br i1 %2194, label %2275, label %2195

2195:                                             ; preds = %2191
  %2196 = load i32, i32* %35, align 4
  %2197 = icmp eq i32 %2196, %2193
  br i1 %2197, label %2198, label %2275, !prof !3

2198:                                             ; preds = %2195
  %2199 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 0, i32 0
  %2200 = load double, double* %2199, align 8
  %2201 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 3, i32 2
  %2202 = zext i32 %2193 to i64
  %2203 = load float*, float** %36, align 8
  %2204 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %2201, align 8
  %2205 = add nsw i64 %2202, -1
  %2206 = and i64 %2202, 3
  %2207 = icmp ult i64 %2205, 3
  br i1 %2207, label %2210, label %2208

2208:                                             ; preds = %2198
  %2209 = sub nsw i64 %2202, %2206
  br label %2237

2210:                                             ; preds = %2237, %2198
  %2211 = phi double [ undef, %2198 ], [ %2271, %2237 ]
  %2212 = phi i64 [ 0, %2198 ], [ %2272, %2237 ]
  %2213 = phi double [ %2200, %2198 ], [ %2271, %2237 ]
  %2214 = icmp eq i64 %2206, 0
  br i1 %2214, label %2229, label %2215

2215:                                             ; preds = %2210, %2215
  %2216 = phi i64 [ %2226, %2215 ], [ %2212, %2210 ]
  %2217 = phi double [ %2225, %2215 ], [ %2213, %2210 ]
  %2218 = phi i64 [ %2227, %2215 ], [ %2206, %2210 ]
  %2219 = getelementptr inbounds float, float* %2203, i64 %2216
  %2220 = load float, float* %2219, align 4
  %2221 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2216, i32 0
  %2222 = load double, double* %2221, align 8
  %2223 = fpext float %2220 to double
  %2224 = fmul double %2222, %2223
  %2225 = fadd double %2217, %2224
  %2226 = add nuw nsw i64 %2216, 1
  %2227 = add i64 %2218, -1
  %2228 = icmp eq i64 %2227, 0
  br i1 %2228, label %2229, label %2215, !llvm.loop !84

2229:                                             ; preds = %2215, %2210
  %2230 = phi double [ %2211, %2210 ], [ %2225, %2215 ]
  %2231 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 2
  store i32 0, i32* %2231, align 4
  %2232 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 1
  store i32 0, i32* %2232, align 8
  %2233 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 3, i32 0
  %2234 = load i32, i32* %2233, align 8
  %2235 = icmp slt i32 %2234, 0
  store double %2230, double* %2199, align 8
  br i1 %2235, label %2275, label %2236, !prof !2

2236:                                             ; preds = %2229
  store i32 0, i32* %2192, align 4
  br label %2275

2237:                                             ; preds = %2237, %2208
  %2238 = phi i64 [ 0, %2208 ], [ %2272, %2237 ]
  %2239 = phi double [ %2200, %2208 ], [ %2271, %2237 ]
  %2240 = phi i64 [ %2209, %2208 ], [ %2273, %2237 ]
  %2241 = getelementptr inbounds float, float* %2203, i64 %2238
  %2242 = load float, float* %2241, align 4
  %2243 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2238, i32 0
  %2244 = load double, double* %2243, align 8
  %2245 = fpext float %2242 to double
  %2246 = fmul double %2244, %2245
  %2247 = fadd double %2239, %2246
  %2248 = or i64 %2238, 1
  %2249 = getelementptr inbounds float, float* %2203, i64 %2248
  %2250 = load float, float* %2249, align 4
  %2251 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2248, i32 0
  %2252 = load double, double* %2251, align 8
  %2253 = fpext float %2250 to double
  %2254 = fmul double %2252, %2253
  %2255 = fadd double %2247, %2254
  %2256 = or i64 %2238, 2
  %2257 = getelementptr inbounds float, float* %2203, i64 %2256
  %2258 = load float, float* %2257, align 4
  %2259 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2256, i32 0
  %2260 = load double, double* %2259, align 8
  %2261 = fpext float %2258 to double
  %2262 = fmul double %2260, %2261
  %2263 = fadd double %2255, %2262
  %2264 = or i64 %2238, 3
  %2265 = getelementptr inbounds float, float* %2203, i64 %2264
  %2266 = load float, float* %2265, align 4
  %2267 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2264, i32 0
  %2268 = load double, double* %2267, align 8
  %2269 = fpext float %2266 to double
  %2270 = fmul double %2268, %2269
  %2271 = fadd double %2263, %2270
  %2272 = add nuw nsw i64 %2238, 4
  %2273 = add i64 %2240, -4
  %2274 = icmp eq i64 %2273, 0
  br i1 %2274, label %2210, label %2237

2275:                                             ; preds = %2187, %2191, %2195, %2229, %2236
  %2276 = load double, double* %20, align 8
  %2277 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 0, i32 0
  %2278 = load double, double* %2277, align 8
  %2279 = fadd double %2276, %2278
  store double %2279, double* %20, align 8
  %2280 = load i32, i32* %21, align 4
  %2281 = sub i32 %2280, %1441
  %2282 = icmp ugt i32 %2281, 15
  %2283 = and i32 %2280, 1
  %2284 = icmp eq i32 %2283, 0
  %2285 = or i1 %2282, %2284
  br i1 %2285, label %2390, label %2286

2286:                                             ; preds = %2275
  %2287 = icmp ugt i32 %2280, %1440
  br i1 %2287, label %2289, label %2288, !prof !3

2288:                                             ; preds = %2286
  store i8 1, i8* %31, align 8
  br label %2289

2289:                                             ; preds = %2288, %2286
  %2290 = load i32, i32* %32, align 4
  %2291 = icmp ugt i32 %2290, %1440
  br i1 %2291, label %2293, label %2292, !prof !3

2292:                                             ; preds = %2289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %2297

2293:                                             ; preds = %2289
  %2294 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %2295 = zext i32 %1440 to i64
  %2296 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2294, i64 %2295
  br label %2297

2297:                                             ; preds = %2293, %2292
  %2298 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %2292 ], [ %2296, %2293 ]
  %2299 = load i8, i8* %34, align 8, !range !6
  %2300 = icmp eq i8 %2299, 0
  br i1 %2300, label %2385, label %2301

2301:                                             ; preds = %2297
  %2302 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 3, i32 1
  %2303 = load i32, i32* %2302, align 4
  %2304 = icmp eq i32 %2303, 0
  br i1 %2304, label %2385, label %2305

2305:                                             ; preds = %2301
  %2306 = load i32, i32* %35, align 4
  %2307 = icmp eq i32 %2306, %2303
  br i1 %2307, label %2308, label %2385, !prof !3

2308:                                             ; preds = %2305
  %2309 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 0, i32 0
  %2310 = load double, double* %2309, align 8
  %2311 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 3, i32 2
  %2312 = zext i32 %2303 to i64
  %2313 = load float*, float** %36, align 8
  %2314 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %2311, align 8
  %2315 = add nsw i64 %2312, -1
  %2316 = and i64 %2312, 3
  %2317 = icmp ult i64 %2315, 3
  br i1 %2317, label %2320, label %2318

2318:                                             ; preds = %2308
  %2319 = sub nsw i64 %2312, %2316
  br label %2347

2320:                                             ; preds = %2347, %2308
  %2321 = phi double [ undef, %2308 ], [ %2381, %2347 ]
  %2322 = phi i64 [ 0, %2308 ], [ %2382, %2347 ]
  %2323 = phi double [ %2310, %2308 ], [ %2381, %2347 ]
  %2324 = icmp eq i64 %2316, 0
  br i1 %2324, label %2339, label %2325

2325:                                             ; preds = %2320, %2325
  %2326 = phi i64 [ %2336, %2325 ], [ %2322, %2320 ]
  %2327 = phi double [ %2335, %2325 ], [ %2323, %2320 ]
  %2328 = phi i64 [ %2337, %2325 ], [ %2316, %2320 ]
  %2329 = getelementptr inbounds float, float* %2313, i64 %2326
  %2330 = load float, float* %2329, align 4
  %2331 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2326, i32 0
  %2332 = load double, double* %2331, align 8
  %2333 = fpext float %2330 to double
  %2334 = fmul double %2332, %2333
  %2335 = fadd double %2327, %2334
  %2336 = add nuw nsw i64 %2326, 1
  %2337 = add i64 %2328, -1
  %2338 = icmp eq i64 %2337, 0
  br i1 %2338, label %2339, label %2325, !llvm.loop !85

2339:                                             ; preds = %2325, %2320
  %2340 = phi double [ %2321, %2320 ], [ %2335, %2325 ]
  %2341 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 2
  store i32 0, i32* %2341, align 4
  %2342 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 1
  store i32 0, i32* %2342, align 8
  %2343 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 3, i32 0
  %2344 = load i32, i32* %2343, align 8
  %2345 = icmp slt i32 %2344, 0
  store double %2340, double* %2309, align 8
  br i1 %2345, label %2385, label %2346, !prof !2

2346:                                             ; preds = %2339
  store i32 0, i32* %2302, align 4
  br label %2385

2347:                                             ; preds = %2347, %2318
  %2348 = phi i64 [ 0, %2318 ], [ %2382, %2347 ]
  %2349 = phi double [ %2310, %2318 ], [ %2381, %2347 ]
  %2350 = phi i64 [ %2319, %2318 ], [ %2383, %2347 ]
  %2351 = getelementptr inbounds float, float* %2313, i64 %2348
  %2352 = load float, float* %2351, align 4
  %2353 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2348, i32 0
  %2354 = load double, double* %2353, align 8
  %2355 = fpext float %2352 to double
  %2356 = fmul double %2354, %2355
  %2357 = fadd double %2349, %2356
  %2358 = or i64 %2348, 1
  %2359 = getelementptr inbounds float, float* %2313, i64 %2358
  %2360 = load float, float* %2359, align 4
  %2361 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2358, i32 0
  %2362 = load double, double* %2361, align 8
  %2363 = fpext float %2360 to double
  %2364 = fmul double %2362, %2363
  %2365 = fadd double %2357, %2364
  %2366 = or i64 %2348, 2
  %2367 = getelementptr inbounds float, float* %2313, i64 %2366
  %2368 = load float, float* %2367, align 4
  %2369 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2366, i32 0
  %2370 = load double, double* %2369, align 8
  %2371 = fpext float %2368 to double
  %2372 = fmul double %2370, %2371
  %2373 = fadd double %2365, %2372
  %2374 = or i64 %2348, 3
  %2375 = getelementptr inbounds float, float* %2313, i64 %2374
  %2376 = load float, float* %2375, align 4
  %2377 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2374, i32 0
  %2378 = load double, double* %2377, align 8
  %2379 = fpext float %2376 to double
  %2380 = fmul double %2378, %2379
  %2381 = fadd double %2373, %2380
  %2382 = add nuw nsw i64 %2348, 4
  %2383 = add i64 %2350, -4
  %2384 = icmp eq i64 %2383, 0
  br i1 %2384, label %2320, label %2347

2385:                                             ; preds = %2297, %2301, %2305, %2339, %2346
  %2386 = load double, double* %19, align 8
  %2387 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 0, i32 0
  %2388 = load double, double* %2387, align 8
  %2389 = fadd double %2386, %2388
  store double %2389, double* %19, align 8
  br label %2390

2390:                                             ; preds = %2275, %2385
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  %2391 = add i32 %1440, 8
  %2392 = load i32, i32* %21, align 4
  %2393 = icmp ugt i32 %2391, %2392
  br i1 %2393, label %2394, label %1438

2394:                                             ; preds = %2390, %26, %1437
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE9hvcurvetoERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca %"struct.CFF::point_t", align 8
  %5 = alloca %"struct.CFF::point_t", align 8
  %6 = alloca %"struct.CFF::point_t", align 8
  %7 = alloca <2 x double>, align 16
  %8 = bitcast <2 x double>* %7 to %"struct.CFF::point_t"*
  %9 = alloca %"struct.CFF::point_t", align 8
  %10 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %13 = bitcast %"struct.CFF::point_t"* %4 to i8*
  %14 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6
  %15 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %4, i64 0, i32 1, i32 0
  %17 = bitcast %"struct.CFF::point_t"* %5 to i8*
  %18 = bitcast %"struct.CFF::point_t"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #6
  %19 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %5, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %22 = bitcast %"struct.CFF::point_t"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -1, i64 16, i1 false)
  %23 = load i32, i32* %21, align 4
  %24 = and i32 %23, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %37

26:                                               ; preds = %2
  %27 = icmp ult i32 %23, 8
  br i1 %27, label %2394, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %30 = bitcast %"struct.CFF::point_t"* %29 to i8*
  %31 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %33 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %34 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %35 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %36 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  br label %1438

37:                                               ; preds = %2
  %38 = bitcast %"struct.CFF::point_t"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #6
  %39 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %6, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %6, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %42 = bitcast %"struct.CFF::point_t"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %42, i64 16, i1 false)
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %45, align 8
  br label %46

46:                                               ; preds = %37, %44
  %47 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %53 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %52, align 8
  br label %54

54:                                               ; preds = %51, %50
  %55 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %50 ], [ %53, %51 ]
  %56 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %57 = load i8, i8* %56, align 8, !range !6
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %145, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 3, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %145, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %61
  br i1 %66, label %67, label %145, !prof !3

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 0, i32 0
  %69 = load double, double* %68, align 8
  %70 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %71 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 3, i32 2
  %72 = zext i32 %61 to i64
  %73 = load float*, float** %70, align 8
  %74 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %71, align 8
  %75 = add nsw i64 %72, -1
  %76 = and i64 %72, 3
  %77 = icmp ult i64 %75, 3
  br i1 %77, label %80, label %78

78:                                               ; preds = %67
  %79 = sub nsw i64 %72, %76
  br label %107

80:                                               ; preds = %107, %67
  %81 = phi double [ undef, %67 ], [ %141, %107 ]
  %82 = phi i64 [ 0, %67 ], [ %142, %107 ]
  %83 = phi double [ %69, %67 ], [ %141, %107 ]
  %84 = icmp eq i64 %76, 0
  br i1 %84, label %99, label %85

85:                                               ; preds = %80, %85
  %86 = phi i64 [ %96, %85 ], [ %82, %80 ]
  %87 = phi double [ %95, %85 ], [ %83, %80 ]
  %88 = phi i64 [ %97, %85 ], [ %76, %80 ]
  %89 = getelementptr inbounds float, float* %73, i64 %86
  %90 = load float, float* %89, align 4
  %91 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %86, i32 0
  %92 = load double, double* %91, align 8
  %93 = fpext float %90 to double
  %94 = fmul double %92, %93
  %95 = fadd double %87, %94
  %96 = add nuw nsw i64 %86, 1
  %97 = add i64 %88, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %85, !llvm.loop !86

99:                                               ; preds = %85, %80
  %100 = phi double [ %81, %80 ], [ %95, %85 ]
  %101 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 2
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 1
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 3, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp slt i32 %104, 0
  store double %100, double* %68, align 8
  br i1 %105, label %145, label %106, !prof !2

106:                                              ; preds = %99
  store i32 0, i32* %60, align 4
  br label %145

107:                                              ; preds = %107, %78
  %108 = phi i64 [ 0, %78 ], [ %142, %107 ]
  %109 = phi double [ %69, %78 ], [ %141, %107 ]
  %110 = phi i64 [ %79, %78 ], [ %143, %107 ]
  %111 = getelementptr inbounds float, float* %73, i64 %108
  %112 = load float, float* %111, align 4
  %113 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %108, i32 0
  %114 = load double, double* %113, align 8
  %115 = fpext float %112 to double
  %116 = fmul double %114, %115
  %117 = fadd double %109, %116
  %118 = or i64 %108, 1
  %119 = getelementptr inbounds float, float* %73, i64 %118
  %120 = load float, float* %119, align 4
  %121 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %118, i32 0
  %122 = load double, double* %121, align 8
  %123 = fpext float %120 to double
  %124 = fmul double %122, %123
  %125 = fadd double %117, %124
  %126 = or i64 %108, 2
  %127 = getelementptr inbounds float, float* %73, i64 %126
  %128 = load float, float* %127, align 4
  %129 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %126, i32 0
  %130 = load double, double* %129, align 8
  %131 = fpext float %128 to double
  %132 = fmul double %130, %131
  %133 = fadd double %125, %132
  %134 = or i64 %108, 3
  %135 = getelementptr inbounds float, float* %73, i64 %134
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %74, i64 %134, i32 0
  %138 = load double, double* %137, align 8
  %139 = fpext float %136 to double
  %140 = fmul double %138, %139
  %141 = fadd double %133, %140
  %142 = add nuw nsw i64 %108, 4
  %143 = add i64 %110, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %80, label %107

145:                                              ; preds = %54, %59, %63, %99, %106
  %146 = load double, double* %39, align 8
  %147 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %55, i64 0, i32 0, i32 0
  %148 = load double, double* %147, align 8
  %149 = fadd double %146, %148
  store double %149, double* %39, align 8
  %150 = bitcast <2 x double>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #6
  %151 = getelementptr inbounds <2 x double>, <2 x double>* %7, i64 0, i64 0
  %152 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %8, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %150, i8* nonnull align 8 %38, i64 16, i1 false)
  %153 = load i32, i32* %21, align 4
  %154 = icmp ugt i32 %153, 1
  br i1 %154, label %157, label %155, !prof !3

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %156, align 8
  br label %157

157:                                              ; preds = %155, %145
  %158 = load i32, i32* %47, align 4
  %159 = icmp ugt i32 %158, 1
  br i1 %159, label %161, label %160, !prof !3

160:                                              ; preds = %157
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %165

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %163 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %162, align 8
  %164 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %163, i64 1
  br label %165

165:                                              ; preds = %161, %160
  %166 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %160 ], [ %164, %161 ]
  %167 = load i8, i8* %56, align 8, !range !6
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %255, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 3, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %255, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, %171
  br i1 %176, label %177, label %255, !prof !3

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 0, i32 0
  %179 = load double, double* %178, align 8
  %180 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %181 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 3, i32 2
  %182 = zext i32 %171 to i64
  %183 = load float*, float** %180, align 8
  %184 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %181, align 8
  %185 = add nsw i64 %182, -1
  %186 = and i64 %182, 3
  %187 = icmp ult i64 %185, 3
  br i1 %187, label %190, label %188

188:                                              ; preds = %177
  %189 = sub nsw i64 %182, %186
  br label %217

190:                                              ; preds = %217, %177
  %191 = phi double [ undef, %177 ], [ %251, %217 ]
  %192 = phi i64 [ 0, %177 ], [ %252, %217 ]
  %193 = phi double [ %179, %177 ], [ %251, %217 ]
  %194 = icmp eq i64 %186, 0
  br i1 %194, label %209, label %195

195:                                              ; preds = %190, %195
  %196 = phi i64 [ %206, %195 ], [ %192, %190 ]
  %197 = phi double [ %205, %195 ], [ %193, %190 ]
  %198 = phi i64 [ %207, %195 ], [ %186, %190 ]
  %199 = getelementptr inbounds float, float* %183, i64 %196
  %200 = load float, float* %199, align 4
  %201 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %196, i32 0
  %202 = load double, double* %201, align 8
  %203 = fpext float %200 to double
  %204 = fmul double %202, %203
  %205 = fadd double %197, %204
  %206 = add nuw nsw i64 %196, 1
  %207 = add i64 %198, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %195, !llvm.loop !87

209:                                              ; preds = %195, %190
  %210 = phi double [ %191, %190 ], [ %205, %195 ]
  %211 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 2
  store i32 0, i32* %211, align 4
  %212 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 1
  store i32 0, i32* %212, align 8
  %213 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 3, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = icmp slt i32 %214, 0
  store double %210, double* %178, align 8
  br i1 %215, label %255, label %216, !prof !2

216:                                              ; preds = %209
  store i32 0, i32* %170, align 4
  br label %255

217:                                              ; preds = %217, %188
  %218 = phi i64 [ 0, %188 ], [ %252, %217 ]
  %219 = phi double [ %179, %188 ], [ %251, %217 ]
  %220 = phi i64 [ %189, %188 ], [ %253, %217 ]
  %221 = getelementptr inbounds float, float* %183, i64 %218
  %222 = load float, float* %221, align 4
  %223 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %218, i32 0
  %224 = load double, double* %223, align 8
  %225 = fpext float %222 to double
  %226 = fmul double %224, %225
  %227 = fadd double %219, %226
  %228 = or i64 %218, 1
  %229 = getelementptr inbounds float, float* %183, i64 %228
  %230 = load float, float* %229, align 4
  %231 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %228, i32 0
  %232 = load double, double* %231, align 8
  %233 = fpext float %230 to double
  %234 = fmul double %232, %233
  %235 = fadd double %227, %234
  %236 = or i64 %218, 2
  %237 = getelementptr inbounds float, float* %183, i64 %236
  %238 = load float, float* %237, align 4
  %239 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %236, i32 0
  %240 = load double, double* %239, align 8
  %241 = fpext float %238 to double
  %242 = fmul double %240, %241
  %243 = fadd double %235, %242
  %244 = or i64 %218, 3
  %245 = getelementptr inbounds float, float* %183, i64 %244
  %246 = load float, float* %245, align 4
  %247 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %184, i64 %244, i32 0
  %248 = load double, double* %247, align 8
  %249 = fpext float %246 to double
  %250 = fmul double %248, %249
  %251 = fadd double %243, %250
  %252 = add nuw nsw i64 %218, 4
  %253 = add i64 %220, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %190, label %217

255:                                              ; preds = %165, %169, %173, %209, %216
  %256 = load i32, i32* %21, align 4
  %257 = icmp ugt i32 %256, 2
  br i1 %257, label %260, label %258, !prof !3

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %259, align 8
  br label %260

260:                                              ; preds = %258, %255
  %261 = load i32, i32* %47, align 4
  %262 = icmp ugt i32 %261, 2
  br i1 %262, label %264, label %263, !prof !3

263:                                              ; preds = %260
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %268

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %266 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %265, align 8
  %267 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %266, i64 2
  br label %268

268:                                              ; preds = %264, %263
  %269 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %263 ], [ %267, %264 ]
  %270 = load i8, i8* %56, align 8, !range !6
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %358, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 3, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %358, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, %274
  br i1 %279, label %280, label %358, !prof !3

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 0, i32 0
  %282 = load double, double* %281, align 8
  %283 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %284 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 3, i32 2
  %285 = zext i32 %274 to i64
  %286 = load float*, float** %283, align 8
  %287 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %284, align 8
  %288 = add nsw i64 %285, -1
  %289 = and i64 %285, 3
  %290 = icmp ult i64 %288, 3
  br i1 %290, label %293, label %291

291:                                              ; preds = %280
  %292 = sub nsw i64 %285, %289
  br label %320

293:                                              ; preds = %320, %280
  %294 = phi double [ undef, %280 ], [ %354, %320 ]
  %295 = phi i64 [ 0, %280 ], [ %355, %320 ]
  %296 = phi double [ %282, %280 ], [ %354, %320 ]
  %297 = icmp eq i64 %289, 0
  br i1 %297, label %312, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %309, %298 ], [ %295, %293 ]
  %300 = phi double [ %308, %298 ], [ %296, %293 ]
  %301 = phi i64 [ %310, %298 ], [ %289, %293 ]
  %302 = getelementptr inbounds float, float* %286, i64 %299
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %299, i32 0
  %305 = load double, double* %304, align 8
  %306 = fpext float %303 to double
  %307 = fmul double %305, %306
  %308 = fadd double %300, %307
  %309 = add nuw nsw i64 %299, 1
  %310 = add i64 %301, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %298, !llvm.loop !88

312:                                              ; preds = %298, %293
  %313 = phi double [ %294, %293 ], [ %308, %298 ]
  %314 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 2
  store i32 0, i32* %314, align 4
  %315 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 1
  store i32 0, i32* %315, align 8
  %316 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 3, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp slt i32 %317, 0
  store double %313, double* %281, align 8
  br i1 %318, label %358, label %319, !prof !2

319:                                              ; preds = %312
  store i32 0, i32* %273, align 4
  br label %358

320:                                              ; preds = %320, %291
  %321 = phi i64 [ 0, %291 ], [ %355, %320 ]
  %322 = phi double [ %282, %291 ], [ %354, %320 ]
  %323 = phi i64 [ %292, %291 ], [ %356, %320 ]
  %324 = getelementptr inbounds float, float* %286, i64 %321
  %325 = load float, float* %324, align 4
  %326 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %321, i32 0
  %327 = load double, double* %326, align 8
  %328 = fpext float %325 to double
  %329 = fmul double %327, %328
  %330 = fadd double %322, %329
  %331 = or i64 %321, 1
  %332 = getelementptr inbounds float, float* %286, i64 %331
  %333 = load float, float* %332, align 4
  %334 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %331, i32 0
  %335 = load double, double* %334, align 8
  %336 = fpext float %333 to double
  %337 = fmul double %335, %336
  %338 = fadd double %330, %337
  %339 = or i64 %321, 2
  %340 = getelementptr inbounds float, float* %286, i64 %339
  %341 = load float, float* %340, align 4
  %342 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %339, i32 0
  %343 = load double, double* %342, align 8
  %344 = fpext float %341 to double
  %345 = fmul double %343, %344
  %346 = fadd double %338, %345
  %347 = or i64 %321, 3
  %348 = getelementptr inbounds float, float* %286, i64 %347
  %349 = load float, float* %348, align 4
  %350 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %287, i64 %347, i32 0
  %351 = load double, double* %350, align 8
  %352 = fpext float %349 to double
  %353 = fmul double %351, %352
  %354 = fadd double %346, %353
  %355 = add nuw nsw i64 %321, 4
  %356 = add i64 %323, -4
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %293, label %320

358:                                              ; preds = %268, %272, %276, %312, %319
  %359 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %166, i64 0, i32 0, i32 0
  %360 = load double, double* %359, align 8
  %361 = load <2 x double>, <2 x double>* %7, align 16
  %362 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %269, i64 0, i32 0, i32 0
  %363 = load double, double* %362, align 8
  %364 = insertelement <2 x double> undef, double %360, i32 0
  %365 = insertelement <2 x double> %364, double %363, i32 1
  %366 = fadd <2 x double> %361, %365
  store <2 x double> %366, <2 x double>* %7, align 16
  %367 = bitcast %"struct.CFF::point_t"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %367) #6
  %368 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %9, i64 0, i32 0, i32 0
  %369 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %9, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %367, i8* nonnull align 16 %150, i64 16, i1 false)
  %370 = load i32, i32* %21, align 4
  %371 = icmp ugt i32 %370, 3
  br i1 %371, label %374, label %372, !prof !3

372:                                              ; preds = %358
  %373 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %373, align 8
  br label %374

374:                                              ; preds = %372, %358
  %375 = load i32, i32* %47, align 4
  %376 = icmp ugt i32 %375, 3
  br i1 %376, label %378, label %377, !prof !3

377:                                              ; preds = %374
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %382

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %380 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %379, align 8
  %381 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %380, i64 3
  br label %382

382:                                              ; preds = %378, %377
  %383 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %377 ], [ %381, %378 ]
  %384 = load i8, i8* %56, align 8, !range !6
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %472, label %386

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 3, i32 1
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %472, label %390

390:                                              ; preds = %386
  %391 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = icmp eq i32 %392, %388
  br i1 %393, label %394, label %472, !prof !3

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 0, i32 0
  %396 = load double, double* %395, align 8
  %397 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %398 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 3, i32 2
  %399 = zext i32 %388 to i64
  %400 = load float*, float** %397, align 8
  %401 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %398, align 8
  %402 = add nsw i64 %399, -1
  %403 = and i64 %399, 3
  %404 = icmp ult i64 %402, 3
  br i1 %404, label %407, label %405

405:                                              ; preds = %394
  %406 = sub nsw i64 %399, %403
  br label %434

407:                                              ; preds = %434, %394
  %408 = phi double [ undef, %394 ], [ %468, %434 ]
  %409 = phi i64 [ 0, %394 ], [ %469, %434 ]
  %410 = phi double [ %396, %394 ], [ %468, %434 ]
  %411 = icmp eq i64 %403, 0
  br i1 %411, label %426, label %412

412:                                              ; preds = %407, %412
  %413 = phi i64 [ %423, %412 ], [ %409, %407 ]
  %414 = phi double [ %422, %412 ], [ %410, %407 ]
  %415 = phi i64 [ %424, %412 ], [ %403, %407 ]
  %416 = getelementptr inbounds float, float* %400, i64 %413
  %417 = load float, float* %416, align 4
  %418 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %413, i32 0
  %419 = load double, double* %418, align 8
  %420 = fpext float %417 to double
  %421 = fmul double %419, %420
  %422 = fadd double %414, %421
  %423 = add nuw nsw i64 %413, 1
  %424 = add i64 %415, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %412, !llvm.loop !89

426:                                              ; preds = %412, %407
  %427 = phi double [ %408, %407 ], [ %422, %412 ]
  %428 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 2
  store i32 0, i32* %428, align 4
  %429 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 1
  store i32 0, i32* %429, align 8
  %430 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 3, i32 0
  %431 = load i32, i32* %430, align 8
  %432 = icmp slt i32 %431, 0
  store double %427, double* %395, align 8
  br i1 %432, label %472, label %433, !prof !2

433:                                              ; preds = %426
  store i32 0, i32* %387, align 4
  br label %472

434:                                              ; preds = %434, %405
  %435 = phi i64 [ 0, %405 ], [ %469, %434 ]
  %436 = phi double [ %396, %405 ], [ %468, %434 ]
  %437 = phi i64 [ %406, %405 ], [ %470, %434 ]
  %438 = getelementptr inbounds float, float* %400, i64 %435
  %439 = load float, float* %438, align 4
  %440 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %435, i32 0
  %441 = load double, double* %440, align 8
  %442 = fpext float %439 to double
  %443 = fmul double %441, %442
  %444 = fadd double %436, %443
  %445 = or i64 %435, 1
  %446 = getelementptr inbounds float, float* %400, i64 %445
  %447 = load float, float* %446, align 4
  %448 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %445, i32 0
  %449 = load double, double* %448, align 8
  %450 = fpext float %447 to double
  %451 = fmul double %449, %450
  %452 = fadd double %444, %451
  %453 = or i64 %435, 2
  %454 = getelementptr inbounds float, float* %400, i64 %453
  %455 = load float, float* %454, align 4
  %456 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %453, i32 0
  %457 = load double, double* %456, align 8
  %458 = fpext float %455 to double
  %459 = fmul double %457, %458
  %460 = fadd double %452, %459
  %461 = or i64 %435, 3
  %462 = getelementptr inbounds float, float* %400, i64 %461
  %463 = load float, float* %462, align 4
  %464 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %401, i64 %461, i32 0
  %465 = load double, double* %464, align 8
  %466 = fpext float %463 to double
  %467 = fmul double %465, %466
  %468 = fadd double %460, %467
  %469 = add nuw nsw i64 %435, 4
  %470 = add i64 %437, -4
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %407, label %434

472:                                              ; preds = %382, %386, %390, %426, %433
  %473 = load double, double* %369, align 8
  %474 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %383, i64 0, i32 0, i32 0
  %475 = load double, double* %474, align 8
  %476 = fadd double %473, %475
  store double %476, double* %369, align 8
  %477 = load i32, i32* %21, align 4
  %478 = icmp ult i32 %477, 12
  br i1 %478, label %1329, label %479

479:                                              ; preds = %472
  %480 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %481 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %482 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %483 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  br label %484

484:                                              ; preds = %479, %1321
  %485 = phi i32 [ 12, %479 ], [ %1326, %1321 ]
  %486 = phi i32 [ 4, %479 ], [ %485, %1321 ]
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %9)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %42, i64 16, i1 false)
  %487 = load i32, i32* %21, align 4
  %488 = icmp ugt i32 %487, %486
  br i1 %488, label %490, label %489, !prof !3

489:                                              ; preds = %484
  store i8 1, i8* %480, align 8
  br label %490

490:                                              ; preds = %489, %484
  %491 = load i32, i32* %47, align 4
  %492 = icmp ugt i32 %491, %486
  br i1 %492, label %494, label %493, !prof !3

493:                                              ; preds = %490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %498

494:                                              ; preds = %490
  %495 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %496 = zext i32 %486 to i64
  %497 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %495, i64 %496
  br label %498

498:                                              ; preds = %494, %493
  %499 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %493 ], [ %497, %494 ]
  %500 = load i8, i8* %56, align 8, !range !6
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %586, label %502

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 3, i32 1
  %504 = load i32, i32* %503, align 4
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %586, label %506

506:                                              ; preds = %502
  %507 = load i32, i32* %482, align 4
  %508 = icmp eq i32 %507, %504
  br i1 %508, label %509, label %586, !prof !3

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 0, i32 0
  %511 = load double, double* %510, align 8
  %512 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 3, i32 2
  %513 = zext i32 %504 to i64
  %514 = load float*, float** %483, align 8
  %515 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %512, align 8
  %516 = add nsw i64 %513, -1
  %517 = and i64 %513, 3
  %518 = icmp ult i64 %516, 3
  br i1 %518, label %521, label %519

519:                                              ; preds = %509
  %520 = sub nsw i64 %513, %517
  br label %548

521:                                              ; preds = %548, %509
  %522 = phi double [ undef, %509 ], [ %582, %548 ]
  %523 = phi i64 [ 0, %509 ], [ %583, %548 ]
  %524 = phi double [ %511, %509 ], [ %582, %548 ]
  %525 = icmp eq i64 %517, 0
  br i1 %525, label %540, label %526

526:                                              ; preds = %521, %526
  %527 = phi i64 [ %537, %526 ], [ %523, %521 ]
  %528 = phi double [ %536, %526 ], [ %524, %521 ]
  %529 = phi i64 [ %538, %526 ], [ %517, %521 ]
  %530 = getelementptr inbounds float, float* %514, i64 %527
  %531 = load float, float* %530, align 4
  %532 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %527, i32 0
  %533 = load double, double* %532, align 8
  %534 = fpext float %531 to double
  %535 = fmul double %533, %534
  %536 = fadd double %528, %535
  %537 = add nuw nsw i64 %527, 1
  %538 = add i64 %529, -1
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %526, !llvm.loop !90

540:                                              ; preds = %526, %521
  %541 = phi double [ %522, %521 ], [ %536, %526 ]
  %542 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 2
  store i32 0, i32* %542, align 4
  %543 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 1
  store i32 0, i32* %543, align 8
  %544 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 3, i32 0
  %545 = load i32, i32* %544, align 8
  %546 = icmp slt i32 %545, 0
  store double %541, double* %510, align 8
  br i1 %546, label %586, label %547, !prof !2

547:                                              ; preds = %540
  store i32 0, i32* %503, align 4
  br label %586

548:                                              ; preds = %548, %519
  %549 = phi i64 [ 0, %519 ], [ %583, %548 ]
  %550 = phi double [ %511, %519 ], [ %582, %548 ]
  %551 = phi i64 [ %520, %519 ], [ %584, %548 ]
  %552 = getelementptr inbounds float, float* %514, i64 %549
  %553 = load float, float* %552, align 4
  %554 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %549, i32 0
  %555 = load double, double* %554, align 8
  %556 = fpext float %553 to double
  %557 = fmul double %555, %556
  %558 = fadd double %550, %557
  %559 = or i64 %549, 1
  %560 = getelementptr inbounds float, float* %514, i64 %559
  %561 = load float, float* %560, align 4
  %562 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %559, i32 0
  %563 = load double, double* %562, align 8
  %564 = fpext float %561 to double
  %565 = fmul double %563, %564
  %566 = fadd double %558, %565
  %567 = or i64 %549, 2
  %568 = getelementptr inbounds float, float* %514, i64 %567
  %569 = load float, float* %568, align 4
  %570 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %567, i32 0
  %571 = load double, double* %570, align 8
  %572 = fpext float %569 to double
  %573 = fmul double %571, %572
  %574 = fadd double %566, %573
  %575 = or i64 %549, 3
  %576 = getelementptr inbounds float, float* %514, i64 %575
  %577 = load float, float* %576, align 4
  %578 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %515, i64 %575, i32 0
  %579 = load double, double* %578, align 8
  %580 = fpext float %577 to double
  %581 = fmul double %579, %580
  %582 = fadd double %574, %581
  %583 = add nuw nsw i64 %549, 4
  %584 = add i64 %551, -4
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %521, label %548

586:                                              ; preds = %498, %502, %506, %540, %547
  %587 = load double, double* %40, align 8
  %588 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %499, i64 0, i32 0, i32 0
  %589 = load double, double* %588, align 8
  %590 = fadd double %587, %589
  store double %590, double* %40, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %150, i8* nonnull align 8 %38, i64 16, i1 false)
  %591 = or i32 %486, 1
  %592 = load i32, i32* %21, align 4
  %593 = icmp ugt i32 %592, %591
  br i1 %593, label %595, label %594, !prof !3

594:                                              ; preds = %586
  store i8 1, i8* %480, align 8
  br label %595

595:                                              ; preds = %594, %586
  %596 = load i32, i32* %47, align 4
  %597 = icmp ugt i32 %596, %591
  br i1 %597, label %599, label %598, !prof !3

598:                                              ; preds = %595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %603

599:                                              ; preds = %595
  %600 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %601 = zext i32 %591 to i64
  %602 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %600, i64 %601
  br label %603

603:                                              ; preds = %599, %598
  %604 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %598 ], [ %602, %599 ]
  %605 = load i8, i8* %56, align 8, !range !6
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %691, label %607

607:                                              ; preds = %603
  %608 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 3, i32 1
  %609 = load i32, i32* %608, align 4
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %691, label %611

611:                                              ; preds = %607
  %612 = load i32, i32* %482, align 4
  %613 = icmp eq i32 %612, %609
  br i1 %613, label %614, label %691, !prof !3

614:                                              ; preds = %611
  %615 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 0, i32 0
  %616 = load double, double* %615, align 8
  %617 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 3, i32 2
  %618 = zext i32 %609 to i64
  %619 = load float*, float** %483, align 8
  %620 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %617, align 8
  %621 = add nsw i64 %618, -1
  %622 = and i64 %618, 3
  %623 = icmp ult i64 %621, 3
  br i1 %623, label %626, label %624

624:                                              ; preds = %614
  %625 = sub nsw i64 %618, %622
  br label %653

626:                                              ; preds = %653, %614
  %627 = phi double [ undef, %614 ], [ %687, %653 ]
  %628 = phi i64 [ 0, %614 ], [ %688, %653 ]
  %629 = phi double [ %616, %614 ], [ %687, %653 ]
  %630 = icmp eq i64 %622, 0
  br i1 %630, label %645, label %631

631:                                              ; preds = %626, %631
  %632 = phi i64 [ %642, %631 ], [ %628, %626 ]
  %633 = phi double [ %641, %631 ], [ %629, %626 ]
  %634 = phi i64 [ %643, %631 ], [ %622, %626 ]
  %635 = getelementptr inbounds float, float* %619, i64 %632
  %636 = load float, float* %635, align 4
  %637 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %632, i32 0
  %638 = load double, double* %637, align 8
  %639 = fpext float %636 to double
  %640 = fmul double %638, %639
  %641 = fadd double %633, %640
  %642 = add nuw nsw i64 %632, 1
  %643 = add i64 %634, -1
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %645, label %631, !llvm.loop !91

645:                                              ; preds = %631, %626
  %646 = phi double [ %627, %626 ], [ %641, %631 ]
  %647 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 2
  store i32 0, i32* %647, align 4
  %648 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 1
  store i32 0, i32* %648, align 8
  %649 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 3, i32 0
  %650 = load i32, i32* %649, align 8
  %651 = icmp slt i32 %650, 0
  store double %646, double* %615, align 8
  br i1 %651, label %691, label %652, !prof !2

652:                                              ; preds = %645
  store i32 0, i32* %608, align 4
  br label %691

653:                                              ; preds = %653, %624
  %654 = phi i64 [ 0, %624 ], [ %688, %653 ]
  %655 = phi double [ %616, %624 ], [ %687, %653 ]
  %656 = phi i64 [ %625, %624 ], [ %689, %653 ]
  %657 = getelementptr inbounds float, float* %619, i64 %654
  %658 = load float, float* %657, align 4
  %659 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %654, i32 0
  %660 = load double, double* %659, align 8
  %661 = fpext float %658 to double
  %662 = fmul double %660, %661
  %663 = fadd double %655, %662
  %664 = or i64 %654, 1
  %665 = getelementptr inbounds float, float* %619, i64 %664
  %666 = load float, float* %665, align 4
  %667 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %664, i32 0
  %668 = load double, double* %667, align 8
  %669 = fpext float %666 to double
  %670 = fmul double %668, %669
  %671 = fadd double %663, %670
  %672 = or i64 %654, 2
  %673 = getelementptr inbounds float, float* %619, i64 %672
  %674 = load float, float* %673, align 4
  %675 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %672, i32 0
  %676 = load double, double* %675, align 8
  %677 = fpext float %674 to double
  %678 = fmul double %676, %677
  %679 = fadd double %671, %678
  %680 = or i64 %654, 3
  %681 = getelementptr inbounds float, float* %619, i64 %680
  %682 = load float, float* %681, align 4
  %683 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %620, i64 %680, i32 0
  %684 = load double, double* %683, align 8
  %685 = fpext float %682 to double
  %686 = fmul double %684, %685
  %687 = fadd double %679, %686
  %688 = add nuw nsw i64 %654, 4
  %689 = add i64 %656, -4
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %626, label %653

691:                                              ; preds = %603, %607, %611, %645, %652
  %692 = or i32 %486, 2
  %693 = load i32, i32* %21, align 4
  %694 = icmp ugt i32 %693, %692
  br i1 %694, label %696, label %695, !prof !3

695:                                              ; preds = %691
  store i8 1, i8* %480, align 8
  br label %696

696:                                              ; preds = %695, %691
  %697 = load i32, i32* %47, align 4
  %698 = icmp ugt i32 %697, %692
  br i1 %698, label %700, label %699, !prof !3

699:                                              ; preds = %696
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %704

700:                                              ; preds = %696
  %701 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %702 = zext i32 %692 to i64
  %703 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %701, i64 %702
  br label %704

704:                                              ; preds = %700, %699
  %705 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %699 ], [ %703, %700 ]
  %706 = load i8, i8* %56, align 8, !range !6
  %707 = icmp eq i8 %706, 0
  br i1 %707, label %792, label %708

708:                                              ; preds = %704
  %709 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 3, i32 1
  %710 = load i32, i32* %709, align 4
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %792, label %712

712:                                              ; preds = %708
  %713 = load i32, i32* %482, align 4
  %714 = icmp eq i32 %713, %710
  br i1 %714, label %715, label %792, !prof !3

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 0, i32 0
  %717 = load double, double* %716, align 8
  %718 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 3, i32 2
  %719 = zext i32 %710 to i64
  %720 = load float*, float** %483, align 8
  %721 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %718, align 8
  %722 = add nsw i64 %719, -1
  %723 = and i64 %719, 3
  %724 = icmp ult i64 %722, 3
  br i1 %724, label %727, label %725

725:                                              ; preds = %715
  %726 = sub nsw i64 %719, %723
  br label %754

727:                                              ; preds = %754, %715
  %728 = phi double [ undef, %715 ], [ %788, %754 ]
  %729 = phi i64 [ 0, %715 ], [ %789, %754 ]
  %730 = phi double [ %717, %715 ], [ %788, %754 ]
  %731 = icmp eq i64 %723, 0
  br i1 %731, label %746, label %732

732:                                              ; preds = %727, %732
  %733 = phi i64 [ %743, %732 ], [ %729, %727 ]
  %734 = phi double [ %742, %732 ], [ %730, %727 ]
  %735 = phi i64 [ %744, %732 ], [ %723, %727 ]
  %736 = getelementptr inbounds float, float* %720, i64 %733
  %737 = load float, float* %736, align 4
  %738 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %733, i32 0
  %739 = load double, double* %738, align 8
  %740 = fpext float %737 to double
  %741 = fmul double %739, %740
  %742 = fadd double %734, %741
  %743 = add nuw nsw i64 %733, 1
  %744 = add i64 %735, -1
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %732, !llvm.loop !92

746:                                              ; preds = %732, %727
  %747 = phi double [ %728, %727 ], [ %742, %732 ]
  %748 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 2
  store i32 0, i32* %748, align 4
  %749 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 1
  store i32 0, i32* %749, align 8
  %750 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 3, i32 0
  %751 = load i32, i32* %750, align 8
  %752 = icmp slt i32 %751, 0
  store double %747, double* %716, align 8
  br i1 %752, label %792, label %753, !prof !2

753:                                              ; preds = %746
  store i32 0, i32* %709, align 4
  br label %792

754:                                              ; preds = %754, %725
  %755 = phi i64 [ 0, %725 ], [ %789, %754 ]
  %756 = phi double [ %717, %725 ], [ %788, %754 ]
  %757 = phi i64 [ %726, %725 ], [ %790, %754 ]
  %758 = getelementptr inbounds float, float* %720, i64 %755
  %759 = load float, float* %758, align 4
  %760 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %755, i32 0
  %761 = load double, double* %760, align 8
  %762 = fpext float %759 to double
  %763 = fmul double %761, %762
  %764 = fadd double %756, %763
  %765 = or i64 %755, 1
  %766 = getelementptr inbounds float, float* %720, i64 %765
  %767 = load float, float* %766, align 4
  %768 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %765, i32 0
  %769 = load double, double* %768, align 8
  %770 = fpext float %767 to double
  %771 = fmul double %769, %770
  %772 = fadd double %764, %771
  %773 = or i64 %755, 2
  %774 = getelementptr inbounds float, float* %720, i64 %773
  %775 = load float, float* %774, align 4
  %776 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %773, i32 0
  %777 = load double, double* %776, align 8
  %778 = fpext float %775 to double
  %779 = fmul double %777, %778
  %780 = fadd double %772, %779
  %781 = or i64 %755, 3
  %782 = getelementptr inbounds float, float* %720, i64 %781
  %783 = load float, float* %782, align 4
  %784 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %721, i64 %781, i32 0
  %785 = load double, double* %784, align 8
  %786 = fpext float %783 to double
  %787 = fmul double %785, %786
  %788 = fadd double %780, %787
  %789 = add nuw nsw i64 %755, 4
  %790 = add i64 %757, -4
  %791 = icmp eq i64 %790, 0
  br i1 %791, label %727, label %754

792:                                              ; preds = %704, %708, %712, %746, %753
  %793 = load double, double* %151, align 16
  %794 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %604, i64 0, i32 0, i32 0
  %795 = load double, double* %794, align 8
  %796 = fadd double %793, %795
  store double %796, double* %151, align 16
  %797 = load double, double* %152, align 8
  %798 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %705, i64 0, i32 0, i32 0
  %799 = load double, double* %798, align 8
  %800 = fadd double %797, %799
  store double %800, double* %152, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %367, i8* nonnull align 16 %150, i64 16, i1 false)
  %801 = or i32 %486, 3
  %802 = load i32, i32* %21, align 4
  %803 = icmp ugt i32 %802, %801
  br i1 %803, label %805, label %804, !prof !3

804:                                              ; preds = %792
  store i8 1, i8* %480, align 8
  br label %805

805:                                              ; preds = %804, %792
  %806 = load i32, i32* %47, align 4
  %807 = icmp ugt i32 %806, %801
  br i1 %807, label %809, label %808, !prof !3

808:                                              ; preds = %805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %813

809:                                              ; preds = %805
  %810 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %811 = zext i32 %801 to i64
  %812 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %810, i64 %811
  br label %813

813:                                              ; preds = %809, %808
  %814 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %808 ], [ %812, %809 ]
  %815 = load i8, i8* %56, align 8, !range !6
  %816 = icmp eq i8 %815, 0
  br i1 %816, label %901, label %817

817:                                              ; preds = %813
  %818 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 3, i32 1
  %819 = load i32, i32* %818, align 4
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %901, label %821

821:                                              ; preds = %817
  %822 = load i32, i32* %482, align 4
  %823 = icmp eq i32 %822, %819
  br i1 %823, label %824, label %901, !prof !3

824:                                              ; preds = %821
  %825 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 0, i32 0
  %826 = load double, double* %825, align 8
  %827 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 3, i32 2
  %828 = zext i32 %819 to i64
  %829 = load float*, float** %483, align 8
  %830 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %827, align 8
  %831 = add nsw i64 %828, -1
  %832 = and i64 %828, 3
  %833 = icmp ult i64 %831, 3
  br i1 %833, label %836, label %834

834:                                              ; preds = %824
  %835 = sub nsw i64 %828, %832
  br label %863

836:                                              ; preds = %863, %824
  %837 = phi double [ undef, %824 ], [ %897, %863 ]
  %838 = phi i64 [ 0, %824 ], [ %898, %863 ]
  %839 = phi double [ %826, %824 ], [ %897, %863 ]
  %840 = icmp eq i64 %832, 0
  br i1 %840, label %855, label %841

841:                                              ; preds = %836, %841
  %842 = phi i64 [ %852, %841 ], [ %838, %836 ]
  %843 = phi double [ %851, %841 ], [ %839, %836 ]
  %844 = phi i64 [ %853, %841 ], [ %832, %836 ]
  %845 = getelementptr inbounds float, float* %829, i64 %842
  %846 = load float, float* %845, align 4
  %847 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %842, i32 0
  %848 = load double, double* %847, align 8
  %849 = fpext float %846 to double
  %850 = fmul double %848, %849
  %851 = fadd double %843, %850
  %852 = add nuw nsw i64 %842, 1
  %853 = add i64 %844, -1
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %855, label %841, !llvm.loop !93

855:                                              ; preds = %841, %836
  %856 = phi double [ %837, %836 ], [ %851, %841 ]
  %857 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 2
  store i32 0, i32* %857, align 4
  %858 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 1
  store i32 0, i32* %858, align 8
  %859 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 3, i32 0
  %860 = load i32, i32* %859, align 8
  %861 = icmp slt i32 %860, 0
  store double %856, double* %825, align 8
  br i1 %861, label %901, label %862, !prof !2

862:                                              ; preds = %855
  store i32 0, i32* %818, align 4
  br label %901

863:                                              ; preds = %863, %834
  %864 = phi i64 [ 0, %834 ], [ %898, %863 ]
  %865 = phi double [ %826, %834 ], [ %897, %863 ]
  %866 = phi i64 [ %835, %834 ], [ %899, %863 ]
  %867 = getelementptr inbounds float, float* %829, i64 %864
  %868 = load float, float* %867, align 4
  %869 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %864, i32 0
  %870 = load double, double* %869, align 8
  %871 = fpext float %868 to double
  %872 = fmul double %870, %871
  %873 = fadd double %865, %872
  %874 = or i64 %864, 1
  %875 = getelementptr inbounds float, float* %829, i64 %874
  %876 = load float, float* %875, align 4
  %877 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %874, i32 0
  %878 = load double, double* %877, align 8
  %879 = fpext float %876 to double
  %880 = fmul double %878, %879
  %881 = fadd double %873, %880
  %882 = or i64 %864, 2
  %883 = getelementptr inbounds float, float* %829, i64 %882
  %884 = load float, float* %883, align 4
  %885 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %882, i32 0
  %886 = load double, double* %885, align 8
  %887 = fpext float %884 to double
  %888 = fmul double %886, %887
  %889 = fadd double %881, %888
  %890 = or i64 %864, 3
  %891 = getelementptr inbounds float, float* %829, i64 %890
  %892 = load float, float* %891, align 4
  %893 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %830, i64 %890, i32 0
  %894 = load double, double* %893, align 8
  %895 = fpext float %892 to double
  %896 = fmul double %894, %895
  %897 = fadd double %889, %896
  %898 = add nuw nsw i64 %864, 4
  %899 = add i64 %866, -4
  %900 = icmp eq i64 %899, 0
  br i1 %900, label %836, label %863

901:                                              ; preds = %813, %817, %821, %855, %862
  %902 = load double, double* %368, align 8
  %903 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %814, i64 0, i32 0, i32 0
  %904 = load double, double* %903, align 8
  %905 = fadd double %902, %904
  store double %905, double* %368, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %9)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %367, i64 16, i1 false)
  %906 = add i32 %486, 4
  %907 = load i32, i32* %21, align 4
  %908 = icmp ugt i32 %907, %906
  br i1 %908, label %910, label %909, !prof !3

909:                                              ; preds = %901
  store i8 1, i8* %480, align 8
  br label %910

910:                                              ; preds = %909, %901
  %911 = load i32, i32* %47, align 4
  %912 = icmp ugt i32 %911, %906
  br i1 %912, label %914, label %913, !prof !3

913:                                              ; preds = %910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %918

914:                                              ; preds = %910
  %915 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %916 = zext i32 %906 to i64
  %917 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %915, i64 %916
  br label %918

918:                                              ; preds = %914, %913
  %919 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %913 ], [ %917, %914 ]
  %920 = load i8, i8* %56, align 8, !range !6
  %921 = icmp eq i8 %920, 0
  br i1 %921, label %1006, label %922

922:                                              ; preds = %918
  %923 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 3, i32 1
  %924 = load i32, i32* %923, align 4
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %1006, label %926

926:                                              ; preds = %922
  %927 = load i32, i32* %482, align 4
  %928 = icmp eq i32 %927, %924
  br i1 %928, label %929, label %1006, !prof !3

929:                                              ; preds = %926
  %930 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 0, i32 0
  %931 = load double, double* %930, align 8
  %932 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 3, i32 2
  %933 = zext i32 %924 to i64
  %934 = load float*, float** %483, align 8
  %935 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %932, align 8
  %936 = add nsw i64 %933, -1
  %937 = and i64 %933, 3
  %938 = icmp ult i64 %936, 3
  br i1 %938, label %941, label %939

939:                                              ; preds = %929
  %940 = sub nsw i64 %933, %937
  br label %968

941:                                              ; preds = %968, %929
  %942 = phi double [ undef, %929 ], [ %1002, %968 ]
  %943 = phi i64 [ 0, %929 ], [ %1003, %968 ]
  %944 = phi double [ %931, %929 ], [ %1002, %968 ]
  %945 = icmp eq i64 %937, 0
  br i1 %945, label %960, label %946

946:                                              ; preds = %941, %946
  %947 = phi i64 [ %957, %946 ], [ %943, %941 ]
  %948 = phi double [ %956, %946 ], [ %944, %941 ]
  %949 = phi i64 [ %958, %946 ], [ %937, %941 ]
  %950 = getelementptr inbounds float, float* %934, i64 %947
  %951 = load float, float* %950, align 4
  %952 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %947, i32 0
  %953 = load double, double* %952, align 8
  %954 = fpext float %951 to double
  %955 = fmul double %953, %954
  %956 = fadd double %948, %955
  %957 = add nuw nsw i64 %947, 1
  %958 = add i64 %949, -1
  %959 = icmp eq i64 %958, 0
  br i1 %959, label %960, label %946, !llvm.loop !94

960:                                              ; preds = %946, %941
  %961 = phi double [ %942, %941 ], [ %956, %946 ]
  %962 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 2
  store i32 0, i32* %962, align 4
  %963 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 1
  store i32 0, i32* %963, align 8
  %964 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 3, i32 0
  %965 = load i32, i32* %964, align 8
  %966 = icmp slt i32 %965, 0
  store double %961, double* %930, align 8
  br i1 %966, label %1006, label %967, !prof !2

967:                                              ; preds = %960
  store i32 0, i32* %923, align 4
  br label %1006

968:                                              ; preds = %968, %939
  %969 = phi i64 [ 0, %939 ], [ %1003, %968 ]
  %970 = phi double [ %931, %939 ], [ %1002, %968 ]
  %971 = phi i64 [ %940, %939 ], [ %1004, %968 ]
  %972 = getelementptr inbounds float, float* %934, i64 %969
  %973 = load float, float* %972, align 4
  %974 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %969, i32 0
  %975 = load double, double* %974, align 8
  %976 = fpext float %973 to double
  %977 = fmul double %975, %976
  %978 = fadd double %970, %977
  %979 = or i64 %969, 1
  %980 = getelementptr inbounds float, float* %934, i64 %979
  %981 = load float, float* %980, align 4
  %982 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %979, i32 0
  %983 = load double, double* %982, align 8
  %984 = fpext float %981 to double
  %985 = fmul double %983, %984
  %986 = fadd double %978, %985
  %987 = or i64 %969, 2
  %988 = getelementptr inbounds float, float* %934, i64 %987
  %989 = load float, float* %988, align 4
  %990 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %987, i32 0
  %991 = load double, double* %990, align 8
  %992 = fpext float %989 to double
  %993 = fmul double %991, %992
  %994 = fadd double %986, %993
  %995 = or i64 %969, 3
  %996 = getelementptr inbounds float, float* %934, i64 %995
  %997 = load float, float* %996, align 4
  %998 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %935, i64 %995, i32 0
  %999 = load double, double* %998, align 8
  %1000 = fpext float %997 to double
  %1001 = fmul double %999, %1000
  %1002 = fadd double %994, %1001
  %1003 = add nuw nsw i64 %969, 4
  %1004 = add i64 %971, -4
  %1005 = icmp eq i64 %1004, 0
  br i1 %1005, label %941, label %968

1006:                                             ; preds = %918, %922, %926, %960, %967
  %1007 = load double, double* %39, align 8
  %1008 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %919, i64 0, i32 0, i32 0
  %1009 = load double, double* %1008, align 8
  %1010 = fadd double %1007, %1009
  store double %1010, double* %39, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %150, i8* nonnull align 8 %38, i64 16, i1 false)
  %1011 = add i32 %486, 5
  %1012 = load i32, i32* %21, align 4
  %1013 = icmp ugt i32 %1012, %1011
  br i1 %1013, label %1015, label %1014, !prof !3

1014:                                             ; preds = %1006
  store i8 1, i8* %480, align 8
  br label %1015

1015:                                             ; preds = %1014, %1006
  %1016 = load i32, i32* %47, align 4
  %1017 = icmp ugt i32 %1016, %1011
  br i1 %1017, label %1019, label %1018, !prof !3

1018:                                             ; preds = %1015
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1023

1019:                                             ; preds = %1015
  %1020 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %1021 = zext i32 %1011 to i64
  %1022 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1020, i64 %1021
  br label %1023

1023:                                             ; preds = %1019, %1018
  %1024 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1018 ], [ %1022, %1019 ]
  %1025 = load i8, i8* %56, align 8, !range !6
  %1026 = icmp eq i8 %1025, 0
  br i1 %1026, label %1111, label %1027

1027:                                             ; preds = %1023
  %1028 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 3, i32 1
  %1029 = load i32, i32* %1028, align 4
  %1030 = icmp eq i32 %1029, 0
  br i1 %1030, label %1111, label %1031

1031:                                             ; preds = %1027
  %1032 = load i32, i32* %482, align 4
  %1033 = icmp eq i32 %1032, %1029
  br i1 %1033, label %1034, label %1111, !prof !3

1034:                                             ; preds = %1031
  %1035 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 0, i32 0
  %1036 = load double, double* %1035, align 8
  %1037 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 3, i32 2
  %1038 = zext i32 %1029 to i64
  %1039 = load float*, float** %483, align 8
  %1040 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1037, align 8
  %1041 = add nsw i64 %1038, -1
  %1042 = and i64 %1038, 3
  %1043 = icmp ult i64 %1041, 3
  br i1 %1043, label %1046, label %1044

1044:                                             ; preds = %1034
  %1045 = sub nsw i64 %1038, %1042
  br label %1073

1046:                                             ; preds = %1073, %1034
  %1047 = phi double [ undef, %1034 ], [ %1107, %1073 ]
  %1048 = phi i64 [ 0, %1034 ], [ %1108, %1073 ]
  %1049 = phi double [ %1036, %1034 ], [ %1107, %1073 ]
  %1050 = icmp eq i64 %1042, 0
  br i1 %1050, label %1065, label %1051

1051:                                             ; preds = %1046, %1051
  %1052 = phi i64 [ %1062, %1051 ], [ %1048, %1046 ]
  %1053 = phi double [ %1061, %1051 ], [ %1049, %1046 ]
  %1054 = phi i64 [ %1063, %1051 ], [ %1042, %1046 ]
  %1055 = getelementptr inbounds float, float* %1039, i64 %1052
  %1056 = load float, float* %1055, align 4
  %1057 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1052, i32 0
  %1058 = load double, double* %1057, align 8
  %1059 = fpext float %1056 to double
  %1060 = fmul double %1058, %1059
  %1061 = fadd double %1053, %1060
  %1062 = add nuw nsw i64 %1052, 1
  %1063 = add i64 %1054, -1
  %1064 = icmp eq i64 %1063, 0
  br i1 %1064, label %1065, label %1051, !llvm.loop !95

1065:                                             ; preds = %1051, %1046
  %1066 = phi double [ %1047, %1046 ], [ %1061, %1051 ]
  %1067 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 2
  store i32 0, i32* %1067, align 4
  %1068 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 1
  store i32 0, i32* %1068, align 8
  %1069 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 3, i32 0
  %1070 = load i32, i32* %1069, align 8
  %1071 = icmp slt i32 %1070, 0
  store double %1066, double* %1035, align 8
  br i1 %1071, label %1111, label %1072, !prof !2

1072:                                             ; preds = %1065
  store i32 0, i32* %1028, align 4
  br label %1111

1073:                                             ; preds = %1073, %1044
  %1074 = phi i64 [ 0, %1044 ], [ %1108, %1073 ]
  %1075 = phi double [ %1036, %1044 ], [ %1107, %1073 ]
  %1076 = phi i64 [ %1045, %1044 ], [ %1109, %1073 ]
  %1077 = getelementptr inbounds float, float* %1039, i64 %1074
  %1078 = load float, float* %1077, align 4
  %1079 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1074, i32 0
  %1080 = load double, double* %1079, align 8
  %1081 = fpext float %1078 to double
  %1082 = fmul double %1080, %1081
  %1083 = fadd double %1075, %1082
  %1084 = or i64 %1074, 1
  %1085 = getelementptr inbounds float, float* %1039, i64 %1084
  %1086 = load float, float* %1085, align 4
  %1087 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1084, i32 0
  %1088 = load double, double* %1087, align 8
  %1089 = fpext float %1086 to double
  %1090 = fmul double %1088, %1089
  %1091 = fadd double %1083, %1090
  %1092 = or i64 %1074, 2
  %1093 = getelementptr inbounds float, float* %1039, i64 %1092
  %1094 = load float, float* %1093, align 4
  %1095 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1092, i32 0
  %1096 = load double, double* %1095, align 8
  %1097 = fpext float %1094 to double
  %1098 = fmul double %1096, %1097
  %1099 = fadd double %1091, %1098
  %1100 = or i64 %1074, 3
  %1101 = getelementptr inbounds float, float* %1039, i64 %1100
  %1102 = load float, float* %1101, align 4
  %1103 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1040, i64 %1100, i32 0
  %1104 = load double, double* %1103, align 8
  %1105 = fpext float %1102 to double
  %1106 = fmul double %1104, %1105
  %1107 = fadd double %1099, %1106
  %1108 = add nuw nsw i64 %1074, 4
  %1109 = add i64 %1076, -4
  %1110 = icmp eq i64 %1109, 0
  br i1 %1110, label %1046, label %1073

1111:                                             ; preds = %1023, %1027, %1031, %1065, %1072
  %1112 = add i32 %486, 6
  %1113 = load i32, i32* %21, align 4
  %1114 = icmp ugt i32 %1113, %1112
  br i1 %1114, label %1116, label %1115, !prof !3

1115:                                             ; preds = %1111
  store i8 1, i8* %480, align 8
  br label %1116

1116:                                             ; preds = %1115, %1111
  %1117 = load i32, i32* %47, align 4
  %1118 = icmp ugt i32 %1117, %1112
  br i1 %1118, label %1120, label %1119, !prof !3

1119:                                             ; preds = %1116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1124

1120:                                             ; preds = %1116
  %1121 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %1122 = zext i32 %1112 to i64
  %1123 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1121, i64 %1122
  br label %1124

1124:                                             ; preds = %1120, %1119
  %1125 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1119 ], [ %1123, %1120 ]
  %1126 = load i8, i8* %56, align 8, !range !6
  %1127 = icmp eq i8 %1126, 0
  br i1 %1127, label %1212, label %1128

1128:                                             ; preds = %1124
  %1129 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 3, i32 1
  %1130 = load i32, i32* %1129, align 4
  %1131 = icmp eq i32 %1130, 0
  br i1 %1131, label %1212, label %1132

1132:                                             ; preds = %1128
  %1133 = load i32, i32* %482, align 4
  %1134 = icmp eq i32 %1133, %1130
  br i1 %1134, label %1135, label %1212, !prof !3

1135:                                             ; preds = %1132
  %1136 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 0, i32 0
  %1137 = load double, double* %1136, align 8
  %1138 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 3, i32 2
  %1139 = zext i32 %1130 to i64
  %1140 = load float*, float** %483, align 8
  %1141 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1138, align 8
  %1142 = add nsw i64 %1139, -1
  %1143 = and i64 %1139, 3
  %1144 = icmp ult i64 %1142, 3
  br i1 %1144, label %1147, label %1145

1145:                                             ; preds = %1135
  %1146 = sub nsw i64 %1139, %1143
  br label %1174

1147:                                             ; preds = %1174, %1135
  %1148 = phi double [ undef, %1135 ], [ %1208, %1174 ]
  %1149 = phi i64 [ 0, %1135 ], [ %1209, %1174 ]
  %1150 = phi double [ %1137, %1135 ], [ %1208, %1174 ]
  %1151 = icmp eq i64 %1143, 0
  br i1 %1151, label %1166, label %1152

1152:                                             ; preds = %1147, %1152
  %1153 = phi i64 [ %1163, %1152 ], [ %1149, %1147 ]
  %1154 = phi double [ %1162, %1152 ], [ %1150, %1147 ]
  %1155 = phi i64 [ %1164, %1152 ], [ %1143, %1147 ]
  %1156 = getelementptr inbounds float, float* %1140, i64 %1153
  %1157 = load float, float* %1156, align 4
  %1158 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1153, i32 0
  %1159 = load double, double* %1158, align 8
  %1160 = fpext float %1157 to double
  %1161 = fmul double %1159, %1160
  %1162 = fadd double %1154, %1161
  %1163 = add nuw nsw i64 %1153, 1
  %1164 = add i64 %1155, -1
  %1165 = icmp eq i64 %1164, 0
  br i1 %1165, label %1166, label %1152, !llvm.loop !96

1166:                                             ; preds = %1152, %1147
  %1167 = phi double [ %1148, %1147 ], [ %1162, %1152 ]
  %1168 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 2
  store i32 0, i32* %1168, align 4
  %1169 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 1
  store i32 0, i32* %1169, align 8
  %1170 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 3, i32 0
  %1171 = load i32, i32* %1170, align 8
  %1172 = icmp slt i32 %1171, 0
  store double %1167, double* %1136, align 8
  br i1 %1172, label %1212, label %1173, !prof !2

1173:                                             ; preds = %1166
  store i32 0, i32* %1129, align 4
  br label %1212

1174:                                             ; preds = %1174, %1145
  %1175 = phi i64 [ 0, %1145 ], [ %1209, %1174 ]
  %1176 = phi double [ %1137, %1145 ], [ %1208, %1174 ]
  %1177 = phi i64 [ %1146, %1145 ], [ %1210, %1174 ]
  %1178 = getelementptr inbounds float, float* %1140, i64 %1175
  %1179 = load float, float* %1178, align 4
  %1180 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1175, i32 0
  %1181 = load double, double* %1180, align 8
  %1182 = fpext float %1179 to double
  %1183 = fmul double %1181, %1182
  %1184 = fadd double %1176, %1183
  %1185 = or i64 %1175, 1
  %1186 = getelementptr inbounds float, float* %1140, i64 %1185
  %1187 = load float, float* %1186, align 4
  %1188 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1185, i32 0
  %1189 = load double, double* %1188, align 8
  %1190 = fpext float %1187 to double
  %1191 = fmul double %1189, %1190
  %1192 = fadd double %1184, %1191
  %1193 = or i64 %1175, 2
  %1194 = getelementptr inbounds float, float* %1140, i64 %1193
  %1195 = load float, float* %1194, align 4
  %1196 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1193, i32 0
  %1197 = load double, double* %1196, align 8
  %1198 = fpext float %1195 to double
  %1199 = fmul double %1197, %1198
  %1200 = fadd double %1192, %1199
  %1201 = or i64 %1175, 3
  %1202 = getelementptr inbounds float, float* %1140, i64 %1201
  %1203 = load float, float* %1202, align 4
  %1204 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1141, i64 %1201, i32 0
  %1205 = load double, double* %1204, align 8
  %1206 = fpext float %1203 to double
  %1207 = fmul double %1205, %1206
  %1208 = fadd double %1200, %1207
  %1209 = add nuw nsw i64 %1175, 4
  %1210 = add i64 %1177, -4
  %1211 = icmp eq i64 %1210, 0
  br i1 %1211, label %1147, label %1174

1212:                                             ; preds = %1124, %1128, %1132, %1166, %1173
  %1213 = load double, double* %151, align 16
  %1214 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1024, i64 0, i32 0, i32 0
  %1215 = load double, double* %1214, align 8
  %1216 = fadd double %1213, %1215
  store double %1216, double* %151, align 16
  %1217 = load double, double* %152, align 8
  %1218 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1125, i64 0, i32 0, i32 0
  %1219 = load double, double* %1218, align 8
  %1220 = fadd double %1217, %1219
  store double %1220, double* %152, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %367, i8* nonnull align 16 %150, i64 16, i1 false)
  %1221 = add i32 %486, 7
  %1222 = load i32, i32* %21, align 4
  %1223 = icmp ugt i32 %1222, %1221
  br i1 %1223, label %1225, label %1224, !prof !3

1224:                                             ; preds = %1212
  store i8 1, i8* %480, align 8
  br label %1225

1225:                                             ; preds = %1224, %1212
  %1226 = load i32, i32* %47, align 4
  %1227 = icmp ugt i32 %1226, %1221
  br i1 %1227, label %1229, label %1228, !prof !3

1228:                                             ; preds = %1225
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1233

1229:                                             ; preds = %1225
  %1230 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %481, align 8
  %1231 = zext i32 %1221 to i64
  %1232 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1230, i64 %1231
  br label %1233

1233:                                             ; preds = %1229, %1228
  %1234 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1228 ], [ %1232, %1229 ]
  %1235 = load i8, i8* %56, align 8, !range !6
  %1236 = icmp eq i8 %1235, 0
  br i1 %1236, label %1321, label %1237

1237:                                             ; preds = %1233
  %1238 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 3, i32 1
  %1239 = load i32, i32* %1238, align 4
  %1240 = icmp eq i32 %1239, 0
  br i1 %1240, label %1321, label %1241

1241:                                             ; preds = %1237
  %1242 = load i32, i32* %482, align 4
  %1243 = icmp eq i32 %1242, %1239
  br i1 %1243, label %1244, label %1321, !prof !3

1244:                                             ; preds = %1241
  %1245 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 0, i32 0
  %1246 = load double, double* %1245, align 8
  %1247 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 3, i32 2
  %1248 = zext i32 %1239 to i64
  %1249 = load float*, float** %483, align 8
  %1250 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1247, align 8
  %1251 = add nsw i64 %1248, -1
  %1252 = and i64 %1248, 3
  %1253 = icmp ult i64 %1251, 3
  br i1 %1253, label %1256, label %1254

1254:                                             ; preds = %1244
  %1255 = sub nsw i64 %1248, %1252
  br label %1283

1256:                                             ; preds = %1283, %1244
  %1257 = phi double [ undef, %1244 ], [ %1317, %1283 ]
  %1258 = phi i64 [ 0, %1244 ], [ %1318, %1283 ]
  %1259 = phi double [ %1246, %1244 ], [ %1317, %1283 ]
  %1260 = icmp eq i64 %1252, 0
  br i1 %1260, label %1275, label %1261

1261:                                             ; preds = %1256, %1261
  %1262 = phi i64 [ %1272, %1261 ], [ %1258, %1256 ]
  %1263 = phi double [ %1271, %1261 ], [ %1259, %1256 ]
  %1264 = phi i64 [ %1273, %1261 ], [ %1252, %1256 ]
  %1265 = getelementptr inbounds float, float* %1249, i64 %1262
  %1266 = load float, float* %1265, align 4
  %1267 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1262, i32 0
  %1268 = load double, double* %1267, align 8
  %1269 = fpext float %1266 to double
  %1270 = fmul double %1268, %1269
  %1271 = fadd double %1263, %1270
  %1272 = add nuw nsw i64 %1262, 1
  %1273 = add i64 %1264, -1
  %1274 = icmp eq i64 %1273, 0
  br i1 %1274, label %1275, label %1261, !llvm.loop !97

1275:                                             ; preds = %1261, %1256
  %1276 = phi double [ %1257, %1256 ], [ %1271, %1261 ]
  %1277 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 2
  store i32 0, i32* %1277, align 4
  %1278 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 1
  store i32 0, i32* %1278, align 8
  %1279 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 3, i32 0
  %1280 = load i32, i32* %1279, align 8
  %1281 = icmp slt i32 %1280, 0
  store double %1276, double* %1245, align 8
  br i1 %1281, label %1321, label %1282, !prof !2

1282:                                             ; preds = %1275
  store i32 0, i32* %1238, align 4
  br label %1321

1283:                                             ; preds = %1283, %1254
  %1284 = phi i64 [ 0, %1254 ], [ %1318, %1283 ]
  %1285 = phi double [ %1246, %1254 ], [ %1317, %1283 ]
  %1286 = phi i64 [ %1255, %1254 ], [ %1319, %1283 ]
  %1287 = getelementptr inbounds float, float* %1249, i64 %1284
  %1288 = load float, float* %1287, align 4
  %1289 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1284, i32 0
  %1290 = load double, double* %1289, align 8
  %1291 = fpext float %1288 to double
  %1292 = fmul double %1290, %1291
  %1293 = fadd double %1285, %1292
  %1294 = or i64 %1284, 1
  %1295 = getelementptr inbounds float, float* %1249, i64 %1294
  %1296 = load float, float* %1295, align 4
  %1297 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1294, i32 0
  %1298 = load double, double* %1297, align 8
  %1299 = fpext float %1296 to double
  %1300 = fmul double %1298, %1299
  %1301 = fadd double %1293, %1300
  %1302 = or i64 %1284, 2
  %1303 = getelementptr inbounds float, float* %1249, i64 %1302
  %1304 = load float, float* %1303, align 4
  %1305 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1302, i32 0
  %1306 = load double, double* %1305, align 8
  %1307 = fpext float %1304 to double
  %1308 = fmul double %1306, %1307
  %1309 = fadd double %1301, %1308
  %1310 = or i64 %1284, 3
  %1311 = getelementptr inbounds float, float* %1249, i64 %1310
  %1312 = load float, float* %1311, align 4
  %1313 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1250, i64 %1310, i32 0
  %1314 = load double, double* %1313, align 8
  %1315 = fpext float %1312 to double
  %1316 = fmul double %1314, %1315
  %1317 = fadd double %1309, %1316
  %1318 = add nuw nsw i64 %1284, 4
  %1319 = add i64 %1286, -4
  %1320 = icmp eq i64 %1319, 0
  br i1 %1320, label %1256, label %1283

1321:                                             ; preds = %1233, %1237, %1241, %1275, %1282
  %1322 = load double, double* %369, align 8
  %1323 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1234, i64 0, i32 0, i32 0
  %1324 = load double, double* %1323, align 8
  %1325 = fadd double %1322, %1324
  store double %1325, double* %369, align 8
  %1326 = add i32 %485, 8
  %1327 = load i32, i32* %21, align 4
  %1328 = icmp ugt i32 %1326, %1327
  br i1 %1328, label %1329, label %484

1329:                                             ; preds = %1321, %472
  %1330 = phi i32 [ 4, %472 ], [ %485, %1321 ]
  %1331 = phi i32 [ %477, %472 ], [ %1327, %1321 ]
  %1332 = icmp ult i32 %1330, %1331
  br i1 %1332, label %1333, label %1437

1333:                                             ; preds = %1329
  %1334 = load i32, i32* %47, align 4
  %1335 = icmp ugt i32 %1334, %1330
  br i1 %1335, label %1337, label %1336, !prof !3

1336:                                             ; preds = %1333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1342

1337:                                             ; preds = %1333
  %1338 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1339 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %1338, align 8
  %1340 = zext i32 %1330 to i64
  %1341 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1339, i64 %1340
  br label %1342

1342:                                             ; preds = %1337, %1336
  %1343 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1336 ], [ %1341, %1337 ]
  %1344 = load i8, i8* %56, align 8, !range !6
  %1345 = icmp eq i8 %1344, 0
  br i1 %1345, label %1432, label %1346

1346:                                             ; preds = %1342
  %1347 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 3, i32 1
  %1348 = load i32, i32* %1347, align 4
  %1349 = icmp eq i32 %1348, 0
  br i1 %1349, label %1432, label %1350

1350:                                             ; preds = %1346
  %1351 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %1352 = load i32, i32* %1351, align 4
  %1353 = icmp eq i32 %1352, %1348
  br i1 %1353, label %1354, label %1432, !prof !3

1354:                                             ; preds = %1350
  %1355 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 0, i32 0
  %1356 = load double, double* %1355, align 8
  %1357 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %1358 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 3, i32 2
  %1359 = zext i32 %1348 to i64
  %1360 = load float*, float** %1357, align 8
  %1361 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1358, align 8
  %1362 = add nsw i64 %1359, -1
  %1363 = and i64 %1359, 3
  %1364 = icmp ult i64 %1362, 3
  br i1 %1364, label %1367, label %1365

1365:                                             ; preds = %1354
  %1366 = sub nsw i64 %1359, %1363
  br label %1394

1367:                                             ; preds = %1394, %1354
  %1368 = phi double [ undef, %1354 ], [ %1428, %1394 ]
  %1369 = phi i64 [ 0, %1354 ], [ %1429, %1394 ]
  %1370 = phi double [ %1356, %1354 ], [ %1428, %1394 ]
  %1371 = icmp eq i64 %1363, 0
  br i1 %1371, label %1386, label %1372

1372:                                             ; preds = %1367, %1372
  %1373 = phi i64 [ %1383, %1372 ], [ %1369, %1367 ]
  %1374 = phi double [ %1382, %1372 ], [ %1370, %1367 ]
  %1375 = phi i64 [ %1384, %1372 ], [ %1363, %1367 ]
  %1376 = getelementptr inbounds float, float* %1360, i64 %1373
  %1377 = load float, float* %1376, align 4
  %1378 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1373, i32 0
  %1379 = load double, double* %1378, align 8
  %1380 = fpext float %1377 to double
  %1381 = fmul double %1379, %1380
  %1382 = fadd double %1374, %1381
  %1383 = add nuw nsw i64 %1373, 1
  %1384 = add i64 %1375, -1
  %1385 = icmp eq i64 %1384, 0
  br i1 %1385, label %1386, label %1372, !llvm.loop !98

1386:                                             ; preds = %1372, %1367
  %1387 = phi double [ %1368, %1367 ], [ %1382, %1372 ]
  %1388 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 2
  store i32 0, i32* %1388, align 4
  %1389 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 1
  store i32 0, i32* %1389, align 8
  %1390 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 3, i32 0
  %1391 = load i32, i32* %1390, align 8
  %1392 = icmp slt i32 %1391, 0
  store double %1387, double* %1355, align 8
  br i1 %1392, label %1432, label %1393, !prof !2

1393:                                             ; preds = %1386
  store i32 0, i32* %1347, align 4
  br label %1432

1394:                                             ; preds = %1394, %1365
  %1395 = phi i64 [ 0, %1365 ], [ %1429, %1394 ]
  %1396 = phi double [ %1356, %1365 ], [ %1428, %1394 ]
  %1397 = phi i64 [ %1366, %1365 ], [ %1430, %1394 ]
  %1398 = getelementptr inbounds float, float* %1360, i64 %1395
  %1399 = load float, float* %1398, align 4
  %1400 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1395, i32 0
  %1401 = load double, double* %1400, align 8
  %1402 = fpext float %1399 to double
  %1403 = fmul double %1401, %1402
  %1404 = fadd double %1396, %1403
  %1405 = or i64 %1395, 1
  %1406 = getelementptr inbounds float, float* %1360, i64 %1405
  %1407 = load float, float* %1406, align 4
  %1408 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1405, i32 0
  %1409 = load double, double* %1408, align 8
  %1410 = fpext float %1407 to double
  %1411 = fmul double %1409, %1410
  %1412 = fadd double %1404, %1411
  %1413 = or i64 %1395, 2
  %1414 = getelementptr inbounds float, float* %1360, i64 %1413
  %1415 = load float, float* %1414, align 4
  %1416 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1413, i32 0
  %1417 = load double, double* %1416, align 8
  %1418 = fpext float %1415 to double
  %1419 = fmul double %1417, %1418
  %1420 = fadd double %1412, %1419
  %1421 = or i64 %1395, 3
  %1422 = getelementptr inbounds float, float* %1360, i64 %1421
  %1423 = load float, float* %1422, align 4
  %1424 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1361, i64 %1421, i32 0
  %1425 = load double, double* %1424, align 8
  %1426 = fpext float %1423 to double
  %1427 = fmul double %1425, %1426
  %1428 = fadd double %1420, %1427
  %1429 = add nuw nsw i64 %1395, 4
  %1430 = add i64 %1397, -4
  %1431 = icmp eq i64 %1430, 0
  br i1 %1431, label %1367, label %1394

1432:                                             ; preds = %1342, %1346, %1350, %1386, %1393
  %1433 = load double, double* %368, align 8
  %1434 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1343, i64 0, i32 0, i32 0
  %1435 = load double, double* %1434, align 8
  %1436 = fadd double %1433, %1435
  store double %1436, double* %368, align 8
  br label %1437

1437:                                             ; preds = %1432, %1329
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %367) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #6
  br label %2394

1438:                                             ; preds = %28, %2390
  %1439 = phi i32 [ %23, %28 ], [ %2392, %2390 ]
  %1440 = phi i32 [ 8, %28 ], [ %2391, %2390 ]
  %1441 = phi i32 [ 0, %28 ], [ %1440, %2390 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %30, i64 16, i1 false)
  %1442 = icmp ugt i32 %1439, %1441
  br i1 %1442, label %1444, label %1443, !prof !3

1443:                                             ; preds = %1438
  store i8 1, i8* %31, align 8
  br label %1444

1444:                                             ; preds = %1443, %1438
  %1445 = load i32, i32* %32, align 4
  %1446 = icmp ugt i32 %1445, %1441
  br i1 %1446, label %1448, label %1447, !prof !3

1447:                                             ; preds = %1444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1452

1448:                                             ; preds = %1444
  %1449 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1450 = zext i32 %1441 to i64
  %1451 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1449, i64 %1450
  br label %1452

1452:                                             ; preds = %1448, %1447
  %1453 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1447 ], [ %1451, %1448 ]
  %1454 = load i8, i8* %34, align 8, !range !6
  %1455 = icmp eq i8 %1454, 0
  br i1 %1455, label %1540, label %1456

1456:                                             ; preds = %1452
  %1457 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 3, i32 1
  %1458 = load i32, i32* %1457, align 4
  %1459 = icmp eq i32 %1458, 0
  br i1 %1459, label %1540, label %1460

1460:                                             ; preds = %1456
  %1461 = load i32, i32* %35, align 4
  %1462 = icmp eq i32 %1461, %1458
  br i1 %1462, label %1463, label %1540, !prof !3

1463:                                             ; preds = %1460
  %1464 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 0, i32 0
  %1465 = load double, double* %1464, align 8
  %1466 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 3, i32 2
  %1467 = zext i32 %1458 to i64
  %1468 = load float*, float** %36, align 8
  %1469 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1466, align 8
  %1470 = add nsw i64 %1467, -1
  %1471 = and i64 %1467, 3
  %1472 = icmp ult i64 %1470, 3
  br i1 %1472, label %1475, label %1473

1473:                                             ; preds = %1463
  %1474 = sub nsw i64 %1467, %1471
  br label %1502

1475:                                             ; preds = %1502, %1463
  %1476 = phi double [ undef, %1463 ], [ %1536, %1502 ]
  %1477 = phi i64 [ 0, %1463 ], [ %1537, %1502 ]
  %1478 = phi double [ %1465, %1463 ], [ %1536, %1502 ]
  %1479 = icmp eq i64 %1471, 0
  br i1 %1479, label %1494, label %1480

1480:                                             ; preds = %1475, %1480
  %1481 = phi i64 [ %1491, %1480 ], [ %1477, %1475 ]
  %1482 = phi double [ %1490, %1480 ], [ %1478, %1475 ]
  %1483 = phi i64 [ %1492, %1480 ], [ %1471, %1475 ]
  %1484 = getelementptr inbounds float, float* %1468, i64 %1481
  %1485 = load float, float* %1484, align 4
  %1486 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1481, i32 0
  %1487 = load double, double* %1486, align 8
  %1488 = fpext float %1485 to double
  %1489 = fmul double %1487, %1488
  %1490 = fadd double %1482, %1489
  %1491 = add nuw nsw i64 %1481, 1
  %1492 = add i64 %1483, -1
  %1493 = icmp eq i64 %1492, 0
  br i1 %1493, label %1494, label %1480, !llvm.loop !99

1494:                                             ; preds = %1480, %1475
  %1495 = phi double [ %1476, %1475 ], [ %1490, %1480 ]
  %1496 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 2
  store i32 0, i32* %1496, align 4
  %1497 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 1
  store i32 0, i32* %1497, align 8
  %1498 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 3, i32 0
  %1499 = load i32, i32* %1498, align 8
  %1500 = icmp slt i32 %1499, 0
  store double %1495, double* %1464, align 8
  br i1 %1500, label %1540, label %1501, !prof !2

1501:                                             ; preds = %1494
  store i32 0, i32* %1457, align 4
  br label %1540

1502:                                             ; preds = %1502, %1473
  %1503 = phi i64 [ 0, %1473 ], [ %1537, %1502 ]
  %1504 = phi double [ %1465, %1473 ], [ %1536, %1502 ]
  %1505 = phi i64 [ %1474, %1473 ], [ %1538, %1502 ]
  %1506 = getelementptr inbounds float, float* %1468, i64 %1503
  %1507 = load float, float* %1506, align 4
  %1508 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1503, i32 0
  %1509 = load double, double* %1508, align 8
  %1510 = fpext float %1507 to double
  %1511 = fmul double %1509, %1510
  %1512 = fadd double %1504, %1511
  %1513 = or i64 %1503, 1
  %1514 = getelementptr inbounds float, float* %1468, i64 %1513
  %1515 = load float, float* %1514, align 4
  %1516 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1513, i32 0
  %1517 = load double, double* %1516, align 8
  %1518 = fpext float %1515 to double
  %1519 = fmul double %1517, %1518
  %1520 = fadd double %1512, %1519
  %1521 = or i64 %1503, 2
  %1522 = getelementptr inbounds float, float* %1468, i64 %1521
  %1523 = load float, float* %1522, align 4
  %1524 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1521, i32 0
  %1525 = load double, double* %1524, align 8
  %1526 = fpext float %1523 to double
  %1527 = fmul double %1525, %1526
  %1528 = fadd double %1520, %1527
  %1529 = or i64 %1503, 3
  %1530 = getelementptr inbounds float, float* %1468, i64 %1529
  %1531 = load float, float* %1530, align 4
  %1532 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1469, i64 %1529, i32 0
  %1533 = load double, double* %1532, align 8
  %1534 = fpext float %1531 to double
  %1535 = fmul double %1533, %1534
  %1536 = fadd double %1528, %1535
  %1537 = add nuw nsw i64 %1503, 4
  %1538 = add i64 %1505, -4
  %1539 = icmp eq i64 %1538, 0
  br i1 %1539, label %1475, label %1502

1540:                                             ; preds = %1452, %1456, %1460, %1494, %1501
  %1541 = load double, double* %11, align 8
  %1542 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1453, i64 0, i32 0, i32 0
  %1543 = load double, double* %1542, align 8
  %1544 = fadd double %1541, %1543
  store double %1544, double* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %10, i64 16, i1 false)
  %1545 = or i32 %1441, 1
  %1546 = load i32, i32* %21, align 4
  %1547 = icmp ugt i32 %1546, %1545
  br i1 %1547, label %1549, label %1548, !prof !3

1548:                                             ; preds = %1540
  store i8 1, i8* %31, align 8
  br label %1549

1549:                                             ; preds = %1548, %1540
  %1550 = load i32, i32* %32, align 4
  %1551 = icmp ugt i32 %1550, %1545
  br i1 %1551, label %1553, label %1552, !prof !3

1552:                                             ; preds = %1549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1557

1553:                                             ; preds = %1549
  %1554 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1555 = zext i32 %1545 to i64
  %1556 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1554, i64 %1555
  br label %1557

1557:                                             ; preds = %1553, %1552
  %1558 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1552 ], [ %1556, %1553 ]
  %1559 = load i8, i8* %34, align 8, !range !6
  %1560 = icmp eq i8 %1559, 0
  br i1 %1560, label %1645, label %1561

1561:                                             ; preds = %1557
  %1562 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 3, i32 1
  %1563 = load i32, i32* %1562, align 4
  %1564 = icmp eq i32 %1563, 0
  br i1 %1564, label %1645, label %1565

1565:                                             ; preds = %1561
  %1566 = load i32, i32* %35, align 4
  %1567 = icmp eq i32 %1566, %1563
  br i1 %1567, label %1568, label %1645, !prof !3

1568:                                             ; preds = %1565
  %1569 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 0, i32 0
  %1570 = load double, double* %1569, align 8
  %1571 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 3, i32 2
  %1572 = zext i32 %1563 to i64
  %1573 = load float*, float** %36, align 8
  %1574 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1571, align 8
  %1575 = add nsw i64 %1572, -1
  %1576 = and i64 %1572, 3
  %1577 = icmp ult i64 %1575, 3
  br i1 %1577, label %1580, label %1578

1578:                                             ; preds = %1568
  %1579 = sub nsw i64 %1572, %1576
  br label %1607

1580:                                             ; preds = %1607, %1568
  %1581 = phi double [ undef, %1568 ], [ %1641, %1607 ]
  %1582 = phi i64 [ 0, %1568 ], [ %1642, %1607 ]
  %1583 = phi double [ %1570, %1568 ], [ %1641, %1607 ]
  %1584 = icmp eq i64 %1576, 0
  br i1 %1584, label %1599, label %1585

1585:                                             ; preds = %1580, %1585
  %1586 = phi i64 [ %1596, %1585 ], [ %1582, %1580 ]
  %1587 = phi double [ %1595, %1585 ], [ %1583, %1580 ]
  %1588 = phi i64 [ %1597, %1585 ], [ %1576, %1580 ]
  %1589 = getelementptr inbounds float, float* %1573, i64 %1586
  %1590 = load float, float* %1589, align 4
  %1591 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1586, i32 0
  %1592 = load double, double* %1591, align 8
  %1593 = fpext float %1590 to double
  %1594 = fmul double %1592, %1593
  %1595 = fadd double %1587, %1594
  %1596 = add nuw nsw i64 %1586, 1
  %1597 = add i64 %1588, -1
  %1598 = icmp eq i64 %1597, 0
  br i1 %1598, label %1599, label %1585, !llvm.loop !100

1599:                                             ; preds = %1585, %1580
  %1600 = phi double [ %1581, %1580 ], [ %1595, %1585 ]
  %1601 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 2
  store i32 0, i32* %1601, align 4
  %1602 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 1
  store i32 0, i32* %1602, align 8
  %1603 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 3, i32 0
  %1604 = load i32, i32* %1603, align 8
  %1605 = icmp slt i32 %1604, 0
  store double %1600, double* %1569, align 8
  br i1 %1605, label %1645, label %1606, !prof !2

1606:                                             ; preds = %1599
  store i32 0, i32* %1562, align 4
  br label %1645

1607:                                             ; preds = %1607, %1578
  %1608 = phi i64 [ 0, %1578 ], [ %1642, %1607 ]
  %1609 = phi double [ %1570, %1578 ], [ %1641, %1607 ]
  %1610 = phi i64 [ %1579, %1578 ], [ %1643, %1607 ]
  %1611 = getelementptr inbounds float, float* %1573, i64 %1608
  %1612 = load float, float* %1611, align 4
  %1613 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1608, i32 0
  %1614 = load double, double* %1613, align 8
  %1615 = fpext float %1612 to double
  %1616 = fmul double %1614, %1615
  %1617 = fadd double %1609, %1616
  %1618 = or i64 %1608, 1
  %1619 = getelementptr inbounds float, float* %1573, i64 %1618
  %1620 = load float, float* %1619, align 4
  %1621 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1618, i32 0
  %1622 = load double, double* %1621, align 8
  %1623 = fpext float %1620 to double
  %1624 = fmul double %1622, %1623
  %1625 = fadd double %1617, %1624
  %1626 = or i64 %1608, 2
  %1627 = getelementptr inbounds float, float* %1573, i64 %1626
  %1628 = load float, float* %1627, align 4
  %1629 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1626, i32 0
  %1630 = load double, double* %1629, align 8
  %1631 = fpext float %1628 to double
  %1632 = fmul double %1630, %1631
  %1633 = fadd double %1625, %1632
  %1634 = or i64 %1608, 3
  %1635 = getelementptr inbounds float, float* %1573, i64 %1634
  %1636 = load float, float* %1635, align 4
  %1637 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1574, i64 %1634, i32 0
  %1638 = load double, double* %1637, align 8
  %1639 = fpext float %1636 to double
  %1640 = fmul double %1638, %1639
  %1641 = fadd double %1633, %1640
  %1642 = add nuw nsw i64 %1608, 4
  %1643 = add i64 %1610, -4
  %1644 = icmp eq i64 %1643, 0
  br i1 %1644, label %1580, label %1607

1645:                                             ; preds = %1557, %1561, %1565, %1599, %1606
  %1646 = or i32 %1441, 2
  %1647 = load i32, i32* %21, align 4
  %1648 = icmp ugt i32 %1647, %1646
  br i1 %1648, label %1650, label %1649, !prof !3

1649:                                             ; preds = %1645
  store i8 1, i8* %31, align 8
  br label %1650

1650:                                             ; preds = %1649, %1645
  %1651 = load i32, i32* %32, align 4
  %1652 = icmp ugt i32 %1651, %1646
  br i1 %1652, label %1654, label %1653, !prof !3

1653:                                             ; preds = %1650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1658

1654:                                             ; preds = %1650
  %1655 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1656 = zext i32 %1646 to i64
  %1657 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1655, i64 %1656
  br label %1658

1658:                                             ; preds = %1654, %1653
  %1659 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1653 ], [ %1657, %1654 ]
  %1660 = load i8, i8* %34, align 8, !range !6
  %1661 = icmp eq i8 %1660, 0
  br i1 %1661, label %1746, label %1662

1662:                                             ; preds = %1658
  %1663 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 3, i32 1
  %1664 = load i32, i32* %1663, align 4
  %1665 = icmp eq i32 %1664, 0
  br i1 %1665, label %1746, label %1666

1666:                                             ; preds = %1662
  %1667 = load i32, i32* %35, align 4
  %1668 = icmp eq i32 %1667, %1664
  br i1 %1668, label %1669, label %1746, !prof !3

1669:                                             ; preds = %1666
  %1670 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 0, i32 0
  %1671 = load double, double* %1670, align 8
  %1672 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 3, i32 2
  %1673 = zext i32 %1664 to i64
  %1674 = load float*, float** %36, align 8
  %1675 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1672, align 8
  %1676 = add nsw i64 %1673, -1
  %1677 = and i64 %1673, 3
  %1678 = icmp ult i64 %1676, 3
  br i1 %1678, label %1681, label %1679

1679:                                             ; preds = %1669
  %1680 = sub nsw i64 %1673, %1677
  br label %1708

1681:                                             ; preds = %1708, %1669
  %1682 = phi double [ undef, %1669 ], [ %1742, %1708 ]
  %1683 = phi i64 [ 0, %1669 ], [ %1743, %1708 ]
  %1684 = phi double [ %1671, %1669 ], [ %1742, %1708 ]
  %1685 = icmp eq i64 %1677, 0
  br i1 %1685, label %1700, label %1686

1686:                                             ; preds = %1681, %1686
  %1687 = phi i64 [ %1697, %1686 ], [ %1683, %1681 ]
  %1688 = phi double [ %1696, %1686 ], [ %1684, %1681 ]
  %1689 = phi i64 [ %1698, %1686 ], [ %1677, %1681 ]
  %1690 = getelementptr inbounds float, float* %1674, i64 %1687
  %1691 = load float, float* %1690, align 4
  %1692 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1687, i32 0
  %1693 = load double, double* %1692, align 8
  %1694 = fpext float %1691 to double
  %1695 = fmul double %1693, %1694
  %1696 = fadd double %1688, %1695
  %1697 = add nuw nsw i64 %1687, 1
  %1698 = add i64 %1689, -1
  %1699 = icmp eq i64 %1698, 0
  br i1 %1699, label %1700, label %1686, !llvm.loop !101

1700:                                             ; preds = %1686, %1681
  %1701 = phi double [ %1682, %1681 ], [ %1696, %1686 ]
  %1702 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 2
  store i32 0, i32* %1702, align 4
  %1703 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 1
  store i32 0, i32* %1703, align 8
  %1704 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 3, i32 0
  %1705 = load i32, i32* %1704, align 8
  %1706 = icmp slt i32 %1705, 0
  store double %1701, double* %1670, align 8
  br i1 %1706, label %1746, label %1707, !prof !2

1707:                                             ; preds = %1700
  store i32 0, i32* %1663, align 4
  br label %1746

1708:                                             ; preds = %1708, %1679
  %1709 = phi i64 [ 0, %1679 ], [ %1743, %1708 ]
  %1710 = phi double [ %1671, %1679 ], [ %1742, %1708 ]
  %1711 = phi i64 [ %1680, %1679 ], [ %1744, %1708 ]
  %1712 = getelementptr inbounds float, float* %1674, i64 %1709
  %1713 = load float, float* %1712, align 4
  %1714 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1709, i32 0
  %1715 = load double, double* %1714, align 8
  %1716 = fpext float %1713 to double
  %1717 = fmul double %1715, %1716
  %1718 = fadd double %1710, %1717
  %1719 = or i64 %1709, 1
  %1720 = getelementptr inbounds float, float* %1674, i64 %1719
  %1721 = load float, float* %1720, align 4
  %1722 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1719, i32 0
  %1723 = load double, double* %1722, align 8
  %1724 = fpext float %1721 to double
  %1725 = fmul double %1723, %1724
  %1726 = fadd double %1718, %1725
  %1727 = or i64 %1709, 2
  %1728 = getelementptr inbounds float, float* %1674, i64 %1727
  %1729 = load float, float* %1728, align 4
  %1730 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1727, i32 0
  %1731 = load double, double* %1730, align 8
  %1732 = fpext float %1729 to double
  %1733 = fmul double %1731, %1732
  %1734 = fadd double %1726, %1733
  %1735 = or i64 %1709, 3
  %1736 = getelementptr inbounds float, float* %1674, i64 %1735
  %1737 = load float, float* %1736, align 4
  %1738 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1675, i64 %1735, i32 0
  %1739 = load double, double* %1738, align 8
  %1740 = fpext float %1737 to double
  %1741 = fmul double %1739, %1740
  %1742 = fadd double %1734, %1741
  %1743 = add nuw nsw i64 %1709, 4
  %1744 = add i64 %1711, -4
  %1745 = icmp eq i64 %1744, 0
  br i1 %1745, label %1681, label %1708

1746:                                             ; preds = %1658, %1662, %1666, %1700, %1707
  %1747 = load double, double* %15, align 8
  %1748 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1558, i64 0, i32 0, i32 0
  %1749 = load double, double* %1748, align 8
  %1750 = fadd double %1747, %1749
  store double %1750, double* %15, align 8
  %1751 = load double, double* %16, align 8
  %1752 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1659, i64 0, i32 0, i32 0
  %1753 = load double, double* %1752, align 8
  %1754 = fadd double %1751, %1753
  store double %1754, double* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %13, i64 16, i1 false)
  %1755 = or i32 %1441, 3
  %1756 = load i32, i32* %21, align 4
  %1757 = icmp ugt i32 %1756, %1755
  br i1 %1757, label %1759, label %1758, !prof !3

1758:                                             ; preds = %1746
  store i8 1, i8* %31, align 8
  br label %1759

1759:                                             ; preds = %1758, %1746
  %1760 = load i32, i32* %32, align 4
  %1761 = icmp ugt i32 %1760, %1755
  br i1 %1761, label %1763, label %1762, !prof !3

1762:                                             ; preds = %1759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1767

1763:                                             ; preds = %1759
  %1764 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1765 = zext i32 %1755 to i64
  %1766 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1764, i64 %1765
  br label %1767

1767:                                             ; preds = %1763, %1762
  %1768 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1762 ], [ %1766, %1763 ]
  %1769 = load i8, i8* %34, align 8, !range !6
  %1770 = icmp eq i8 %1769, 0
  br i1 %1770, label %1855, label %1771

1771:                                             ; preds = %1767
  %1772 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 3, i32 1
  %1773 = load i32, i32* %1772, align 4
  %1774 = icmp eq i32 %1773, 0
  br i1 %1774, label %1855, label %1775

1775:                                             ; preds = %1771
  %1776 = load i32, i32* %35, align 4
  %1777 = icmp eq i32 %1776, %1773
  br i1 %1777, label %1778, label %1855, !prof !3

1778:                                             ; preds = %1775
  %1779 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 0, i32 0
  %1780 = load double, double* %1779, align 8
  %1781 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 3, i32 2
  %1782 = zext i32 %1773 to i64
  %1783 = load float*, float** %36, align 8
  %1784 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1781, align 8
  %1785 = add nsw i64 %1782, -1
  %1786 = and i64 %1782, 3
  %1787 = icmp ult i64 %1785, 3
  br i1 %1787, label %1790, label %1788

1788:                                             ; preds = %1778
  %1789 = sub nsw i64 %1782, %1786
  br label %1817

1790:                                             ; preds = %1817, %1778
  %1791 = phi double [ undef, %1778 ], [ %1851, %1817 ]
  %1792 = phi i64 [ 0, %1778 ], [ %1852, %1817 ]
  %1793 = phi double [ %1780, %1778 ], [ %1851, %1817 ]
  %1794 = icmp eq i64 %1786, 0
  br i1 %1794, label %1809, label %1795

1795:                                             ; preds = %1790, %1795
  %1796 = phi i64 [ %1806, %1795 ], [ %1792, %1790 ]
  %1797 = phi double [ %1805, %1795 ], [ %1793, %1790 ]
  %1798 = phi i64 [ %1807, %1795 ], [ %1786, %1790 ]
  %1799 = getelementptr inbounds float, float* %1783, i64 %1796
  %1800 = load float, float* %1799, align 4
  %1801 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1796, i32 0
  %1802 = load double, double* %1801, align 8
  %1803 = fpext float %1800 to double
  %1804 = fmul double %1802, %1803
  %1805 = fadd double %1797, %1804
  %1806 = add nuw nsw i64 %1796, 1
  %1807 = add i64 %1798, -1
  %1808 = icmp eq i64 %1807, 0
  br i1 %1808, label %1809, label %1795, !llvm.loop !102

1809:                                             ; preds = %1795, %1790
  %1810 = phi double [ %1791, %1790 ], [ %1805, %1795 ]
  %1811 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 2
  store i32 0, i32* %1811, align 4
  %1812 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 1
  store i32 0, i32* %1812, align 8
  %1813 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 3, i32 0
  %1814 = load i32, i32* %1813, align 8
  %1815 = icmp slt i32 %1814, 0
  store double %1810, double* %1779, align 8
  br i1 %1815, label %1855, label %1816, !prof !2

1816:                                             ; preds = %1809
  store i32 0, i32* %1772, align 4
  br label %1855

1817:                                             ; preds = %1817, %1788
  %1818 = phi i64 [ 0, %1788 ], [ %1852, %1817 ]
  %1819 = phi double [ %1780, %1788 ], [ %1851, %1817 ]
  %1820 = phi i64 [ %1789, %1788 ], [ %1853, %1817 ]
  %1821 = getelementptr inbounds float, float* %1783, i64 %1818
  %1822 = load float, float* %1821, align 4
  %1823 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1818, i32 0
  %1824 = load double, double* %1823, align 8
  %1825 = fpext float %1822 to double
  %1826 = fmul double %1824, %1825
  %1827 = fadd double %1819, %1826
  %1828 = or i64 %1818, 1
  %1829 = getelementptr inbounds float, float* %1783, i64 %1828
  %1830 = load float, float* %1829, align 4
  %1831 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1828, i32 0
  %1832 = load double, double* %1831, align 8
  %1833 = fpext float %1830 to double
  %1834 = fmul double %1832, %1833
  %1835 = fadd double %1827, %1834
  %1836 = or i64 %1818, 2
  %1837 = getelementptr inbounds float, float* %1783, i64 %1836
  %1838 = load float, float* %1837, align 4
  %1839 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1836, i32 0
  %1840 = load double, double* %1839, align 8
  %1841 = fpext float %1838 to double
  %1842 = fmul double %1840, %1841
  %1843 = fadd double %1835, %1842
  %1844 = or i64 %1818, 3
  %1845 = getelementptr inbounds float, float* %1783, i64 %1844
  %1846 = load float, float* %1845, align 4
  %1847 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1784, i64 %1844, i32 0
  %1848 = load double, double* %1847, align 8
  %1849 = fpext float %1846 to double
  %1850 = fmul double %1848, %1849
  %1851 = fadd double %1843, %1850
  %1852 = add nuw nsw i64 %1818, 4
  %1853 = add i64 %1820, -4
  %1854 = icmp eq i64 %1853, 0
  br i1 %1854, label %1790, label %1817

1855:                                             ; preds = %1767, %1771, %1775, %1809, %1816
  %1856 = load double, double* %20, align 8
  %1857 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1768, i64 0, i32 0, i32 0
  %1858 = load double, double* %1857, align 8
  %1859 = fadd double %1856, %1858
  store double %1859, double* %20, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %17, i64 16, i1 false)
  %1860 = or i32 %1441, 4
  %1861 = load i32, i32* %21, align 4
  %1862 = icmp ugt i32 %1861, %1860
  br i1 %1862, label %1864, label %1863, !prof !3

1863:                                             ; preds = %1855
  store i8 1, i8* %31, align 8
  br label %1864

1864:                                             ; preds = %1863, %1855
  %1865 = load i32, i32* %32, align 4
  %1866 = icmp ugt i32 %1865, %1860
  br i1 %1866, label %1868, label %1867, !prof !3

1867:                                             ; preds = %1864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1872

1868:                                             ; preds = %1864
  %1869 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1870 = zext i32 %1860 to i64
  %1871 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1869, i64 %1870
  br label %1872

1872:                                             ; preds = %1868, %1867
  %1873 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1867 ], [ %1871, %1868 ]
  %1874 = load i8, i8* %34, align 8, !range !6
  %1875 = icmp eq i8 %1874, 0
  br i1 %1875, label %1960, label %1876

1876:                                             ; preds = %1872
  %1877 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 3, i32 1
  %1878 = load i32, i32* %1877, align 4
  %1879 = icmp eq i32 %1878, 0
  br i1 %1879, label %1960, label %1880

1880:                                             ; preds = %1876
  %1881 = load i32, i32* %35, align 4
  %1882 = icmp eq i32 %1881, %1878
  br i1 %1882, label %1883, label %1960, !prof !3

1883:                                             ; preds = %1880
  %1884 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 0, i32 0
  %1885 = load double, double* %1884, align 8
  %1886 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 3, i32 2
  %1887 = zext i32 %1878 to i64
  %1888 = load float*, float** %36, align 8
  %1889 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1886, align 8
  %1890 = add nsw i64 %1887, -1
  %1891 = and i64 %1887, 3
  %1892 = icmp ult i64 %1890, 3
  br i1 %1892, label %1895, label %1893

1893:                                             ; preds = %1883
  %1894 = sub nsw i64 %1887, %1891
  br label %1922

1895:                                             ; preds = %1922, %1883
  %1896 = phi double [ undef, %1883 ], [ %1956, %1922 ]
  %1897 = phi i64 [ 0, %1883 ], [ %1957, %1922 ]
  %1898 = phi double [ %1885, %1883 ], [ %1956, %1922 ]
  %1899 = icmp eq i64 %1891, 0
  br i1 %1899, label %1914, label %1900

1900:                                             ; preds = %1895, %1900
  %1901 = phi i64 [ %1911, %1900 ], [ %1897, %1895 ]
  %1902 = phi double [ %1910, %1900 ], [ %1898, %1895 ]
  %1903 = phi i64 [ %1912, %1900 ], [ %1891, %1895 ]
  %1904 = getelementptr inbounds float, float* %1888, i64 %1901
  %1905 = load float, float* %1904, align 4
  %1906 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1901, i32 0
  %1907 = load double, double* %1906, align 8
  %1908 = fpext float %1905 to double
  %1909 = fmul double %1907, %1908
  %1910 = fadd double %1902, %1909
  %1911 = add nuw nsw i64 %1901, 1
  %1912 = add i64 %1903, -1
  %1913 = icmp eq i64 %1912, 0
  br i1 %1913, label %1914, label %1900, !llvm.loop !103

1914:                                             ; preds = %1900, %1895
  %1915 = phi double [ %1896, %1895 ], [ %1910, %1900 ]
  %1916 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 2
  store i32 0, i32* %1916, align 4
  %1917 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 1
  store i32 0, i32* %1917, align 8
  %1918 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 3, i32 0
  %1919 = load i32, i32* %1918, align 8
  %1920 = icmp slt i32 %1919, 0
  store double %1915, double* %1884, align 8
  br i1 %1920, label %1960, label %1921, !prof !2

1921:                                             ; preds = %1914
  store i32 0, i32* %1877, align 4
  br label %1960

1922:                                             ; preds = %1922, %1893
  %1923 = phi i64 [ 0, %1893 ], [ %1957, %1922 ]
  %1924 = phi double [ %1885, %1893 ], [ %1956, %1922 ]
  %1925 = phi i64 [ %1894, %1893 ], [ %1958, %1922 ]
  %1926 = getelementptr inbounds float, float* %1888, i64 %1923
  %1927 = load float, float* %1926, align 4
  %1928 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1923, i32 0
  %1929 = load double, double* %1928, align 8
  %1930 = fpext float %1927 to double
  %1931 = fmul double %1929, %1930
  %1932 = fadd double %1924, %1931
  %1933 = or i64 %1923, 1
  %1934 = getelementptr inbounds float, float* %1888, i64 %1933
  %1935 = load float, float* %1934, align 4
  %1936 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1933, i32 0
  %1937 = load double, double* %1936, align 8
  %1938 = fpext float %1935 to double
  %1939 = fmul double %1937, %1938
  %1940 = fadd double %1932, %1939
  %1941 = or i64 %1923, 2
  %1942 = getelementptr inbounds float, float* %1888, i64 %1941
  %1943 = load float, float* %1942, align 4
  %1944 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1941, i32 0
  %1945 = load double, double* %1944, align 8
  %1946 = fpext float %1943 to double
  %1947 = fmul double %1945, %1946
  %1948 = fadd double %1940, %1947
  %1949 = or i64 %1923, 3
  %1950 = getelementptr inbounds float, float* %1888, i64 %1949
  %1951 = load float, float* %1950, align 4
  %1952 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1889, i64 %1949, i32 0
  %1953 = load double, double* %1952, align 8
  %1954 = fpext float %1951 to double
  %1955 = fmul double %1953, %1954
  %1956 = fadd double %1948, %1955
  %1957 = add nuw nsw i64 %1923, 4
  %1958 = add i64 %1925, -4
  %1959 = icmp eq i64 %1958, 0
  br i1 %1959, label %1895, label %1922

1960:                                             ; preds = %1872, %1876, %1880, %1914, %1921
  %1961 = load double, double* %12, align 8
  %1962 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1873, i64 0, i32 0, i32 0
  %1963 = load double, double* %1962, align 8
  %1964 = fadd double %1961, %1963
  store double %1964, double* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %10, i64 16, i1 false)
  %1965 = or i32 %1441, 5
  %1966 = load i32, i32* %21, align 4
  %1967 = icmp ugt i32 %1966, %1965
  br i1 %1967, label %1969, label %1968, !prof !3

1968:                                             ; preds = %1960
  store i8 1, i8* %31, align 8
  br label %1969

1969:                                             ; preds = %1968, %1960
  %1970 = load i32, i32* %32, align 4
  %1971 = icmp ugt i32 %1970, %1965
  br i1 %1971, label %1973, label %1972, !prof !3

1972:                                             ; preds = %1969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1977

1973:                                             ; preds = %1969
  %1974 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %1975 = zext i32 %1965 to i64
  %1976 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1974, i64 %1975
  br label %1977

1977:                                             ; preds = %1973, %1972
  %1978 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1972 ], [ %1976, %1973 ]
  %1979 = load i8, i8* %34, align 8, !range !6
  %1980 = icmp eq i8 %1979, 0
  br i1 %1980, label %2065, label %1981

1981:                                             ; preds = %1977
  %1982 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 3, i32 1
  %1983 = load i32, i32* %1982, align 4
  %1984 = icmp eq i32 %1983, 0
  br i1 %1984, label %2065, label %1985

1985:                                             ; preds = %1981
  %1986 = load i32, i32* %35, align 4
  %1987 = icmp eq i32 %1986, %1983
  br i1 %1987, label %1988, label %2065, !prof !3

1988:                                             ; preds = %1985
  %1989 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 0, i32 0
  %1990 = load double, double* %1989, align 8
  %1991 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 3, i32 2
  %1992 = zext i32 %1983 to i64
  %1993 = load float*, float** %36, align 8
  %1994 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1991, align 8
  %1995 = add nsw i64 %1992, -1
  %1996 = and i64 %1992, 3
  %1997 = icmp ult i64 %1995, 3
  br i1 %1997, label %2000, label %1998

1998:                                             ; preds = %1988
  %1999 = sub nsw i64 %1992, %1996
  br label %2027

2000:                                             ; preds = %2027, %1988
  %2001 = phi double [ undef, %1988 ], [ %2061, %2027 ]
  %2002 = phi i64 [ 0, %1988 ], [ %2062, %2027 ]
  %2003 = phi double [ %1990, %1988 ], [ %2061, %2027 ]
  %2004 = icmp eq i64 %1996, 0
  br i1 %2004, label %2019, label %2005

2005:                                             ; preds = %2000, %2005
  %2006 = phi i64 [ %2016, %2005 ], [ %2002, %2000 ]
  %2007 = phi double [ %2015, %2005 ], [ %2003, %2000 ]
  %2008 = phi i64 [ %2017, %2005 ], [ %1996, %2000 ]
  %2009 = getelementptr inbounds float, float* %1993, i64 %2006
  %2010 = load float, float* %2009, align 4
  %2011 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2006, i32 0
  %2012 = load double, double* %2011, align 8
  %2013 = fpext float %2010 to double
  %2014 = fmul double %2012, %2013
  %2015 = fadd double %2007, %2014
  %2016 = add nuw nsw i64 %2006, 1
  %2017 = add i64 %2008, -1
  %2018 = icmp eq i64 %2017, 0
  br i1 %2018, label %2019, label %2005, !llvm.loop !104

2019:                                             ; preds = %2005, %2000
  %2020 = phi double [ %2001, %2000 ], [ %2015, %2005 ]
  %2021 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 2
  store i32 0, i32* %2021, align 4
  %2022 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 1
  store i32 0, i32* %2022, align 8
  %2023 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 3, i32 0
  %2024 = load i32, i32* %2023, align 8
  %2025 = icmp slt i32 %2024, 0
  store double %2020, double* %1989, align 8
  br i1 %2025, label %2065, label %2026, !prof !2

2026:                                             ; preds = %2019
  store i32 0, i32* %1982, align 4
  br label %2065

2027:                                             ; preds = %2027, %1998
  %2028 = phi i64 [ 0, %1998 ], [ %2062, %2027 ]
  %2029 = phi double [ %1990, %1998 ], [ %2061, %2027 ]
  %2030 = phi i64 [ %1999, %1998 ], [ %2063, %2027 ]
  %2031 = getelementptr inbounds float, float* %1993, i64 %2028
  %2032 = load float, float* %2031, align 4
  %2033 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2028, i32 0
  %2034 = load double, double* %2033, align 8
  %2035 = fpext float %2032 to double
  %2036 = fmul double %2034, %2035
  %2037 = fadd double %2029, %2036
  %2038 = or i64 %2028, 1
  %2039 = getelementptr inbounds float, float* %1993, i64 %2038
  %2040 = load float, float* %2039, align 4
  %2041 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2038, i32 0
  %2042 = load double, double* %2041, align 8
  %2043 = fpext float %2040 to double
  %2044 = fmul double %2042, %2043
  %2045 = fadd double %2037, %2044
  %2046 = or i64 %2028, 2
  %2047 = getelementptr inbounds float, float* %1993, i64 %2046
  %2048 = load float, float* %2047, align 4
  %2049 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2046, i32 0
  %2050 = load double, double* %2049, align 8
  %2051 = fpext float %2048 to double
  %2052 = fmul double %2050, %2051
  %2053 = fadd double %2045, %2052
  %2054 = or i64 %2028, 3
  %2055 = getelementptr inbounds float, float* %1993, i64 %2054
  %2056 = load float, float* %2055, align 4
  %2057 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1994, i64 %2054, i32 0
  %2058 = load double, double* %2057, align 8
  %2059 = fpext float %2056 to double
  %2060 = fmul double %2058, %2059
  %2061 = fadd double %2053, %2060
  %2062 = add nuw nsw i64 %2028, 4
  %2063 = add i64 %2030, -4
  %2064 = icmp eq i64 %2063, 0
  br i1 %2064, label %2000, label %2027

2065:                                             ; preds = %1977, %1981, %1985, %2019, %2026
  %2066 = or i32 %1441, 6
  %2067 = load i32, i32* %21, align 4
  %2068 = icmp ugt i32 %2067, %2066
  br i1 %2068, label %2070, label %2069, !prof !3

2069:                                             ; preds = %2065
  store i8 1, i8* %31, align 8
  br label %2070

2070:                                             ; preds = %2069, %2065
  %2071 = load i32, i32* %32, align 4
  %2072 = icmp ugt i32 %2071, %2066
  br i1 %2072, label %2074, label %2073, !prof !3

2073:                                             ; preds = %2070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %2078

2074:                                             ; preds = %2070
  %2075 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %2076 = zext i32 %2066 to i64
  %2077 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2075, i64 %2076
  br label %2078

2078:                                             ; preds = %2074, %2073
  %2079 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %2073 ], [ %2077, %2074 ]
  %2080 = load i8, i8* %34, align 8, !range !6
  %2081 = icmp eq i8 %2080, 0
  br i1 %2081, label %2166, label %2082

2082:                                             ; preds = %2078
  %2083 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 3, i32 1
  %2084 = load i32, i32* %2083, align 4
  %2085 = icmp eq i32 %2084, 0
  br i1 %2085, label %2166, label %2086

2086:                                             ; preds = %2082
  %2087 = load i32, i32* %35, align 4
  %2088 = icmp eq i32 %2087, %2084
  br i1 %2088, label %2089, label %2166, !prof !3

2089:                                             ; preds = %2086
  %2090 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 0, i32 0
  %2091 = load double, double* %2090, align 8
  %2092 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 3, i32 2
  %2093 = zext i32 %2084 to i64
  %2094 = load float*, float** %36, align 8
  %2095 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %2092, align 8
  %2096 = add nsw i64 %2093, -1
  %2097 = and i64 %2093, 3
  %2098 = icmp ult i64 %2096, 3
  br i1 %2098, label %2101, label %2099

2099:                                             ; preds = %2089
  %2100 = sub nsw i64 %2093, %2097
  br label %2128

2101:                                             ; preds = %2128, %2089
  %2102 = phi double [ undef, %2089 ], [ %2162, %2128 ]
  %2103 = phi i64 [ 0, %2089 ], [ %2163, %2128 ]
  %2104 = phi double [ %2091, %2089 ], [ %2162, %2128 ]
  %2105 = icmp eq i64 %2097, 0
  br i1 %2105, label %2120, label %2106

2106:                                             ; preds = %2101, %2106
  %2107 = phi i64 [ %2117, %2106 ], [ %2103, %2101 ]
  %2108 = phi double [ %2116, %2106 ], [ %2104, %2101 ]
  %2109 = phi i64 [ %2118, %2106 ], [ %2097, %2101 ]
  %2110 = getelementptr inbounds float, float* %2094, i64 %2107
  %2111 = load float, float* %2110, align 4
  %2112 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2107, i32 0
  %2113 = load double, double* %2112, align 8
  %2114 = fpext float %2111 to double
  %2115 = fmul double %2113, %2114
  %2116 = fadd double %2108, %2115
  %2117 = add nuw nsw i64 %2107, 1
  %2118 = add i64 %2109, -1
  %2119 = icmp eq i64 %2118, 0
  br i1 %2119, label %2120, label %2106, !llvm.loop !105

2120:                                             ; preds = %2106, %2101
  %2121 = phi double [ %2102, %2101 ], [ %2116, %2106 ]
  %2122 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 2
  store i32 0, i32* %2122, align 4
  %2123 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 1
  store i32 0, i32* %2123, align 8
  %2124 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 3, i32 0
  %2125 = load i32, i32* %2124, align 8
  %2126 = icmp slt i32 %2125, 0
  store double %2121, double* %2090, align 8
  br i1 %2126, label %2166, label %2127, !prof !2

2127:                                             ; preds = %2120
  store i32 0, i32* %2083, align 4
  br label %2166

2128:                                             ; preds = %2128, %2099
  %2129 = phi i64 [ 0, %2099 ], [ %2163, %2128 ]
  %2130 = phi double [ %2091, %2099 ], [ %2162, %2128 ]
  %2131 = phi i64 [ %2100, %2099 ], [ %2164, %2128 ]
  %2132 = getelementptr inbounds float, float* %2094, i64 %2129
  %2133 = load float, float* %2132, align 4
  %2134 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2129, i32 0
  %2135 = load double, double* %2134, align 8
  %2136 = fpext float %2133 to double
  %2137 = fmul double %2135, %2136
  %2138 = fadd double %2130, %2137
  %2139 = or i64 %2129, 1
  %2140 = getelementptr inbounds float, float* %2094, i64 %2139
  %2141 = load float, float* %2140, align 4
  %2142 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2139, i32 0
  %2143 = load double, double* %2142, align 8
  %2144 = fpext float %2141 to double
  %2145 = fmul double %2143, %2144
  %2146 = fadd double %2138, %2145
  %2147 = or i64 %2129, 2
  %2148 = getelementptr inbounds float, float* %2094, i64 %2147
  %2149 = load float, float* %2148, align 4
  %2150 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2147, i32 0
  %2151 = load double, double* %2150, align 8
  %2152 = fpext float %2149 to double
  %2153 = fmul double %2151, %2152
  %2154 = fadd double %2146, %2153
  %2155 = or i64 %2129, 3
  %2156 = getelementptr inbounds float, float* %2094, i64 %2155
  %2157 = load float, float* %2156, align 4
  %2158 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2095, i64 %2155, i32 0
  %2159 = load double, double* %2158, align 8
  %2160 = fpext float %2157 to double
  %2161 = fmul double %2159, %2160
  %2162 = fadd double %2154, %2161
  %2163 = add nuw nsw i64 %2129, 4
  %2164 = add i64 %2131, -4
  %2165 = icmp eq i64 %2164, 0
  br i1 %2165, label %2101, label %2128

2166:                                             ; preds = %2078, %2082, %2086, %2120, %2127
  %2167 = load double, double* %15, align 8
  %2168 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1978, i64 0, i32 0, i32 0
  %2169 = load double, double* %2168, align 8
  %2170 = fadd double %2167, %2169
  store double %2170, double* %15, align 8
  %2171 = load double, double* %16, align 8
  %2172 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2079, i64 0, i32 0, i32 0
  %2173 = load double, double* %2172, align 8
  %2174 = fadd double %2171, %2173
  store double %2174, double* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %13, i64 16, i1 false)
  %2175 = or i32 %1441, 7
  %2176 = load i32, i32* %21, align 4
  %2177 = icmp ugt i32 %2176, %2175
  br i1 %2177, label %2179, label %2178, !prof !3

2178:                                             ; preds = %2166
  store i8 1, i8* %31, align 8
  br label %2179

2179:                                             ; preds = %2178, %2166
  %2180 = load i32, i32* %32, align 4
  %2181 = icmp ugt i32 %2180, %2175
  br i1 %2181, label %2183, label %2182, !prof !3

2182:                                             ; preds = %2179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %2187

2183:                                             ; preds = %2179
  %2184 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %2185 = zext i32 %2175 to i64
  %2186 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2184, i64 %2185
  br label %2187

2187:                                             ; preds = %2183, %2182
  %2188 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %2182 ], [ %2186, %2183 ]
  %2189 = load i8, i8* %34, align 8, !range !6
  %2190 = icmp eq i8 %2189, 0
  br i1 %2190, label %2275, label %2191

2191:                                             ; preds = %2187
  %2192 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 3, i32 1
  %2193 = load i32, i32* %2192, align 4
  %2194 = icmp eq i32 %2193, 0
  br i1 %2194, label %2275, label %2195

2195:                                             ; preds = %2191
  %2196 = load i32, i32* %35, align 4
  %2197 = icmp eq i32 %2196, %2193
  br i1 %2197, label %2198, label %2275, !prof !3

2198:                                             ; preds = %2195
  %2199 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 0, i32 0
  %2200 = load double, double* %2199, align 8
  %2201 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 3, i32 2
  %2202 = zext i32 %2193 to i64
  %2203 = load float*, float** %36, align 8
  %2204 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %2201, align 8
  %2205 = add nsw i64 %2202, -1
  %2206 = and i64 %2202, 3
  %2207 = icmp ult i64 %2205, 3
  br i1 %2207, label %2210, label %2208

2208:                                             ; preds = %2198
  %2209 = sub nsw i64 %2202, %2206
  br label %2237

2210:                                             ; preds = %2237, %2198
  %2211 = phi double [ undef, %2198 ], [ %2271, %2237 ]
  %2212 = phi i64 [ 0, %2198 ], [ %2272, %2237 ]
  %2213 = phi double [ %2200, %2198 ], [ %2271, %2237 ]
  %2214 = icmp eq i64 %2206, 0
  br i1 %2214, label %2229, label %2215

2215:                                             ; preds = %2210, %2215
  %2216 = phi i64 [ %2226, %2215 ], [ %2212, %2210 ]
  %2217 = phi double [ %2225, %2215 ], [ %2213, %2210 ]
  %2218 = phi i64 [ %2227, %2215 ], [ %2206, %2210 ]
  %2219 = getelementptr inbounds float, float* %2203, i64 %2216
  %2220 = load float, float* %2219, align 4
  %2221 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2216, i32 0
  %2222 = load double, double* %2221, align 8
  %2223 = fpext float %2220 to double
  %2224 = fmul double %2222, %2223
  %2225 = fadd double %2217, %2224
  %2226 = add nuw nsw i64 %2216, 1
  %2227 = add i64 %2218, -1
  %2228 = icmp eq i64 %2227, 0
  br i1 %2228, label %2229, label %2215, !llvm.loop !106

2229:                                             ; preds = %2215, %2210
  %2230 = phi double [ %2211, %2210 ], [ %2225, %2215 ]
  %2231 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 2
  store i32 0, i32* %2231, align 4
  %2232 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 1
  store i32 0, i32* %2232, align 8
  %2233 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 3, i32 0
  %2234 = load i32, i32* %2233, align 8
  %2235 = icmp slt i32 %2234, 0
  store double %2230, double* %2199, align 8
  br i1 %2235, label %2275, label %2236, !prof !2

2236:                                             ; preds = %2229
  store i32 0, i32* %2192, align 4
  br label %2275

2237:                                             ; preds = %2237, %2208
  %2238 = phi i64 [ 0, %2208 ], [ %2272, %2237 ]
  %2239 = phi double [ %2200, %2208 ], [ %2271, %2237 ]
  %2240 = phi i64 [ %2209, %2208 ], [ %2273, %2237 ]
  %2241 = getelementptr inbounds float, float* %2203, i64 %2238
  %2242 = load float, float* %2241, align 4
  %2243 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2238, i32 0
  %2244 = load double, double* %2243, align 8
  %2245 = fpext float %2242 to double
  %2246 = fmul double %2244, %2245
  %2247 = fadd double %2239, %2246
  %2248 = or i64 %2238, 1
  %2249 = getelementptr inbounds float, float* %2203, i64 %2248
  %2250 = load float, float* %2249, align 4
  %2251 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2248, i32 0
  %2252 = load double, double* %2251, align 8
  %2253 = fpext float %2250 to double
  %2254 = fmul double %2252, %2253
  %2255 = fadd double %2247, %2254
  %2256 = or i64 %2238, 2
  %2257 = getelementptr inbounds float, float* %2203, i64 %2256
  %2258 = load float, float* %2257, align 4
  %2259 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2256, i32 0
  %2260 = load double, double* %2259, align 8
  %2261 = fpext float %2258 to double
  %2262 = fmul double %2260, %2261
  %2263 = fadd double %2255, %2262
  %2264 = or i64 %2238, 3
  %2265 = getelementptr inbounds float, float* %2203, i64 %2264
  %2266 = load float, float* %2265, align 4
  %2267 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2204, i64 %2264, i32 0
  %2268 = load double, double* %2267, align 8
  %2269 = fpext float %2266 to double
  %2270 = fmul double %2268, %2269
  %2271 = fadd double %2263, %2270
  %2272 = add nuw nsw i64 %2238, 4
  %2273 = add i64 %2240, -4
  %2274 = icmp eq i64 %2273, 0
  br i1 %2274, label %2210, label %2237

2275:                                             ; preds = %2187, %2191, %2195, %2229, %2236
  %2276 = load double, double* %19, align 8
  %2277 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2188, i64 0, i32 0, i32 0
  %2278 = load double, double* %2277, align 8
  %2279 = fadd double %2276, %2278
  store double %2279, double* %19, align 8
  %2280 = load i32, i32* %21, align 4
  %2281 = sub i32 %2280, %1441
  %2282 = icmp ugt i32 %2281, 15
  %2283 = and i32 %2280, 1
  %2284 = icmp eq i32 %2283, 0
  %2285 = or i1 %2282, %2284
  br i1 %2285, label %2390, label %2286

2286:                                             ; preds = %2275
  %2287 = icmp ugt i32 %2280, %1440
  br i1 %2287, label %2289, label %2288, !prof !3

2288:                                             ; preds = %2286
  store i8 1, i8* %31, align 8
  br label %2289

2289:                                             ; preds = %2288, %2286
  %2290 = load i32, i32* %32, align 4
  %2291 = icmp ugt i32 %2290, %1440
  br i1 %2291, label %2293, label %2292, !prof !3

2292:                                             ; preds = %2289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %2297

2293:                                             ; preds = %2289
  %2294 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %33, align 8
  %2295 = zext i32 %1440 to i64
  %2296 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2294, i64 %2295
  br label %2297

2297:                                             ; preds = %2293, %2292
  %2298 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %2292 ], [ %2296, %2293 ]
  %2299 = load i8, i8* %34, align 8, !range !6
  %2300 = icmp eq i8 %2299, 0
  br i1 %2300, label %2385, label %2301

2301:                                             ; preds = %2297
  %2302 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 3, i32 1
  %2303 = load i32, i32* %2302, align 4
  %2304 = icmp eq i32 %2303, 0
  br i1 %2304, label %2385, label %2305

2305:                                             ; preds = %2301
  %2306 = load i32, i32* %35, align 4
  %2307 = icmp eq i32 %2306, %2303
  br i1 %2307, label %2308, label %2385, !prof !3

2308:                                             ; preds = %2305
  %2309 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 0, i32 0
  %2310 = load double, double* %2309, align 8
  %2311 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 3, i32 2
  %2312 = zext i32 %2303 to i64
  %2313 = load float*, float** %36, align 8
  %2314 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %2311, align 8
  %2315 = add nsw i64 %2312, -1
  %2316 = and i64 %2312, 3
  %2317 = icmp ult i64 %2315, 3
  br i1 %2317, label %2320, label %2318

2318:                                             ; preds = %2308
  %2319 = sub nsw i64 %2312, %2316
  br label %2347

2320:                                             ; preds = %2347, %2308
  %2321 = phi double [ undef, %2308 ], [ %2381, %2347 ]
  %2322 = phi i64 [ 0, %2308 ], [ %2382, %2347 ]
  %2323 = phi double [ %2310, %2308 ], [ %2381, %2347 ]
  %2324 = icmp eq i64 %2316, 0
  br i1 %2324, label %2339, label %2325

2325:                                             ; preds = %2320, %2325
  %2326 = phi i64 [ %2336, %2325 ], [ %2322, %2320 ]
  %2327 = phi double [ %2335, %2325 ], [ %2323, %2320 ]
  %2328 = phi i64 [ %2337, %2325 ], [ %2316, %2320 ]
  %2329 = getelementptr inbounds float, float* %2313, i64 %2326
  %2330 = load float, float* %2329, align 4
  %2331 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2326, i32 0
  %2332 = load double, double* %2331, align 8
  %2333 = fpext float %2330 to double
  %2334 = fmul double %2332, %2333
  %2335 = fadd double %2327, %2334
  %2336 = add nuw nsw i64 %2326, 1
  %2337 = add i64 %2328, -1
  %2338 = icmp eq i64 %2337, 0
  br i1 %2338, label %2339, label %2325, !llvm.loop !107

2339:                                             ; preds = %2325, %2320
  %2340 = phi double [ %2321, %2320 ], [ %2335, %2325 ]
  %2341 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 2
  store i32 0, i32* %2341, align 4
  %2342 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 1
  store i32 0, i32* %2342, align 8
  %2343 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 3, i32 0
  %2344 = load i32, i32* %2343, align 8
  %2345 = icmp slt i32 %2344, 0
  store double %2340, double* %2309, align 8
  br i1 %2345, label %2385, label %2346, !prof !2

2346:                                             ; preds = %2339
  store i32 0, i32* %2302, align 4
  br label %2385

2347:                                             ; preds = %2347, %2318
  %2348 = phi i64 [ 0, %2318 ], [ %2382, %2347 ]
  %2349 = phi double [ %2310, %2318 ], [ %2381, %2347 ]
  %2350 = phi i64 [ %2319, %2318 ], [ %2383, %2347 ]
  %2351 = getelementptr inbounds float, float* %2313, i64 %2348
  %2352 = load float, float* %2351, align 4
  %2353 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2348, i32 0
  %2354 = load double, double* %2353, align 8
  %2355 = fpext float %2352 to double
  %2356 = fmul double %2354, %2355
  %2357 = fadd double %2349, %2356
  %2358 = or i64 %2348, 1
  %2359 = getelementptr inbounds float, float* %2313, i64 %2358
  %2360 = load float, float* %2359, align 4
  %2361 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2358, i32 0
  %2362 = load double, double* %2361, align 8
  %2363 = fpext float %2360 to double
  %2364 = fmul double %2362, %2363
  %2365 = fadd double %2357, %2364
  %2366 = or i64 %2348, 2
  %2367 = getelementptr inbounds float, float* %2313, i64 %2366
  %2368 = load float, float* %2367, align 4
  %2369 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2366, i32 0
  %2370 = load double, double* %2369, align 8
  %2371 = fpext float %2368 to double
  %2372 = fmul double %2370, %2371
  %2373 = fadd double %2365, %2372
  %2374 = or i64 %2348, 3
  %2375 = getelementptr inbounds float, float* %2313, i64 %2374
  %2376 = load float, float* %2375, align 4
  %2377 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %2314, i64 %2374, i32 0
  %2378 = load double, double* %2377, align 8
  %2379 = fpext float %2376 to double
  %2380 = fmul double %2378, %2379
  %2381 = fadd double %2373, %2380
  %2382 = add nuw nsw i64 %2348, 4
  %2383 = add i64 %2350, -4
  %2384 = icmp eq i64 %2383, 0
  br i1 %2384, label %2320, label %2347

2385:                                             ; preds = %2297, %2301, %2305, %2339, %2346
  %2386 = load double, double* %20, align 8
  %2387 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %2298, i64 0, i32 0, i32 0
  %2388 = load double, double* %2387, align 8
  %2389 = fadd double %2386, %2388
  store double %2389, double* %20, align 8
  br label %2390

2390:                                             ; preds = %2275, %2385
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5)
  %2391 = add i32 %1440, 8
  %2392 = load i32, i32* %21, align 4
  %2393 = icmp ugt i32 %2391, %2392
  br i1 %2393, label %2394, label %1438

2394:                                             ; preds = %2390, %26, %1437
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE5hflexERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFF::point_t", align 8
  %4 = alloca <2 x double>, align 16
  %5 = bitcast <2 x double>* %4 to %"struct.CFF::point_t"*
  %6 = alloca %"struct.CFF::point_t", align 8
  %7 = alloca %"struct.CFF::point_t", align 8
  %8 = alloca %"struct.CFF::point_t", align 8
  %9 = alloca %"struct.CFF::point_t", align 8
  %10 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 7
  br i1 %12, label %13, label %777, !prof !3

13:                                               ; preds = %2
  %14 = bitcast %"struct.CFF::point_t"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %18 = bitcast %"struct.CFF::point_t"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %26

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %25 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %24, align 8
  br label %26

26:                                               ; preds = %23, %22
  %27 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %22 ], [ %25, %23 ]
  %28 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %29 = load i8, i8* %28, align 8, !range !6
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %117, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 3, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %117, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %33
  br i1 %38, label %39, label %117, !prof !3

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 0, i32 0
  %41 = load double, double* %40, align 8
  %42 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %43 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 3, i32 2
  %44 = zext i32 %33 to i64
  %45 = load float*, float** %42, align 8
  %46 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %43, align 8
  %47 = add nsw i64 %44, -1
  %48 = and i64 %44, 3
  %49 = icmp ult i64 %47, 3
  br i1 %49, label %52, label %50

50:                                               ; preds = %39
  %51 = sub nsw i64 %44, %48
  br label %79

52:                                               ; preds = %79, %39
  %53 = phi double [ undef, %39 ], [ %113, %79 ]
  %54 = phi i64 [ 0, %39 ], [ %114, %79 ]
  %55 = phi double [ %41, %39 ], [ %113, %79 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %71, label %57

57:                                               ; preds = %52, %57
  %58 = phi i64 [ %68, %57 ], [ %54, %52 ]
  %59 = phi double [ %67, %57 ], [ %55, %52 ]
  %60 = phi i64 [ %69, %57 ], [ %48, %52 ]
  %61 = getelementptr inbounds float, float* %45, i64 %58
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %58, i32 0
  %64 = load double, double* %63, align 8
  %65 = fpext float %62 to double
  %66 = fmul double %64, %65
  %67 = fadd double %59, %66
  %68 = add nuw nsw i64 %58, 1
  %69 = add i64 %60, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %57, !llvm.loop !108

71:                                               ; preds = %57, %52
  %72 = phi double [ %53, %52 ], [ %67, %57 ]
  %73 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 2
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 1
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 3, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp slt i32 %76, 0
  store double %72, double* %40, align 8
  br i1 %77, label %117, label %78, !prof !2

78:                                               ; preds = %71
  store i32 0, i32* %32, align 4
  br label %117

79:                                               ; preds = %79, %50
  %80 = phi i64 [ 0, %50 ], [ %114, %79 ]
  %81 = phi double [ %41, %50 ], [ %113, %79 ]
  %82 = phi i64 [ %51, %50 ], [ %115, %79 ]
  %83 = getelementptr inbounds float, float* %45, i64 %80
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %80, i32 0
  %86 = load double, double* %85, align 8
  %87 = fpext float %84 to double
  %88 = fmul double %86, %87
  %89 = fadd double %81, %88
  %90 = or i64 %80, 1
  %91 = getelementptr inbounds float, float* %45, i64 %90
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %90, i32 0
  %94 = load double, double* %93, align 8
  %95 = fpext float %92 to double
  %96 = fmul double %94, %95
  %97 = fadd double %89, %96
  %98 = or i64 %80, 2
  %99 = getelementptr inbounds float, float* %45, i64 %98
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %98, i32 0
  %102 = load double, double* %101, align 8
  %103 = fpext float %100 to double
  %104 = fmul double %102, %103
  %105 = fadd double %97, %104
  %106 = or i64 %80, 3
  %107 = getelementptr inbounds float, float* %45, i64 %106
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %106, i32 0
  %110 = load double, double* %109, align 8
  %111 = fpext float %108 to double
  %112 = fmul double %110, %111
  %113 = fadd double %105, %112
  %114 = add nuw nsw i64 %80, 4
  %115 = add i64 %82, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %52, label %79

117:                                              ; preds = %26, %31, %35, %71, %78
  %118 = load double, double* %15, align 8
  %119 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 0, i32 0
  %120 = load double, double* %119, align 8
  %121 = fadd double %118, %120
  store double %121, double* %15, align 8
  %122 = bitcast <2 x double>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %122, i8* nonnull align 8 %14, i64 16, i1 false)
  %123 = load i32, i32* %10, align 4
  %124 = icmp ugt i32 %123, 1
  br i1 %124, label %127, label %125, !prof !3

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %126, align 8
  br label %127

127:                                              ; preds = %125, %117
  %128 = load i32, i32* %19, align 4
  %129 = icmp ugt i32 %128, 1
  br i1 %129, label %131, label %130, !prof !3

130:                                              ; preds = %127
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %135

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %133 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %132, align 8
  %134 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %133, i64 1
  br label %135

135:                                              ; preds = %131, %130
  %136 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %130 ], [ %134, %131 ]
  %137 = load i8, i8* %28, align 8, !range !6
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %225, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 0, i32 3, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %225, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, %141
  br i1 %146, label %147, label %225, !prof !3

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 0, i32 0, i32 0
  %149 = load double, double* %148, align 8
  %150 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %151 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 0, i32 3, i32 2
  %152 = zext i32 %141 to i64
  %153 = load float*, float** %150, align 8
  %154 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %151, align 8
  %155 = add nsw i64 %152, -1
  %156 = and i64 %152, 3
  %157 = icmp ult i64 %155, 3
  br i1 %157, label %160, label %158

158:                                              ; preds = %147
  %159 = sub nsw i64 %152, %156
  br label %187

160:                                              ; preds = %187, %147
  %161 = phi double [ undef, %147 ], [ %221, %187 ]
  %162 = phi i64 [ 0, %147 ], [ %222, %187 ]
  %163 = phi double [ %149, %147 ], [ %221, %187 ]
  %164 = icmp eq i64 %156, 0
  br i1 %164, label %179, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %176, %165 ], [ %162, %160 ]
  %167 = phi double [ %175, %165 ], [ %163, %160 ]
  %168 = phi i64 [ %177, %165 ], [ %156, %160 ]
  %169 = getelementptr inbounds float, float* %153, i64 %166
  %170 = load float, float* %169, align 4
  %171 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %154, i64 %166, i32 0
  %172 = load double, double* %171, align 8
  %173 = fpext float %170 to double
  %174 = fmul double %172, %173
  %175 = fadd double %167, %174
  %176 = add nuw nsw i64 %166, 1
  %177 = add i64 %168, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %165, !llvm.loop !109

179:                                              ; preds = %165, %160
  %180 = phi double [ %161, %160 ], [ %175, %165 ]
  %181 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 0, i32 2
  store i32 0, i32* %181, align 4
  %182 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 0, i32 1
  store i32 0, i32* %182, align 8
  %183 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 0, i32 3, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = icmp slt i32 %184, 0
  store double %180, double* %148, align 8
  br i1 %185, label %225, label %186, !prof !2

186:                                              ; preds = %179
  store i32 0, i32* %140, align 4
  br label %225

187:                                              ; preds = %187, %158
  %188 = phi i64 [ 0, %158 ], [ %222, %187 ]
  %189 = phi double [ %149, %158 ], [ %221, %187 ]
  %190 = phi i64 [ %159, %158 ], [ %223, %187 ]
  %191 = getelementptr inbounds float, float* %153, i64 %188
  %192 = load float, float* %191, align 4
  %193 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %154, i64 %188, i32 0
  %194 = load double, double* %193, align 8
  %195 = fpext float %192 to double
  %196 = fmul double %194, %195
  %197 = fadd double %189, %196
  %198 = or i64 %188, 1
  %199 = getelementptr inbounds float, float* %153, i64 %198
  %200 = load float, float* %199, align 4
  %201 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %154, i64 %198, i32 0
  %202 = load double, double* %201, align 8
  %203 = fpext float %200 to double
  %204 = fmul double %202, %203
  %205 = fadd double %197, %204
  %206 = or i64 %188, 2
  %207 = getelementptr inbounds float, float* %153, i64 %206
  %208 = load float, float* %207, align 4
  %209 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %154, i64 %206, i32 0
  %210 = load double, double* %209, align 8
  %211 = fpext float %208 to double
  %212 = fmul double %210, %211
  %213 = fadd double %205, %212
  %214 = or i64 %188, 3
  %215 = getelementptr inbounds float, float* %153, i64 %214
  %216 = load float, float* %215, align 4
  %217 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %154, i64 %214, i32 0
  %218 = load double, double* %217, align 8
  %219 = fpext float %216 to double
  %220 = fmul double %218, %219
  %221 = fadd double %213, %220
  %222 = add nuw nsw i64 %188, 4
  %223 = add i64 %190, -4
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %160, label %187

225:                                              ; preds = %135, %139, %143, %179, %186
  %226 = load i32, i32* %10, align 4
  %227 = icmp ugt i32 %226, 2
  br i1 %227, label %230, label %228, !prof !3

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %229, align 8
  br label %230

230:                                              ; preds = %228, %225
  %231 = load i32, i32* %19, align 4
  %232 = icmp ugt i32 %231, 2
  br i1 %232, label %234, label %233, !prof !3

233:                                              ; preds = %230
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %238

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %236 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %235, align 8
  %237 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %236, i64 2
  br label %238

238:                                              ; preds = %234, %233
  %239 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %233 ], [ %237, %234 ]
  %240 = load i8, i8* %28, align 8, !range !6
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %328, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %239, i64 0, i32 3, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %328, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, %244
  br i1 %249, label %250, label %328, !prof !3

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %239, i64 0, i32 0, i32 0
  %252 = load double, double* %251, align 8
  %253 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %254 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %239, i64 0, i32 3, i32 2
  %255 = zext i32 %244 to i64
  %256 = load float*, float** %253, align 8
  %257 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %254, align 8
  %258 = add nsw i64 %255, -1
  %259 = and i64 %255, 3
  %260 = icmp ult i64 %258, 3
  br i1 %260, label %263, label %261

261:                                              ; preds = %250
  %262 = sub nsw i64 %255, %259
  br label %290

263:                                              ; preds = %290, %250
  %264 = phi double [ undef, %250 ], [ %324, %290 ]
  %265 = phi i64 [ 0, %250 ], [ %325, %290 ]
  %266 = phi double [ %252, %250 ], [ %324, %290 ]
  %267 = icmp eq i64 %259, 0
  br i1 %267, label %282, label %268

268:                                              ; preds = %263, %268
  %269 = phi i64 [ %279, %268 ], [ %265, %263 ]
  %270 = phi double [ %278, %268 ], [ %266, %263 ]
  %271 = phi i64 [ %280, %268 ], [ %259, %263 ]
  %272 = getelementptr inbounds float, float* %256, i64 %269
  %273 = load float, float* %272, align 4
  %274 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %257, i64 %269, i32 0
  %275 = load double, double* %274, align 8
  %276 = fpext float %273 to double
  %277 = fmul double %275, %276
  %278 = fadd double %270, %277
  %279 = add nuw nsw i64 %269, 1
  %280 = add i64 %271, -1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %268, !llvm.loop !110

282:                                              ; preds = %268, %263
  %283 = phi double [ %264, %263 ], [ %278, %268 ]
  %284 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %239, i64 0, i32 2
  store i32 0, i32* %284, align 4
  %285 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %239, i64 0, i32 1
  store i32 0, i32* %285, align 8
  %286 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %239, i64 0, i32 3, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = icmp slt i32 %287, 0
  store double %283, double* %251, align 8
  br i1 %288, label %328, label %289, !prof !2

289:                                              ; preds = %282
  store i32 0, i32* %243, align 4
  br label %328

290:                                              ; preds = %290, %261
  %291 = phi i64 [ 0, %261 ], [ %325, %290 ]
  %292 = phi double [ %252, %261 ], [ %324, %290 ]
  %293 = phi i64 [ %262, %261 ], [ %326, %290 ]
  %294 = getelementptr inbounds float, float* %256, i64 %291
  %295 = load float, float* %294, align 4
  %296 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %257, i64 %291, i32 0
  %297 = load double, double* %296, align 8
  %298 = fpext float %295 to double
  %299 = fmul double %297, %298
  %300 = fadd double %292, %299
  %301 = or i64 %291, 1
  %302 = getelementptr inbounds float, float* %256, i64 %301
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %257, i64 %301, i32 0
  %305 = load double, double* %304, align 8
  %306 = fpext float %303 to double
  %307 = fmul double %305, %306
  %308 = fadd double %300, %307
  %309 = or i64 %291, 2
  %310 = getelementptr inbounds float, float* %256, i64 %309
  %311 = load float, float* %310, align 4
  %312 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %257, i64 %309, i32 0
  %313 = load double, double* %312, align 8
  %314 = fpext float %311 to double
  %315 = fmul double %313, %314
  %316 = fadd double %308, %315
  %317 = or i64 %291, 3
  %318 = getelementptr inbounds float, float* %256, i64 %317
  %319 = load float, float* %318, align 4
  %320 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %257, i64 %317, i32 0
  %321 = load double, double* %320, align 8
  %322 = fpext float %319 to double
  %323 = fmul double %321, %322
  %324 = fadd double %316, %323
  %325 = add nuw nsw i64 %291, 4
  %326 = add i64 %293, -4
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %263, label %290

328:                                              ; preds = %238, %242, %246, %282, %289
  %329 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %136, i64 0, i32 0, i32 0
  %330 = load double, double* %329, align 8
  %331 = load <2 x double>, <2 x double>* %4, align 16
  %332 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %239, i64 0, i32 0, i32 0
  %333 = load double, double* %332, align 8
  %334 = insertelement <2 x double> undef, double %330, i32 0
  %335 = insertelement <2 x double> %334, double %333, i32 1
  %336 = fadd <2 x double> %331, %335
  store <2 x double> %336, <2 x double>* %4, align 16
  %337 = bitcast %"struct.CFF::point_t"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %337) #6
  %338 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %6, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %337, i8* nonnull align 16 %122, i64 16, i1 false)
  %339 = load i32, i32* %10, align 4
  %340 = icmp ugt i32 %339, 3
  br i1 %340, label %343, label %341, !prof !3

341:                                              ; preds = %328
  %342 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %342, align 8
  br label %343

343:                                              ; preds = %341, %328
  %344 = load i32, i32* %19, align 4
  %345 = icmp ugt i32 %344, 3
  br i1 %345, label %347, label %346, !prof !3

346:                                              ; preds = %343
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %351

347:                                              ; preds = %343
  %348 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %349 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %348, align 8
  %350 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 3
  br label %351

351:                                              ; preds = %347, %346
  %352 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %346 ], [ %350, %347 ]
  %353 = load i8, i8* %28, align 8, !range !6
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %441, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %352, i64 0, i32 3, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %441, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, %357
  br i1 %362, label %363, label %441, !prof !3

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %352, i64 0, i32 0, i32 0
  %365 = load double, double* %364, align 8
  %366 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %367 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %352, i64 0, i32 3, i32 2
  %368 = zext i32 %357 to i64
  %369 = load float*, float** %366, align 8
  %370 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %367, align 8
  %371 = add nsw i64 %368, -1
  %372 = and i64 %368, 3
  %373 = icmp ult i64 %371, 3
  br i1 %373, label %376, label %374

374:                                              ; preds = %363
  %375 = sub nsw i64 %368, %372
  br label %403

376:                                              ; preds = %403, %363
  %377 = phi double [ undef, %363 ], [ %437, %403 ]
  %378 = phi i64 [ 0, %363 ], [ %438, %403 ]
  %379 = phi double [ %365, %363 ], [ %437, %403 ]
  %380 = icmp eq i64 %372, 0
  br i1 %380, label %395, label %381

381:                                              ; preds = %376, %381
  %382 = phi i64 [ %392, %381 ], [ %378, %376 ]
  %383 = phi double [ %391, %381 ], [ %379, %376 ]
  %384 = phi i64 [ %393, %381 ], [ %372, %376 ]
  %385 = getelementptr inbounds float, float* %369, i64 %382
  %386 = load float, float* %385, align 4
  %387 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %382, i32 0
  %388 = load double, double* %387, align 8
  %389 = fpext float %386 to double
  %390 = fmul double %388, %389
  %391 = fadd double %383, %390
  %392 = add nuw nsw i64 %382, 1
  %393 = add i64 %384, -1
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %381, !llvm.loop !111

395:                                              ; preds = %381, %376
  %396 = phi double [ %377, %376 ], [ %391, %381 ]
  %397 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %352, i64 0, i32 2
  store i32 0, i32* %397, align 4
  %398 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %352, i64 0, i32 1
  store i32 0, i32* %398, align 8
  %399 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %352, i64 0, i32 3, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = icmp slt i32 %400, 0
  store double %396, double* %364, align 8
  br i1 %401, label %441, label %402, !prof !2

402:                                              ; preds = %395
  store i32 0, i32* %356, align 4
  br label %441

403:                                              ; preds = %403, %374
  %404 = phi i64 [ 0, %374 ], [ %438, %403 ]
  %405 = phi double [ %365, %374 ], [ %437, %403 ]
  %406 = phi i64 [ %375, %374 ], [ %439, %403 ]
  %407 = getelementptr inbounds float, float* %369, i64 %404
  %408 = load float, float* %407, align 4
  %409 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %404, i32 0
  %410 = load double, double* %409, align 8
  %411 = fpext float %408 to double
  %412 = fmul double %410, %411
  %413 = fadd double %405, %412
  %414 = or i64 %404, 1
  %415 = getelementptr inbounds float, float* %369, i64 %414
  %416 = load float, float* %415, align 4
  %417 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %414, i32 0
  %418 = load double, double* %417, align 8
  %419 = fpext float %416 to double
  %420 = fmul double %418, %419
  %421 = fadd double %413, %420
  %422 = or i64 %404, 2
  %423 = getelementptr inbounds float, float* %369, i64 %422
  %424 = load float, float* %423, align 4
  %425 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %422, i32 0
  %426 = load double, double* %425, align 8
  %427 = fpext float %424 to double
  %428 = fmul double %426, %427
  %429 = fadd double %421, %428
  %430 = or i64 %404, 3
  %431 = getelementptr inbounds float, float* %369, i64 %430
  %432 = load float, float* %431, align 4
  %433 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %370, i64 %430, i32 0
  %434 = load double, double* %433, align 8
  %435 = fpext float %432 to double
  %436 = fmul double %434, %435
  %437 = fadd double %429, %436
  %438 = add nuw nsw i64 %404, 4
  %439 = add i64 %406, -4
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %376, label %403

441:                                              ; preds = %351, %355, %359, %395, %402
  %442 = load double, double* %338, align 8
  %443 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %352, i64 0, i32 0, i32 0
  %444 = load double, double* %443, align 8
  %445 = fadd double %442, %444
  store double %445, double* %338, align 8
  %446 = bitcast %"struct.CFF::point_t"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %446) #6
  %447 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %7, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %446, i8* nonnull align 8 %337, i64 16, i1 false)
  %448 = load i32, i32* %10, align 4
  %449 = icmp ugt i32 %448, 4
  br i1 %449, label %452, label %450, !prof !3

450:                                              ; preds = %441
  %451 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %451, align 8
  br label %452

452:                                              ; preds = %450, %441
  %453 = load i32, i32* %19, align 4
  %454 = icmp ugt i32 %453, 4
  br i1 %454, label %456, label %455, !prof !3

455:                                              ; preds = %452
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %460

456:                                              ; preds = %452
  %457 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %458 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %457, align 8
  %459 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %458, i64 4
  br label %460

460:                                              ; preds = %456, %455
  %461 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %455 ], [ %459, %456 ]
  %462 = load i8, i8* %28, align 8, !range !6
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %550, label %464

464:                                              ; preds = %460
  %465 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 3, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %550, label %468

468:                                              ; preds = %464
  %469 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, %466
  br i1 %471, label %472, label %550, !prof !3

472:                                              ; preds = %468
  %473 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 0, i32 0
  %474 = load double, double* %473, align 8
  %475 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %476 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 3, i32 2
  %477 = zext i32 %466 to i64
  %478 = load float*, float** %475, align 8
  %479 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %476, align 8
  %480 = add nsw i64 %477, -1
  %481 = and i64 %477, 3
  %482 = icmp ult i64 %480, 3
  br i1 %482, label %485, label %483

483:                                              ; preds = %472
  %484 = sub nsw i64 %477, %481
  br label %512

485:                                              ; preds = %512, %472
  %486 = phi double [ undef, %472 ], [ %546, %512 ]
  %487 = phi i64 [ 0, %472 ], [ %547, %512 ]
  %488 = phi double [ %474, %472 ], [ %546, %512 ]
  %489 = icmp eq i64 %481, 0
  br i1 %489, label %504, label %490

490:                                              ; preds = %485, %490
  %491 = phi i64 [ %501, %490 ], [ %487, %485 ]
  %492 = phi double [ %500, %490 ], [ %488, %485 ]
  %493 = phi i64 [ %502, %490 ], [ %481, %485 ]
  %494 = getelementptr inbounds float, float* %478, i64 %491
  %495 = load float, float* %494, align 4
  %496 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %491, i32 0
  %497 = load double, double* %496, align 8
  %498 = fpext float %495 to double
  %499 = fmul double %497, %498
  %500 = fadd double %492, %499
  %501 = add nuw nsw i64 %491, 1
  %502 = add i64 %493, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %490, !llvm.loop !112

504:                                              ; preds = %490, %485
  %505 = phi double [ %486, %485 ], [ %500, %490 ]
  %506 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 2
  store i32 0, i32* %506, align 4
  %507 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 1
  store i32 0, i32* %507, align 8
  %508 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 3, i32 0
  %509 = load i32, i32* %508, align 8
  %510 = icmp slt i32 %509, 0
  store double %505, double* %473, align 8
  br i1 %510, label %550, label %511, !prof !2

511:                                              ; preds = %504
  store i32 0, i32* %465, align 4
  br label %550

512:                                              ; preds = %512, %483
  %513 = phi i64 [ 0, %483 ], [ %547, %512 ]
  %514 = phi double [ %474, %483 ], [ %546, %512 ]
  %515 = phi i64 [ %484, %483 ], [ %548, %512 ]
  %516 = getelementptr inbounds float, float* %478, i64 %513
  %517 = load float, float* %516, align 4
  %518 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %513, i32 0
  %519 = load double, double* %518, align 8
  %520 = fpext float %517 to double
  %521 = fmul double %519, %520
  %522 = fadd double %514, %521
  %523 = or i64 %513, 1
  %524 = getelementptr inbounds float, float* %478, i64 %523
  %525 = load float, float* %524, align 4
  %526 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %523, i32 0
  %527 = load double, double* %526, align 8
  %528 = fpext float %525 to double
  %529 = fmul double %527, %528
  %530 = fadd double %522, %529
  %531 = or i64 %513, 2
  %532 = getelementptr inbounds float, float* %478, i64 %531
  %533 = load float, float* %532, align 4
  %534 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %531, i32 0
  %535 = load double, double* %534, align 8
  %536 = fpext float %533 to double
  %537 = fmul double %535, %536
  %538 = fadd double %530, %537
  %539 = or i64 %513, 3
  %540 = getelementptr inbounds float, float* %478, i64 %539
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %539, i32 0
  %543 = load double, double* %542, align 8
  %544 = fpext float %541 to double
  %545 = fmul double %543, %544
  %546 = fadd double %538, %545
  %547 = add nuw nsw i64 %513, 4
  %548 = add i64 %515, -4
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %485, label %512

550:                                              ; preds = %460, %464, %468, %504, %511
  %551 = load double, double* %447, align 8
  %552 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 0, i32 0
  %553 = load double, double* %552, align 8
  %554 = fadd double %551, %553
  store double %554, double* %447, align 8
  %555 = bitcast %"struct.CFF::point_t"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %555) #6
  %556 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %8, i64 0, i32 0, i32 0
  %557 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %8, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %555, i8* nonnull align 8 %446, i64 16, i1 false)
  %558 = load i32, i32* %10, align 4
  %559 = icmp ugt i32 %558, 5
  br i1 %559, label %562, label %560, !prof !3

560:                                              ; preds = %550
  %561 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %561, align 8
  br label %562

562:                                              ; preds = %560, %550
  %563 = load i32, i32* %19, align 4
  %564 = icmp ugt i32 %563, 5
  br i1 %564, label %566, label %565, !prof !3

565:                                              ; preds = %562
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %570

566:                                              ; preds = %562
  %567 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %568 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %567, align 8
  %569 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 5
  br label %570

570:                                              ; preds = %566, %565
  %571 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %565 ], [ %569, %566 ]
  %572 = load i8, i8* %28, align 8, !range !6
  %573 = icmp eq i8 %572, 0
  br i1 %573, label %660, label %574

574:                                              ; preds = %570
  %575 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %571, i64 0, i32 3, i32 1
  %576 = load i32, i32* %575, align 4
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %660, label %578

578:                                              ; preds = %574
  %579 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %580 = load i32, i32* %579, align 4
  %581 = icmp eq i32 %580, %576
  br i1 %581, label %582, label %660, !prof !3

582:                                              ; preds = %578
  %583 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %571, i64 0, i32 0, i32 0
  %584 = load double, double* %583, align 8
  %585 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %586 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %571, i64 0, i32 3, i32 2
  %587 = zext i32 %576 to i64
  %588 = load float*, float** %585, align 8
  %589 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %586, align 8
  %590 = add nsw i64 %587, -1
  %591 = and i64 %587, 3
  %592 = icmp ult i64 %590, 3
  br i1 %592, label %595, label %593

593:                                              ; preds = %582
  %594 = sub nsw i64 %587, %591
  br label %622

595:                                              ; preds = %622, %582
  %596 = phi double [ undef, %582 ], [ %656, %622 ]
  %597 = phi i64 [ 0, %582 ], [ %657, %622 ]
  %598 = phi double [ %584, %582 ], [ %656, %622 ]
  %599 = icmp eq i64 %591, 0
  br i1 %599, label %614, label %600

600:                                              ; preds = %595, %600
  %601 = phi i64 [ %611, %600 ], [ %597, %595 ]
  %602 = phi double [ %610, %600 ], [ %598, %595 ]
  %603 = phi i64 [ %612, %600 ], [ %591, %595 ]
  %604 = getelementptr inbounds float, float* %588, i64 %601
  %605 = load float, float* %604, align 4
  %606 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %589, i64 %601, i32 0
  %607 = load double, double* %606, align 8
  %608 = fpext float %605 to double
  %609 = fmul double %607, %608
  %610 = fadd double %602, %609
  %611 = add nuw nsw i64 %601, 1
  %612 = add i64 %603, -1
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %614, label %600, !llvm.loop !113

614:                                              ; preds = %600, %595
  %615 = phi double [ %596, %595 ], [ %610, %600 ]
  %616 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %571, i64 0, i32 2
  store i32 0, i32* %616, align 4
  %617 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %571, i64 0, i32 1
  store i32 0, i32* %617, align 8
  %618 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %571, i64 0, i32 3, i32 0
  %619 = load i32, i32* %618, align 8
  %620 = icmp slt i32 %619, 0
  store double %615, double* %583, align 8
  br i1 %620, label %660, label %621, !prof !2

621:                                              ; preds = %614
  store i32 0, i32* %575, align 4
  br label %660

622:                                              ; preds = %622, %593
  %623 = phi i64 [ 0, %593 ], [ %657, %622 ]
  %624 = phi double [ %584, %593 ], [ %656, %622 ]
  %625 = phi i64 [ %594, %593 ], [ %658, %622 ]
  %626 = getelementptr inbounds float, float* %588, i64 %623
  %627 = load float, float* %626, align 4
  %628 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %589, i64 %623, i32 0
  %629 = load double, double* %628, align 8
  %630 = fpext float %627 to double
  %631 = fmul double %629, %630
  %632 = fadd double %624, %631
  %633 = or i64 %623, 1
  %634 = getelementptr inbounds float, float* %588, i64 %633
  %635 = load float, float* %634, align 4
  %636 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %589, i64 %633, i32 0
  %637 = load double, double* %636, align 8
  %638 = fpext float %635 to double
  %639 = fmul double %637, %638
  %640 = fadd double %632, %639
  %641 = or i64 %623, 2
  %642 = getelementptr inbounds float, float* %588, i64 %641
  %643 = load float, float* %642, align 4
  %644 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %589, i64 %641, i32 0
  %645 = load double, double* %644, align 8
  %646 = fpext float %643 to double
  %647 = fmul double %645, %646
  %648 = fadd double %640, %647
  %649 = or i64 %623, 3
  %650 = getelementptr inbounds float, float* %588, i64 %649
  %651 = load float, float* %650, align 4
  %652 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %589, i64 %649, i32 0
  %653 = load double, double* %652, align 8
  %654 = fpext float %651 to double
  %655 = fmul double %653, %654
  %656 = fadd double %648, %655
  %657 = add nuw nsw i64 %623, 4
  %658 = add i64 %625, -4
  %659 = icmp eq i64 %658, 0
  br i1 %659, label %595, label %622

660:                                              ; preds = %570, %574, %578, %614, %621
  %661 = load double, double* %556, align 8
  %662 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %571, i64 0, i32 0, i32 0
  %663 = load double, double* %662, align 8
  %664 = fadd double %661, %663
  store double %664, double* %556, align 8
  %665 = bitcast %"struct.CFF::number_t"* %16 to i64*
  %666 = bitcast %"struct.CFF::number_t"* %557 to i64*
  %667 = load i64, i64* %665, align 8
  store i64 %667, i64* %666, align 8
  %668 = bitcast %"struct.CFF::point_t"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %668) #6
  %669 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %9, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %668, i8* nonnull align 8 %555, i64 16, i1 false)
  %670 = load i32, i32* %10, align 4
  %671 = icmp ugt i32 %670, 6
  br i1 %671, label %674, label %672, !prof !3

672:                                              ; preds = %660
  %673 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %673, align 8
  br label %674

674:                                              ; preds = %672, %660
  %675 = load i32, i32* %19, align 4
  %676 = icmp ugt i32 %675, 6
  br i1 %676, label %678, label %677, !prof !3

677:                                              ; preds = %674
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %682

678:                                              ; preds = %674
  %679 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %680 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %679, align 8
  %681 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %680, i64 6
  br label %682

682:                                              ; preds = %678, %677
  %683 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %677 ], [ %681, %678 ]
  %684 = load i8, i8* %28, align 8, !range !6
  %685 = icmp eq i8 %684, 0
  br i1 %685, label %772, label %686

686:                                              ; preds = %682
  %687 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %683, i64 0, i32 3, i32 1
  %688 = load i32, i32* %687, align 4
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %772, label %690

690:                                              ; preds = %686
  %691 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %692 = load i32, i32* %691, align 4
  %693 = icmp eq i32 %692, %688
  br i1 %693, label %694, label %772, !prof !3

694:                                              ; preds = %690
  %695 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %683, i64 0, i32 0, i32 0
  %696 = load double, double* %695, align 8
  %697 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %698 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %683, i64 0, i32 3, i32 2
  %699 = zext i32 %688 to i64
  %700 = load float*, float** %697, align 8
  %701 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %698, align 8
  %702 = add nsw i64 %699, -1
  %703 = and i64 %699, 3
  %704 = icmp ult i64 %702, 3
  br i1 %704, label %707, label %705

705:                                              ; preds = %694
  %706 = sub nsw i64 %699, %703
  br label %734

707:                                              ; preds = %734, %694
  %708 = phi double [ undef, %694 ], [ %768, %734 ]
  %709 = phi i64 [ 0, %694 ], [ %769, %734 ]
  %710 = phi double [ %696, %694 ], [ %768, %734 ]
  %711 = icmp eq i64 %703, 0
  br i1 %711, label %726, label %712

712:                                              ; preds = %707, %712
  %713 = phi i64 [ %723, %712 ], [ %709, %707 ]
  %714 = phi double [ %722, %712 ], [ %710, %707 ]
  %715 = phi i64 [ %724, %712 ], [ %703, %707 ]
  %716 = getelementptr inbounds float, float* %700, i64 %713
  %717 = load float, float* %716, align 4
  %718 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %713, i32 0
  %719 = load double, double* %718, align 8
  %720 = fpext float %717 to double
  %721 = fmul double %719, %720
  %722 = fadd double %714, %721
  %723 = add nuw nsw i64 %713, 1
  %724 = add i64 %715, -1
  %725 = icmp eq i64 %724, 0
  br i1 %725, label %726, label %712, !llvm.loop !114

726:                                              ; preds = %712, %707
  %727 = phi double [ %708, %707 ], [ %722, %712 ]
  %728 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %683, i64 0, i32 2
  store i32 0, i32* %728, align 4
  %729 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %683, i64 0, i32 1
  store i32 0, i32* %729, align 8
  %730 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %683, i64 0, i32 3, i32 0
  %731 = load i32, i32* %730, align 8
  %732 = icmp slt i32 %731, 0
  store double %727, double* %695, align 8
  br i1 %732, label %772, label %733, !prof !2

733:                                              ; preds = %726
  store i32 0, i32* %687, align 4
  br label %772

734:                                              ; preds = %734, %705
  %735 = phi i64 [ 0, %705 ], [ %769, %734 ]
  %736 = phi double [ %696, %705 ], [ %768, %734 ]
  %737 = phi i64 [ %706, %705 ], [ %770, %734 ]
  %738 = getelementptr inbounds float, float* %700, i64 %735
  %739 = load float, float* %738, align 4
  %740 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %735, i32 0
  %741 = load double, double* %740, align 8
  %742 = fpext float %739 to double
  %743 = fmul double %741, %742
  %744 = fadd double %736, %743
  %745 = or i64 %735, 1
  %746 = getelementptr inbounds float, float* %700, i64 %745
  %747 = load float, float* %746, align 4
  %748 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %745, i32 0
  %749 = load double, double* %748, align 8
  %750 = fpext float %747 to double
  %751 = fmul double %749, %750
  %752 = fadd double %744, %751
  %753 = or i64 %735, 2
  %754 = getelementptr inbounds float, float* %700, i64 %753
  %755 = load float, float* %754, align 4
  %756 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %753, i32 0
  %757 = load double, double* %756, align 8
  %758 = fpext float %755 to double
  %759 = fmul double %757, %758
  %760 = fadd double %752, %759
  %761 = or i64 %735, 3
  %762 = getelementptr inbounds float, float* %700, i64 %761
  %763 = load float, float* %762, align 4
  %764 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %701, i64 %761, i32 0
  %765 = load double, double* %764, align 8
  %766 = fpext float %763 to double
  %767 = fmul double %765, %766
  %768 = fadd double %760, %767
  %769 = add nuw nsw i64 %735, 4
  %770 = add i64 %737, -4
  %771 = icmp eq i64 %770, 0
  br i1 %771, label %707, label %734

772:                                              ; preds = %682, %686, %690, %726, %733
  %773 = load double, double* %669, align 8
  %774 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %683, i64 0, i32 0, i32 0
  %775 = load double, double* %774, align 8
  %776 = fadd double %773, %775
  store double %776, double* %669, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %3, %"struct.CFF::point_t"* nonnull dereferenceable(16) %5, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6) #6
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %7, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %668) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %555) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %446) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %337) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  br label %779

777:                                              ; preds = %2
  %778 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %778, align 8
  br label %779

779:                                              ; preds = %777, %772
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE4flexERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x double>, align 16
  %4 = bitcast <2 x double>* %3 to %"struct.CFF::point_t"*
  %5 = alloca <2 x double>, align 16
  %6 = bitcast <2 x double>* %5 to %"struct.CFF::point_t"*
  %7 = alloca <2 x double>, align 16
  %8 = bitcast <2 x double>* %7 to %"struct.CFF::point_t"*
  %9 = alloca <2 x double>, align 16
  %10 = bitcast <2 x double>* %9 to %"struct.CFF::point_t"*
  %11 = alloca <2 x double>, align 16
  %12 = bitcast <2 x double>* %11 to %"struct.CFF::point_t"*
  %13 = alloca <2 x double>, align 16
  %14 = bitcast <2 x double>* %13 to %"struct.CFF::point_t"*
  %15 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 13
  br i1 %17, label %18, label %1307, !prof !3

18:                                               ; preds = %2
  %19 = bitcast <2 x double>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %21 = bitcast %"struct.CFF::point_t"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %19, i8* align 8 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %29

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %28 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %27, align 8
  br label %29

29:                                               ; preds = %26, %25
  %30 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %25 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %32 = load i8, i8* %31, align 8, !range !6
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %120, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 3, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %120, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %36
  br i1 %41, label %42, label %120, !prof !3

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 0, i32 0
  %44 = load double, double* %43, align 8
  %45 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %46 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 3, i32 2
  %47 = zext i32 %36 to i64
  %48 = load float*, float** %45, align 8
  %49 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %46, align 8
  %50 = add nsw i64 %47, -1
  %51 = and i64 %47, 3
  %52 = icmp ult i64 %50, 3
  br i1 %52, label %55, label %53

53:                                               ; preds = %42
  %54 = sub nsw i64 %47, %51
  br label %82

55:                                               ; preds = %82, %42
  %56 = phi double [ undef, %42 ], [ %116, %82 ]
  %57 = phi i64 [ 0, %42 ], [ %117, %82 ]
  %58 = phi double [ %44, %42 ], [ %116, %82 ]
  %59 = icmp eq i64 %51, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %55, %60
  %61 = phi i64 [ %71, %60 ], [ %57, %55 ]
  %62 = phi double [ %70, %60 ], [ %58, %55 ]
  %63 = phi i64 [ %72, %60 ], [ %51, %55 ]
  %64 = getelementptr inbounds float, float* %48, i64 %61
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %49, i64 %61, i32 0
  %67 = load double, double* %66, align 8
  %68 = fpext float %65 to double
  %69 = fmul double %67, %68
  %70 = fadd double %62, %69
  %71 = add nuw nsw i64 %61, 1
  %72 = add i64 %63, -1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %60, !llvm.loop !115

74:                                               ; preds = %60, %55
  %75 = phi double [ %56, %55 ], [ %70, %60 ]
  %76 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 2
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 1
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 3, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp slt i32 %79, 0
  store double %75, double* %43, align 8
  br i1 %80, label %120, label %81, !prof !2

81:                                               ; preds = %74
  store i32 0, i32* %35, align 4
  br label %120

82:                                               ; preds = %82, %53
  %83 = phi i64 [ 0, %53 ], [ %117, %82 ]
  %84 = phi double [ %44, %53 ], [ %116, %82 ]
  %85 = phi i64 [ %54, %53 ], [ %118, %82 ]
  %86 = getelementptr inbounds float, float* %48, i64 %83
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %49, i64 %83, i32 0
  %89 = load double, double* %88, align 8
  %90 = fpext float %87 to double
  %91 = fmul double %89, %90
  %92 = fadd double %84, %91
  %93 = or i64 %83, 1
  %94 = getelementptr inbounds float, float* %48, i64 %93
  %95 = load float, float* %94, align 4
  %96 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %49, i64 %93, i32 0
  %97 = load double, double* %96, align 8
  %98 = fpext float %95 to double
  %99 = fmul double %97, %98
  %100 = fadd double %92, %99
  %101 = or i64 %83, 2
  %102 = getelementptr inbounds float, float* %48, i64 %101
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %49, i64 %101, i32 0
  %105 = load double, double* %104, align 8
  %106 = fpext float %103 to double
  %107 = fmul double %105, %106
  %108 = fadd double %100, %107
  %109 = or i64 %83, 3
  %110 = getelementptr inbounds float, float* %48, i64 %109
  %111 = load float, float* %110, align 4
  %112 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %49, i64 %109, i32 0
  %113 = load double, double* %112, align 8
  %114 = fpext float %111 to double
  %115 = fmul double %113, %114
  %116 = fadd double %108, %115
  %117 = add nuw nsw i64 %83, 4
  %118 = add i64 %85, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %55, label %82

120:                                              ; preds = %29, %34, %38, %74, %81
  %121 = load i32, i32* %15, align 4
  %122 = icmp ugt i32 %121, 1
  br i1 %122, label %125, label %123, !prof !3

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %124, align 8
  br label %125

125:                                              ; preds = %123, %120
  %126 = load i32, i32* %22, align 4
  %127 = icmp ugt i32 %126, 1
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %125
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %133

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %131 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %130, align 8
  %132 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 1
  br label %133

133:                                              ; preds = %129, %128
  %134 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %128 ], [ %132, %129 ]
  %135 = load i8, i8* %31, align 8, !range !6
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %223, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 0, i32 3, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %223, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, %139
  br i1 %144, label %145, label %223, !prof !3

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 0, i32 0, i32 0
  %147 = load double, double* %146, align 8
  %148 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %149 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 0, i32 3, i32 2
  %150 = zext i32 %139 to i64
  %151 = load float*, float** %148, align 8
  %152 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %149, align 8
  %153 = add nsw i64 %150, -1
  %154 = and i64 %150, 3
  %155 = icmp ult i64 %153, 3
  br i1 %155, label %158, label %156

156:                                              ; preds = %145
  %157 = sub nsw i64 %150, %154
  br label %185

158:                                              ; preds = %185, %145
  %159 = phi double [ undef, %145 ], [ %219, %185 ]
  %160 = phi i64 [ 0, %145 ], [ %220, %185 ]
  %161 = phi double [ %147, %145 ], [ %219, %185 ]
  %162 = icmp eq i64 %154, 0
  br i1 %162, label %177, label %163

163:                                              ; preds = %158, %163
  %164 = phi i64 [ %174, %163 ], [ %160, %158 ]
  %165 = phi double [ %173, %163 ], [ %161, %158 ]
  %166 = phi i64 [ %175, %163 ], [ %154, %158 ]
  %167 = getelementptr inbounds float, float* %151, i64 %164
  %168 = load float, float* %167, align 4
  %169 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %152, i64 %164, i32 0
  %170 = load double, double* %169, align 8
  %171 = fpext float %168 to double
  %172 = fmul double %170, %171
  %173 = fadd double %165, %172
  %174 = add nuw nsw i64 %164, 1
  %175 = add i64 %166, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %163, !llvm.loop !116

177:                                              ; preds = %163, %158
  %178 = phi double [ %159, %158 ], [ %173, %163 ]
  %179 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 0, i32 2
  store i32 0, i32* %179, align 4
  %180 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 0, i32 1
  store i32 0, i32* %180, align 8
  %181 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 0, i32 3, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = icmp slt i32 %182, 0
  store double %178, double* %146, align 8
  br i1 %183, label %223, label %184, !prof !2

184:                                              ; preds = %177
  store i32 0, i32* %138, align 4
  br label %223

185:                                              ; preds = %185, %156
  %186 = phi i64 [ 0, %156 ], [ %220, %185 ]
  %187 = phi double [ %147, %156 ], [ %219, %185 ]
  %188 = phi i64 [ %157, %156 ], [ %221, %185 ]
  %189 = getelementptr inbounds float, float* %151, i64 %186
  %190 = load float, float* %189, align 4
  %191 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %152, i64 %186, i32 0
  %192 = load double, double* %191, align 8
  %193 = fpext float %190 to double
  %194 = fmul double %192, %193
  %195 = fadd double %187, %194
  %196 = or i64 %186, 1
  %197 = getelementptr inbounds float, float* %151, i64 %196
  %198 = load float, float* %197, align 4
  %199 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %152, i64 %196, i32 0
  %200 = load double, double* %199, align 8
  %201 = fpext float %198 to double
  %202 = fmul double %200, %201
  %203 = fadd double %195, %202
  %204 = or i64 %186, 2
  %205 = getelementptr inbounds float, float* %151, i64 %204
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %152, i64 %204, i32 0
  %208 = load double, double* %207, align 8
  %209 = fpext float %206 to double
  %210 = fmul double %208, %209
  %211 = fadd double %203, %210
  %212 = or i64 %186, 3
  %213 = getelementptr inbounds float, float* %151, i64 %212
  %214 = load float, float* %213, align 4
  %215 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %152, i64 %212, i32 0
  %216 = load double, double* %215, align 8
  %217 = fpext float %214 to double
  %218 = fmul double %216, %217
  %219 = fadd double %211, %218
  %220 = add nuw nsw i64 %186, 4
  %221 = add i64 %188, -4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %158, label %185

223:                                              ; preds = %133, %137, %141, %177, %184
  %224 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %30, i64 0, i32 0, i32 0
  %225 = load double, double* %224, align 8
  %226 = load <2 x double>, <2 x double>* %3, align 16
  %227 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 0, i32 0, i32 0
  %228 = load double, double* %227, align 8
  %229 = insertelement <2 x double> undef, double %225, i32 0
  %230 = insertelement <2 x double> %229, double %228, i32 1
  %231 = fadd <2 x double> %226, %230
  store <2 x double> %231, <2 x double>* %3, align 16
  %232 = bitcast <2 x double>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %232, i8* nonnull align 16 %19, i64 16, i1 false)
  %233 = load i32, i32* %15, align 4
  %234 = icmp ugt i32 %233, 2
  br i1 %234, label %237, label %235, !prof !3

235:                                              ; preds = %223
  %236 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %236, align 8
  br label %237

237:                                              ; preds = %235, %223
  %238 = load i32, i32* %22, align 4
  %239 = icmp ugt i32 %238, 2
  br i1 %239, label %241, label %240, !prof !3

240:                                              ; preds = %237
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %245

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %243 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %242, align 8
  %244 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 2
  br label %245

245:                                              ; preds = %241, %240
  %246 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %240 ], [ %244, %241 ]
  %247 = load i8, i8* %31, align 8, !range !6
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %335, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %246, i64 0, i32 3, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %335, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, %251
  br i1 %256, label %257, label %335, !prof !3

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %246, i64 0, i32 0, i32 0
  %259 = load double, double* %258, align 8
  %260 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %261 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %246, i64 0, i32 3, i32 2
  %262 = zext i32 %251 to i64
  %263 = load float*, float** %260, align 8
  %264 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %261, align 8
  %265 = add nsw i64 %262, -1
  %266 = and i64 %262, 3
  %267 = icmp ult i64 %265, 3
  br i1 %267, label %270, label %268

268:                                              ; preds = %257
  %269 = sub nsw i64 %262, %266
  br label %297

270:                                              ; preds = %297, %257
  %271 = phi double [ undef, %257 ], [ %331, %297 ]
  %272 = phi i64 [ 0, %257 ], [ %332, %297 ]
  %273 = phi double [ %259, %257 ], [ %331, %297 ]
  %274 = icmp eq i64 %266, 0
  br i1 %274, label %289, label %275

275:                                              ; preds = %270, %275
  %276 = phi i64 [ %286, %275 ], [ %272, %270 ]
  %277 = phi double [ %285, %275 ], [ %273, %270 ]
  %278 = phi i64 [ %287, %275 ], [ %266, %270 ]
  %279 = getelementptr inbounds float, float* %263, i64 %276
  %280 = load float, float* %279, align 4
  %281 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %264, i64 %276, i32 0
  %282 = load double, double* %281, align 8
  %283 = fpext float %280 to double
  %284 = fmul double %282, %283
  %285 = fadd double %277, %284
  %286 = add nuw nsw i64 %276, 1
  %287 = add i64 %278, -1
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %275, !llvm.loop !117

289:                                              ; preds = %275, %270
  %290 = phi double [ %271, %270 ], [ %285, %275 ]
  %291 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %246, i64 0, i32 2
  store i32 0, i32* %291, align 4
  %292 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %246, i64 0, i32 1
  store i32 0, i32* %292, align 8
  %293 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %246, i64 0, i32 3, i32 0
  %294 = load i32, i32* %293, align 8
  %295 = icmp slt i32 %294, 0
  store double %290, double* %258, align 8
  br i1 %295, label %335, label %296, !prof !2

296:                                              ; preds = %289
  store i32 0, i32* %250, align 4
  br label %335

297:                                              ; preds = %297, %268
  %298 = phi i64 [ 0, %268 ], [ %332, %297 ]
  %299 = phi double [ %259, %268 ], [ %331, %297 ]
  %300 = phi i64 [ %269, %268 ], [ %333, %297 ]
  %301 = getelementptr inbounds float, float* %263, i64 %298
  %302 = load float, float* %301, align 4
  %303 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %264, i64 %298, i32 0
  %304 = load double, double* %303, align 8
  %305 = fpext float %302 to double
  %306 = fmul double %304, %305
  %307 = fadd double %299, %306
  %308 = or i64 %298, 1
  %309 = getelementptr inbounds float, float* %263, i64 %308
  %310 = load float, float* %309, align 4
  %311 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %264, i64 %308, i32 0
  %312 = load double, double* %311, align 8
  %313 = fpext float %310 to double
  %314 = fmul double %312, %313
  %315 = fadd double %307, %314
  %316 = or i64 %298, 2
  %317 = getelementptr inbounds float, float* %263, i64 %316
  %318 = load float, float* %317, align 4
  %319 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %264, i64 %316, i32 0
  %320 = load double, double* %319, align 8
  %321 = fpext float %318 to double
  %322 = fmul double %320, %321
  %323 = fadd double %315, %322
  %324 = or i64 %298, 3
  %325 = getelementptr inbounds float, float* %263, i64 %324
  %326 = load float, float* %325, align 4
  %327 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %264, i64 %324, i32 0
  %328 = load double, double* %327, align 8
  %329 = fpext float %326 to double
  %330 = fmul double %328, %329
  %331 = fadd double %323, %330
  %332 = add nuw nsw i64 %298, 4
  %333 = add i64 %300, -4
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %270, label %297

335:                                              ; preds = %245, %249, %253, %289, %296
  %336 = load i32, i32* %15, align 4
  %337 = icmp ugt i32 %336, 3
  br i1 %337, label %340, label %338, !prof !3

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %339, align 8
  br label %340

340:                                              ; preds = %338, %335
  %341 = load i32, i32* %22, align 4
  %342 = icmp ugt i32 %341, 3
  br i1 %342, label %344, label %343, !prof !3

343:                                              ; preds = %340
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %348

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %346 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %345, align 8
  %347 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 3
  br label %348

348:                                              ; preds = %344, %343
  %349 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %343 ], [ %347, %344 ]
  %350 = load i8, i8* %31, align 8, !range !6
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %438, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 0, i32 3, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %438, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = icmp eq i32 %358, %354
  br i1 %359, label %360, label %438, !prof !3

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 0, i32 0, i32 0
  %362 = load double, double* %361, align 8
  %363 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %364 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 0, i32 3, i32 2
  %365 = zext i32 %354 to i64
  %366 = load float*, float** %363, align 8
  %367 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %364, align 8
  %368 = add nsw i64 %365, -1
  %369 = and i64 %365, 3
  %370 = icmp ult i64 %368, 3
  br i1 %370, label %373, label %371

371:                                              ; preds = %360
  %372 = sub nsw i64 %365, %369
  br label %400

373:                                              ; preds = %400, %360
  %374 = phi double [ undef, %360 ], [ %434, %400 ]
  %375 = phi i64 [ 0, %360 ], [ %435, %400 ]
  %376 = phi double [ %362, %360 ], [ %434, %400 ]
  %377 = icmp eq i64 %369, 0
  br i1 %377, label %392, label %378

378:                                              ; preds = %373, %378
  %379 = phi i64 [ %389, %378 ], [ %375, %373 ]
  %380 = phi double [ %388, %378 ], [ %376, %373 ]
  %381 = phi i64 [ %390, %378 ], [ %369, %373 ]
  %382 = getelementptr inbounds float, float* %366, i64 %379
  %383 = load float, float* %382, align 4
  %384 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %367, i64 %379, i32 0
  %385 = load double, double* %384, align 8
  %386 = fpext float %383 to double
  %387 = fmul double %385, %386
  %388 = fadd double %380, %387
  %389 = add nuw nsw i64 %379, 1
  %390 = add i64 %381, -1
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %378, !llvm.loop !118

392:                                              ; preds = %378, %373
  %393 = phi double [ %374, %373 ], [ %388, %378 ]
  %394 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 0, i32 2
  store i32 0, i32* %394, align 4
  %395 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 0, i32 1
  store i32 0, i32* %395, align 8
  %396 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 0, i32 3, i32 0
  %397 = load i32, i32* %396, align 8
  %398 = icmp slt i32 %397, 0
  store double %393, double* %361, align 8
  br i1 %398, label %438, label %399, !prof !2

399:                                              ; preds = %392
  store i32 0, i32* %353, align 4
  br label %438

400:                                              ; preds = %400, %371
  %401 = phi i64 [ 0, %371 ], [ %435, %400 ]
  %402 = phi double [ %362, %371 ], [ %434, %400 ]
  %403 = phi i64 [ %372, %371 ], [ %436, %400 ]
  %404 = getelementptr inbounds float, float* %366, i64 %401
  %405 = load float, float* %404, align 4
  %406 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %367, i64 %401, i32 0
  %407 = load double, double* %406, align 8
  %408 = fpext float %405 to double
  %409 = fmul double %407, %408
  %410 = fadd double %402, %409
  %411 = or i64 %401, 1
  %412 = getelementptr inbounds float, float* %366, i64 %411
  %413 = load float, float* %412, align 4
  %414 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %367, i64 %411, i32 0
  %415 = load double, double* %414, align 8
  %416 = fpext float %413 to double
  %417 = fmul double %415, %416
  %418 = fadd double %410, %417
  %419 = or i64 %401, 2
  %420 = getelementptr inbounds float, float* %366, i64 %419
  %421 = load float, float* %420, align 4
  %422 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %367, i64 %419, i32 0
  %423 = load double, double* %422, align 8
  %424 = fpext float %421 to double
  %425 = fmul double %423, %424
  %426 = fadd double %418, %425
  %427 = or i64 %401, 3
  %428 = getelementptr inbounds float, float* %366, i64 %427
  %429 = load float, float* %428, align 4
  %430 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %367, i64 %427, i32 0
  %431 = load double, double* %430, align 8
  %432 = fpext float %429 to double
  %433 = fmul double %431, %432
  %434 = fadd double %426, %433
  %435 = add nuw nsw i64 %401, 4
  %436 = add i64 %403, -4
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %373, label %400

438:                                              ; preds = %348, %352, %356, %392, %399
  %439 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %246, i64 0, i32 0, i32 0
  %440 = load double, double* %439, align 8
  %441 = load <2 x double>, <2 x double>* %5, align 16
  %442 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %349, i64 0, i32 0, i32 0
  %443 = load double, double* %442, align 8
  %444 = insertelement <2 x double> undef, double %440, i32 0
  %445 = insertelement <2 x double> %444, double %443, i32 1
  %446 = fadd <2 x double> %441, %445
  store <2 x double> %446, <2 x double>* %5, align 16
  %447 = bitcast <2 x double>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %447) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %447, i8* nonnull align 16 %232, i64 16, i1 false)
  %448 = load i32, i32* %15, align 4
  %449 = icmp ugt i32 %448, 4
  br i1 %449, label %452, label %450, !prof !3

450:                                              ; preds = %438
  %451 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %451, align 8
  br label %452

452:                                              ; preds = %450, %438
  %453 = load i32, i32* %22, align 4
  %454 = icmp ugt i32 %453, 4
  br i1 %454, label %456, label %455, !prof !3

455:                                              ; preds = %452
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %460

456:                                              ; preds = %452
  %457 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %458 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %457, align 8
  %459 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %458, i64 4
  br label %460

460:                                              ; preds = %456, %455
  %461 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %455 ], [ %459, %456 ]
  %462 = load i8, i8* %31, align 8, !range !6
  %463 = icmp eq i8 %462, 0
  br i1 %463, label %550, label %464

464:                                              ; preds = %460
  %465 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 3, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %550, label %468

468:                                              ; preds = %464
  %469 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, %466
  br i1 %471, label %472, label %550, !prof !3

472:                                              ; preds = %468
  %473 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 0, i32 0
  %474 = load double, double* %473, align 8
  %475 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %476 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 3, i32 2
  %477 = zext i32 %466 to i64
  %478 = load float*, float** %475, align 8
  %479 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %476, align 8
  %480 = add nsw i64 %477, -1
  %481 = and i64 %477, 3
  %482 = icmp ult i64 %480, 3
  br i1 %482, label %485, label %483

483:                                              ; preds = %472
  %484 = sub nsw i64 %477, %481
  br label %512

485:                                              ; preds = %512, %472
  %486 = phi double [ undef, %472 ], [ %546, %512 ]
  %487 = phi i64 [ 0, %472 ], [ %547, %512 ]
  %488 = phi double [ %474, %472 ], [ %546, %512 ]
  %489 = icmp eq i64 %481, 0
  br i1 %489, label %504, label %490

490:                                              ; preds = %485, %490
  %491 = phi i64 [ %501, %490 ], [ %487, %485 ]
  %492 = phi double [ %500, %490 ], [ %488, %485 ]
  %493 = phi i64 [ %502, %490 ], [ %481, %485 ]
  %494 = getelementptr inbounds float, float* %478, i64 %491
  %495 = load float, float* %494, align 4
  %496 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %491, i32 0
  %497 = load double, double* %496, align 8
  %498 = fpext float %495 to double
  %499 = fmul double %497, %498
  %500 = fadd double %492, %499
  %501 = add nuw nsw i64 %491, 1
  %502 = add i64 %493, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %490, !llvm.loop !119

504:                                              ; preds = %490, %485
  %505 = phi double [ %486, %485 ], [ %500, %490 ]
  %506 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 2
  store i32 0, i32* %506, align 4
  %507 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 1
  store i32 0, i32* %507, align 8
  %508 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 3, i32 0
  %509 = load i32, i32* %508, align 8
  %510 = icmp slt i32 %509, 0
  store double %505, double* %473, align 8
  br i1 %510, label %550, label %511, !prof !2

511:                                              ; preds = %504
  store i32 0, i32* %465, align 4
  br label %550

512:                                              ; preds = %512, %483
  %513 = phi i64 [ 0, %483 ], [ %547, %512 ]
  %514 = phi double [ %474, %483 ], [ %546, %512 ]
  %515 = phi i64 [ %484, %483 ], [ %548, %512 ]
  %516 = getelementptr inbounds float, float* %478, i64 %513
  %517 = load float, float* %516, align 4
  %518 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %513, i32 0
  %519 = load double, double* %518, align 8
  %520 = fpext float %517 to double
  %521 = fmul double %519, %520
  %522 = fadd double %514, %521
  %523 = or i64 %513, 1
  %524 = getelementptr inbounds float, float* %478, i64 %523
  %525 = load float, float* %524, align 4
  %526 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %523, i32 0
  %527 = load double, double* %526, align 8
  %528 = fpext float %525 to double
  %529 = fmul double %527, %528
  %530 = fadd double %522, %529
  %531 = or i64 %513, 2
  %532 = getelementptr inbounds float, float* %478, i64 %531
  %533 = load float, float* %532, align 4
  %534 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %531, i32 0
  %535 = load double, double* %534, align 8
  %536 = fpext float %533 to double
  %537 = fmul double %535, %536
  %538 = fadd double %530, %537
  %539 = or i64 %513, 3
  %540 = getelementptr inbounds float, float* %478, i64 %539
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %479, i64 %539, i32 0
  %543 = load double, double* %542, align 8
  %544 = fpext float %541 to double
  %545 = fmul double %543, %544
  %546 = fadd double %538, %545
  %547 = add nuw nsw i64 %513, 4
  %548 = add i64 %515, -4
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %485, label %512

550:                                              ; preds = %460, %464, %468, %504, %511
  %551 = load i32, i32* %15, align 4
  %552 = icmp ugt i32 %551, 5
  br i1 %552, label %555, label %553, !prof !3

553:                                              ; preds = %550
  %554 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %554, align 8
  br label %555

555:                                              ; preds = %553, %550
  %556 = load i32, i32* %22, align 4
  %557 = icmp ugt i32 %556, 5
  br i1 %557, label %559, label %558, !prof !3

558:                                              ; preds = %555
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %563

559:                                              ; preds = %555
  %560 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %561 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %560, align 8
  %562 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %561, i64 5
  br label %563

563:                                              ; preds = %559, %558
  %564 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %558 ], [ %562, %559 ]
  %565 = load i8, i8* %31, align 8, !range !6
  %566 = icmp eq i8 %565, 0
  br i1 %566, label %653, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 1
  %569 = load i32, i32* %568, align 4
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %653, label %571

571:                                              ; preds = %567
  %572 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %573 = load i32, i32* %572, align 4
  %574 = icmp eq i32 %573, %569
  br i1 %574, label %575, label %653, !prof !3

575:                                              ; preds = %571
  %576 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 0, i32 0
  %577 = load double, double* %576, align 8
  %578 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %579 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 2
  %580 = zext i32 %569 to i64
  %581 = load float*, float** %578, align 8
  %582 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %579, align 8
  %583 = add nsw i64 %580, -1
  %584 = and i64 %580, 3
  %585 = icmp ult i64 %583, 3
  br i1 %585, label %588, label %586

586:                                              ; preds = %575
  %587 = sub nsw i64 %580, %584
  br label %615

588:                                              ; preds = %615, %575
  %589 = phi double [ undef, %575 ], [ %649, %615 ]
  %590 = phi i64 [ 0, %575 ], [ %650, %615 ]
  %591 = phi double [ %577, %575 ], [ %649, %615 ]
  %592 = icmp eq i64 %584, 0
  br i1 %592, label %607, label %593

593:                                              ; preds = %588, %593
  %594 = phi i64 [ %604, %593 ], [ %590, %588 ]
  %595 = phi double [ %603, %593 ], [ %591, %588 ]
  %596 = phi i64 [ %605, %593 ], [ %584, %588 ]
  %597 = getelementptr inbounds float, float* %581, i64 %594
  %598 = load float, float* %597, align 4
  %599 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %582, i64 %594, i32 0
  %600 = load double, double* %599, align 8
  %601 = fpext float %598 to double
  %602 = fmul double %600, %601
  %603 = fadd double %595, %602
  %604 = add nuw nsw i64 %594, 1
  %605 = add i64 %596, -1
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %607, label %593, !llvm.loop !120

607:                                              ; preds = %593, %588
  %608 = phi double [ %589, %588 ], [ %603, %593 ]
  %609 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 2
  store i32 0, i32* %609, align 4
  %610 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 1
  store i32 0, i32* %610, align 8
  %611 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 3, i32 0
  %612 = load i32, i32* %611, align 8
  %613 = icmp slt i32 %612, 0
  store double %608, double* %576, align 8
  br i1 %613, label %653, label %614, !prof !2

614:                                              ; preds = %607
  store i32 0, i32* %568, align 4
  br label %653

615:                                              ; preds = %615, %586
  %616 = phi i64 [ 0, %586 ], [ %650, %615 ]
  %617 = phi double [ %577, %586 ], [ %649, %615 ]
  %618 = phi i64 [ %587, %586 ], [ %651, %615 ]
  %619 = getelementptr inbounds float, float* %581, i64 %616
  %620 = load float, float* %619, align 4
  %621 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %582, i64 %616, i32 0
  %622 = load double, double* %621, align 8
  %623 = fpext float %620 to double
  %624 = fmul double %622, %623
  %625 = fadd double %617, %624
  %626 = or i64 %616, 1
  %627 = getelementptr inbounds float, float* %581, i64 %626
  %628 = load float, float* %627, align 4
  %629 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %582, i64 %626, i32 0
  %630 = load double, double* %629, align 8
  %631 = fpext float %628 to double
  %632 = fmul double %630, %631
  %633 = fadd double %625, %632
  %634 = or i64 %616, 2
  %635 = getelementptr inbounds float, float* %581, i64 %634
  %636 = load float, float* %635, align 4
  %637 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %582, i64 %634, i32 0
  %638 = load double, double* %637, align 8
  %639 = fpext float %636 to double
  %640 = fmul double %638, %639
  %641 = fadd double %633, %640
  %642 = or i64 %616, 3
  %643 = getelementptr inbounds float, float* %581, i64 %642
  %644 = load float, float* %643, align 4
  %645 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %582, i64 %642, i32 0
  %646 = load double, double* %645, align 8
  %647 = fpext float %644 to double
  %648 = fmul double %646, %647
  %649 = fadd double %641, %648
  %650 = add nuw nsw i64 %616, 4
  %651 = add i64 %618, -4
  %652 = icmp eq i64 %651, 0
  br i1 %652, label %588, label %615

653:                                              ; preds = %563, %567, %571, %607, %614
  %654 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %461, i64 0, i32 0, i32 0
  %655 = load double, double* %654, align 8
  %656 = load <2 x double>, <2 x double>* %7, align 16
  %657 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %564, i64 0, i32 0, i32 0
  %658 = load double, double* %657, align 8
  %659 = insertelement <2 x double> undef, double %655, i32 0
  %660 = insertelement <2 x double> %659, double %658, i32 1
  %661 = fadd <2 x double> %656, %660
  store <2 x double> %661, <2 x double>* %7, align 16
  %662 = bitcast <2 x double>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %662) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %662, i8* nonnull align 16 %447, i64 16, i1 false)
  %663 = load i32, i32* %15, align 4
  %664 = icmp ugt i32 %663, 6
  br i1 %664, label %667, label %665, !prof !3

665:                                              ; preds = %653
  %666 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %666, align 8
  br label %667

667:                                              ; preds = %665, %653
  %668 = load i32, i32* %22, align 4
  %669 = icmp ugt i32 %668, 6
  br i1 %669, label %671, label %670, !prof !3

670:                                              ; preds = %667
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %675

671:                                              ; preds = %667
  %672 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %673 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %672, align 8
  %674 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %673, i64 6
  br label %675

675:                                              ; preds = %671, %670
  %676 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %670 ], [ %674, %671 ]
  %677 = load i8, i8* %31, align 8, !range !6
  %678 = icmp eq i8 %677, 0
  br i1 %678, label %765, label %679

679:                                              ; preds = %675
  %680 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 3, i32 1
  %681 = load i32, i32* %680, align 4
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %765, label %683

683:                                              ; preds = %679
  %684 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %685 = load i32, i32* %684, align 4
  %686 = icmp eq i32 %685, %681
  br i1 %686, label %687, label %765, !prof !3

687:                                              ; preds = %683
  %688 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 0, i32 0
  %689 = load double, double* %688, align 8
  %690 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %691 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 3, i32 2
  %692 = zext i32 %681 to i64
  %693 = load float*, float** %690, align 8
  %694 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %691, align 8
  %695 = add nsw i64 %692, -1
  %696 = and i64 %692, 3
  %697 = icmp ult i64 %695, 3
  br i1 %697, label %700, label %698

698:                                              ; preds = %687
  %699 = sub nsw i64 %692, %696
  br label %727

700:                                              ; preds = %727, %687
  %701 = phi double [ undef, %687 ], [ %761, %727 ]
  %702 = phi i64 [ 0, %687 ], [ %762, %727 ]
  %703 = phi double [ %689, %687 ], [ %761, %727 ]
  %704 = icmp eq i64 %696, 0
  br i1 %704, label %719, label %705

705:                                              ; preds = %700, %705
  %706 = phi i64 [ %716, %705 ], [ %702, %700 ]
  %707 = phi double [ %715, %705 ], [ %703, %700 ]
  %708 = phi i64 [ %717, %705 ], [ %696, %700 ]
  %709 = getelementptr inbounds float, float* %693, i64 %706
  %710 = load float, float* %709, align 4
  %711 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %706, i32 0
  %712 = load double, double* %711, align 8
  %713 = fpext float %710 to double
  %714 = fmul double %712, %713
  %715 = fadd double %707, %714
  %716 = add nuw nsw i64 %706, 1
  %717 = add i64 %708, -1
  %718 = icmp eq i64 %717, 0
  br i1 %718, label %719, label %705, !llvm.loop !121

719:                                              ; preds = %705, %700
  %720 = phi double [ %701, %700 ], [ %715, %705 ]
  %721 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 2
  store i32 0, i32* %721, align 4
  %722 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 1
  store i32 0, i32* %722, align 8
  %723 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 3, i32 0
  %724 = load i32, i32* %723, align 8
  %725 = icmp slt i32 %724, 0
  store double %720, double* %688, align 8
  br i1 %725, label %765, label %726, !prof !2

726:                                              ; preds = %719
  store i32 0, i32* %680, align 4
  br label %765

727:                                              ; preds = %727, %698
  %728 = phi i64 [ 0, %698 ], [ %762, %727 ]
  %729 = phi double [ %689, %698 ], [ %761, %727 ]
  %730 = phi i64 [ %699, %698 ], [ %763, %727 ]
  %731 = getelementptr inbounds float, float* %693, i64 %728
  %732 = load float, float* %731, align 4
  %733 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %728, i32 0
  %734 = load double, double* %733, align 8
  %735 = fpext float %732 to double
  %736 = fmul double %734, %735
  %737 = fadd double %729, %736
  %738 = or i64 %728, 1
  %739 = getelementptr inbounds float, float* %693, i64 %738
  %740 = load float, float* %739, align 4
  %741 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %738, i32 0
  %742 = load double, double* %741, align 8
  %743 = fpext float %740 to double
  %744 = fmul double %742, %743
  %745 = fadd double %737, %744
  %746 = or i64 %728, 2
  %747 = getelementptr inbounds float, float* %693, i64 %746
  %748 = load float, float* %747, align 4
  %749 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %746, i32 0
  %750 = load double, double* %749, align 8
  %751 = fpext float %748 to double
  %752 = fmul double %750, %751
  %753 = fadd double %745, %752
  %754 = or i64 %728, 3
  %755 = getelementptr inbounds float, float* %693, i64 %754
  %756 = load float, float* %755, align 4
  %757 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %754, i32 0
  %758 = load double, double* %757, align 8
  %759 = fpext float %756 to double
  %760 = fmul double %758, %759
  %761 = fadd double %753, %760
  %762 = add nuw nsw i64 %728, 4
  %763 = add i64 %730, -4
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %700, label %727

765:                                              ; preds = %675, %679, %683, %719, %726
  %766 = load i32, i32* %15, align 4
  %767 = icmp ugt i32 %766, 7
  br i1 %767, label %770, label %768, !prof !3

768:                                              ; preds = %765
  %769 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %769, align 8
  br label %770

770:                                              ; preds = %768, %765
  %771 = load i32, i32* %22, align 4
  %772 = icmp ugt i32 %771, 7
  br i1 %772, label %774, label %773, !prof !3

773:                                              ; preds = %770
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %778

774:                                              ; preds = %770
  %775 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %776 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %775, align 8
  %777 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %776, i64 7
  br label %778

778:                                              ; preds = %774, %773
  %779 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %773 ], [ %777, %774 ]
  %780 = load i8, i8* %31, align 8, !range !6
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %868, label %782

782:                                              ; preds = %778
  %783 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 3, i32 1
  %784 = load i32, i32* %783, align 4
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %868, label %786

786:                                              ; preds = %782
  %787 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %788 = load i32, i32* %787, align 4
  %789 = icmp eq i32 %788, %784
  br i1 %789, label %790, label %868, !prof !3

790:                                              ; preds = %786
  %791 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 0, i32 0
  %792 = load double, double* %791, align 8
  %793 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %794 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 3, i32 2
  %795 = zext i32 %784 to i64
  %796 = load float*, float** %793, align 8
  %797 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %794, align 8
  %798 = add nsw i64 %795, -1
  %799 = and i64 %795, 3
  %800 = icmp ult i64 %798, 3
  br i1 %800, label %803, label %801

801:                                              ; preds = %790
  %802 = sub nsw i64 %795, %799
  br label %830

803:                                              ; preds = %830, %790
  %804 = phi double [ undef, %790 ], [ %864, %830 ]
  %805 = phi i64 [ 0, %790 ], [ %865, %830 ]
  %806 = phi double [ %792, %790 ], [ %864, %830 ]
  %807 = icmp eq i64 %799, 0
  br i1 %807, label %822, label %808

808:                                              ; preds = %803, %808
  %809 = phi i64 [ %819, %808 ], [ %805, %803 ]
  %810 = phi double [ %818, %808 ], [ %806, %803 ]
  %811 = phi i64 [ %820, %808 ], [ %799, %803 ]
  %812 = getelementptr inbounds float, float* %796, i64 %809
  %813 = load float, float* %812, align 4
  %814 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %809, i32 0
  %815 = load double, double* %814, align 8
  %816 = fpext float %813 to double
  %817 = fmul double %815, %816
  %818 = fadd double %810, %817
  %819 = add nuw nsw i64 %809, 1
  %820 = add i64 %811, -1
  %821 = icmp eq i64 %820, 0
  br i1 %821, label %822, label %808, !llvm.loop !122

822:                                              ; preds = %808, %803
  %823 = phi double [ %804, %803 ], [ %818, %808 ]
  %824 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 2
  store i32 0, i32* %824, align 4
  %825 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 1
  store i32 0, i32* %825, align 8
  %826 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 3, i32 0
  %827 = load i32, i32* %826, align 8
  %828 = icmp slt i32 %827, 0
  store double %823, double* %791, align 8
  br i1 %828, label %868, label %829, !prof !2

829:                                              ; preds = %822
  store i32 0, i32* %783, align 4
  br label %868

830:                                              ; preds = %830, %801
  %831 = phi i64 [ 0, %801 ], [ %865, %830 ]
  %832 = phi double [ %792, %801 ], [ %864, %830 ]
  %833 = phi i64 [ %802, %801 ], [ %866, %830 ]
  %834 = getelementptr inbounds float, float* %796, i64 %831
  %835 = load float, float* %834, align 4
  %836 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %831, i32 0
  %837 = load double, double* %836, align 8
  %838 = fpext float %835 to double
  %839 = fmul double %837, %838
  %840 = fadd double %832, %839
  %841 = or i64 %831, 1
  %842 = getelementptr inbounds float, float* %796, i64 %841
  %843 = load float, float* %842, align 4
  %844 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %841, i32 0
  %845 = load double, double* %844, align 8
  %846 = fpext float %843 to double
  %847 = fmul double %845, %846
  %848 = fadd double %840, %847
  %849 = or i64 %831, 2
  %850 = getelementptr inbounds float, float* %796, i64 %849
  %851 = load float, float* %850, align 4
  %852 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %849, i32 0
  %853 = load double, double* %852, align 8
  %854 = fpext float %851 to double
  %855 = fmul double %853, %854
  %856 = fadd double %848, %855
  %857 = or i64 %831, 3
  %858 = getelementptr inbounds float, float* %796, i64 %857
  %859 = load float, float* %858, align 4
  %860 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %857, i32 0
  %861 = load double, double* %860, align 8
  %862 = fpext float %859 to double
  %863 = fmul double %861, %862
  %864 = fadd double %856, %863
  %865 = add nuw nsw i64 %831, 4
  %866 = add i64 %833, -4
  %867 = icmp eq i64 %866, 0
  br i1 %867, label %803, label %830

868:                                              ; preds = %778, %782, %786, %822, %829
  %869 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 0, i32 0
  %870 = load double, double* %869, align 8
  %871 = load <2 x double>, <2 x double>* %9, align 16
  %872 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 0, i32 0
  %873 = load double, double* %872, align 8
  %874 = insertelement <2 x double> undef, double %870, i32 0
  %875 = insertelement <2 x double> %874, double %873, i32 1
  %876 = fadd <2 x double> %871, %875
  store <2 x double> %876, <2 x double>* %9, align 16
  %877 = bitcast <2 x double>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %877) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %877, i8* nonnull align 16 %662, i64 16, i1 false)
  %878 = load i32, i32* %15, align 4
  %879 = icmp ugt i32 %878, 8
  br i1 %879, label %882, label %880, !prof !3

880:                                              ; preds = %868
  %881 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %881, align 8
  br label %882

882:                                              ; preds = %880, %868
  %883 = load i32, i32* %22, align 4
  %884 = icmp ugt i32 %883, 8
  br i1 %884, label %886, label %885, !prof !3

885:                                              ; preds = %882
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %890

886:                                              ; preds = %882
  %887 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %888 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %887, align 8
  %889 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %888, i64 8
  br label %890

890:                                              ; preds = %886, %885
  %891 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %885 ], [ %889, %886 ]
  %892 = load i8, i8* %31, align 8, !range !6
  %893 = icmp eq i8 %892, 0
  br i1 %893, label %980, label %894

894:                                              ; preds = %890
  %895 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %891, i64 0, i32 3, i32 1
  %896 = load i32, i32* %895, align 4
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %980, label %898

898:                                              ; preds = %894
  %899 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %900 = load i32, i32* %899, align 4
  %901 = icmp eq i32 %900, %896
  br i1 %901, label %902, label %980, !prof !3

902:                                              ; preds = %898
  %903 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %891, i64 0, i32 0, i32 0
  %904 = load double, double* %903, align 8
  %905 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %906 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %891, i64 0, i32 3, i32 2
  %907 = zext i32 %896 to i64
  %908 = load float*, float** %905, align 8
  %909 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %906, align 8
  %910 = add nsw i64 %907, -1
  %911 = and i64 %907, 3
  %912 = icmp ult i64 %910, 3
  br i1 %912, label %915, label %913

913:                                              ; preds = %902
  %914 = sub nsw i64 %907, %911
  br label %942

915:                                              ; preds = %942, %902
  %916 = phi double [ undef, %902 ], [ %976, %942 ]
  %917 = phi i64 [ 0, %902 ], [ %977, %942 ]
  %918 = phi double [ %904, %902 ], [ %976, %942 ]
  %919 = icmp eq i64 %911, 0
  br i1 %919, label %934, label %920

920:                                              ; preds = %915, %920
  %921 = phi i64 [ %931, %920 ], [ %917, %915 ]
  %922 = phi double [ %930, %920 ], [ %918, %915 ]
  %923 = phi i64 [ %932, %920 ], [ %911, %915 ]
  %924 = getelementptr inbounds float, float* %908, i64 %921
  %925 = load float, float* %924, align 4
  %926 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %909, i64 %921, i32 0
  %927 = load double, double* %926, align 8
  %928 = fpext float %925 to double
  %929 = fmul double %927, %928
  %930 = fadd double %922, %929
  %931 = add nuw nsw i64 %921, 1
  %932 = add i64 %923, -1
  %933 = icmp eq i64 %932, 0
  br i1 %933, label %934, label %920, !llvm.loop !123

934:                                              ; preds = %920, %915
  %935 = phi double [ %916, %915 ], [ %930, %920 ]
  %936 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %891, i64 0, i32 2
  store i32 0, i32* %936, align 4
  %937 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %891, i64 0, i32 1
  store i32 0, i32* %937, align 8
  %938 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %891, i64 0, i32 3, i32 0
  %939 = load i32, i32* %938, align 8
  %940 = icmp slt i32 %939, 0
  store double %935, double* %903, align 8
  br i1 %940, label %980, label %941, !prof !2

941:                                              ; preds = %934
  store i32 0, i32* %895, align 4
  br label %980

942:                                              ; preds = %942, %913
  %943 = phi i64 [ 0, %913 ], [ %977, %942 ]
  %944 = phi double [ %904, %913 ], [ %976, %942 ]
  %945 = phi i64 [ %914, %913 ], [ %978, %942 ]
  %946 = getelementptr inbounds float, float* %908, i64 %943
  %947 = load float, float* %946, align 4
  %948 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %909, i64 %943, i32 0
  %949 = load double, double* %948, align 8
  %950 = fpext float %947 to double
  %951 = fmul double %949, %950
  %952 = fadd double %944, %951
  %953 = or i64 %943, 1
  %954 = getelementptr inbounds float, float* %908, i64 %953
  %955 = load float, float* %954, align 4
  %956 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %909, i64 %953, i32 0
  %957 = load double, double* %956, align 8
  %958 = fpext float %955 to double
  %959 = fmul double %957, %958
  %960 = fadd double %952, %959
  %961 = or i64 %943, 2
  %962 = getelementptr inbounds float, float* %908, i64 %961
  %963 = load float, float* %962, align 4
  %964 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %909, i64 %961, i32 0
  %965 = load double, double* %964, align 8
  %966 = fpext float %963 to double
  %967 = fmul double %965, %966
  %968 = fadd double %960, %967
  %969 = or i64 %943, 3
  %970 = getelementptr inbounds float, float* %908, i64 %969
  %971 = load float, float* %970, align 4
  %972 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %909, i64 %969, i32 0
  %973 = load double, double* %972, align 8
  %974 = fpext float %971 to double
  %975 = fmul double %973, %974
  %976 = fadd double %968, %975
  %977 = add nuw nsw i64 %943, 4
  %978 = add i64 %945, -4
  %979 = icmp eq i64 %978, 0
  br i1 %979, label %915, label %942

980:                                              ; preds = %890, %894, %898, %934, %941
  %981 = load i32, i32* %15, align 4
  %982 = icmp ugt i32 %981, 9
  br i1 %982, label %985, label %983, !prof !3

983:                                              ; preds = %980
  %984 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %984, align 8
  br label %985

985:                                              ; preds = %983, %980
  %986 = load i32, i32* %22, align 4
  %987 = icmp ugt i32 %986, 9
  br i1 %987, label %989, label %988, !prof !3

988:                                              ; preds = %985
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %993

989:                                              ; preds = %985
  %990 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %991 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %990, align 8
  %992 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %991, i64 9
  br label %993

993:                                              ; preds = %989, %988
  %994 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %988 ], [ %992, %989 ]
  %995 = load i8, i8* %31, align 8, !range !6
  %996 = icmp eq i8 %995, 0
  br i1 %996, label %1083, label %997

997:                                              ; preds = %993
  %998 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %994, i64 0, i32 3, i32 1
  %999 = load i32, i32* %998, align 4
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1083, label %1001

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %1003 = load i32, i32* %1002, align 4
  %1004 = icmp eq i32 %1003, %999
  br i1 %1004, label %1005, label %1083, !prof !3

1005:                                             ; preds = %1001
  %1006 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %994, i64 0, i32 0, i32 0
  %1007 = load double, double* %1006, align 8
  %1008 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %1009 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %994, i64 0, i32 3, i32 2
  %1010 = zext i32 %999 to i64
  %1011 = load float*, float** %1008, align 8
  %1012 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1009, align 8
  %1013 = add nsw i64 %1010, -1
  %1014 = and i64 %1010, 3
  %1015 = icmp ult i64 %1013, 3
  br i1 %1015, label %1018, label %1016

1016:                                             ; preds = %1005
  %1017 = sub nsw i64 %1010, %1014
  br label %1045

1018:                                             ; preds = %1045, %1005
  %1019 = phi double [ undef, %1005 ], [ %1079, %1045 ]
  %1020 = phi i64 [ 0, %1005 ], [ %1080, %1045 ]
  %1021 = phi double [ %1007, %1005 ], [ %1079, %1045 ]
  %1022 = icmp eq i64 %1014, 0
  br i1 %1022, label %1037, label %1023

1023:                                             ; preds = %1018, %1023
  %1024 = phi i64 [ %1034, %1023 ], [ %1020, %1018 ]
  %1025 = phi double [ %1033, %1023 ], [ %1021, %1018 ]
  %1026 = phi i64 [ %1035, %1023 ], [ %1014, %1018 ]
  %1027 = getelementptr inbounds float, float* %1011, i64 %1024
  %1028 = load float, float* %1027, align 4
  %1029 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1012, i64 %1024, i32 0
  %1030 = load double, double* %1029, align 8
  %1031 = fpext float %1028 to double
  %1032 = fmul double %1030, %1031
  %1033 = fadd double %1025, %1032
  %1034 = add nuw nsw i64 %1024, 1
  %1035 = add i64 %1026, -1
  %1036 = icmp eq i64 %1035, 0
  br i1 %1036, label %1037, label %1023, !llvm.loop !124

1037:                                             ; preds = %1023, %1018
  %1038 = phi double [ %1019, %1018 ], [ %1033, %1023 ]
  %1039 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %994, i64 0, i32 2
  store i32 0, i32* %1039, align 4
  %1040 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %994, i64 0, i32 1
  store i32 0, i32* %1040, align 8
  %1041 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %994, i64 0, i32 3, i32 0
  %1042 = load i32, i32* %1041, align 8
  %1043 = icmp slt i32 %1042, 0
  store double %1038, double* %1006, align 8
  br i1 %1043, label %1083, label %1044, !prof !2

1044:                                             ; preds = %1037
  store i32 0, i32* %998, align 4
  br label %1083

1045:                                             ; preds = %1045, %1016
  %1046 = phi i64 [ 0, %1016 ], [ %1080, %1045 ]
  %1047 = phi double [ %1007, %1016 ], [ %1079, %1045 ]
  %1048 = phi i64 [ %1017, %1016 ], [ %1081, %1045 ]
  %1049 = getelementptr inbounds float, float* %1011, i64 %1046
  %1050 = load float, float* %1049, align 4
  %1051 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1012, i64 %1046, i32 0
  %1052 = load double, double* %1051, align 8
  %1053 = fpext float %1050 to double
  %1054 = fmul double %1052, %1053
  %1055 = fadd double %1047, %1054
  %1056 = or i64 %1046, 1
  %1057 = getelementptr inbounds float, float* %1011, i64 %1056
  %1058 = load float, float* %1057, align 4
  %1059 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1012, i64 %1056, i32 0
  %1060 = load double, double* %1059, align 8
  %1061 = fpext float %1058 to double
  %1062 = fmul double %1060, %1061
  %1063 = fadd double %1055, %1062
  %1064 = or i64 %1046, 2
  %1065 = getelementptr inbounds float, float* %1011, i64 %1064
  %1066 = load float, float* %1065, align 4
  %1067 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1012, i64 %1064, i32 0
  %1068 = load double, double* %1067, align 8
  %1069 = fpext float %1066 to double
  %1070 = fmul double %1068, %1069
  %1071 = fadd double %1063, %1070
  %1072 = or i64 %1046, 3
  %1073 = getelementptr inbounds float, float* %1011, i64 %1072
  %1074 = load float, float* %1073, align 4
  %1075 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1012, i64 %1072, i32 0
  %1076 = load double, double* %1075, align 8
  %1077 = fpext float %1074 to double
  %1078 = fmul double %1076, %1077
  %1079 = fadd double %1071, %1078
  %1080 = add nuw nsw i64 %1046, 4
  %1081 = add i64 %1048, -4
  %1082 = icmp eq i64 %1081, 0
  br i1 %1082, label %1018, label %1045

1083:                                             ; preds = %993, %997, %1001, %1037, %1044
  %1084 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %891, i64 0, i32 0, i32 0
  %1085 = load double, double* %1084, align 8
  %1086 = load <2 x double>, <2 x double>* %11, align 16
  %1087 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %994, i64 0, i32 0, i32 0
  %1088 = load double, double* %1087, align 8
  %1089 = insertelement <2 x double> undef, double %1085, i32 0
  %1090 = insertelement <2 x double> %1089, double %1088, i32 1
  %1091 = fadd <2 x double> %1086, %1090
  store <2 x double> %1091, <2 x double>* %11, align 16
  %1092 = bitcast <2 x double>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1092) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %1092, i8* nonnull align 16 %877, i64 16, i1 false)
  %1093 = load i32, i32* %15, align 4
  %1094 = icmp ugt i32 %1093, 10
  br i1 %1094, label %1097, label %1095, !prof !3

1095:                                             ; preds = %1083
  %1096 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %1096, align 8
  br label %1097

1097:                                             ; preds = %1095, %1083
  %1098 = load i32, i32* %22, align 4
  %1099 = icmp ugt i32 %1098, 10
  br i1 %1099, label %1101, label %1100, !prof !3

1100:                                             ; preds = %1097
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1105

1101:                                             ; preds = %1097
  %1102 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1103 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %1102, align 8
  %1104 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1103, i64 10
  br label %1105

1105:                                             ; preds = %1101, %1100
  %1106 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1100 ], [ %1104, %1101 ]
  %1107 = load i8, i8* %31, align 8, !range !6
  %1108 = icmp eq i8 %1107, 0
  br i1 %1108, label %1195, label %1109

1109:                                             ; preds = %1105
  %1110 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1106, i64 0, i32 3, i32 1
  %1111 = load i32, i32* %1110, align 4
  %1112 = icmp eq i32 %1111, 0
  br i1 %1112, label %1195, label %1113

1113:                                             ; preds = %1109
  %1114 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %1115 = load i32, i32* %1114, align 4
  %1116 = icmp eq i32 %1115, %1111
  br i1 %1116, label %1117, label %1195, !prof !3

1117:                                             ; preds = %1113
  %1118 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1106, i64 0, i32 0, i32 0
  %1119 = load double, double* %1118, align 8
  %1120 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %1121 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1106, i64 0, i32 3, i32 2
  %1122 = zext i32 %1111 to i64
  %1123 = load float*, float** %1120, align 8
  %1124 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1121, align 8
  %1125 = add nsw i64 %1122, -1
  %1126 = and i64 %1122, 3
  %1127 = icmp ult i64 %1125, 3
  br i1 %1127, label %1130, label %1128

1128:                                             ; preds = %1117
  %1129 = sub nsw i64 %1122, %1126
  br label %1157

1130:                                             ; preds = %1157, %1117
  %1131 = phi double [ undef, %1117 ], [ %1191, %1157 ]
  %1132 = phi i64 [ 0, %1117 ], [ %1192, %1157 ]
  %1133 = phi double [ %1119, %1117 ], [ %1191, %1157 ]
  %1134 = icmp eq i64 %1126, 0
  br i1 %1134, label %1149, label %1135

1135:                                             ; preds = %1130, %1135
  %1136 = phi i64 [ %1146, %1135 ], [ %1132, %1130 ]
  %1137 = phi double [ %1145, %1135 ], [ %1133, %1130 ]
  %1138 = phi i64 [ %1147, %1135 ], [ %1126, %1130 ]
  %1139 = getelementptr inbounds float, float* %1123, i64 %1136
  %1140 = load float, float* %1139, align 4
  %1141 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1124, i64 %1136, i32 0
  %1142 = load double, double* %1141, align 8
  %1143 = fpext float %1140 to double
  %1144 = fmul double %1142, %1143
  %1145 = fadd double %1137, %1144
  %1146 = add nuw nsw i64 %1136, 1
  %1147 = add i64 %1138, -1
  %1148 = icmp eq i64 %1147, 0
  br i1 %1148, label %1149, label %1135, !llvm.loop !125

1149:                                             ; preds = %1135, %1130
  %1150 = phi double [ %1131, %1130 ], [ %1145, %1135 ]
  %1151 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1106, i64 0, i32 2
  store i32 0, i32* %1151, align 4
  %1152 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1106, i64 0, i32 1
  store i32 0, i32* %1152, align 8
  %1153 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1106, i64 0, i32 3, i32 0
  %1154 = load i32, i32* %1153, align 8
  %1155 = icmp slt i32 %1154, 0
  store double %1150, double* %1118, align 8
  br i1 %1155, label %1195, label %1156, !prof !2

1156:                                             ; preds = %1149
  store i32 0, i32* %1110, align 4
  br label %1195

1157:                                             ; preds = %1157, %1128
  %1158 = phi i64 [ 0, %1128 ], [ %1192, %1157 ]
  %1159 = phi double [ %1119, %1128 ], [ %1191, %1157 ]
  %1160 = phi i64 [ %1129, %1128 ], [ %1193, %1157 ]
  %1161 = getelementptr inbounds float, float* %1123, i64 %1158
  %1162 = load float, float* %1161, align 4
  %1163 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1124, i64 %1158, i32 0
  %1164 = load double, double* %1163, align 8
  %1165 = fpext float %1162 to double
  %1166 = fmul double %1164, %1165
  %1167 = fadd double %1159, %1166
  %1168 = or i64 %1158, 1
  %1169 = getelementptr inbounds float, float* %1123, i64 %1168
  %1170 = load float, float* %1169, align 4
  %1171 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1124, i64 %1168, i32 0
  %1172 = load double, double* %1171, align 8
  %1173 = fpext float %1170 to double
  %1174 = fmul double %1172, %1173
  %1175 = fadd double %1167, %1174
  %1176 = or i64 %1158, 2
  %1177 = getelementptr inbounds float, float* %1123, i64 %1176
  %1178 = load float, float* %1177, align 4
  %1179 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1124, i64 %1176, i32 0
  %1180 = load double, double* %1179, align 8
  %1181 = fpext float %1178 to double
  %1182 = fmul double %1180, %1181
  %1183 = fadd double %1175, %1182
  %1184 = or i64 %1158, 3
  %1185 = getelementptr inbounds float, float* %1123, i64 %1184
  %1186 = load float, float* %1185, align 4
  %1187 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1124, i64 %1184, i32 0
  %1188 = load double, double* %1187, align 8
  %1189 = fpext float %1186 to double
  %1190 = fmul double %1188, %1189
  %1191 = fadd double %1183, %1190
  %1192 = add nuw nsw i64 %1158, 4
  %1193 = add i64 %1160, -4
  %1194 = icmp eq i64 %1193, 0
  br i1 %1194, label %1130, label %1157

1195:                                             ; preds = %1105, %1109, %1113, %1149, %1156
  %1196 = load i32, i32* %15, align 4
  %1197 = icmp ugt i32 %1196, 11
  br i1 %1197, label %1200, label %1198, !prof !3

1198:                                             ; preds = %1195
  %1199 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %1199, align 8
  br label %1200

1200:                                             ; preds = %1198, %1195
  %1201 = load i32, i32* %22, align 4
  %1202 = icmp ugt i32 %1201, 11
  br i1 %1202, label %1204, label %1203, !prof !3

1203:                                             ; preds = %1200
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1208

1204:                                             ; preds = %1200
  %1205 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %1206 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %1205, align 8
  %1207 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1206, i64 11
  br label %1208

1208:                                             ; preds = %1204, %1203
  %1209 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1203 ], [ %1207, %1204 ]
  %1210 = load i8, i8* %31, align 8, !range !6
  %1211 = icmp eq i8 %1210, 0
  br i1 %1211, label %1298, label %1212

1212:                                             ; preds = %1208
  %1213 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1209, i64 0, i32 3, i32 1
  %1214 = load i32, i32* %1213, align 4
  %1215 = icmp eq i32 %1214, 0
  br i1 %1215, label %1298, label %1216

1216:                                             ; preds = %1212
  %1217 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %1218 = load i32, i32* %1217, align 4
  %1219 = icmp eq i32 %1218, %1214
  br i1 %1219, label %1220, label %1298, !prof !3

1220:                                             ; preds = %1216
  %1221 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1209, i64 0, i32 0, i32 0
  %1222 = load double, double* %1221, align 8
  %1223 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %1224 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1209, i64 0, i32 3, i32 2
  %1225 = zext i32 %1214 to i64
  %1226 = load float*, float** %1223, align 8
  %1227 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1224, align 8
  %1228 = add nsw i64 %1225, -1
  %1229 = and i64 %1225, 3
  %1230 = icmp ult i64 %1228, 3
  br i1 %1230, label %1233, label %1231

1231:                                             ; preds = %1220
  %1232 = sub nsw i64 %1225, %1229
  br label %1260

1233:                                             ; preds = %1260, %1220
  %1234 = phi double [ undef, %1220 ], [ %1294, %1260 ]
  %1235 = phi i64 [ 0, %1220 ], [ %1295, %1260 ]
  %1236 = phi double [ %1222, %1220 ], [ %1294, %1260 ]
  %1237 = icmp eq i64 %1229, 0
  br i1 %1237, label %1252, label %1238

1238:                                             ; preds = %1233, %1238
  %1239 = phi i64 [ %1249, %1238 ], [ %1235, %1233 ]
  %1240 = phi double [ %1248, %1238 ], [ %1236, %1233 ]
  %1241 = phi i64 [ %1250, %1238 ], [ %1229, %1233 ]
  %1242 = getelementptr inbounds float, float* %1226, i64 %1239
  %1243 = load float, float* %1242, align 4
  %1244 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1227, i64 %1239, i32 0
  %1245 = load double, double* %1244, align 8
  %1246 = fpext float %1243 to double
  %1247 = fmul double %1245, %1246
  %1248 = fadd double %1240, %1247
  %1249 = add nuw nsw i64 %1239, 1
  %1250 = add i64 %1241, -1
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1252, label %1238, !llvm.loop !126

1252:                                             ; preds = %1238, %1233
  %1253 = phi double [ %1234, %1233 ], [ %1248, %1238 ]
  %1254 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1209, i64 0, i32 2
  store i32 0, i32* %1254, align 4
  %1255 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1209, i64 0, i32 1
  store i32 0, i32* %1255, align 8
  %1256 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1209, i64 0, i32 3, i32 0
  %1257 = load i32, i32* %1256, align 8
  %1258 = icmp slt i32 %1257, 0
  store double %1253, double* %1221, align 8
  br i1 %1258, label %1298, label %1259, !prof !2

1259:                                             ; preds = %1252
  store i32 0, i32* %1213, align 4
  br label %1298

1260:                                             ; preds = %1260, %1231
  %1261 = phi i64 [ 0, %1231 ], [ %1295, %1260 ]
  %1262 = phi double [ %1222, %1231 ], [ %1294, %1260 ]
  %1263 = phi i64 [ %1232, %1231 ], [ %1296, %1260 ]
  %1264 = getelementptr inbounds float, float* %1226, i64 %1261
  %1265 = load float, float* %1264, align 4
  %1266 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1227, i64 %1261, i32 0
  %1267 = load double, double* %1266, align 8
  %1268 = fpext float %1265 to double
  %1269 = fmul double %1267, %1268
  %1270 = fadd double %1262, %1269
  %1271 = or i64 %1261, 1
  %1272 = getelementptr inbounds float, float* %1226, i64 %1271
  %1273 = load float, float* %1272, align 4
  %1274 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1227, i64 %1271, i32 0
  %1275 = load double, double* %1274, align 8
  %1276 = fpext float %1273 to double
  %1277 = fmul double %1275, %1276
  %1278 = fadd double %1270, %1277
  %1279 = or i64 %1261, 2
  %1280 = getelementptr inbounds float, float* %1226, i64 %1279
  %1281 = load float, float* %1280, align 4
  %1282 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1227, i64 %1279, i32 0
  %1283 = load double, double* %1282, align 8
  %1284 = fpext float %1281 to double
  %1285 = fmul double %1283, %1284
  %1286 = fadd double %1278, %1285
  %1287 = or i64 %1261, 3
  %1288 = getelementptr inbounds float, float* %1226, i64 %1287
  %1289 = load float, float* %1288, align 4
  %1290 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1227, i64 %1287, i32 0
  %1291 = load double, double* %1290, align 8
  %1292 = fpext float %1289 to double
  %1293 = fmul double %1291, %1292
  %1294 = fadd double %1286, %1293
  %1295 = add nuw nsw i64 %1261, 4
  %1296 = add i64 %1263, -4
  %1297 = icmp eq i64 %1296, 0
  br i1 %1297, label %1233, label %1260

1298:                                             ; preds = %1208, %1212, %1216, %1252, %1259
  %1299 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1106, i64 0, i32 0, i32 0
  %1300 = load double, double* %1299, align 8
  %1301 = load <2 x double>, <2 x double>* %13, align 16
  %1302 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1209, i64 0, i32 0, i32 0
  %1303 = load double, double* %1302, align 8
  %1304 = insertelement <2 x double> undef, double %1300, i32 0
  %1305 = insertelement <2 x double> %1304, double %1303, i32 1
  %1306 = fadd <2 x double> %1301, %1305
  store <2 x double> %1306, <2 x double>* %13, align 16
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8) #6
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %10, %"struct.CFF::point_t"* nonnull dereferenceable(16) %12, %"struct.CFF::point_t"* nonnull dereferenceable(16) %14) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1092) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %877) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %662) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #6
  br label %1309

1307:                                             ; preds = %2
  %1308 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %1308, align 8
  br label %1309

1309:                                             ; preds = %1307, %1298
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE6hflex1ERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x double>, align 16
  %4 = bitcast <2 x double>* %3 to %"struct.CFF::point_t"*
  %5 = alloca <2 x double>, align 16
  %6 = bitcast <2 x double>* %5 to %"struct.CFF::point_t"*
  %7 = alloca %"struct.CFF::point_t", align 8
  %8 = alloca %"struct.CFF::point_t", align 8
  %9 = alloca <2 x double>, align 16
  %10 = bitcast <2 x double>* %9 to %"struct.CFF::point_t"*
  %11 = alloca %"struct.CFF::point_t", align 8
  %12 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 9
  br i1 %14, label %15, label %991, !prof !3

15:                                               ; preds = %2
  %16 = bitcast <2 x double>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %18 = bitcast %"struct.CFF::point_t"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 8 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %26

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %25 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %24, align 8
  br label %26

26:                                               ; preds = %23, %22
  %27 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %22 ], [ %25, %23 ]
  %28 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %29 = load i8, i8* %28, align 8, !range !6
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %117, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 3, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %117, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %33
  br i1 %38, label %39, label %117, !prof !3

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 0, i32 0
  %41 = load double, double* %40, align 8
  %42 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %43 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 3, i32 2
  %44 = zext i32 %33 to i64
  %45 = load float*, float** %42, align 8
  %46 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %43, align 8
  %47 = add nsw i64 %44, -1
  %48 = and i64 %44, 3
  %49 = icmp ult i64 %47, 3
  br i1 %49, label %52, label %50

50:                                               ; preds = %39
  %51 = sub nsw i64 %44, %48
  br label %79

52:                                               ; preds = %79, %39
  %53 = phi double [ undef, %39 ], [ %113, %79 ]
  %54 = phi i64 [ 0, %39 ], [ %114, %79 ]
  %55 = phi double [ %41, %39 ], [ %113, %79 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %71, label %57

57:                                               ; preds = %52, %57
  %58 = phi i64 [ %68, %57 ], [ %54, %52 ]
  %59 = phi double [ %67, %57 ], [ %55, %52 ]
  %60 = phi i64 [ %69, %57 ], [ %48, %52 ]
  %61 = getelementptr inbounds float, float* %45, i64 %58
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %58, i32 0
  %64 = load double, double* %63, align 8
  %65 = fpext float %62 to double
  %66 = fmul double %64, %65
  %67 = fadd double %59, %66
  %68 = add nuw nsw i64 %58, 1
  %69 = add i64 %60, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %57, !llvm.loop !127

71:                                               ; preds = %57, %52
  %72 = phi double [ %53, %52 ], [ %67, %57 ]
  %73 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 2
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 1
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 3, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp slt i32 %76, 0
  store double %72, double* %40, align 8
  br i1 %77, label %117, label %78, !prof !2

78:                                               ; preds = %71
  store i32 0, i32* %32, align 4
  br label %117

79:                                               ; preds = %79, %50
  %80 = phi i64 [ 0, %50 ], [ %114, %79 ]
  %81 = phi double [ %41, %50 ], [ %113, %79 ]
  %82 = phi i64 [ %51, %50 ], [ %115, %79 ]
  %83 = getelementptr inbounds float, float* %45, i64 %80
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %80, i32 0
  %86 = load double, double* %85, align 8
  %87 = fpext float %84 to double
  %88 = fmul double %86, %87
  %89 = fadd double %81, %88
  %90 = or i64 %80, 1
  %91 = getelementptr inbounds float, float* %45, i64 %90
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %90, i32 0
  %94 = load double, double* %93, align 8
  %95 = fpext float %92 to double
  %96 = fmul double %94, %95
  %97 = fadd double %89, %96
  %98 = or i64 %80, 2
  %99 = getelementptr inbounds float, float* %45, i64 %98
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %98, i32 0
  %102 = load double, double* %101, align 8
  %103 = fpext float %100 to double
  %104 = fmul double %102, %103
  %105 = fadd double %97, %104
  %106 = or i64 %80, 3
  %107 = getelementptr inbounds float, float* %45, i64 %106
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %46, i64 %106, i32 0
  %110 = load double, double* %109, align 8
  %111 = fpext float %108 to double
  %112 = fmul double %110, %111
  %113 = fadd double %105, %112
  %114 = add nuw nsw i64 %80, 4
  %115 = add i64 %82, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %52, label %79

117:                                              ; preds = %26, %31, %35, %71, %78
  %118 = load i32, i32* %12, align 4
  %119 = icmp ugt i32 %118, 1
  br i1 %119, label %122, label %120, !prof !3

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %121, align 8
  br label %122

122:                                              ; preds = %120, %117
  %123 = load i32, i32* %19, align 4
  %124 = icmp ugt i32 %123, 1
  br i1 %124, label %126, label %125, !prof !3

125:                                              ; preds = %122
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %130

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %128 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %127, align 8
  %129 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %128, i64 1
  br label %130

130:                                              ; preds = %126, %125
  %131 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %125 ], [ %129, %126 ]
  %132 = load i8, i8* %28, align 8, !range !6
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %220, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 0, i32 3, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %220, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, %136
  br i1 %141, label %142, label %220, !prof !3

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 0, i32 0, i32 0
  %144 = load double, double* %143, align 8
  %145 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %146 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 0, i32 3, i32 2
  %147 = zext i32 %136 to i64
  %148 = load float*, float** %145, align 8
  %149 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %146, align 8
  %150 = add nsw i64 %147, -1
  %151 = and i64 %147, 3
  %152 = icmp ult i64 %150, 3
  br i1 %152, label %155, label %153

153:                                              ; preds = %142
  %154 = sub nsw i64 %147, %151
  br label %182

155:                                              ; preds = %182, %142
  %156 = phi double [ undef, %142 ], [ %216, %182 ]
  %157 = phi i64 [ 0, %142 ], [ %217, %182 ]
  %158 = phi double [ %144, %142 ], [ %216, %182 ]
  %159 = icmp eq i64 %151, 0
  br i1 %159, label %174, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %171, %160 ], [ %157, %155 ]
  %162 = phi double [ %170, %160 ], [ %158, %155 ]
  %163 = phi i64 [ %172, %160 ], [ %151, %155 ]
  %164 = getelementptr inbounds float, float* %148, i64 %161
  %165 = load float, float* %164, align 4
  %166 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %149, i64 %161, i32 0
  %167 = load double, double* %166, align 8
  %168 = fpext float %165 to double
  %169 = fmul double %167, %168
  %170 = fadd double %162, %169
  %171 = add nuw nsw i64 %161, 1
  %172 = add i64 %163, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %160, !llvm.loop !128

174:                                              ; preds = %160, %155
  %175 = phi double [ %156, %155 ], [ %170, %160 ]
  %176 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 0, i32 2
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 0, i32 1
  store i32 0, i32* %177, align 8
  %178 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 0, i32 3, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = icmp slt i32 %179, 0
  store double %175, double* %143, align 8
  br i1 %180, label %220, label %181, !prof !2

181:                                              ; preds = %174
  store i32 0, i32* %135, align 4
  br label %220

182:                                              ; preds = %182, %153
  %183 = phi i64 [ 0, %153 ], [ %217, %182 ]
  %184 = phi double [ %144, %153 ], [ %216, %182 ]
  %185 = phi i64 [ %154, %153 ], [ %218, %182 ]
  %186 = getelementptr inbounds float, float* %148, i64 %183
  %187 = load float, float* %186, align 4
  %188 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %149, i64 %183, i32 0
  %189 = load double, double* %188, align 8
  %190 = fpext float %187 to double
  %191 = fmul double %189, %190
  %192 = fadd double %184, %191
  %193 = or i64 %183, 1
  %194 = getelementptr inbounds float, float* %148, i64 %193
  %195 = load float, float* %194, align 4
  %196 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %149, i64 %193, i32 0
  %197 = load double, double* %196, align 8
  %198 = fpext float %195 to double
  %199 = fmul double %197, %198
  %200 = fadd double %192, %199
  %201 = or i64 %183, 2
  %202 = getelementptr inbounds float, float* %148, i64 %201
  %203 = load float, float* %202, align 4
  %204 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %149, i64 %201, i32 0
  %205 = load double, double* %204, align 8
  %206 = fpext float %203 to double
  %207 = fmul double %205, %206
  %208 = fadd double %200, %207
  %209 = or i64 %183, 3
  %210 = getelementptr inbounds float, float* %148, i64 %209
  %211 = load float, float* %210, align 4
  %212 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %149, i64 %209, i32 0
  %213 = load double, double* %212, align 8
  %214 = fpext float %211 to double
  %215 = fmul double %213, %214
  %216 = fadd double %208, %215
  %217 = add nuw nsw i64 %183, 4
  %218 = add i64 %185, -4
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %155, label %182

220:                                              ; preds = %130, %134, %138, %174, %181
  %221 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %27, i64 0, i32 0, i32 0
  %222 = load double, double* %221, align 8
  %223 = load <2 x double>, <2 x double>* %3, align 16
  %224 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %131, i64 0, i32 0, i32 0
  %225 = load double, double* %224, align 8
  %226 = insertelement <2 x double> undef, double %222, i32 0
  %227 = insertelement <2 x double> %226, double %225, i32 1
  %228 = fadd <2 x double> %223, %227
  store <2 x double> %228, <2 x double>* %3, align 16
  %229 = bitcast <2 x double>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %229) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %229, i8* nonnull align 16 %16, i64 16, i1 false)
  %230 = load i32, i32* %12, align 4
  %231 = icmp ugt i32 %230, 2
  br i1 %231, label %234, label %232, !prof !3

232:                                              ; preds = %220
  %233 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %233, align 8
  br label %234

234:                                              ; preds = %232, %220
  %235 = load i32, i32* %19, align 4
  %236 = icmp ugt i32 %235, 2
  br i1 %236, label %238, label %237, !prof !3

237:                                              ; preds = %234
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %242

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %240 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %239, align 8
  %241 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %240, i64 2
  br label %242

242:                                              ; preds = %238, %237
  %243 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %237 ], [ %241, %238 ]
  %244 = load i8, i8* %28, align 8, !range !6
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %332, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 0, i32 3, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %332, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = icmp eq i32 %252, %248
  br i1 %253, label %254, label %332, !prof !3

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 0, i32 0, i32 0
  %256 = load double, double* %255, align 8
  %257 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %258 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 0, i32 3, i32 2
  %259 = zext i32 %248 to i64
  %260 = load float*, float** %257, align 8
  %261 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %258, align 8
  %262 = add nsw i64 %259, -1
  %263 = and i64 %259, 3
  %264 = icmp ult i64 %262, 3
  br i1 %264, label %267, label %265

265:                                              ; preds = %254
  %266 = sub nsw i64 %259, %263
  br label %294

267:                                              ; preds = %294, %254
  %268 = phi double [ undef, %254 ], [ %328, %294 ]
  %269 = phi i64 [ 0, %254 ], [ %329, %294 ]
  %270 = phi double [ %256, %254 ], [ %328, %294 ]
  %271 = icmp eq i64 %263, 0
  br i1 %271, label %286, label %272

272:                                              ; preds = %267, %272
  %273 = phi i64 [ %283, %272 ], [ %269, %267 ]
  %274 = phi double [ %282, %272 ], [ %270, %267 ]
  %275 = phi i64 [ %284, %272 ], [ %263, %267 ]
  %276 = getelementptr inbounds float, float* %260, i64 %273
  %277 = load float, float* %276, align 4
  %278 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %273, i32 0
  %279 = load double, double* %278, align 8
  %280 = fpext float %277 to double
  %281 = fmul double %279, %280
  %282 = fadd double %274, %281
  %283 = add nuw nsw i64 %273, 1
  %284 = add i64 %275, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %272, !llvm.loop !129

286:                                              ; preds = %272, %267
  %287 = phi double [ %268, %267 ], [ %282, %272 ]
  %288 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 0, i32 2
  store i32 0, i32* %288, align 4
  %289 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 0, i32 1
  store i32 0, i32* %289, align 8
  %290 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 0, i32 3, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = icmp slt i32 %291, 0
  store double %287, double* %255, align 8
  br i1 %292, label %332, label %293, !prof !2

293:                                              ; preds = %286
  store i32 0, i32* %247, align 4
  br label %332

294:                                              ; preds = %294, %265
  %295 = phi i64 [ 0, %265 ], [ %329, %294 ]
  %296 = phi double [ %256, %265 ], [ %328, %294 ]
  %297 = phi i64 [ %266, %265 ], [ %330, %294 ]
  %298 = getelementptr inbounds float, float* %260, i64 %295
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %295, i32 0
  %301 = load double, double* %300, align 8
  %302 = fpext float %299 to double
  %303 = fmul double %301, %302
  %304 = fadd double %296, %303
  %305 = or i64 %295, 1
  %306 = getelementptr inbounds float, float* %260, i64 %305
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %305, i32 0
  %309 = load double, double* %308, align 8
  %310 = fpext float %307 to double
  %311 = fmul double %309, %310
  %312 = fadd double %304, %311
  %313 = or i64 %295, 2
  %314 = getelementptr inbounds float, float* %260, i64 %313
  %315 = load float, float* %314, align 4
  %316 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %313, i32 0
  %317 = load double, double* %316, align 8
  %318 = fpext float %315 to double
  %319 = fmul double %317, %318
  %320 = fadd double %312, %319
  %321 = or i64 %295, 3
  %322 = getelementptr inbounds float, float* %260, i64 %321
  %323 = load float, float* %322, align 4
  %324 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %321, i32 0
  %325 = load double, double* %324, align 8
  %326 = fpext float %323 to double
  %327 = fmul double %325, %326
  %328 = fadd double %320, %327
  %329 = add nuw nsw i64 %295, 4
  %330 = add i64 %297, -4
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %267, label %294

332:                                              ; preds = %242, %246, %250, %286, %293
  %333 = load i32, i32* %12, align 4
  %334 = icmp ugt i32 %333, 3
  br i1 %334, label %337, label %335, !prof !3

335:                                              ; preds = %332
  %336 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %336, align 8
  br label %337

337:                                              ; preds = %335, %332
  %338 = load i32, i32* %19, align 4
  %339 = icmp ugt i32 %338, 3
  br i1 %339, label %341, label %340, !prof !3

340:                                              ; preds = %337
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %345

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %343 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %342, align 8
  %344 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %343, i64 3
  br label %345

345:                                              ; preds = %341, %340
  %346 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %340 ], [ %344, %341 ]
  %347 = load i8, i8* %28, align 8, !range !6
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %435, label %349

349:                                              ; preds = %345
  %350 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 0, i32 3, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %435, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %355, %351
  br i1 %356, label %357, label %435, !prof !3

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 0, i32 0, i32 0
  %359 = load double, double* %358, align 8
  %360 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %361 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 0, i32 3, i32 2
  %362 = zext i32 %351 to i64
  %363 = load float*, float** %360, align 8
  %364 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %361, align 8
  %365 = add nsw i64 %362, -1
  %366 = and i64 %362, 3
  %367 = icmp ult i64 %365, 3
  br i1 %367, label %370, label %368

368:                                              ; preds = %357
  %369 = sub nsw i64 %362, %366
  br label %397

370:                                              ; preds = %397, %357
  %371 = phi double [ undef, %357 ], [ %431, %397 ]
  %372 = phi i64 [ 0, %357 ], [ %432, %397 ]
  %373 = phi double [ %359, %357 ], [ %431, %397 ]
  %374 = icmp eq i64 %366, 0
  br i1 %374, label %389, label %375

375:                                              ; preds = %370, %375
  %376 = phi i64 [ %386, %375 ], [ %372, %370 ]
  %377 = phi double [ %385, %375 ], [ %373, %370 ]
  %378 = phi i64 [ %387, %375 ], [ %366, %370 ]
  %379 = getelementptr inbounds float, float* %363, i64 %376
  %380 = load float, float* %379, align 4
  %381 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %364, i64 %376, i32 0
  %382 = load double, double* %381, align 8
  %383 = fpext float %380 to double
  %384 = fmul double %382, %383
  %385 = fadd double %377, %384
  %386 = add nuw nsw i64 %376, 1
  %387 = add i64 %378, -1
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %389, label %375, !llvm.loop !130

389:                                              ; preds = %375, %370
  %390 = phi double [ %371, %370 ], [ %385, %375 ]
  %391 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 0, i32 2
  store i32 0, i32* %391, align 4
  %392 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 0, i32 1
  store i32 0, i32* %392, align 8
  %393 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 0, i32 3, i32 0
  %394 = load i32, i32* %393, align 8
  %395 = icmp slt i32 %394, 0
  store double %390, double* %358, align 8
  br i1 %395, label %435, label %396, !prof !2

396:                                              ; preds = %389
  store i32 0, i32* %350, align 4
  br label %435

397:                                              ; preds = %397, %368
  %398 = phi i64 [ 0, %368 ], [ %432, %397 ]
  %399 = phi double [ %359, %368 ], [ %431, %397 ]
  %400 = phi i64 [ %369, %368 ], [ %433, %397 ]
  %401 = getelementptr inbounds float, float* %363, i64 %398
  %402 = load float, float* %401, align 4
  %403 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %364, i64 %398, i32 0
  %404 = load double, double* %403, align 8
  %405 = fpext float %402 to double
  %406 = fmul double %404, %405
  %407 = fadd double %399, %406
  %408 = or i64 %398, 1
  %409 = getelementptr inbounds float, float* %363, i64 %408
  %410 = load float, float* %409, align 4
  %411 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %364, i64 %408, i32 0
  %412 = load double, double* %411, align 8
  %413 = fpext float %410 to double
  %414 = fmul double %412, %413
  %415 = fadd double %407, %414
  %416 = or i64 %398, 2
  %417 = getelementptr inbounds float, float* %363, i64 %416
  %418 = load float, float* %417, align 4
  %419 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %364, i64 %416, i32 0
  %420 = load double, double* %419, align 8
  %421 = fpext float %418 to double
  %422 = fmul double %420, %421
  %423 = fadd double %415, %422
  %424 = or i64 %398, 3
  %425 = getelementptr inbounds float, float* %363, i64 %424
  %426 = load float, float* %425, align 4
  %427 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %364, i64 %424, i32 0
  %428 = load double, double* %427, align 8
  %429 = fpext float %426 to double
  %430 = fmul double %428, %429
  %431 = fadd double %423, %430
  %432 = add nuw nsw i64 %398, 4
  %433 = add i64 %400, -4
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %370, label %397

435:                                              ; preds = %345, %349, %353, %389, %396
  %436 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %243, i64 0, i32 0, i32 0
  %437 = load double, double* %436, align 8
  %438 = load <2 x double>, <2 x double>* %5, align 16
  %439 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %346, i64 0, i32 0, i32 0
  %440 = load double, double* %439, align 8
  %441 = insertelement <2 x double> undef, double %437, i32 0
  %442 = insertelement <2 x double> %441, double %440, i32 1
  %443 = fadd <2 x double> %438, %442
  store <2 x double> %443, <2 x double>* %5, align 16
  %444 = bitcast %"struct.CFF::point_t"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %444) #6
  %445 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %7, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %444, i8* nonnull align 16 %229, i64 16, i1 false)
  %446 = load i32, i32* %12, align 4
  %447 = icmp ugt i32 %446, 4
  br i1 %447, label %450, label %448, !prof !3

448:                                              ; preds = %435
  %449 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %449, align 8
  br label %450

450:                                              ; preds = %448, %435
  %451 = load i32, i32* %19, align 4
  %452 = icmp ugt i32 %451, 4
  br i1 %452, label %454, label %453, !prof !3

453:                                              ; preds = %450
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %458

454:                                              ; preds = %450
  %455 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %456 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %455, align 8
  %457 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %456, i64 4
  br label %458

458:                                              ; preds = %454, %453
  %459 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %453 ], [ %457, %454 ]
  %460 = load i8, i8* %28, align 8, !range !6
  %461 = icmp eq i8 %460, 0
  br i1 %461, label %548, label %462

462:                                              ; preds = %458
  %463 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 0, i32 3, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %548, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %468 = load i32, i32* %467, align 4
  %469 = icmp eq i32 %468, %464
  br i1 %469, label %470, label %548, !prof !3

470:                                              ; preds = %466
  %471 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 0, i32 0, i32 0
  %472 = load double, double* %471, align 8
  %473 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %474 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 0, i32 3, i32 2
  %475 = zext i32 %464 to i64
  %476 = load float*, float** %473, align 8
  %477 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %474, align 8
  %478 = add nsw i64 %475, -1
  %479 = and i64 %475, 3
  %480 = icmp ult i64 %478, 3
  br i1 %480, label %483, label %481

481:                                              ; preds = %470
  %482 = sub nsw i64 %475, %479
  br label %510

483:                                              ; preds = %510, %470
  %484 = phi double [ undef, %470 ], [ %544, %510 ]
  %485 = phi i64 [ 0, %470 ], [ %545, %510 ]
  %486 = phi double [ %472, %470 ], [ %544, %510 ]
  %487 = icmp eq i64 %479, 0
  br i1 %487, label %502, label %488

488:                                              ; preds = %483, %488
  %489 = phi i64 [ %499, %488 ], [ %485, %483 ]
  %490 = phi double [ %498, %488 ], [ %486, %483 ]
  %491 = phi i64 [ %500, %488 ], [ %479, %483 ]
  %492 = getelementptr inbounds float, float* %476, i64 %489
  %493 = load float, float* %492, align 4
  %494 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %477, i64 %489, i32 0
  %495 = load double, double* %494, align 8
  %496 = fpext float %493 to double
  %497 = fmul double %495, %496
  %498 = fadd double %490, %497
  %499 = add nuw nsw i64 %489, 1
  %500 = add i64 %491, -1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %488, !llvm.loop !131

502:                                              ; preds = %488, %483
  %503 = phi double [ %484, %483 ], [ %498, %488 ]
  %504 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 0, i32 2
  store i32 0, i32* %504, align 4
  %505 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 0, i32 1
  store i32 0, i32* %505, align 8
  %506 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 0, i32 3, i32 0
  %507 = load i32, i32* %506, align 8
  %508 = icmp slt i32 %507, 0
  store double %503, double* %471, align 8
  br i1 %508, label %548, label %509, !prof !2

509:                                              ; preds = %502
  store i32 0, i32* %463, align 4
  br label %548

510:                                              ; preds = %510, %481
  %511 = phi i64 [ 0, %481 ], [ %545, %510 ]
  %512 = phi double [ %472, %481 ], [ %544, %510 ]
  %513 = phi i64 [ %482, %481 ], [ %546, %510 ]
  %514 = getelementptr inbounds float, float* %476, i64 %511
  %515 = load float, float* %514, align 4
  %516 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %477, i64 %511, i32 0
  %517 = load double, double* %516, align 8
  %518 = fpext float %515 to double
  %519 = fmul double %517, %518
  %520 = fadd double %512, %519
  %521 = or i64 %511, 1
  %522 = getelementptr inbounds float, float* %476, i64 %521
  %523 = load float, float* %522, align 4
  %524 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %477, i64 %521, i32 0
  %525 = load double, double* %524, align 8
  %526 = fpext float %523 to double
  %527 = fmul double %525, %526
  %528 = fadd double %520, %527
  %529 = or i64 %511, 2
  %530 = getelementptr inbounds float, float* %476, i64 %529
  %531 = load float, float* %530, align 4
  %532 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %477, i64 %529, i32 0
  %533 = load double, double* %532, align 8
  %534 = fpext float %531 to double
  %535 = fmul double %533, %534
  %536 = fadd double %528, %535
  %537 = or i64 %511, 3
  %538 = getelementptr inbounds float, float* %476, i64 %537
  %539 = load float, float* %538, align 4
  %540 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %477, i64 %537, i32 0
  %541 = load double, double* %540, align 8
  %542 = fpext float %539 to double
  %543 = fmul double %541, %542
  %544 = fadd double %536, %543
  %545 = add nuw nsw i64 %511, 4
  %546 = add i64 %513, -4
  %547 = icmp eq i64 %546, 0
  br i1 %547, label %483, label %510

548:                                              ; preds = %458, %462, %466, %502, %509
  %549 = load double, double* %445, align 8
  %550 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %459, i64 0, i32 0, i32 0
  %551 = load double, double* %550, align 8
  %552 = fadd double %549, %551
  store double %552, double* %445, align 8
  %553 = bitcast %"struct.CFF::point_t"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %553) #6
  %554 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %8, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %553, i8* nonnull align 8 %444, i64 16, i1 false)
  %555 = load i32, i32* %12, align 4
  %556 = icmp ugt i32 %555, 5
  br i1 %556, label %559, label %557, !prof !3

557:                                              ; preds = %548
  %558 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %558, align 8
  br label %559

559:                                              ; preds = %557, %548
  %560 = load i32, i32* %19, align 4
  %561 = icmp ugt i32 %560, 5
  br i1 %561, label %563, label %562, !prof !3

562:                                              ; preds = %559
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %567

563:                                              ; preds = %559
  %564 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %565 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %564, align 8
  %566 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %565, i64 5
  br label %567

567:                                              ; preds = %563, %562
  %568 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %562 ], [ %566, %563 ]
  %569 = load i8, i8* %28, align 8, !range !6
  %570 = icmp eq i8 %569, 0
  br i1 %570, label %657, label %571

571:                                              ; preds = %567
  %572 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 0, i32 3, i32 1
  %573 = load i32, i32* %572, align 4
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %657, label %575

575:                                              ; preds = %571
  %576 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %577 = load i32, i32* %576, align 4
  %578 = icmp eq i32 %577, %573
  br i1 %578, label %579, label %657, !prof !3

579:                                              ; preds = %575
  %580 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 0, i32 0, i32 0
  %581 = load double, double* %580, align 8
  %582 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %583 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 0, i32 3, i32 2
  %584 = zext i32 %573 to i64
  %585 = load float*, float** %582, align 8
  %586 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %583, align 8
  %587 = add nsw i64 %584, -1
  %588 = and i64 %584, 3
  %589 = icmp ult i64 %587, 3
  br i1 %589, label %592, label %590

590:                                              ; preds = %579
  %591 = sub nsw i64 %584, %588
  br label %619

592:                                              ; preds = %619, %579
  %593 = phi double [ undef, %579 ], [ %653, %619 ]
  %594 = phi i64 [ 0, %579 ], [ %654, %619 ]
  %595 = phi double [ %581, %579 ], [ %653, %619 ]
  %596 = icmp eq i64 %588, 0
  br i1 %596, label %611, label %597

597:                                              ; preds = %592, %597
  %598 = phi i64 [ %608, %597 ], [ %594, %592 ]
  %599 = phi double [ %607, %597 ], [ %595, %592 ]
  %600 = phi i64 [ %609, %597 ], [ %588, %592 ]
  %601 = getelementptr inbounds float, float* %585, i64 %598
  %602 = load float, float* %601, align 4
  %603 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %586, i64 %598, i32 0
  %604 = load double, double* %603, align 8
  %605 = fpext float %602 to double
  %606 = fmul double %604, %605
  %607 = fadd double %599, %606
  %608 = add nuw nsw i64 %598, 1
  %609 = add i64 %600, -1
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %611, label %597, !llvm.loop !132

611:                                              ; preds = %597, %592
  %612 = phi double [ %593, %592 ], [ %607, %597 ]
  %613 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 0, i32 2
  store i32 0, i32* %613, align 4
  %614 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 0, i32 1
  store i32 0, i32* %614, align 8
  %615 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 0, i32 3, i32 0
  %616 = load i32, i32* %615, align 8
  %617 = icmp slt i32 %616, 0
  store double %612, double* %580, align 8
  br i1 %617, label %657, label %618, !prof !2

618:                                              ; preds = %611
  store i32 0, i32* %572, align 4
  br label %657

619:                                              ; preds = %619, %590
  %620 = phi i64 [ 0, %590 ], [ %654, %619 ]
  %621 = phi double [ %581, %590 ], [ %653, %619 ]
  %622 = phi i64 [ %591, %590 ], [ %655, %619 ]
  %623 = getelementptr inbounds float, float* %585, i64 %620
  %624 = load float, float* %623, align 4
  %625 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %586, i64 %620, i32 0
  %626 = load double, double* %625, align 8
  %627 = fpext float %624 to double
  %628 = fmul double %626, %627
  %629 = fadd double %621, %628
  %630 = or i64 %620, 1
  %631 = getelementptr inbounds float, float* %585, i64 %630
  %632 = load float, float* %631, align 4
  %633 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %586, i64 %630, i32 0
  %634 = load double, double* %633, align 8
  %635 = fpext float %632 to double
  %636 = fmul double %634, %635
  %637 = fadd double %629, %636
  %638 = or i64 %620, 2
  %639 = getelementptr inbounds float, float* %585, i64 %638
  %640 = load float, float* %639, align 4
  %641 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %586, i64 %638, i32 0
  %642 = load double, double* %641, align 8
  %643 = fpext float %640 to double
  %644 = fmul double %642, %643
  %645 = fadd double %637, %644
  %646 = or i64 %620, 3
  %647 = getelementptr inbounds float, float* %585, i64 %646
  %648 = load float, float* %647, align 4
  %649 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %586, i64 %646, i32 0
  %650 = load double, double* %649, align 8
  %651 = fpext float %648 to double
  %652 = fmul double %650, %651
  %653 = fadd double %645, %652
  %654 = add nuw nsw i64 %620, 4
  %655 = add i64 %622, -4
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %592, label %619

657:                                              ; preds = %567, %571, %575, %611, %618
  %658 = load double, double* %554, align 8
  %659 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %568, i64 0, i32 0, i32 0
  %660 = load double, double* %659, align 8
  %661 = fadd double %658, %660
  store double %661, double* %554, align 8
  %662 = bitcast <2 x double>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %662) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %662, i8* nonnull align 8 %553, i64 16, i1 false)
  %663 = load i32, i32* %12, align 4
  %664 = icmp ugt i32 %663, 6
  br i1 %664, label %667, label %665, !prof !3

665:                                              ; preds = %657
  %666 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %666, align 8
  br label %667

667:                                              ; preds = %665, %657
  %668 = load i32, i32* %19, align 4
  %669 = icmp ugt i32 %668, 6
  br i1 %669, label %671, label %670, !prof !3

670:                                              ; preds = %667
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %675

671:                                              ; preds = %667
  %672 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %673 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %672, align 8
  %674 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %673, i64 6
  br label %675

675:                                              ; preds = %671, %670
  %676 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %670 ], [ %674, %671 ]
  %677 = load i8, i8* %28, align 8, !range !6
  %678 = icmp eq i8 %677, 0
  br i1 %678, label %765, label %679

679:                                              ; preds = %675
  %680 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 3, i32 1
  %681 = load i32, i32* %680, align 4
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %765, label %683

683:                                              ; preds = %679
  %684 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %685 = load i32, i32* %684, align 4
  %686 = icmp eq i32 %685, %681
  br i1 %686, label %687, label %765, !prof !3

687:                                              ; preds = %683
  %688 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 0, i32 0
  %689 = load double, double* %688, align 8
  %690 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %691 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 3, i32 2
  %692 = zext i32 %681 to i64
  %693 = load float*, float** %690, align 8
  %694 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %691, align 8
  %695 = add nsw i64 %692, -1
  %696 = and i64 %692, 3
  %697 = icmp ult i64 %695, 3
  br i1 %697, label %700, label %698

698:                                              ; preds = %687
  %699 = sub nsw i64 %692, %696
  br label %727

700:                                              ; preds = %727, %687
  %701 = phi double [ undef, %687 ], [ %761, %727 ]
  %702 = phi i64 [ 0, %687 ], [ %762, %727 ]
  %703 = phi double [ %689, %687 ], [ %761, %727 ]
  %704 = icmp eq i64 %696, 0
  br i1 %704, label %719, label %705

705:                                              ; preds = %700, %705
  %706 = phi i64 [ %716, %705 ], [ %702, %700 ]
  %707 = phi double [ %715, %705 ], [ %703, %700 ]
  %708 = phi i64 [ %717, %705 ], [ %696, %700 ]
  %709 = getelementptr inbounds float, float* %693, i64 %706
  %710 = load float, float* %709, align 4
  %711 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %706, i32 0
  %712 = load double, double* %711, align 8
  %713 = fpext float %710 to double
  %714 = fmul double %712, %713
  %715 = fadd double %707, %714
  %716 = add nuw nsw i64 %706, 1
  %717 = add i64 %708, -1
  %718 = icmp eq i64 %717, 0
  br i1 %718, label %719, label %705, !llvm.loop !133

719:                                              ; preds = %705, %700
  %720 = phi double [ %701, %700 ], [ %715, %705 ]
  %721 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 2
  store i32 0, i32* %721, align 4
  %722 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 1
  store i32 0, i32* %722, align 8
  %723 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 3, i32 0
  %724 = load i32, i32* %723, align 8
  %725 = icmp slt i32 %724, 0
  store double %720, double* %688, align 8
  br i1 %725, label %765, label %726, !prof !2

726:                                              ; preds = %719
  store i32 0, i32* %680, align 4
  br label %765

727:                                              ; preds = %727, %698
  %728 = phi i64 [ 0, %698 ], [ %762, %727 ]
  %729 = phi double [ %689, %698 ], [ %761, %727 ]
  %730 = phi i64 [ %699, %698 ], [ %763, %727 ]
  %731 = getelementptr inbounds float, float* %693, i64 %728
  %732 = load float, float* %731, align 4
  %733 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %728, i32 0
  %734 = load double, double* %733, align 8
  %735 = fpext float %732 to double
  %736 = fmul double %734, %735
  %737 = fadd double %729, %736
  %738 = or i64 %728, 1
  %739 = getelementptr inbounds float, float* %693, i64 %738
  %740 = load float, float* %739, align 4
  %741 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %738, i32 0
  %742 = load double, double* %741, align 8
  %743 = fpext float %740 to double
  %744 = fmul double %742, %743
  %745 = fadd double %737, %744
  %746 = or i64 %728, 2
  %747 = getelementptr inbounds float, float* %693, i64 %746
  %748 = load float, float* %747, align 4
  %749 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %746, i32 0
  %750 = load double, double* %749, align 8
  %751 = fpext float %748 to double
  %752 = fmul double %750, %751
  %753 = fadd double %745, %752
  %754 = or i64 %728, 3
  %755 = getelementptr inbounds float, float* %693, i64 %754
  %756 = load float, float* %755, align 4
  %757 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %694, i64 %754, i32 0
  %758 = load double, double* %757, align 8
  %759 = fpext float %756 to double
  %760 = fmul double %758, %759
  %761 = fadd double %753, %760
  %762 = add nuw nsw i64 %728, 4
  %763 = add i64 %730, -4
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %700, label %727

765:                                              ; preds = %675, %679, %683, %719, %726
  %766 = load i32, i32* %12, align 4
  %767 = icmp ugt i32 %766, 7
  br i1 %767, label %770, label %768, !prof !3

768:                                              ; preds = %765
  %769 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %769, align 8
  br label %770

770:                                              ; preds = %768, %765
  %771 = load i32, i32* %19, align 4
  %772 = icmp ugt i32 %771, 7
  br i1 %772, label %774, label %773, !prof !3

773:                                              ; preds = %770
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %778

774:                                              ; preds = %770
  %775 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %776 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %775, align 8
  %777 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %776, i64 7
  br label %778

778:                                              ; preds = %774, %773
  %779 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %773 ], [ %777, %774 ]
  %780 = load i8, i8* %28, align 8, !range !6
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %868, label %782

782:                                              ; preds = %778
  %783 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 3, i32 1
  %784 = load i32, i32* %783, align 4
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %868, label %786

786:                                              ; preds = %782
  %787 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %788 = load i32, i32* %787, align 4
  %789 = icmp eq i32 %788, %784
  br i1 %789, label %790, label %868, !prof !3

790:                                              ; preds = %786
  %791 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 0, i32 0
  %792 = load double, double* %791, align 8
  %793 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %794 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 3, i32 2
  %795 = zext i32 %784 to i64
  %796 = load float*, float** %793, align 8
  %797 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %794, align 8
  %798 = add nsw i64 %795, -1
  %799 = and i64 %795, 3
  %800 = icmp ult i64 %798, 3
  br i1 %800, label %803, label %801

801:                                              ; preds = %790
  %802 = sub nsw i64 %795, %799
  br label %830

803:                                              ; preds = %830, %790
  %804 = phi double [ undef, %790 ], [ %864, %830 ]
  %805 = phi i64 [ 0, %790 ], [ %865, %830 ]
  %806 = phi double [ %792, %790 ], [ %864, %830 ]
  %807 = icmp eq i64 %799, 0
  br i1 %807, label %822, label %808

808:                                              ; preds = %803, %808
  %809 = phi i64 [ %819, %808 ], [ %805, %803 ]
  %810 = phi double [ %818, %808 ], [ %806, %803 ]
  %811 = phi i64 [ %820, %808 ], [ %799, %803 ]
  %812 = getelementptr inbounds float, float* %796, i64 %809
  %813 = load float, float* %812, align 4
  %814 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %809, i32 0
  %815 = load double, double* %814, align 8
  %816 = fpext float %813 to double
  %817 = fmul double %815, %816
  %818 = fadd double %810, %817
  %819 = add nuw nsw i64 %809, 1
  %820 = add i64 %811, -1
  %821 = icmp eq i64 %820, 0
  br i1 %821, label %822, label %808, !llvm.loop !134

822:                                              ; preds = %808, %803
  %823 = phi double [ %804, %803 ], [ %818, %808 ]
  %824 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 2
  store i32 0, i32* %824, align 4
  %825 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 1
  store i32 0, i32* %825, align 8
  %826 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 3, i32 0
  %827 = load i32, i32* %826, align 8
  %828 = icmp slt i32 %827, 0
  store double %823, double* %791, align 8
  br i1 %828, label %868, label %829, !prof !2

829:                                              ; preds = %822
  store i32 0, i32* %783, align 4
  br label %868

830:                                              ; preds = %830, %801
  %831 = phi i64 [ 0, %801 ], [ %865, %830 ]
  %832 = phi double [ %792, %801 ], [ %864, %830 ]
  %833 = phi i64 [ %802, %801 ], [ %866, %830 ]
  %834 = getelementptr inbounds float, float* %796, i64 %831
  %835 = load float, float* %834, align 4
  %836 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %831, i32 0
  %837 = load double, double* %836, align 8
  %838 = fpext float %835 to double
  %839 = fmul double %837, %838
  %840 = fadd double %832, %839
  %841 = or i64 %831, 1
  %842 = getelementptr inbounds float, float* %796, i64 %841
  %843 = load float, float* %842, align 4
  %844 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %841, i32 0
  %845 = load double, double* %844, align 8
  %846 = fpext float %843 to double
  %847 = fmul double %845, %846
  %848 = fadd double %840, %847
  %849 = or i64 %831, 2
  %850 = getelementptr inbounds float, float* %796, i64 %849
  %851 = load float, float* %850, align 4
  %852 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %849, i32 0
  %853 = load double, double* %852, align 8
  %854 = fpext float %851 to double
  %855 = fmul double %853, %854
  %856 = fadd double %848, %855
  %857 = or i64 %831, 3
  %858 = getelementptr inbounds float, float* %796, i64 %857
  %859 = load float, float* %858, align 4
  %860 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %797, i64 %857, i32 0
  %861 = load double, double* %860, align 8
  %862 = fpext float %859 to double
  %863 = fmul double %861, %862
  %864 = fadd double %856, %863
  %865 = add nuw nsw i64 %831, 4
  %866 = add i64 %833, -4
  %867 = icmp eq i64 %866, 0
  br i1 %867, label %803, label %830

868:                                              ; preds = %778, %782, %786, %822, %829
  %869 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %676, i64 0, i32 0, i32 0
  %870 = load double, double* %869, align 8
  %871 = load <2 x double>, <2 x double>* %9, align 16
  %872 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %779, i64 0, i32 0, i32 0
  %873 = load double, double* %872, align 8
  %874 = insertelement <2 x double> undef, double %870, i32 0
  %875 = insertelement <2 x double> %874, double %873, i32 1
  %876 = fadd <2 x double> %871, %875
  store <2 x double> %876, <2 x double>* %9, align 16
  %877 = bitcast %"struct.CFF::point_t"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %877) #6
  %878 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %11, i64 0, i32 0, i32 0
  %879 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %11, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %877, i8* nonnull align 16 %662, i64 16, i1 false)
  %880 = load i32, i32* %12, align 4
  %881 = icmp ugt i32 %880, 8
  br i1 %881, label %884, label %882, !prof !3

882:                                              ; preds = %868
  %883 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8 1, i8* %883, align 8
  br label %884

884:                                              ; preds = %882, %868
  %885 = load i32, i32* %19, align 4
  %886 = icmp ugt i32 %885, 8
  br i1 %886, label %888, label %887, !prof !3

887:                                              ; preds = %884
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %892

888:                                              ; preds = %884
  %889 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %890 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %889, align 8
  %891 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %890, i64 8
  br label %892

892:                                              ; preds = %888, %887
  %893 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %887 ], [ %891, %888 ]
  %894 = load i8, i8* %28, align 8, !range !6
  %895 = icmp eq i8 %894, 0
  br i1 %895, label %982, label %896

896:                                              ; preds = %892
  %897 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %893, i64 0, i32 3, i32 1
  %898 = load i32, i32* %897, align 4
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %982, label %900

900:                                              ; preds = %896
  %901 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %902 = load i32, i32* %901, align 4
  %903 = icmp eq i32 %902, %898
  br i1 %903, label %904, label %982, !prof !3

904:                                              ; preds = %900
  %905 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %893, i64 0, i32 0, i32 0
  %906 = load double, double* %905, align 8
  %907 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %908 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %893, i64 0, i32 3, i32 2
  %909 = zext i32 %898 to i64
  %910 = load float*, float** %907, align 8
  %911 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %908, align 8
  %912 = add nsw i64 %909, -1
  %913 = and i64 %909, 3
  %914 = icmp ult i64 %912, 3
  br i1 %914, label %917, label %915

915:                                              ; preds = %904
  %916 = sub nsw i64 %909, %913
  br label %944

917:                                              ; preds = %944, %904
  %918 = phi double [ undef, %904 ], [ %978, %944 ]
  %919 = phi i64 [ 0, %904 ], [ %979, %944 ]
  %920 = phi double [ %906, %904 ], [ %978, %944 ]
  %921 = icmp eq i64 %913, 0
  br i1 %921, label %936, label %922

922:                                              ; preds = %917, %922
  %923 = phi i64 [ %933, %922 ], [ %919, %917 ]
  %924 = phi double [ %932, %922 ], [ %920, %917 ]
  %925 = phi i64 [ %934, %922 ], [ %913, %917 ]
  %926 = getelementptr inbounds float, float* %910, i64 %923
  %927 = load float, float* %926, align 4
  %928 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %911, i64 %923, i32 0
  %929 = load double, double* %928, align 8
  %930 = fpext float %927 to double
  %931 = fmul double %929, %930
  %932 = fadd double %924, %931
  %933 = add nuw nsw i64 %923, 1
  %934 = add i64 %925, -1
  %935 = icmp eq i64 %934, 0
  br i1 %935, label %936, label %922, !llvm.loop !135

936:                                              ; preds = %922, %917
  %937 = phi double [ %918, %917 ], [ %932, %922 ]
  %938 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %893, i64 0, i32 2
  store i32 0, i32* %938, align 4
  %939 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %893, i64 0, i32 1
  store i32 0, i32* %939, align 8
  %940 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %893, i64 0, i32 3, i32 0
  %941 = load i32, i32* %940, align 8
  %942 = icmp slt i32 %941, 0
  store double %937, double* %905, align 8
  br i1 %942, label %982, label %943, !prof !2

943:                                              ; preds = %936
  store i32 0, i32* %897, align 4
  br label %982

944:                                              ; preds = %944, %915
  %945 = phi i64 [ 0, %915 ], [ %979, %944 ]
  %946 = phi double [ %906, %915 ], [ %978, %944 ]
  %947 = phi i64 [ %916, %915 ], [ %980, %944 ]
  %948 = getelementptr inbounds float, float* %910, i64 %945
  %949 = load float, float* %948, align 4
  %950 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %911, i64 %945, i32 0
  %951 = load double, double* %950, align 8
  %952 = fpext float %949 to double
  %953 = fmul double %951, %952
  %954 = fadd double %946, %953
  %955 = or i64 %945, 1
  %956 = getelementptr inbounds float, float* %910, i64 %955
  %957 = load float, float* %956, align 4
  %958 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %911, i64 %955, i32 0
  %959 = load double, double* %958, align 8
  %960 = fpext float %957 to double
  %961 = fmul double %959, %960
  %962 = fadd double %954, %961
  %963 = or i64 %945, 2
  %964 = getelementptr inbounds float, float* %910, i64 %963
  %965 = load float, float* %964, align 4
  %966 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %911, i64 %963, i32 0
  %967 = load double, double* %966, align 8
  %968 = fpext float %965 to double
  %969 = fmul double %967, %968
  %970 = fadd double %962, %969
  %971 = or i64 %945, 3
  %972 = getelementptr inbounds float, float* %910, i64 %971
  %973 = load float, float* %972, align 4
  %974 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %911, i64 %971, i32 0
  %975 = load double, double* %974, align 8
  %976 = fpext float %973 to double
  %977 = fmul double %975, %976
  %978 = fadd double %970, %977
  %979 = add nuw nsw i64 %945, 4
  %980 = add i64 %947, -4
  %981 = icmp eq i64 %980, 0
  br i1 %981, label %917, label %944

982:                                              ; preds = %892, %896, %900, %936, %943
  %983 = load double, double* %878, align 8
  %984 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %893, i64 0, i32 0, i32 0
  %985 = load double, double* %984, align 8
  %986 = fadd double %983, %985
  store double %986, double* %878, align 8
  %987 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1
  %988 = bitcast %"struct.CFF::number_t"* %987 to i64*
  %989 = bitcast %"struct.CFF::number_t"* %879 to i64*
  %990 = load i64, i64* %988, align 8
  store i64 %990, i64* %989, align 8
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %7) #6
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8, %"struct.CFF::point_t"* nonnull dereferenceable(16) %10, %"struct.CFF::point_t"* nonnull dereferenceable(16) %11) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %877) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %662) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %553) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %444) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %229) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #6
  br label %993

991:                                              ; preds = %2
  %992 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %992, align 8
  br label %993

993:                                              ; preds = %991, %982
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF12path_procs_tI25cff2_path_procs_extents_tNS_20cff2_cs_interp_env_tE20cff2_extents_param_tE5flex1ERS2_RS3_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x double>, align 16
  %4 = bitcast <2 x double>* %3 to %"struct.CFF::point_t"*
  %5 = alloca <2 x double>, align 16
  %6 = bitcast <2 x double>* %5 to %"struct.CFF::point_t"*
  %7 = alloca <2 x double>, align 16
  %8 = bitcast <2 x double>* %7 to %"struct.CFF::point_t"*
  %9 = alloca <2 x double>, align 16
  %10 = bitcast <2 x double>* %9 to %"struct.CFF::point_t"*
  %11 = alloca <2 x double>, align 16
  %12 = bitcast <2 x double>* %11 to %"struct.CFF::point_t"*
  %13 = alloca %"struct.CFF::point_t", align 8
  %14 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 11
  br i1 %16, label %17, label %1502, !prof !3

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %20 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %21 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %22 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %23 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  br label %1068

24:                                               ; preds = %1273
  %25 = bitcast <2 x double>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #6
  %26 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %27 = bitcast %"struct.CFF::point_t"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %25, i8* align 8 %27, i64 16, i1 false)
  %28 = load i32, i32* %14, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %24
  store i8 1, i8* %18, align 8
  br label %31

31:                                               ; preds = %24, %30
  %32 = load i32, i32* %19, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %37

35:                                               ; preds = %31
  %36 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  br label %37

37:                                               ; preds = %35, %34
  %38 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %34 ], [ %36, %35 ]
  %39 = load i8, i8* %21, align 8, !range !6
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %125, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 0, i32 3, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %125, label %45

45:                                               ; preds = %41
  %46 = load i32, i32* %22, align 4
  %47 = icmp eq i32 %46, %43
  br i1 %47, label %48, label %125, !prof !3

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 0, i32 0, i32 0
  %50 = load double, double* %49, align 8
  %51 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 0, i32 3, i32 2
  %52 = zext i32 %43 to i64
  %53 = load float*, float** %23, align 8
  %54 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %51, align 8
  %55 = add nsw i64 %52, -1
  %56 = and i64 %52, 3
  %57 = icmp ult i64 %55, 3
  br i1 %57, label %60, label %58

58:                                               ; preds = %48
  %59 = sub nsw i64 %52, %56
  br label %87

60:                                               ; preds = %87, %48
  %61 = phi double [ undef, %48 ], [ %121, %87 ]
  %62 = phi i64 [ 0, %48 ], [ %122, %87 ]
  %63 = phi double [ %50, %48 ], [ %121, %87 ]
  %64 = icmp eq i64 %56, 0
  br i1 %64, label %79, label %65

65:                                               ; preds = %60, %65
  %66 = phi i64 [ %76, %65 ], [ %62, %60 ]
  %67 = phi double [ %75, %65 ], [ %63, %60 ]
  %68 = phi i64 [ %77, %65 ], [ %56, %60 ]
  %69 = getelementptr inbounds float, float* %53, i64 %66
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %54, i64 %66, i32 0
  %72 = load double, double* %71, align 8
  %73 = fpext float %70 to double
  %74 = fmul double %72, %73
  %75 = fadd double %67, %74
  %76 = add nuw nsw i64 %66, 1
  %77 = add i64 %68, -1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %65, !llvm.loop !136

79:                                               ; preds = %65, %60
  %80 = phi double [ %61, %60 ], [ %75, %65 ]
  %81 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 0, i32 2
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 0, i32 1
  store i32 0, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 0, i32 3, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  store double %80, double* %49, align 8
  br i1 %85, label %125, label %86, !prof !2

86:                                               ; preds = %79
  store i32 0, i32* %42, align 4
  br label %125

87:                                               ; preds = %87, %58
  %88 = phi i64 [ 0, %58 ], [ %122, %87 ]
  %89 = phi double [ %50, %58 ], [ %121, %87 ]
  %90 = phi i64 [ %59, %58 ], [ %123, %87 ]
  %91 = getelementptr inbounds float, float* %53, i64 %88
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %54, i64 %88, i32 0
  %94 = load double, double* %93, align 8
  %95 = fpext float %92 to double
  %96 = fmul double %94, %95
  %97 = fadd double %89, %96
  %98 = or i64 %88, 1
  %99 = getelementptr inbounds float, float* %53, i64 %98
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %54, i64 %98, i32 0
  %102 = load double, double* %101, align 8
  %103 = fpext float %100 to double
  %104 = fmul double %102, %103
  %105 = fadd double %97, %104
  %106 = or i64 %88, 2
  %107 = getelementptr inbounds float, float* %53, i64 %106
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %54, i64 %106, i32 0
  %110 = load double, double* %109, align 8
  %111 = fpext float %108 to double
  %112 = fmul double %110, %111
  %113 = fadd double %105, %112
  %114 = or i64 %88, 3
  %115 = getelementptr inbounds float, float* %53, i64 %114
  %116 = load float, float* %115, align 4
  %117 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %54, i64 %114, i32 0
  %118 = load double, double* %117, align 8
  %119 = fpext float %116 to double
  %120 = fmul double %118, %119
  %121 = fadd double %113, %120
  %122 = add nuw nsw i64 %88, 4
  %123 = add i64 %90, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %60, label %87

125:                                              ; preds = %37, %41, %45, %79, %86
  %126 = load i32, i32* %14, align 4
  %127 = icmp ugt i32 %126, 1
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %125
  store i8 1, i8* %18, align 8
  br label %129

129:                                              ; preds = %128, %125
  %130 = load i32, i32* %19, align 4
  %131 = icmp ugt i32 %130, 1
  br i1 %131, label %133, label %132, !prof !3

132:                                              ; preds = %129
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %136

133:                                              ; preds = %129
  %134 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %135 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %134, i64 1
  br label %136

136:                                              ; preds = %133, %132
  %137 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %132 ], [ %135, %133 ]
  %138 = load i8, i8* %21, align 8, !range !6
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %224, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %137, i64 0, i32 3, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %224, label %144

144:                                              ; preds = %140
  %145 = load i32, i32* %22, align 4
  %146 = icmp eq i32 %145, %142
  br i1 %146, label %147, label %224, !prof !3

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %137, i64 0, i32 0, i32 0
  %149 = load double, double* %148, align 8
  %150 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %137, i64 0, i32 3, i32 2
  %151 = zext i32 %142 to i64
  %152 = load float*, float** %23, align 8
  %153 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %150, align 8
  %154 = add nsw i64 %151, -1
  %155 = and i64 %151, 3
  %156 = icmp ult i64 %154, 3
  br i1 %156, label %159, label %157

157:                                              ; preds = %147
  %158 = sub nsw i64 %151, %155
  br label %186

159:                                              ; preds = %186, %147
  %160 = phi double [ undef, %147 ], [ %220, %186 ]
  %161 = phi i64 [ 0, %147 ], [ %221, %186 ]
  %162 = phi double [ %149, %147 ], [ %220, %186 ]
  %163 = icmp eq i64 %155, 0
  br i1 %163, label %178, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %175, %164 ], [ %161, %159 ]
  %166 = phi double [ %174, %164 ], [ %162, %159 ]
  %167 = phi i64 [ %176, %164 ], [ %155, %159 ]
  %168 = getelementptr inbounds float, float* %152, i64 %165
  %169 = load float, float* %168, align 4
  %170 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %153, i64 %165, i32 0
  %171 = load double, double* %170, align 8
  %172 = fpext float %169 to double
  %173 = fmul double %171, %172
  %174 = fadd double %166, %173
  %175 = add nuw nsw i64 %165, 1
  %176 = add i64 %167, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %164, !llvm.loop !137

178:                                              ; preds = %164, %159
  %179 = phi double [ %160, %159 ], [ %174, %164 ]
  %180 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %137, i64 0, i32 2
  store i32 0, i32* %180, align 4
  %181 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %137, i64 0, i32 1
  store i32 0, i32* %181, align 8
  %182 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %137, i64 0, i32 3, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = icmp slt i32 %183, 0
  store double %179, double* %148, align 8
  br i1 %184, label %224, label %185, !prof !2

185:                                              ; preds = %178
  store i32 0, i32* %141, align 4
  br label %224

186:                                              ; preds = %186, %157
  %187 = phi i64 [ 0, %157 ], [ %221, %186 ]
  %188 = phi double [ %149, %157 ], [ %220, %186 ]
  %189 = phi i64 [ %158, %157 ], [ %222, %186 ]
  %190 = getelementptr inbounds float, float* %152, i64 %187
  %191 = load float, float* %190, align 4
  %192 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %153, i64 %187, i32 0
  %193 = load double, double* %192, align 8
  %194 = fpext float %191 to double
  %195 = fmul double %193, %194
  %196 = fadd double %188, %195
  %197 = or i64 %187, 1
  %198 = getelementptr inbounds float, float* %152, i64 %197
  %199 = load float, float* %198, align 4
  %200 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %153, i64 %197, i32 0
  %201 = load double, double* %200, align 8
  %202 = fpext float %199 to double
  %203 = fmul double %201, %202
  %204 = fadd double %196, %203
  %205 = or i64 %187, 2
  %206 = getelementptr inbounds float, float* %152, i64 %205
  %207 = load float, float* %206, align 4
  %208 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %153, i64 %205, i32 0
  %209 = load double, double* %208, align 8
  %210 = fpext float %207 to double
  %211 = fmul double %209, %210
  %212 = fadd double %204, %211
  %213 = or i64 %187, 3
  %214 = getelementptr inbounds float, float* %152, i64 %213
  %215 = load float, float* %214, align 4
  %216 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %153, i64 %213, i32 0
  %217 = load double, double* %216, align 8
  %218 = fpext float %215 to double
  %219 = fmul double %217, %218
  %220 = fadd double %212, %219
  %221 = add nuw nsw i64 %187, 4
  %222 = add i64 %189, -4
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %159, label %186

224:                                              ; preds = %136, %140, %144, %178, %185
  %225 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %38, i64 0, i32 0, i32 0
  %226 = load double, double* %225, align 8
  %227 = load <2 x double>, <2 x double>* %3, align 16
  %228 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %137, i64 0, i32 0, i32 0
  %229 = load double, double* %228, align 8
  %230 = insertelement <2 x double> undef, double %226, i32 0
  %231 = insertelement <2 x double> %230, double %229, i32 1
  %232 = fadd <2 x double> %227, %231
  store <2 x double> %232, <2 x double>* %3, align 16
  %233 = bitcast <2 x double>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %233, i8* nonnull align 16 %25, i64 16, i1 false)
  %234 = load i32, i32* %14, align 4
  %235 = icmp ugt i32 %234, 2
  br i1 %235, label %237, label %236, !prof !3

236:                                              ; preds = %224
  store i8 1, i8* %18, align 8
  br label %237

237:                                              ; preds = %236, %224
  %238 = load i32, i32* %19, align 4
  %239 = icmp ugt i32 %238, 2
  br i1 %239, label %241, label %240, !prof !3

240:                                              ; preds = %237
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %244

241:                                              ; preds = %237
  %242 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %243 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %242, i64 2
  br label %244

244:                                              ; preds = %241, %240
  %245 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %240 ], [ %243, %241 ]
  %246 = load i8, i8* %21, align 8, !range !6
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %332, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %245, i64 0, i32 3, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %332, label %252

252:                                              ; preds = %248
  %253 = load i32, i32* %22, align 4
  %254 = icmp eq i32 %253, %250
  br i1 %254, label %255, label %332, !prof !3

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %245, i64 0, i32 0, i32 0
  %257 = load double, double* %256, align 8
  %258 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %245, i64 0, i32 3, i32 2
  %259 = zext i32 %250 to i64
  %260 = load float*, float** %23, align 8
  %261 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %258, align 8
  %262 = add nsw i64 %259, -1
  %263 = and i64 %259, 3
  %264 = icmp ult i64 %262, 3
  br i1 %264, label %267, label %265

265:                                              ; preds = %255
  %266 = sub nsw i64 %259, %263
  br label %294

267:                                              ; preds = %294, %255
  %268 = phi double [ undef, %255 ], [ %328, %294 ]
  %269 = phi i64 [ 0, %255 ], [ %329, %294 ]
  %270 = phi double [ %257, %255 ], [ %328, %294 ]
  %271 = icmp eq i64 %263, 0
  br i1 %271, label %286, label %272

272:                                              ; preds = %267, %272
  %273 = phi i64 [ %283, %272 ], [ %269, %267 ]
  %274 = phi double [ %282, %272 ], [ %270, %267 ]
  %275 = phi i64 [ %284, %272 ], [ %263, %267 ]
  %276 = getelementptr inbounds float, float* %260, i64 %273
  %277 = load float, float* %276, align 4
  %278 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %273, i32 0
  %279 = load double, double* %278, align 8
  %280 = fpext float %277 to double
  %281 = fmul double %279, %280
  %282 = fadd double %274, %281
  %283 = add nuw nsw i64 %273, 1
  %284 = add i64 %275, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %272, !llvm.loop !138

286:                                              ; preds = %272, %267
  %287 = phi double [ %268, %267 ], [ %282, %272 ]
  %288 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %245, i64 0, i32 2
  store i32 0, i32* %288, align 4
  %289 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %245, i64 0, i32 1
  store i32 0, i32* %289, align 8
  %290 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %245, i64 0, i32 3, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = icmp slt i32 %291, 0
  store double %287, double* %256, align 8
  br i1 %292, label %332, label %293, !prof !2

293:                                              ; preds = %286
  store i32 0, i32* %249, align 4
  br label %332

294:                                              ; preds = %294, %265
  %295 = phi i64 [ 0, %265 ], [ %329, %294 ]
  %296 = phi double [ %257, %265 ], [ %328, %294 ]
  %297 = phi i64 [ %266, %265 ], [ %330, %294 ]
  %298 = getelementptr inbounds float, float* %260, i64 %295
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %295, i32 0
  %301 = load double, double* %300, align 8
  %302 = fpext float %299 to double
  %303 = fmul double %301, %302
  %304 = fadd double %296, %303
  %305 = or i64 %295, 1
  %306 = getelementptr inbounds float, float* %260, i64 %305
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %305, i32 0
  %309 = load double, double* %308, align 8
  %310 = fpext float %307 to double
  %311 = fmul double %309, %310
  %312 = fadd double %304, %311
  %313 = or i64 %295, 2
  %314 = getelementptr inbounds float, float* %260, i64 %313
  %315 = load float, float* %314, align 4
  %316 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %313, i32 0
  %317 = load double, double* %316, align 8
  %318 = fpext float %315 to double
  %319 = fmul double %317, %318
  %320 = fadd double %312, %319
  %321 = or i64 %295, 3
  %322 = getelementptr inbounds float, float* %260, i64 %321
  %323 = load float, float* %322, align 4
  %324 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %261, i64 %321, i32 0
  %325 = load double, double* %324, align 8
  %326 = fpext float %323 to double
  %327 = fmul double %325, %326
  %328 = fadd double %320, %327
  %329 = add nuw nsw i64 %295, 4
  %330 = add i64 %297, -4
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %267, label %294

332:                                              ; preds = %244, %248, %252, %286, %293
  %333 = load i32, i32* %14, align 4
  %334 = icmp ugt i32 %333, 3
  br i1 %334, label %336, label %335, !prof !3

335:                                              ; preds = %332
  store i8 1, i8* %18, align 8
  br label %336

336:                                              ; preds = %335, %332
  %337 = load i32, i32* %19, align 4
  %338 = icmp ugt i32 %337, 3
  br i1 %338, label %340, label %339, !prof !3

339:                                              ; preds = %336
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %343

340:                                              ; preds = %336
  %341 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %342 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %341, i64 3
  br label %343

343:                                              ; preds = %340, %339
  %344 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %339 ], [ %342, %340 ]
  %345 = load i8, i8* %21, align 8, !range !6
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %431, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %344, i64 0, i32 3, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %431, label %351

351:                                              ; preds = %347
  %352 = load i32, i32* %22, align 4
  %353 = icmp eq i32 %352, %349
  br i1 %353, label %354, label %431, !prof !3

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %344, i64 0, i32 0, i32 0
  %356 = load double, double* %355, align 8
  %357 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %344, i64 0, i32 3, i32 2
  %358 = zext i32 %349 to i64
  %359 = load float*, float** %23, align 8
  %360 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %357, align 8
  %361 = add nsw i64 %358, -1
  %362 = and i64 %358, 3
  %363 = icmp ult i64 %361, 3
  br i1 %363, label %366, label %364

364:                                              ; preds = %354
  %365 = sub nsw i64 %358, %362
  br label %393

366:                                              ; preds = %393, %354
  %367 = phi double [ undef, %354 ], [ %427, %393 ]
  %368 = phi i64 [ 0, %354 ], [ %428, %393 ]
  %369 = phi double [ %356, %354 ], [ %427, %393 ]
  %370 = icmp eq i64 %362, 0
  br i1 %370, label %385, label %371

371:                                              ; preds = %366, %371
  %372 = phi i64 [ %382, %371 ], [ %368, %366 ]
  %373 = phi double [ %381, %371 ], [ %369, %366 ]
  %374 = phi i64 [ %383, %371 ], [ %362, %366 ]
  %375 = getelementptr inbounds float, float* %359, i64 %372
  %376 = load float, float* %375, align 4
  %377 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %360, i64 %372, i32 0
  %378 = load double, double* %377, align 8
  %379 = fpext float %376 to double
  %380 = fmul double %378, %379
  %381 = fadd double %373, %380
  %382 = add nuw nsw i64 %372, 1
  %383 = add i64 %374, -1
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %385, label %371, !llvm.loop !139

385:                                              ; preds = %371, %366
  %386 = phi double [ %367, %366 ], [ %381, %371 ]
  %387 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %344, i64 0, i32 2
  store i32 0, i32* %387, align 4
  %388 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %344, i64 0, i32 1
  store i32 0, i32* %388, align 8
  %389 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %344, i64 0, i32 3, i32 0
  %390 = load i32, i32* %389, align 8
  %391 = icmp slt i32 %390, 0
  store double %386, double* %355, align 8
  br i1 %391, label %431, label %392, !prof !2

392:                                              ; preds = %385
  store i32 0, i32* %348, align 4
  br label %431

393:                                              ; preds = %393, %364
  %394 = phi i64 [ 0, %364 ], [ %428, %393 ]
  %395 = phi double [ %356, %364 ], [ %427, %393 ]
  %396 = phi i64 [ %365, %364 ], [ %429, %393 ]
  %397 = getelementptr inbounds float, float* %359, i64 %394
  %398 = load float, float* %397, align 4
  %399 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %360, i64 %394, i32 0
  %400 = load double, double* %399, align 8
  %401 = fpext float %398 to double
  %402 = fmul double %400, %401
  %403 = fadd double %395, %402
  %404 = or i64 %394, 1
  %405 = getelementptr inbounds float, float* %359, i64 %404
  %406 = load float, float* %405, align 4
  %407 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %360, i64 %404, i32 0
  %408 = load double, double* %407, align 8
  %409 = fpext float %406 to double
  %410 = fmul double %408, %409
  %411 = fadd double %403, %410
  %412 = or i64 %394, 2
  %413 = getelementptr inbounds float, float* %359, i64 %412
  %414 = load float, float* %413, align 4
  %415 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %360, i64 %412, i32 0
  %416 = load double, double* %415, align 8
  %417 = fpext float %414 to double
  %418 = fmul double %416, %417
  %419 = fadd double %411, %418
  %420 = or i64 %394, 3
  %421 = getelementptr inbounds float, float* %359, i64 %420
  %422 = load float, float* %421, align 4
  %423 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %360, i64 %420, i32 0
  %424 = load double, double* %423, align 8
  %425 = fpext float %422 to double
  %426 = fmul double %424, %425
  %427 = fadd double %419, %426
  %428 = add nuw nsw i64 %394, 4
  %429 = add i64 %396, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %366, label %393

431:                                              ; preds = %343, %347, %351, %385, %392
  %432 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %245, i64 0, i32 0, i32 0
  %433 = load double, double* %432, align 8
  %434 = load <2 x double>, <2 x double>* %5, align 16
  %435 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %344, i64 0, i32 0, i32 0
  %436 = load double, double* %435, align 8
  %437 = insertelement <2 x double> undef, double %433, i32 0
  %438 = insertelement <2 x double> %437, double %436, i32 1
  %439 = fadd <2 x double> %434, %438
  store <2 x double> %439, <2 x double>* %5, align 16
  %440 = bitcast <2 x double>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %440) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %440, i8* nonnull align 16 %233, i64 16, i1 false)
  %441 = load i32, i32* %14, align 4
  %442 = icmp ugt i32 %441, 4
  br i1 %442, label %444, label %443, !prof !3

443:                                              ; preds = %431
  store i8 1, i8* %18, align 8
  br label %444

444:                                              ; preds = %443, %431
  %445 = load i32, i32* %19, align 4
  %446 = icmp ugt i32 %445, 4
  br i1 %446, label %448, label %447, !prof !3

447:                                              ; preds = %444
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %451

448:                                              ; preds = %444
  %449 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %450 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %449, i64 4
  br label %451

451:                                              ; preds = %448, %447
  %452 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %447 ], [ %450, %448 ]
  %453 = load i8, i8* %21, align 8, !range !6
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %539, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %452, i64 0, i32 3, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %539, label %459

459:                                              ; preds = %455
  %460 = load i32, i32* %22, align 4
  %461 = icmp eq i32 %460, %457
  br i1 %461, label %462, label %539, !prof !3

462:                                              ; preds = %459
  %463 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %452, i64 0, i32 0, i32 0
  %464 = load double, double* %463, align 8
  %465 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %452, i64 0, i32 3, i32 2
  %466 = zext i32 %457 to i64
  %467 = load float*, float** %23, align 8
  %468 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %465, align 8
  %469 = add nsw i64 %466, -1
  %470 = and i64 %466, 3
  %471 = icmp ult i64 %469, 3
  br i1 %471, label %474, label %472

472:                                              ; preds = %462
  %473 = sub nsw i64 %466, %470
  br label %501

474:                                              ; preds = %501, %462
  %475 = phi double [ undef, %462 ], [ %535, %501 ]
  %476 = phi i64 [ 0, %462 ], [ %536, %501 ]
  %477 = phi double [ %464, %462 ], [ %535, %501 ]
  %478 = icmp eq i64 %470, 0
  br i1 %478, label %493, label %479

479:                                              ; preds = %474, %479
  %480 = phi i64 [ %490, %479 ], [ %476, %474 ]
  %481 = phi double [ %489, %479 ], [ %477, %474 ]
  %482 = phi i64 [ %491, %479 ], [ %470, %474 ]
  %483 = getelementptr inbounds float, float* %467, i64 %480
  %484 = load float, float* %483, align 4
  %485 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %468, i64 %480, i32 0
  %486 = load double, double* %485, align 8
  %487 = fpext float %484 to double
  %488 = fmul double %486, %487
  %489 = fadd double %481, %488
  %490 = add nuw nsw i64 %480, 1
  %491 = add i64 %482, -1
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %479, !llvm.loop !140

493:                                              ; preds = %479, %474
  %494 = phi double [ %475, %474 ], [ %489, %479 ]
  %495 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %452, i64 0, i32 2
  store i32 0, i32* %495, align 4
  %496 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %452, i64 0, i32 1
  store i32 0, i32* %496, align 8
  %497 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %452, i64 0, i32 3, i32 0
  %498 = load i32, i32* %497, align 8
  %499 = icmp slt i32 %498, 0
  store double %494, double* %463, align 8
  br i1 %499, label %539, label %500, !prof !2

500:                                              ; preds = %493
  store i32 0, i32* %456, align 4
  br label %539

501:                                              ; preds = %501, %472
  %502 = phi i64 [ 0, %472 ], [ %536, %501 ]
  %503 = phi double [ %464, %472 ], [ %535, %501 ]
  %504 = phi i64 [ %473, %472 ], [ %537, %501 ]
  %505 = getelementptr inbounds float, float* %467, i64 %502
  %506 = load float, float* %505, align 4
  %507 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %468, i64 %502, i32 0
  %508 = load double, double* %507, align 8
  %509 = fpext float %506 to double
  %510 = fmul double %508, %509
  %511 = fadd double %503, %510
  %512 = or i64 %502, 1
  %513 = getelementptr inbounds float, float* %467, i64 %512
  %514 = load float, float* %513, align 4
  %515 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %468, i64 %512, i32 0
  %516 = load double, double* %515, align 8
  %517 = fpext float %514 to double
  %518 = fmul double %516, %517
  %519 = fadd double %511, %518
  %520 = or i64 %502, 2
  %521 = getelementptr inbounds float, float* %467, i64 %520
  %522 = load float, float* %521, align 4
  %523 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %468, i64 %520, i32 0
  %524 = load double, double* %523, align 8
  %525 = fpext float %522 to double
  %526 = fmul double %524, %525
  %527 = fadd double %519, %526
  %528 = or i64 %502, 3
  %529 = getelementptr inbounds float, float* %467, i64 %528
  %530 = load float, float* %529, align 4
  %531 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %468, i64 %528, i32 0
  %532 = load double, double* %531, align 8
  %533 = fpext float %530 to double
  %534 = fmul double %532, %533
  %535 = fadd double %527, %534
  %536 = add nuw nsw i64 %502, 4
  %537 = add i64 %504, -4
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %474, label %501

539:                                              ; preds = %451, %455, %459, %493, %500
  %540 = load i32, i32* %14, align 4
  %541 = icmp ugt i32 %540, 5
  br i1 %541, label %543, label %542, !prof !3

542:                                              ; preds = %539
  store i8 1, i8* %18, align 8
  br label %543

543:                                              ; preds = %542, %539
  %544 = load i32, i32* %19, align 4
  %545 = icmp ugt i32 %544, 5
  br i1 %545, label %547, label %546, !prof !3

546:                                              ; preds = %543
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %550

547:                                              ; preds = %543
  %548 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %549 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %548, i64 5
  br label %550

550:                                              ; preds = %547, %546
  %551 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %546 ], [ %549, %547 ]
  %552 = load i8, i8* %21, align 8, !range !6
  %553 = icmp eq i8 %552, 0
  br i1 %553, label %638, label %554

554:                                              ; preds = %550
  %555 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %551, i64 0, i32 3, i32 1
  %556 = load i32, i32* %555, align 4
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %638, label %558

558:                                              ; preds = %554
  %559 = load i32, i32* %22, align 4
  %560 = icmp eq i32 %559, %556
  br i1 %560, label %561, label %638, !prof !3

561:                                              ; preds = %558
  %562 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %551, i64 0, i32 0, i32 0
  %563 = load double, double* %562, align 8
  %564 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %551, i64 0, i32 3, i32 2
  %565 = zext i32 %556 to i64
  %566 = load float*, float** %23, align 8
  %567 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %564, align 8
  %568 = add nsw i64 %565, -1
  %569 = and i64 %565, 3
  %570 = icmp ult i64 %568, 3
  br i1 %570, label %573, label %571

571:                                              ; preds = %561
  %572 = sub nsw i64 %565, %569
  br label %600

573:                                              ; preds = %600, %561
  %574 = phi double [ undef, %561 ], [ %634, %600 ]
  %575 = phi i64 [ 0, %561 ], [ %635, %600 ]
  %576 = phi double [ %563, %561 ], [ %634, %600 ]
  %577 = icmp eq i64 %569, 0
  br i1 %577, label %592, label %578

578:                                              ; preds = %573, %578
  %579 = phi i64 [ %589, %578 ], [ %575, %573 ]
  %580 = phi double [ %588, %578 ], [ %576, %573 ]
  %581 = phi i64 [ %590, %578 ], [ %569, %573 ]
  %582 = getelementptr inbounds float, float* %566, i64 %579
  %583 = load float, float* %582, align 4
  %584 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %567, i64 %579, i32 0
  %585 = load double, double* %584, align 8
  %586 = fpext float %583 to double
  %587 = fmul double %585, %586
  %588 = fadd double %580, %587
  %589 = add nuw nsw i64 %579, 1
  %590 = add i64 %581, -1
  %591 = icmp eq i64 %590, 0
  br i1 %591, label %592, label %578, !llvm.loop !141

592:                                              ; preds = %578, %573
  %593 = phi double [ %574, %573 ], [ %588, %578 ]
  %594 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %551, i64 0, i32 2
  store i32 0, i32* %594, align 4
  %595 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %551, i64 0, i32 1
  store i32 0, i32* %595, align 8
  %596 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %551, i64 0, i32 3, i32 0
  %597 = load i32, i32* %596, align 8
  %598 = icmp slt i32 %597, 0
  store double %593, double* %562, align 8
  br i1 %598, label %638, label %599, !prof !2

599:                                              ; preds = %592
  store i32 0, i32* %555, align 4
  br label %638

600:                                              ; preds = %600, %571
  %601 = phi i64 [ 0, %571 ], [ %635, %600 ]
  %602 = phi double [ %563, %571 ], [ %634, %600 ]
  %603 = phi i64 [ %572, %571 ], [ %636, %600 ]
  %604 = getelementptr inbounds float, float* %566, i64 %601
  %605 = load float, float* %604, align 4
  %606 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %567, i64 %601, i32 0
  %607 = load double, double* %606, align 8
  %608 = fpext float %605 to double
  %609 = fmul double %607, %608
  %610 = fadd double %602, %609
  %611 = or i64 %601, 1
  %612 = getelementptr inbounds float, float* %566, i64 %611
  %613 = load float, float* %612, align 4
  %614 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %567, i64 %611, i32 0
  %615 = load double, double* %614, align 8
  %616 = fpext float %613 to double
  %617 = fmul double %615, %616
  %618 = fadd double %610, %617
  %619 = or i64 %601, 2
  %620 = getelementptr inbounds float, float* %566, i64 %619
  %621 = load float, float* %620, align 4
  %622 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %567, i64 %619, i32 0
  %623 = load double, double* %622, align 8
  %624 = fpext float %621 to double
  %625 = fmul double %623, %624
  %626 = fadd double %618, %625
  %627 = or i64 %601, 3
  %628 = getelementptr inbounds float, float* %566, i64 %627
  %629 = load float, float* %628, align 4
  %630 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %567, i64 %627, i32 0
  %631 = load double, double* %630, align 8
  %632 = fpext float %629 to double
  %633 = fmul double %631, %632
  %634 = fadd double %626, %633
  %635 = add nuw nsw i64 %601, 4
  %636 = add i64 %603, -4
  %637 = icmp eq i64 %636, 0
  br i1 %637, label %573, label %600

638:                                              ; preds = %550, %554, %558, %592, %599
  %639 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %452, i64 0, i32 0, i32 0
  %640 = load double, double* %639, align 8
  %641 = load <2 x double>, <2 x double>* %7, align 16
  %642 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %551, i64 0, i32 0, i32 0
  %643 = load double, double* %642, align 8
  %644 = insertelement <2 x double> undef, double %640, i32 0
  %645 = insertelement <2 x double> %644, double %643, i32 1
  %646 = fadd <2 x double> %641, %645
  store <2 x double> %646, <2 x double>* %7, align 16
  %647 = bitcast <2 x double>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %647) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %647, i8* nonnull align 16 %440, i64 16, i1 false)
  %648 = load i32, i32* %14, align 4
  %649 = icmp ugt i32 %648, 6
  br i1 %649, label %651, label %650, !prof !3

650:                                              ; preds = %638
  store i8 1, i8* %18, align 8
  br label %651

651:                                              ; preds = %650, %638
  %652 = load i32, i32* %19, align 4
  %653 = icmp ugt i32 %652, 6
  br i1 %653, label %655, label %654, !prof !3

654:                                              ; preds = %651
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %658

655:                                              ; preds = %651
  %656 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %657 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %656, i64 6
  br label %658

658:                                              ; preds = %655, %654
  %659 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %654 ], [ %657, %655 ]
  %660 = load i8, i8* %21, align 8, !range !6
  %661 = icmp eq i8 %660, 0
  br i1 %661, label %746, label %662

662:                                              ; preds = %658
  %663 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %659, i64 0, i32 3, i32 1
  %664 = load i32, i32* %663, align 4
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %746, label %666

666:                                              ; preds = %662
  %667 = load i32, i32* %22, align 4
  %668 = icmp eq i32 %667, %664
  br i1 %668, label %669, label %746, !prof !3

669:                                              ; preds = %666
  %670 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %659, i64 0, i32 0, i32 0
  %671 = load double, double* %670, align 8
  %672 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %659, i64 0, i32 3, i32 2
  %673 = zext i32 %664 to i64
  %674 = load float*, float** %23, align 8
  %675 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %672, align 8
  %676 = add nsw i64 %673, -1
  %677 = and i64 %673, 3
  %678 = icmp ult i64 %676, 3
  br i1 %678, label %681, label %679

679:                                              ; preds = %669
  %680 = sub nsw i64 %673, %677
  br label %708

681:                                              ; preds = %708, %669
  %682 = phi double [ undef, %669 ], [ %742, %708 ]
  %683 = phi i64 [ 0, %669 ], [ %743, %708 ]
  %684 = phi double [ %671, %669 ], [ %742, %708 ]
  %685 = icmp eq i64 %677, 0
  br i1 %685, label %700, label %686

686:                                              ; preds = %681, %686
  %687 = phi i64 [ %697, %686 ], [ %683, %681 ]
  %688 = phi double [ %696, %686 ], [ %684, %681 ]
  %689 = phi i64 [ %698, %686 ], [ %677, %681 ]
  %690 = getelementptr inbounds float, float* %674, i64 %687
  %691 = load float, float* %690, align 4
  %692 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %675, i64 %687, i32 0
  %693 = load double, double* %692, align 8
  %694 = fpext float %691 to double
  %695 = fmul double %693, %694
  %696 = fadd double %688, %695
  %697 = add nuw nsw i64 %687, 1
  %698 = add i64 %689, -1
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %700, label %686, !llvm.loop !142

700:                                              ; preds = %686, %681
  %701 = phi double [ %682, %681 ], [ %696, %686 ]
  %702 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %659, i64 0, i32 2
  store i32 0, i32* %702, align 4
  %703 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %659, i64 0, i32 1
  store i32 0, i32* %703, align 8
  %704 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %659, i64 0, i32 3, i32 0
  %705 = load i32, i32* %704, align 8
  %706 = icmp slt i32 %705, 0
  store double %701, double* %670, align 8
  br i1 %706, label %746, label %707, !prof !2

707:                                              ; preds = %700
  store i32 0, i32* %663, align 4
  br label %746

708:                                              ; preds = %708, %679
  %709 = phi i64 [ 0, %679 ], [ %743, %708 ]
  %710 = phi double [ %671, %679 ], [ %742, %708 ]
  %711 = phi i64 [ %680, %679 ], [ %744, %708 ]
  %712 = getelementptr inbounds float, float* %674, i64 %709
  %713 = load float, float* %712, align 4
  %714 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %675, i64 %709, i32 0
  %715 = load double, double* %714, align 8
  %716 = fpext float %713 to double
  %717 = fmul double %715, %716
  %718 = fadd double %710, %717
  %719 = or i64 %709, 1
  %720 = getelementptr inbounds float, float* %674, i64 %719
  %721 = load float, float* %720, align 4
  %722 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %675, i64 %719, i32 0
  %723 = load double, double* %722, align 8
  %724 = fpext float %721 to double
  %725 = fmul double %723, %724
  %726 = fadd double %718, %725
  %727 = or i64 %709, 2
  %728 = getelementptr inbounds float, float* %674, i64 %727
  %729 = load float, float* %728, align 4
  %730 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %675, i64 %727, i32 0
  %731 = load double, double* %730, align 8
  %732 = fpext float %729 to double
  %733 = fmul double %731, %732
  %734 = fadd double %726, %733
  %735 = or i64 %709, 3
  %736 = getelementptr inbounds float, float* %674, i64 %735
  %737 = load float, float* %736, align 4
  %738 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %675, i64 %735, i32 0
  %739 = load double, double* %738, align 8
  %740 = fpext float %737 to double
  %741 = fmul double %739, %740
  %742 = fadd double %734, %741
  %743 = add nuw nsw i64 %709, 4
  %744 = add i64 %711, -4
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %681, label %708

746:                                              ; preds = %658, %662, %666, %700, %707
  %747 = load i32, i32* %14, align 4
  %748 = icmp ugt i32 %747, 7
  br i1 %748, label %750, label %749, !prof !3

749:                                              ; preds = %746
  store i8 1, i8* %18, align 8
  br label %750

750:                                              ; preds = %749, %746
  %751 = load i32, i32* %19, align 4
  %752 = icmp ugt i32 %751, 7
  br i1 %752, label %754, label %753, !prof !3

753:                                              ; preds = %750
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %757

754:                                              ; preds = %750
  %755 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %756 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %755, i64 7
  br label %757

757:                                              ; preds = %754, %753
  %758 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %753 ], [ %756, %754 ]
  %759 = load i8, i8* %21, align 8, !range !6
  %760 = icmp eq i8 %759, 0
  br i1 %760, label %845, label %761

761:                                              ; preds = %757
  %762 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %758, i64 0, i32 3, i32 1
  %763 = load i32, i32* %762, align 4
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %845, label %765

765:                                              ; preds = %761
  %766 = load i32, i32* %22, align 4
  %767 = icmp eq i32 %766, %763
  br i1 %767, label %768, label %845, !prof !3

768:                                              ; preds = %765
  %769 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %758, i64 0, i32 0, i32 0
  %770 = load double, double* %769, align 8
  %771 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %758, i64 0, i32 3, i32 2
  %772 = zext i32 %763 to i64
  %773 = load float*, float** %23, align 8
  %774 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %771, align 8
  %775 = add nsw i64 %772, -1
  %776 = and i64 %772, 3
  %777 = icmp ult i64 %775, 3
  br i1 %777, label %780, label %778

778:                                              ; preds = %768
  %779 = sub nsw i64 %772, %776
  br label %807

780:                                              ; preds = %807, %768
  %781 = phi double [ undef, %768 ], [ %841, %807 ]
  %782 = phi i64 [ 0, %768 ], [ %842, %807 ]
  %783 = phi double [ %770, %768 ], [ %841, %807 ]
  %784 = icmp eq i64 %776, 0
  br i1 %784, label %799, label %785

785:                                              ; preds = %780, %785
  %786 = phi i64 [ %796, %785 ], [ %782, %780 ]
  %787 = phi double [ %795, %785 ], [ %783, %780 ]
  %788 = phi i64 [ %797, %785 ], [ %776, %780 ]
  %789 = getelementptr inbounds float, float* %773, i64 %786
  %790 = load float, float* %789, align 4
  %791 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %774, i64 %786, i32 0
  %792 = load double, double* %791, align 8
  %793 = fpext float %790 to double
  %794 = fmul double %792, %793
  %795 = fadd double %787, %794
  %796 = add nuw nsw i64 %786, 1
  %797 = add i64 %788, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %785, !llvm.loop !143

799:                                              ; preds = %785, %780
  %800 = phi double [ %781, %780 ], [ %795, %785 ]
  %801 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %758, i64 0, i32 2
  store i32 0, i32* %801, align 4
  %802 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %758, i64 0, i32 1
  store i32 0, i32* %802, align 8
  %803 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %758, i64 0, i32 3, i32 0
  %804 = load i32, i32* %803, align 8
  %805 = icmp slt i32 %804, 0
  store double %800, double* %769, align 8
  br i1 %805, label %845, label %806, !prof !2

806:                                              ; preds = %799
  store i32 0, i32* %762, align 4
  br label %845

807:                                              ; preds = %807, %778
  %808 = phi i64 [ 0, %778 ], [ %842, %807 ]
  %809 = phi double [ %770, %778 ], [ %841, %807 ]
  %810 = phi i64 [ %779, %778 ], [ %843, %807 ]
  %811 = getelementptr inbounds float, float* %773, i64 %808
  %812 = load float, float* %811, align 4
  %813 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %774, i64 %808, i32 0
  %814 = load double, double* %813, align 8
  %815 = fpext float %812 to double
  %816 = fmul double %814, %815
  %817 = fadd double %809, %816
  %818 = or i64 %808, 1
  %819 = getelementptr inbounds float, float* %773, i64 %818
  %820 = load float, float* %819, align 4
  %821 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %774, i64 %818, i32 0
  %822 = load double, double* %821, align 8
  %823 = fpext float %820 to double
  %824 = fmul double %822, %823
  %825 = fadd double %817, %824
  %826 = or i64 %808, 2
  %827 = getelementptr inbounds float, float* %773, i64 %826
  %828 = load float, float* %827, align 4
  %829 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %774, i64 %826, i32 0
  %830 = load double, double* %829, align 8
  %831 = fpext float %828 to double
  %832 = fmul double %830, %831
  %833 = fadd double %825, %832
  %834 = or i64 %808, 3
  %835 = getelementptr inbounds float, float* %773, i64 %834
  %836 = load float, float* %835, align 4
  %837 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %774, i64 %834, i32 0
  %838 = load double, double* %837, align 8
  %839 = fpext float %836 to double
  %840 = fmul double %838, %839
  %841 = fadd double %833, %840
  %842 = add nuw nsw i64 %808, 4
  %843 = add i64 %810, -4
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %780, label %807

845:                                              ; preds = %757, %761, %765, %799, %806
  %846 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %659, i64 0, i32 0, i32 0
  %847 = load double, double* %846, align 8
  %848 = load <2 x double>, <2 x double>* %9, align 16
  %849 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %758, i64 0, i32 0, i32 0
  %850 = load double, double* %849, align 8
  %851 = insertelement <2 x double> undef, double %847, i32 0
  %852 = insertelement <2 x double> %851, double %850, i32 1
  %853 = fadd <2 x double> %848, %852
  store <2 x double> %853, <2 x double>* %9, align 16
  %854 = bitcast <2 x double>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %854) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %854, i8* nonnull align 16 %647, i64 16, i1 false)
  %855 = load i32, i32* %14, align 4
  %856 = icmp ugt i32 %855, 8
  br i1 %856, label %858, label %857, !prof !3

857:                                              ; preds = %845
  store i8 1, i8* %18, align 8
  br label %858

858:                                              ; preds = %857, %845
  %859 = load i32, i32* %19, align 4
  %860 = icmp ugt i32 %859, 8
  br i1 %860, label %862, label %861, !prof !3

861:                                              ; preds = %858
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %865

862:                                              ; preds = %858
  %863 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %864 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %863, i64 8
  br label %865

865:                                              ; preds = %862, %861
  %866 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %861 ], [ %864, %862 ]
  %867 = load i8, i8* %21, align 8, !range !6
  %868 = icmp eq i8 %867, 0
  br i1 %868, label %953, label %869

869:                                              ; preds = %865
  %870 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %866, i64 0, i32 3, i32 1
  %871 = load i32, i32* %870, align 4
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %953, label %873

873:                                              ; preds = %869
  %874 = load i32, i32* %22, align 4
  %875 = icmp eq i32 %874, %871
  br i1 %875, label %876, label %953, !prof !3

876:                                              ; preds = %873
  %877 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %866, i64 0, i32 0, i32 0
  %878 = load double, double* %877, align 8
  %879 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %866, i64 0, i32 3, i32 2
  %880 = zext i32 %871 to i64
  %881 = load float*, float** %23, align 8
  %882 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %879, align 8
  %883 = add nsw i64 %880, -1
  %884 = and i64 %880, 3
  %885 = icmp ult i64 %883, 3
  br i1 %885, label %888, label %886

886:                                              ; preds = %876
  %887 = sub nsw i64 %880, %884
  br label %915

888:                                              ; preds = %915, %876
  %889 = phi double [ undef, %876 ], [ %949, %915 ]
  %890 = phi i64 [ 0, %876 ], [ %950, %915 ]
  %891 = phi double [ %878, %876 ], [ %949, %915 ]
  %892 = icmp eq i64 %884, 0
  br i1 %892, label %907, label %893

893:                                              ; preds = %888, %893
  %894 = phi i64 [ %904, %893 ], [ %890, %888 ]
  %895 = phi double [ %903, %893 ], [ %891, %888 ]
  %896 = phi i64 [ %905, %893 ], [ %884, %888 ]
  %897 = getelementptr inbounds float, float* %881, i64 %894
  %898 = load float, float* %897, align 4
  %899 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %882, i64 %894, i32 0
  %900 = load double, double* %899, align 8
  %901 = fpext float %898 to double
  %902 = fmul double %900, %901
  %903 = fadd double %895, %902
  %904 = add nuw nsw i64 %894, 1
  %905 = add i64 %896, -1
  %906 = icmp eq i64 %905, 0
  br i1 %906, label %907, label %893, !llvm.loop !144

907:                                              ; preds = %893, %888
  %908 = phi double [ %889, %888 ], [ %903, %893 ]
  %909 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %866, i64 0, i32 2
  store i32 0, i32* %909, align 4
  %910 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %866, i64 0, i32 1
  store i32 0, i32* %910, align 8
  %911 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %866, i64 0, i32 3, i32 0
  %912 = load i32, i32* %911, align 8
  %913 = icmp slt i32 %912, 0
  store double %908, double* %877, align 8
  br i1 %913, label %953, label %914, !prof !2

914:                                              ; preds = %907
  store i32 0, i32* %870, align 4
  br label %953

915:                                              ; preds = %915, %886
  %916 = phi i64 [ 0, %886 ], [ %950, %915 ]
  %917 = phi double [ %878, %886 ], [ %949, %915 ]
  %918 = phi i64 [ %887, %886 ], [ %951, %915 ]
  %919 = getelementptr inbounds float, float* %881, i64 %916
  %920 = load float, float* %919, align 4
  %921 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %882, i64 %916, i32 0
  %922 = load double, double* %921, align 8
  %923 = fpext float %920 to double
  %924 = fmul double %922, %923
  %925 = fadd double %917, %924
  %926 = or i64 %916, 1
  %927 = getelementptr inbounds float, float* %881, i64 %926
  %928 = load float, float* %927, align 4
  %929 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %882, i64 %926, i32 0
  %930 = load double, double* %929, align 8
  %931 = fpext float %928 to double
  %932 = fmul double %930, %931
  %933 = fadd double %925, %932
  %934 = or i64 %916, 2
  %935 = getelementptr inbounds float, float* %881, i64 %934
  %936 = load float, float* %935, align 4
  %937 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %882, i64 %934, i32 0
  %938 = load double, double* %937, align 8
  %939 = fpext float %936 to double
  %940 = fmul double %938, %939
  %941 = fadd double %933, %940
  %942 = or i64 %916, 3
  %943 = getelementptr inbounds float, float* %881, i64 %942
  %944 = load float, float* %943, align 4
  %945 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %882, i64 %942, i32 0
  %946 = load double, double* %945, align 8
  %947 = fpext float %944 to double
  %948 = fmul double %946, %947
  %949 = fadd double %941, %948
  %950 = add nuw nsw i64 %916, 4
  %951 = add i64 %918, -4
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %888, label %915

953:                                              ; preds = %865, %869, %873, %907, %914
  %954 = load i32, i32* %14, align 4
  %955 = icmp ugt i32 %954, 9
  br i1 %955, label %957, label %956, !prof !3

956:                                              ; preds = %953
  store i8 1, i8* %18, align 8
  br label %957

957:                                              ; preds = %956, %953
  %958 = load i32, i32* %19, align 4
  %959 = icmp ugt i32 %958, 9
  br i1 %959, label %961, label %960, !prof !3

960:                                              ; preds = %957
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %964

961:                                              ; preds = %957
  %962 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %963 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %962, i64 9
  br label %964

964:                                              ; preds = %961, %960
  %965 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %960 ], [ %963, %961 ]
  %966 = load i8, i8* %21, align 8, !range !6
  %967 = icmp eq i8 %966, 0
  br i1 %967, label %1052, label %968

968:                                              ; preds = %964
  %969 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %965, i64 0, i32 3, i32 1
  %970 = load i32, i32* %969, align 4
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %1052, label %972

972:                                              ; preds = %968
  %973 = load i32, i32* %22, align 4
  %974 = icmp eq i32 %973, %970
  br i1 %974, label %975, label %1052, !prof !3

975:                                              ; preds = %972
  %976 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %965, i64 0, i32 0, i32 0
  %977 = load double, double* %976, align 8
  %978 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %965, i64 0, i32 3, i32 2
  %979 = zext i32 %970 to i64
  %980 = load float*, float** %23, align 8
  %981 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %978, align 8
  %982 = add nsw i64 %979, -1
  %983 = and i64 %979, 3
  %984 = icmp ult i64 %982, 3
  br i1 %984, label %987, label %985

985:                                              ; preds = %975
  %986 = sub nsw i64 %979, %983
  br label %1014

987:                                              ; preds = %1014, %975
  %988 = phi double [ undef, %975 ], [ %1048, %1014 ]
  %989 = phi i64 [ 0, %975 ], [ %1049, %1014 ]
  %990 = phi double [ %977, %975 ], [ %1048, %1014 ]
  %991 = icmp eq i64 %983, 0
  br i1 %991, label %1006, label %992

992:                                              ; preds = %987, %992
  %993 = phi i64 [ %1003, %992 ], [ %989, %987 ]
  %994 = phi double [ %1002, %992 ], [ %990, %987 ]
  %995 = phi i64 [ %1004, %992 ], [ %983, %987 ]
  %996 = getelementptr inbounds float, float* %980, i64 %993
  %997 = load float, float* %996, align 4
  %998 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %981, i64 %993, i32 0
  %999 = load double, double* %998, align 8
  %1000 = fpext float %997 to double
  %1001 = fmul double %999, %1000
  %1002 = fadd double %994, %1001
  %1003 = add nuw nsw i64 %993, 1
  %1004 = add i64 %995, -1
  %1005 = icmp eq i64 %1004, 0
  br i1 %1005, label %1006, label %992, !llvm.loop !145

1006:                                             ; preds = %992, %987
  %1007 = phi double [ %988, %987 ], [ %1002, %992 ]
  %1008 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %965, i64 0, i32 2
  store i32 0, i32* %1008, align 4
  %1009 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %965, i64 0, i32 1
  store i32 0, i32* %1009, align 8
  %1010 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %965, i64 0, i32 3, i32 0
  %1011 = load i32, i32* %1010, align 8
  %1012 = icmp slt i32 %1011, 0
  store double %1007, double* %976, align 8
  br i1 %1012, label %1052, label %1013, !prof !2

1013:                                             ; preds = %1006
  store i32 0, i32* %969, align 4
  br label %1052

1014:                                             ; preds = %1014, %985
  %1015 = phi i64 [ 0, %985 ], [ %1049, %1014 ]
  %1016 = phi double [ %977, %985 ], [ %1048, %1014 ]
  %1017 = phi i64 [ %986, %985 ], [ %1050, %1014 ]
  %1018 = getelementptr inbounds float, float* %980, i64 %1015
  %1019 = load float, float* %1018, align 4
  %1020 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %981, i64 %1015, i32 0
  %1021 = load double, double* %1020, align 8
  %1022 = fpext float %1019 to double
  %1023 = fmul double %1021, %1022
  %1024 = fadd double %1016, %1023
  %1025 = or i64 %1015, 1
  %1026 = getelementptr inbounds float, float* %980, i64 %1025
  %1027 = load float, float* %1026, align 4
  %1028 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %981, i64 %1025, i32 0
  %1029 = load double, double* %1028, align 8
  %1030 = fpext float %1027 to double
  %1031 = fmul double %1029, %1030
  %1032 = fadd double %1024, %1031
  %1033 = or i64 %1015, 2
  %1034 = getelementptr inbounds float, float* %980, i64 %1033
  %1035 = load float, float* %1034, align 4
  %1036 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %981, i64 %1033, i32 0
  %1037 = load double, double* %1036, align 8
  %1038 = fpext float %1035 to double
  %1039 = fmul double %1037, %1038
  %1040 = fadd double %1032, %1039
  %1041 = or i64 %1015, 3
  %1042 = getelementptr inbounds float, float* %980, i64 %1041
  %1043 = load float, float* %1042, align 4
  %1044 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %981, i64 %1041, i32 0
  %1045 = load double, double* %1044, align 8
  %1046 = fpext float %1043 to double
  %1047 = fmul double %1045, %1046
  %1048 = fadd double %1040, %1047
  %1049 = add nuw nsw i64 %1015, 4
  %1050 = add i64 %1017, -4
  %1051 = icmp eq i64 %1050, 0
  br i1 %1051, label %987, label %1014

1052:                                             ; preds = %964, %968, %972, %1006, %1013
  %1053 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %866, i64 0, i32 0, i32 0
  %1054 = load double, double* %1053, align 8
  %1055 = load <2 x double>, <2 x double>* %11, align 16
  %1056 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %965, i64 0, i32 0, i32 0
  %1057 = load double, double* %1056, align 8
  %1058 = insertelement <2 x double> undef, double %1054, i32 0
  %1059 = insertelement <2 x double> %1058, double %1057, i32 1
  %1060 = fadd <2 x double> %1055, %1059
  store <2 x double> %1060, <2 x double>* %11, align 16
  %1061 = bitcast %"struct.CFF::point_t"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1061) #6
  %1062 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %13, i64 0, i32 0, i32 0
  %1063 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %13, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1061, i8* nonnull align 16 %854, i64 16, i1 false)
  %1064 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %1280)
  %1065 = extractelement <2 x double> %1064, i32 0
  %1066 = extractelement <2 x double> %1064, i32 1
  %1067 = fcmp ogt double %1065, %1066
  br i1 %1067, label %1285, label %1393

1068:                                             ; preds = %1283, %17
  %1069 = phi i32 [ 11, %17 ], [ %1284, %1283 ]
  %1070 = phi i64 [ 0, %17 ], [ %1281, %1283 ]
  %1071 = phi <2 x double> [ zeroinitializer, %17 ], [ %1280, %1283 ]
  %1072 = zext i32 %1069 to i64
  %1073 = icmp ult i64 %1070, %1072
  br i1 %1073, label %1075, label %1074, !prof !3

1074:                                             ; preds = %1068
  store i8 1, i8* %18, align 8
  br label %1075

1075:                                             ; preds = %1074, %1068
  %1076 = load i32, i32* %19, align 4
  %1077 = zext i32 %1076 to i64
  %1078 = icmp ult i64 %1070, %1077
  br i1 %1078, label %1080, label %1079, !prof !3

1079:                                             ; preds = %1075
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1083

1080:                                             ; preds = %1075
  %1081 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %1082 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1081, i64 %1070
  br label %1083

1083:                                             ; preds = %1080, %1079
  %1084 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1079 ], [ %1082, %1080 ]
  %1085 = load i8, i8* %21, align 8, !range !6
  %1086 = icmp eq i8 %1085, 0
  br i1 %1086, label %1171, label %1087

1087:                                             ; preds = %1083
  %1088 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1084, i64 0, i32 3, i32 1
  %1089 = load i32, i32* %1088, align 4
  %1090 = icmp eq i32 %1089, 0
  br i1 %1090, label %1171, label %1091

1091:                                             ; preds = %1087
  %1092 = load i32, i32* %22, align 4
  %1093 = icmp eq i32 %1092, %1089
  br i1 %1093, label %1094, label %1171, !prof !3

1094:                                             ; preds = %1091
  %1095 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1084, i64 0, i32 0, i32 0
  %1096 = load double, double* %1095, align 8
  %1097 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1084, i64 0, i32 3, i32 2
  %1098 = zext i32 %1089 to i64
  %1099 = load float*, float** %23, align 8
  %1100 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1097, align 8
  %1101 = add nsw i64 %1098, -1
  %1102 = and i64 %1098, 3
  %1103 = icmp ult i64 %1101, 3
  br i1 %1103, label %1106, label %1104

1104:                                             ; preds = %1094
  %1105 = sub nsw i64 %1098, %1102
  br label %1133

1106:                                             ; preds = %1133, %1094
  %1107 = phi double [ undef, %1094 ], [ %1167, %1133 ]
  %1108 = phi i64 [ 0, %1094 ], [ %1168, %1133 ]
  %1109 = phi double [ %1096, %1094 ], [ %1167, %1133 ]
  %1110 = icmp eq i64 %1102, 0
  br i1 %1110, label %1125, label %1111

1111:                                             ; preds = %1106, %1111
  %1112 = phi i64 [ %1122, %1111 ], [ %1108, %1106 ]
  %1113 = phi double [ %1121, %1111 ], [ %1109, %1106 ]
  %1114 = phi i64 [ %1123, %1111 ], [ %1102, %1106 ]
  %1115 = getelementptr inbounds float, float* %1099, i64 %1112
  %1116 = load float, float* %1115, align 4
  %1117 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1100, i64 %1112, i32 0
  %1118 = load double, double* %1117, align 8
  %1119 = fpext float %1116 to double
  %1120 = fmul double %1118, %1119
  %1121 = fadd double %1113, %1120
  %1122 = add nuw nsw i64 %1112, 1
  %1123 = add i64 %1114, -1
  %1124 = icmp eq i64 %1123, 0
  br i1 %1124, label %1125, label %1111, !llvm.loop !146

1125:                                             ; preds = %1111, %1106
  %1126 = phi double [ %1107, %1106 ], [ %1121, %1111 ]
  %1127 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1084, i64 0, i32 2
  store i32 0, i32* %1127, align 4
  %1128 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1084, i64 0, i32 1
  store i32 0, i32* %1128, align 8
  %1129 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1084, i64 0, i32 3, i32 0
  %1130 = load i32, i32* %1129, align 8
  %1131 = icmp slt i32 %1130, 0
  store double %1126, double* %1095, align 8
  br i1 %1131, label %1171, label %1132, !prof !2

1132:                                             ; preds = %1125
  store i32 0, i32* %1088, align 4
  br label %1171

1133:                                             ; preds = %1133, %1104
  %1134 = phi i64 [ 0, %1104 ], [ %1168, %1133 ]
  %1135 = phi double [ %1096, %1104 ], [ %1167, %1133 ]
  %1136 = phi i64 [ %1105, %1104 ], [ %1169, %1133 ]
  %1137 = getelementptr inbounds float, float* %1099, i64 %1134
  %1138 = load float, float* %1137, align 4
  %1139 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1100, i64 %1134, i32 0
  %1140 = load double, double* %1139, align 8
  %1141 = fpext float %1138 to double
  %1142 = fmul double %1140, %1141
  %1143 = fadd double %1135, %1142
  %1144 = or i64 %1134, 1
  %1145 = getelementptr inbounds float, float* %1099, i64 %1144
  %1146 = load float, float* %1145, align 4
  %1147 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1100, i64 %1144, i32 0
  %1148 = load double, double* %1147, align 8
  %1149 = fpext float %1146 to double
  %1150 = fmul double %1148, %1149
  %1151 = fadd double %1143, %1150
  %1152 = or i64 %1134, 2
  %1153 = getelementptr inbounds float, float* %1099, i64 %1152
  %1154 = load float, float* %1153, align 4
  %1155 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1100, i64 %1152, i32 0
  %1156 = load double, double* %1155, align 8
  %1157 = fpext float %1154 to double
  %1158 = fmul double %1156, %1157
  %1159 = fadd double %1151, %1158
  %1160 = or i64 %1134, 3
  %1161 = getelementptr inbounds float, float* %1099, i64 %1160
  %1162 = load float, float* %1161, align 4
  %1163 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1100, i64 %1160, i32 0
  %1164 = load double, double* %1163, align 8
  %1165 = fpext float %1162 to double
  %1166 = fmul double %1164, %1165
  %1167 = fadd double %1159, %1166
  %1168 = add nuw nsw i64 %1134, 4
  %1169 = add i64 %1136, -4
  %1170 = icmp eq i64 %1169, 0
  br i1 %1170, label %1106, label %1133

1171:                                             ; preds = %1083, %1087, %1091, %1125, %1132
  %1172 = or i64 %1070, 1
  %1173 = load i32, i32* %14, align 4
  %1174 = zext i32 %1173 to i64
  %1175 = icmp ult i64 %1172, %1174
  br i1 %1175, label %1177, label %1176, !prof !3

1176:                                             ; preds = %1171
  store i8 1, i8* %18, align 8
  br label %1177

1177:                                             ; preds = %1176, %1171
  %1178 = load i32, i32* %19, align 4
  %1179 = zext i32 %1178 to i64
  %1180 = icmp ult i64 %1172, %1179
  br i1 %1180, label %1182, label %1181, !prof !3

1181:                                             ; preds = %1177
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1185

1182:                                             ; preds = %1177
  %1183 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %1184 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1183, i64 %1172
  br label %1185

1185:                                             ; preds = %1182, %1181
  %1186 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1181 ], [ %1184, %1182 ]
  %1187 = load i8, i8* %21, align 8, !range !6
  %1188 = icmp eq i8 %1187, 0
  br i1 %1188, label %1273, label %1189

1189:                                             ; preds = %1185
  %1190 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1186, i64 0, i32 3, i32 1
  %1191 = load i32, i32* %1190, align 4
  %1192 = icmp eq i32 %1191, 0
  br i1 %1192, label %1273, label %1193

1193:                                             ; preds = %1189
  %1194 = load i32, i32* %22, align 4
  %1195 = icmp eq i32 %1194, %1191
  br i1 %1195, label %1196, label %1273, !prof !3

1196:                                             ; preds = %1193
  %1197 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1186, i64 0, i32 0, i32 0
  %1198 = load double, double* %1197, align 8
  %1199 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1186, i64 0, i32 3, i32 2
  %1200 = zext i32 %1191 to i64
  %1201 = load float*, float** %23, align 8
  %1202 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1199, align 8
  %1203 = add nsw i64 %1200, -1
  %1204 = and i64 %1200, 3
  %1205 = icmp ult i64 %1203, 3
  br i1 %1205, label %1208, label %1206

1206:                                             ; preds = %1196
  %1207 = sub nsw i64 %1200, %1204
  br label %1235

1208:                                             ; preds = %1235, %1196
  %1209 = phi double [ undef, %1196 ], [ %1269, %1235 ]
  %1210 = phi i64 [ 0, %1196 ], [ %1270, %1235 ]
  %1211 = phi double [ %1198, %1196 ], [ %1269, %1235 ]
  %1212 = icmp eq i64 %1204, 0
  br i1 %1212, label %1227, label %1213

1213:                                             ; preds = %1208, %1213
  %1214 = phi i64 [ %1224, %1213 ], [ %1210, %1208 ]
  %1215 = phi double [ %1223, %1213 ], [ %1211, %1208 ]
  %1216 = phi i64 [ %1225, %1213 ], [ %1204, %1208 ]
  %1217 = getelementptr inbounds float, float* %1201, i64 %1214
  %1218 = load float, float* %1217, align 4
  %1219 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1202, i64 %1214, i32 0
  %1220 = load double, double* %1219, align 8
  %1221 = fpext float %1218 to double
  %1222 = fmul double %1220, %1221
  %1223 = fadd double %1215, %1222
  %1224 = add nuw nsw i64 %1214, 1
  %1225 = add i64 %1216, -1
  %1226 = icmp eq i64 %1225, 0
  br i1 %1226, label %1227, label %1213, !llvm.loop !147

1227:                                             ; preds = %1213, %1208
  %1228 = phi double [ %1209, %1208 ], [ %1223, %1213 ]
  %1229 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1186, i64 0, i32 2
  store i32 0, i32* %1229, align 4
  %1230 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1186, i64 0, i32 1
  store i32 0, i32* %1230, align 8
  %1231 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1186, i64 0, i32 3, i32 0
  %1232 = load i32, i32* %1231, align 8
  %1233 = icmp slt i32 %1232, 0
  store double %1228, double* %1197, align 8
  br i1 %1233, label %1273, label %1234, !prof !2

1234:                                             ; preds = %1227
  store i32 0, i32* %1190, align 4
  br label %1273

1235:                                             ; preds = %1235, %1206
  %1236 = phi i64 [ 0, %1206 ], [ %1270, %1235 ]
  %1237 = phi double [ %1198, %1206 ], [ %1269, %1235 ]
  %1238 = phi i64 [ %1207, %1206 ], [ %1271, %1235 ]
  %1239 = getelementptr inbounds float, float* %1201, i64 %1236
  %1240 = load float, float* %1239, align 4
  %1241 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1202, i64 %1236, i32 0
  %1242 = load double, double* %1241, align 8
  %1243 = fpext float %1240 to double
  %1244 = fmul double %1242, %1243
  %1245 = fadd double %1237, %1244
  %1246 = or i64 %1236, 1
  %1247 = getelementptr inbounds float, float* %1201, i64 %1246
  %1248 = load float, float* %1247, align 4
  %1249 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1202, i64 %1246, i32 0
  %1250 = load double, double* %1249, align 8
  %1251 = fpext float %1248 to double
  %1252 = fmul double %1250, %1251
  %1253 = fadd double %1245, %1252
  %1254 = or i64 %1236, 2
  %1255 = getelementptr inbounds float, float* %1201, i64 %1254
  %1256 = load float, float* %1255, align 4
  %1257 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1202, i64 %1254, i32 0
  %1258 = load double, double* %1257, align 8
  %1259 = fpext float %1256 to double
  %1260 = fmul double %1258, %1259
  %1261 = fadd double %1253, %1260
  %1262 = or i64 %1236, 3
  %1263 = getelementptr inbounds float, float* %1201, i64 %1262
  %1264 = load float, float* %1263, align 4
  %1265 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1202, i64 %1262, i32 0
  %1266 = load double, double* %1265, align 8
  %1267 = fpext float %1264 to double
  %1268 = fmul double %1266, %1267
  %1269 = fadd double %1261, %1268
  %1270 = add nuw nsw i64 %1236, 4
  %1271 = add i64 %1238, -4
  %1272 = icmp eq i64 %1271, 0
  br i1 %1272, label %1208, label %1235

1273:                                             ; preds = %1185, %1189, %1193, %1227, %1234
  %1274 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1084, i64 0, i32 0, i32 0
  %1275 = load double, double* %1274, align 8
  %1276 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1186, i64 0, i32 0, i32 0
  %1277 = load double, double* %1276, align 8
  %1278 = insertelement <2 x double> undef, double %1275, i32 0
  %1279 = insertelement <2 x double> %1278, double %1277, i32 1
  %1280 = fadd <2 x double> %1071, %1279
  %1281 = add nuw nsw i64 %1070, 2
  %1282 = icmp ult i64 %1281, 10
  br i1 %1282, label %1283, label %24

1283:                                             ; preds = %1273
  %1284 = load i32, i32* %14, align 4
  br label %1068

1285:                                             ; preds = %1052
  %1286 = load i32, i32* %14, align 4
  %1287 = icmp ugt i32 %1286, 10
  br i1 %1287, label %1289, label %1288, !prof !3

1288:                                             ; preds = %1285
  store i8 1, i8* %18, align 8
  br label %1289

1289:                                             ; preds = %1288, %1285
  %1290 = load i32, i32* %19, align 4
  %1291 = icmp ugt i32 %1290, 10
  br i1 %1291, label %1293, label %1292, !prof !3

1292:                                             ; preds = %1289
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1296

1293:                                             ; preds = %1289
  %1294 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %1295 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1294, i64 10
  br label %1296

1296:                                             ; preds = %1293, %1292
  %1297 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1292 ], [ %1295, %1293 ]
  %1298 = load i8, i8* %21, align 8, !range !6
  %1299 = icmp eq i8 %1298, 0
  br i1 %1299, label %1384, label %1300

1300:                                             ; preds = %1296
  %1301 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1297, i64 0, i32 3, i32 1
  %1302 = load i32, i32* %1301, align 4
  %1303 = icmp eq i32 %1302, 0
  br i1 %1303, label %1384, label %1304

1304:                                             ; preds = %1300
  %1305 = load i32, i32* %22, align 4
  %1306 = icmp eq i32 %1305, %1302
  br i1 %1306, label %1307, label %1384, !prof !3

1307:                                             ; preds = %1304
  %1308 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1297, i64 0, i32 0, i32 0
  %1309 = load double, double* %1308, align 8
  %1310 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1297, i64 0, i32 3, i32 2
  %1311 = zext i32 %1302 to i64
  %1312 = load float*, float** %23, align 8
  %1313 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1310, align 8
  %1314 = add nsw i64 %1311, -1
  %1315 = and i64 %1311, 3
  %1316 = icmp ult i64 %1314, 3
  br i1 %1316, label %1319, label %1317

1317:                                             ; preds = %1307
  %1318 = sub nsw i64 %1311, %1315
  br label %1346

1319:                                             ; preds = %1346, %1307
  %1320 = phi double [ undef, %1307 ], [ %1380, %1346 ]
  %1321 = phi i64 [ 0, %1307 ], [ %1381, %1346 ]
  %1322 = phi double [ %1309, %1307 ], [ %1380, %1346 ]
  %1323 = icmp eq i64 %1315, 0
  br i1 %1323, label %1338, label %1324

1324:                                             ; preds = %1319, %1324
  %1325 = phi i64 [ %1335, %1324 ], [ %1321, %1319 ]
  %1326 = phi double [ %1334, %1324 ], [ %1322, %1319 ]
  %1327 = phi i64 [ %1336, %1324 ], [ %1315, %1319 ]
  %1328 = getelementptr inbounds float, float* %1312, i64 %1325
  %1329 = load float, float* %1328, align 4
  %1330 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1313, i64 %1325, i32 0
  %1331 = load double, double* %1330, align 8
  %1332 = fpext float %1329 to double
  %1333 = fmul double %1331, %1332
  %1334 = fadd double %1326, %1333
  %1335 = add nuw nsw i64 %1325, 1
  %1336 = add i64 %1327, -1
  %1337 = icmp eq i64 %1336, 0
  br i1 %1337, label %1338, label %1324, !llvm.loop !148

1338:                                             ; preds = %1324, %1319
  %1339 = phi double [ %1320, %1319 ], [ %1334, %1324 ]
  %1340 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1297, i64 0, i32 2
  store i32 0, i32* %1340, align 4
  %1341 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1297, i64 0, i32 1
  store i32 0, i32* %1341, align 8
  %1342 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1297, i64 0, i32 3, i32 0
  %1343 = load i32, i32* %1342, align 8
  %1344 = icmp slt i32 %1343, 0
  store double %1339, double* %1308, align 8
  br i1 %1344, label %1384, label %1345, !prof !2

1345:                                             ; preds = %1338
  store i32 0, i32* %1301, align 4
  br label %1384

1346:                                             ; preds = %1346, %1317
  %1347 = phi i64 [ 0, %1317 ], [ %1381, %1346 ]
  %1348 = phi double [ %1309, %1317 ], [ %1380, %1346 ]
  %1349 = phi i64 [ %1318, %1317 ], [ %1382, %1346 ]
  %1350 = getelementptr inbounds float, float* %1312, i64 %1347
  %1351 = load float, float* %1350, align 4
  %1352 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1313, i64 %1347, i32 0
  %1353 = load double, double* %1352, align 8
  %1354 = fpext float %1351 to double
  %1355 = fmul double %1353, %1354
  %1356 = fadd double %1348, %1355
  %1357 = or i64 %1347, 1
  %1358 = getelementptr inbounds float, float* %1312, i64 %1357
  %1359 = load float, float* %1358, align 4
  %1360 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1313, i64 %1357, i32 0
  %1361 = load double, double* %1360, align 8
  %1362 = fpext float %1359 to double
  %1363 = fmul double %1361, %1362
  %1364 = fadd double %1356, %1363
  %1365 = or i64 %1347, 2
  %1366 = getelementptr inbounds float, float* %1312, i64 %1365
  %1367 = load float, float* %1366, align 4
  %1368 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1313, i64 %1365, i32 0
  %1369 = load double, double* %1368, align 8
  %1370 = fpext float %1367 to double
  %1371 = fmul double %1369, %1370
  %1372 = fadd double %1364, %1371
  %1373 = or i64 %1347, 3
  %1374 = getelementptr inbounds float, float* %1312, i64 %1373
  %1375 = load float, float* %1374, align 4
  %1376 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1313, i64 %1373, i32 0
  %1377 = load double, double* %1376, align 8
  %1378 = fpext float %1375 to double
  %1379 = fmul double %1377, %1378
  %1380 = fadd double %1372, %1379
  %1381 = add nuw nsw i64 %1347, 4
  %1382 = add i64 %1349, -4
  %1383 = icmp eq i64 %1382, 0
  br i1 %1383, label %1319, label %1346

1384:                                             ; preds = %1296, %1300, %1304, %1338, %1345
  %1385 = load double, double* %1062, align 8
  %1386 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1297, i64 0, i32 0, i32 0
  %1387 = load double, double* %1386, align 8
  %1388 = fadd double %1385, %1387
  store double %1388, double* %1062, align 8
  %1389 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1
  %1390 = bitcast %"struct.CFF::number_t"* %1389 to i64*
  %1391 = bitcast %"struct.CFF::number_t"* %1063 to i64*
  %1392 = load i64, i64* %1390, align 8
  store i64 %1392, i64* %1391, align 8
  br label %1501

1393:                                             ; preds = %1052
  %1394 = bitcast %"struct.CFF::point_t"* %26 to i64*
  %1395 = bitcast %"struct.CFF::point_t"* %13 to i64*
  %1396 = load i64, i64* %1394, align 8
  store i64 %1396, i64* %1395, align 8
  %1397 = load i32, i32* %14, align 4
  %1398 = icmp ugt i32 %1397, 10
  br i1 %1398, label %1400, label %1399, !prof !3

1399:                                             ; preds = %1393
  store i8 1, i8* %18, align 8
  br label %1400

1400:                                             ; preds = %1399, %1393
  %1401 = load i32, i32* %19, align 4
  %1402 = icmp ugt i32 %1401, 10
  br i1 %1402, label %1404, label %1403, !prof !3

1403:                                             ; preds = %1400
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %1407

1404:                                             ; preds = %1400
  %1405 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %20, align 8
  %1406 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1405, i64 10
  br label %1407

1407:                                             ; preds = %1404, %1403
  %1408 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %1403 ], [ %1406, %1404 ]
  %1409 = load i8, i8* %21, align 8, !range !6
  %1410 = icmp eq i8 %1409, 0
  br i1 %1410, label %1495, label %1411

1411:                                             ; preds = %1407
  %1412 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1408, i64 0, i32 3, i32 1
  %1413 = load i32, i32* %1412, align 4
  %1414 = icmp eq i32 %1413, 0
  br i1 %1414, label %1495, label %1415

1415:                                             ; preds = %1411
  %1416 = load i32, i32* %22, align 4
  %1417 = icmp eq i32 %1416, %1413
  br i1 %1417, label %1418, label %1495, !prof !3

1418:                                             ; preds = %1415
  %1419 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1408, i64 0, i32 0, i32 0
  %1420 = load double, double* %1419, align 8
  %1421 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1408, i64 0, i32 3, i32 2
  %1422 = zext i32 %1413 to i64
  %1423 = load float*, float** %23, align 8
  %1424 = load %"struct.CFF::number_t"*, %"struct.CFF::number_t"** %1421, align 8
  %1425 = add nsw i64 %1422, -1
  %1426 = and i64 %1422, 3
  %1427 = icmp ult i64 %1425, 3
  br i1 %1427, label %1430, label %1428

1428:                                             ; preds = %1418
  %1429 = sub nsw i64 %1422, %1426
  br label %1457

1430:                                             ; preds = %1457, %1418
  %1431 = phi double [ undef, %1418 ], [ %1491, %1457 ]
  %1432 = phi i64 [ 0, %1418 ], [ %1492, %1457 ]
  %1433 = phi double [ %1420, %1418 ], [ %1491, %1457 ]
  %1434 = icmp eq i64 %1426, 0
  br i1 %1434, label %1449, label %1435

1435:                                             ; preds = %1430, %1435
  %1436 = phi i64 [ %1446, %1435 ], [ %1432, %1430 ]
  %1437 = phi double [ %1445, %1435 ], [ %1433, %1430 ]
  %1438 = phi i64 [ %1447, %1435 ], [ %1426, %1430 ]
  %1439 = getelementptr inbounds float, float* %1423, i64 %1436
  %1440 = load float, float* %1439, align 4
  %1441 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1424, i64 %1436, i32 0
  %1442 = load double, double* %1441, align 8
  %1443 = fpext float %1440 to double
  %1444 = fmul double %1442, %1443
  %1445 = fadd double %1437, %1444
  %1446 = add nuw nsw i64 %1436, 1
  %1447 = add i64 %1438, -1
  %1448 = icmp eq i64 %1447, 0
  br i1 %1448, label %1449, label %1435, !llvm.loop !149

1449:                                             ; preds = %1435, %1430
  %1450 = phi double [ %1431, %1430 ], [ %1445, %1435 ]
  %1451 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1408, i64 0, i32 2
  store i32 0, i32* %1451, align 4
  %1452 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1408, i64 0, i32 1
  store i32 0, i32* %1452, align 8
  %1453 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1408, i64 0, i32 3, i32 0
  %1454 = load i32, i32* %1453, align 8
  %1455 = icmp slt i32 %1454, 0
  store double %1450, double* %1419, align 8
  br i1 %1455, label %1495, label %1456, !prof !2

1456:                                             ; preds = %1449
  store i32 0, i32* %1412, align 4
  br label %1495

1457:                                             ; preds = %1457, %1428
  %1458 = phi i64 [ 0, %1428 ], [ %1492, %1457 ]
  %1459 = phi double [ %1420, %1428 ], [ %1491, %1457 ]
  %1460 = phi i64 [ %1429, %1428 ], [ %1493, %1457 ]
  %1461 = getelementptr inbounds float, float* %1423, i64 %1458
  %1462 = load float, float* %1461, align 4
  %1463 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1424, i64 %1458, i32 0
  %1464 = load double, double* %1463, align 8
  %1465 = fpext float %1462 to double
  %1466 = fmul double %1464, %1465
  %1467 = fadd double %1459, %1466
  %1468 = or i64 %1458, 1
  %1469 = getelementptr inbounds float, float* %1423, i64 %1468
  %1470 = load float, float* %1469, align 4
  %1471 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1424, i64 %1468, i32 0
  %1472 = load double, double* %1471, align 8
  %1473 = fpext float %1470 to double
  %1474 = fmul double %1472, %1473
  %1475 = fadd double %1467, %1474
  %1476 = or i64 %1458, 2
  %1477 = getelementptr inbounds float, float* %1423, i64 %1476
  %1478 = load float, float* %1477, align 4
  %1479 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1424, i64 %1476, i32 0
  %1480 = load double, double* %1479, align 8
  %1481 = fpext float %1478 to double
  %1482 = fmul double %1480, %1481
  %1483 = fadd double %1475, %1482
  %1484 = or i64 %1458, 3
  %1485 = getelementptr inbounds float, float* %1423, i64 %1484
  %1486 = load float, float* %1485, align 4
  %1487 = getelementptr inbounds %"struct.CFF::number_t", %"struct.CFF::number_t"* %1424, i64 %1484, i32 0
  %1488 = load double, double* %1487, align 8
  %1489 = fpext float %1486 to double
  %1490 = fmul double %1488, %1489
  %1491 = fadd double %1483, %1490
  %1492 = add nuw nsw i64 %1458, 4
  %1493 = add i64 %1460, -4
  %1494 = icmp eq i64 %1493, 0
  br i1 %1494, label %1430, label %1457

1495:                                             ; preds = %1407, %1411, %1415, %1449, %1456
  %1496 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %13, i64 0, i32 1, i32 0
  %1497 = load double, double* %1496, align 8
  %1498 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %1408, i64 0, i32 0, i32 0
  %1499 = load double, double* %1498, align 8
  %1500 = fadd double %1497, %1499
  store double %1500, double* %1496, align 8
  br label %1501

1501:                                             ; preds = %1495, %1384
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %4, %"struct.CFF::point_t"* nonnull dereferenceable(16) %6, %"struct.CFF::point_t"* nonnull dereferenceable(16) %8) #6
  call void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232) %0, %struct.cff2_extents_param_t* dereferenceable(40) %1, %"struct.CFF::point_t"* nonnull dereferenceable(16) %10, %"struct.CFF::point_t"* nonnull dereferenceable(16) %12, %"struct.CFF::point_t"* nonnull dereferenceable(16) %13) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1061) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %854) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %647) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %440) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #6
  br label %1504

1502:                                             ; preds = %2
  %1503 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %1503, align 8
  br label %1504

1504:                                             ; preds = %1502, %1501
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF7opset_tINS_11blend_arg_tEE10process_opEjRNS_12interp_env_tIS1_EE(i32, %"struct.CFF::interp_env_t"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %200 [
    i32 28, label %3
    i32 247, label %75
    i32 248, label %75
    i32 249, label %75
    i32 250, label %75
    i32 251, label %138
    i32 252, label %138
    i32 253, label %138
    i32 254, label %138
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %5, %7
  br i1 %8, label %11, label %9, !prof !3

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %10, align 4
  br label %16

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = zext i32 %5 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  br label %16

16:                                               ; preds = %9, %11
  %17 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %9 ], [ %15, %11 ]
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw i16 %19, 8
  %21 = add i32 %5, 1
  %22 = icmp ult i32 %21, %7
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %24, align 4
  br label %30

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = zext i32 %21 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  br label %30

30:                                               ; preds = %23, %25
  %31 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %23 ], [ %29, %25 ]
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = or i16 %20, %33
  %35 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %36, %38
  br i1 %39, label %40, label %46, !prof !3

40:                                               ; preds = %30
  %41 = add nuw i32 %36, 1
  store i32 %41, i32* %35, align 4
  %42 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %43 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %42, align 8
  %44 = zext i32 %36 to i64
  %45 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %43, i64 %44
  br label %48

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %47, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %46 ], [ %45, %40 ]
  %50 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %49, i64 0, i32 2
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %49, i64 0, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %49, i64 0, i32 3, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %57, label %55, !prof !2

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %49, i64 0, i32 3, i32 1
  store i32 0, i32* %56, align 4
  br label %57

57:                                               ; preds = %48, %55
  %58 = sitofp i16 %34 to double
  %59 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %49, i64 0, i32 0, i32 0
  store double %58, double* %59, align 8
  %60 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %61 = load i8, i8* %60, align 4, !range !6
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %57
  %64 = load i32, i32* %6, align 8
  br label %73

65:                                               ; preds = %57
  %66 = load i32, i32* %4, align 8
  %67 = load i32, i32* %6, align 8
  %68 = icmp ule i32 %66, %67
  %69 = add i32 %66, 2
  %70 = icmp ule i32 %69, %67
  %71 = and i1 %68, %70
  br i1 %71, label %72, label %73, !prof !9

72:                                               ; preds = %65
  store i32 %69, i32* %4, align 8
  br label %233

73:                                               ; preds = %65, %63
  %74 = phi i32 [ %64, %63 ], [ %67, %65 ]
  store i32 %74, i32* %4, align 8
  store i8 1, i8* %60, align 4
  br label %233

75:                                               ; preds = %2, %2, %2, %2
  %76 = shl i32 %0, 8
  %77 = add nuw nsw i32 %76, 2304
  %78 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp ult i32 %79, %81
  br i1 %82, label %85, label %83, !prof !3

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %84, align 4
  br label %90

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = zext i32 %79 to i64
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  br label %90

90:                                               ; preds = %83, %85
  %91 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %83 ], [ %89, %85 ]
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = or i32 %77, %93
  %95 = shl i32 %94, 16
  %96 = add i32 %95, 7077888
  %97 = ashr exact i32 %96, 16
  %98 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp ult i32 %99, %101
  br i1 %102, label %103, label %109, !prof !3

103:                                              ; preds = %90
  %104 = add nuw i32 %99, 1
  store i32 %104, i32* %98, align 4
  %105 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %106 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %105, align 8
  %107 = zext i32 %99 to i64
  %108 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %106, i64 %107
  br label %111

109:                                              ; preds = %90
  %110 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %110, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %111

111:                                              ; preds = %109, %103
  %112 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %109 ], [ %108, %103 ]
  %113 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %112, i64 0, i32 2
  store i32 0, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %112, i64 0, i32 1
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %112, i64 0, i32 3, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %120, label %118, !prof !2

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %112, i64 0, i32 3, i32 1
  store i32 0, i32* %119, align 4
  br label %120

120:                                              ; preds = %111, %118
  %121 = sitofp i32 %97 to double
  %122 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %112, i64 0, i32 0, i32 0
  store double %121, double* %122, align 8
  %123 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %124 = load i8, i8* %123, align 4, !range !6
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %128, label %126, !prof !3

126:                                              ; preds = %120
  %127 = load i32, i32* %80, align 8
  br label %136

128:                                              ; preds = %120
  %129 = load i32, i32* %78, align 8
  %130 = load i32, i32* %80, align 8
  %131 = icmp ule i32 %129, %130
  %132 = add i32 %129, 1
  %133 = icmp ule i32 %132, %130
  %134 = and i1 %131, %133
  br i1 %134, label %135, label %136, !prof !9

135:                                              ; preds = %128
  store i32 %132, i32* %78, align 8
  br label %233

136:                                              ; preds = %128, %126
  %137 = phi i32 [ %127, %126 ], [ %130, %128 ]
  store i32 %137, i32* %78, align 8
  store i8 1, i8* %123, align 4
  br label %233

138:                                              ; preds = %2, %2, %2, %2
  %139 = shl i32 %0, 16
  %140 = add nsw i32 %139, -16449536
  %141 = ashr exact i32 %140, 8
  %142 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = icmp ult i32 %143, %145
  br i1 %146, label %149, label %147, !prof !3

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  store i8 1, i8* %148, align 4
  br label %154

149:                                              ; preds = %138
  %150 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = zext i32 %143 to i64
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  br label %154

154:                                              ; preds = %147, %149
  %155 = phi i8* [ bitcast ([48 x i64]* @_hb_NullPool to i8*), %147 ], [ %153, %149 ]
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = sub nuw nsw i32 -108, %141
  %159 = sub nuw nsw i32 %158, %157
  %160 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp ult i32 %161, %163
  br i1 %164, label %165, label %171, !prof !3

165:                                              ; preds = %154
  %166 = add nuw i32 %161, 1
  store i32 %166, i32* %160, align 4
  %167 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %168 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %167, align 8
  %169 = zext i32 %161 to i64
  %170 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %168, i64 %169
  br label %173

171:                                              ; preds = %154
  %172 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %172, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %173

173:                                              ; preds = %171, %165
  %174 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %171 ], [ %170, %165 ]
  %175 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %174, i64 0, i32 2
  store i32 0, i32* %175, align 4
  %176 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %174, i64 0, i32 1
  store i32 0, i32* %176, align 8
  %177 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %174, i64 0, i32 3, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = icmp slt i32 %178, 0
  br i1 %179, label %182, label %180, !prof !2

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %174, i64 0, i32 3, i32 1
  store i32 0, i32* %181, align 4
  br label %182

182:                                              ; preds = %173, %180
  %183 = sitofp i32 %159 to double
  %184 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %174, i64 0, i32 0, i32 0
  store double %183, double* %184, align 8
  %185 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 0, i32 2
  %186 = load i8, i8* %185, align 4, !range !6
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %190, label %188, !prof !3

188:                                              ; preds = %182
  %189 = load i32, i32* %144, align 8
  br label %198

190:                                              ; preds = %182
  %191 = load i32, i32* %142, align 8
  %192 = load i32, i32* %144, align 8
  %193 = icmp ule i32 %191, %192
  %194 = add i32 %191, 1
  %195 = icmp ule i32 %194, %192
  %196 = and i1 %193, %195
  br i1 %196, label %197, label %198, !prof !9

197:                                              ; preds = %190
  store i32 %194, i32* %142, align 8
  br label %233

198:                                              ; preds = %190, %188
  %199 = phi i32 [ %189, %188 ], [ %192, %190 ]
  store i32 %199, i32* %142, align 8
  store i8 1, i8* %185, align 4
  br label %233

200:                                              ; preds = %2
  %201 = add i32 %0, -32
  %202 = icmp ult i32 %201, 215
  br i1 %202, label %203, label %230, !prof !3

203:                                              ; preds = %200
  %204 = add nsw i32 %0, -139
  %205 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = icmp ult i32 %206, %208
  br i1 %209, label %210, label %216, !prof !3

210:                                              ; preds = %203
  %211 = add nuw i32 %206, 1
  store i32 %211, i32* %205, align 4
  %212 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 2, i32 2
  %213 = load %"struct.CFF::blend_arg_t"*, %"struct.CFF::blend_arg_t"** %212, align 8
  %214 = zext i32 %206 to i64
  %215 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %213, i64 %214
  br label %218

216:                                              ; preds = %203
  %217 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 0
  store i8 1, i8* %217, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 32, i1 false) #6
  br label %218

218:                                              ; preds = %216, %210
  %219 = phi %"struct.CFF::blend_arg_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.CFF::blend_arg_t"*), %216 ], [ %215, %210 ]
  %220 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %219, i64 0, i32 2
  store i32 0, i32* %220, align 4
  %221 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %219, i64 0, i32 1
  store i32 0, i32* %221, align 8
  %222 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %219, i64 0, i32 3, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = icmp slt i32 %223, 0
  br i1 %224, label %227, label %225, !prof !2

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %219, i64 0, i32 3, i32 1
  store i32 0, i32* %226, align 4
  br label %227

227:                                              ; preds = %218, %225
  %228 = sitofp i32 %204 to double
  %229 = getelementptr inbounds %"struct.CFF::blend_arg_t", %"struct.CFF::blend_arg_t"* %219, i64 0, i32 0, i32 0
  store double %228, double* %229, align 8
  br label %233

230:                                              ; preds = %200
  %231 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %231, align 4
  %232 = getelementptr inbounds %"struct.CFF::interp_env_t", %"struct.CFF::interp_env_t"* %1, i64 0, i32 2
  store i8 1, i8* %232, align 8
  br label %233

233:                                              ; preds = %198, %197, %136, %135, %73, %72, %227, %230
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25cff2_path_procs_extents_t5curveERN3CFF20cff2_cs_interp_env_tER20cff2_extents_param_tRKNS0_7point_tES7_S7_(%"struct.CFF::cff2_cs_interp_env_t"* dereferenceable(232), %struct.cff2_extents_param_t* dereferenceable(40), %"struct.CFF::point_t"* dereferenceable(16), %"struct.CFF::point_t"* dereferenceable(16), %"struct.CFF::point_t"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %11 = load double, double* %10, align 8
  br label %41

12:                                               ; preds = %5
  store i8 1, i8* %6, align 8
  %13 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %14 = load double, double* %13, align 8
  %15 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %16 = load double, double* %15, align 8
  %17 = fcmp ogt double %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  store double %16, double* %13, align 8
  %19 = load double, double* %15, align 8
  br label %20

20:                                               ; preds = %18, %12
  %21 = phi double [ %16, %18 ], [ %14, %12 ]
  %22 = phi double [ %19, %18 ], [ %16, %12 ]
  %23 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %24 = load double, double* %23, align 8
  %25 = fcmp ogt double %22, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  store double %22, double* %23, align 8
  br label %27

27:                                               ; preds = %26, %20
  %28 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %31 = load double, double* %30, align 8
  %32 = fcmp ogt double %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  store double %31, double* %28, align 8
  %34 = load double, double* %30, align 8
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi double [ %34, %33 ], [ %31, %27 ]
  %37 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %38 = load double, double* %37, align 8
  %39 = fcmp ogt double %36, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  store double %36, double* %37, align 8
  br label %41

41:                                               ; preds = %9, %40, %35
  %42 = phi double [ %11, %9 ], [ %21, %40 ], [ %21, %35 ]
  %43 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %2, i64 0, i32 0, i32 0
  %45 = load double, double* %44, align 8
  %46 = fcmp ogt double %42, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  store double %45, double* %43, align 8
  %48 = load double, double* %44, align 8
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi double [ %45, %47 ], [ %42, %41 ]
  %51 = phi double [ %48, %47 ], [ %45, %41 ]
  %52 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 3, i32 0
  %53 = load double, double* %52, align 8
  %54 = fcmp ogt double %51, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %49
  store double %51, double* %52, align 8
  br label %56

56:                                               ; preds = %55, %49
  %57 = phi double [ %51, %55 ], [ %53, %49 ]
  %58 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 2, i32 0
  %59 = load double, double* %58, align 8
  %60 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %2, i64 0, i32 1, i32 0
  %61 = load double, double* %60, align 8
  %62 = fcmp ogt double %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  store double %61, double* %58, align 8
  %64 = load double, double* %60, align 8
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi double [ %61, %63 ], [ %59, %56 ]
  %67 = phi double [ %64, %63 ], [ %61, %56 ]
  %68 = getelementptr inbounds %struct.cff2_extents_param_t, %struct.cff2_extents_param_t* %1, i64 0, i32 4, i32 0
  %69 = load double, double* %68, align 8
  %70 = fcmp ogt double %67, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %65
  store double %67, double* %68, align 8
  br label %72

72:                                               ; preds = %65, %71
  %73 = phi double [ %69, %65 ], [ %67, %71 ]
  %74 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 0, i32 0
  %75 = load double, double* %74, align 8
  %76 = fcmp ogt double %50, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %72
  store double %75, double* %43, align 8
  %78 = load double, double* %74, align 8
  br label %79

79:                                               ; preds = %77, %72
  %80 = phi double [ %78, %77 ], [ %75, %72 ]
  %81 = fcmp ogt double %80, %57
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  store double %80, double* %52, align 8
  br label %83

83:                                               ; preds = %82, %79
  %84 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %3, i64 0, i32 1, i32 0
  %85 = load double, double* %84, align 8
  %86 = fcmp ogt double %66, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  store double %85, double* %58, align 8
  %88 = load double, double* %84, align 8
  br label %89

89:                                               ; preds = %87, %83
  %90 = phi double [ %88, %87 ], [ %85, %83 ]
  %91 = fcmp ogt double %90, %73
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  store double %90, double* %68, align 8
  br label %93

93:                                               ; preds = %89, %92
  %94 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12
  %95 = bitcast %"struct.CFF::point_t"* %94 to i8*
  %96 = bitcast %"struct.CFF::point_t"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #6
  %97 = load double, double* %43, align 8
  %98 = getelementptr inbounds %"struct.CFF::point_t", %"struct.CFF::point_t"* %94, i64 0, i32 0, i32 0
  %99 = load double, double* %98, align 8
  %100 = fcmp ogt double %97, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %93
  store double %99, double* %43, align 8
  %102 = load double, double* %98, align 8
  br label %103

103:                                              ; preds = %101, %93
  %104 = phi double [ %102, %101 ], [ %99, %93 ]
  %105 = load double, double* %52, align 8
  %106 = fcmp ogt double %104, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  store double %104, double* %52, align 8
  br label %108

108:                                              ; preds = %107, %103
  %109 = load double, double* %58, align 8
  %110 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 12, i32 1, i32 0
  %111 = load double, double* %110, align 8
  %112 = fcmp ogt double %109, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  store double %111, double* %58, align 8
  %114 = load double, double* %110, align 8
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi double [ %114, %113 ], [ %111, %108 ]
  %117 = load double, double* %68, align 8
  %118 = fcmp ogt double %116, %117
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  store double %116, double* %68, align 8
  br label %120

120:                                              ; preds = %115, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3CFF20cff2_cs_interp_env_t13process_blendEv(%"struct.CFF::cff2_cs_interp_env_t"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 2, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %121

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 4
  %7 = load %"struct.CFF::CFF2VariationStore"*, %"struct.CFF::CFF2VariationStore"** %6, align 8
  %8 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %7, i64 0, i32 1, i32 2
  %11 = bitcast %"struct.OT::ArrayOf"* %10 to i16*
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #6
  %14 = zext i16 %13 to i32
  %15 = icmp ult i32 %9, %14
  %16 = zext i32 %9 to i64
  %17 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %7, i64 0, i32 1, i32 2, i32 1, i64 %16
  %18 = select i1 %15, %"struct.OT::OffsetTo.5"* %17, %"struct.OT::OffsetTo.5"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OffsetTo.5"*), !prof !3
  %19 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw i32 %21, 24
  %23 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = or i32 %26, %22
  %28 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %27, %31
  %33 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = or i32 %32, %35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %51, label %38, !prof !2

38:                                               ; preds = %5
  %39 = zext i8 %20 to i64
  %40 = shl nuw nsw i64 %39, 24
  %41 = zext i8 %24 to i64
  %42 = shl nuw nsw i64 %41, 16
  %43 = or i64 %42, %40
  %44 = zext i8 %29 to i64
  %45 = shl nuw nsw i64 %44, 8
  %46 = or i64 %43, %45
  %47 = zext i8 %34 to i64
  %48 = or i64 %46, %47
  %49 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i64 %48
  %50 = bitcast i8* %49 to %"struct.OT::VarData"*
  br label %51

51:                                               ; preds = %5, %38
  %52 = phi %"struct.OT::VarData"* [ %50, %38 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VarData"*), %5 ]
  %53 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %52, i64 0, i32 2, i32 0
  %54 = bitcast %"struct.OT::IntType.3"* %53 to i16*
  %55 = load i16, i16* %54, align 1
  %56 = tail call i16 @llvm.bswap.i16(i16 %55) #6
  %57 = zext i16 %56 to i32
  %58 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 5
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 8
  %60 = load i8, i8* %59, align 8, !range !6
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %120, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %101, label %66, !prof !2

66:                                               ; preds = %62
  %67 = icmp ult i32 %64, %57
  br i1 %67, label %68, label %88, !prof !2

68:                                               ; preds = %66, %68
  %69 = phi i32 [ %72, %68 ], [ %64, %66 ]
  %70 = lshr i32 %69, 1
  %71 = add i32 %69, 8
  %72 = add i32 %71, %70
  %73 = icmp ugt i32 %72, %57
  br i1 %73, label %74, label %68

74:                                               ; preds = %68
  %75 = icmp uge i32 %72, %64
  %76 = icmp ult i32 %72, 1073741823
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %86, !prof !9

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %80 = bitcast float** %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = zext i32 %72 to i64
  %83 = shl nuw nsw i64 %82, 2
  %84 = tail call i8* @realloc(i8* %81, i64 %83) #6
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %78, %74
  store i32 -1, i32* %63, align 8
  br label %101

87:                                               ; preds = %78
  store i8* %84, i8** %80, align 8
  store i32 %72, i32* %63, align 8
  br label %88

88:                                               ; preds = %87, %66
  %89 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp ult i32 %90, %57
  br i1 %91, label %92, label %103

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %94 = load float*, float** %93, align 8
  %95 = zext i32 %90 to i64
  %96 = getelementptr inbounds float, float* %94, i64 %95
  %97 = bitcast float* %96 to i8*
  %98 = sub i32 %57, %90
  %99 = zext i32 %98 to i64
  %100 = shl nuw nsw i64 %99, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 %100, i1 false) #6
  br label %103

101:                                              ; preds = %86, %62
  %102 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 0, i32 0, i32 2
  store i8 1, i8* %102, align 8
  br label %120

103:                                              ; preds = %92, %88
  store i32 %57, i32* %89, align 4
  %104 = load %"struct.CFF::CFF2VariationStore"*, %"struct.CFF::CFF2VariationStore"** %6, align 8
  %105 = getelementptr inbounds %"struct.CFF::CFF2VariationStore", %"struct.CFF::CFF2VariationStore"* %104, i64 0, i32 1
  %106 = load i32, i32* %8, align 4
  %107 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 1
  %108 = load i32*, i32** %107, align 8
  %109 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i16 %55, 0
  br i1 %111, label %112, label %114, !prof !2

112:                                              ; preds = %103
  %113 = load i32, i32* bitcast ([48 x i64]* @_hb_NullPool to i32*), align 16
  store i32 %113, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %117

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"struct.CFF::cff2_cs_interp_env_t", %"struct.CFF::cff2_cs_interp_env_t"* %0, i64 0, i32 7, i32 2
  %116 = load float*, float** %115, align 8
  br label %117

117:                                              ; preds = %112, %114
  %118 = phi float* [ bitcast ([48 x i64]* @_hb_CrapPool to float*), %112 ], [ %116, %114 ]
  %119 = load i32, i32* %58, align 8
  tail call void @_ZNK2OT14VariationStore11get_scalarsEjPKijPfj(%"struct.OT::VariationStore"* %105, i32 %106, i32* %108, i32 %110, float* %118, i32 %119)
  br label %120

120:                                              ; preds = %51, %101, %117
  store i8 1, i8* %2, align 2
  br label %121

121:                                              ; preds = %1, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT14VariationStore11get_scalarsEjPKijPfj(%"struct.OT::VariationStore"*, i32, i32*, i32, float*, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 2
  %8 = bitcast %"struct.OT::ArrayOf"* %7 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #6
  %11 = zext i16 %10 to i32
  %12 = icmp ugt i32 %11, %1
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 2, i32 1, i64 %13
  %15 = select i1 %12, %"struct.OT::OffsetTo.5"* %14, %"struct.OT::OffsetTo.5"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OffsetTo.5"*), !prof !3
  %16 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl nuw i32 %18, 24
  %20 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 16
  %24 = or i32 %23, %19
  %25 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 8
  %29 = or i32 %24, %28
  %30 = getelementptr inbounds %"struct.OT::OffsetTo.5", %"struct.OT::OffsetTo.5"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = or i32 %29, %32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %48, label %35, !prof !2

35:                                               ; preds = %6
  %36 = zext i8 %17 to i64
  %37 = shl nuw nsw i64 %36, 24
  %38 = zext i8 %21 to i64
  %39 = shl nuw nsw i64 %38, 16
  %40 = or i64 %39, %37
  %41 = zext i8 %26 to i64
  %42 = shl nuw nsw i64 %41, 8
  %43 = or i64 %40, %42
  %44 = zext i8 %31 to i64
  %45 = or i64 %43, %44
  %46 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 0, i32 0, i32 0, i64 %45
  %47 = bitcast i8* %46 to %"struct.OT::VarData"*
  br label %48

48:                                               ; preds = %6, %35
  %49 = phi %"struct.OT::VarData"* [ %47, %35 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VarData"*), %6 ]
  %50 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  %64 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %82, label %69, !prof !2

69:                                               ; preds = %48
  %70 = zext i8 %51 to i64
  %71 = shl nuw nsw i64 %70, 24
  %72 = zext i8 %55 to i64
  %73 = shl nuw nsw i64 %72, 16
  %74 = or i64 %73, %71
  %75 = zext i8 %60 to i64
  %76 = shl nuw nsw i64 %75, 8
  %77 = or i64 %74, %76
  %78 = zext i8 %65 to i64
  %79 = or i64 %77, %78
  %80 = getelementptr inbounds %"struct.OT::VariationStore", %"struct.OT::VariationStore"* %0, i64 0, i32 0, i32 0, i32 0, i64 %79
  %81 = bitcast i8* %80 to %"struct.OT::VarRegionList"*
  br label %82

82:                                               ; preds = %48, %69
  %83 = phi %"struct.OT::VarRegionList"* [ %81, %69 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VarRegionList"*), %48 ]
  %84 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %49, i64 0, i32 2, i32 0
  %85 = bitcast %"struct.OT::IntType.3"* %84 to i16*
  %86 = load i16, i16* %85, align 1
  %87 = tail call i16 @llvm.bswap.i16(i16 %86) #6
  %88 = zext i16 %87 to i32
  %89 = icmp ult i32 %88, %5
  %90 = select i1 %89, i32 %88, i32 %5
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %82
  %93 = zext i32 %90 to i64
  br label %104

94:                                               ; preds = %104, %82
  br i1 %89, label %95, label %115

95:                                               ; preds = %94
  %96 = zext i32 %90 to i64
  %97 = getelementptr float, float* %4, i64 %96
  %98 = bitcast float* %97 to i8*
  %99 = xor i32 %90, -1
  %100 = add i32 %99, %5
  %101 = zext i32 %100 to i64
  %102 = shl nuw nsw i64 %101, 2
  %103 = add nuw nsw i64 %102, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %98, i8 0, i64 %103, i1 false) #6
  br label %115

104:                                              ; preds = %104, %92
  %105 = phi i64 [ 0, %92 ], [ %113, %104 ]
  %106 = getelementptr inbounds %"struct.OT::VarData", %"struct.OT::VarData"* %49, i64 0, i32 2, i32 1, i64 %105
  %107 = bitcast %"struct.OT::IntType.3"* %106 to i16*
  %108 = load i16, i16* %107, align 1
  %109 = tail call i16 @llvm.bswap.i16(i16 %108) #6
  %110 = zext i16 %109 to i32
  %111 = tail call float @_ZNK2OT13VarRegionList8evaluateEjPKij(%"struct.OT::VarRegionList"* %83, i32 %110, i32* %2, i32 %3) #6
  %112 = getelementptr inbounds float, float* %4, i64 %105
  store float %111, float* %112, align 4
  %113 = add nuw nsw i64 %105, 1
  %114 = icmp ult i64 %113, %93
  br i1 %114, label %104, label %94

115:                                              ; preds = %94, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK2OT13VarRegionList8evaluateEjPKij(%"struct.OT::VarRegionList"*, i32, i32*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::VarRegionList", %"struct.OT::VarRegionList"* %0, i64 0, i32 1
  %6 = bitcast %"struct.OT::IntType.3"* %5 to i16*
  %7 = load i16, i16* %6, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7) #6
  %9 = zext i16 %8 to i32
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %81, !prof !3

11:                                               ; preds = %4
  %12 = bitcast %"struct.OT::VarRegionList"* %0 to i16*
  %13 = load i16, i16* %12, align 1
  %14 = tail call i16 @llvm.bswap.i16(i16 %13) #6
  %15 = zext i16 %14 to i32
  %16 = mul i32 %15, %1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.OT::VarRegionList", %"struct.OT::VarRegionList"* %0, i64 0, i32 2, i32 0, i64 %17
  %19 = icmp eq i16 %13, 0
  br i1 %19, label %81, label %20

20:                                               ; preds = %11
  %21 = zext i32 %3 to i64
  %22 = zext i16 %14 to i64
  br label %23

23:                                               ; preds = %20, %77
  %24 = phi i64 [ 0, %20 ], [ %79, %77 ]
  %25 = phi float [ 1.000000e+00, %20 ], [ %78, %77 ]
  %26 = icmp ult i64 %24, %21
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds i32, i32* %2, i64 %24
  %29 = load i32, i32* %28, align 4
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi i32 [ %29, %27 ], [ 0, %23 ]
  %32 = getelementptr inbounds %"struct.OT::VarRegionAxis", %"struct.OT::VarRegionAxis"* %18, i64 %24
  %33 = bitcast %"struct.OT::VarRegionAxis"* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #6
  %36 = sext i16 %35 to i32
  %37 = getelementptr inbounds %"struct.OT::VarRegionAxis", %"struct.OT::VarRegionAxis"* %18, i64 %24, i32 1, i32 0
  %38 = bitcast %"struct.OT::IntType.167"* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #6
  %41 = sext i16 %40 to i32
  %42 = getelementptr inbounds %"struct.OT::VarRegionAxis", %"struct.OT::VarRegionAxis"* %18, i64 %24, i32 2, i32 0
  %43 = bitcast %"struct.OT::IntType.167"* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = tail call i16 @llvm.bswap.i16(i16 %44) #6
  %46 = sext i16 %45 to i32
  %47 = icmp slt i16 %40, %35
  %48 = icmp slt i16 %45, %40
  %49 = or i1 %47, %48
  br i1 %49, label %77, label %50, !prof !2

50:                                               ; preds = %30
  %51 = icmp slt i16 %35, 0
  %52 = icmp sgt i16 %45, 0
  %53 = and i1 %51, %52
  %54 = icmp ne i16 %39, 0
  %55 = and i1 %54, %53
  br i1 %55, label %77, label %56, !prof !2

56:                                               ; preds = %50
  %57 = icmp eq i16 %39, 0
  %58 = icmp eq i32 %31, %41
  %59 = or i1 %57, %58
  br i1 %59, label %77, label %60

60:                                               ; preds = %56
  %61 = icmp sgt i32 %31, %36
  %62 = icmp slt i32 %31, %46
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %81

64:                                               ; preds = %60
  %65 = icmp slt i32 %31, %41
  %66 = sub nsw i32 %31, %36
  %67 = sub nsw i32 %41, %36
  %68 = sub nsw i32 %46, %31
  %69 = sub nsw i32 %46, %41
  %70 = select i1 %65, i32 %67, i32 %69
  %71 = select i1 %65, i32 %66, i32 %68
  %72 = sitofp i32 %71 to float
  %73 = sitofp i32 %70 to float
  %74 = fdiv float %72, %73
  %75 = fcmp oeq float %74, 0.000000e+00
  %76 = fmul float %25, %74
  br i1 %75, label %81, label %77

77:                                               ; preds = %64, %56, %50, %30
  %78 = phi float [ %76, %64 ], [ %25, %30 ], [ %25, %50 ], [ %25, %56 ]
  %79 = add nuw nsw i64 %24, 1
  %80 = icmp ult i64 %79, %22
  br i1 %80, label %23, label %81

81:                                               ; preds = %77, %60, %64, %11, %4
  %82 = phi float [ 0.000000e+00, %4 ], [ 1.000000e+00, %11 ], [ %78, %77 ], [ 0.000000e+00, %60 ], [ 0.000000e+00, %64 ]
  ret float %82
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #2

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{i8 0, i8 2}
!7 = !{!"branch_weights", i32 -102759400, i32 4193255}
!8 = !{!"branch_weights", i32 4001, i32 4000000}
!9 = !{!"branch_weights", i32 4000000, i32 4001}
!10 = !{!"branch_weights", i32 12567197, i32 -111133346}
!11 = distinct !{!11, !5}
!12 = distinct !{!12, !5}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !5}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !5}
!17 = !{!"branch_weights", i32 2146410443, i32 1073205}
!18 = distinct !{!18, !5}
!19 = distinct !{!19, !5}
!20 = !{!"branch_weights", i32 1073205, i32 2146410443}
!21 = distinct !{!21, !5}
!22 = distinct !{!22, !5}
!23 = distinct !{!23, !5}
!24 = distinct !{!24, !5}
!25 = distinct !{!25, !5}
!26 = distinct !{!26, !5}
!27 = distinct !{!27, !5}
!28 = distinct !{!28, !5}
!29 = distinct !{!29, !5}
!30 = distinct !{!30, !5}
!31 = distinct !{!31, !5}
!32 = distinct !{!32, !5}
!33 = distinct !{!33, !5}
!34 = distinct !{!34, !5}
!35 = distinct !{!35, !5}
!36 = distinct !{!36, !5}
!37 = distinct !{!37, !5}
!38 = distinct !{!38, !5}
!39 = distinct !{!39, !5}
!40 = distinct !{!40, !5}
!41 = distinct !{!41, !5}
!42 = distinct !{!42, !5}
!43 = distinct !{!43, !5}
!44 = distinct !{!44, !5}
!45 = distinct !{!45, !5}
!46 = distinct !{!46, !5}
!47 = distinct !{!47, !5}
!48 = distinct !{!48, !5}
!49 = distinct !{!49, !5}
!50 = distinct !{!50, !5}
!51 = distinct !{!51, !5}
!52 = distinct !{!52, !5}
!53 = distinct !{!53, !5}
!54 = distinct !{!54, !5}
!55 = distinct !{!55, !5}
!56 = distinct !{!56, !5}
!57 = distinct !{!57, !5}
!58 = distinct !{!58, !5}
!59 = distinct !{!59, !5}
!60 = distinct !{!60, !5}
!61 = distinct !{!61, !5}
!62 = distinct !{!62, !5}
!63 = distinct !{!63, !5}
!64 = distinct !{!64, !5}
!65 = distinct !{!65, !5}
!66 = distinct !{!66, !5}
!67 = distinct !{!67, !5}
!68 = distinct !{!68, !5}
!69 = distinct !{!69, !5}
!70 = distinct !{!70, !5}
!71 = distinct !{!71, !5}
!72 = distinct !{!72, !5}
!73 = distinct !{!73, !5}
!74 = distinct !{!74, !5}
!75 = distinct !{!75, !5}
!76 = distinct !{!76, !5}
!77 = distinct !{!77, !5}
!78 = distinct !{!78, !5}
!79 = distinct !{!79, !5}
!80 = distinct !{!80, !5}
!81 = distinct !{!81, !5}
!82 = distinct !{!82, !5}
!83 = distinct !{!83, !5}
!84 = distinct !{!84, !5}
!85 = distinct !{!85, !5}
!86 = distinct !{!86, !5}
!87 = distinct !{!87, !5}
!88 = distinct !{!88, !5}
!89 = distinct !{!89, !5}
!90 = distinct !{!90, !5}
!91 = distinct !{!91, !5}
!92 = distinct !{!92, !5}
!93 = distinct !{!93, !5}
!94 = distinct !{!94, !5}
!95 = distinct !{!95, !5}
!96 = distinct !{!96, !5}
!97 = distinct !{!97, !5}
!98 = distinct !{!98, !5}
!99 = distinct !{!99, !5}
!100 = distinct !{!100, !5}
!101 = distinct !{!101, !5}
!102 = distinct !{!102, !5}
!103 = distinct !{!103, !5}
!104 = distinct !{!104, !5}
!105 = distinct !{!105, !5}
!106 = distinct !{!106, !5}
!107 = distinct !{!107, !5}
!108 = distinct !{!108, !5}
!109 = distinct !{!109, !5}
!110 = distinct !{!110, !5}
!111 = distinct !{!111, !5}
!112 = distinct !{!112, !5}
!113 = distinct !{!113, !5}
!114 = distinct !{!114, !5}
!115 = distinct !{!115, !5}
!116 = distinct !{!116, !5}
!117 = distinct !{!117, !5}
!118 = distinct !{!118, !5}
!119 = distinct !{!119, !5}
!120 = distinct !{!120, !5}
!121 = distinct !{!121, !5}
!122 = distinct !{!122, !5}
!123 = distinct !{!123, !5}
!124 = distinct !{!124, !5}
!125 = distinct !{!125, !5}
!126 = distinct !{!126, !5}
!127 = distinct !{!127, !5}
!128 = distinct !{!128, !5}
!129 = distinct !{!129, !5}
!130 = distinct !{!130, !5}
!131 = distinct !{!131, !5}
!132 = distinct !{!132, !5}
!133 = distinct !{!133, !5}
!134 = distinct !{!134, !5}
!135 = distinct !{!135, !5}
!136 = distinct !{!136, !5}
!137 = distinct !{!137, !5}
!138 = distinct !{!138, !5}
!139 = distinct !{!139, !5}
!140 = distinct !{!140, !5}
!141 = distinct !{!141, !5}
!142 = distinct !{!142, !5}
!143 = distinct !{!143, !5}
!144 = distinct !{!144, !5}
!145 = distinct !{!145, !5}
!146 = distinct !{!146, !5}
!147 = distinct !{!147, !5}
!148 = distinct !{!148, !5}
!149 = distinct !{!149, !5}
