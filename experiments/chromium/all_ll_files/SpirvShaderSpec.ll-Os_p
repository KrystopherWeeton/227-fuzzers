; ModuleID = '../../third_party/swiftshader/src/Pipeline/SpirvShaderSpec.cpp'
source_filename = "../../third_party/swiftshader/src/Pipeline/SpirvShaderSpec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%"class.sw::SpirvShader" = type { %"class.std::__1::vector", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.55", %"class.std::__1::unordered_map.82", %"class.std::__1::vector.109", %"class.std::__1::vector.116", %"class.std::__1::vector.116", %"class.std::__1::unordered_map.123", %"class.std::__1::unordered_map.123", %"struct.sw::SpirvShader::WorkgroupMemory", i32, %"struct.sw::SpirvShader::Modes", %"struct.sw::SpirvShader::Capabilities", %"class.std::__1::unordered_map.174", %"class.std::__1::unordered_map.198", %"class.std::__1::unordered_map.222", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.276", %"class.std::__1::unordered_set", %"class.sw::SpirvID", i8, i8, i32, %"struct.sw::SpirvShader::Impl" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.52", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { float }
%"class.std::__1::unordered_map.55" = type { %"class.std::__1::__hash_table.56" }
%"class.std::__1::__hash_table.56" = type <{ %"class.std::__1::unique_ptr.57", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.76", [4 x i8] }>
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59", %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.60"** }
%"struct.std::__1::__hash_node_base.60" = type { %"struct.std::__1::__hash_node_base.60"* }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::__bucket_list_deallocator.62" }
%"class.std::__1::__bucket_list_deallocator.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::__hash_node_base.60" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.82" = type { %"class.std::__1::__hash_table.83" }
%"class.std::__1::__hash_table.83" = type <{ %"class.std::__1::unique_ptr.84", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86", %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base.87"** }
%"struct.std::__1::__hash_node_base.87" = type { %"struct.std::__1::__hash_node_base.87"* }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__bucket_list_deallocator.89" }
%"class.std::__1::__bucket_list_deallocator.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.87" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { i32*, i32*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i32* }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.sw::SpirvShader::InterfaceComponent"*, %"struct.sw::SpirvShader::InterfaceComponent"*, %"class.std::__1::__compressed_pair.118" }
%"struct.sw::SpirvShader::InterfaceComponent" = type { i8, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.sw::SpirvShader::InterfaceComponent"* }
%"class.std::__1::unordered_map.123" = type { %"class.std::__1::__hash_table.124" }
%"class.std::__1::__hash_table.124" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.144", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.128"** }
%"struct.std::__1::__hash_node_base.128" = type { %"struct.std::__1::__hash_node_base.128"* }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__bucket_list_deallocator.130" }
%"class.std::__1::__bucket_list_deallocator.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base.128" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.sw::SpirvShader::WorkgroupMemory" = type { i32, [4 x i8], %"class.std::__1::unordered_map.150" }
%"class.std::__1::unordered_map.150" = type { %"class.std::__1::__hash_table.151" }
%"class.std::__1::__hash_table.151" = type <{ %"class.std::__1::unique_ptr.152", %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.170", [4 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154", %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::__hash_node_base.155"** }
%"struct.std::__1::__hash_node_base.155" = type { %"struct.std::__1::__hash_node_base.155"* }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.std::__1::__bucket_list_deallocator.157" }
%"class.std::__1::__bucket_list_deallocator.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__hash_node_base.155" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.sw::SpirvShader::Modes" = type { i16, i32, i32, i32 }
%"struct.sw::SpirvShader::Capabilities" = type { i32 }
%"class.std::__1::unordered_map.174" = type { %"class.std::__1::__hash_table.175" }
%"class.std::__1::__hash_table.175" = type <{ %"class.std::__1::unique_ptr.176", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.194", [4 x i8] }>
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.179"** }
%"struct.std::__1::__hash_node_base.179" = type { %"struct.std::__1::__hash_node_base.179"* }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.std::__1::__bucket_list_deallocator.181" }
%"class.std::__1::__bucket_list_deallocator.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base.179" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.198" = type { %"class.std::__1::__hash_table.199" }
%"class.std::__1::__hash_table.199" = type <{ %"class.std::__1::unique_ptr.200", %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.215", %"class.std::__1::__compressed_pair.218", [4 x i8] }>
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202", %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base.203"** }
%"struct.std::__1::__hash_node_base.203" = type { %"struct.std::__1::__hash_node_base.203"* }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.std::__1::__bucket_list_deallocator.205" }
%"class.std::__1::__bucket_list_deallocator.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::__hash_node_base.203" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.222" = type { %"class.std::__1::__hash_table.223" }
%"class.std::__1::__hash_table.223" = type <{ %"class.std::__1::unique_ptr.224", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.243", [4 x i8] }>
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.227"** }
%"struct.std::__1::__hash_node_base.227" = type { %"struct.std::__1::__hash_node_base.227"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::__bucket_list_deallocator.229" }
%"class.std::__1::__bucket_list_deallocator.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.227" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.270", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.297", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.303" }
%"class.std::__1::__hash_table.303" = type <{ %"class.std::__1::unique_ptr.304", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.321", [4 x i8] }>
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306", %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.std::__1::__hash_node_base.307"** }
%"struct.std::__1::__hash_node_base.307" = type { %"struct.std::__1::__hash_node_base.307"* }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::__bucket_list_deallocator.309" }
%"class.std::__1::__bucket_list_deallocator.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.std::__1::__hash_node_base.307" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.sw::SpirvID" = type { i32 }
%"struct.sw::SpirvShader::Impl" = type { %"struct.sw::SpirvShader::Impl::Debugger"* }
%"struct.sw::SpirvShader::Impl::Debugger" = type opaque
%"class.sw::SpirvID.326" = type { i32 }
%"class.sw::SpirvID.327" = type { i32 }
%"class.sw::SpirvShader::Object" = type <{ %"class.sw::SpirvShader::InsnIterator", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.sw::SpirvShader::InsnIterator" = type { %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { i32* }
%"class.sw::SpirvShader::Type" = type { %"class.sw::SpirvShader::InsnIterator", i32, i32, i8, %"class.sw::SpirvID.327" }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_ = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_ = comdat any

@.str = private unnamed_addr constant [55 x i8] c"%s:%d WARNING: UNSUPPORTED: EvalSpecConstantOp op: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [63 x i8] c"../../third_party/swiftshader/src/Pipeline/SpirvShaderSpec.cpp\00", align 1
@.str.2 = private unnamed_addr constant [76 x i8] c"%s:%d WARNING: UNREACHABLE: Not possible until we have multiple bit widths\0A\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"%s:%d WARNING: UNREACHABLE: EvalSpecConstantUnaryOp op: %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [61 x i8] c"%s:%d WARNING: UNREACHABLE: EvalSpecConstantBinaryOp op: %s\0A\00", align 1

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11SpirvShader18EvalSpecConstantOpENS0_12InsnIteratorE(%"class.sw::SpirvShader"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sw::SpirvID.326", align 4
  %4 = alloca %"class.sw::SpirvID.327", align 4
  %5 = alloca %"class.sw::SpirvID.326", align 4
  %6 = alloca %"class.sw::SpirvID.326", align 4
  %7 = alloca %"class.sw::SpirvID.327", align 4
  %8 = alloca %"class.sw::SpirvID.327", align 4
  %9 = alloca %"class.sw::SpirvID.326", align 4
  %10 = alloca %"class.sw::SpirvID.327", align 4
  %11 = alloca %"class.sw::SpirvID.327", align 4
  %12 = alloca %"class.sw::SpirvID.326", align 4
  %13 = alloca %"class.sw::SpirvID.326", align 4
  %14 = alloca %"class.sw::SpirvID.326", align 4
  %15 = alloca %"class.sw::SpirvID.327", align 4
  %16 = alloca %"class.sw::SpirvID.326", align 4
  %17 = alloca %"class.sw::SpirvID.327", align 4
  %18 = alloca %"class.sw::SpirvID.327", align 4
  %19 = alloca %"class.sw::SpirvID.327", align 4
  %20 = getelementptr inbounds i32, i32* %1, i64 3
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %363 [
    i32 128, label %22
    i32 130, label %22
    i32 132, label %22
    i32 134, label %22
    i32 135, label %22
    i32 137, label %22
    i32 139, label %22
    i32 138, label %22
    i32 194, label %22
    i32 195, label %22
    i32 196, label %22
    i32 197, label %22
    i32 166, label %22
    i32 199, label %22
    i32 167, label %22
    i32 198, label %22
    i32 164, label %22
    i32 170, label %22
    i32 165, label %22
    i32 171, label %22
    i32 176, label %22
    i32 177, label %22
    i32 172, label %22
    i32 173, label %22
    i32 178, label %22
    i32 179, label %22
    i32 174, label %22
    i32 175, label %22
    i32 114, label %23
    i32 115, label %23
    i32 113, label %23
    i32 126, label %23
    i32 200, label %23
    i32 168, label %23
    i32 116, label %23
    i32 169, label %24
    i32 81, label %99
    i32 82, label %155
    i32 79, label %278
  ]

22:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  tail call void @_ZN2sw11SpirvShader24EvalSpecConstantBinaryOpENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #4
  br label %365

23:                                               ; preds = %2, %2, %2, %2, %2, %2, %2
  tail call void @_ZN2sw11SpirvShader23EvalSpecConstantUnaryOpENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #4
  br label %365

24:                                               ; preds = %2
  %25 = tail call dereferenceable(40) %"class.sw::SpirvShader::Object"* @_ZN2sw11SpirvShader14CreateConstantENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #5
  %26 = getelementptr inbounds i32, i32* %1, i64 4
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %"class.sw::SpirvID.326"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %16, i64 0, i32 0
  store i32 %27, i32* %29, align 4
  %30 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 14, i32 0
  %31 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %30, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %16) #5
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %31, i64 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  %33 = bitcast %"struct.std::__1::__hash_node_base.203"* %32 to i32**
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"class.sw::SpirvID.327"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #6
  %38 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %15, i64 0, i32 0
  store i32 %36, i32* %38, align 4
  %39 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 13, i32 0
  %40 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %39, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %15) #5
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %40, i64 3
  %42 = bitcast %"struct.std::__1::__hash_node_base.179"* %41 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  %43 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %42, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  %46 = getelementptr inbounds i32, i32* %1, i64 5
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %"class.sw::SpirvID.326"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48)
  %49 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %12, i64 0, i32 0
  store i32 %47, i32* %49, align 4
  %50 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %30, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %12) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48)
  %51 = getelementptr inbounds i32, i32* %1, i64 6
  %52 = load i32, i32* %51, align 4
  %53 = bitcast %"class.sw::SpirvID.326"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53)
  %54 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %9, i64 0, i32 0
  store i32 %52, i32* %54, align 4
  %55 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %30, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53)
  %56 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %25, i64 0, i32 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = bitcast %"class.sw::SpirvID.327"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #6
  %61 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %8, i64 0, i32 0
  store i32 %59, i32* %61, align 4
  %62 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %39, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %8) #5
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %62, i64 3
  %64 = bitcast %"struct.std::__1::__hash_node_base.179"* %63 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #6
  %65 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %64, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %365, label %68

68:                                               ; preds = %24
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %31, i64 4
  %70 = bitcast %"struct.std::__1::__hash_node_base.203"* %69 to i32**
  %71 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %25, i64 0, i32 1, i32 0, i32 0
  br label %72

72:                                               ; preds = %68, %72
  %73 = phi i64 [ 0, %68 ], [ %88, %72 ]
  %74 = and i64 %73, 4294967295
  %75 = select i1 %45, i64 0, i64 %74
  %76 = load i32*, i32** %70, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %75
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  %80 = select i1 %79, %"struct.std::__1::__hash_node_base.203"* %55, %"struct.std::__1::__hash_node_base.203"* %50
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %80, i64 4
  %82 = bitcast %"struct.std::__1::__hash_node_base.203"* %81 to i32**
  %83 = load i32*, i32** %82, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %73
  %85 = load i32, i32* %84, align 4
  %86 = load i32*, i32** %71, align 8
  %87 = getelementptr inbounds i32, i32* %86, i64 %73
  store i32 %85, i32* %87, align 4
  %88 = add nuw nsw i64 %73, 1
  %89 = load i32*, i32** %56, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 1
  %91 = load i32, i32* %90, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #6
  store i32 %91, i32* %61, align 4
  %92 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %39, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %8) #5
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %92, i64 3
  %94 = bitcast %"struct.std::__1::__hash_node_base.179"* %93 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #6
  %95 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %94, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = icmp ult i64 %88, %97
  br i1 %98, label %72, label %365

99:                                               ; preds = %2
  %100 = tail call dereferenceable(40) %"class.sw::SpirvShader::Object"* @_ZN2sw11SpirvShader14CreateConstantENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #5
  %101 = getelementptr inbounds i32, i32* %1, i64 4
  %102 = load i32, i32* %101, align 4
  %103 = bitcast %"class.sw::SpirvID.326"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103)
  %104 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %3, i64 0, i32 0
  store i32 %102, i32* %104, align 4
  %105 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 14, i32 0
  %106 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %105, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %3) #5
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %106, i64 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103)
  %108 = bitcast %"struct.std::__1::__hash_node_base.203"* %107 to i32**
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds i32, i32* %109, i64 1
  %111 = load i32, i32* %110, align 4
  %112 = load i32, i32* %1, align 4
  %113 = lshr i32 %112, 16
  %114 = add nsw i32 %113, -5
  %115 = getelementptr inbounds i32, i32* %1, i64 5
  %116 = call i32 @_ZNK2sw11SpirvShader22WalkLiteralAccessChainENS_7SpirvIDINS0_4TypeEEEjPKj(%"class.sw::SpirvShader"* %0, i32 %111, i32 %114, i32* %115) #5
  %117 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %100, i64 0, i32 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 1
  %120 = load i32, i32* %119, align 4
  %121 = bitcast %"class.sw::SpirvID.327"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #6
  %122 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %4, i64 0, i32 0
  store i32 %120, i32* %122, align 4
  %123 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 13, i32 0
  %124 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %123, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %4) #5
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %124, i64 3
  %126 = bitcast %"struct.std::__1::__hash_node_base.179"* %125 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #6
  %127 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %126, i64 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %365, label %130

130:                                              ; preds = %99
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %106, i64 4
  %132 = bitcast %"struct.std::__1::__hash_node_base.203"* %131 to i32**
  %133 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %100, i64 0, i32 1, i32 0, i32 0
  br label %134

134:                                              ; preds = %130, %134
  %135 = phi i64 [ 0, %130 ], [ %144, %134 ]
  %136 = trunc i64 %135 to i32
  %137 = add i32 %116, %136
  %138 = zext i32 %137 to i64
  %139 = load i32*, i32** %132, align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 %138
  %141 = load i32, i32* %140, align 4
  %142 = load i32*, i32** %133, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 %135
  store i32 %141, i32* %143, align 4
  %144 = add nuw nsw i64 %135, 1
  %145 = load i32*, i32** %117, align 8
  %146 = getelementptr inbounds i32, i32* %145, i64 1
  %147 = load i32, i32* %146, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #6
  store i32 %147, i32* %122, align 4
  %148 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %123, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %4) #5
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %148, i64 3
  %150 = bitcast %"struct.std::__1::__hash_node_base.179"* %149 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #6
  %151 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %150, i64 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = icmp ult i64 %144, %153
  br i1 %154, label %134, label %365

155:                                              ; preds = %2
  %156 = tail call dereferenceable(40) %"class.sw::SpirvShader::Object"* @_ZN2sw11SpirvShader14CreateConstantENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #5
  %157 = getelementptr inbounds i32, i32* %1, i64 4
  %158 = load i32, i32* %157, align 4
  %159 = bitcast %"class.sw::SpirvID.326"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %159)
  %160 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %5, i64 0, i32 0
  store i32 %158, i32* %160, align 4
  %161 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 14, i32 0
  %162 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %161, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %5) #5
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %162, i64 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %159)
  %164 = getelementptr inbounds i32, i32* %1, i64 5
  %165 = load i32, i32* %164, align 4
  %166 = bitcast %"class.sw::SpirvID.326"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166)
  %167 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %6, i64 0, i32 0
  store i32 %165, i32* %167, align 4
  %168 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %161, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166)
  %169 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %156, i64 0, i32 0, i32 0, i32 0
  %170 = load i32*, i32** %169, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 1
  %172 = load i32, i32* %171, align 4
  %173 = load i32, i32* %1, align 4
  %174 = lshr i32 %173, 16
  %175 = add nsw i32 %174, -6
  %176 = getelementptr inbounds i32, i32* %1, i64 6
  %177 = call i32 @_ZNK2sw11SpirvShader22WalkLiteralAccessChainENS_7SpirvIDINS0_4TypeEEEjPKj(%"class.sw::SpirvShader"* %0, i32 %172, i32 %175, i32* %176) #5
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %184, label %179

179:                                              ; preds = %155
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %168, i64 4
  %181 = bitcast %"struct.std::__1::__hash_node_base.203"* %180 to i32**
  %182 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %156, i64 0, i32 1, i32 0, i32 0
  %183 = zext i32 %177 to i64
  br label %202

184:                                              ; preds = %202, %155
  %185 = bitcast %"struct.std::__1::__hash_node_base.203"* %163 to i32**
  %186 = load i32*, i32** %185, align 8
  %187 = getelementptr inbounds i32, i32* %186, i64 1
  %188 = load i32, i32* %187, align 4
  %189 = bitcast %"class.sw::SpirvID.327"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #6
  %190 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %7, i64 0, i32 0
  store i32 %188, i32* %190, align 4
  %191 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 13, i32 0
  %192 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %191, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %7) #5
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %192, i64 3
  %194 = bitcast %"struct.std::__1::__hash_node_base.179"* %193 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #6
  %195 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %194, i64 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %211, label %198

198:                                              ; preds = %184
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %162, i64 4
  %200 = bitcast %"struct.std::__1::__hash_node_base.203"* %199 to i32**
  %201 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %156, i64 0, i32 1, i32 0, i32 0
  br label %239

202:                                              ; preds = %202, %179
  %203 = phi i64 [ 0, %179 ], [ %209, %202 ]
  %204 = load i32*, i32** %181, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 %203
  %206 = load i32, i32* %205, align 4
  %207 = load i32*, i32** %182, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 %203
  store i32 %206, i32* %208, align 4
  %209 = add nuw nsw i64 %203, 1
  %210 = icmp eq i64 %209, %183
  br i1 %210, label %184, label %202

211:                                              ; preds = %239, %184
  %212 = load i32*, i32** %185, align 8
  %213 = getelementptr inbounds i32, i32* %212, i64 1
  %214 = load i32, i32* %213, align 4
  %215 = bitcast %"class.sw::SpirvID.327"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %215) #6
  %216 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %10, i64 0, i32 0
  store i32 %214, i32* %216, align 4
  %217 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %191, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %10) #5
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %217, i64 3
  %219 = bitcast %"struct.std::__1::__hash_node_base.179"* %218 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %215) #6
  %220 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %219, i64 0, i32 2
  %221 = load i32, i32* %220, align 4
  %222 = add i32 %221, %177
  %223 = load i32*, i32** %169, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 1
  %225 = load i32, i32* %224, align 4
  %226 = bitcast %"class.sw::SpirvID.327"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %226) #6
  %227 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %11, i64 0, i32 0
  store i32 %225, i32* %227, align 4
  %228 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %191, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %11) #5
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %228, i64 3
  %230 = bitcast %"struct.std::__1::__hash_node_base.179"* %229 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %226) #6
  %231 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %230, i64 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = icmp ult i32 %222, %232
  br i1 %233, label %234, label %365

234:                                              ; preds = %211
  %235 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %168, i64 4
  %236 = bitcast %"struct.std::__1::__hash_node_base.203"* %235 to i32**
  %237 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %156, i64 0, i32 1, i32 0, i32 0
  %238 = zext i32 %222 to i64
  br label %260

239:                                              ; preds = %198, %239
  %240 = phi i64 [ 0, %198 ], [ %249, %239 ]
  %241 = load i32*, i32** %200, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 %240
  %243 = load i32, i32* %242, align 4
  %244 = trunc i64 %240 to i32
  %245 = add i32 %177, %244
  %246 = zext i32 %245 to i64
  %247 = load i32*, i32** %201, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 %246
  store i32 %243, i32* %248, align 4
  %249 = add nuw nsw i64 %240, 1
  %250 = load i32*, i32** %185, align 8
  %251 = getelementptr inbounds i32, i32* %250, i64 1
  %252 = load i32, i32* %251, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #6
  store i32 %252, i32* %190, align 4
  %253 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %191, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %7) #5
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %253, i64 3
  %255 = bitcast %"struct.std::__1::__hash_node_base.179"* %254 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #6
  %256 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %255, i64 0, i32 2
  %257 = load i32, i32* %256, align 4
  %258 = zext i32 %257 to i64
  %259 = icmp ult i64 %249, %258
  br i1 %259, label %239, label %211

260:                                              ; preds = %234, %260
  %261 = phi i64 [ %238, %234 ], [ %267, %260 ]
  %262 = load i32*, i32** %236, align 8
  %263 = getelementptr inbounds i32, i32* %262, i64 %261
  %264 = load i32, i32* %263, align 4
  %265 = load i32*, i32** %237, align 8
  %266 = getelementptr inbounds i32, i32* %265, i64 %261
  store i32 %264, i32* %266, align 4
  %267 = add nuw nsw i64 %261, 1
  %268 = load i32*, i32** %169, align 8
  %269 = getelementptr inbounds i32, i32* %268, i64 1
  %270 = load i32, i32* %269, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %226) #6
  store i32 %270, i32* %227, align 4
  %271 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %191, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %11) #5
  %272 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %271, i64 3
  %273 = bitcast %"struct.std::__1::__hash_node_base.179"* %272 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %226) #6
  %274 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %273, i64 0, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i64
  %277 = icmp ult i64 %267, %276
  br i1 %277, label %260, label %365

278:                                              ; preds = %2
  %279 = tail call dereferenceable(40) %"class.sw::SpirvShader::Object"* @_ZN2sw11SpirvShader14CreateConstantENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #5
  %280 = getelementptr inbounds i32, i32* %1, i64 4
  %281 = load i32, i32* %280, align 4
  %282 = bitcast %"class.sw::SpirvID.326"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %282)
  %283 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %13, i64 0, i32 0
  store i32 %281, i32* %283, align 4
  %284 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 14, i32 0
  %285 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %284, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %13) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %282)
  %286 = getelementptr inbounds i32, i32* %1, i64 5
  %287 = load i32, i32* %286, align 4
  %288 = bitcast %"class.sw::SpirvID.326"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %288)
  %289 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %14, i64 0, i32 0
  store i32 %287, i32* %289, align 4
  %290 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %284, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %14) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %288)
  %291 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %279, i64 0, i32 0, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = getelementptr inbounds i32, i32* %292, i64 1
  %294 = load i32, i32* %293, align 4
  %295 = bitcast %"class.sw::SpirvID.327"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295) #6
  %296 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %17, i64 0, i32 0
  store i32 %294, i32* %296, align 4
  %297 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 13, i32 0
  %298 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %297, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %17) #5
  %299 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %298, i64 3
  %300 = bitcast %"struct.std::__1::__hash_node_base.179"* %299 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295) #6
  %301 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %300, i64 0, i32 2
  %302 = load i32, i32* %301, align 4
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %365, label %304

304:                                              ; preds = %278
  %305 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %285, i64 3
  %306 = bitcast %"struct.std::__1::__hash_node_base.203"* %305 to i32**
  %307 = bitcast %"class.sw::SpirvID.327"* %18 to i8*
  %308 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %18, i64 0, i32 0
  %309 = bitcast %"class.sw::SpirvID.327"* %19 to i8*
  %310 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %19, i64 0, i32 0
  %311 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %279, i64 0, i32 1, i32 0, i32 0
  br label %312

312:                                              ; preds = %304, %348
  %313 = phi i64 [ 0, %304 ], [ %352, %348 ]
  %314 = add nuw i64 %313, 6
  %315 = and i64 %314, 4294967295
  %316 = getelementptr inbounds i32, i32* %1, i64 %315
  %317 = load i32, i32* %316, align 4
  %318 = icmp eq i32 %317, -1
  br i1 %318, label %348, label %319

319:                                              ; preds = %312
  %320 = load i32*, i32** %306, align 8
  %321 = getelementptr inbounds i32, i32* %320, i64 1
  %322 = load i32, i32* %321, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %307) #6
  store i32 %322, i32* %308, align 4
  %323 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %297, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %18) #5
  %324 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %323, i64 3
  %325 = bitcast %"struct.std::__1::__hash_node_base.179"* %324 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %307) #6
  %326 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %325, i64 0, i32 2
  %327 = load i32, i32* %326, align 4
  %328 = icmp ult i32 %317, %327
  br i1 %328, label %339, label %329

329:                                              ; preds = %319
  %330 = load i32*, i32** %306, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 1
  %332 = load i32, i32* %331, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %309) #6
  store i32 %332, i32* %310, align 4
  %333 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %297, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %19) #5
  %334 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %333, i64 3
  %335 = bitcast %"struct.std::__1::__hash_node_base.179"* %334 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %309) #6
  %336 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %335, i64 0, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 %317, %337
  br label %339

339:                                              ; preds = %319, %329
  %340 = phi i32 [ %338, %329 ], [ %317, %319 ]
  %341 = phi %"struct.std::__1::__hash_node_base.203"* [ %290, %329 ], [ %285, %319 ]
  %342 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %341, i64 4
  %343 = bitcast %"struct.std::__1::__hash_node_base.203"* %342 to i32**
  %344 = zext i32 %340 to i64
  %345 = load i32*, i32** %343, align 8
  %346 = getelementptr inbounds i32, i32* %345, i64 %344
  %347 = load i32, i32* %346, align 4
  br label %348

348:                                              ; preds = %339, %312
  %349 = phi i32 [ 0, %312 ], [ %347, %339 ]
  %350 = load i32*, i32** %311, align 8
  %351 = getelementptr inbounds i32, i32* %350, i64 %313
  store i32 %349, i32* %351, align 4
  %352 = add nuw nsw i64 %313, 1
  %353 = load i32*, i32** %291, align 8
  %354 = getelementptr inbounds i32, i32* %353, i64 1
  %355 = load i32, i32* %354, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295) #6
  store i32 %355, i32* %296, align 4
  %356 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %297, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %17) #5
  %357 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %356, i64 3
  %358 = bitcast %"struct.std::__1::__hash_node_base.179"* %357 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295) #6
  %359 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %358, i64 0, i32 2
  %360 = load i32, i32* %359, align 4
  %361 = zext i32 %360 to i64
  %362 = icmp ult i64 %352, %361
  br i1 %362, label %312, label %365

363:                                              ; preds = %2
  %364 = tail call i8* @_ZN2sw11SpirvShader10OpcodeNameEN3spv2OpE(i32 %21) #5
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 152, i8* %364) #5
  br label %365

365:                                              ; preds = %348, %260, %134, %72, %24, %99, %278, %211, %363, %23, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11SpirvShader24EvalSpecConstantBinaryOpENS0_12InsnIteratorE(%"class.sw::SpirvShader"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sw::SpirvID.326", align 4
  %4 = alloca %"class.sw::SpirvID.326", align 4
  %5 = alloca %"class.sw::SpirvID.327", align 4
  %6 = tail call dereferenceable(40) %"class.sw::SpirvShader::Object"* @_ZN2sw11SpirvShader14CreateConstantENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #5
  %7 = getelementptr inbounds i32, i32* %1, i64 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds i32, i32* %1, i64 4
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.sw::SpirvID.326"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %3, i64 0, i32 0
  store i32 %10, i32* %12, align 4
  %13 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 14, i32 0
  %14 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %13, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %3) #5
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %14, i64 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11)
  %16 = getelementptr inbounds i32, i32* %1, i64 5
  %17 = load i32, i32* %16, align 4
  %18 = bitcast %"class.sw::SpirvID.326"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %4, i64 0, i32 0
  store i32 %17, i32* %19, align 4
  %20 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %13, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  %21 = bitcast %"struct.std::__1::__hash_node_base.203"* %15 to i32**
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 1
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %"class.sw::SpirvID.327"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #6
  %26 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %5, i64 0, i32 0
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 13, i32 0
  %28 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %27, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %5) #5
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %28, i64 3
  %30 = bitcast %"struct.std::__1::__hash_node_base.179"* %29 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #6
  %31 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %30, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %6, i64 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %14, i64 4
  %37 = bitcast %"struct.std::__1::__hash_node_base.203"* %36 to i32**
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %20, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.203"* %38 to i32**
  %40 = zext i32 %32 to i64
  br label %42

41:                                               ; preds = %136, %2
  ret void

42:                                               ; preds = %136, %34
  %43 = phi i64 [ 0, %34 ], [ %137, %136 ]
  %44 = load i32*, i32** %35, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 %43
  %46 = load i32*, i32** %37, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %43
  %48 = load i32, i32* %47, align 4
  %49 = load i32*, i32** %39, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %43
  %51 = load i32, i32* %50, align 4
  switch i32 %8, label %134 [
    i32 128, label %52
    i32 130, label %54
    i32 132, label %56
    i32 134, label %58
    i32 137, label %64
    i32 135, label %70
    i32 138, label %76
    i32 139, label %82
    i32 194, label %92
    i32 195, label %94
    i32 196, label %96
    i32 197, label %98
    i32 166, label %98
    i32 199, label %100
    i32 167, label %100
    i32 198, label %102
    i32 164, label %104
    i32 170, label %104
    i32 165, label %107
    i32 171, label %107
    i32 176, label %110
    i32 177, label %113
    i32 172, label %116
    i32 173, label %119
    i32 178, label %122
    i32 179, label %125
    i32 174, label %128
    i32 175, label %131
  ]

52:                                               ; preds = %42
  %53 = add i32 %51, %48
  store i32 %53, i32* %45, align 4
  br label %136

54:                                               ; preds = %42
  %55 = sub i32 %48, %51
  store i32 %55, i32* %45, align 4
  br label %136

56:                                               ; preds = %42
  %57 = mul i32 %51, %48
  store i32 %57, i32* %45, align 4
  br label %136

58:                                               ; preds = %42
  %59 = icmp eq i32 %51, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = udiv i32 %48, %51
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi i32 [ %61, %60 ], [ 0, %58 ]
  store i32 %63, i32* %45, align 4
  br label %136

64:                                               ; preds = %42
  %65 = icmp eq i32 %51, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i32 %48, %51
  br label %68

68:                                               ; preds = %64, %66
  %69 = phi i32 [ %67, %66 ], [ 0, %64 ]
  store i32 %69, i32* %45, align 4
  br label %136

70:                                               ; preds = %42
  %71 = icmp eq i32 %51, 0
  %72 = select i1 %71, i32 -1, i32 %51
  %73 = icmp eq i32 %48, -2147483648
  %74 = select i1 %73, i32 -1, i32 %48
  %75 = sdiv i32 %74, %72
  store i32 %75, i32* %45, align 4
  br label %136

76:                                               ; preds = %42
  %77 = icmp eq i32 %51, 0
  %78 = select i1 %77, i32 -1, i32 %51
  %79 = icmp eq i32 %48, -2147483648
  %80 = select i1 %79, i32 -1, i32 %48
  %81 = srem i32 %80, %78
  store i32 %81, i32* %45, align 4
  br label %136

82:                                               ; preds = %42
  %83 = icmp eq i32 %51, 0
  %84 = select i1 %83, i32 -1, i32 %51
  %85 = icmp eq i32 %48, -2147483648
  %86 = select i1 %85, i32 -1, i32 %48
  %87 = srem i32 %86, %84
  store i32 %87, i32* %45, align 4
  %88 = xor i32 %87, %84
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %90, label %136

90:                                               ; preds = %82
  %91 = add i32 %87, %84
  store i32 %91, i32* %45, align 4
  br label %136

92:                                               ; preds = %42
  %93 = lshr i32 %48, %51
  store i32 %93, i32* %45, align 4
  br label %136

94:                                               ; preds = %42
  %95 = ashr i32 %48, %51
  store i32 %95, i32* %45, align 4
  br label %136

96:                                               ; preds = %42
  %97 = shl i32 %48, %51
  store i32 %97, i32* %45, align 4
  br label %136

98:                                               ; preds = %42, %42
  %99 = or i32 %51, %48
  store i32 %99, i32* %45, align 4
  br label %136

100:                                              ; preds = %42, %42
  %101 = and i32 %51, %48
  store i32 %101, i32* %45, align 4
  br label %136

102:                                              ; preds = %42
  %103 = xor i32 %51, %48
  store i32 %103, i32* %45, align 4
  br label %136

104:                                              ; preds = %42, %42
  %105 = icmp eq i32 %48, %51
  %106 = sext i1 %105 to i32
  store i32 %106, i32* %45, align 4
  br label %136

107:                                              ; preds = %42, %42
  %108 = icmp ne i32 %48, %51
  %109 = sext i1 %108 to i32
  store i32 %109, i32* %45, align 4
  br label %136

110:                                              ; preds = %42
  %111 = icmp ult i32 %48, %51
  %112 = sext i1 %111 to i32
  store i32 %112, i32* %45, align 4
  br label %136

113:                                              ; preds = %42
  %114 = icmp slt i32 %48, %51
  %115 = sext i1 %114 to i32
  store i32 %115, i32* %45, align 4
  br label %136

116:                                              ; preds = %42
  %117 = icmp ugt i32 %48, %51
  %118 = sext i1 %117 to i32
  store i32 %118, i32* %45, align 4
  br label %136

119:                                              ; preds = %42
  %120 = icmp sgt i32 %48, %51
  %121 = sext i1 %120 to i32
  store i32 %121, i32* %45, align 4
  br label %136

122:                                              ; preds = %42
  %123 = icmp ule i32 %48, %51
  %124 = sext i1 %123 to i32
  store i32 %124, i32* %45, align 4
  br label %136

125:                                              ; preds = %42
  %126 = icmp sle i32 %48, %51
  %127 = sext i1 %126 to i32
  store i32 %127, i32* %45, align 4
  br label %136

128:                                              ; preds = %42
  %129 = icmp uge i32 %48, %51
  %130 = sext i1 %129 to i32
  store i32 %130, i32* %45, align 4
  br label %136

131:                                              ; preds = %42
  %132 = icmp sge i32 %48, %51
  %133 = sext i1 %132 to i32
  store i32 %133, i32* %45, align 4
  br label %136

134:                                              ; preds = %42
  %135 = call i8* @_ZN2sw11SpirvShader10OpcodeNameEN3spv2OpE(i32 %8) #5
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 309, i8* %135) #5
  br label %136

136:                                              ; preds = %82, %90, %134, %131, %128, %125, %122, %119, %116, %113, %110, %107, %104, %102, %100, %98, %96, %94, %92, %76, %70, %68, %62, %56, %54, %52
  %137 = add nuw nsw i64 %43, 1
  %138 = icmp eq i64 %137, %40
  br i1 %138, label %41, label %42
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw11SpirvShader23EvalSpecConstantUnaryOpENS0_12InsnIteratorE(%"class.sw::SpirvShader"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sw::SpirvID.326", align 4
  %4 = alloca %"class.sw::SpirvID.327", align 4
  %5 = tail call dereferenceable(40) %"class.sw::SpirvShader::Object"* @_ZN2sw11SpirvShader14CreateConstantENS0_12InsnIteratorE(%"class.sw::SpirvShader"* %0, i32* %1) #5
  %6 = getelementptr inbounds i32, i32* %1, i64 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds i32, i32* %1, i64 4
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.sw::SpirvID.326"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %3, i64 0, i32 0
  store i32 %9, i32* %11, align 4
  %12 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 14, i32 0
  %13 = call %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"* %12, %"class.sw::SpirvID.326"* nonnull dereferenceable(4) %3) #5
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %13, i64 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  %15 = bitcast %"struct.std::__1::__hash_node_base.203"* %14 to i32**
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.sw::SpirvID.327"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %4, i64 0, i32 0
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds %"class.sw::SpirvShader", %"class.sw::SpirvShader"* %0, i64 0, i32 13, i32 0
  %22 = call %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"* %21, %"class.sw::SpirvID.327"* nonnull dereferenceable(4) %4) #5
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %22, i64 3
  %24 = bitcast %"struct.std::__1::__hash_node_base.179"* %23 to %"class.sw::SpirvShader::Type"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #6
  %25 = getelementptr inbounds %"class.sw::SpirvShader::Type", %"class.sw::SpirvShader::Type"* %24, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.sw::SpirvShader::Object", %"class.sw::SpirvShader::Object"* %5, i64 0, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %13, i64 4
  %31 = bitcast %"struct.std::__1::__hash_node_base.203"* %30 to i32**
  %32 = zext i32 %26 to i64
  br label %34

33:                                               ; preds = %67, %2
  ret void

34:                                               ; preds = %67, %28
  %35 = phi i64 [ 0, %28 ], [ %68, %67 ]
  %36 = load i32*, i32** %29, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 %35
  %38 = load i32*, i32** %31, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 %35
  %40 = load i32, i32* %39, align 4
  switch i32 %7, label %65 [
    i32 114, label %41
    i32 115, label %41
    i32 113, label %41
    i32 126, label %42
    i32 200, label %44
    i32 168, label %44
    i32 116, label %46
  ]

41:                                               ; preds = %34, %34, %34
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 174) #5
  br label %67

42:                                               ; preds = %34
  %43 = sub nsw i32 0, %40
  store i32 %43, i32* %37, align 4
  br label %67

44:                                               ; preds = %34, %34
  %45 = xor i32 %40, -1
  store i32 %45, i32* %37, align 4
  br label %67

46:                                               ; preds = %34
  %47 = and i32 %40, 2147483647
  %48 = bitcast i32 %47 to float
  %49 = and i32 %40, -2147483648
  %50 = fcmp uge float %48, 0x3F0FFFFAA0000000
  %51 = fcmp ogt float %48, 6.550400e+04
  %52 = fcmp uno float %48, 0.000000e+00
  %53 = or i1 %51, %52
  %54 = sext i1 %53 to i32
  %55 = and i32 %40, -8192
  %56 = select i1 %50, i32 -1, i32 -2147483648
  %57 = and i32 %55, %56
  %58 = and i32 %54, 2139095040
  %59 = xor i32 %54, -1
  %60 = and i32 %57, %59
  %61 = select i1 %52, i32 4194304, i32 0
  %62 = or i32 %61, %49
  %63 = or i32 %62, %58
  %64 = or i32 %63, %60
  store i32 %64, i32* %37, align 4
  br label %67

65:                                               ; preds = %34
  %66 = call i8* @_ZN2sw11SpirvShader10OpcodeNameEN3spv2OpE(i32 %7) #5
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i32 201, i8* %66) #5
  br label %67

67:                                               ; preds = %65, %46, %44, %42, %41
  %68 = add nuw nsw i64 %35, 1
  %69 = icmp eq i64 %68, %32
  br i1 %69, label %33, label %34
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.sw::SpirvShader::Object"* @_ZN2sw11SpirvShader14CreateConstantENS0_12InsnIteratorE(%"class.sw::SpirvShader"*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: optsize
declare i32 @_ZNK2sw11SpirvShader22WalkLiteralAccessChainENS_7SpirvIDINS0_4TypeEEEjPKj(%"class.sw::SpirvShader"*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: optsize
declare i8* @_ZN2sw11SpirvShader10OpcodeNameEN3spv2OpE(i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.203"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader6ObjectEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.199"*, %"class.sw::SpirvID.326"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sw::SpirvID.326", %"class.sw::SpirvID.326"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.199", %"class.std::__1::__hash_table.199"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #6, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.199", %"class.std::__1::__hash_table.199"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.203"**, %"struct.std::__1::__hash_node_base.203"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203"*, %"struct.std::__1::__hash_node_base.203"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.203"*, %"struct.std::__1::__hash_node_base.203"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.203"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.203"*, %"struct.std::__1::__hash_node_base.203"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.203"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %30, %53
  %33 = phi %"struct.std::__1::__hash_node_base.203"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.203"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %57

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.203"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %45, %48
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.203", %"struct.std::__1::__hash_node_base.203"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.203"*, %"struct.std::__1::__hash_node_base.203"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.203"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %48, %53, %45, %26, %2, %19
  %58 = phi %"struct.std::__1::__hash_node_base.203"* [ null, %19 ], [ null, %2 ], [ null, %26 ], [ %33, %48 ], [ null, %53 ], [ null, %45 ]
  ret %"struct.std::__1::__hash_node_base.203"* %58
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.179"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIN2sw7SpirvIDINS2_11SpirvShader4TypeEEES5_EENS_22__unordered_map_hasherIS6_S7_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S7_SC_SA_Lb1EEENS_9allocatorIS7_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_(%"class.std::__1::__hash_table.175"*, %"class.sw::SpirvID.327"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sw::SpirvID.327", %"class.sw::SpirvID.327"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.175", %"class.std::__1::__hash_table.175"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #6, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.175", %"class.std::__1::__hash_table.175"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.179"**, %"struct.std::__1::__hash_node_base.179"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179"*, %"struct.std::__1::__hash_node_base.179"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.179"*, %"struct.std::__1::__hash_node_base.179"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.179"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.179"*, %"struct.std::__1::__hash_node_base.179"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.179"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %30, %53
  %33 = phi %"struct.std::__1::__hash_node_base.179"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.179"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %57

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.179"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %45, %48
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.179", %"struct.std::__1::__hash_node_base.179"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.179"*, %"struct.std::__1::__hash_node_base.179"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.179"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %48, %53, %45, %26, %2, %19
  %58 = phi %"struct.std::__1::__hash_node_base.179"* [ null, %19 ], [ null, %2 ], [ null, %26 ], [ %33, %48 ], [ null, %53 ], [ null, %45 ]
  ret %"struct.std::__1::__hash_node_base.179"* %58
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #3

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { optsize }
attributes #5 = { nounwind optsize }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
