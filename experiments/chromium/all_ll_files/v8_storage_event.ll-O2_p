; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_storage_event.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_storage_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::MemorySpan" = type { %"class.v8::CFunction"*, i64 }
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.182" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.189" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.184" }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i32 }
%"class.blink::TraceWrapperV8Reference.189" = type { %"class.v8::TracedReference.190" }
%"class.v8::TracedReference.190" = type { %"class.v8::BasicTracedReference.191" }
%"class.v8::BasicTracedReference.191" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.192", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.192" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.193" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.669", %"class.WTF::HashMap.669", %"class.WTF::HashMap.674", %"class.std::__1::unique_ptr.679", %"class.std::__1::unique_ptr.726", %"class.blink::Persistent.737", i8, i8, i8, %"class.WTF::Vector.739", %"class.std::__1::unique_ptr.744", %"class.blink::Persistent.750", %"class.blink::Persistent.754", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.651", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.663", i32, i32 }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.669" = type { %"class.WTF::HashTable.670" }
%"class.WTF::HashTable.670" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.WTF::HashMap.674" = type { %"class.WTF::HashTable.675" }
%"class.WTF::HashTable.675" = type <{ %"struct.WTF::KeyValuePair.678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.678" = type opaque
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.687", %class.scoped_refptr.183 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.682", i8* }
%"class.WTF::HashMap.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"struct.WTF::KeyValuePair.686"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.686" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.687" = type { %"class.v8::PersistentValueMapBase.688" }
%"class.v8::PersistentValueMapBase.688" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.689", i8* }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.694", %"class.WTF::String", %"class.std::__1::unique_ptr.696" }
%"class.WTF::RefCounted.694" = type { %"class.base::RefCounted.695" }
%"class.base::RefCounted.695" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.710", %"class.WTF::Vector.716", i8, i32 }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.WTF::Vector.702"* }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.704", [32 x i8] }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.729" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.729" = type { %"class.WTF::HashTable.730" }
%"class.WTF::HashTable.730" = type <{ %"struct.WTF::KeyValuePair.733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.733" = type opaque
%"class.blink::Persistent.737" = type { %"class.blink::PersistentBase.738" }
%"class.blink::PersistentBase.738" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.771", %class.scoped_refptr.774, %"class.blink::Member.775", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.771" = type { %"class.v8::Persistent.772" }
%"class.v8::Persistent.772" = type { %"class.v8::PersistentBase.773" }
%"class.v8::PersistentBase.773" = type { %"class.v8::Context"* }
%class.scoped_refptr.774 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.737" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.740" }
%"class.WTF::VectorBuffer.740" = type { %"class.WTF::VectorBufferBase.741" }
%"class.WTF::VectorBufferBase.741" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.261 }
%class.scoped_refptr.261 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.262", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.262" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.230" }
%"struct.std::__1::atomic.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__atomic_base.232" }
%"struct.std::__1::__atomic_base.232" = type { %"struct.std::__1::__cxx_atomic_impl.233" }
%"struct.std::__1::__cxx_atomic_impl.233" = type { %"struct.std::__1::__cxx_atomic_base_impl.234" }
%"struct.std::__1::__cxx_atomic_base_impl.234" = type { i32 }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.750" = type { %"class.blink::PersistentBase.751" }
%"class.blink::PersistentBase.751" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.754" = type { %"class.blink::PersistentBase.755" }
%"class.blink::PersistentBase.755" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.758", i64 }
%"class.blink::HeapVector.758" = type { %"class.WTF::Vector.761" }
%"class.WTF::Vector.761" = type { %"class.WTF::VectorBuffer.762" }
%"class.WTF::VectorBuffer.762" = type { %"class.WTF::VectorBufferBase.763" }
%"class.WTF::VectorBufferBase.763" = type { %"struct.std::__1::pair.764"*, i32, i32 }
%"struct.std::__1::pair.764" = type { %"class.blink::UntracedMember", %"class.blink::Member.766" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::StorageEventInit" = type { %"class.blink::EventInit.base", i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member", %"class.WTF::String" }
%"class.blink::EventInit.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8 }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::StorageArea"* }
%"class.blink::StorageArea" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::CachedStorageArea::Source", %class.scoped_refptr.202, i32, i8, i8, i8, i8 }>
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.200" }
%"class.blink::WeakMember.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.571", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.610", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.619", %"class.blink::Member.621", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.630", %"class.blink::Member.636", %"class.blink::Member.638", i8, [7 x i8] }>
%"class.blink::Supplementable.571" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.572" }
%"class.blink::HeapHashMap.572" = type { %"class.WTF::HashMap.575" }
%"class.WTF::HashMap.575" = type { %"class.WTF::HashTable.576" }
%"class.WTF::HashTable.576" = type <{ %"struct.WTF::KeyValuePair.578"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.578" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.579" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.222" }
%"class.blink::HeapHashSet.222" = type { %"class.WTF::HashSet.225" }
%"class.WTF::HashSet.225" = type { %"class.WTF::HashTable.226" }
%"class.WTF::HashTable.226" = type <{ %"class.blink::WeakMember.228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.228" = type opaque
%"class.blink::Supplementable.579" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.580" }
%"class.blink::HeapHashMap.580" = type { %"class.WTF::HashMap.583" }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.586" = type { i8*, %"class.blink::Member.587" }
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::Supplement.589"* }
%"class.blink::Supplement.589" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.590" }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.592, %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.599", %"class.std::__1::unique_ptr.599", %"class.blink::Member.605", i32, [4 x i8], %"class.WTF::HashSet.606", i32, i32 }
%class.scoped_refptr.592 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.564", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.566", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.205 }
%"class.WTF::RefCounted.564" = type { %"class.base::RefCounted.565" }
%"class.base::RefCounted.565" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.566" = type { %"class.absl::optional_internal::optional_data.567" }
%"class.absl::optional_internal::optional_data.567" = type { %"class.absl::optional_internal::optional_data_base.568" }
%"class.absl::optional_internal::optional_data_base.568" = type { %"class.absl::optional_internal::optional_data_dtor_base.569" }
%"class.absl::optional_internal::optional_data_dtor_base.569" = type { i8, %union.anon.570 }
%union.anon.570 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.205 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.201" }
%"class.WTF::HashSet.606" = type { %"class.WTF::HashTable.607" }
%"class.WTF::HashTable.607" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.614" }
%"class.WTF::Vector.614" = type { %"class.WTF::VectorBuffer.615" }
%"class.WTF::VectorBuffer.615" = type { %"class.WTF::VectorBufferBase.616" }
%"class.WTF::VectorBufferBase.616" = type { %"class.blink::Member.617"*, i32, i32 }
%"class.blink::Member.617" = type opaque
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.623", i32, i32 }
%"class.blink::HeapHashMap.623" = type { %"class.WTF::HashMap.626" }
%"class.WTF::HashMap.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"struct.WTF::KeyValuePair.629"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.629" = type opaque
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::CachedStorageArea::Source" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.202 = type { %"class.blink::CachedStorageArea"* }
%"class.blink::CachedStorageArea" = type { %"class.blink::mojom::blink::StorageAreaObserver", %"class.WTF::RefCounted.203", %"class.base::trace_event::MemoryDumpProvider", i32, %class.scoped_refptr.205, %"class.blink::WeakPersistent", i8, %class.scoped_refptr.413, %"class.std::__1::unique_ptr.414", %"class.WTF::HashMap.425", %"class.WTF::HashMap.430", i8, %"class.mojo::Remote.435", %"class.mojo::Receiver", %"class.blink::Persistent.444" }
%"class.blink::mojom::blink::StorageAreaObserver" = type { i32 (...)** }
%"class.WTF::RefCounted.203" = type { %"class.base::RefCounted.204" }
%"class.base::RefCounted.204" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.206" }
%"class.blink::PersistentBase.206" = type { %"class.blink::StorageNamespace"*, %"class.blink::PersistentNodePtr.412" }
%"class.blink::StorageNamespace" = type { %"class.blink::Supplement", %"class.blink::HeapHashSet", %"class.blink::StorageController"*, %"class.WTF::String", %"class.blink::HeapMojoRemote", %"class.WTF::HashMap.407" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.209" }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.465", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.467", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.483", %"class.blink::HeapObserverSet.485", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.503", %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.544", %"class.blink::Member.209", %"class.blink::Member.209", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.552", %"class.std::__1::unique_ptr.558", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.450" }
%"class.blink::HeapHashMap.450" = type { %"class.WTF::HashMap.453" }
%"class.WTF::HashMap.453" = type { %"class.WTF::HashTable.454" }
%"class.WTF::HashTable.454" = type <{ %"struct.WTF::KeyValuePair.456"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.456" = type { i8*, %"class.blink::Member.457" }
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::Supplement"* }
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.459" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.209", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.485" = type { i32, [4 x i8], %"class.blink::HeapHashSet.486" }
%"class.blink::HeapHashSet.486" = type { %"class.WTF::HashSet.489" }
%"class.WTF::HashSet.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"class.blink::WeakMember.492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.492" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.515" }
%"class.WTF::Deque.515" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.518" }
%"class.WTF::VectorBuffer.518" = type { %"class.WTF::VectorBufferBase.519" }
%"class.WTF::VectorBufferBase.519" = type { %"class.std::__1::unique_ptr.520"*, i32, i32 }
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.526", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.526" = type { %"class.std::__1::__bitset.527" }
%"class.std::__1::__bitset.527" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.528" }
%"class.absl::optional.528" = type { %"class.absl::optional_internal::optional_data.529" }
%"class.absl::optional_internal::optional_data.529" = type { %"class.absl::optional_internal::optional_data_base.530" }
%"class.absl::optional_internal::optional_data_base.530" = type { %"class.absl::optional_internal::optional_data_dtor_base.531" }
%"class.absl::optional_internal::optional_data_dtor_base.531" = type { i8, %union.anon.532 }
%union.anon.532 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.533", i64, %"class.absl::optional.356", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.533" = type { %"class.absl::optional_internal::optional_data.534" }
%"class.absl::optional_internal::optional_data.534" = type { %"class.absl::optional_internal::optional_data_base.535" }
%"class.absl::optional_internal::optional_data_base.535" = type { %"class.absl::optional_internal::optional_data_dtor_base.536" }
%"class.absl::optional_internal::optional_data_dtor_base.536" = type { i8, %union.anon.537 }
%union.anon.537 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.356" = type { %"class.absl::optional_internal::optional_data.357" }
%"class.absl::optional_internal::optional_data.357" = type { %"class.absl::optional_internal::optional_data_base.358" }
%"class.absl::optional_internal::optional_data_base.358" = type { %"class.absl::optional_internal::optional_data_dtor_base.359" }
%"class.absl::optional_internal::optional_data_dtor_base.359" = type { i8, %union.anon.360 }
%union.anon.360 = type { %"class.base::TimeDelta" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.538" }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.544" = type { %"class.WTF::HashSet.547" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.blink::WeakMember.550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.551" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.551" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.255", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.255" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.256" }
%"struct.std::__1::atomic.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__cxx_atomic_impl.259" }
%"struct.std::__1::__cxx_atomic_impl.259" = type { %"struct.std::__1::__cxx_atomic_base_impl.260" }
%"struct.std::__1::__cxx_atomic_base_impl.260" = type { i8 }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.183 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"class.blink::WeakMember.215"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.215" = type opaque
%"class.blink::StorageController" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.216" }
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::SessionStorageNamespace, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::SessionStorageNamespace, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.220" }
%"class.blink::WeakMember.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.401" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.229, %"class.std::__1::unique_ptr.351", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.235, i32 }>
%class.scoped_refptr.229 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.235, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.313", %"class.absl::optional.318", %"class.absl::optional.274", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.342", i8, [7 x i8], %class.scoped_refptr.235, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.235, %"class.std::__1::unique_ptr.263", %"class.absl::optional", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i32, i32, %"class.absl::optional.274", %"class.std::__1::unique_ptr.279", i8, i64, %class.scoped_refptr.309, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.312" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.235, i8, %"class.mojo::ScopedHandleBase.266", %class.scoped_refptr.267, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.268" }
%"class.mojo::ScopedHandleBase.266" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.267 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.268" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.272 }
%union.anon.272 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.273", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.273" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.282", i8, i64, %class.scoped_refptr.283, %class.scoped_refptr.305 }
%"class.base::RepeatingCallback.282" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.283 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.284", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.294", i8, [7 x i8] }>
%"class.base::RefCounted.284" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.294" = type { %"class.std::__1::__tree.295" }
%"class.std::__1::__tree.295" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.305 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.309 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.310 }
%class.scoped_refptr.310 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.447", [4 x i8], %"class.base::RepeatingCallback.354", %class.scoped_refptr.235, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.184", [4 x i8] }>
%"class.base::RefCountedThreadSafe.447" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.354" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.312" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, [7 x i8], %union.anon.322 }
%union.anon.322 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.274" = type { %"class.absl::optional_internal::optional_data.275" }
%"class.absl::optional_internal::optional_data.275" = type { %"class.absl::optional_internal::optional_data_base.276" }
%"class.absl::optional_internal::optional_data_base.276" = type { %"class.absl::optional_internal::optional_data_dtor_base.277" }
%"class.absl::optional_internal::optional_data_dtor_base.277" = type { i8, %union.anon.278 }
%union.anon.278 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.327 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.327 = type { %"class.std::__1::map.330" }
%"class.std::__1::map.330" = type { %"class.std::__1::__tree.331" }
%"class.std::__1::__tree.331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.341"*, i64 }
%"class.std::__1::unique_ptr.341" = type opaque
%"class.std::__1::map.342" = type { %"class.std::__1::__tree.343" }
%"class.std::__1::__tree.343" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.354", %"class.base::OnceCallback.355", %"class.absl::optional.356", %"class.absl::optional.361", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.368", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.376", %"class.std::__1::map.387", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.396", i8, %class.scoped_refptr.235, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.397" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.355" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.235, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.366" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.366" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.367 }
%class.scoped_refptr.367 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.371", %class.scoped_refptr.372 }
%"class.base::RepeatingCallback.371" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.372 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.376" = type { %"class.std::__1::__tree.377" }
%"class.std::__1::__tree.377" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.387" = type { %"class.std::__1::__tree.388" }
%"class.std::__1::__tree.388" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::OnceCallback.396" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.397" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.235 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.236" }>
%"class.base::RefCountedThreadSafe.236" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.blink::mojom::blink::SessionStorageNamespaceProxy"* }
%"class.blink::mojom::blink::SessionStorageNamespaceProxy" = type { %"class.blink::mojom::blink::SessionStorageNamespace", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::SessionStorageNamespace" = type { i32 (...)** }
%"class.WTF::HashMap.407" = type { %"class.WTF::HashTable.408" }
%"class.WTF::HashTable.408" = type <{ %"struct.WTF::KeyValuePair.411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.411" = type opaque
%"class.blink::PersistentNodePtr.412" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.413 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::StorageAreaMap"* }
%"class.blink::StorageAreaMap" = type { %"class.WTF::HashMap.417", %"struct.WTF::HashTableConstIteratorAdapter", i32, i64, i64, i64 }
%"class.WTF::HashMap.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"struct.WTF::KeyValuePair.421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.421" = type opaque
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair.421"*, %"struct.WTF::KeyValuePair.421"* }
%"class.WTF::HashMap.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"struct.WTF::KeyValuePair.429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.429" = type opaque
%"class.WTF::HashMap.430" = type { %"class.WTF::HashTable.431" }
%"class.WTF::HashTable.431" = type <{ %"struct.WTF::KeyValuePair.434"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.434" = type opaque
%"class.mojo::Remote.435" = type { %"class.mojo::internal::InterfacePtrState.436" }
%"class.mojo::internal::InterfacePtrState.436" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.437" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::mojom::blink::StorageAreaProxy"* }
%"class.blink::mojom::blink::StorageAreaProxy" = type { %"class.blink::mojom::blink::StorageArea", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::StorageArea" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::StorageAreaObserverStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.229, %"class.std::__1::unique_ptr.351", %"class.base::WeakPtrFactory.443" }
%"class.base::WeakPtrFactory.443" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::StorageAreaObserverStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::StorageAreaObserver"* }
%"class.blink::Persistent.444" = type { %"class.blink::PersistentBase.445" }
%"class.blink::PersistentBase.445" = type { %"class.blink::HeapHashMap.446"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.446" = type opaque
%"class.blink::StorageEvent" = type { %"class.blink::Event", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.645", %"class.blink::Member.645", %"class.blink::Member.647", %"class.blink::Member.649", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.640" }
%"class.absl::optional.640" = type { %"class.absl::optional_internal::optional_data.641" }
%"class.absl::optional_internal::optional_data.641" = type { %"class.absl::optional_internal::optional_data_base.642" }
%"class.absl::optional_internal::optional_data_base.642" = type { %"class.absl::optional_internal::optional_data_dtor_base.643" }
%"class.absl::optional_internal::optional_data_dtor_base.643" = type { i8, %union.anon.644 }
%union.anon.644 = type { i64 }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::EventTarget"* }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::Event"* }
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Boolean" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [13 x i8] c"StorageEvent\00", align 1
@_ZN5blink7V8Event18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink14V8StorageEvent18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink14V8StorageEvent24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink7V8Event18wrapper_type_info_E, i8 8 }, align 8
@_ZN5blink12StorageEvent18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink14V8StorageEvent18wrapper_type_info_E, align 8
@.ref.tmp = private constant %"class.v8::MemorySpan" zeroinitializer, align 8
@_ZZN5blink14V8StorageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_storage_event23KeyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_storage_event28OldValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_storage_event28NewValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_storage_event23UrlAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_storage_event31StorageAreaAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_storage_event29IsTrustedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 100, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"oldValue\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"newValue\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"storageArea\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"isTrusted\00", align 1
@_ZZN5blink14V8StorageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_116v8_storage_event33InitStorageEventOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }], align 16
@.str.7 = private unnamed_addr constant [17 x i8] c"initStorageEvent\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.11 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink11StorageArea18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14V8StorageEvent24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.182", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %9 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink7V8Event18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #6
  %10 = bitcast %"class.v8::Template"* %9 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink14V8StorageEvent18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* %10) #6
  tail call void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"* %6, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_116v8_storage_event19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* null, i32 0, %"class.v8::MemorySpan"* nonnull dereferenceable(16) @.ref.tmp) #6
  tail call void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"* %6, i32 1) #6
  %11 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %12 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %13 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast %"class.base::span.182"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #6
  %16 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 6, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink14V8StorageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %18 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 0, i32 0
  store i64 1, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink14V8StorageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %19, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, %"class.v8::MemorySpan"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 5, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %19 = bitcast i8** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #6
  %23 = getelementptr inbounds i64, i64* %8, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %64

27:                                               ; preds = %1
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %64

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, -2
  %43 = icmp eq i32 %42, 10
  br i1 %43, label %44, label %64

44:                                               ; preds = %38
  %45 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  %46 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() #6
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %47, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #6
  br label %63

63:                                               ; preds = %44, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  br label %257

64:                                               ; preds = %38, %27, %1
  %65 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 -1
  %68 = bitcast i64* %67 to %"class.v8::Object"*
  %69 = ptrtoint %"class.v8::Isolate"* %11 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to %"class.blink::V8PerIsolateData"**
  %72 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %72, i64 0, i32 8
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %64
  %77 = getelementptr inbounds i64, i64* %8, i64 3
  %78 = icmp eq i64* %67, null
  %79 = getelementptr inbounds i64, i64* %8, i64 2
  %80 = select i1 %78, i64* %79, i64* %67, !prof !3
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %77, align 8
  br label %257

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 1
  br i1 %85, label %86, label %106, !prof !3

86:                                               ; preds = %82
  %87 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #6
  %88 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %84) #6
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %89, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #6
  br label %105

105:                                              ; preds = %86, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #6
  br label %257

106:                                              ; preds = %82
  %107 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %107) #6
  %108 = bitcast i64* %66 to %"class.v8::Value"*
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %11, %"class.v8::Value"* %108, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %109 = load i32, i32* %20, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %234

111:                                              ; preds = %106
  %112 = load i32, i32* %83, align 8
  %113 = icmp sgt i32 %112, 1
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = load i64*, i64** %7, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 160
  %119 = inttoptr i64 %118 to %"class.v8::Value"*
  br label %124

120:                                              ; preds = %111
  %121 = load i64*, i64** %65, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 1
  %123 = bitcast i64* %122 to %"class.v8::Value"*
  br label %124

124:                                              ; preds = %114, %120
  %125 = phi %"class.v8::Value"* [ %119, %114 ], [ %123, %120 ]
  %126 = bitcast %"class.v8::Value"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %130, label %154

130:                                              ; preds = %124
  %131 = add i64 %127, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = and i64 %127, -4294967296
  %135 = zext i32 %133 to i64
  %136 = or i64 %134, %135
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i16*
  %139 = load i16, i16* %138, align 2
  %140 = icmp eq i16 %139, 67
  br i1 %140, label %141, label %154

141:                                              ; preds = %130
  %142 = add i64 %127, 23
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, -2
  %146 = icmp eq i32 %145, 10
  br i1 %146, label %147, label %154

147:                                              ; preds = %141
  %148 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 56) #6
  %149 = bitcast i8* %148 to %"class.blink::StorageEventInit"*
  call void @_ZN5blink16StorageEventInitC1Ev(%"class.blink::StorageEventInit"* %149) #6
  %150 = getelementptr inbounds i8, i8* %148, i64 -4
  %151 = bitcast i8* %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = or i16 %152, 1
  store atomic i16 %153, i16* %151 release, align 2
  br label %170

154:                                              ; preds = %130, %124, %141
  br i1 %113, label %161, label %155

155:                                              ; preds = %154
  %156 = load i64*, i64** %7, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 1
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 160
  %160 = inttoptr i64 %159 to %"class.v8::Value"*
  br label %165

161:                                              ; preds = %154
  %162 = load i64*, i64** %65, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 1
  %164 = bitcast i64* %163 to %"class.v8::Value"*
  br label %165

165:                                              ; preds = %155, %161
  %166 = phi %"class.v8::Value"* [ %160, %155 ], [ %164, %161 ]
  %167 = call %"class.blink::StorageEventInit"* @_ZN5blink17NativeValueTraitsINS_16StorageEventInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %11, %"class.v8::Value"* %166, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %168 = load i32, i32* %20, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %234

170:                                              ; preds = %165, %147
  %171 = phi %"class.blink::StorageEventInit"* [ %149, %147 ], [ %167, %165 ]
  %172 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #6
  %173 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %174 = load %"class.v8::String"*, %"class.v8::String"** %173, align 8
  %175 = icmp eq %"class.v8::String"* %174, null
  br i1 %175, label %178, label %176, !prof !3

176:                                              ; preds = %170
  %177 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %174, i32 0) #6
  br label %205

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %205, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 acquire, align 4
  %185 = and i32 %184, 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %203, label %187

187:                                              ; preds = %182
  %188 = load atomic i32, i32* %183 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %205

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #6
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !3

200:                                              ; preds = %191
  call void @llvm.trap() #6
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %205

203:                                              ; preds = %182
  %204 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %180) #6
  br label %205

205:                                              ; preds = %176, %178, %187, %201, %203
  %206 = phi %"class.WTF::StringImpl"* [ %177, %176 ], [ %204, %203 ], [ %180, %187 ], [ %180, %201 ], [ null, %178 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  %208 = call %"class.blink::StorageEvent"* @_ZN5blink12StorageEvent6CreateERKN3WTF12AtomicStringEPKNS_16StorageEventInitE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.blink::StorageEventInit"* %171) #6
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #6
  br label %224

224:                                              ; preds = %205, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #6
  %225 = getelementptr inbounds %"class.blink::StorageEvent", %"class.blink::StorageEvent"* %208, i64 0, i32 0, i32 0
  %226 = call %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"* %225, %"class.v8::Isolate"* %11, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink14V8StorageEvent18wrapper_type_info_E, %"class.v8::Object"* %68) #6
  %227 = load i64*, i64** %7, align 8
  %228 = getelementptr inbounds i64, i64* %227, i64 3
  %229 = icmp eq %"class.v8::Object"* %226, null
  %230 = bitcast %"class.v8::Object"* %226 to i64*
  %231 = getelementptr inbounds i64, i64* %227, i64 2
  %232 = select i1 %229, i64* %231, i64* %230, !prof !3
  %233 = load i64, i64* %232, align 8
  store i64 %233, i64* %228, align 8
  br label %234

234:                                              ; preds = %165, %106, %224
  %235 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  store i8* null, i8** %235, align 8
  %237 = icmp eq i8* %236, null
  br i1 %237, label %239, label %238

238:                                              ; preds = %234
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %236) #6
  br label %239

239:                                              ; preds = %238, %234
  %240 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %256, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %241) #6
  br label %256

256:                                              ; preds = %239, %252, %255
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %107) #6
  br label %257

257:                                              ; preds = %76, %105, %256, %63
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %258 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %259 = load i64*, i64** %258, align 8
  %260 = icmp eq i64* %259, null
  br i1 %260, label %270, label %261

261:                                              ; preds = %257
  %262 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %263 = bitcast %"class.v8::Isolate"* %262 to %"class.v8::internal::Isolate"*
  %264 = load i64, i64* %259, align 8
  %265 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %263, i64 %264) #6
  %266 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %262) #6
  br i1 %266, label %270, label %267

267:                                              ; preds = %261
  %268 = bitcast i64* %265 to %"class.v8::Value"*
  %269 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %262, %"class.v8::Value"* %268) #6
  br label %270

270:                                              ; preds = %267, %261, %257
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %271) #6
  br label %286

286:                                              ; preds = %270, %282, %285
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #6
  ret void
}

declare void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14V8StorageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.182", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink14V8StorageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 0, i32 0
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink14V8StorageEvent30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %7) #6
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event23KeyAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 104
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %26, i64 3
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  br label %56

37:                                               ; preds = %22
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %41, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %42, align 8
  %44 = getelementptr inbounds i64, i64* %26, i64 3
  %45 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 3, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, %29
  br i1 %47, label %48, label %55

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = inttoptr i64 %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %44, align 8
  br label %56

55:                                               ; preds = %37
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %43, i64* %44, %"class.WTF::StringImpl"* nonnull %29) #6
  br label %56

56:                                               ; preds = %31, %48, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event28OldValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 112
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %26, i64 3
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  br label %56

37:                                               ; preds = %22
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %41, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %42, align 8
  %44 = getelementptr inbounds i64, i64* %26, i64 3
  %45 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 3, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, %29
  br i1 %47, label %48, label %55

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = inttoptr i64 %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %44, align 8
  br label %56

55:                                               ; preds = %37
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %43, i64* %44, %"class.WTF::StringImpl"* nonnull %29) #6
  br label %56

56:                                               ; preds = %31, %48, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event28NewValueAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 120
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %26, i64 3
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  br label %56

37:                                               ; preds = %22
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %41, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %42, align 8
  %44 = getelementptr inbounds i64, i64* %26, i64 3
  %45 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 3, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, %29
  br i1 %47, label %48, label %55

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = inttoptr i64 %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %44, align 8
  br label %56

55:                                               ; preds = %37
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %43, i64* %44, %"class.WTF::StringImpl"* nonnull %29) #6
  br label %56

56:                                               ; preds = %31, %48, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event23UrlAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 128
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %26, i64 3
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 200
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %32, align 8
  br label %56

37:                                               ; preds = %22
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %41, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %42, align 8
  %44 = getelementptr inbounds i64, i64* %26, i64 3
  %45 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 3, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, %29
  br i1 %47, label %48, label %55

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %43, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = inttoptr i64 %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %44, align 8
  br label %56

55:                                               ; preds = %37
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %43, i64* %44, %"class.WTF::StringImpl"* nonnull %29) #6
  br label %56

56:                                               ; preds = %31, %48, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event31StorageAreaAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 136
  %25 = bitcast i8* %24 to %"class.blink::StorageArea"**
  %26 = load %"class.blink::StorageArea"*, %"class.blink::StorageArea"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::StorageArea", %"class.blink::StorageArea"* %26, i64 0, i32 0
  %28 = icmp eq %"class.blink::StorageArea"* %26, null
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  br i1 %28, label %32, label %38, !prof !3

32:                                               ; preds = %22
  %33 = getelementptr inbounds i64, i64* %30, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 176
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  br label %61

38:                                               ; preds = %22
  %39 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 -1
  %42 = bitcast i64* %41 to %"class.v8::Object"*
  %43 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %31, %"class.blink::ScriptWrappable"* nonnull %27, %"class.v8::Object"* %42, %"class.blink::ScriptWrappable"* %39) #6
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #6
  %49 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %48) #6
  %50 = bitcast %"class.blink::StorageArea"* %26 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %51 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, i64 7
  %53 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, align 8
  %54 = tail call %"class.v8::Value"* %53(%"class.blink::ScriptWrappable"* nonnull %27, %"class.blink::ScriptState"* %49) #6
  %55 = icmp eq %"class.v8::Value"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %44
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 3
  %59 = bitcast %"class.v8::Value"* %54 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %32, %38, %44, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event29IsTrustedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 24
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 256
  %28 = icmp eq i16 %27, 0
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  %32 = getelementptr inbounds i64, i64* %30, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = select i1 %28, i64 192, i64 184
  %35 = add i64 %34, %33
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %31, align 8
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116v8_storage_event33InitStorageEventOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %7 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 1
  %18 = bitcast i64* %17 to %"class.v8::Isolate"**
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %20 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %19) #6
  %21 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %20) #6
  %22 = icmp eq %"class.blink::ExecutionContext"* %21, null
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %21, i64 0, i32 3
  %24 = icmp eq %"class.blink::UseCounter"* %23, null
  %25 = or i1 %22, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %1
  %27 = bitcast %"class.blink::UseCounter"* %23 to void (%"class.blink::UseCounter"*, i32)***
  %28 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %28, i64 3
  %30 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %29, align 8
  tail call void %30(%"class.blink::UseCounter"* nonnull %23, i32 871) #6
  br label %31

31:                                               ; preds = %1, %26
  %32 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %32) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 56, i1 false)
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %37 = bitcast i8** %36 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %19, %"class.v8::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringImpl"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #6
  %43 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %66, !prof !3

46:                                               ; preds = %31
  %47 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %44) #6
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #6
  br label %65

65:                                               ; preds = %46, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  br label %981

66:                                               ; preds = %31
  %67 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 -1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = and i64 %70, -4294967296
  %75 = zext i32 %73 to i64
  %76 = or i64 %74, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load i16, i16* %78, align 2
  switch i16 %79, label %85 [
    i16 1057, label %80
    i16 1056, label %80
    i16 1040, label %80
  ]

80:                                               ; preds = %66, %66, %66
  %81 = add i64 %70, 19
  %82 = inttoptr i64 %81 to %"class.blink::StorageEvent"**
  %83 = load %"class.blink::StorageEvent"*, %"class.blink::StorageEvent"** %82, align 1
  %84 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %84) #6
  br label %98

85:                                               ; preds = %66
  %86 = bitcast i64* %69 to %"class.v8::Object"*
  %87 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %86, i32 1) #6
  %88 = load i32, i32* %43, align 8
  %89 = bitcast i8* %87 to %"class.blink::StorageEvent"*
  %90 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %90) #6
  %91 = icmp sgt i32 %88, 0
  br i1 %91, label %98, label %92

92:                                               ; preds = %85
  %93 = load i64*, i64** %15, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 1
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, 160
  %97 = inttoptr i64 %96 to %"class.v8::Value"*
  br label %103

98:                                               ; preds = %80, %85
  %99 = phi i8* [ %84, %80 ], [ %90, %85 ]
  %100 = phi %"class.blink::StorageEvent"* [ %83, %80 ], [ %89, %85 ]
  %101 = bitcast i64** %67 to %"class.v8::Value"**
  %102 = load %"class.v8::Value"*, %"class.v8::Value"** %101, align 8
  br label %103

103:                                              ; preds = %92, %98
  %104 = phi i8* [ %90, %92 ], [ %99, %98 ]
  %105 = phi %"class.blink::StorageEvent"* [ %89, %92 ], [ %100, %98 ]
  %106 = phi %"class.v8::Value"* [ %97, %92 ], [ %102, %98 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %19, %"class.v8::Value"* %106, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %107 = load i32, i32* %40, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %958

109:                                              ; preds = %103
  %110 = load i32, i32* %43, align 8
  %111 = icmp sgt i32 %110, 1
  br i1 %111, label %118, label %112

112:                                              ; preds = %109
  %113 = load i64*, i64** %15, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 1
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 160
  %117 = inttoptr i64 %116 to %"class.v8::Value"*
  br label %122

118:                                              ; preds = %109
  %119 = load i64*, i64** %67, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = bitcast i64* %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %112, %118
  %123 = phi %"class.v8::Value"* [ %117, %112 ], [ %121, %118 ]
  %124 = bitcast %"class.v8::Value"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 3
  %127 = icmp eq i64 %126, 1
  br i1 %127, label %128, label %145

128:                                              ; preds = %122
  %129 = add i64 %125, -1
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = and i64 %125, -4294967296
  %133 = zext i32 %131 to i64
  %134 = or i64 %132, %133
  %135 = add i64 %134, 7
  %136 = inttoptr i64 %135 to i16*
  %137 = load i16, i16* %136, align 2
  %138 = icmp eq i16 %137, 67
  br i1 %138, label %139, label %145

139:                                              ; preds = %128
  %140 = add i64 %125, 23
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, -2
  %144 = icmp eq i32 %143, 10
  br i1 %144, label %170, label %145

145:                                              ; preds = %128, %122, %139
  br i1 %111, label %152, label %146

146:                                              ; preds = %145
  %147 = load i64*, i64** %15, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %156

152:                                              ; preds = %145
  %153 = load i64*, i64** %67, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 1
  %155 = bitcast i64* %154 to %"class.v8::Value"*
  br label %156

156:                                              ; preds = %146, %152
  %157 = phi %"class.v8::Value"* [ %151, %146 ], [ %155, %152 ]
  %158 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %157) #6
  br i1 %158, label %159, label %162, !prof !4

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::Value"* %157 to %"class.v8::Boolean"*
  %161 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %160) #6
  br label %164

162:                                              ; preds = %156
  %163 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %157, %"class.v8::Isolate"* %19) #6
  br label %164

164:                                              ; preds = %159, %162
  %165 = phi i1 [ %161, %159 ], [ %163, %162 ]
  %166 = load i32, i32* %40, align 8
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %958

168:                                              ; preds = %164
  %169 = load i32, i32* %43, align 8
  br label %170

170:                                              ; preds = %168, %139
  %171 = phi i32 [ %169, %168 ], [ %110, %139 ]
  %172 = phi i1 [ %165, %168 ], [ false, %139 ]
  %173 = icmp sgt i32 %171, 2
  br i1 %173, label %180, label %174

174:                                              ; preds = %170
  %175 = load i64*, i64** %15, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 1
  %177 = load i64, i64* %176, align 8
  %178 = add i64 %177, 160
  %179 = inttoptr i64 %178 to %"class.v8::Value"*
  br label %184

180:                                              ; preds = %170
  %181 = load i64*, i64** %67, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 2
  %183 = bitcast i64* %182 to %"class.v8::Value"*
  br label %184

184:                                              ; preds = %174, %180
  %185 = phi %"class.v8::Value"* [ %179, %174 ], [ %183, %180 ]
  %186 = bitcast %"class.v8::Value"* %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 3
  %189 = icmp eq i64 %188, 1
  br i1 %189, label %190, label %207

190:                                              ; preds = %184
  %191 = add i64 %187, -1
  %192 = inttoptr i64 %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = and i64 %187, -4294967296
  %195 = zext i32 %193 to i64
  %196 = or i64 %194, %195
  %197 = add i64 %196, 7
  %198 = inttoptr i64 %197 to i16*
  %199 = load i16, i16* %198, align 2
  %200 = icmp eq i16 %199, 67
  br i1 %200, label %201, label %207

201:                                              ; preds = %190
  %202 = add i64 %187, 23
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = and i32 %204, -2
  %206 = icmp eq i32 %205, 10
  br i1 %206, label %232, label %207

207:                                              ; preds = %190, %184, %201
  br i1 %173, label %214, label %208

208:                                              ; preds = %207
  %209 = load i64*, i64** %15, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 1
  %211 = load i64, i64* %210, align 8
  %212 = add i64 %211, 160
  %213 = inttoptr i64 %212 to %"class.v8::Value"*
  br label %218

214:                                              ; preds = %207
  %215 = load i64*, i64** %67, align 8
  %216 = getelementptr inbounds i64, i64* %215, i64 2
  %217 = bitcast i64* %216 to %"class.v8::Value"*
  br label %218

218:                                              ; preds = %208, %214
  %219 = phi %"class.v8::Value"* [ %213, %208 ], [ %217, %214 ]
  %220 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %219) #6
  br i1 %220, label %221, label %224, !prof !4

221:                                              ; preds = %218
  %222 = bitcast %"class.v8::Value"* %219 to %"class.v8::Boolean"*
  %223 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %222) #6
  br label %226

224:                                              ; preds = %218
  %225 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %219, %"class.v8::Isolate"* %19) #6
  br label %226

226:                                              ; preds = %221, %224
  %227 = phi i1 [ %223, %221 ], [ %225, %224 ]
  %228 = load i32, i32* %40, align 8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %958

230:                                              ; preds = %226
  %231 = load i32, i32* %43, align 8
  br label %232

232:                                              ; preds = %230, %201
  %233 = phi i32 [ %231, %230 ], [ %171, %201 ]
  %234 = phi i1 [ %227, %230 ], [ false, %201 ]
  %235 = icmp sgt i32 %233, 3
  br i1 %235, label %242, label %236

236:                                              ; preds = %232
  %237 = load i64*, i64** %15, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = load i64, i64* %238, align 8
  %240 = add i64 %239, 160
  %241 = inttoptr i64 %240 to %"class.v8::Value"*
  br label %246

242:                                              ; preds = %232
  %243 = load i64*, i64** %67, align 8
  %244 = getelementptr inbounds i64, i64* %243, i64 3
  %245 = bitcast i64* %244 to %"class.v8::Value"*
  br label %246

246:                                              ; preds = %236, %242
  %247 = phi %"class.v8::Value"* [ %241, %236 ], [ %245, %242 ]
  %248 = bitcast %"class.v8::Value"* %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = and i64 %249, 3
  %251 = icmp eq i64 %250, 1
  br i1 %251, label %252, label %269

252:                                              ; preds = %246
  %253 = add i64 %249, -1
  %254 = inttoptr i64 %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = and i64 %249, -4294967296
  %257 = zext i32 %255 to i64
  %258 = or i64 %256, %257
  %259 = add i64 %258, 7
  %260 = inttoptr i64 %259 to i16*
  %261 = load i16, i16* %260, align 2
  %262 = icmp eq i16 %261, 67
  br i1 %262, label %263, label %269

263:                                              ; preds = %252
  %264 = add i64 %249, 23
  %265 = inttoptr i64 %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = and i32 %266, -2
  %268 = icmp eq i32 %267, 10
  br i1 %268, label %296, label %269

269:                                              ; preds = %252, %246, %263
  %270 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %270) #6
  br i1 %235, label %277, label %271

271:                                              ; preds = %269
  %272 = load i64*, i64** %15, align 8
  %273 = getelementptr inbounds i64, i64* %272, i64 1
  %274 = load i64, i64* %273, align 8
  %275 = add i64 %274, 160
  %276 = inttoptr i64 %275 to %"class.v8::Value"*
  br label %281

277:                                              ; preds = %269
  %278 = load i64*, i64** %67, align 8
  %279 = getelementptr inbounds i64, i64* %278, i64 3
  %280 = bitcast i64* %279 to %"class.v8::Value"*
  br label %281

281:                                              ; preds = %271, %277
  %282 = phi %"class.v8::Value"* [ %276, %271 ], [ %280, %277 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %19, %"class.v8::Value"* %282, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %283 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %285, i64 0, i32 0, i32 0
  %287 = bitcast %"class.WTF::String"* %285 to i64*
  %288 = load i64, i64* %287, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %286, align 8
  %289 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %290 = bitcast %"class.std::__1::unique_ptr.193"* %289 to i64*
  %291 = load i64, i64* %290, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %270) #6
  %292 = load i32, i32* %40, align 8
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %936

294:                                              ; preds = %281
  %295 = load i32, i32* %43, align 8
  br label %296

296:                                              ; preds = %294, %263
  %297 = phi i32 [ %233, %263 ], [ %295, %294 ]
  %298 = phi i64 [ 0, %263 ], [ %291, %294 ]
  %299 = phi i64 [ 0, %263 ], [ %288, %294 ]
  %300 = phi i64 [ 0, %263 ], [ %284, %294 ]
  %301 = icmp sgt i32 %297, 4
  br i1 %301, label %308, label %302

302:                                              ; preds = %296
  %303 = load i64*, i64** %15, align 8
  %304 = getelementptr inbounds i64, i64* %303, i64 1
  %305 = load i64, i64* %304, align 8
  %306 = add i64 %305, 160
  %307 = inttoptr i64 %306 to %"class.v8::Value"*
  br label %312

308:                                              ; preds = %296
  %309 = load i64*, i64** %67, align 8
  %310 = getelementptr inbounds i64, i64* %309, i64 4
  %311 = bitcast i64* %310 to %"class.v8::Value"*
  br label %312

312:                                              ; preds = %302, %308
  %313 = phi %"class.v8::Value"* [ %307, %302 ], [ %311, %308 ]
  %314 = bitcast %"class.v8::Value"* %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = and i64 %315, 3
  %317 = icmp eq i64 %316, 1
  br i1 %317, label %318, label %335

318:                                              ; preds = %312
  %319 = add i64 %315, -1
  %320 = inttoptr i64 %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = and i64 %315, -4294967296
  %323 = zext i32 %321 to i64
  %324 = or i64 %322, %323
  %325 = add i64 %324, 7
  %326 = inttoptr i64 %325 to i16*
  %327 = load i16, i16* %326, align 2
  %328 = icmp eq i16 %327, 67
  br i1 %328, label %329, label %335

329:                                              ; preds = %318
  %330 = add i64 %315, 23
  %331 = inttoptr i64 %330 to i32*
  %332 = load i32, i32* %331, align 4
  %333 = and i32 %332, -2
  %334 = icmp eq i32 %333, 10
  br i1 %334, label %362, label %335

335:                                              ; preds = %318, %312, %329
  %336 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %336) #6
  br i1 %301, label %343, label %337

337:                                              ; preds = %335
  %338 = load i64*, i64** %15, align 8
  %339 = getelementptr inbounds i64, i64* %338, i64 1
  %340 = load i64, i64* %339, align 8
  %341 = add i64 %340, 160
  %342 = inttoptr i64 %341 to %"class.v8::Value"*
  br label %347

343:                                              ; preds = %335
  %344 = load i64*, i64** %67, align 8
  %345 = getelementptr inbounds i64, i64* %344, i64 4
  %346 = bitcast i64* %345 to %"class.v8::Value"*
  br label %347

347:                                              ; preds = %337, %343
  %348 = phi %"class.v8::Value"* [ %342, %337 ], [ %346, %343 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %6, %"class.v8::Isolate"* %19, %"class.v8::Value"* %348, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %349 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 1
  %352 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %351, i64 0, i32 0, i32 0
  %353 = bitcast %"class.WTF::String"* %351 to i64*
  %354 = load i64, i64* %353, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %352, align 8
  %355 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 2, i32 1
  %356 = bitcast %"class.std::__1::unique_ptr.193"* %355 to i64*
  %357 = load i64, i64* %356, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %336) #6
  %358 = load i32, i32* %40, align 8
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %914

360:                                              ; preds = %347
  %361 = load i32, i32* %43, align 8
  br label %362

362:                                              ; preds = %360, %329
  %363 = phi i32 [ %297, %329 ], [ %361, %360 ]
  %364 = phi i64 [ 0, %329 ], [ %354, %360 ]
  %365 = phi i64 [ 0, %329 ], [ %357, %360 ]
  %366 = phi i64 [ 0, %329 ], [ %350, %360 ]
  %367 = icmp sgt i32 %363, 5
  br i1 %367, label %374, label %368

368:                                              ; preds = %362
  %369 = load i64*, i64** %15, align 8
  %370 = getelementptr inbounds i64, i64* %369, i64 1
  %371 = load i64, i64* %370, align 8
  %372 = add i64 %371, 160
  %373 = inttoptr i64 %372 to %"class.v8::Value"*
  br label %378

374:                                              ; preds = %362
  %375 = load i64*, i64** %67, align 8
  %376 = getelementptr inbounds i64, i64* %375, i64 5
  %377 = bitcast i64* %376 to %"class.v8::Value"*
  br label %378

378:                                              ; preds = %368, %374
  %379 = phi %"class.v8::Value"* [ %373, %368 ], [ %377, %374 ]
  %380 = bitcast %"class.v8::Value"* %379 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = and i64 %381, 3
  %383 = icmp eq i64 %382, 1
  br i1 %383, label %384, label %401

384:                                              ; preds = %378
  %385 = add i64 %381, -1
  %386 = inttoptr i64 %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = and i64 %381, -4294967296
  %389 = zext i32 %387 to i64
  %390 = or i64 %388, %389
  %391 = add i64 %390, 7
  %392 = inttoptr i64 %391 to i16*
  %393 = load i16, i16* %392, align 2
  %394 = icmp eq i16 %393, 67
  br i1 %394, label %395, label %401

395:                                              ; preds = %384
  %396 = add i64 %381, 23
  %397 = inttoptr i64 %396 to i32*
  %398 = load i32, i32* %397, align 4
  %399 = and i32 %398, -2
  %400 = icmp eq i32 %399, 10
  br i1 %400, label %428, label %401

401:                                              ; preds = %384, %378, %395
  %402 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %402) #6
  br i1 %367, label %409, label %403

403:                                              ; preds = %401
  %404 = load i64*, i64** %15, align 8
  %405 = getelementptr inbounds i64, i64* %404, i64 1
  %406 = load i64, i64* %405, align 8
  %407 = add i64 %406, 160
  %408 = inttoptr i64 %407 to %"class.v8::Value"*
  br label %413

409:                                              ; preds = %401
  %410 = load i64*, i64** %67, align 8
  %411 = getelementptr inbounds i64, i64* %410, i64 5
  %412 = bitcast i64* %411 to %"class.v8::Value"*
  br label %413

413:                                              ; preds = %403, %409
  %414 = phi %"class.v8::Value"* [ %408, %403 ], [ %412, %409 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %7, %"class.v8::Isolate"* %19, %"class.v8::Value"* %414, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %415 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 1
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %417, i64 0, i32 0, i32 0
  %419 = bitcast %"class.WTF::String"* %417 to i64*
  %420 = load i64, i64* %419, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %418, align 8
  %421 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 2, i32 1
  %422 = bitcast %"class.std::__1::unique_ptr.193"* %421 to i64*
  %423 = load i64, i64* %422, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %402) #6
  %424 = load i32, i32* %40, align 8
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %892

426:                                              ; preds = %413
  %427 = load i32, i32* %43, align 8
  br label %428

428:                                              ; preds = %426, %395
  %429 = phi i32 [ %363, %395 ], [ %427, %426 ]
  %430 = phi i64 [ 0, %395 ], [ %416, %426 ]
  %431 = phi i64 [ 0, %395 ], [ %420, %426 ]
  %432 = phi i64 [ 0, %395 ], [ %423, %426 ]
  %433 = icmp sgt i32 %429, 6
  br i1 %433, label %440, label %434

434:                                              ; preds = %428
  %435 = load i64*, i64** %15, align 8
  %436 = getelementptr inbounds i64, i64* %435, i64 1
  %437 = load i64, i64* %436, align 8
  %438 = add i64 %437, 160
  %439 = inttoptr i64 %438 to %"class.v8::Value"*
  br label %444

440:                                              ; preds = %428
  %441 = load i64*, i64** %67, align 8
  %442 = getelementptr inbounds i64, i64* %441, i64 6
  %443 = bitcast i64* %442 to %"class.v8::Value"*
  br label %444

444:                                              ; preds = %434, %440
  %445 = phi %"class.v8::Value"* [ %439, %434 ], [ %443, %440 ]
  %446 = bitcast %"class.v8::Value"* %445 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = and i64 %447, 3
  %449 = icmp eq i64 %448, 1
  br i1 %449, label %450, label %511

450:                                              ; preds = %444
  %451 = add i64 %447, -1
  %452 = inttoptr i64 %451 to i32*
  %453 = load i32, i32* %452, align 4
  %454 = and i64 %447, -4294967296
  %455 = zext i32 %453 to i64
  %456 = or i64 %454, %455
  %457 = add i64 %456, 7
  %458 = inttoptr i64 %457 to i16*
  %459 = load i16, i16* %458, align 2
  %460 = icmp eq i16 %459, 67
  br i1 %460, label %461, label %511

461:                                              ; preds = %450
  %462 = add i64 %447, 23
  %463 = inttoptr i64 %462 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = and i32 %464, -2
  %466 = icmp eq i32 %465, 10
  br i1 %466, label %467, label %511

467:                                              ; preds = %461
  %468 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %468) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i64 0) #6
  %469 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %470, null
  br i1 %471, label %509, label %472

472:                                              ; preds = %467
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load atomic i32, i32* %473 monotonic, align 4
  %475 = and i32 %474, 2
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %479, label %477

477:                                              ; preds = %472
  %478 = ptrtoint %"class.WTF::StringImpl"* %470 to i64
  br label %494

479:                                              ; preds = %472
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 0
  %481 = load i32, i32* %480, align 4
  %482 = zext i32 %481 to i33
  %483 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %482, i33 1) #6
  %484 = extractvalue { i33, i1 } %483, 1
  %485 = extractvalue { i33, i1 } %483, 0
  %486 = icmp slt i33 %485, 0
  %487 = or i1 %484, %486
  br i1 %487, label %488, label %489, !prof !3

488:                                              ; preds = %479
  call void @llvm.trap() #6
  unreachable

489:                                              ; preds = %479
  %490 = trunc i33 %485 to i32
  store i32 %490, i32* %480, align 4
  %491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %492 = ptrtoint %"class.WTF::StringImpl"* %470 to i64
  %493 = icmp eq %"class.WTF::StringImpl"* %491, null
  br i1 %493, label %509, label %494

494:                                              ; preds = %477, %489
  %495 = phi i64 [ %478, %477 ], [ %492, %489 ]
  %496 = phi %"class.WTF::StringImpl"* [ %470, %477 ], [ %491, %489 ]
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = load atomic i32, i32* %497 monotonic, align 4
  %499 = and i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %502 = load i32, i32* %501, align 4
  br i1 %500, label %503, label %505

503:                                              ; preds = %494
  %504 = add i32 %502, -1
  store i32 %504, i32* %501, align 4
  br label %505

505:                                              ; preds = %503, %494
  %506 = phi i32 [ %504, %503 ], [ %502, %494 ]
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %509

508:                                              ; preds = %505
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #6
  br label %509

509:                                              ; preds = %467, %489, %505, %508
  %510 = phi i64 [ %492, %489 ], [ %495, %505 ], [ %495, %508 ], [ 0, %467 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %468) #6
  br label %536

511:                                              ; preds = %450, %444, %461
  %512 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %512) #6
  br i1 %433, label %519, label %513

513:                                              ; preds = %511
  %514 = load i64*, i64** %15, align 8
  %515 = getelementptr inbounds i64, i64* %514, i64 1
  %516 = load i64, i64* %515, align 8
  %517 = add i64 %516, 160
  %518 = inttoptr i64 %517 to %"class.v8::Value"*
  br label %523

519:                                              ; preds = %511
  %520 = load i64*, i64** %67, align 8
  %521 = getelementptr inbounds i64, i64* %520, i64 6
  %522 = bitcast i64* %521 to %"class.v8::Value"*
  br label %523

523:                                              ; preds = %513, %519
  %524 = phi %"class.v8::Value"* [ %518, %513 ], [ %522, %519 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %9, %"class.v8::Isolate"* %19, %"class.v8::Value"* %524, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %525 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9, i64 0, i32 1
  %528 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %527, i64 0, i32 0, i32 0
  %529 = bitcast %"class.WTF::String"* %527 to i64*
  %530 = load i64, i64* %529, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %528, align 8
  %531 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9, i64 0, i32 2, i32 1
  %532 = bitcast %"class.std::__1::unique_ptr.193"* %531 to i64*
  %533 = load i64, i64* %532, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %512) #6
  %534 = load i32, i32* %40, align 8
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %870

536:                                              ; preds = %523, %509
  %537 = phi i64 [ 0, %509 ], [ %526, %523 ]
  %538 = phi i64 [ %510, %509 ], [ %530, %523 ]
  %539 = phi i64 [ 0, %509 ], [ %533, %523 ]
  %540 = load i32, i32* %43, align 8
  %541 = icmp sgt i32 %540, 7
  br i1 %541, label %548, label %542

542:                                              ; preds = %536
  %543 = load i64*, i64** %15, align 8
  %544 = getelementptr inbounds i64, i64* %543, i64 1
  %545 = load i64, i64* %544, align 8
  %546 = add i64 %545, 160
  %547 = inttoptr i64 %546 to %"class.v8::Value"*
  br label %552

548:                                              ; preds = %536
  %549 = load i64*, i64** %67, align 8
  %550 = getelementptr inbounds i64, i64* %549, i64 7
  %551 = bitcast i64* %550 to %"class.v8::Value"*
  br label %552

552:                                              ; preds = %542, %548
  %553 = phi %"class.v8::Value"* [ %547, %542 ], [ %551, %548 ]
  %554 = bitcast %"class.v8::Value"* %553 to i64*
  %555 = load i64, i64* %554, align 8
  %556 = and i64 %555, 3
  %557 = icmp eq i64 %556, 1
  br i1 %557, label %558, label %575

558:                                              ; preds = %552
  %559 = add i64 %555, -1
  %560 = inttoptr i64 %559 to i32*
  %561 = load i32, i32* %560, align 4
  %562 = and i64 %555, -4294967296
  %563 = zext i32 %561 to i64
  %564 = or i64 %562, %563
  %565 = add i64 %564, 7
  %566 = inttoptr i64 %565 to i16*
  %567 = load i16, i16* %566, align 2
  %568 = icmp eq i16 %567, 67
  br i1 %568, label %569, label %575

569:                                              ; preds = %558
  %570 = add i64 %555, 23
  %571 = inttoptr i64 %570 to i32*
  %572 = load i32, i32* %571, align 4
  %573 = and i32 %572, -2
  %574 = icmp eq i32 %573, 10
  br i1 %574, label %640, label %575

575:                                              ; preds = %558, %552, %569
  br i1 %541, label %582, label %576

576:                                              ; preds = %575
  %577 = load i64*, i64** %15, align 8
  %578 = getelementptr inbounds i64, i64* %577, i64 1
  %579 = load i64, i64* %578, align 8
  %580 = add i64 %579, 160
  %581 = inttoptr i64 %580 to %"class.v8::Value"*
  br label %586

582:                                              ; preds = %575
  %583 = load i64*, i64** %67, align 8
  %584 = getelementptr inbounds i64, i64* %583, i64 7
  %585 = bitcast i64* %584 to %"class.v8::Value"*
  br label %586

586:                                              ; preds = %576, %582
  %587 = phi %"class.v8::Value"* [ %581, %576 ], [ %585, %582 ]
  %588 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11StorageArea18wrapper_type_info_E, align 8
  %589 = ptrtoint %"class.v8::Isolate"* %19 to i64
  %590 = add i64 %589, 8
  %591 = inttoptr i64 %590 to %"class.blink::V8PerIsolateData"**
  %592 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %591, align 8
  %593 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %592, %"struct.blink::WrapperTypeInfo"* %588, %"class.v8::Value"* %587) #6
  %594 = bitcast %"class.v8::Value"* %587 to i64*
  %595 = load i64, i64* %594, align 8
  br i1 %593, label %596, label %616

596:                                              ; preds = %586
  %597 = add i64 %595, -1
  %598 = inttoptr i64 %597 to i32*
  %599 = load i32, i32* %598, align 4
  %600 = and i64 %595, -4294967296
  %601 = zext i32 %599 to i64
  %602 = or i64 %600, %601
  %603 = add i64 %602, 7
  %604 = inttoptr i64 %603 to i16*
  %605 = load i16, i16* %604, align 2
  switch i16 %605, label %610 [
    i16 1057, label %606
    i16 1056, label %606
    i16 1040, label %606
  ]

606:                                              ; preds = %596, %596, %596
  %607 = add i64 %595, 19
  %608 = inttoptr i64 %607 to i8**
  %609 = load i8*, i8** %608, align 1
  br label %613

610:                                              ; preds = %596
  %611 = bitcast %"class.v8::Value"* %587 to %"class.v8::Object"*
  %612 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %611, i32 1) #6
  br label %613

613:                                              ; preds = %610, %606
  %614 = phi i8* [ %609, %606 ], [ %612, %610 ]
  %615 = bitcast i8* %614 to %"class.blink::StorageArea"*
  br label %636

616:                                              ; preds = %586
  %617 = and i64 %595, 3
  %618 = icmp eq i64 %617, 1
  br i1 %618, label %619, label %635

619:                                              ; preds = %616
  %620 = add i64 %595, -1
  %621 = inttoptr i64 %620 to i32*
  %622 = load i32, i32* %621, align 4
  %623 = and i64 %595, -4294967296
  %624 = zext i32 %622 to i64
  %625 = or i64 %623, %624
  %626 = add i64 %625, 7
  %627 = inttoptr i64 %626 to i16*
  %628 = load i16, i16* %627, align 2
  %629 = icmp eq i16 %628, 67
  br i1 %629, label %630, label %635

630:                                              ; preds = %619
  %631 = add i64 %595, 23
  %632 = inttoptr i64 %631 to i32*
  %633 = load i32, i32* %632, align 4
  %634 = ashr i32 %633, 1
  switch i32 %634, label %635 [
    i32 5, label %636
    i32 3, label %636
  ]

635:                                              ; preds = %630, %619, %616
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %588, i32 7, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %636

636:                                              ; preds = %613, %630, %630, %635
  %637 = phi %"class.blink::StorageArea"* [ %615, %613 ], [ null, %635 ], [ null, %630 ], [ null, %630 ]
  %638 = load i32, i32* %40, align 8
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %640, label %870

640:                                              ; preds = %636, %569
  %641 = phi %"class.blink::StorageArea"* [ %637, %636 ], [ null, %569 ]
  %642 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %642) #6
  %643 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %644 = load %"class.v8::String"*, %"class.v8::String"** %643, align 8
  %645 = icmp eq %"class.v8::String"* %644, null
  br i1 %645, label %648, label %646, !prof !3

646:                                              ; preds = %640
  %647 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %644, i32 0) #6
  br label %675

648:                                              ; preds = %640
  %649 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %650 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %649, align 8
  %651 = icmp eq %"class.WTF::StringImpl"* %650, null
  br i1 %651, label %675, label %652

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load atomic i32, i32* %653 acquire, align 4
  %655 = and i32 %654, 4
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %673, label %657

657:                                              ; preds = %652
  %658 = load atomic i32, i32* %653 monotonic, align 4
  %659 = and i32 %658, 2
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %661, label %675

661:                                              ; preds = %657
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 0
  %663 = load i32, i32* %662, align 4
  %664 = zext i32 %663 to i33
  %665 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %664, i33 1) #6
  %666 = extractvalue { i33, i1 } %665, 1
  %667 = extractvalue { i33, i1 } %665, 0
  %668 = icmp slt i33 %667, 0
  %669 = or i1 %666, %668
  br i1 %669, label %670, label %671, !prof !3

670:                                              ; preds = %661
  call void @llvm.trap() #6
  unreachable

671:                                              ; preds = %661
  %672 = trunc i33 %667 to i32
  store i32 %672, i32* %662, align 4
  br label %675

673:                                              ; preds = %652
  %674 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %650) #6
  br label %675

675:                                              ; preds = %646, %648, %657, %671, %673
  %676 = phi %"class.WTF::StringImpl"* [ %647, %646 ], [ %674, %673 ], [ %650, %657 ], [ %650, %671 ], [ null, %648 ]
  %677 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %676, %"class.WTF::StringImpl"** %677, align 8
  %678 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %678) #6
  %679 = icmp eq i64 %300, 0
  br i1 %679, label %683, label %680, !prof !3

680:                                              ; preds = %675
  %681 = inttoptr i64 %300 to %"class.v8::String"*
  %682 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %681, i32 0) #6
  br label %703

683:                                              ; preds = %675
  %684 = inttoptr i64 %299 to %"class.WTF::StringImpl"*
  %685 = icmp eq i64 %299, 0
  br i1 %685, label %703, label %686

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %703

691:                                              ; preds = %686
  %692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %693 = load i32, i32* %692, align 4
  %694 = zext i32 %693 to i33
  %695 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %694, i33 1) #6
  %696 = extractvalue { i33, i1 } %695, 1
  %697 = extractvalue { i33, i1 } %695, 0
  %698 = icmp slt i33 %697, 0
  %699 = or i1 %696, %698
  br i1 %699, label %700, label %701, !prof !3

700:                                              ; preds = %691
  call void @llvm.trap() #6
  unreachable

701:                                              ; preds = %691
  %702 = trunc i33 %697 to i32
  store i32 %702, i32* %692, align 4
  br label %703

703:                                              ; preds = %680, %683, %686, %701
  %704 = phi %"class.WTF::StringImpl"* [ %682, %680 ], [ null, %683 ], [ %684, %686 ], [ %684, %701 ]
  %705 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %704, %"class.WTF::StringImpl"** %705, align 8
  %706 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %706) #6
  %707 = icmp eq i64 %366, 0
  br i1 %707, label %711, label %708, !prof !3

708:                                              ; preds = %703
  %709 = inttoptr i64 %366 to %"class.v8::String"*
  %710 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %709, i32 0) #6
  br label %731

711:                                              ; preds = %703
  %712 = inttoptr i64 %364 to %"class.WTF::StringImpl"*
  %713 = icmp eq i64 %364, 0
  br i1 %713, label %731, label %714

714:                                              ; preds = %711
  %715 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %712, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %716 = load atomic i32, i32* %715 monotonic, align 4
  %717 = and i32 %716, 2
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %719, label %731

719:                                              ; preds = %714
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %712, i64 0, i32 0
  %721 = load i32, i32* %720, align 4
  %722 = zext i32 %721 to i33
  %723 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %722, i33 1) #6
  %724 = extractvalue { i33, i1 } %723, 1
  %725 = extractvalue { i33, i1 } %723, 0
  %726 = icmp slt i33 %725, 0
  %727 = or i1 %724, %726
  br i1 %727, label %728, label %729, !prof !3

728:                                              ; preds = %719
  call void @llvm.trap() #6
  unreachable

729:                                              ; preds = %719
  %730 = trunc i33 %725 to i32
  store i32 %730, i32* %720, align 4
  br label %731

731:                                              ; preds = %708, %711, %714, %729
  %732 = phi %"class.WTF::StringImpl"* [ %710, %708 ], [ null, %711 ], [ %712, %714 ], [ %712, %729 ]
  %733 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %732, %"class.WTF::StringImpl"** %733, align 8
  %734 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %734) #6
  %735 = icmp eq i64 %430, 0
  br i1 %735, label %739, label %736, !prof !3

736:                                              ; preds = %731
  %737 = inttoptr i64 %430 to %"class.v8::String"*
  %738 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %737, i32 0) #6
  br label %759

739:                                              ; preds = %731
  %740 = inttoptr i64 %431 to %"class.WTF::StringImpl"*
  %741 = icmp eq i64 %431, 0
  br i1 %741, label %759, label %742

742:                                              ; preds = %739
  %743 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %740, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %744 = load atomic i32, i32* %743 monotonic, align 4
  %745 = and i32 %744, 2
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %759

747:                                              ; preds = %742
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %740, i64 0, i32 0
  %749 = load i32, i32* %748, align 4
  %750 = zext i32 %749 to i33
  %751 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %750, i33 1) #6
  %752 = extractvalue { i33, i1 } %751, 1
  %753 = extractvalue { i33, i1 } %751, 0
  %754 = icmp slt i33 %753, 0
  %755 = or i1 %752, %754
  br i1 %755, label %756, label %757, !prof !3

756:                                              ; preds = %747
  call void @llvm.trap() #6
  unreachable

757:                                              ; preds = %747
  %758 = trunc i33 %753 to i32
  store i32 %758, i32* %748, align 4
  br label %759

759:                                              ; preds = %736, %739, %742, %757
  %760 = phi %"class.WTF::StringImpl"* [ %738, %736 ], [ null, %739 ], [ %740, %742 ], [ %740, %757 ]
  %761 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %760, %"class.WTF::StringImpl"** %761, align 8
  %762 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %762) #6
  %763 = icmp eq i64 %537, 0
  br i1 %763, label %767, label %764, !prof !3

764:                                              ; preds = %759
  %765 = inttoptr i64 %537 to %"class.v8::String"*
  %766 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %765, i32 0) #6
  br label %787

767:                                              ; preds = %759
  %768 = inttoptr i64 %538 to %"class.WTF::StringImpl"*
  %769 = icmp eq i64 %538, 0
  br i1 %769, label %787, label %770

770:                                              ; preds = %767
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %772 = load atomic i32, i32* %771 monotonic, align 4
  %773 = and i32 %772, 2
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %775, label %787

775:                                              ; preds = %770
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 0
  %777 = load i32, i32* %776, align 4
  %778 = zext i32 %777 to i33
  %779 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %778, i33 1) #6
  %780 = extractvalue { i33, i1 } %779, 1
  %781 = extractvalue { i33, i1 } %779, 0
  %782 = icmp slt i33 %781, 0
  %783 = or i1 %780, %782
  br i1 %783, label %784, label %785, !prof !3

784:                                              ; preds = %775
  call void @llvm.trap() #6
  unreachable

785:                                              ; preds = %775
  %786 = trunc i33 %781 to i32
  store i32 %786, i32* %776, align 4
  br label %787

787:                                              ; preds = %764, %767, %770, %785
  %788 = phi %"class.WTF::StringImpl"* [ %766, %764 ], [ null, %767 ], [ %768, %770 ], [ %768, %785 ]
  %789 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %788, %"class.WTF::StringImpl"** %789, align 8
  call void @_ZN5blink12StorageEvent16initStorageEventERKN3WTF12AtomicStringEbbRKNS1_6StringES7_S7_S7_PNS_11StorageAreaE(%"class.blink::StorageEvent"* %105, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, i1 zeroext %172, i1 zeroext %234, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::StorageArea"* %641) #6
  %790 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %789, align 8
  %791 = icmp eq %"class.WTF::StringImpl"* %790, null
  br i1 %791, label %805, label %792

792:                                              ; preds = %787
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 0
  %798 = load i32, i32* %797, align 4
  br i1 %796, label %799, label %801

799:                                              ; preds = %792
  %800 = add i32 %798, -1
  store i32 %800, i32* %797, align 4
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i32 [ %800, %799 ], [ %798, %792 ]
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %805

804:                                              ; preds = %801
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %790) #6
  br label %805

805:                                              ; preds = %787, %801, %804
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %762) #6
  %806 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %761, align 8
  %807 = icmp eq %"class.WTF::StringImpl"* %806, null
  br i1 %807, label %821, label %808

808:                                              ; preds = %805
  %809 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %806, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %810 = load atomic i32, i32* %809 monotonic, align 4
  %811 = and i32 %810, 2
  %812 = icmp eq i32 %811, 0
  %813 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %806, i64 0, i32 0
  %814 = load i32, i32* %813, align 4
  br i1 %812, label %815, label %817

815:                                              ; preds = %808
  %816 = add i32 %814, -1
  store i32 %816, i32* %813, align 4
  br label %817

817:                                              ; preds = %815, %808
  %818 = phi i32 [ %816, %815 ], [ %814, %808 ]
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %820, label %821

820:                                              ; preds = %817
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %806) #6
  br label %821

821:                                              ; preds = %805, %817, %820
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %734) #6
  %822 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %733, align 8
  %823 = icmp eq %"class.WTF::StringImpl"* %822, null
  br i1 %823, label %837, label %824

824:                                              ; preds = %821
  %825 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %826 = load atomic i32, i32* %825 monotonic, align 4
  %827 = and i32 %826, 2
  %828 = icmp eq i32 %827, 0
  %829 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %822, i64 0, i32 0
  %830 = load i32, i32* %829, align 4
  br i1 %828, label %831, label %833

831:                                              ; preds = %824
  %832 = add i32 %830, -1
  store i32 %832, i32* %829, align 4
  br label %833

833:                                              ; preds = %831, %824
  %834 = phi i32 [ %832, %831 ], [ %830, %824 ]
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %836, label %837

836:                                              ; preds = %833
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %822) #6
  br label %837

837:                                              ; preds = %821, %833, %836
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %706) #6
  %838 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %705, align 8
  %839 = icmp eq %"class.WTF::StringImpl"* %838, null
  br i1 %839, label %853, label %840

840:                                              ; preds = %837
  %841 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %838, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %842 = load atomic i32, i32* %841 monotonic, align 4
  %843 = and i32 %842, 2
  %844 = icmp eq i32 %843, 0
  %845 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %838, i64 0, i32 0
  %846 = load i32, i32* %845, align 4
  br i1 %844, label %847, label %849

847:                                              ; preds = %840
  %848 = add i32 %846, -1
  store i32 %848, i32* %845, align 4
  br label %849

849:                                              ; preds = %847, %840
  %850 = phi i32 [ %848, %847 ], [ %846, %840 ]
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %852, label %853

852:                                              ; preds = %849
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %838) #6
  br label %853

853:                                              ; preds = %837, %849, %852
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %678) #6
  %854 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %677, align 8
  %855 = icmp eq %"class.WTF::StringImpl"* %854, null
  br i1 %855, label %869, label %856

856:                                              ; preds = %853
  %857 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %854, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %858 = load atomic i32, i32* %857 monotonic, align 4
  %859 = and i32 %858, 2
  %860 = icmp eq i32 %859, 0
  %861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %854, i64 0, i32 0
  %862 = load i32, i32* %861, align 4
  br i1 %860, label %863, label %865

863:                                              ; preds = %856
  %864 = add i32 %862, -1
  store i32 %864, i32* %861, align 4
  br label %865

865:                                              ; preds = %863, %856
  %866 = phi i32 [ %864, %863 ], [ %862, %856 ]
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %868, label %869

868:                                              ; preds = %865
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %854) #6
  br label %869

869:                                              ; preds = %853, %865, %868
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %642) #6
  br label %870

870:                                              ; preds = %636, %523, %869
  %871 = phi i64 [ %538, %869 ], [ %538, %636 ], [ %530, %523 ]
  %872 = phi i64 [ %539, %869 ], [ %539, %636 ], [ %533, %523 ]
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %876, label %874

874:                                              ; preds = %870
  %875 = inttoptr i64 %872 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %875) #6
  br label %876

876:                                              ; preds = %874, %870
  %877 = inttoptr i64 %871 to %"class.WTF::StringImpl"*
  %878 = icmp eq i64 %871, 0
  br i1 %878, label %892, label %879

879:                                              ; preds = %876
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %881 = load atomic i32, i32* %880 monotonic, align 4
  %882 = and i32 %881, 2
  %883 = icmp eq i32 %882, 0
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 0
  %885 = load i32, i32* %884, align 4
  br i1 %883, label %886, label %888

886:                                              ; preds = %879
  %887 = add i32 %885, -1
  store i32 %887, i32* %884, align 4
  br label %888

888:                                              ; preds = %886, %879
  %889 = phi i32 [ %887, %886 ], [ %885, %879 ]
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %891, label %892

891:                                              ; preds = %888
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %877) #6
  br label %892

892:                                              ; preds = %891, %888, %876, %413
  %893 = phi i64 [ %420, %413 ], [ %431, %876 ], [ %431, %888 ], [ %431, %891 ]
  %894 = phi i64 [ %423, %413 ], [ %432, %876 ], [ %432, %888 ], [ %432, %891 ]
  %895 = icmp eq i64 %894, 0
  br i1 %895, label %898, label %896

896:                                              ; preds = %892
  %897 = inttoptr i64 %894 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %897) #6
  br label %898

898:                                              ; preds = %896, %892
  %899 = inttoptr i64 %893 to %"class.WTF::StringImpl"*
  %900 = icmp eq i64 %893, 0
  br i1 %900, label %914, label %901

901:                                              ; preds = %898
  %902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %899, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %903 = load atomic i32, i32* %902 monotonic, align 4
  %904 = and i32 %903, 2
  %905 = icmp eq i32 %904, 0
  %906 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %899, i64 0, i32 0
  %907 = load i32, i32* %906, align 4
  br i1 %905, label %908, label %910

908:                                              ; preds = %901
  %909 = add i32 %907, -1
  store i32 %909, i32* %906, align 4
  br label %910

910:                                              ; preds = %908, %901
  %911 = phi i32 [ %909, %908 ], [ %907, %901 ]
  %912 = icmp eq i32 %911, 0
  br i1 %912, label %913, label %914

913:                                              ; preds = %910
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %899) #6
  br label %914

914:                                              ; preds = %913, %910, %898, %347
  %915 = phi i64 [ %354, %347 ], [ %364, %898 ], [ %364, %910 ], [ %364, %913 ]
  %916 = phi i64 [ %357, %347 ], [ %365, %898 ], [ %365, %910 ], [ %365, %913 ]
  %917 = icmp eq i64 %916, 0
  br i1 %917, label %920, label %918

918:                                              ; preds = %914
  %919 = inttoptr i64 %916 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %919) #6
  br label %920

920:                                              ; preds = %918, %914
  %921 = inttoptr i64 %915 to %"class.WTF::StringImpl"*
  %922 = icmp eq i64 %915, 0
  br i1 %922, label %936, label %923

923:                                              ; preds = %920
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %925 = load atomic i32, i32* %924 monotonic, align 4
  %926 = and i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %929 = load i32, i32* %928, align 4
  br i1 %927, label %930, label %932

930:                                              ; preds = %923
  %931 = add i32 %929, -1
  store i32 %931, i32* %928, align 4
  br label %932

932:                                              ; preds = %930, %923
  %933 = phi i32 [ %931, %930 ], [ %929, %923 ]
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %935, label %936

935:                                              ; preds = %932
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %921) #6
  br label %936

936:                                              ; preds = %935, %932, %920, %281
  %937 = phi i64 [ %291, %281 ], [ %298, %920 ], [ %298, %932 ], [ %298, %935 ]
  %938 = phi i64 [ %288, %281 ], [ %299, %920 ], [ %299, %932 ], [ %299, %935 ]
  %939 = icmp eq i64 %937, 0
  br i1 %939, label %942, label %940

940:                                              ; preds = %936
  %941 = inttoptr i64 %937 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %941) #6
  br label %942

942:                                              ; preds = %940, %936
  %943 = inttoptr i64 %938 to %"class.WTF::StringImpl"*
  %944 = icmp eq i64 %938, 0
  br i1 %944, label %958, label %945

945:                                              ; preds = %942
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %947 = load atomic i32, i32* %946 monotonic, align 4
  %948 = and i32 %947, 2
  %949 = icmp eq i32 %948, 0
  %950 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 0
  %951 = load i32, i32* %950, align 4
  br i1 %949, label %952, label %954

952:                                              ; preds = %945
  %953 = add i32 %951, -1
  store i32 %953, i32* %950, align 4
  br label %954

954:                                              ; preds = %952, %945
  %955 = phi i32 [ %953, %952 ], [ %951, %945 ]
  %956 = icmp eq i32 %955, 0
  br i1 %956, label %957, label %958

957:                                              ; preds = %954
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %943) #6
  br label %958

958:                                              ; preds = %957, %954, %942, %226, %164, %103
  %959 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %960 = load i8*, i8** %959, align 8
  store i8* null, i8** %959, align 8
  %961 = icmp eq i8* %960, null
  br i1 %961, label %963, label %962

962:                                              ; preds = %958
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %960) #6
  br label %963

963:                                              ; preds = %962, %958
  %964 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %965 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %964, align 8
  %966 = icmp eq %"class.WTF::StringImpl"* %965, null
  br i1 %966, label %980, label %967

967:                                              ; preds = %963
  %968 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %969 = load atomic i32, i32* %968 monotonic, align 4
  %970 = and i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 0
  %973 = load i32, i32* %972, align 4
  br i1 %971, label %974, label %976

974:                                              ; preds = %967
  %975 = add i32 %973, -1
  store i32 %975, i32* %972, align 4
  br label %976

976:                                              ; preds = %974, %967
  %977 = phi i32 [ %975, %974 ], [ %973, %967 ]
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %979, label %980

979:                                              ; preds = %976
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %965) #6
  br label %980

980:                                              ; preds = %963, %976, %979
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %104) #6
  br label %981

981:                                              ; preds = %980, %65
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %982 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %983 = load i64*, i64** %982, align 8
  %984 = icmp eq i64* %983, null
  br i1 %984, label %994, label %985

985:                                              ; preds = %981
  %986 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %987 = bitcast %"class.v8::Isolate"* %986 to %"class.v8::internal::Isolate"*
  %988 = load i64, i64* %983, align 8
  %989 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %987, i64 %988) #6
  %990 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %986) #6
  br i1 %990, label %994, label %991

991:                                              ; preds = %985
  %992 = bitcast i64* %989 to %"class.v8::Value"*
  %993 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %986, %"class.v8::Value"* %992) #6
  br label %994

994:                                              ; preds = %991, %985, %981
  %995 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %996 = icmp eq %"class.WTF::StringImpl"* %995, null
  br i1 %996, label %1010, label %997

997:                                              ; preds = %994
  %998 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %995, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %999 = load atomic i32, i32* %998 monotonic, align 4
  %1000 = and i32 %999, 2
  %1001 = icmp eq i32 %1000, 0
  %1002 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %995, i64 0, i32 0
  %1003 = load i32, i32* %1002, align 4
  br i1 %1001, label %1004, label %1006

1004:                                             ; preds = %997
  %1005 = add i32 %1003, -1
  store i32 %1005, i32* %1002, align 4
  br label %1006

1006:                                             ; preds = %1004, %997
  %1007 = phi i32 [ %1005, %1004 ], [ %1003, %997 ]
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1009, label %1010

1009:                                             ; preds = %1006
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %995) #6
  br label %1010

1010:                                             ; preds = %994, %1006, %1009
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %32) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare %"class.blink::StorageEvent"* @_ZN5blink12StorageEvent6CreateERKN3WTF12AtomicStringEPKNS_16StorageEventInitE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::StorageEventInit"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.193"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.193"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.193"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare void @_ZN5blink16StorageEventInitC1Ev(%"class.blink::StorageEventInit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.184"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.184"*)) #6
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #6
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %40, i8* %41) #6
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #6
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.184"*) local_unnamed_addr #2

declare %"class.blink::StorageEventInit"* @_ZN5blink17NativeValueTraitsINS_16StorageEventInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #6
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #6
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !3
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #6
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.11, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink12StorageEvent16initStorageEventERKN3WTF12AtomicStringEbbRKNS1_6StringES7_S7_S7_PNS_11StorageAreaE(%"class.blink::StorageEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::StorageArea"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE1EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.193"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %76

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.193"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %76

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %58

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %58

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = ashr i32 %54, 1
  switch i32 %55, label %58 [
    i32 5, label %56
    i32 3, label %56
  ]

56:                                               ; preds = %51, %51
  %57 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 152, i1 false)
  br label %76

58:                                               ; preds = %51, %40, %36
  %59 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %59) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %60 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %61 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %60) #6
  %62 = icmp eq %"class.v8::String"* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %65 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %66 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %66, i64 5
  %68 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %67, align 8
  call void %68(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %64) #6
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 152, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %61, %"class.v8::String"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %74 = bitcast %"class.std::__1::unique_ptr.193"* %73 to i64*
  store i64 0, i64* %74, align 8
  br label %75

75:                                               ; preds = %70, %63
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %59) #6
  br label %76

76:                                               ; preds = %75, %56, %28, %21
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %6) #6
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.v8::String"*, %"class.v8::String"** %7, align 8
  %9 = icmp eq %"class.v8::String"* %8, null
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %4
  %11 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %8, i32 0) #6
  br label %33

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #6
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  call void @llvm.trap() #6
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %10, %12, %16, %31
  %34 = phi %"class.WTF::StringImpl"* [ %11, %10 ], [ null, %12 ], [ %14, %16 ], [ %14, %31 ]
  %35 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8* null, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %36) #6
  br label %39

39:                                               ; preds = %38, %33
  %40 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #6
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %6) #6
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 152, i1 false)
  br label %120

62:                                               ; preds = %56
  %63 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #6
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  call void @llvm.trap() #6
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %62, %64, %79
  %82 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %34) #6
  %83 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %106

93:                                               ; preds = %86
  %94 = zext i32 %92 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #6
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %93
  call void @llvm.trap() #6
  unreachable

101:                                              ; preds = %93
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %91, align 4
  br label %106

103:                                              ; preds = %81
  %104 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %105 = bitcast %"class.std::__1::unique_ptr.193"* %104 to i64*
  store i64 0, i64* %105, align 8
  br label %120

106:                                              ; preds = %86, %101
  %107 = phi i32 [ %102, %101 ], [ %92, %86 ]
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %109 = bitcast %"class.std::__1::unique_ptr.193"* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = load atomic i32, i32* %87 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %115 = add i32 %107, -1
  store i32 %115, i32* %114, align 4
  br label %116

116:                                              ; preds = %113, %106
  %117 = phi i32 [ %115, %113 ], [ %107, %106 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #6
  br label %120

120:                                              ; preds = %119, %116, %103, %60
  %121 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #6
  br label %135

135:                                              ; preds = %120, %131, %134
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
