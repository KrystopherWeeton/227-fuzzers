; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_offset_mapping.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_offset_mapping.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1826 }
%class.scoped_refptr.1826 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1827", %"class.WTF::Vector.630", %"class.WTF::Vector.1829", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1827" = type { %"class.base::RefCounted.1828" }
%"class.base::RefCounted.1828" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1829" = type { %"class.WTF::VectorBuffer.1830" }
%"class.WTF::VectorBuffer.1830" = type { %"class.WTF::VectorBufferBase.1831" }
%"class.WTF::VectorBufferBase.1831" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1832 }
%union.anon.1832 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1812" }
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1814" }
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1840 }
%class.scoped_refptr.1840 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1850" }
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1841", %"class.WTF::Vector.1841" }
%"class.WTF::Vector.1841" = type { %"class.WTF::VectorBuffer.1842" }
%"class.WTF::VectorBuffer.1842" = type { %"class.WTF::VectorBufferBase.1843" }
%"class.WTF::VectorBufferBase.1843" = type { %class.scoped_refptr.1840*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1816" }
%"class.WTF::Vector.1816" = type { %"class.WTF::VectorBuffer.1817" }
%"class.WTF::VectorBuffer.1817" = type { %"class.WTF::VectorBufferBase.1818" }
%"class.WTF::VectorBufferBase.1818" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1821", %"class.absl::optional.1821", %"class.absl::optional.1821" }
%"class.absl::optional.1821" = type { %"class.absl::optional_internal::optional_data.1822" }
%"class.absl::optional_internal::optional_data.1822" = type { %"class.absl::optional_internal::optional_data_base.1823" }
%"class.absl::optional_internal::optional_data_base.1823" = type { %"class.absl::optional_internal::optional_data_dtor_base.1824" }
%"class.absl::optional_internal::optional_data_dtor_base.1824" = type { i8, %union.anon.1825 }
%union.anon.1825 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1836" }
%"class.WTF::VectorBuffer.1836" = type { %"class.WTF::VectorBufferBase.1837", [32 x i8] }
%"class.WTF::VectorBufferBase.1837" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1682", %"class.WTF::HashMap.1687", %"class.WTF::String" }
%"class.WTF::Vector.1682" = type { %"class.WTF::VectorBuffer.1683" }
%"class.WTF::VectorBuffer.1683" = type { %"class.WTF::VectorBufferBase.1684" }
%"class.WTF::VectorBufferBase.1684" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.WTF::HashMap.1687" = type { %"class.WTF::HashTable.1688" }
%"class.WTF::HashTable.1688" = type <{ %"struct.WTF::KeyValuePair.1691"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1691" = type { %"class.blink::Persistent.1692", %"struct.std::__1::pair.1695" }
%"class.blink::Persistent.1692" = type { %"class.blink::PersistentBase.1693" }
%"class.blink::PersistentBase.1693" = type { %"class.blink::Node"*, %"class.blink::PersistentNodePtr.1694" }
%"class.blink::PersistentNodePtr.1694" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::pair.1695" = type { i32, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1675", %"class.std::__1::unique_ptr.1699" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1632", %"class.std::__1::unique_ptr.1637", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1658, %"class.blink::Persistent.1659" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1632" = type { %"class.WTF::VectorBuffer.1633" }
%"class.WTF::VectorBuffer.1633" = type { %"class.WTF::VectorBufferBase.1634", [8 x i8] }
%"class.WTF::VectorBufferBase.1634" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1640", %"class.absl::optional.1645", %"class.absl::optional.1650" }
%"class.absl::optional.1640" = type { %"class.absl::optional_internal::optional_data.1641" }
%"class.absl::optional_internal::optional_data.1641" = type { %"class.absl::optional_internal::optional_data_base.1642" }
%"class.absl::optional_internal::optional_data_base.1642" = type { %"class.absl::optional_internal::optional_data_dtor_base.1643" }
%"class.absl::optional_internal::optional_data_dtor_base.1643" = type { i8, %union.anon.1644 }
%union.anon.1644 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1645" = type { %"class.absl::optional_internal::optional_data.1646" }
%"class.absl::optional_internal::optional_data.1646" = type { %"class.absl::optional_internal::optional_data_base.1647" }
%"class.absl::optional_internal::optional_data_base.1647" = type { %"class.absl::optional_internal::optional_data_dtor_base.1648" }
%"class.absl::optional_internal::optional_data_dtor_base.1648" = type { i8, [3 x i8], %union.anon.1649 }
%union.anon.1649 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1650" = type { %"class.absl::optional_internal::optional_data.1651" }
%"class.absl::optional_internal::optional_data.1651" = type { %"class.absl::optional_internal::optional_data_base.1652" }
%"class.absl::optional_internal::optional_data_base.1652" = type { %"class.absl::optional_internal::optional_data_dtor_base.1653" }
%"class.absl::optional_internal::optional_data_dtor_base.1653" = type { i8, %union.anon.1654 }
%union.anon.1654 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1658 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1659" = type { %"class.blink::PersistentBase.1660" }
%"class.blink::PersistentBase.1660" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1663", %"struct.blink::PhysicalRect", %"class.blink::Member.1673" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1663" = type { %"class.std::__1::__compressed_pair.1664" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1665" }
%"struct.std::__1::__compressed_pair_elem.1665" = type { %"class.WTF::HashSet.1666"* }
%"class.WTF::HashSet.1666" = type { %"class.WTF::HashTable.1667" }
%"class.WTF::HashTable.1667" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1675" = type { %"class.blink::PersistentBase.1676" }
%"class.blink::PersistentBase.1676" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1679", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"class.blink::NGOffsetMapping"* }
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1702", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1702" = type { %"class.WTF::HashTable.1705", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1705" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1708", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1708" = type { %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.1710" }
%"struct.std::__1::__compressed_pair_elem.1710" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1711, %"class.std::__1::unique_ptr.1712", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1711 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1730", i16, %class.scoped_refptr.1711 }
%"class.WTF::ThreadSafeRefCounted.1730" = type { %"class.base::RefCountedThreadSafe.1731" }
%"class.base::RefCountedThreadSafe.1731" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.WTF::Vector.1715"* }
%"class.WTF::Vector.1715" = type { %"class.WTF::VectorBuffer.1716" }
%"class.WTF::VectorBuffer.1716" = type { %"class.WTF::VectorBufferBase.1717" }
%"class.WTF::VectorBufferBase.1717" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1726, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1726 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1853", %"class.blink::Member.1855", %"class.blink::Member.1857", %"class.blink::Member.1876", %"class.blink::Member.1878" }
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.1855" = type { %"class.blink::MemberBase.1856" }
%"class.blink::MemberBase.1856" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1861", %"class.blink::HeapHashSet.1870" }
%"class.blink::HeapVector.1861" = type { %"class.WTF::Vector.1864" }
%"class.WTF::Vector.1864" = type { %"class.WTF::VectorBuffer.1865" }
%"class.WTF::VectorBuffer.1865" = type { %"class.WTF::VectorBufferBase.1866" }
%"class.WTF::VectorBufferBase.1866" = type { %"class.blink::Member.1867"*, i32, i32 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1870" = type { %"class.WTF::HashSet.1873" }
%"class.WTF::HashSet.1873" = type { %"class.WTF::HashTable.1874" }
%"class.WTF::HashTable.1874" = type <{ %"class.blink::Member.1867"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1878" = type { %"class.blink::MemberBase.1879" }
%"class.blink::MemberBase.1879" = type { %"class.blink::HeapHashSet.1880"* }
%"class.blink::HeapHashSet.1880" = type opaque
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1738", %"class.WTF::String", %"class.std::__1::unique_ptr.1740" }
%"class.WTF::RefCounted.1738" = type { %"class.base::RefCounted.1739" }
%"class.base::RefCounted.1739" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1743", %"class.std::__1::unique_ptr.1754", %"class.WTF::Vector.1760", i8, i32 }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"class.WTF::Vector.1746"* }
%"class.WTF::Vector.1746" = type { %"class.WTF::VectorBuffer.1747" }
%"class.WTF::VectorBuffer.1747" = type { %"class.WTF::VectorBufferBase.1748" }
%"class.WTF::VectorBufferBase.1748" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1754" = type { %"class.std::__1::__compressed_pair.1755" }
%"class.std::__1::__compressed_pair.1755" = type { %"struct.std::__1::__compressed_pair_elem.1756" }
%"struct.std::__1::__compressed_pair_elem.1756" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1760" = type { %"class.WTF::VectorBuffer.1761" }
%"class.WTF::VectorBuffer.1761" = type { %"class.WTF::VectorBufferBase.1748", [32 x i8] }
%"class.blink::LayoutTextFragment" = type { %"class.blink::LayoutText", i32, i32, i8, %class.scoped_refptr.5, %"class.blink::UntracedMember.1735" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1733 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1733 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.1734" }
%"class.blink::InlineBoxList.1734" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::UntracedMember.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::FirstLetterPseudoElement"* }
%"class.blink::FirstLetterPseudoElement" = type opaque
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1737 }
%class.scoped_refptr.1737 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK3WTF7HashMapIN5blink10PersistentIKNS1_4NodeEEENSt3__14pairIjjEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS_18PartitionAllocatorEE2atERKPS4_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_ = comdat any

$_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm = comdat any

$_ZNK3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE4findEPS4_ = comdat any

@.str = private unnamed_addr constant [22 x i8] c"begin != units_.end()\00", align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/core/layout/ng/inline/ng_offset_mapping.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"result != units_.end()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"result != units_.begin()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGOffsetMappingUnit]\00", align 1

@_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj = hidden unnamed_addr alias void (%"class.blink::NGOffsetMappingUnit"*, i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32), void (%"class.blink::NGOffsetMappingUnit"*, i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32)* @_ZN5blink19NGOffsetMappingUnitC2ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj
@_ZN5blink15NGOffsetMappingC1EON3WTF6VectorINS_19NGOffsetMappingUnitELj0ENS1_18PartitionAllocatorEEEONS1_7HashMapINS_10PersistentIKNS_4NodeEEENSt3__14pairIjjEENS1_10MemberHashISA_EENS1_10HashTraitsISB_EENSH_ISE_EES4_EENS1_6StringE = hidden unnamed_addr alias void (%"class.blink::NGOffsetMapping"*, %"class.WTF::Vector.1682"*, %"class.WTF::HashMap.1687"*, %"class.WTF::StringImpl"*), void (%"class.blink::NGOffsetMapping"*, %"class.WTF::Vector.1682"*, %"class.WTF::HashMap.1687"*, %"class.WTF::StringImpl"*)* @_ZN5blink15NGOffsetMappingC2EON3WTF6VectorINS_19NGOffsetMappingUnitELj0ENS1_18PartitionAllocatorEEEONS1_7HashMapINS_10PersistentIKNS_4NodeEEENSt3__14pairIjjEENS1_10MemberHashISA_EENS1_10HashTraitsISB_EENSH_ISE_EES4_EENS1_6StringE
@_ZN5blink15NGOffsetMappingD1Ev = hidden unnamed_addr alias void (%"class.blink::NGOffsetMapping"*), void (%"class.blink::NGOffsetMapping"*)* @_ZN5blink15NGOffsetMappingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlockFlow"* @_ZN5blink27NGInlineFormattingContextOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %4 = or i8 %3, %2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %6 = or i8 %4, %5
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %1
  %11 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink15NGOffsetMapping28GetInlineFormattingContextOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0)
  %12 = icmp eq %"class.blink::LayoutBlockFlow"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.blink::LayoutBlockFlow"* %11 to i1 (%"class.blink::LayoutObject"*, i32)***
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, i64 92
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::LayoutObject"* %14, i32 30) #10
  %20 = select i1 %19, %"class.blink::LayoutBlockFlow"* %11, %"class.blink::LayoutBlockFlow"* null
  ret %"class.blink::LayoutBlockFlow"* %20

21:                                               ; preds = %1, %10
  ret %"class.blink::LayoutBlockFlow"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlockFlow"* @_ZN5blink15NGOffsetMapping28GetInlineFormattingContextOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %105, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 4
  %10 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %40, label %12

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %15, label %105

15:                                               ; preds = %12
  %16 = and i32 %7, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %15
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %105, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 134217728
  %36 = icmp eq i96 %35, 0
  %37 = and i96 %34, 1107296256
  %38 = icmp eq i96 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %105, label %76

40:                                               ; preds = %5
  switch i32 %11, label %44 [
    i32 0, label %41
    i32 1, label %79
  ]

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  br label %79

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1
  %46 = bitcast %"class.blink::Node"* %45 to i8*
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %68, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.blink::TraceWrapperV8Reference"* %50 to %"class.blink::ParkableStringImpl"**
  %52 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %51, align 8
  %53 = icmp eq %"class.blink::ParkableStringImpl"* %52, null
  br i1 %53, label %79, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %55, align 8
  %57 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %56, null
  br i1 %57, label %58, label %65

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %52, i64 0, i32 1, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  br label %79

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %56, i64 0, i32 8
  %67 = load i32, i32* %66, align 4
  br label %79

68:                                               ; preds = %44
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 1, i32 1
  %70 = bitcast i32* %69 to %"class.WTF::StringImpl"**
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  br label %79

76:                                               ; preds = %31
  %77 = icmp ne i32 %11, 1
  %78 = zext i1 %77 to i32
  br label %79

79:                                               ; preds = %40, %41, %49, %58, %62, %65, %68, %73, %76
  %80 = phi i32 [ %43, %41 ], [ 0, %49 ], [ %67, %65 ], [ %64, %62 ], [ 0, %58 ], [ %75, %73 ], [ 0, %68 ], [ 0, %40 ], [ %78, %76 ]
  %81 = tail call %"class.blink::LayoutObject"* @_ZN5blink24AssociatedLayoutObjectOfERKNS_4NodeEiNS_16LayoutObjectSideE(%"class.blink::Node"* nonnull dereferenceable(64) %3, i32 %80, i32 0) #10
  %82 = icmp eq %"class.blink::LayoutObject"* %81, null
  br i1 %82, label %105, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %81, i64 0, i32 7
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  %86 = icmp eq %"class.blink::LayoutObject"* %85, null
  br i1 %86, label %105, label %87

87:                                               ; preds = %83, %99
  %88 = phi %"class.blink::LayoutObject"* [ %101, %99 ], [ %85, %83 ]
  %89 = bitcast %"class.blink::LayoutObject"* %88 to i1 (%"class.blink::LayoutObject"*)***
  %90 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %90, i64 24
  %92 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, align 8
  %93 = tail call zeroext i1 %92(%"class.blink::LayoutObject"* nonnull %88) #10
  br i1 %93, label %94, label %99

94:                                               ; preds = %87
  %95 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %89, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %95, i64 25
  %97 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* nonnull %88) #10
  br i1 %98, label %99, label %103

99:                                               ; preds = %94, %87
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %88, i64 0, i32 7
  %101 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %102 = icmp eq %"class.blink::LayoutObject"* %101, null
  br i1 %102, label %105, label %87

103:                                              ; preds = %94
  %104 = bitcast %"class.blink::LayoutObject"* %88 to %"class.blink::LayoutBlockFlow"*
  br label %105

105:                                              ; preds = %99, %12, %31, %25, %1, %103, %83, %79
  %106 = phi %"class.blink::LayoutBlockFlow"* [ null, %79 ], [ %104, %103 ], [ null, %83 ], [ null, %1 ], [ null, %25 ], [ null, %31 ], [ null, %12 ], [ null, %99 ]
  ret %"class.blink::LayoutBlockFlow"* %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink15NGOffsetMapping15AcceptsPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 12
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %15, label %43

15:                                               ; preds = %10
  %16 = and i32 %7, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %15
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 134217728
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = and i96 %34, 33554432
  %39 = icmp eq i96 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = and i96 %34, 1073741824
  %42 = icmp ne i96 %41, 0
  br label %43

43:                                               ; preds = %37, %31, %10, %25, %40, %5, %1
  %44 = phi i1 [ false, %1 ], [ true, %5 ], [ false, %25 ], [ false, %31 ], [ true, %37 ], [ %42, %40 ], [ false, %10 ]
  ret i1 %44
}

declare %"class.blink::LayoutObject"* @_ZN5blink24AssociatedLayoutObjectOfERKNS_4NodeEiNS_16LayoutObjectSideE(%"class.blink::Node"* dereferenceable(64), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlockFlow"* @_ZN5blink15NGOffsetMapping28GetInlineFormattingContextOfERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1, %17
  %6 = phi %"class.blink::LayoutObject"* [ %19, %17 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 24
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6) #10
  br i1 %11, label %12, label %17

12:                                               ; preds = %5
  %13 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, i64 25
  %15 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* nonnull %6) #10
  br i1 %16, label %17, label %21

17:                                               ; preds = %12, %5
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 7
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %23, label %5

21:                                               ; preds = %12
  %22 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutBlockFlow"*
  br label %23

23:                                               ; preds = %17, %1, %21
  %24 = phi %"class.blink::LayoutBlockFlow"* [ %22, %21 ], [ null, %1 ], [ null, %17 ]
  ret %"class.blink::LayoutBlockFlow"* %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink19NGOffsetMappingUnitC2ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"* nocapture, i32, %"class.blink::LayoutObject"* dereferenceable(88), i32, i32, i32, i32) unnamed_addr #4 align 2 {
  %8 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 2
  store i32 %3, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 3
  store i32 %4, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 4
  store i32 %5, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 5
  store i32 %6, i32* %13, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink19NGOffsetMappingUnit11AssertValidEv(%"class.blink::NGOffsetMappingUnit"* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink19NGOffsetMappingUnit14AssociatedNodeEv(%"class.blink::NGOffsetMappingUnit"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %23

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 33554432
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 1
  %15 = bitcast %"class.blink::LayoutObject"* %14 to i16*
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 8192
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutTextFragment"*
  %21 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %20) #10
  %22 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %21, i64 0, i32 0, i32 0
  br label %30

23:                                               ; preds = %5, %13, %7
  %24 = phi i96 [ %6, %5 ], [ %10, %13 ], [ %10, %7 ]
  %25 = and i96 %24, 16777216
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %30

30:                                               ; preds = %27, %23, %19
  %31 = phi %"class.blink::Node"* [ %22, %19 ], [ %29, %27 ], [ null, %23 ]
  ret %"class.blink::Node"* %31
}

declare %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.blink::Node"* @_ZNK5blink19NGOffsetMappingUnit8GetOwnerEv(%"class.blink::NGOffsetMappingUnit"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %23

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 33554432
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 1
  %15 = bitcast %"class.blink::LayoutObject"* %14 to i16*
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 8192
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutTextFragment"*
  %21 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %20) #10
  %22 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %21, i64 0, i32 0, i32 0
  br label %30

23:                                               ; preds = %13, %7, %5
  %24 = phi i96 [ %6, %5 ], [ %10, %13 ], [ %10, %7 ]
  %25 = and i96 %24, 16777216
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %30

30:                                               ; preds = %19, %23, %27
  %31 = phi %"class.blink::Node"* [ %22, %19 ], [ %29, %27 ], [ null, %23 ]
  ret %"class.blink::Node"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19NGOffsetMappingUnit11ConcatenateERKS0_(%"class.blink::NGOffsetMappingUnit"* nocapture, %"class.blink::NGOffsetMappingUnit"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 1
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %1, i64 0, i32 1
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %4, %6
  br i1 %7, label %8, label %58

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %58

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %58

26:                                               ; preds = %20
  %27 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %27, label %53, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 33554432
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 1
  %36 = bitcast %"class.blink::LayoutObject"* %35 to i16*
  %37 = load i16, i16* %36, align 8
  %38 = and i16 %37, 8192
  %39 = icmp eq i16 %38, 0
  %40 = bitcast %"class.blink::LayoutObject"* %4 to %"class.blink::LayoutTextFragment"*
  br i1 %39, label %53, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 1, i32 9
  %43 = bitcast %"class.blink::LayoutObject"** %42 to i8*
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::LayoutObject"* %4 to i32 (%"class.blink::LayoutTextFragment"*)***
  %48 = load i32 (%"class.blink::LayoutTextFragment"*)**, i32 (%"class.blink::LayoutTextFragment"*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %48, i64 109
  %50 = load i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %49, align 8
  %51 = tail call i32 %50(%"class.blink::LayoutTextFragment"* nonnull %40) #10
  %52 = icmp eq i32 %16, %51
  br i1 %52, label %58, label %53

53:                                               ; preds = %41, %34, %26, %28, %46
  %54 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %1, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %15, align 4
  %56 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %1, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %21, align 4
  br label %58

58:                                               ; preds = %46, %20, %14, %8, %2, %53
  %59 = phi i1 [ true, %53 ], [ false, %2 ], [ false, %8 ], [ false, %14 ], [ false, %20 ], [ false, %46 ]
  ret i1 %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink19NGOffsetMappingUnit29ConvertDOMOffsetToTextContentEj(%"class.blink::NGOffsetMappingUnit"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  br label %25

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  br label %25

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = sub i32 %1, %4
  %24 = add i32 %23, %18
  br label %25

25:                                               ; preds = %16, %22, %13, %6
  %26 = phi i32 [ %8, %6 ], [ %15, %13 ], [ %24, %22 ], [ %18, %16 ]
  ret i32 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink19NGOffsetMappingUnit34ConvertTextContentToFirstDOMOffsetEj(%"class.blink::NGOffsetMappingUnit"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  br label %26

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = sub i32 %1, %4
  %19 = add i32 %18, %17
  br label %26

20:                                               ; preds = %11
  %21 = icmp ugt i32 %6, %1
  %22 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 3
  %24 = select i1 %21, i32* %22, i32* %23
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %20, %15, %8
  %27 = phi i32 [ %10, %8 ], [ %19, %15 ], [ %25, %20 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink19NGOffsetMappingUnit33ConvertTextContentToLastDOMOffsetEj(%"class.blink::NGOffsetMappingUnit"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  br label %26

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = sub i32 %1, %4
  %19 = add i32 %18, %17
  br label %26

20:                                               ; preds = %11
  %21 = icmp ugt i32 %6, %1
  %22 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %0, i64 0, i32 3
  %24 = select i1 %21, i32* %22, i32* %23
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %20, %15, %8
  %27 = phi i32 [ %10, %8 ], [ %19, %15 ], [ %25, %20 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %4 = or i8 %3, %2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %6 = or i8 %4, %5
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %61, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %61, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 12
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %49, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  %23 = icmp ult i32 %22, 2
  br i1 %23, label %24, label %61

24:                                               ; preds = %19
  %25 = and i32 %16, 1
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 6, i32 0, i32 0
  br i1 %26, label %32, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::NodeData"** %27 to %"class.blink::NodeRareData"**
  %30 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %30, i64 0, i32 1, i32 0, i32 0
  br label %34

32:                                               ; preds = %24
  %33 = bitcast %"class.blink::NodeData"** %27 to %"class.blink::NodeRenderingData"**
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi %"class.blink::NodeRenderingData"** [ %31, %28 ], [ %33, %32 ]
  %36 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %36, i64 0, i32 1
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 4
  %42 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %41 to i96*
  %43 = load i96, i96* %42, align 4
  %44 = and i96 %43, 134217728
  %45 = icmp eq i96 %44, 0
  %46 = and i96 %43, 1107296256
  %47 = icmp eq i96 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %61, label %49

49:                                               ; preds = %40, %14
  %50 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink15NGOffsetMapping28GetInlineFormattingContextOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16) %0) #10
  %51 = icmp eq %"class.blink::LayoutBlockFlow"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.blink::LayoutBlockFlow"* %50 to i1 (%"class.blink::LayoutObject"*, i32)***
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %53, i32 30) #10
  br i1 %58, label %59, label %61

59:                                               ; preds = %52
  %60 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* nonnull %50) #10
  br label %61

61:                                               ; preds = %1, %49, %52, %19, %40, %34, %10, %59
  %62 = phi %"class.blink::NGOffsetMapping"* [ null, %1 ], [ %60, %59 ], [ null, %10 ], [ null, %34 ], [ null, %40 ], [ null, %19 ], [ null, %52 ], [ null, %49 ]
  ret %"class.blink::NGOffsetMapping"* %62
}

declare %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %4 = or i8 %3, %2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %6 = or i8 %4, %5
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = icmp eq i8 %8, 0
  %10 = icmp eq %"class.blink::LayoutObject"* %0, null
  %11 = or i1 %10, %9
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* nonnull %0) #10
  %14 = icmp eq %"class.blink::LayoutBlockFlow"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* nonnull %13) #10
  br label %17

17:                                               ; preds = %1, %15, %12
  %18 = phi %"class.blink::NGOffsetMapping"* [ null, %1 ], [ %16, %15 ], [ null, %12 ]
  ret %"class.blink::NGOffsetMapping"* %18
}

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NGOffsetMappingC2EON3WTF6VectorINS_19NGOffsetMappingUnitELj0ENS1_18PartitionAllocatorEEEONS1_7HashMapINS_10PersistentIKNS_4NodeEEENSt3__14pairIjjEENS1_10MemberHashISA_EENS1_10HashTraitsISB_EENSH_ISE_EES4_EENS1_6StringE(%"class.blink::NGOffsetMapping"* nocapture, %"class.WTF::Vector.1682"* nocapture dereferenceable(16), %"class.WTF::HashMap.1687"* nocapture dereferenceable(24), %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.1682"* %1 to i64*
  %8 = bitcast %"class.blink::NGOffsetMapping"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #10
  %9 = load i64, i64* %7, align 8
  %10 = bitcast %"class.blink::NGOffsetMapping"* %0 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1682", %"class.WTF::Vector.1682"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %5, align 4
  store i32 %12, i32* %11, align 4
  %14 = getelementptr inbounds %"class.WTF::Vector.1682", %"class.WTF::Vector.1682"* %1, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %6, align 4
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %6, align 4
  store i32 %15, i32* %14, align 4
  %17 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1, i32 0, i32 2
  %20 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1, i32 0, i32 3
  %21 = bitcast %"class.WTF::HashMap.1687"* %2 to i64*
  %22 = bitcast %"class.WTF::HashMap.1687"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #10
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::HashMap.1687"* %17 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::HashMap.1687", %"class.WTF::HashMap.1687"* %2, i64 0, i32 0, i32 1
  %26 = load i32, i32* %18, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %18, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::HashMap.1687", %"class.WTF::HashMap.1687"* %2, i64 0, i32 0, i32 2
  %29 = load i32, i32* %19, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %19, align 4
  store i32 %29, i32* %28, align 4
  %31 = load i32, i32* %20, align 8
  %32 = and i32 %31, 2147483647
  %33 = getelementptr inbounds %"class.WTF::HashMap.1687", %"class.WTF::HashMap.1687"* %2, i64 0, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 2147483647
  %36 = and i32 %31, -2147483648
  %37 = or i32 %35, %36
  store i32 %37, i32* %20, align 8
  %38 = load i32, i32* %33, align 8
  %39 = and i32 %38, -2147483648
  %40 = or i32 %39, %32
  store i32 %40, i32* %33, align 8
  %41 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %41, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %42, label %72, label %43

43:                                               ; preds = %4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %60

50:                                               ; preds = %43
  %51 = zext i32 %49 to i33
  %52 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #10
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !3

57:                                               ; preds = %50
  tail call void @llvm.trap() #10
  unreachable

58:                                               ; preds = %50
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %48, align 4
  br label %60

60:                                               ; preds = %43, %58
  %61 = phi i32 [ %59, %58 ], [ %49, %43 ]
  %62 = load atomic i32, i32* %44 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %67 = add i32 %61, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %60
  %69 = phi i32 [ %67, %65 ], [ %61, %60 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %72

72:                                               ; preds = %4, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15NGOffsetMappingD2Ev(%"class.blink::NGOffsetMapping"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"** %19, align 8
  %21 = icmp eq %"struct.WTF::KeyValuePair.1691"* %20, null
  br i1 %21, label %49, label %22, !prof !4

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %47, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %44, %26
  %29 = phi i64 [ 0, %26 ], [ %45, %44 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %20, i64 %29, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, inttoptr (i64 -1 to %"class.blink::Node"*)
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %20, i64 %29, i32 0, i32 0, i32 1, i32 0
  %35 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  %36 = icmp eq %"class.blink::PersistentNode"* %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %39 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %38, i64 0, i32 0, i32 0
  %40 = bitcast %"class.blink::PersistentRegion"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %39, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %34, align 8
  br label %44

44:                                               ; preds = %37, %33, %28
  %45 = add nuw nsw i64 %29, 1
  %46 = icmp eq i64 %45, %27
  br i1 %46, label %47, label %28

47:                                               ; preds = %44, %22
  %48 = bitcast %"struct.WTF::KeyValuePair.1691"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #10
  store %"struct.WTF::KeyValuePair.1691"* null, %"struct.WTF::KeyValuePair.1691"** %19, align 8
  br label %49

49:                                               ; preds = %18, %47
  %50 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %50, align 8
  %52 = icmp eq %"class.blink::NGOffsetMappingUnit"* %51, null
  %53 = bitcast %"class.blink::NGOffsetMappingUnit"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !4

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #10
  store %"class.blink::NGOffsetMappingUnit"* null, %"class.blink::NGOffsetMappingUnit"** %50, align 8
  br label %60

60:                                               ; preds = %49, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping25GetMappingUnitForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %12, label %50

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %18 [
    i32 0, label %15
    i32 1, label %55
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  br label %55

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %20 = bitcast %"class.blink::Node"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %24 to %"class.blink::ParkableStringImpl"**
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %29, align 8
  %31 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  br label %55

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, i64 0, i32 8
  %41 = load i32, i32* %40, align 4
  br label %55

42:                                               ; preds = %18
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %44 = bitcast i32* %43 to %"class.WTF::StringImpl"**
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br label %55

50:                                               ; preds = %7, %2
  %51 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 1
  %54 = zext i1 %53 to i32
  br label %55

55:                                               ; preds = %12, %15, %23, %32, %36, %39, %42, %47, %50
  %56 = phi i32 [ %17, %15 ], [ 0, %23 ], [ %41, %39 ], [ %38, %36 ], [ 0, %32 ], [ %49, %47 ], [ 0, %42 ], [ 0, %12 ], [ %54, %50 ]
  %57 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1
  %58 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  store %"class.blink::Node"* %5, %"class.blink::Node"** %3, align 8
  %59 = call i64 @_ZNK3WTF7HashMapIN5blink10PersistentIKNS1_4NodeEEENSt3__14pairIjjEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS_18PartitionAllocatorEE2atERKPS4_(%"class.WTF::HashMap.1687"* %57, %"class.blink::Node"** nonnull dereferenceable(8) %3)
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %103, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0
  %66 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %65, i32 %60) #10
  %67 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %66, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = icmp ugt i32 %68, %56
  br i1 %69, label %103, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %71, align 8
  %73 = and i64 %59, 4294967295
  %74 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %72, i64 %73
  %75 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %72, i64 %61
  %76 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %75 to i64
  %77 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %74 to i64
  %78 = sub i64 %76, %77
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %70
  %81 = ashr exact i64 %78, 5
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ %81, %80 ], [ %94, %82 ]
  %84 = phi %"class.blink::NGOffsetMappingUnit"* [ %74, %80 ], [ %93, %82 ]
  %85 = lshr i64 %83, 1
  %86 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %84, i64 1
  %87 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %84, i64 %85, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = icmp ugt i32 %88, %56
  %90 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %86, i64 %85
  %91 = xor i64 %85, -1
  %92 = add i64 %83, %91
  %93 = select i1 %89, %"class.blink::NGOffsetMappingUnit"* %84, %"class.blink::NGOffsetMappingUnit"* %90
  %94 = select i1 %89, i64 %85, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %82

96:                                               ; preds = %82, %70
  %97 = phi %"class.blink::NGOffsetMappingUnit"* [ %74, %70 ], [ %93, %82 ]
  %98 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %97, i64 -1
  %99 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %97, i64 -1, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = icmp ult i32 %100, %56
  %102 = select i1 %101, %"class.blink::NGOffsetMappingUnit"* null, %"class.blink::NGOffsetMappingUnit"* %98
  br label %103

103:                                              ; preds = %55, %64, %96
  %104 = phi %"class.blink::NGOffsetMappingUnit"* [ %102, %96 ], [ null, %64 ], [ null, %55 ]
  ret %"class.blink::NGOffsetMappingUnit"* %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK3WTF7HashMapIN5blink10PersistentIKNS1_4NodeEEENSt3__14pairIjjEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS_18PartitionAllocatorEE2atERKPS4_(%"class.WTF::HashMap.1687"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  %4 = ptrtoint %"class.blink::Node"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.1687", %"class.WTF::HashMap.1687"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.1691"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.1687", %"class.WTF::HashMap.1687"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %74, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.1691"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1691"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %68, i64 0, i32 1
  %72 = bitcast %"struct.std::__1::pair.1695"* %71 to i64*
  %73 = load i64, i64* %72, align 4
  br label %74

74:                                               ; preds = %52, %2, %67, %70
  %75 = phi i64 [ %73, %70 ], [ 0, %67 ], [ 0, %2 ], [ 0, %52 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NGOffsetMapping26GetMappingUnitsForDOMRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.WTF::Vector.1682"* noalias nocapture sret, %"class.blink::NGOffsetMapping"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::Node"*, align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::EphemeralRangeTemplate"* %2) #10
  %12 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %13 = load i64, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %14 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::EphemeralRangeTemplate"* %2) #10
  %15 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %61, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 12
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %23, label %61

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  switch i32 %25, label %29 [
    i32 0, label %26
    i32 1, label %66
  ]

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  br label %66

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1
  %31 = bitcast %"class.blink::Node"* %30 to i8*
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 0, i32 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.blink::ParkableStringImpl"**
  %37 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %36, align 8
  %38 = icmp eq %"class.blink::ParkableStringImpl"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %40, align 8
  %42 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %37, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %66, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br label %66

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %41, i64 0, i32 8
  %52 = load i32, i32* %51, align 4
  br label %66

53:                                               ; preds = %29
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 1
  %55 = bitcast i32* %54 to %"class.WTF::StringImpl"**
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  br label %66

61:                                               ; preds = %18, %3
  %62 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp ne i32 %63, 1
  %65 = zext i1 %64 to i32
  br label %66

66:                                               ; preds = %23, %26, %34, %43, %47, %50, %53, %58, %61
  %67 = phi i32 [ %28, %26 ], [ 0, %34 ], [ %52, %50 ], [ %49, %47 ], [ 0, %43 ], [ %60, %58 ], [ 0, %53 ], [ 0, %23 ], [ %65, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  %68 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #10
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::EphemeralRangeTemplate"* %2) #10
  %69 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %115, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 12
  %76 = icmp eq i32 %75, 4
  br i1 %76, label %77, label %115

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  switch i32 %79, label %83 [
    i32 0, label %80
    i32 1, label %120
  ]

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  br label %120

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 1
  %85 = bitcast %"class.blink::Node"* %84 to i8*
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %107, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 1, i32 0, i32 0, i32 1
  %90 = bitcast %"class.blink::TraceWrapperV8Reference"* %89 to %"class.blink::ParkableStringImpl"**
  %91 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %90, align 8
  %92 = icmp eq %"class.blink::ParkableStringImpl"* %91, null
  br i1 %92, label %120, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0
  %95 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %94, align 8
  %96 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %95, null
  br i1 %96, label %97, label %104

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %91, i64 0, i32 1, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %120, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  br label %120

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %95, i64 0, i32 8
  %106 = load i32, i32* %105, align 4
  br label %120

107:                                              ; preds = %83
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 1, i32 1
  %109 = bitcast i32* %108 to %"class.WTF::StringImpl"**
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %120, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  br label %120

115:                                              ; preds = %72, %66
  %116 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = icmp ne i32 %117, 1
  %119 = zext i1 %118 to i32
  br label %120

120:                                              ; preds = %77, %80, %88, %97, %101, %104, %107, %112, %115
  %121 = phi i32 [ %82, %80 ], [ 0, %88 ], [ %106, %104 ], [ %103, %101 ], [ 0, %97 ], [ %114, %112 ], [ 0, %107 ], [ 0, %77 ], [ %119, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #10
  %122 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 1
  %123 = bitcast %"class.blink::Node"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #10
  %124 = bitcast %"class.blink::Node"** %8 to i64*
  store i64 %13, i64* %124, align 8
  %125 = call i64 @_ZNK3WTF7HashMapIN5blink10PersistentIKNS1_4NodeEEENSt3__14pairIjjEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS_18PartitionAllocatorEE2atERKPS4_(%"class.WTF::HashMap.1687"* %122, %"class.blink::Node"** nonnull dereferenceable(8) %8)
  %126 = trunc i64 %125 to i32
  %127 = lshr i64 %125, 32
  %128 = trunc i64 %127 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #10
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %142, label %130

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0
  %132 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %131, i32 %126) #10
  %133 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %132, i64 0, i32 2
  %134 = load i32, i32* %133, align 8
  %135 = icmp ugt i32 %134, %121
  br i1 %135, label %142, label %136

136:                                              ; preds = %130
  %137 = add i32 %128, -1
  %138 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %131, i32 %137) #10
  %139 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %138, i64 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = icmp ult i32 %140, %67
  br i1 %141, label %142, label %144

142:                                              ; preds = %136, %130, %120
  %143 = bitcast %"class.WTF::Vector.1682"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 16, i1 false) #10
  br label %334

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %146 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %145, align 8
  %147 = and i64 %125, 4294967295
  %148 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %146, i64 %147
  %149 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %146, i64 %127
  %150 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %149 to i64
  %151 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %148 to i64
  %152 = sub i64 %150, %151
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %192, label %154

154:                                              ; preds = %144
  %155 = ashr exact i64 %152, 5
  br label %156

156:                                              ; preds = %156, %154
  %157 = phi i64 [ %155, %154 ], [ %168, %156 ]
  %158 = phi %"class.blink::NGOffsetMappingUnit"* [ %148, %154 ], [ %167, %156 ]
  %159 = lshr i64 %157, 1
  %160 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %158, i64 1
  %161 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %158, i64 %159, i32 3
  %162 = load i32, i32* %161, align 4
  %163 = icmp ult i32 %162, %67
  %164 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %160, i64 %159
  %165 = xor i64 %159, -1
  %166 = add i64 %157, %165
  %167 = select i1 %163, %"class.blink::NGOffsetMappingUnit"* %164, %"class.blink::NGOffsetMappingUnit"* %158
  %168 = select i1 %163, i64 %166, i64 %159
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %156

170:                                              ; preds = %156
  %171 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %167 to i64
  %172 = sub i64 %150, %171
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %192, label %174

174:                                              ; preds = %170
  %175 = ashr exact i64 %172, 5
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i64 [ %175, %174 ], [ %188, %176 ]
  %178 = phi %"class.blink::NGOffsetMappingUnit"* [ %167, %174 ], [ %187, %176 ]
  %179 = lshr i64 %177, 1
  %180 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %178, i64 1
  %181 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %178, i64 %179, i32 2
  %182 = load i32, i32* %181, align 8
  %183 = icmp ugt i32 %182, %121
  %184 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %180, i64 %179
  %185 = xor i64 %179, -1
  %186 = add i64 %177, %185
  %187 = select i1 %183, %"class.blink::NGOffsetMappingUnit"* %178, %"class.blink::NGOffsetMappingUnit"* %184
  %188 = select i1 %183, i64 %179, i64 %186
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %176

190:                                              ; preds = %176
  %191 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %187 to i64
  br label %192

192:                                              ; preds = %144, %190, %170
  %193 = phi %"class.blink::NGOffsetMappingUnit"* [ %167, %190 ], [ %167, %170 ], [ %148, %144 ]
  %194 = phi i64 [ %171, %190 ], [ %171, %170 ], [ %151, %144 ]
  %195 = phi i64 [ %191, %190 ], [ %171, %170 ], [ %151, %144 ]
  %196 = phi %"class.blink::NGOffsetMappingUnit"* [ %187, %190 ], [ %167, %170 ], [ %148, %144 ]
  %197 = sub i64 %195, %194
  %198 = lshr exact i64 %197, 5
  %199 = trunc i64 %198 to i32
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %208, label %201, !prof !3

201:                                              ; preds = %192
  %202 = and i64 %198, 4294967295
  %203 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %202) #10
  %204 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %203, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  %205 = ptrtoint i8* %204 to i64
  %206 = lshr i64 %203, 5
  %207 = trunc i64 %206 to i32
  br label %208

208:                                              ; preds = %192, %201
  %209 = phi i32 [ %207, %201 ], [ 0, %192 ]
  %210 = phi i64 [ %205, %201 ], [ 0, %192 ]
  %211 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %193, %196
  br i1 %211, label %212, label %215

212:                                              ; preds = %208
  %213 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %214 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #10
  br label %215

215:                                              ; preds = %208, %212
  %216 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #10
  %217 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %218 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.blink::NGOffsetMappingUnit"* %193, %"class.blink::NGOffsetMappingUnit"* %193, %"class.blink::NGOffsetMappingUnit"* %196) #10
  %219 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #10
  %220 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %221 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.blink::NGOffsetMappingUnit"* %193, %"class.blink::NGOffsetMappingUnit"* %196, %"class.blink::NGOffsetMappingUnit"* %196) #10
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %10) #10
  %222 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %217, align 8
  %223 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %220, align 8
  %224 = icmp eq %"class.blink::NGOffsetMappingUnit"* %222, %223
  br i1 %224, label %225, label %232

225:                                              ; preds = %317, %215
  %226 = phi i32 [ 0, %215 ], [ %329, %317 ]
  %227 = phi i32 [ %209, %215 ], [ %318, %317 ]
  %228 = phi i64 [ %210, %215 ], [ %319, %317 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #10
  %229 = getelementptr inbounds %"class.WTF::Vector.1682", %"class.WTF::Vector.1682"* %0, i64 0, i32 0, i32 0, i32 1
  %230 = getelementptr inbounds %"class.WTF::Vector.1682", %"class.WTF::Vector.1682"* %0, i64 0, i32 0, i32 0, i32 2
  %231 = bitcast %"class.WTF::Vector.1682"* %0 to i64*
  store atomic i64 %228, i64* %231 monotonic, align 8
  store i32 %227, i32* %229, align 8
  store i32 %226, i32* %230, align 4
  br label %334

232:                                              ; preds = %215, %317
  %233 = phi i64 [ %319, %317 ], [ %210, %215 ]
  %234 = phi i32 [ %318, %317 ], [ %209, %215 ]
  %235 = phi i32 [ %329, %317 ], [ 0, %215 ]
  %236 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %9)
  %237 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 2
  %238 = load i32, i32* %237, align 8
  %239 = icmp ult i32 %238, %67
  %240 = select i1 %239, i32 %67, i32 %238
  %241 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 3
  %242 = load i32, i32* %241, align 4
  %243 = icmp ult i32 %121, %242
  %244 = select i1 %243, i32 %121, i32 %242
  br i1 %239, label %248, label %245

245:                                              ; preds = %232
  %246 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 4
  %247 = load i32, i32* %246, align 8
  br label %262

248:                                              ; preds = %232
  %249 = icmp eq i32 %242, %240
  br i1 %249, label %250, label %253

250:                                              ; preds = %248
  %251 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 5
  %252 = load i32, i32* %251, align 4
  br label %262

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 4
  %255 = load i32, i32* %254, align 8
  %256 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 5
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %255, %257
  br i1 %258, label %262, label %259

259:                                              ; preds = %253
  %260 = sub i32 %240, %238
  %261 = add i32 %260, %255
  br label %262

262:                                              ; preds = %245, %250, %253, %259
  %263 = phi i32 [ %247, %245 ], [ %252, %250 ], [ %261, %259 ], [ %255, %253 ]
  %264 = icmp eq i32 %244, %238
  br i1 %264, label %265, label %268

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 4
  %267 = load i32, i32* %266, align 8
  br label %281

268:                                              ; preds = %262
  br i1 %243, label %272, label %269

269:                                              ; preds = %268
  %270 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 5
  %271 = load i32, i32* %270, align 4
  br label %281

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 4
  %274 = load i32, i32* %273, align 8
  %275 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 5
  %276 = load i32, i32* %275, align 4
  %277 = icmp eq i32 %274, %276
  br i1 %277, label %281, label %278

278:                                              ; preds = %272
  %279 = sub i32 %244, %238
  %280 = add i32 %279, %274
  br label %281

281:                                              ; preds = %265, %269, %272, %278
  %282 = phi i32 [ %267, %265 ], [ %271, %269 ], [ %280, %278 ], [ %274, %272 ]
  %283 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %236, i64 0, i32 1
  %286 = bitcast %"class.blink::LayoutObject"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i32 %235, %234
  br i1 %288, label %289, label %317, !prof !3

289:                                              ; preds = %281
  %290 = add i32 %234, 1
  %291 = lshr i32 %234, 2
  %292 = add i32 %290, %291
  %293 = icmp ugt i32 %292, 4
  %294 = select i1 %293, i32 %292, i32 4
  %295 = icmp ugt i32 %294, %290
  %296 = select i1 %295, i32 %294, i32 %290
  %297 = icmp ult i32 %234, %296
  br i1 %297, label %298, label %317, !prof !4

298:                                              ; preds = %289
  %299 = icmp eq i64 %233, 0
  %300 = zext i32 %296 to i64
  %301 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %300) #10
  %302 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %301, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  br i1 %299, label %303, label %307

303:                                              ; preds = %298
  %304 = ptrtoint i8* %302 to i64
  %305 = lshr i64 %301, 5
  %306 = trunc i64 %305 to i32
  br label %317

307:                                              ; preds = %298
  %308 = lshr i64 %301, 5
  %309 = ptrtoint i8* %302 to i64
  %310 = icmp eq i8* %302, null
  %311 = inttoptr i64 %233 to i8*
  br i1 %310, label %315, label %312, !prof !3

312:                                              ; preds = %307
  %313 = zext i32 %234 to i64
  %314 = shl nuw nsw i64 %313, 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %302, i8* nonnull align 8 %311, i64 %314, i1 false) #10
  br label %315

315:                                              ; preds = %307, %312
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %311) #10
  %316 = trunc i64 %308 to i32
  br label %317

317:                                              ; preds = %281, %289, %303, %315
  %318 = phi i32 [ %306, %303 ], [ %316, %315 ], [ %234, %289 ], [ %234, %281 ]
  %319 = phi i64 [ %304, %303 ], [ %309, %315 ], [ %233, %289 ], [ %233, %281 ]
  %320 = inttoptr i64 %319 to %"class.blink::NGOffsetMappingUnit"*
  %321 = zext i32 %235 to i64
  %322 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %320, i64 %321, i32 0
  store i32 %284, i32* %322, align 8
  %323 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %320, i64 %321, i32 1
  %324 = bitcast %"class.blink::LayoutObject"** %323 to i64*
  store i64 %287, i64* %324, align 8
  %325 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %320, i64 %321, i32 2
  store i32 %240, i32* %325, align 8
  %326 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %320, i64 %321, i32 3
  store i32 %244, i32* %326, align 4
  %327 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %320, i64 %321, i32 4
  store i32 %263, i32* %327, align 8
  %328 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %320, i64 %321, i32 5
  store i32 %282, i32* %328, align 4
  %329 = add i32 %235, 1
  %330 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %9)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %10) #10
  %331 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %217, align 8
  %332 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %220, align 8
  %333 = icmp eq %"class.blink::NGOffsetMappingUnit"* %331, %332
  br i1 %333, label %225, label %232

334:                                              ; preds = %225, %142
  ret void
}

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #3

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %11 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  %12 = icmp eq %"class.blink::NGOffsetMappingUnit"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  ret %"class.blink::NGOffsetMappingUnit"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %11 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  %12 = icmp eq %"class.blink::NGOffsetMappingUnit"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %26, i64 1
  store %"class.blink::NGOffsetMappingUnit"* %27, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping22GetMappingUnitsForNodeERKNS_4NodeE(%"class.blink::NGOffsetMapping"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::HashMap.1687", %"class.WTF::HashMap.1687"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"* } @_ZNK3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE4findEPS4_(%"class.WTF::HashTable.1688"* %5, %"class.blink::Node"* %1) #10
  %7 = extractvalue { %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.1687", %"class.WTF::HashMap.1687"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair.1691"* %7, %13
  br i1 %14, label %34, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %16, align 8
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %7, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %17, i64 %20
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %7, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %17, i64 %24
  %26 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %25 to i64
  %27 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %21 to i64
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 5
  %30 = icmp ugt i32 %19, %23
  br i1 %30, label %31, label %34

31:                                               ; preds = %15
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %31, %15, %2
  %35 = phi %"class.blink::NGOffsetMappingUnit"* [ null, %2 ], [ %21, %15 ], [ %21, %31 ]
  %36 = phi i64 [ 0, %2 ], [ %29, %15 ], [ %29, %31 ]
  %37 = insertvalue { i64, %"class.blink::NGOffsetMappingUnit"* } undef, i64 %36, 0
  %38 = insertvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %37, %"class.blink::NGOffsetMappingUnit"* %35, 1
  ret { i64, %"class.blink::NGOffsetMappingUnit"* } %38
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping30GetMappingUnitsForLayoutObjectERKNS_12LayoutObjectE(%"class.blink::NGOffsetMapping"* nocapture readonly, %"class.blink::LayoutObject"* readnone dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.blink::NGOffsetMappingUnit"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  store %"class.blink::NGOffsetMappingUnit"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGOffsetMappingUnit"*), %"class.blink::NGOffsetMappingUnit"** %5, align 8
  %10 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %2, %22
  %18 = phi %"class.blink::NGOffsetMappingUnit"* [ %23, %22 ], [ %11, %2 ]
  %19 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, %1
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %18, i64 1
  %24 = icmp eq %"class.blink::NGOffsetMappingUnit"* %23, %15
  br i1 %24, label %25, label %17

25:                                               ; preds = %17, %22, %2
  %26 = phi %"class.blink::NGOffsetMappingUnit"* [ %11, %2 ], [ %18, %17 ], [ %15, %22 ]
  store %"class.blink::NGOffsetMappingUnit"* %26, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  store %"class.blink::NGOffsetMappingUnit"* %15, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = icmp eq %"class.blink::NGOffsetMappingUnit"* %26, %15
  br i1 %31, label %33, label %32

32:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %28, align 8
  br label %42

33:                                               ; preds = %25
  %34 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %9, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %35 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %29, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %34, i8* %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %37, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %38 = icmp eq i8* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 372, %"class.logging::CheckOpResult"* nonnull %6) #10
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  br label %42

42:                                               ; preds = %39, %32
  %43 = phi i8* [ %29, %32 ], [ %40, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  br label %44

44:                                               ; preds = %42, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %45 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  %46 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %45, i64 1
  %47 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %10, align 8
  %48 = load i32, i32* %12, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %47, i64 %49
  %51 = icmp eq %"class.blink::NGOffsetMappingUnit"* %46, %50
  br i1 %51, label %70, label %52

52:                                               ; preds = %44, %57
  %53 = phi %"class.blink::NGOffsetMappingUnit"* [ %58, %57 ], [ %46, %44 ]
  %54 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %53, i64 0, i32 1
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, %1
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %53, i64 1
  %59 = icmp eq %"class.blink::NGOffsetMappingUnit"* %58, %50
  br i1 %59, label %60, label %52

60:                                               ; preds = %52, %57
  %61 = phi %"class.blink::NGOffsetMappingUnit"* [ %53, %52 ], [ %50, %57 ]
  %62 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %61 to i64
  %63 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %45 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 5
  %66 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %45, %61
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10
  br label %70

70:                                               ; preds = %44, %60, %67
  %71 = phi i64 [ %65, %60 ], [ %65, %67 ], [ 1, %44 ]
  %72 = insertvalue { i64, %"class.blink::NGOffsetMappingUnit"* } undef, i64 %71, 0
  %73 = insertvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %72, %"class.blink::NGOffsetMappingUnit"* %45, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  ret { i64, %"class.blink::NGOffsetMappingUnit"* } %73
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping40GetMappingUnitsForTextContentOffsetRangeEjj(%"class.blink::NGOffsetMapping"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %5, i32 0) #10
  %7 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, %2
  br i1 %9, label %10, label %71

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %5, i32 %13) #10
  %15 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %71

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %19, align 8
  %21 = load i32, i32* %11, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %20, i64 %22
  %24 = icmp eq i32 %21, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %18, %25
  %26 = phi i64 [ %37, %25 ], [ %22, %18 ]
  %27 = phi %"class.blink::NGOffsetMappingUnit"* [ %36, %25 ], [ %20, %18 ]
  %28 = lshr i64 %26, 1
  %29 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %27, i64 1
  %30 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %27, i64 %28, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = icmp ule i32 %31, %1
  %33 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %29, i64 %28
  %34 = xor i64 %28, -1
  %35 = add i64 %26, %34
  %36 = select i1 %32, %"class.blink::NGOffsetMappingUnit"* %33, %"class.blink::NGOffsetMappingUnit"* %27
  %37 = select i1 %32, i64 %35, i64 %28
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %25

39:                                               ; preds = %25, %18
  %40 = phi %"class.blink::NGOffsetMappingUnit"* [ %20, %18 ], [ %36, %25 ]
  %41 = icmp eq %"class.blink::NGOffsetMappingUnit"* %40, %23
  br i1 %41, label %71, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %40, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp ult i32 %44, %2
  br i1 %45, label %46, label %71

46:                                               ; preds = %42
  br i1 %24, label %61, label %47

47:                                               ; preds = %46, %47
  %48 = phi i64 [ %59, %47 ], [ %22, %46 ]
  %49 = phi %"class.blink::NGOffsetMappingUnit"* [ %58, %47 ], [ %20, %46 ]
  %50 = lshr i64 %48, 1
  %51 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %49, i64 1
  %52 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %49, i64 %50, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp uge i32 %53, %2
  %55 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %51, i64 %50
  %56 = xor i64 %50, -1
  %57 = add i64 %48, %56
  %58 = select i1 %54, %"class.blink::NGOffsetMappingUnit"* %49, %"class.blink::NGOffsetMappingUnit"* %55
  %59 = select i1 %54, i64 %50, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %47

61:                                               ; preds = %47, %46
  %62 = phi %"class.blink::NGOffsetMappingUnit"* [ %20, %46 ], [ %58, %47 ]
  %63 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %62 to i64
  %64 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %40 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 5
  %67 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %40, %62
  br i1 %67, label %68, label %71

68:                                               ; preds = %61
  %69 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #10
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  br label %71

71:                                               ; preds = %68, %61, %39, %42, %3, %10
  %72 = phi %"class.blink::NGOffsetMappingUnit"* [ null, %10 ], [ null, %3 ], [ null, %42 ], [ null, %39 ], [ %40, %61 ], [ %40, %68 ]
  %73 = phi i64 [ 0, %10 ], [ 0, %3 ], [ 0, %42 ], [ 0, %39 ], [ %66, %61 ], [ %66, %68 ]
  %74 = insertvalue { i64, %"class.blink::NGOffsetMappingUnit"* } undef, i64 %73, 0
  %75 = insertvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %74, %"class.blink::NGOffsetMappingUnit"* %72, 1
  ret { i64, %"class.blink::NGOffsetMappingUnit"* } %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15NGOffsetMapping20GetTextContentOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping25GetMappingUnitForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1)
  %4 = icmp eq %"class.blink::NGOffsetMappingUnit"* %3, null
  br i1 %4, label %81, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %14, label %52

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  switch i32 %16, label %20 [
    i32 0, label %17
    i32 1, label %57
  ]

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  br label %57

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1
  %22 = bitcast %"class.blink::Node"* %21 to i8*
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %44, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 0, i32 0, i32 1
  %27 = bitcast %"class.blink::TraceWrapperV8Reference"* %26 to %"class.blink::ParkableStringImpl"**
  %28 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %27, align 8
  %29 = icmp eq %"class.blink::ParkableStringImpl"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %31, align 8
  %33 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %32, null
  br i1 %33, label %34, label %41

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %28, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %57, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  br label %57

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %32, i64 0, i32 8
  %43 = load i32, i32* %42, align 4
  br label %57

44:                                               ; preds = %20
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 1
  %46 = bitcast i32* %45 to %"class.WTF::StringImpl"**
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  br label %57

52:                                               ; preds = %9, %5
  %53 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 1
  %56 = zext i1 %55 to i32
  br label %57

57:                                               ; preds = %14, %17, %25, %34, %38, %41, %44, %49, %52
  %58 = phi i32 [ %19, %17 ], [ 0, %25 ], [ %43, %41 ], [ %40, %38 ], [ 0, %34 ], [ %51, %49 ], [ 0, %44 ], [ 0, %14 ], [ %56, %52 ]
  %59 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 4
  %64 = load i32, i32* %63, align 8
  br label %81

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %58
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 5
  %71 = load i32, i32* %70, align 4
  br label %81

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 5
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = sub i32 %58, %60
  %80 = add i32 %79, %74
  br label %81

81:                                               ; preds = %78, %72, %69, %62, %2
  %82 = phi i64 [ 0, %2 ], [ 1, %62 ], [ 1, %69 ], [ 1, %72 ], [ 1, %78 ]
  %83 = phi i32 [ undef, %2 ], [ %64, %62 ], [ %71, %69 ], [ %74, %72 ], [ %80, %78 ]
  %84 = zext i32 %83 to i64
  %85 = shl nuw i64 %84, 32
  %86 = or i64 %85, %82
  ret i64 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NGOffsetMapping30StartOfNextNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping25GetMappingUnitForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %1, %"class.blink::PositionTemplate"* dereferenceable(16) %2)
  %5 = icmp eq %"class.blink::NGOffsetMappingUnit"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  br label %169

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %55, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %55

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  switch i32 %19, label %23 [
    i32 0, label %20
    i32 1, label %60
  ]

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  br label %60

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1
  %25 = bitcast %"class.blink::Node"* %24 to i8*
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::TraceWrapperV8Reference"* %29 to %"class.blink::ParkableStringImpl"**
  %31 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %30, align 8
  %32 = icmp eq %"class.blink::ParkableStringImpl"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %34, align 8
  %36 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %35, null
  br i1 %36, label %37, label %44

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %31, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  br label %60

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %35, i64 0, i32 8
  %46 = load i32, i32* %45, align 4
  br label %60

47:                                               ; preds = %23
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 1
  %49 = bitcast i32* %48 to %"class.WTF::StringImpl"**
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  br label %60

55:                                               ; preds = %12, %8
  %56 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 1
  %59 = zext i1 %58 to i32
  br label %60

60:                                               ; preds = %17, %20, %28, %37, %41, %44, %47, %52, %55
  %61 = phi i32 [ %22, %20 ], [ 0, %28 ], [ %46, %44 ], [ %43, %41 ], [ 0, %37 ], [ %54, %52 ], [ 0, %47 ], [ 0, %17 ], [ %59, %55 ]
  %62 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %63, i64 %66
  %68 = icmp eq %"class.blink::NGOffsetMappingUnit"* %4, %67
  br i1 %68, label %167, label %69

69:                                               ; preds = %60, %160
  %70 = phi %"class.blink::NGOffsetMappingUnit"* [ %161, %160 ], [ %4, %60 ]
  %71 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %70, i64 0, i32 1
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %92

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 4
  %78 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %77 to i96*
  %79 = load i96, i96* %78, align 4
  %80 = and i96 %79, 33554432
  %81 = icmp eq i96 %80, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 1
  %84 = bitcast %"class.blink::LayoutObject"* %83 to i16*
  %85 = load i16, i16* %84, align 8
  %86 = and i16 %85, 8192
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.blink::LayoutObject"* %72 to %"class.blink::LayoutTextFragment"*
  %90 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %89) #10
  %91 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %90, i64 0, i32 0, i32 0
  br label %99

92:                                               ; preds = %82, %76, %74
  %93 = phi i96 [ %75, %74 ], [ %79, %82 ], [ %79, %76 ]
  %94 = and i96 %93, 16777216
  %95 = icmp eq i96 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 6, i32 0, i32 0
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %97, align 8
  br label %99

99:                                               ; preds = %88, %92, %96
  %100 = phi %"class.blink::Node"* [ %91, %88 ], [ %98, %96 ], [ null, %92 ]
  %101 = icmp eq %"class.blink::Node"* %100, %10
  br i1 %101, label %102, label %167

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %70, i64 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = icmp ugt i32 %104, %61
  br i1 %105, label %106, label %160

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %70, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %160, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %70, i64 0, i32 2
  %112 = load i32, i32* %111, align 8
  %113 = icmp ult i32 %61, %112
  %114 = select i1 %113, i32 %112, i32 %61
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %116 = load i32, i32* %115, align 8, !noalias !5
  %117 = and i32 %116, 12
  %118 = icmp ne i32 %117, 4
  %119 = or i1 %11, %118
  br i1 %119, label %156, label %120

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1
  %122 = bitcast %"class.blink::Node"* %121 to i8*
  %123 = load i8, i8* %122, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %144, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 0, i32 0, i32 1
  %127 = bitcast %"class.blink::TraceWrapperV8Reference"* %126 to %"class.blink::ParkableStringImpl"**
  %128 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %127, align 8
  %129 = icmp eq %"class.blink::ParkableStringImpl"* %128, null
  br i1 %129, label %152, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0
  %132 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %131, align 8
  %133 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %132, null
  br i1 %133, label %134, label %141

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %128, i64 0, i32 1, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %152, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 1
  %140 = load i32, i32* %139, align 4
  br label %152

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %132, i64 0, i32 8
  %143 = load i32, i32* %142, align 4
  br label %152

144:                                              ; preds = %120
  %145 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 1
  %146 = bitcast i32* %145 to %"class.WTF::StringImpl"**
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  br label %152

152:                                              ; preds = %125, %134, %138, %141, %144, %149
  %153 = phi i32 [ 0, %125 ], [ %143, %141 ], [ %140, %138 ], [ 0, %134 ], [ %151, %149 ], [ 0, %144 ]
  %154 = icmp ult i32 %153, %114
  %155 = select i1 %154, i32 %153, i32 %114
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %10, i32 %155) #10
  br label %169

156:                                              ; preds = %110
  %157 = icmp eq i32 %114, 0
  br i1 %157, label %159, label %158

158:                                              ; preds = %156
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %10) #10
  br label %169

159:                                              ; preds = %156
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %10) #10
  br label %169

160:                                              ; preds = %106, %102
  %161 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %70, i64 1
  %162 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %62, align 8
  %163 = load i32, i32* %64, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %162, i64 %164
  %166 = icmp eq %"class.blink::NGOffsetMappingUnit"* %161, %165
  br i1 %166, label %167, label %69

167:                                              ; preds = %99, %160, %60
  %168 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false) #10
  br label %169

169:                                              ; preds = %167, %152, %158, %159, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NGOffsetMapping28EndOfLastNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping25GetMappingUnitForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %1, %"class.blink::PositionTemplate"* dereferenceable(16) %2)
  %5 = icmp eq %"class.blink::NGOffsetMappingUnit"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  br label %161

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %55, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 12
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %55

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  switch i32 %19, label %23 [
    i32 0, label %20
    i32 1, label %60
  ]

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  br label %60

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1
  %25 = bitcast %"class.blink::Node"* %24 to i8*
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::TraceWrapperV8Reference"* %29 to %"class.blink::ParkableStringImpl"**
  %31 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %30, align 8
  %32 = icmp eq %"class.blink::ParkableStringImpl"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %34, align 8
  %36 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %35, null
  br i1 %36, label %37, label %44

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %31, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  br label %60

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %35, i64 0, i32 8
  %46 = load i32, i32* %45, align 4
  br label %60

47:                                               ; preds = %23
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 1
  %49 = bitcast i32* %48 to %"class.WTF::StringImpl"**
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  br label %60

55:                                               ; preds = %12, %8
  %56 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 1
  %59 = zext i1 %58 to i32
  br label %60

60:                                               ; preds = %17, %20, %28, %37, %41, %44, %47, %52, %55
  %61 = phi i32 [ %22, %20 ], [ 0, %28 ], [ %46, %44 ], [ %43, %41 ], [ 0, %37 ], [ %54, %52 ], [ 0, %47 ], [ 0, %17 ], [ %59, %55 ]
  %62 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %63

63:                                               ; preds = %157, %60
  %64 = phi %"class.blink::NGOffsetMappingUnit"* [ %4, %60 ], [ %158, %157 ]
  %65 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %64, i64 0, i32 1
  %66 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %65, align 8
  %67 = icmp eq %"class.blink::LayoutObject"* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %86

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4
  %74 = and i96 %73, 33554432
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %86, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 1
  %78 = bitcast %"class.blink::LayoutObject"* %77 to i16*
  %79 = load i16, i16* %78, align 8
  %80 = and i16 %79, 8192
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::LayoutObject"* %66 to %"class.blink::LayoutTextFragment"*
  %84 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %83) #10
  %85 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %84, i64 0, i32 0, i32 0
  br label %93

86:                                               ; preds = %76, %70, %68
  %87 = phi i96 [ %69, %68 ], [ %73, %76 ], [ %73, %70 ]
  %88 = and i96 %87, 16777216
  %89 = icmp eq i96 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 0, i32 6, i32 0, i32 0
  %92 = load %"class.blink::Node"*, %"class.blink::Node"** %91, align 8
  br label %93

93:                                               ; preds = %82, %86, %90
  %94 = phi %"class.blink::Node"* [ %85, %82 ], [ %92, %90 ], [ null, %86 ]
  %95 = icmp eq %"class.blink::Node"* %94, %10
  br i1 %95, label %96, label %159

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %64, i64 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = icmp ult i32 %98, %61
  br i1 %99, label %100, label %154

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %64, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %154, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %64, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = icmp ult i32 %106, %61
  %108 = select i1 %107, i32 %106, i32 %61
  %109 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %110 = load i32, i32* %109, align 8, !noalias !8
  %111 = and i32 %110, 12
  %112 = icmp ne i32 %111, 4
  %113 = or i1 %11, %112
  br i1 %113, label %150, label %114

114:                                              ; preds = %104
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1
  %116 = bitcast %"class.blink::Node"* %115 to i8*
  %117 = load i8, i8* %116, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %138, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 0, i32 0, i32 1
  %121 = bitcast %"class.blink::TraceWrapperV8Reference"* %120 to %"class.blink::ParkableStringImpl"**
  %122 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %121, align 8
  %123 = icmp eq %"class.blink::ParkableStringImpl"* %122, null
  br i1 %123, label %146, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0
  %126 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %125, align 8
  %127 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %126, null
  br i1 %127, label %128, label %135

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %122, i64 0, i32 1, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  br label %146

135:                                              ; preds = %124
  %136 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %126, i64 0, i32 8
  %137 = load i32, i32* %136, align 4
  br label %146

138:                                              ; preds = %114
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 1
  %140 = bitcast i32* %139 to %"class.WTF::StringImpl"**
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  br label %146

146:                                              ; preds = %119, %128, %132, %135, %138, %143
  %147 = phi i32 [ 0, %119 ], [ %137, %135 ], [ %134, %132 ], [ 0, %128 ], [ %145, %143 ], [ 0, %138 ]
  %148 = icmp ult i32 %147, %108
  %149 = select i1 %148, i32 %147, i32 %108
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %10, i32 %149) #10
  br label %161

150:                                              ; preds = %104
  %151 = icmp eq i32 %108, 0
  br i1 %151, label %153, label %152

152:                                              ; preds = %150
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %10) #10
  br label %161

153:                                              ; preds = %150
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %10) #10
  br label %161

154:                                              ; preds = %100, %96
  %155 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %62, align 8
  %156 = icmp eq %"class.blink::NGOffsetMappingUnit"* %64, %155
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %64, i64 -1
  br label %63

159:                                              ; preds = %154, %93
  %160 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 16, i1 false) #10
  br label %161

161:                                              ; preds = %159, %146, %152, %153, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NGOffsetMapping27IsBeforeNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping25GetMappingUnitForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1)
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %12, label %50

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %18 [
    i32 0, label %15
    i32 1, label %55
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  br label %55

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %20 = bitcast %"class.blink::Node"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %24 to %"class.blink::ParkableStringImpl"**
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %29, align 8
  %31 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  br label %55

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, i64 0, i32 8
  %41 = load i32, i32* %40, align 4
  br label %55

42:                                               ; preds = %18
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %44 = bitcast i32* %43 to %"class.WTF::StringImpl"**
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br label %55

50:                                               ; preds = %7, %2
  %51 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 1
  %54 = zext i1 %53 to i32
  br label %55

55:                                               ; preds = %12, %15, %23, %32, %36, %39, %42, %47, %50
  %56 = phi i32 [ %17, %15 ], [ 0, %23 ], [ %41, %39 ], [ %38, %36 ], [ 0, %32 ], [ %49, %47 ], [ 0, %42 ], [ 0, %12 ], [ %54, %50 ]
  %57 = icmp eq %"class.blink::NGOffsetMappingUnit"* %3, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %56, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %3, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp ne i32 %64, 1
  br label %66

66:                                               ; preds = %55, %62, %58
  %67 = phi i1 [ false, %58 ], [ false, %55 ], [ %65, %62 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NGOffsetMapping26IsAfterNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %12, label %50

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %18 [
    i32 0, label %15
    i32 1, label %117
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  br label %55

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %20 = bitcast %"class.blink::Node"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %24 to %"class.blink::ParkableStringImpl"**
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %117, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %29, align 8
  %31 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %117, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  br label %55

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %30, i64 0, i32 8
  %41 = load i32, i32* %40, align 4
  br label %55

42:                                               ; preds = %18
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %44 = bitcast i32* %43 to %"class.WTF::StringImpl"**
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %117, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br label %55

50:                                               ; preds = %7, %2
  %51 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 1
  %54 = zext i1 %53 to i32
  br label %55

55:                                               ; preds = %15, %36, %39, %47, %50
  %56 = phi i32 [ %17, %15 ], [ %41, %39 ], [ %38, %36 ], [ %49, %47 ], [ %54, %50 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %117, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %60 = add i32 %56, -1
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %62 = load i32, i32* %61, align 8, !noalias !11
  %63 = and i32 %62, 12
  %64 = icmp ne i32 %63, 4
  %65 = or i1 %6, %64
  br i1 %65, label %102, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %68 = bitcast %"class.blink::Node"* %67 to i8*
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 0, i32 0, i32 1
  %73 = bitcast %"class.blink::TraceWrapperV8Reference"* %72 to %"class.blink::ParkableStringImpl"**
  %74 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %73, align 8
  %75 = icmp eq %"class.blink::ParkableStringImpl"* %74, null
  br i1 %75, label %98, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %77, align 8
  %79 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %78, null
  br i1 %79, label %80, label %87

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %74, i64 0, i32 1, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %98, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  br label %98

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %78, i64 0, i32 8
  %89 = load i32, i32* %88, align 4
  br label %98

90:                                               ; preds = %66
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1, i32 1
  %92 = bitcast i32* %91 to %"class.WTF::StringImpl"**
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  br label %98

98:                                               ; preds = %71, %80, %84, %87, %90, %95
  %99 = phi i32 [ 0, %71 ], [ %89, %87 ], [ %86, %84 ], [ 0, %80 ], [ %97, %95 ], [ 0, %90 ]
  %100 = icmp ult i32 %99, %60
  %101 = select i1 %100, i32 %99, i32 %60
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::Node"* nonnull %5, i32 %101) #10
  br label %106

102:                                              ; preds = %58
  %103 = icmp eq i32 %60, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %102
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* dereferenceable(64) %5) #10
  br label %106

105:                                              ; preds = %102
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* dereferenceable(64) %5) #10
  br label %106

106:                                              ; preds = %98, %104, %105
  %107 = call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping25GetMappingUnitForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  %108 = icmp eq %"class.blink::NGOffsetMappingUnit"* %107, null
  br i1 %108, label %117, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %107, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = icmp ugt i32 %56, %111
  br i1 %112, label %113, label %117

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = icmp ne i32 %115, 1
  br label %117

117:                                              ; preds = %12, %42, %32, %23, %109, %113, %106, %55
  %118 = phi i1 [ false, %55 ], [ false, %109 ], [ false, %106 ], [ %116, %113 ], [ false, %23 ], [ false, %32 ], [ false, %42 ], [ false, %12 ]
  ret i1 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15NGOffsetMapping18GetCharacterBeforeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZNK5blink15NGOffsetMapping20GetTextContentOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1)
  %4 = trunc i64 %3 to i8
  %5 = lshr i64 %3, 32
  %6 = trunc i64 %5 to i32
  %7 = icmp eq i8 %4, 0
  %8 = icmp eq i32 %6, 0
  %9 = or i1 %7, %8
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = add i32 %6, -1
  %12 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %11
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %23, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %27 = zext i32 %11 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  br label %36

31:                                               ; preds = %19
  %32 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %33 = zext i32 %11 to i64
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = load i16, i16* %34, align 2
  br label %36

36:                                               ; preds = %2, %31, %25, %15, %10
  %37 = phi i32 [ 0, %2 ], [ 1, %10 ], [ 1, %15 ], [ 1, %25 ], [ 1, %31 ]
  %38 = phi i16 [ undef, %2 ], [ 0, %10 ], [ 0, %15 ], [ %30, %25 ], [ %35, %31 ]
  %39 = zext i16 %38 to i32
  %40 = shl nuw i32 %39, 16
  %41 = or i32 %40, %37
  ret i32 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NGOffsetMapping16GetFirstPositionEj(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0
  %14 = add i32 %10, -1
  %15 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %13, i32 %14) #10
  %16 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %15, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %17, %2
  br i1 %18, label %19, label %21

19:                                               ; preds = %12, %3
  %20 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  br label %218

21:                                               ; preds = %12
  %22 = bitcast %"class.blink::NGOffsetMappingUnit"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store %"class.blink::NGOffsetMappingUnit"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGOffsetMappingUnit"*), %"class.blink::NGOffsetMappingUnit"** %5, align 8
  %23 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %23, align 8
  %25 = load i32, i32* %9, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %43, label %29

29:                                               ; preds = %21, %29
  %30 = phi i64 [ %41, %29 ], [ %26, %21 ]
  %31 = phi %"class.blink::NGOffsetMappingUnit"* [ %40, %29 ], [ %24, %21 ]
  %32 = lshr i64 %30, 1
  %33 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %31, i64 1
  %34 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %31, i64 %32, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %35, %2
  %37 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %33, i64 %32
  %38 = xor i64 %32, -1
  %39 = add i64 %30, %38
  %40 = select i1 %36, %"class.blink::NGOffsetMappingUnit"* %37, %"class.blink::NGOffsetMappingUnit"* %31
  %41 = select i1 %36, i64 %39, i64 %32
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %29

43:                                               ; preds = %29, %21
  %44 = phi %"class.blink::NGOffsetMappingUnit"* [ %24, %21 ], [ %40, %29 ]
  store %"class.blink::NGOffsetMappingUnit"* %44, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  %45 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  store %"class.blink::NGOffsetMappingUnit"* %27, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp eq %"class.blink::NGOffsetMappingUnit"* %44, %27
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %22, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %53 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %52, i8* %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  %56 = icmp eq i8* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 504, %"class.logging::CheckOpResult"* nonnull %6) #10
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  br label %60

60:                                               ; preds = %57, %50
  %61 = phi i8* [ %47, %50 ], [ %58, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  br label %62

62:                                               ; preds = %60, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %63 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  br label %64

64:                                               ; preds = %107, %62
  %65 = phi %"class.blink::NGOffsetMappingUnit"* [ %101, %107 ], [ %63, %62 ]
  %66 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %65, i64 0, i32 1
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = icmp eq %"class.blink::LayoutObject"* %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %88

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 4
  %73 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %72 to i96*
  %74 = load i96, i96* %73, align 4
  %75 = and i96 %74, 33554432
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 1
  %79 = bitcast %"class.blink::LayoutObject"* %78 to i16*
  %80 = load i16, i16* %79, align 8
  %81 = and i16 %80, 8192
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.blink::LayoutObject"* %67 to %"class.blink::LayoutTextFragment"*
  %85 = call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %84) #10
  %86 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  br label %95

88:                                               ; preds = %77, %71, %69
  %89 = phi i96 [ %70, %69 ], [ %74, %77 ], [ %74, %71 ]
  %90 = and i96 %89, 16777216
  %91 = icmp eq i96 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 6, i32 0, i32 0
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  br label %95

95:                                               ; preds = %83, %92
  %96 = phi %"class.blink::NGOffsetMappingUnit"* [ %87, %83 ], [ %65, %92 ]
  %97 = phi %"class.blink::Node"* [ %86, %83 ], [ %94, %92 ]
  %98 = icmp eq %"class.blink::Node"* %97, null
  br i1 %98, label %99, label %113

99:                                               ; preds = %88, %95
  %100 = phi %"class.blink::NGOffsetMappingUnit"* [ %96, %95 ], [ %65, %88 ]
  %101 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %100, i64 1
  store %"class.blink::NGOffsetMappingUnit"* %101, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  %102 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %23, align 8
  %103 = load i32, i32* %9, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %102, i64 %104
  %106 = icmp eq %"class.blink::NGOffsetMappingUnit"* %101, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %100, i64 1, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp ugt i32 %109, %2
  br i1 %110, label %111, label %64

111:                                              ; preds = %107, %99
  %112 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #10
  br label %217

113:                                              ; preds = %95
  %114 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %96, i64 0, i32 1
  %115 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %114, align 8
  %116 = icmp eq %"class.blink::LayoutObject"* %115, null
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %136

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 4
  %121 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %120 to i96*
  %122 = load i96, i96* %121, align 4
  %123 = and i96 %122, 33554432
  %124 = icmp eq i96 %123, 0
  br i1 %124, label %136, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 1
  %127 = bitcast %"class.blink::LayoutObject"* %126 to i16*
  %128 = load i16, i16* %127, align 8
  %129 = and i16 %128, 8192
  %130 = icmp eq i16 %129, 0
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = bitcast %"class.blink::LayoutObject"* %115 to %"class.blink::LayoutTextFragment"*
  %133 = call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %132) #10
  %134 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  br label %143

136:                                              ; preds = %125, %119, %117
  %137 = phi i96 [ %118, %117 ], [ %122, %125 ], [ %122, %119 ]
  %138 = and i96 %137, 16777216
  %139 = icmp eq i96 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 6, i32 0, i32 0
  %142 = load %"class.blink::Node"*, %"class.blink::Node"** %141, align 8
  br label %143

143:                                              ; preds = %131, %136, %140
  %144 = phi %"class.blink::NGOffsetMappingUnit"* [ %135, %131 ], [ %96, %140 ], [ %96, %136 ]
  %145 = phi %"class.blink::Node"* [ %134, %131 ], [ %142, %140 ], [ null, %136 ]
  %146 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %144, i64 0, i32 4
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %144, i64 0, i32 5
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %147, %149
  br i1 %150, label %151, label %154

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %144, i64 0, i32 2
  %153 = load i32, i32* %152, align 8
  br label %169

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %144, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %144, i64 0, i32 2
  %160 = load i32, i32* %159, align 8
  %161 = sub i32 %2, %147
  %162 = add i32 %161, %160
  br label %169

163:                                              ; preds = %154
  %164 = icmp ugt i32 %149, %2
  %165 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %144, i64 0, i32 2
  %166 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %144, i64 0, i32 3
  %167 = select i1 %164, i32* %165, i32* %166
  %168 = load i32, i32* %167, align 4
  br label %169

169:                                              ; preds = %151, %158, %163
  %170 = phi i32 [ %153, %151 ], [ %162, %158 ], [ %168, %163 ]
  %171 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %145, i64 0, i32 1
  %172 = load i32, i32* %171, align 8, !noalias !14
  %173 = and i32 %172, 12
  %174 = icmp ne i32 %173, 4
  %175 = icmp eq %"class.blink::Node"* %145, null
  %176 = or i1 %175, %174
  br i1 %176, label %213, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %145, i64 1
  %179 = bitcast %"class.blink::Node"* %178 to i8*
  %180 = load i8, i8* %179, align 8, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %201, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %145, i64 1, i32 0, i32 0, i32 1
  %184 = bitcast %"class.blink::TraceWrapperV8Reference"* %183 to %"class.blink::ParkableStringImpl"**
  %185 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %184, align 8
  %186 = icmp eq %"class.blink::ParkableStringImpl"* %185, null
  br i1 %186, label %209, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0
  %189 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %188, align 8
  %190 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %189, null
  br i1 %190, label %191, label %198

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %185, i64 0, i32 1, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %209, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  br label %209

198:                                              ; preds = %187
  %199 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %189, i64 0, i32 8
  %200 = load i32, i32* %199, align 4
  br label %209

201:                                              ; preds = %177
  %202 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %145, i64 1, i32 1
  %203 = bitcast i32* %202 to %"class.WTF::StringImpl"**
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %209, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  br label %209

209:                                              ; preds = %182, %191, %195, %198, %201, %206
  %210 = phi i32 [ 0, %182 ], [ %200, %198 ], [ %197, %195 ], [ 0, %191 ], [ %208, %206 ], [ 0, %201 ]
  %211 = icmp ult i32 %210, %170
  %212 = select i1 %211, i32 %210, i32 %170
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %145, i32 %212) #10
  br label %217

213:                                              ; preds = %169
  %214 = icmp eq i32 %170, 0
  br i1 %214, label %216, label %215

215:                                              ; preds = %213
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %145) #10
  br label %217

216:                                              ; preds = %213
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %145) #10
  br label %217

217:                                              ; preds = %216, %215, %209, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %218

218:                                              ; preds = %217, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping19GetFirstMappingUnitEj(%"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %7, i32 0) #10
  %9 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %44, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %13, align 8
  %15 = load i32, i32* %3, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %12, %19
  %20 = phi i64 [ %31, %19 ], [ %16, %12 ]
  %21 = phi %"class.blink::NGOffsetMappingUnit"* [ %30, %19 ], [ %14, %12 ]
  %22 = lshr i64 %20, 1
  %23 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %21, i64 1
  %24 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %21, i64 %22, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %25, %1
  %27 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %23, i64 %22
  %28 = xor i64 %22, -1
  %29 = add i64 %20, %28
  %30 = select i1 %26, %"class.blink::NGOffsetMappingUnit"* %27, %"class.blink::NGOffsetMappingUnit"* %21
  %31 = select i1 %26, i64 %29, i64 %22
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %12
  %34 = phi %"class.blink::NGOffsetMappingUnit"* [ %14, %12 ], [ %30, %19 ]
  %35 = icmp eq %"class.blink::NGOffsetMappingUnit"* %34, %17
  br i1 %35, label %44, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %34, i64 1
  %38 = icmp eq %"class.blink::NGOffsetMappingUnit"* %37, %17
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %34, i64 1, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, %1
  br i1 %42, label %44, label %43

43:                                               ; preds = %36, %39
  br label %44

44:                                               ; preds = %33, %39, %43, %2, %6
  %45 = phi %"class.blink::NGOffsetMappingUnit"* [ null, %6 ], [ null, %2 ], [ null, %33 ], [ %34, %43 ], [ %37, %39 ]
  ret %"class.blink::NGOffsetMappingUnit"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping18GetLastMappingUnitEj(%"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0
  %13 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"* %12, i32 0) #10
  %14 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp ugt i32 %15, %1
  br i1 %16, label %65, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::NGOffsetMappingUnit"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  store %"class.blink::NGOffsetMappingUnit"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGOffsetMappingUnit"*), %"class.blink::NGOffsetMappingUnit"** %4, align 8
  %19 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %19, align 8
  %21 = load i32, i32* %8, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %17
  %24 = zext i32 %21 to i64
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ %24, %23 ], [ %37, %25 ]
  %27 = phi %"class.blink::NGOffsetMappingUnit"* [ %20, %23 ], [ %36, %25 ]
  %28 = lshr i64 %26, 1
  %29 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %27, i64 1
  %30 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %27, i64 %28, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp ugt i32 %31, %1
  %33 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %29, i64 %28
  %34 = xor i64 %28, -1
  %35 = add i64 %26, %34
  %36 = select i1 %32, %"class.blink::NGOffsetMappingUnit"* %27, %"class.blink::NGOffsetMappingUnit"* %33
  %37 = select i1 %32, i64 %28, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %25

39:                                               ; preds = %25, %17
  %40 = phi %"class.blink::NGOffsetMappingUnit"* [ %20, %17 ], [ %36, %25 ]
  store %"class.blink::NGOffsetMappingUnit"* %40, %"class.blink::NGOffsetMappingUnit"** %4, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  %43 = bitcast %"class.blink::NGOffsetMappingUnit"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  store %"class.blink::NGOffsetMappingUnit"* %20, %"class.blink::NGOffsetMappingUnit"** %6, align 8
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp eq %"class.blink::NGOffsetMappingUnit"* %40, %20
  br i1 %45, label %47, label %46

46:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %42, align 8
  br label %56

47:                                               ; preds = %39
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %18, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %49 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %43, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* %48, i8* %49) #10
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  %52 = icmp eq i8* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 556, %"class.logging::CheckOpResult"* nonnull %5) #10
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  br label %56

56:                                               ; preds = %53, %46
  %57 = phi i8* [ %43, %46 ], [ %54, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  br label %58

58:                                               ; preds = %56, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  %59 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %4, align 8
  %60 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %59, i64 -1
  store %"class.blink::NGOffsetMappingUnit"* %60, %"class.blink::NGOffsetMappingUnit"** %4, align 8
  %61 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %59, i64 -1, i32 5
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %62, %1
  %64 = select i1 %63, %"class.blink::NGOffsetMappingUnit"* null, %"class.blink::NGOffsetMappingUnit"* %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %65

65:                                               ; preds = %2, %11, %58
  %66 = phi %"class.blink::NGOffsetMappingUnit"* [ %64, %58 ], [ null, %11 ], [ null, %2 ]
  ret %"class.blink::NGOffsetMappingUnit"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15NGOffsetMapping15GetLastPositionEj(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping18GetLastMappingUnitEj(%"class.blink::NGOffsetMapping"* %1, i32 %2)
  %5 = icmp eq %"class.blink::NGOffsetMappingUnit"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #10
  br label %157

10:                                               ; preds = %6, %48
  %11 = phi %"class.blink::NGOffsetMappingUnit"* [ %49, %48 ], [ %4, %6 ]
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 1
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 33554432
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 1
  %25 = bitcast %"class.blink::LayoutObject"* %24 to i16*
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 8192
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.blink::LayoutObject"* %13 to %"class.blink::LayoutTextFragment"*
  %31 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %30) #10
  %32 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %31, i64 0, i32 0, i32 0
  br label %40

33:                                               ; preds = %23, %17, %15
  %34 = phi i96 [ %16, %15 ], [ %20, %23 ], [ %20, %17 ]
  %35 = and i96 %34, 16777216
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  br label %40

40:                                               ; preds = %29, %37
  %41 = phi %"class.blink::Node"* [ %32, %29 ], [ %39, %37 ]
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %55

43:                                               ; preds = %33, %40
  %44 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %45 = icmp eq %"class.blink::NGOffsetMappingUnit"* %11, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #10
  br label %157

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 -1
  %50 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 -1, i32 5
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %51, %2
  br i1 %52, label %53, label %10

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #10
  br label %157

55:                                               ; preds = %40
  %56 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 1
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = icmp eq %"class.blink::LayoutObject"* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %77

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 4
  %63 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = and i96 %64, 33554432
  %66 = icmp eq i96 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 1
  %69 = bitcast %"class.blink::LayoutObject"* %68 to i16*
  %70 = load i16, i16* %69, align 8
  %71 = and i16 %70, 8192
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.blink::LayoutObject"* %57 to %"class.blink::LayoutTextFragment"*
  %75 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %74) #10
  %76 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %75, i64 0, i32 0, i32 0
  br label %84

77:                                               ; preds = %67, %61, %59
  %78 = phi i96 [ %60, %59 ], [ %64, %67 ], [ %64, %61 ]
  %79 = and i96 %78, 16777216
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 6, i32 0, i32 0
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %82, align 8
  br label %84

84:                                               ; preds = %73, %77, %81
  %85 = phi %"class.blink::Node"* [ %76, %73 ], [ %83, %81 ], [ null, %77 ]
  %86 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 5
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 3
  %93 = load i32, i32* %92, align 4
  br label %109

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = sub i32 %2, %87
  %102 = add i32 %101, %100
  br label %109

103:                                              ; preds = %94
  %104 = icmp ugt i32 %89, %2
  %105 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 2
  %106 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %11, i64 0, i32 3
  %107 = select i1 %104, i32* %105, i32* %106
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %91, %98, %103
  %110 = phi i32 [ %93, %91 ], [ %102, %98 ], [ %108, %103 ]
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 0, i32 1
  %112 = load i32, i32* %111, align 8, !noalias !17
  %113 = and i32 %112, 12
  %114 = icmp ne i32 %113, 4
  %115 = icmp eq %"class.blink::Node"* %85, null
  %116 = or i1 %115, %114
  br i1 %116, label %153, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1
  %119 = bitcast %"class.blink::Node"* %118 to i8*
  %120 = load i8, i8* %119, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %141, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1, i32 0, i32 0, i32 1
  %124 = bitcast %"class.blink::TraceWrapperV8Reference"* %123 to %"class.blink::ParkableStringImpl"**
  %125 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %124, align 8
  %126 = icmp eq %"class.blink::ParkableStringImpl"* %125, null
  br i1 %126, label %149, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %128, align 8
  %130 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %129, null
  br i1 %130, label %131, label %138

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %125, i64 0, i32 1, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %149, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  br label %149

138:                                              ; preds = %127
  %139 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %129, i64 0, i32 8
  %140 = load i32, i32* %139, align 4
  br label %149

141:                                              ; preds = %117
  %142 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1, i32 1
  %143 = bitcast i32* %142 to %"class.WTF::StringImpl"**
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  br label %149

149:                                              ; preds = %122, %131, %135, %138, %141, %146
  %150 = phi i32 [ 0, %122 ], [ %140, %138 ], [ %137, %135 ], [ 0, %131 ], [ %148, %146 ], [ 0, %141 ]
  %151 = icmp ult i32 %150, %110
  %152 = select i1 %151, i32 %150, i32 %110
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %85, i32 %152) #10
  br label %157

153:                                              ; preds = %109
  %154 = icmp eq i32 %110, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %153
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %85) #10
  br label %157

156:                                              ; preds = %153
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %85) #10
  br label %157

157:                                              ; preds = %156, %155, %149, %53, %46, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15NGOffsetMapping28HasBidiControlCharactersOnlyEjj(%"class.blink::NGOffsetMapping"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i32 %1, %2
  br i1 %4, label %5, label %40

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = zext i32 %1 to i64
  br label %11

8:                                                ; preds = %35
  %9 = trunc i64 %39 to i32
  %10 = icmp eq i32 %9, %2
  br i1 %10, label %40, label %11

11:                                               ; preds = %8, %5
  %12 = phi i64 [ %7, %5 ], [ %39, %8 ]
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %12, %18
  br i1 %19, label %20, label %35

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  br i1 %24, label %31, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.WTF::StringImpl"* %25 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 %12
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  br label %35

31:                                               ; preds = %20
  %32 = bitcast %"class.WTF::StringImpl"* %25 to i16*
  %33 = getelementptr inbounds i16, i16* %32, i64 %12
  %34 = load i16, i16* %33, align 2
  br label %35

35:                                               ; preds = %11, %15, %26, %31
  %36 = phi i16 [ 0, %15 ], [ 0, %11 ], [ %30, %26 ], [ %34, %31 ]
  %37 = zext i16 %36 to i32
  %38 = tail call zeroext i1 @_ZN5blink9Character13IsBidiControlEi(i32 %37) #10
  %39 = add nuw nsw i64 %12, 1
  br i1 %38, label %8, label %40

40:                                               ; preds = %35, %8, %3
  %41 = phi i1 [ true, %3 ], [ true, %8 ], [ false, %35 ]
  ret i1 %41
}

declare zeroext i1 @_ZN5blink9Character13IsBidiControlEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #9 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %8 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %9 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::NGOffsetMappingUnit"* %1, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  store %"class.blink::NGOffsetMappingUnit"* %2, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  store %"class.blink::NGOffsetMappingUnit"* %3, %"class.blink::NGOffsetMappingUnit"** %9, align 8
  %14 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %2 to i64
  %18 = bitcast %"class.blink::NGOffsetMappingUnit"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %3 to i64
  %21 = bitcast %"class.blink::NGOffsetMappingUnit"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %30 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %29, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  %43 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %9, align 8
  %44 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %49 = bitcast %"class.blink::NGOffsetMappingUnit"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* %48, i8* %50) #10
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #10
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %11, align 8
  %15 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %12, align 8
  %16 = icmp eq %"class.blink::NGOffsetMappingUnit"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %20, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %32, align 8
  %36 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %33, align 8
  %37 = icmp eq %"class.blink::NGOffsetMappingUnit"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::NGOffsetMappingUnit"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %42 = bitcast %"class.blink::NGOffsetMappingUnit"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* %41, i8* %43) #10
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #10
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #3

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1682"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1682", %"class.WTF::Vector.1682"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.1682", %"class.WTF::Vector.1682"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %24, i64 %25
  ret %"class.blink::NGOffsetMappingUnit"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"* } @_ZNK3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE4findEPS4_(%"class.WTF::HashTable.1688"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.1688", %"class.WTF::HashTable.1688"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1691"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.1688", %"class.WTF::HashTable.1688"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.1691"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.1691"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1691", %"struct.WTF::KeyValuePair.1691"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.1691"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.1691"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"* } undef, %"struct.WTF::KeyValuePair.1691"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"* } %78, %"struct.WTF::KeyValuePair.1691"* %77, 1
  ret { %"struct.WTF::KeyValuePair.1691"*, %"struct.WTF::KeyValuePair.1691"* } %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12_GLOBAL__N_130CreatePositionForOffsetMappingERKNS_4NodeEj"}
