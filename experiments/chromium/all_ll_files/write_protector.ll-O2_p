; ModuleID = '../../base/allocator/partition_allocator/starscan/write_protector.cc'
source_filename = "../../base/allocator/partition_allocator/starscan/write_protector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.base::internal::PCScan" = type <{ %"class.base::internal::PCScanScheduler", %"struct.std::__1::atomic.9", i8, [6 x i8] }>
%"class.base::internal::PCScanScheduler" = type { %"struct.base::internal::QuarantineData", %"class.base::internal::LimitBackend", %"class.base::internal::PCScanSchedulingBackend"* }
%"struct.base::internal::QuarantineData" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.base::internal::LimitBackend" = type { %"class.base::internal::PCScanSchedulingBackend" }
%"class.base::internal::PCScanSchedulingBackend" = type { i32 (...)**, %"class.base::internal::PCScanScheduler"* }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::internal::UserFaultFDWriteProtector" = type <{ %"class.base::internal::WriteProtector", i32, [4 x i8] }>
%"class.base::internal::WriteProtector" = type { i32 (...)** }
%"class.base::internal::NoWriteProtector" = type { %"class.base::internal::WriteProtector" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.uffdio_api = type { i64, i64, i64 }
%struct.uffdio_register = type { %struct.uffdio_range, i64, i64 }
%struct.uffdio_range = type { i64, i64 }
%"class.std::__1::thread" = type { i64 }
%"class.std::__1::__thread_struct" = type { %"class.std::__1::__thread_struct_imp"* }
%"class.std::__1::__thread_struct_imp" = type opaque
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.pollfd = type { i32, i16, i16 }
%struct.uffd_msg = type { i8, i8, i16, i32, %union.anon.1 }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { i64, i64, %union.anon.3 }
%union.anon.3 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.uffdio_writeprotect = type { %struct.uffdio_range, i64 }
%"struct.base::internal::DeferredUnmap" = type { i8*, i64 }
%"struct.base::PartitionRoot" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock", [4 x i8], [128 x %"struct.base::internal::PartitionBucket"], %"struct.base::internal::PartitionBucket", i8, [7 x i8], %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionDirectMapExtent"*, [16 x %"struct.base::internal::SlotSpanMetadata"*], i16, [6 x i8], i64, %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::internal::MaybeSpinLock" = type { %"class.base::internal::SpinningMutex" }
%"class.base::internal::SpinningMutex" = type { %"struct.std::__1::atomic.15" }
%"struct.base::internal::PartitionBucket" = type { %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*, i16, i16, i8, i8 }>
%"class.base::internal::PartitionFreelistEntry" = type { %"struct.base::internal::EncodedPartitionFreelistEntry"*, i64 }
%"struct.base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8], [8 x i8] }
%"struct.base::internal::PartitionSuperPageExtentEntry" = type { %"struct.base::PartitionRoot"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"* }
%"struct.base::internal::PartitionDirectMapExtent" = type opaque
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"struct.base::internal::PartitionPage" = type { %union.anon.20, i8, i8 }
%union.anon.20 = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>
%"struct.base::internal::SubsequentPageMetadata" = type { i64 }
%"class.base::internal::ObjectBitmap" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [2048 x i64] }
%"class.base::internal::ThreadCache" = type { [89 x %"struct.base::internal::ThreadCache::Bucket"], i64, %"struct.std::__1::atomic.29", %"struct.base::ThreadCacheStats", %"struct.base::PartitionRoot"*, %"class.base::internal::ThreadCache"*, %"class.base::internal::ThreadCache"* }
%"struct.base::internal::ThreadCache::Bucket" = type <{ %"class.base::internal::PartitionFreelistEntry"*, i8, %"struct.std::__1::atomic.24", i16, [4 x i8] }>
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i8 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"struct.base::ThreadCacheStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [129 x i64], [129 x i64] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__thread_specific_ptr" = type { i32 }

$_ZN4base8internal16NoWriteProtectorD0Ev = comdat any

$_ZN4base8internal16NoWriteProtector12ProtectPagesEmm = comdat any

$_ZN4base8internal16NoWriteProtector14UnprotectPagesEmm = comdat any

$_ZN4base8internal14WriteProtectorD2Ev = comdat any

$_ZN4base8internal25UserFaultFDWriteProtectorD0Ev = comdat any

$_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFviEiEEEEEPvSA_ = comdat any

@_ZTVN4base8internal25UserFaultFDWriteProtectorE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::WriteProtector"*)* @_ZN4base8internal14WriteProtectorD2Ev to i8*), i8* bitcast (void (%"class.base::internal::UserFaultFDWriteProtector"*)* @_ZN4base8internal25UserFaultFDWriteProtectorD0Ev to i8*), i8* bitcast (void (%"class.base::internal::UserFaultFDWriteProtector"*, i64, i64)* @_ZN4base8internal25UserFaultFDWriteProtector12ProtectPagesEmm to i8*), i8* bitcast (void (%"class.base::internal::UserFaultFDWriteProtector"*, i64, i64)* @_ZN4base8internal25UserFaultFDWriteProtector14UnprotectPagesEmm to i8*), i8* bitcast (i8 (%"class.base::internal::UserFaultFDWriteProtector"*)* @_ZNK4base8internal25UserFaultFDWriteProtector18SupportedClearTypeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [69 x i8] c"../../base/allocator/partition_allocator/starscan/write_protector.cc\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"userfaultfd is not supported by the current kernel\00", align 1
@.str.2 = private unnamed_addr constant [131 x i8] c"../../base/allocator/partition_allocator/starscan/write_protector.cc(78) Check failed: -1 != ioctl(uffd_, UFFDIO_API, &uffdio_api)\00", align 1
@.str.3 = private unnamed_addr constant [114 x i8] c"../../base/allocator/partition_allocator/starscan/write_protector.cc(79) Check failed: UFFD_API == uffdio_api.api\00", align 1
@.str.4 = private unnamed_addr constant [141 x i8] c"../../base/allocator/partition_allocator/starscan/write_protector.cc(86) Check failed: -1 != ioctl(uffd_, UFFDIO_REGISTER, &uffdio_register)\00", align 1
@_ZTVN4base8internal16NoWriteProtectorE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::WriteProtector"*)* @_ZN4base8internal14WriteProtectorD2Ev to i8*), i8* bitcast (void (%"class.base::internal::NoWriteProtector"*)* @_ZN4base8internal16NoWriteProtectorD0Ev to i8*), i8* bitcast (void (%"class.base::internal::NoWriteProtector"*, i64, i64)* @_ZN4base8internal16NoWriteProtector12ProtectPagesEmm to i8*), i8* bitcast (void (%"class.base::internal::NoWriteProtector"*, i64, i64)* @_ZN4base8internal16NoWriteProtector14UnprotectPagesEmm to i8*), i8* bitcast (i8 (%"class.base::internal::NoWriteProtector"*)* @_ZNK4base8internal16NoWriteProtector18SupportedClearTypeEv to i8*)] }, align 8
@_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E = external local_unnamed_addr global i64, align 8
@_ZZN4base8internal12_GLOBAL__N_117UserFaultFDThreadEiE11kThreadName = internal unnamed_addr constant [16 x i8] c"PCScanPFHandler\00", align 16
@.str.5 = private unnamed_addr constant [100 x i8] c"../../base/allocator/partition_allocator/starscan/write_protector.cc(47) Check failed: -1 != nready\00", align 1
@.str.6 = private unnamed_addr constant [98 x i8] c"../../base/allocator/partition_allocator/starscan/write_protector.cc(52) Check failed: 0 != nread\00", align 1
@_ZN4base8internal6PCScan9instance_E = external global %"class.base::internal::PCScan", align 8
@_ZN4base8internal18g_thread_cache_keyE = external local_unnamed_addr global i32, align 4
@_ZN4base8internal11ThreadCache28largest_active_bucket_index_E = external local_unnamed_addr global i16, align 2
@.str.8 = private unnamed_addr constant [105 x i8] c"../../base/allocator/partition_allocator/partition_page.h(549) Check failed: slot_start != freelist_head\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.9 = private unnamed_addr constant [26 x i8] c"thread constructor failed\00", align 1

@_ZN4base8internal25UserFaultFDWriteProtectorC1Ev = hidden unnamed_addr alias void (%"class.base::internal::UserFaultFDWriteProtector"*), void (%"class.base::internal::UserFaultFDWriteProtector"*)* @_ZN4base8internal25UserFaultFDWriteProtectorC2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZNK4base8internal16NoWriteProtector18SupportedClearTypeEv(%"class.base::internal::NoWriteProtector"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal25UserFaultFDWriteProtectorC2Ev(%"class.base::internal::UserFaultFDWriteProtector"* nocapture) unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = alloca %struct.uffdio_api, align 16
  %4 = alloca %struct.uffdio_register, align 8
  %5 = alloca %"class.std::__1::thread", align 8
  %6 = getelementptr inbounds %"class.base::internal::UserFaultFDWriteProtector", %"class.base::internal::UserFaultFDWriteProtector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base8internal25UserFaultFDWriteProtectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::internal::UserFaultFDWriteProtector", %"class.base::internal::UserFaultFDWriteProtector"* %0, i64 0, i32 1
  %8 = tail call i64 (i64, ...) @syscall(i64 323, i32 526336) #15
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %7, align 8
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #15
  br i1 %12, label %13, label %58

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %14) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 69, i32 1) #15
  %15 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i64 50) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %14) #15
  br label %58

18:                                               ; preds = %1
  %19 = bitcast %struct.uffdio_api* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  %20 = getelementptr inbounds %struct.uffdio_api, %struct.uffdio_api* %3, i64 0, i32 0
  %21 = getelementptr inbounds %struct.uffdio_api, %struct.uffdio_api* %3, i64 0, i32 2
  store i64 -6148914691236517206, i64* %21, align 16
  %22 = bitcast %struct.uffdio_api* %3 to <2 x i64>*
  store <2 x i64> <i64 170, i64 0>, <2 x i64>* %22, align 16
  %23 = call i32 (i32, i64, ...) @ioctl(i32 %9, i64 3222841919, %struct.uffdio_api* nonnull %3) #15
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %18
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.2, i64 0, i64 0)) #15
  br label %26

26:                                               ; preds = %18, %25
  %27 = load i64, i64* %20, align 16
  %28 = icmp eq i64 %27, 170
  br i1 %28, label %30, label %29, !prof !3

29:                                               ; preds = %26
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.3, i64 0, i64 0)) #15
  br label %30

30:                                               ; preds = %26, %29
  %31 = bitcast %struct.uffdio_register* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #15
  %32 = getelementptr inbounds %struct.uffdio_register, %struct.uffdio_register* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %struct.uffdio_register, %struct.uffdio_register* %4, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %struct.uffdio_register, %struct.uffdio_register* %4, i64 0, i32 2
  store i64 -6148914691236517206, i64* %34, align 8
  %35 = load i64, i64* @_ZN4base8internal21PartitionAddressSpace22brp_pool_base_address_E, align 8
  store i64 %35, i64* %32, align 8
  %36 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 8589934592, i64 2>, <2 x i64>* %36, align 8
  %37 = load i32, i32* %7, align 8
  %38 = call i32 (i32, i64, ...) @ioctl(i32 %37, i64 3223366144, %struct.uffdio_register* nonnull %4) #15
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %30
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.4, i64 0, i64 0)) #15
  br label %41

41:                                               ; preds = %30, %40
  %42 = bitcast %"class.std::__1::thread"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  %43 = call i8* @_Znwm(i64 8) #16
  %44 = bitcast i8* %43 to %"class.std::__1::__thread_struct"*
  call void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"* nonnull %44) #15
  %45 = ptrtoint i8* %43 to i64
  %46 = call i8* @_Znwm(i64 24) #16
  %47 = load i32, i32* %7, align 4
  %48 = bitcast i8* %46 to i64*
  store i64 %45, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %46, i64 8
  %50 = bitcast i8* %49 to i64*
  store i64 ptrtoint (void (i32)* @_ZN4base8internal12_GLOBAL__N_117UserFaultFDThreadEi to i64), i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %46, i64 16
  %52 = bitcast i8* %51 to i32*
  store i32 %47, i32* %52, align 4
  %53 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %5, i64 0, i32 0
  %54 = call i32 @pthread_create(i64* nonnull %53, %union.pthread_attr_t* null, i8* (i8*)* nonnull @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFviEiEEEEEPvSA_, i8* nonnull %46) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %41
  call void @_ZNSt3__120__throw_system_errorEiPKc(i32 %54, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)) #17
  unreachable

57:                                               ; preds = %41
  call void @_ZNSt3__16thread6detachEv(%"class.std::__1::thread"* nonnull %5) #15
  call void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  br label %58

58:                                               ; preds = %13, %11, %57
  ret void
}

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) local_unnamed_addr #2

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN4base8internal12_GLOBAL__N_117UserFaultFDThreadEi(i32) #6 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %struct.pollfd*
  %5 = alloca %struct.uffd_msg, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 15, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 16 getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4base8internal12_GLOBAL__N_117UserFaultFDThreadEiE11kThreadName, i64 0, i64 0), i64 15, i1 false) #15
  %9 = getelementptr inbounds i8, i8* %6, i64 15
  store i8 0, i8* %9, align 1
  call void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #15
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #16
  br label %15

15:                                               ; preds = %1, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  %16 = bitcast i64* %3 to i8*
  %17 = bitcast i64* %3 to i32*
  %18 = getelementptr inbounds %struct.uffd_msg, %struct.uffd_msg* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %15, %44
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  store i64 7158278826, i64* %3, align 8
  store i32 %0, i32* %17, align 8
  br label %20

20:                                               ; preds = %23, %19
  %21 = call i32 @poll(%struct.pollfd* nonnull %4, i64 1, i32 -1) #15
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %28, !prof !4

23:                                               ; preds = %20
  %24 = tail call i32* @__errno_location() #18
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %20, label %27

27:                                               ; preds = %23
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.5, i64 0, i64 0)) #15
  br label %28

28:                                               ; preds = %20, %27
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 -86, i64 32, i1 false)
  br label %29

29:                                               ; preds = %32, %28
  %30 = call i64 @read(i32 %0, i8* nonnull %18, i64 32) #15
  %31 = icmp eq i64 %30, -1
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = tail call i32* @__errno_location() #18
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %29, label %40

36:                                               ; preds = %29
  %37 = trunc i64 %30 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %36
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.6, i64 0, i64 0)) #15
  br label %40

40:                                               ; preds = %32, %36, %39
  %41 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %42 = icmp eq i8 %41, 2
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %40
  call void @_ZN4base8internal6PCScan8JoinScanEv() #15
  br label %44

44:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %19
}

declare void @_ZNSt3__16thread6detachEv(%"class.std::__1::thread"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal25UserFaultFDWriteProtector12ProtectPagesEmm(%"class.base::internal::UserFaultFDWriteProtector"* nocapture readonly, i64, i64) unnamed_addr #1 align 2 {
  %4 = alloca %struct.uffdio_writeprotect, align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.base::internal::UserFaultFDWriteProtector", %"class.base::internal::UserFaultFDWriteProtector"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.uffdio_writeprotect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %struct.uffdio_writeprotect, %struct.uffdio_writeprotect* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.uffdio_writeprotect, %struct.uffdio_writeprotect* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %struct.uffdio_writeprotect, %struct.uffdio_writeprotect* %4, i64 0, i32 1
  store i64 %1, i64* %11, align 8
  store i64 %2, i64* %12, align 8
  store i64 1, i64* %13, align 8
  %14 = call i32 (i32, i64, ...) @ioctl(i32 %7, i64 3222841862, %struct.uffdio_writeprotect* nonnull %4) #15
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %20

16:                                               ; preds = %9
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #15
  store i32 -1431655766, i32* %5, align 4
  %18 = tail call i32* @__errno_location() #18
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %5, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %17) #15
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !6
  unreachable

20:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  br label %21

21:                                               ; preds = %3, %20
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal25UserFaultFDWriteProtector11IsSupportedEv(%"class.base::internal::UserFaultFDWriteProtector"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::UserFaultFDWriteProtector", %"class.base::internal::UserFaultFDWriteProtector"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal25UserFaultFDWriteProtector14UnprotectPagesEmm(%"class.base::internal::UserFaultFDWriteProtector"* nocapture readonly, i64, i64) unnamed_addr #1 align 2 {
  %4 = alloca %struct.uffdio_writeprotect, align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.base::internal::UserFaultFDWriteProtector", %"class.base::internal::UserFaultFDWriteProtector"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = bitcast %struct.uffdio_writeprotect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %struct.uffdio_writeprotect, %struct.uffdio_writeprotect* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.uffdio_writeprotect, %struct.uffdio_writeprotect* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %struct.uffdio_writeprotect, %struct.uffdio_writeprotect* %4, i64 0, i32 1
  store i64 %1, i64* %11, align 8
  store i64 %2, i64* %12, align 8
  store i64 0, i64* %13, align 8
  %14 = call i32 (i32, i64, ...) @ioctl(i32 %7, i64 3222841862, %struct.uffdio_writeprotect* nonnull %4) #15
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %20

16:                                               ; preds = %9
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #15
  store i32 -1431655766, i32* %5, align 4
  %18 = tail call i32* @__errno_location() #18
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %5, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %17) #15
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !6
  unreachable

20:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  br label %21

21:                                               ; preds = %3, %20
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK4base8internal25UserFaultFDWriteProtector18SupportedClearTypeEv(%"class.base::internal::UserFaultFDWriteProtector"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::UserFaultFDWriteProtector", %"class.base::internal::UserFaultFDWriteProtector"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, -1
  %5 = zext i1 %4 to i8
  ret i8 %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal16NoWriteProtectorD0Ev(%"class.base::internal::NoWriteProtector"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.base::internal::NoWriteProtector"* %0 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal16NoWriteProtector12ProtectPagesEmm(%"class.base::internal::NoWriteProtector"*, i64, i64) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal16NoWriteProtector14UnprotectPagesEmm(%"class.base::internal::NoWriteProtector"*, i64, i64) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal14WriteProtectorD2Ev(%"class.base::internal::WriteProtector"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal25UserFaultFDWriteProtectorD0Ev(%"class.base::internal::UserFaultFDWriteProtector"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.base::internal::UserFaultFDWriteProtector"* %0 to i8*
  tail call void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8* %2) #15
  ret void
}

declare void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare i32 @poll(%struct.pollfd*, i64, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN4base8internal6PCScan8JoinScanEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal34AllocatedOnPCScanMetadataPartitiondlEPv(i8*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = tail call dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() #15
  %4 = icmp eq i8* %0, null
  br i1 %4, label %237, label %5, !prof !2

5:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %0, i32 0, i32 3, i32 1) #15
  %6 = ptrtoint i8* %0 to i64
  %7 = and i64 %6, -2097152
  %8 = or i64 %7, 4096
  %9 = inttoptr i64 %8 to i8*
  %10 = lshr i64 %6, 9
  %11 = and i64 %10, 4064
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  %13 = bitcast i8* %12 to %"struct.base::internal::PartitionPage"*
  %14 = getelementptr inbounds i8, i8* %12, i64 30
  %15 = load i8, i8* %14, align 2
  %16 = zext i8 %15 to i64
  %17 = sub nsw i64 0, %16
  %18 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0
  %19 = bitcast %union.anon.20* %18 to %"struct.base::internal::SlotSpanMetadata"*
  %20 = bitcast %union.anon.20* %18 to i8*
  tail call void @llvm.prefetch(i8* %20, i32 0, i32 3, i32 1) #15
  %21 = ptrtoint %union.anon.20* %18 to i64
  %22 = and i64 %21, -4096
  %23 = inttoptr i64 %22 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %24 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %23, i64 0, i32 0
  %25 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %24, align 4096
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %98, !prof !2

29:                                               ; preds = %5
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #15
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 8
  %35 = bitcast i8* %34 to %"struct.base::internal::PartitionBucket"**
  %36 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %35, align 1
  %37 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 10, i64 0
  %38 = icmp ugt %"struct.base::internal::PartitionBucket"* %37, %36
  %39 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 11
  %40 = icmp ult %"struct.base::internal::PartitionBucket"* %39, %36
  %41 = or i1 %38, %40
  br i1 %41, label %98, label %42, !prof !2

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 21
  %44 = load i8, i8* %43, align 1, !range !7
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50, !prof !3

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %36, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  br label %57

50:                                               ; preds = %42
  %51 = bitcast %union.anon.20* %18 to %"struct.base::internal::PartitionPage"*
  %52 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %51, i64 1, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %36, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %50, %46
  %58 = phi i64 [ %49, %46 ], [ %56, %50 ]
  %59 = phi i64 [ %49, %46 ], [ %53, %50 ]
  %60 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %61 = inttoptr i64 %7 to i8*
  %62 = and i64 %60, 1
  %63 = icmp eq i64 %62, 0
  %64 = select i1 %63, i64 16384, i64 32768
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  %66 = bitcast i8* %65 to %"class.base::internal::ObjectBitmap"*
  %67 = lshr i64 %6, 4
  %68 = lshr i64 %6, 10
  %69 = and i64 %68, 2047
  %70 = and i64 %67, 63
  %71 = shl i64 1, %70
  %72 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %66, i64 0, i32 0, i32 0, i64 %69
  %73 = atomicrmw or i64* %72, i64 %71 monotonic
  %74 = and i64 %73, %71
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %77, label %76, !prof !3

76:                                               ; preds = %57
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #17
  unreachable

77:                                               ; preds = %57
  %78 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %58 monotonic
  %79 = add i64 %78, %58
  %80 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %81 = icmp ugt i64 %79, %80
  br i1 %81, label %82, label %88

82:                                               ; preds = %77
  %83 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %84 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %83 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %85 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %84, align 8
  %86 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %85, align 8
  %87 = tail call zeroext i1 %86(%"class.base::internal::PCScanSchedulingBackend"* %83) #15
  br label %88

88:                                               ; preds = %82, %77
  %89 = phi i1 [ false, %77 ], [ %87, %82 ]
  %90 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %91 = icmp eq i8 %90, 1
  br i1 %91, label %92, label %93

92:                                               ; preds = %88
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %59, i1 false) #15
  br label %93

93:                                               ; preds = %92, %88
  br i1 %89, label %94, label %237, !prof !2

94:                                               ; preds = %93
  %95 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %237

97:                                               ; preds = %94
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #15
  br label %237

98:                                               ; preds = %33, %5
  %99 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 2
  %100 = load i8, i8* %99, align 2, !range !7
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %170, label %102, !prof !2

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 8
  %104 = bitcast i8* %103 to %"struct.base::internal::PartitionBucket"**
  %105 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %104, align 1
  %106 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 10, i64 0
  %107 = icmp ule %"struct.base::internal::PartitionBucket"* %106, %105
  %108 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 11
  %109 = icmp uge %"struct.base::internal::PartitionBucket"* %108, %105
  %110 = and i1 %109, %107
  %111 = ptrtoint %"struct.base::internal::PartitionBucket"* %105 to i64
  br i1 %110, label %112, label %170, !prof !3

112:                                              ; preds = %102
  %113 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %114 = tail call i8* @pthread_getspecific(i32 %113) #15
  %115 = bitcast i8* %114 to %"class.base::internal::ThreadCache"*
  %116 = icmp ugt i8* %114, inttoptr (i64 1 to i8*)
  br i1 %116, label %117, label %170, !prof !3

117:                                              ; preds = %112
  %118 = ptrtoint %"struct.base::internal::PartitionBucket"* %106 to i64
  %119 = sub i64 %111, %118
  %120 = sdiv exact i64 %119, 40
  %121 = getelementptr inbounds i8, i8* %114, i64 1480
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %123, 1
  store i64 %124, i64* %122, align 8
  %125 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %126 = zext i16 %125 to i64
  %127 = icmp ugt i64 %120, %126
  br i1 %127, label %128, label %133, !prof !2

128:                                              ; preds = %117
  %129 = getelementptr inbounds i8, i8* %114, i64 1496
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %130, align 8
  br label %170

133:                                              ; preds = %117
  %134 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120
  %135 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = tail call i64 @llvm.bswap.i64(i64 %136) #15
  %138 = inttoptr i64 %137 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %139 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %138, %"struct.base::internal::EncodedPartitionFreelistEntry"** %139, align 8
  %140 = xor i64 %137, -1
  %141 = getelementptr inbounds i8, i8* %0, i64 8
  %142 = bitcast i8* %141 to i64*
  store i64 %140, i64* %142, align 8
  %143 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %134 to i8**
  store i8* %0, i8** %143, align 8
  %144 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120, i32 1
  %145 = load i8, i8* %144, align 8
  %146 = add i8 %145, 1
  store i8 %146, i8* %144, align 8
  %147 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120, i32 3
  %148 = load i16, i16* %147, align 2
  %149 = zext i16 %148 to i64
  %150 = getelementptr inbounds i8, i8* %114, i64 1424
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, %149
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i8, i8* %114, i64 1488
  %155 = bitcast i8* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %155, align 8
  %158 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %115, i64 0, i32 0, i64 %120, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i8, i8* %158 monotonic, align 1
  %160 = icmp ugt i8 %146, %159
  br i1 %160, label %161, label %164, !prof !2

161:                                              ; preds = %133
  %162 = lshr i8 %159, 1
  %163 = zext i8 %162 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %115, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %134, i64 %163) #15
  br label %164

164:                                              ; preds = %161, %133
  %165 = getelementptr inbounds i8, i8* %114, i64 1432
  %166 = load atomic i8, i8* %165 monotonic, align 1
  %167 = and i8 %166, 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %237, label %169, !prof !3

169:                                              ; preds = %164
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %115) #15
  br label %237

170:                                              ; preds = %128, %112, %102, %98
  %171 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #15
  %172 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %173 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 16, i1 false) #15
  %174 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %25, i64 0, i32 8
  %175 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %174, i64 0, i32 0
  %176 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %177

177:                                              ; preds = %189, %170
  %178 = phi i32 [ 0, %170 ], [ %190, %189 ]
  %179 = phi i32 [ 1, %170 ], [ %193, %189 ]
  %180 = load atomic i32, i32* %176 monotonic, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %185, !prof !8

182:                                              ; preds = %177
  %183 = cmpxchg weak i32* %176, i32 0, i32 1 acquire monotonic
  %184 = extractvalue { i32, i1 } %183, 1
  br i1 %184, label %200, label %185, !prof !3

185:                                              ; preds = %182, %177
  %186 = icmp sgt i32 %179, 0
  br i1 %186, label %195, label %189

187:                                              ; preds = %195
  %188 = add i32 %179, %178
  br label %189

189:                                              ; preds = %187, %185
  %190 = phi i32 [ %178, %185 ], [ %188, %187 ]
  %191 = shl i32 %179, 1
  %192 = icmp slt i32 %191, 64
  %193 = select i1 %192, i32 %191, i32 64
  %194 = icmp slt i32 %190, 1000
  br i1 %194, label %177, label %199

195:                                              ; preds = %185, %195
  %196 = phi i32 [ %197, %195 ], [ 0, %185 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !9
  %197 = add nuw nsw i32 %196, 1
  %198 = icmp eq i32 %197, %179
  br i1 %198, label %187, label %195

199:                                              ; preds = %189
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %175) #15
  br label %200

200:                                              ; preds = %182, %199
  %201 = bitcast %union.anon.20* %18 to i8**
  %202 = load i8*, i8** %201, align 1
  %203 = icmp eq i8* %202, %0
  br i1 %203, label %206, label %204, !prof !2

204:                                              ; preds = %200
  %205 = ptrtoint i8* %202 to i64
  br label %209

206:                                              ; preds = %200
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.8, i64 0, i64 0)) #15
  %207 = getelementptr inbounds %union.anon.20, %union.anon.20* %18, i64 0, i32 0, i32 0
  %208 = load i64, i64* %207, align 1
  br label %209

209:                                              ; preds = %206, %204
  %210 = phi i64 [ %205, %204 ], [ %208, %206 ]
  %211 = tail call i64 @llvm.bswap.i64(i64 %210) #15
  %212 = inttoptr i64 %211 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %213 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %212, %"struct.base::internal::EncodedPartitionFreelistEntry"** %213, align 8
  %214 = xor i64 %211, -1
  %215 = getelementptr inbounds i8, i8* %0, i64 8
  %216 = bitcast i8* %215 to i64*
  store i64 %214, i64* %216, align 8
  store i8* %0, i8** %201, align 1
  %217 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %13, i64 %17, i32 0, i32 1, i64 16
  %218 = bitcast i8* %217 to i16*
  %219 = load i16, i16* %218, align 1
  %220 = add i16 %219, -1
  store i16 %220, i16* %218, align 1
  %221 = icmp slt i16 %220, 1
  br i1 %221, label %222, label %226, !prof !2

222:                                              ; preds = %209
  %223 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %19) #15
  %224 = extractvalue { i8*, i64 } %223, 0
  %225 = extractvalue { i8*, i64 } %223, 1
  br label %226

226:                                              ; preds = %222, %209
  %227 = phi i8* [ %224, %222 ], [ null, %209 ]
  %228 = phi i64 [ %225, %222 ], [ 0, %209 ]
  store i8* %227, i8** %172, align 8
  store i64 %228, i64* %173, align 8
  %229 = atomicrmw xchg i32* %176, i32 0 release
  %230 = icmp eq i32 %229, 2
  br i1 %230, label %231, label %232, !prof !2

231:                                              ; preds = %226
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %175) #15
  br label %232

232:                                              ; preds = %231, %226
  %233 = load i8*, i8** %172, align 8
  %234 = icmp eq i8* %233, null
  br i1 %234, label %236, label %235, !prof !3

235:                                              ; preds = %232
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #15
  br label %236

236:                                              ; preds = %235, %232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #15
  br label %237

237:                                              ; preds = %1, %93, %94, %97, %164, %169, %236
  ret void
}

declare dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: noreturn
declare void @_ZN4base8internal17DoubleFreeAttemptEv() local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @pthread_getspecific(i32) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"*, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16), i64) local_unnamed_addr #3

declare void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #14

declare void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3

declare void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #3

declare void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFviEiEEEEEPvSA_(i8*) #1 comdat {
  %2 = tail call dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() #15
  %3 = bitcast i8* %0 to %"class.std::__1::__thread_struct"**
  %4 = bitcast i8* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %3, align 8
  %6 = getelementptr inbounds %"class.std::__1::__thread_specific_ptr", %"class.std::__1::__thread_specific_ptr"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @pthread_setspecific(i32 %7, i8* %5) #15
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to void (i32)**
  %11 = getelementptr inbounds i8, i8* %0, i64 16
  %12 = bitcast i8* %11 to i32*
  %13 = load void (i32)*, void (i32)** %10, align 8
  %14 = load i32, i32* %12, align 4
  tail call void %13(i32 %14) #15
  %15 = icmp eq i8* %0, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %1
  %17 = load %"class.std::__1::__thread_struct"*, %"class.std::__1::__thread_struct"** %3, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %3, align 8
  %18 = icmp eq %"class.std::__1::__thread_struct"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  tail call void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"* nonnull %17) #15
  %20 = bitcast %"class.std::__1::__thread_struct"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #16
  br label %21

21:                                               ; preds = %19, %16
  tail call void @_ZdlPv(i8* nonnull %0) #16
  br label %22

22:                                               ; preds = %1, %21
  ret i8* null
}

; Function Attrs: noreturn
declare void @_ZNSt3__120__throw_system_errorEiPKc(i32, i8*) local_unnamed_addr #13

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #2

declare dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_setspecific(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inaccessiblemem_or_argmemonly nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 2000, i32 2000}
!5 = !{i32 -2141722859}
!6 = !{i32 -2141722838}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 2146410443, i32 1073205}
!9 = !{i32 -2142404726}
