; ModuleID = '../../base/trace_event/heap_profiler_event_filter.cc'
source_filename = "../../base/trace_event/heap_profiler_event_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::trace_event::HeapProfilerEventFilter" = type { %"class.base::trace_event::TraceEventFilter" }
%"class.base::trace_event::TraceEventFilter" = type { i32 (...)** }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon, i32, i64, i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.0" }
%"class.base::time_internal::TimeBase.0" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%union.anon = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::trace_event::AllocationContextTracker" = type <{ %"class.std::__1::vector.10", i8*, %"class.std::__1::vector.17", i32, [4 x i8] }>
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"*, %"class.std::__1::__compressed_pair.12" }
%"struct.base::trace_event::StackFrame" = type { i32, i8* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.base::trace_event::StackFrame"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i8**, i8**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i8** }

$_ZN4base11trace_event23HeapProfilerEventFilterD0Ev = comdat any

@_ZN4base11trace_event23HeapProfilerEventFilter5kNameE = hidden local_unnamed_addr constant [24 x i8] c"heap_profiler_predicate\00", align 16
@_ZTVN4base11trace_event23HeapProfilerEventFilterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TraceEventFilter"*)* @_ZN4base11trace_event16TraceEventFilterD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::HeapProfilerEventFilter"*)* @_ZN4base11trace_event23HeapProfilerEventFilterD0Ev to i8*), i8* bitcast (i1 (%"class.base::trace_event::HeapProfilerEventFilter"*, %"class.base::trace_event::TraceEvent"*)* @_ZNK4base11trace_event23HeapProfilerEventFilter16FilterTraceEventERKNS0_10TraceEventE to i8*), i8* bitcast (void (%"class.base::trace_event::HeapProfilerEventFilter"*, i8*, i8*)* @_ZNK4base11trace_event23HeapProfilerEventFilter8EndEventEPKcS3_ to i8*)] }, align 8
@_ZN4base11trace_event24AllocationContextTracker13capture_mode_E = external local_unnamed_addr global %"struct.std::__1::atomic", align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base11trace_event23HeapProfilerEventFilter16FilterTraceEventERKNS0_10TraceEventE(%"class.base::trace_event::HeapProfilerEventFilter"* nocapture readnone, %"class.base::trace_event::TraceEvent"* nocapture readonly dereferenceable(152)) unnamed_addr #0 align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %14, label %8

8:                                                ; preds = %5, %2
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %8
  %12 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %33

14:                                               ; preds = %5, %11
  %15 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 13
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 8
  %21 = load i8*, i8** %20, align 8
  %22 = tail call %"struct.base::trace_event::TraceCategory"* @_ZN4base11trace_event16CategoryRegistry21GetCategoryByStatePtrEPKh(i8* %21) #4
  %23 = getelementptr inbounds %"struct.base::trace_event::TraceCategory", %"struct.base::trace_event::TraceCategory"* %22, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 9
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceEvent", %"class.base::trace_event::TraceEvent"* %1, i64 0, i32 15
  %28 = load i8, i8* %27, align 8
  switch i8 %28, label %33 [
    i8 66, label %29
    i8 88, label %29
    i8 69, label %31
  ]

29:                                               ; preds = %19, %19
  %30 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #4
  tail call void @_ZN4base11trace_event24AllocationContextTracker20PushPseudoStackFrameENS1_16PseudoStackFrameE(%"class.base::trace_event::AllocationContextTracker"* %30, i8* %24, i8* %26) #4
  br label %33

31:                                               ; preds = %19
  %32 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #4
  tail call void @_ZN4base11trace_event24AllocationContextTracker19PopPseudoStackFrameENS1_16PseudoStackFrameE(%"class.base::trace_event::AllocationContextTracker"* %32, i8* %24, i8* %26) #4
  br label %33

33:                                               ; preds = %19, %8, %29, %31, %14, %11
  ret i1 true
}

declare %"struct.base::trace_event::TraceCategory"* @_ZN4base11trace_event16CategoryRegistry21GetCategoryByStatePtrEPKh(i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker20PushPseudoStackFrameENS1_16PseudoStackFrameE(%"class.base::trace_event::AllocationContextTracker"*, i8*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker19PopPseudoStackFrameENS1_16PseudoStackFrameE(%"class.base::trace_event::AllocationContextTracker"*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11trace_event23HeapProfilerEventFilter8EndEventEPKcS3_(%"class.base::trace_event::HeapProfilerEventFilter"* nocapture readnone, i8*, i8*) unnamed_addr #0 align 2 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %15, label %9

9:                                                ; preds = %6, %3
  %10 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %17

15:                                               ; preds = %6, %12
  %16 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #4
  tail call void @_ZN4base11trace_event24AllocationContextTracker19PopPseudoStackFrameENS1_16PseudoStackFrameE(%"class.base::trace_event::AllocationContextTracker"* %16, i8* %1, i8* %2) #4
  br label %17

17:                                               ; preds = %9, %15, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base11trace_event16TraceEventFilterD2Ev(%"class.base::trace_event::TraceEventFilter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event23HeapProfilerEventFilterD0Ev(%"class.base::trace_event::HeapProfilerEventFilter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::HeapProfilerEventFilter", %"class.base::trace_event::HeapProfilerEventFilter"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event16TraceEventFilterD2Ev(%"class.base::trace_event::TraceEventFilter"* %2) #4
  %3 = bitcast %"class.base::trace_event::HeapProfilerEventFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

declare %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
