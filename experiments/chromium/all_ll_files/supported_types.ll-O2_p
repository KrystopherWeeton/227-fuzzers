; ModuleID = '../../media/base/supported_types.cc'
source_filename = "../../media/base/supported_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::AudioType" = type { i32, i32, i8 }
%"class.media::MediaClient" = type { i32 (...)** }
%"struct.media::VideoType" = type { i32, i32, i32, %"class.media::VideoColorSpace", i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%struct.vpx_codec_iface = type opaque

@_ZZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd = internal global i8 0, align 1
@_ZGVZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media20IsSupportedAudioTypeERKNS_9AudioTypeE(%"struct.media::AudioType"* dereferenceable(12)) local_unnamed_addr #0 {
  %2 = tail call %"class.media::MediaClient"* @_ZN5media14GetMediaClientEv() #6
  %3 = icmp eq %"class.media::MediaClient"* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.media::MediaClient"* %2 to i1 (%"class.media::MediaClient"*, %"struct.media::AudioType"*)***
  %6 = load i1 (%"class.media::MediaClient"*, %"struct.media::AudioType"*)**, i1 (%"class.media::MediaClient"*, %"struct.media::AudioType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.media::MediaClient"*, %"struct.media::AudioType"*)*, i1 (%"class.media::MediaClient"*, %"struct.media::AudioType"*)** %6, i64 4
  %8 = load i1 (%"class.media::MediaClient"*, %"struct.media::AudioType"*)*, i1 (%"class.media::MediaClient"*, %"struct.media::AudioType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.media::MediaClient"* nonnull %2, %"struct.media::AudioType"* dereferenceable(12) %0) #6
  br label %24

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, -2
  %18 = icmp ult i32 %17, 13
  br i1 %18, label %19, label %24

19:                                               ; preds = %14
  %20 = trunc i32 %17 to i13
  %21 = lshr i13 -2225, %20
  %22 = and i13 %21, 1
  %23 = icmp ne i13 %22, 0
  ret i1 %23

24:                                               ; preds = %14, %10, %4
  %25 = phi i1 [ %9, %4 ], [ false, %10 ], [ false, %14 ]
  ret i1 %25
}

declare %"class.media::MediaClient"* @_ZN5media14GetMediaClientEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5media27IsDefaultSupportedAudioTypeERKNS_9AudioTypeE(%"struct.media::AudioType"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp ult i32 %8, 13
  br i1 %9, label %10, label %15

10:                                               ; preds = %5
  %11 = trunc i32 %8 to i13
  %12 = lshr i13 -2225, %11
  %13 = and i13 %12, 1
  %14 = icmp ne i13 %13, 0
  ret i1 %14

15:                                               ; preds = %5, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media20IsSupportedVideoTypeERKNS_9VideoTypeE(%"struct.media::VideoType"* dereferenceable(20)) local_unnamed_addr #0 {
  %2 = tail call %"class.media::MediaClient"* @_ZN5media14GetMediaClientEv() #6
  %3 = icmp eq %"class.media::MediaClient"* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.media::MediaClient"* %2 to i1 (%"class.media::MediaClient"*, %"struct.media::VideoType"*)***
  %6 = load i1 (%"class.media::MediaClient"*, %"struct.media::VideoType"*)**, i1 (%"class.media::MediaClient"*, %"struct.media::VideoType"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.media::MediaClient"*, %"struct.media::VideoType"*)*, i1 (%"class.media::MediaClient"*, %"struct.media::VideoType"*)** %6, i64 5
  %8 = load i1 (%"class.media::MediaClient"*, %"struct.media::VideoType"*)*, i1 (%"class.media::MediaClient"*, %"struct.media::VideoType"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.media::MediaClient"* nonnull %2, %"struct.media::VideoType"* dereferenceable(20) %0) #6
  br label %12

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZN5media27IsDefaultSupportedVideoTypeERKNS_9VideoTypeE(%"struct.media::VideoType"* dereferenceable(20) %0)
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i1 [ %9, %4 ], [ %11, %10 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media27IsDefaultSupportedVideoTypeERKNS_9VideoTypeE(%"struct.media::VideoType"* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %59

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %59 [
    i32 5, label %58
    i32 6, label %58
    i32 7, label %23
    i32 10, label %8
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 0
  %10 = load i8, i8* %9, align 1
  switch i8 %10, label %11 [
    i8 22, label %59
    i8 0, label %59
  ]

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %59, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, -1
  br i1 %18, label %59, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp ne i8 %21, 0
  br label %59

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 0
  %25 = load i8, i8* %24, align 1
  switch i8 %25, label %26 [
    i8 22, label %59
    i8 0, label %59
  ]

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %59, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, -1
  br i1 %33, label %59, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 3
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %59, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load atomic i8, i8* bitcast (i64* @_ZGVZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd to i8*) acquire, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %53, !prof !3

43:                                               ; preds = %38
  %44 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd) #6
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = tail call %struct.vpx_codec_iface* @vpx_codec_vp9_dx() #6
  %48 = tail call i64 @vpx_codec_get_caps(%struct.vpx_codec_iface* %47) #6
  %49 = lshr i64 %48, 2
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  store i8 %51, i8* @_ZZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd, align 1
  %52 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd) #6
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd) #6
  br label %53

53:                                               ; preds = %46, %43, %38
  switch i32 %40, label %57 [
    i32 12, label %59
    i32 13, label %59
    i32 14, label %54
    i32 15, label %54
  ]

54:                                               ; preds = %53, %53
  %55 = load i8, i8* @_ZZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  br label %59

57:                                               ; preds = %53
  br label %59

58:                                               ; preds = %5, %5
  br label %59

59:                                               ; preds = %34, %5, %58, %1, %30, %26, %23, %23, %57, %54, %53, %53, %19, %15, %11, %8, %8
  %60 = phi i1 [ false, %34 ], [ false, %8 ], [ false, %8 ], [ false, %11 ], [ false, %15 ], [ %22, %19 ], [ false, %57 ], [ %56, %54 ], [ true, %53 ], [ true, %53 ], [ false, %1 ], [ false, %23 ], [ false, %23 ], [ false, %26 ], [ false, %30 ], [ true, %58 ], [ false, %5 ]
  ret i1 %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5media21IsColorSpaceSupportedERKNS_15VideoColorSpaceE(%"class.media::VideoColorSpace"* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %4 [
    i8 22, label %16
    i8 0, label %16
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, -1
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.media::VideoColorSpace", %"class.media::VideoColorSpace"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = icmp ne i8 %14, 0
  br label %16

16:                                               ; preds = %12, %8, %4, %1, %1
  %17 = phi i1 [ false, %1 ], [ false, %1 ], [ false, %4 ], [ false, %8 ], [ %15, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileE(i32) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %14, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = tail call %struct.vpx_codec_iface* @vpx_codec_vp9_dx() #6
  %9 = tail call i64 @vpx_codec_get_caps(%struct.vpx_codec_iface* %8) #6
  %10 = lshr i64 %9, 2
  %11 = trunc i64 %10 to i8
  %12 = and i8 %11, 1
  store i8 %12, i8* @_ZZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd, align 1
  %13 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd) #6
  br label %14

14:                                               ; preds = %4, %7, %1
  switch i32 %0, label %18 [
    i32 12, label %19
    i32 13, label %19
    i32 14, label %15
    i32 15, label %15
  ]

15:                                               ; preds = %14, %14
  %16 = load i8, i8* @_ZZN5media21IsVp9ProfileSupportedENS_17VideoCodecProfileEE16vpx_supports_hbd, align 1, !range !2
  %17 = icmp ne i8 %16, 0
  br label %19

18:                                               ; preds = %14
  br label %19

19:                                               ; preds = %14, %14, %18, %15
  %20 = phi i1 [ false, %18 ], [ %17, %15 ], [ true, %14 ], [ true, %14 ]
  ret i1 %20
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

declare i64 @vpx_codec_get_caps(%struct.vpx_codec_iface*) local_unnamed_addr #1

declare %struct.vpx_codec_iface* @vpx_codec_vp9_dx() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5media23IsAudioCodecProprietaryENS_10AudioCodecE(i32) local_unnamed_addr #5 {
  %2 = icmp ult i32 %0, 18
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = trunc i32 %0 to i18
  %5 = lshr i18 -23870, %4
  %6 = and i18 %5, 1
  %7 = icmp ne i18 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5media23IsVideoCodecProprietaryENS_10VideoCodecE(i32) local_unnamed_addr #5 {
  %2 = icmp ult i32 %0, 11
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = trunc i32 %0 to i11
  %5 = lshr i11 798, %4
  %6 = and i11 %5, 1
  %7 = icmp ne i11 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
