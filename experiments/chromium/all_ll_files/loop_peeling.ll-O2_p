; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_peeling.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_peeling.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.spvtools::opt::LoopUtils::LoopCloningResult" = type { %"class.std::__1::unordered_map.976", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328", %"class.std::__1::vector.38" }
%"class.std::__1::unordered_map.976" = type { %"class.std::__1::__hash_table.977" }
%"class.std::__1::__hash_table.977" = type <{ %"class.std::__1::unique_ptr.978", %"class.std::__1::__compressed_pair.988", %"class.std::__1::__compressed_pair.993", %"class.std::__1::__compressed_pair.996", [4 x i8] }>
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980", %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"struct.std::__1::__hash_node_base.981"** }
%"struct.std::__1::__hash_node_base.981" = type { %"struct.std::__1::__hash_node_base.981"* }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.std::__1::__bucket_list_deallocator.983" }
%"class.std::__1::__bucket_list_deallocator.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"struct.std::__1::__hash_node_base.981" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.spvtools::opt::LoopUtils" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.910", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.939", %"class.std::__1::vector.963" }
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.910", %"class.std::__1::unordered_set.917", i8, [7 x i8] }>
%"class.std::__1::unordered_set.917" = type { %"class.std::__1::__hash_table.918" }
%"class.std::__1::__hash_table.918" = type <{ %"class.std::__1::unique_ptr.919", %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921", %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::__hash_node_base.922"** }
%"struct.std::__1::__hash_node_base.922" = type { %"struct.std::__1::__hash_node_base.922"* }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::__bucket_list_deallocator.924" }
%"class.std::__1::__bucket_list_deallocator.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::__hash_node_base.922" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.939" = type { %"class.std::__1::__hash_table.940" }
%"class.std::__1::__hash_table.940" = type <{ %"class.std::__1::unique_ptr.941", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.956", %"class.std::__1::__compressed_pair.959", [4 x i8] }>
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943", %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.944"** }
%"struct.std::__1::__hash_node_base.944" = type { %"struct.std::__1::__hash_node_base.944"* }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.std::__1::__bucket_list_deallocator.946" }
%"class.std::__1::__bucket_list_deallocator.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.944" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.971" }
%"struct.std::__1::pair" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.965" }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::pair"* }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::LoopPeeling" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::Loop"*, i8, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_map" }
%"class.std::__1::tuple.1164" = type { %"struct.std::__1::__tuple_impl.1165" }
%"struct.std::__1::__tuple_impl.1165" = type { %"class.std::__1::__tuple_leaf.1166" }
%"class.std::__1::__tuple_leaf.1166" = type { i32* }
%"class.std::__1::tuple.1167" = type { i8 }
%"class.std::__1::function.1049" = type { %"class.std::__1::__function::__policy_func.1053" }
%"class.std::__1::__function::__policy_func.1053" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1054", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1054" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::vector.1000" = type { %"class.std::__1::__vector_base.1001" }
%"class.std::__1::__vector_base.1001" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.1007" = type { %"class.std::__1::__function::__policy_func.1011" }
%"class.std::__1::__function::__policy_func.1011" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1012", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1012" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.1015" = type { %"class.std::__1::__function::__policy_func.1019" }
%"class.std::__1::__function::__policy_func.1019" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1020", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1020" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::pair.1305" = type { i32, i32 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::unordered_set.1022" = type { %"class.std::__1::__hash_table.1023" }
%"class.std::__1::__hash_table.1023" = type <{ %"class.std::__1::unique_ptr.1024", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1039", %"class.std::__1::__compressed_pair.1041", [4 x i8] }>
%"class.std::__1::unique_ptr.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026", %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1027"** }
%"struct.std::__1::__hash_node_base.1027" = type { %"struct.std::__1::__hash_node_base.1027"* }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.std::__1::__bucket_list_deallocator.1029" }
%"class.std::__1::__bucket_list_deallocator.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"struct.std::__1::__hash_node_base.1027" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::function.1207" = type { %"class.std::__1::__function::__policy_func.1211" }
%"class.std::__1::__function::__policy_func.1211" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1212", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1212" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"struct.std::__1::__hash_node.1159" = type <{ %"struct.std::__1::__hash_node_base.922", i64, i32, [4 x i8] }>
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.1058", %"class.std::__1::map.1065", i8, [7 x i8] }>
%"class.std::__1::vector.1058" = type { %"class.std::__1::__vector_base.1059" }
%"class.std::__1::__vector_base.1059" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.1060" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.1058", i32, i32 }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.1065" = type { %"class.std::__1::__tree.1066" }
%"class.std::__1::__tree.1066" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1067", %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::function.1075" = type { %"class.std::__1::__function::__policy_func.1079" }
%"class.std::__1::__function::__policy_func.1079" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1080", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1080" = type { i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::tuple.1191" = type { %"struct.std::__1::__tuple_impl.1192" }
%"struct.std::__1::__tuple_impl.1192" = type { %"class.std::__1::__tuple_leaf.1193" }
%"class.std::__1::__tuple_leaf.1193" = type { %"class.spvtools::opt::Instruction"** }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.spvtools::opt::LoopPeelingPass" = type { %"class.spvtools::opt::Pass.base", %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"* }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats" = type { %"class.std::__1::vector.1087" }
%"class.std::__1::vector.1087" = type { %"class.std::__1::__vector_base.1088" }
%"class.std::__1::__vector_base.1088" = type { %"class.std::__1::tuple"*, %"class.std::__1::tuple"*, %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl.1138" }
%"struct.std::__1::__tuple_impl.1138" = type { %"class.std::__1::__tuple_leaf.1139", %"class.std::__1::__tuple_leaf.1140", %"class.std::__1::__tuple_leaf.1141" }
%"class.std::__1::__tuple_leaf.1139" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tuple_leaf.1140" = type { i32 }
%"class.std::__1::__tuple_leaf.1141" = type { i32 }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.std::__1::tuple"* }
%"class.spvtools::opt::PostOrderTreeDFIterator" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1102" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"**, %"class.std::__1::__compressed_pair.1097" }
%"struct.std::__1::pair.1096" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::__wrap_iter.1106" }
%"class.std::__1::__wrap_iter.1106" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::pair.1096"** }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.spvtools::opt::CodeMetrics" = type { %"class.std::__1::unordered_map.1107", i64 }
%"class.std::__1::unordered_map.1107" = type { %"class.std::__1::__hash_table.1108" }
%"class.std::__1::__hash_table.1108" = type <{ %"class.std::__1::unique_ptr.1109", %"class.std::__1::__compressed_pair.1119", %"class.std::__1::__compressed_pair.1124", %"class.std::__1::__compressed_pair.1127", [4 x i8] }>
%"class.std::__1::unique_ptr.1109" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111", %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1112"** }
%"struct.std::__1::__hash_node_base.1112" = type { %"struct.std::__1::__hash_node_base.1112"* }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.std::__1::__bucket_list_deallocator.1114" }
%"class.std::__1::__bucket_list_deallocator.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"struct.std::__1::__hash_node_base.1112" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__tree_node.1326" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1327" }
%"struct.std::__1::pair.1327" = type { %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tree_node.1335" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1336" }
%"struct.std::__1::__value_type.1336" = type { %"struct.std::__1::pair.1337" }
%"struct.std::__1::pair.1337" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::SENode"* }
%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i64 }
%"struct.std::__1::default_delete.692" = type { i8 }
%"struct.std::__1::__hash_node.1153" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type.1154" }
%"struct.std::__1::__hash_value_type.1154" = type { %"struct.std::__1::pair.1155" }
%"struct.std::__1::pair.1155" = type { i32, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::SERecurrentNode" = type { %"class.spvtools::opt::SENode.base", %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::Loop"* }
%"class.spvtools::opt::SENode.base" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32 }>
%"struct.std::__1::pair.1137" = type { %"class.spvtools::opt::SExpression", i64 }
%"class.spvtools::opt::SExpression" = type { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::SEConstantNode" = type { %"class.spvtools::opt::SENode.base", i64 }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1152" }
%"struct.std::__1::pair.1152" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::__split_buffer.1248" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.std::__1::allocator.49"* }
%"class.std::__1::allocator.49" = type { i8 }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::set.1251" = type { %"class.std::__1::__tree.1252" }
%"class.std::__1::__tree.1252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1253", %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1220 }
%union.anon.1220 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::unordered_set.1261" = type { %"class.std::__1::__hash_table.1262" }
%"class.std::__1::__hash_table.1262" = type <{ %"class.std::__1::unique_ptr.1263", %"class.std::__1::__compressed_pair.1273", %"class.std::__1::__compressed_pair.1278", %"class.std::__1::__compressed_pair.1282", [4 x i8] }>
%"class.std::__1::unique_ptr.1263" = type { %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265", %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"struct.std::__1::__hash_node_base.1266"** }
%"struct.std::__1::__hash_node_base.1266" = type { %"struct.std::__1::__hash_node_base.1266"* }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"class.std::__1::__bucket_list_deallocator.1268" }
%"class.std::__1::__bucket_list_deallocator.1268" = type { %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"struct.std::__1::__hash_node_base.1266" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.1287", %"class.std::__1::map.1294" }
%"class.std::__1::vector.1287" = type { %"class.std::__1::__vector_base.1288" }
%"class.std::__1::__vector_base.1288" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.1294" = type { %"class.std::__1::__tree.1295" }
%"class.std::__1::__tree.1295" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1296", %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.1287" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"struct.std::__1::__split_buffer.1309" = type { %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"**, %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.std::__1::allocator.1100"* }
%"class.std::__1::allocator.1100" = type { i8 }
%"class.std::__1::__tree_node.1365" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.1366" }
%"struct.std::__1::__value_type.1366" = type { %"struct.std::__1::pair.1367" }
%"struct.std::__1::pair.1367" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::__function::__default_alloc_func.1383" = type { %class.anon.1021 }
%class.anon.1021 = type { i32, %"class.spvtools::opt::analysis::DefUseManager"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"class.spvtools::opt::LoopPeeling"* }
%"class.std::__1::__function::__default_alloc_func.1397" = type { %class.anon.1045 }
%class.anon.1045 = type { %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::unordered_set.1022"*, %"class.spvtools::opt::LoopPeeling"* }
%"class.std::__1::tuple.1403" = type { %"struct.std::__1::__tuple_impl.1404" }
%"struct.std::__1::__tuple_impl.1404" = type { %"class.std::__1::__tuple_leaf.1405" }
%"class.std::__1::__tuple_leaf.1405" = type { i32* }
%"class.std::__1::__function::__default_alloc_func.1427" = type { %class.anon.1057 }
%class.anon.1057 = type { i32, %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::LoopPeeling"* }
%"class.std::__1::__function::__default_alloc_func.1429" = type { %class.anon.1074 }
%class.anon.1074 = type { %"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::LoopPeeling"* }
%"struct.std::__1::__hash_node.1390" = type { %"struct.std::__1::__hash_node_base.1027", i64, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__function::__default_alloc_func.1437" = type { %class.anon.1084 }
%class.anon.1084 = type { %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::LoopPeeling"* }
%"class.std::__1::__function::__default_alloc_func.1441" = type { %class.anon.1086 }
%class.anon.1086 = type { %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::LoopPeeling"* }
%"class.std::__1::__function::__default_alloc_func.1448" = type { %class.anon.1133 }
%class.anon.1133 = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::LoopPeelingPass"* }

$_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b = comdat any

$_ZN8spvtools3opt18InstructionBuilder7AddIAddEjjj = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddBranchEj = comdat any

$_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder11AddLessThanEjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddSelectEjjjj = comdat any

$_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev = comdat any

$_ZN8spvtools3opt11LoopPeelingC2EPNS0_4LoopEPNS0_11InstructionES5_ = comdat any

$_ZNK8spvtools3opt11LoopPeeling11CanPeelLoopEv = comdat any

$_ZNSt3__16vectorINS_5tupleIJPKN8spvtools3opt4LoopENS3_15LoopPeelingPass13PeelDirectionEjEEENS_9allocatorIS9_EEE12emplace_backIJRPS4_S8_RjEEEvDpOT_ = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEj = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt15LoopPeelingPassD0Ev = comdat any

$_ZNK8spvtools3opt15LoopPeelingPass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder12AddSLessThanEjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder12AddULessThanEjj = comdat any

$_ZN8spvtools3opt8analysis4BoolD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE = comdat any

$_ZNK8spvtools3opt8analysis4Bool3strEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Bool6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Bool6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_ = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt8analysis4BoolE = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZN8spvtools3opt15LoopPeelingPass20code_grow_threshold_E = hidden local_unnamed_addr global i64 1000, align 8
@__const._ZN8spvtools3opt11LoopPeeling9PeelAfterEj.clone_results = private unnamed_addr constant %"struct.spvtools::opt::LoopUtils::LoopCloningResult" { %"class.std::__1::unordered_map.976" { %"class.std::__1::__hash_table.977" <{ %"class.std::__1::unique_ptr.978" { %"class.std::__1::__compressed_pair.979" { %"struct.std::__1::__compressed_pair_elem.980" { %"struct.std::__1::__hash_node_base.981"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.981"**) }, %"struct.std::__1::__compressed_pair_elem.982" { %"class.std::__1::__bucket_list_deallocator.983" { %"class.std::__1::__compressed_pair.984" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.988" { %"struct.std::__1::__compressed_pair_elem.989" { %"struct.std::__1::__hash_node_base.981" { %"struct.std::__1::__hash_node_base.981"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.981"*) } } }, %"class.std::__1::__compressed_pair.993" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.996" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.249" { %"class.std::__1::__hash_table.250" <{ %"class.std::__1::unique_ptr.251" { %"class.std::__1::__compressed_pair.252" { %"struct.std::__1::__compressed_pair_elem.253" { %"struct.std::__1::__hash_node_base.254"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.254"**) }, %"struct.std::__1::__compressed_pair_elem.255" { %"class.std::__1::__bucket_list_deallocator.256" { %"class.std::__1::__compressed_pair.257" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.261" { %"struct.std::__1::__compressed_pair_elem.262" { %"struct.std::__1::__hash_node_base.254" { %"struct.std::__1::__hash_node_base.254"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.254"*) } } }, %"class.std::__1::__compressed_pair.266" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.328" { %"class.std::__1::__hash_table.329" <{ %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %"struct.std::__1::__hash_node_base.333"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"**) }, %"struct.std::__1::__compressed_pair_elem.334" { %"class.std::__1::__bucket_list_deallocator.335" { %"class.std::__1::__compressed_pair.336" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.340" { %"struct.std::__1::__compressed_pair_elem.341" { %"struct.std::__1::__hash_node_base.333" { %"struct.std::__1::__hash_node_base.333"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"*) } } }, %"class.std::__1::__compressed_pair.345" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.328" { %"class.std::__1::__hash_table.329" <{ %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %"struct.std::__1::__hash_node_base.333"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"**) }, %"struct.std::__1::__compressed_pair_elem.334" { %"class.std::__1::__bucket_list_deallocator.335" { %"class.std::__1::__compressed_pair.336" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.340" { %"struct.std::__1::__compressed_pair_elem.341" { %"struct.std::__1::__hash_node_base.333" { %"struct.std::__1::__hash_node_base.333"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"*) } } }, %"class.std::__1::__compressed_pair.345" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::vector.38" { %"class.std::__1::__vector_base.39" { %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*), %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*), %"class.std::__1::__compressed_pair.46" { %"struct.std::__1::__compressed_pair_elem.47" { %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*) } } } } }, align 8
@__const._ZN8spvtools3opt15LoopPeelingPass15ProcessFunctionEPNS0_8FunctionE.scev_analysis = private unnamed_addr constant %"class.spvtools::opt::ScalarEvolutionAnalysis" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.std::__1::map.641" { %"class.std::__1::__tree.642" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.643" { %"struct.std::__1::__compressed_pair_elem.85" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.647" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } }, %"class.spvtools::opt::SENode"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::SENode"*), %"class.std::__1::unordered_set.658" { %"class.std::__1::__hash_table.659" <{ %"class.std::__1::unique_ptr.660" { %"class.std::__1::__compressed_pair.661" { %"struct.std::__1::__compressed_pair_elem.662" { %"struct.std::__1::__hash_node_base.663"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.663"**) }, %"struct.std::__1::__compressed_pair_elem.664" { %"class.std::__1::__bucket_list_deallocator.665" { %"class.std::__1::__compressed_pair.666" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.670" { %"struct.std::__1::__compressed_pair_elem.671" { %"struct.std::__1::__hash_node_base.663" { %"struct.std::__1::__hash_node_base.663"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.663"*) } } }, %"class.std::__1::__compressed_pair.675" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.677" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::map.680" { %"class.std::__1::__tree.681" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.682" { %"struct.std::__1::__compressed_pair_elem.85" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.686" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } }, align 8
@__const._ZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS0_4LoopEPNS0_11CodeMetricsE.peeler = private unnamed_addr constant { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::Loop"*, i8, [7 x i8], %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_map" } { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.spvtools::opt::LoopUtils" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.spvtools::opt::LoopDescriptor"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::LoopDescriptor"*), %"class.spvtools::opt::Loop"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"*), %"class.spvtools::opt::Function"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Function"*) }, %"class.spvtools::opt::Loop"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"*), %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::analysis::Integer"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::analysis::Integer"*), %"class.spvtools::opt::Loop"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Loop"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.65" { %"class.std::__1::__compressed_pair.66" { %"struct.std::__1::__compressed_pair_elem.67" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.68" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.74" { %"struct.std::__1::__compressed_pair_elem.75" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.79" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, align 8
@_ZTVN8spvtools3opt15LoopPeelingPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::LoopPeelingPass"*)* @_ZN8spvtools3opt15LoopPeelingPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::LoopPeelingPass"*)* @_ZNK8spvtools3opt15LoopPeelingPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LoopPeelingPass"*)* @_ZN8spvtools3opt15LoopPeelingPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt8analysis4BoolE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Bool"*)* @_ZN8spvtools3opt8analysis4BoolD0Ev to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Bool"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1251"*)* @_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.spvtools::opt::analysis::Bool"*)* @_ZNK8spvtools3opt8analysis4Bool3strEv to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Bool"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1261"*)* @_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Bool"*)* @_ZN8spvtools3opt8analysis4Bool6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Bool"*)* @_ZNK8spvtools3opt8analysis4Bool6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [13 x i8] c"loop-peeling\00", align 1
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_0FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt11LoopPeeling30IsConditionCheckSideEffectFreeEvE3$_4FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_5FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS5_10BasicBlockEE3$_8FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS5_10BasicBlockEE3$_9FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_10FjPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_12FjPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS0_9LoopUtils17LoopCloningResultE(%"class.spvtools::opt::LoopPeeling"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1164", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::function.1049", align 8
  %7 = alloca %"class.std::__1::vector.1000", align 8
  %8 = alloca %"class.std::__1::function.1007", align 8
  %9 = alloca %"class.std::__1::function.1007", align 8
  %10 = alloca %"class.std::__1::function.1015", align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 16
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %36

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  %20 = tail call i8* @_Znwm(i64 400) #10
  %21 = bitcast i8* %20 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %21, %"class.spvtools::opt::Module"* %19) #11
  %22 = ptrtoint i8* %20 to i64
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 15
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.273"* %23 to i64*
  store i64 %22, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::CFG"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %25) #11
  %29 = bitcast %"class.spvtools::opt::CFG"* %25 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %28, %17
  %31 = load i32, i32* %13, align 8
  %32 = or i32 %31, 16
  store i32 %32, i32* %13, align 8
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 11
  %35 = load i32, i32* %34, align 8
  br label %36

36:                                               ; preds = %2, %30
  %37 = phi i32 [ %14, %2 ], [ %35, %30 ]
  %38 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %33, %30 ]
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 15, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %42 = and i32 %37, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %68

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %45, align 8
  %47 = tail call i8* @_Znwm(i64 104) #10
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::DefUseManager"*
  %49 = getelementptr inbounds i8, i8* %47, i64 32
  %50 = bitcast i8* %49 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %47, i64 48
  %52 = getelementptr inbounds i8, i8* %47, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #11
  %53 = bitcast i8* %52 to i8**
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %47, i64 64
  %55 = getelementptr inbounds i8, i8* %47, i64 96
  %56 = bitcast i8* %55 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %56, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %48, %"class.spvtools::opt::Module"* %46) #11
  %57 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 6
  %58 = ptrtoint i8* %47 to i64
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %57, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.62"* %57 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %44
  %64 = bitcast %"class.std::__1::unique_ptr.62"* %57 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %64, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %60) #11
  br label %65

65:                                               ; preds = %63, %44
  %66 = load i32, i32* %41, align 8
  %67 = or i32 %66, 1
  store i32 %67, i32* %41, align 8
  br label %68

68:                                               ; preds = %36, %65
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 6, i32 0, i32 0, i32 0
  %70 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.1000"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.std::__1::vector.1000", %"class.std::__1::vector.1000"* %7, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::vector.1000", %"class.std::__1::vector.1000"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 24, i1 false) #11
  %75 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 2
  %76 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %77 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* %76) #11
  %78 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  call void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"* %78, %"class.std::__1::vector.1000"* nonnull %7, i1 zeroext false, i1 zeroext false) #11
  %79 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1
  %80 = call %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::LoopUtils"* %79, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, %"class.std::__1::vector.1000"* nonnull dereferenceable(24) %7) #11
  %81 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 5
  store %"class.spvtools::opt::Loop"* %80, %"class.spvtools::opt::Loop"** %81, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 3
  %83 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %82, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %68
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 3
  %91 = load i8, i8* %90, align 4, !range !2
  %92 = zext i8 %91 to i32
  %93 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %85, i32 %92) #11
  br label %94

94:                                               ; preds = %68, %89
  %95 = phi i32 [ %93, %89 ], [ 0, %68 ]
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %83, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %83, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %121, label %101

101:                                              ; preds = %94, %118
  %102 = phi %"class.std::__1::unique_ptr.40"* [ %119, %118 ], [ %97, %94 ]
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %103, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %104, i64 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %105, align 8
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 4
  %108 = load i8, i8* %107, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 3
  %112 = load i8, i8* %111, align 4, !range !2
  %113 = zext i8 %112 to i32
  %114 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %106, i32 %113) #11
  br label %115

115:                                              ; preds = %110, %101
  %116 = phi i32 [ %114, %110 ], [ 0, %101 ]
  %117 = icmp eq i32 %116, %95
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %102, i64 1
  %120 = icmp eq %"class.std::__1::unique_ptr.40"* %119, %99
  br i1 %120, label %121, label %101

121:                                              ; preds = %115, %118, %94
  %122 = phi %"class.std::__1::unique_ptr.40"* [ %97, %94 ], [ %99, %118 ], [ %102, %115 ]
  %123 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %82, align 8
  %124 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 0
  %125 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %124, align 8
  %126 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 1
  %127 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 1
  %129 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %123, i64 0, i32 3
  %130 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.38"* %129, %"class.std::__1::unique_ptr.40"* %128, %"class.std::__1::unique_ptr.40"* %125, %"class.std::__1::unique_ptr.40"* %127) #11
  %131 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %81, align 8
  %132 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %131, i64 0, i32 1
  %133 = bitcast %"class.spvtools::opt::BasicBlock"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.std::__1::function.1007"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #11
  %136 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %8, i64 0, i32 0, i32 1, i32 0
  %137 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %8, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS8_9LoopUtils17LoopCloningResultEE3$_0S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %136, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_0FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %137, align 8
  %138 = bitcast %"class.std::__1::function.1007"* %8 to i64*
  store i64 %134, i64* %138, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %77, %"class.std::__1::function.1007"* nonnull dereferenceable(32) %8) #11
  %139 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %137, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %139, i64 0, i32 1
  %141 = load void (i8*)*, void (i8*)** %140, align 8
  %142 = icmp eq void (i8*)* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %121
  %144 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %8, i64 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void %141(i8* %145) #11
  br label %146

146:                                              ; preds = %121, %143
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #11
  %147 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %84, align 8
  %148 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %147, i64 0, i32 4
  %149 = load i8, i8* %148, align 1, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %147, i64 0, i32 3
  %153 = load i8, i8* %152, align 4, !range !2
  %154 = zext i8 %153 to i32
  %155 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %147, i32 %154) #11
  br label %156

156:                                              ; preds = %146, %151
  %157 = phi i32 [ %155, %151 ], [ 0, %146 ]
  %158 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %158, i64 0, i32 1
  %160 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %159, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %160, i64 0, i32 1, i32 0, i32 0, i32 0
  %162 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %161, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %162, i64 0, i32 4
  %164 = load i8, i8* %163, align 1, !range !2
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %171, label %166

166:                                              ; preds = %156
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %162, i64 0, i32 3
  %168 = load i8, i8* %167, align 4, !range !2
  %169 = zext i8 %168 to i32
  %170 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %162, i32 %169) #11
  br label %171

171:                                              ; preds = %156, %166
  %172 = phi i32 [ %170, %166 ], [ 0, %156 ]
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %40, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %255, label %177

177:                                              ; preds = %171
  %178 = call i64 @llvm.ctpop.i64(i64 %175) #11, !range !3
  %179 = icmp ugt i64 %178, 1
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = add i64 %175, 4294967295
  %182 = and i64 %181, %173
  br label %187

183:                                              ; preds = %177
  %184 = icmp ugt i64 %175, %173
  br i1 %184, label %187, label %185

185:                                              ; preds = %183
  %186 = urem i64 %173, %175
  br label %187

187:                                              ; preds = %185, %183, %180
  %188 = phi i64 [ %182, %180 ], [ %186, %185 ], [ %173, %183 ]
  %189 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %40, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %189, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %190, i64 %188
  %192 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.309"* %192, null
  br i1 %193, label %255, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %192, i64 0, i32 0
  %196 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %195, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.309"* %196, null
  br i1 %197, label %255, label %198

198:                                              ; preds = %194
  %199 = add i64 %175, -1
  br label %200

200:                                              ; preds = %221, %198
  %201 = phi %"struct.std::__1::__hash_node_base.309"* [ %196, %198 ], [ %223, %221 ]
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %201, i64 1
  %203 = bitcast %"struct.std::__1::__hash_node_base.309"* %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = icmp eq i64 %204, %173
  br i1 %205, label %216, label %206

206:                                              ; preds = %200
  br i1 %179, label %209, label %207

207:                                              ; preds = %206
  %208 = and i64 %204, %199
  br label %213

209:                                              ; preds = %206
  %210 = icmp ult i64 %204, %175
  br i1 %210, label %213, label %211

211:                                              ; preds = %209
  %212 = urem i64 %204, %175
  br label %213

213:                                              ; preds = %211, %209, %207
  %214 = phi i64 [ %208, %207 ], [ %212, %211 ], [ %204, %209 ]
  %215 = icmp eq i64 %214, %188
  br i1 %215, label %221, label %255

216:                                              ; preds = %200
  %217 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %201, i64 2
  %218 = bitcast %"struct.std::__1::__hash_node_base.309"* %217 to i32*
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, %172
  br i1 %220, label %225, label %221

221:                                              ; preds = %216, %213
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %201, i64 0, i32 0
  %223 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %222, align 8
  %224 = icmp eq %"struct.std::__1::__hash_node_base.309"* %223, null
  br i1 %224, label %255, label %200

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %201, i64 3
  %227 = bitcast %"struct.std::__1::__hash_node_base.309"* %226 to i32**
  %228 = load i32*, i32** %227, align 8
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %201, i64 4
  %230 = bitcast %"struct.std::__1::__hash_node_base.309"* %229 to i32**
  %231 = load i32*, i32** %230, align 8
  %232 = icmp eq i32* %228, %231
  %233 = ptrtoint i32* %231 to i64
  br i1 %232, label %241, label %234

234:                                              ; preds = %225, %238
  %235 = phi i32* [ %239, %238 ], [ %228, %225 ]
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, %157
  br i1 %237, label %241, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds i32, i32* %235, i64 1
  %240 = icmp eq i32* %239, %231
  br i1 %240, label %255, label %234

241:                                              ; preds = %234, %225
  %242 = phi i32* [ %228, %225 ], [ %235, %234 ]
  %243 = icmp eq i32* %242, %231
  br i1 %243, label %255, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds i32, i32* %242, i64 1
  %246 = ptrtoint i32* %245 to i64
  %247 = sub i64 %233, %246
  %248 = ashr exact i64 %247, 2
  %249 = icmp eq i64 %247, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %244
  %251 = bitcast i32* %242 to i8*
  %252 = bitcast i32* %245 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %247, i1 false) #11
  br label %253

253:                                              ; preds = %250, %244
  %254 = getelementptr inbounds i32, i32* %242, i64 %248
  store i32* %254, i32** %230, align 8
  br label %255

255:                                              ; preds = %213, %221, %238, %171, %187, %194, %241, %253
  %256 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %81, align 8
  call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %256, %"class.spvtools::opt::BasicBlock"* %77) #11
  %257 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %257, %"class.spvtools::opt::BasicBlock"* null) #11
  %258 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %259 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %258, i64 0, i32 3
  %260 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %259, align 8
  %261 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %260, i64 0, i32 1, i32 0, i32 0, i32 0
  %262 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %261, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %262, i64 0, i32 4
  %264 = load i8, i8* %263, align 1, !range !2
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %255
  %267 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %262, i64 0, i32 3
  %268 = load i8, i8* %267, align 4, !range !2
  %269 = zext i8 %268 to i32
  %270 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %262, i32 %269) #11
  br label %271

271:                                              ; preds = %255, %266
  %272 = phi i32 [ %270, %266 ], [ 0, %255 ]
  %273 = zext i32 %272 to i64
  %274 = load i64, i64* %174, align 8
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %324, label %276

276:                                              ; preds = %271
  %277 = call i64 @llvm.ctpop.i64(i64 %274) #11, !range !3
  %278 = icmp ugt i64 %277, 1
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = add i64 %274, 4294967295
  %281 = and i64 %280, %273
  br label %286

282:                                              ; preds = %276
  %283 = icmp ugt i64 %274, %273
  br i1 %283, label %286, label %284

284:                                              ; preds = %282
  %285 = urem i64 %273, %274
  br label %286

286:                                              ; preds = %284, %282, %279
  %287 = phi i64 [ %281, %279 ], [ %285, %284 ], [ %273, %282 ]
  %288 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %40, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %288, align 8
  %290 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %289, i64 %287
  %291 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %290, align 8
  %292 = icmp eq %"struct.std::__1::__hash_node_base.309"* %291, null
  br i1 %292, label %324, label %293

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %291, i64 0, i32 0
  %295 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %294, align 8
  %296 = icmp eq %"struct.std::__1::__hash_node_base.309"* %295, null
  br i1 %296, label %324, label %297

297:                                              ; preds = %293
  %298 = add i64 %274, -1
  br label %299

299:                                              ; preds = %320, %297
  %300 = phi %"struct.std::__1::__hash_node_base.309"* [ %295, %297 ], [ %322, %320 ]
  %301 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %300, i64 1
  %302 = bitcast %"struct.std::__1::__hash_node_base.309"* %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = icmp eq i64 %303, %273
  br i1 %304, label %315, label %305

305:                                              ; preds = %299
  br i1 %278, label %308, label %306

306:                                              ; preds = %305
  %307 = and i64 %303, %298
  br label %312

308:                                              ; preds = %305
  %309 = icmp ult i64 %303, %274
  br i1 %309, label %312, label %310

310:                                              ; preds = %308
  %311 = urem i64 %303, %274
  br label %312

312:                                              ; preds = %310, %308, %306
  %313 = phi i64 [ %307, %306 ], [ %311, %310 ], [ %303, %308 ]
  %314 = icmp eq i64 %313, %287
  br i1 %314, label %320, label %324

315:                                              ; preds = %299
  %316 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %300, i64 2
  %317 = bitcast %"struct.std::__1::__hash_node_base.309"* %316 to i32*
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, %272
  br i1 %319, label %325, label %320

320:                                              ; preds = %315, %312
  %321 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %300, i64 0, i32 0
  %322 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %321, align 8
  %323 = icmp eq %"struct.std::__1::__hash_node_base.309"* %322, null
  br i1 %323, label %324, label %299

324:                                              ; preds = %320, %312, %293, %286, %271
  call void @abort() #12
  unreachable

325:                                              ; preds = %315
  %326 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %300, i64 3
  %327 = bitcast %"struct.std::__1::__hash_node_base.309"* %326 to i32**
  %328 = load i32*, i32** %327, align 8
  %329 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %300, i64 4
  %330 = bitcast %"struct.std::__1::__hash_node_base.309"* %329 to i32**
  %331 = load i32*, i32** %330, align 8
  %332 = icmp eq i32* %328, %331
  br i1 %332, label %342, label %333

333:                                              ; preds = %325
  %334 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %40, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %335 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %40, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = bitcast %"class.std::__1::function.1007"* %9 to i8*
  %337 = ptrtoint %"class.spvtools::opt::LoopPeeling"* %0 to i64
  %338 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %9, i64 0, i32 0, i32 1, i32 0
  %339 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %9, i64 0, i32 0, i32 2
  %340 = bitcast %"class.std::__1::function.1007"* %9 to i64*
  %341 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %9, i64 0, i32 0, i32 0, i32 0
  br label %524

342:                                              ; preds = %655, %325
  %343 = phi i32 [ 0, %325 ], [ %656, %655 ]
  %344 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %345 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %344, i64 0, i32 3
  %346 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %345, align 8
  %347 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %346, i64 0, i32 1, i32 0, i32 0, i32 0
  %348 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %347, align 8
  %349 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %348, i64 0, i32 4
  %350 = load i8, i8* %349, align 1, !range !2
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %357, label %352

352:                                              ; preds = %342
  %353 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %348, i64 0, i32 3
  %354 = load i8, i8* %353, align 4, !range !2
  %355 = zext i8 %354 to i32
  %356 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %348, i32 %355) #11
  br label %357

357:                                              ; preds = %342, %352
  %358 = phi i32 [ %356, %352 ], [ 0, %342 ]
  call void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"* %40, i32 %358) #11
  %359 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %360 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %359, i64 0, i32 1
  %361 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %360, align 8
  %362 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %361, i64 0, i32 1, i32 0, i32 0, i32 0
  %363 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %362, align 8
  %364 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %363, i64 0, i32 4
  %365 = load i8, i8* %364, align 1, !range !2
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %372, label %367

367:                                              ; preds = %357
  %368 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %363, i64 0, i32 3
  %369 = load i8, i8* %368, align 4, !range !2
  %370 = zext i8 %369 to i32
  %371 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %363, i32 %370) #11
  br label %372

372:                                              ; preds = %357, %367
  %373 = phi i32 [ %371, %367 ], [ 0, %357 ]
  %374 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %374)
  store i32 %373, i32* %5, align 4
  %375 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %40, i64 0, i32 4, i32 0
  %376 = bitcast %"class.std::__1::tuple.1164"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376) #11
  %377 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %377, align 8
  %378 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %378) #11
  %379 = call { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"* %375, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1164"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %380 = extractvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %379, 0
  %381 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %380, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %378) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #11
  %382 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %380, i64 4
  %383 = bitcast %"struct.std::__1::__hash_node_base.309"* %382 to i32**
  %384 = load i32*, i32** %383, align 8
  %385 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %380, i64 5
  %386 = bitcast %"struct.std::__1::__hash_node_base.309"* %385 to i32**
  %387 = load i32*, i32** %386, align 8
  %388 = icmp eq i32* %384, %387
  %389 = ptrtoint i32* %387 to i64
  br i1 %388, label %394, label %390

390:                                              ; preds = %372
  store i32 %343, i32* %384, align 4
  %391 = getelementptr inbounds i32, i32* %384, i64 1
  %392 = ptrtoint i32* %391 to i64
  %393 = bitcast %"struct.std::__1::__hash_node_base.309"* %382 to i64*
  store i64 %392, i64* %393, align 8
  br label %450

394:                                              ; preds = %372
  %395 = ptrtoint i32* %384 to i64
  %396 = bitcast %"struct.std::__1::__hash_node_base.309"* %382 to i64*
  %397 = bitcast %"struct.std::__1::__hash_node_base.309"* %381 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = sub i64 %395, %398
  %400 = ashr exact i64 %399, 2
  %401 = add nsw i64 %400, 1
  %402 = icmp ugt i64 %401, 4611686018427387903
  br i1 %402, label %403, label %405

403:                                              ; preds = %394
  %404 = bitcast %"struct.std::__1::__hash_node_base.309"* %381 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %404) #12
  unreachable

405:                                              ; preds = %394
  %406 = bitcast %"struct.std::__1::__hash_node_base.309"* %385 to i64*
  %407 = sub i64 %389, %398
  %408 = ashr exact i64 %407, 2
  %409 = icmp ult i64 %408, 2305843009213693951
  br i1 %409, label %410, label %418

410:                                              ; preds = %405
  %411 = ashr exact i64 %407, 1
  %412 = icmp ult i64 %411, %401
  %413 = select i1 %412, i64 %401, i64 %411
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %423, label %415

415:                                              ; preds = %410
  %416 = icmp ugt i64 %413, 4611686018427387903
  br i1 %416, label %417, label %418

417:                                              ; preds = %415
  call void @abort() #12
  unreachable

418:                                              ; preds = %415, %405
  %419 = phi i64 [ %413, %415 ], [ 4611686018427387903, %405 ]
  %420 = shl i64 %419, 2
  %421 = call i8* @_Znwm(i64 %420) #10
  %422 = bitcast i8* %421 to i32*
  br label %423

423:                                              ; preds = %418, %410
  %424 = phi i64 [ %419, %418 ], [ 0, %410 ]
  %425 = phi i32* [ %422, %418 ], [ null, %410 ]
  %426 = getelementptr inbounds i32, i32* %425, i64 %400
  %427 = getelementptr inbounds i32, i32* %425, i64 %424
  %428 = ptrtoint i32* %427 to i64
  store i32 %343, i32* %426, align 4
  %429 = getelementptr inbounds i32, i32* %426, i64 1
  %430 = ptrtoint i32* %429 to i64
  %431 = bitcast %"struct.std::__1::__hash_node_base.309"* %381 to i32**
  %432 = load i32*, i32** %431, align 8
  %433 = load i64, i64* %396, align 8
  %434 = ptrtoint i32* %432 to i64
  %435 = sub i64 %433, %434
  %436 = ashr exact i64 %435, 2
  %437 = sub nsw i64 0, %436
  %438 = getelementptr inbounds i32, i32* %426, i64 %437
  %439 = ptrtoint i32* %438 to i64
  %440 = icmp sgt i64 %435, 0
  br i1 %440, label %441, label %445

441:                                              ; preds = %423
  %442 = bitcast i32* %438 to i8*
  %443 = bitcast i32* %432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %442, i8* align 4 %443, i64 %435, i1 false) #11
  %444 = load i32*, i32** %431, align 8
  br label %445

445:                                              ; preds = %441, %423
  %446 = phi i32* [ %432, %423 ], [ %444, %441 ]
  store i64 %439, i64* %397, align 8
  store i64 %430, i64* %396, align 8
  store i64 %428, i64* %406, align 8
  %447 = icmp eq i32* %446, null
  br i1 %447, label %450, label %448

448:                                              ; preds = %445
  %449 = bitcast i32* %446 to i8*
  call void @_ZdlPv(i8* %449) #10
  br label %450

450:                                              ; preds = %390, %445, %448
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %374)
  %451 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %452 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %451, i64 0, i32 1
  %453 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %452, align 8
  %454 = bitcast %"class.std::__1::function.1015"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %454) #11
  %455 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %10, i64 0, i32 0, i32 1, i32 0
  %456 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %10, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling23DuplicateAndConnectLoopEPNS3_9LoopUtils17LoopCloningResultEE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %455, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %456, align 8
  %457 = call i8* @_Znwm(i64 32) #10, !noalias !4
  %458 = bitcast i8* %457 to i32*
  store i32 %343, i32* %458, align 8
  %459 = getelementptr inbounds i8, i8* %457, i64 8
  %460 = bitcast i8* %459 to i64*
  store i64 %71, i64* %460, align 8
  %461 = getelementptr inbounds i8, i8* %457, i64 16
  %462 = bitcast i8* %461 to %"struct.spvtools::opt::LoopUtils::LoopCloningResult"**
  store %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %462, align 8
  %463 = getelementptr inbounds i8, i8* %457, i64 24
  %464 = bitcast i8* %463 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %464, align 8
  %465 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %10, i64 0, i32 0, i32 0, i32 0
  store i8* %457, i8** %465, align 8
  %466 = bitcast %"class.std::__1::function.1049"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %466) #11
  %467 = ptrtoint %"class.std::__1::function.1015"* %10 to i64
  %468 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 1, i32 0
  %469 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %468, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %469, align 8
  %470 = bitcast %"class.std::__1::function.1049"* %6 to i64*
  store i64 %467, i64* %470, align 8
  %471 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %453, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %472 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %471, align 8
  %473 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %472, i64 0, i32 0, i32 3
  %474 = load i8, i8* %473, align 8, !range !2
  %475 = icmp ne i8 %474, 0
  %476 = icmp eq %"class.spvtools::opt::Instruction"* %472, null
  %477 = or i1 %476, %475
  br i1 %477, label %498, label %478

478:                                              ; preds = %450
  %479 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 0
  br label %480

480:                                              ; preds = %489, %478
  %481 = phi %"class.spvtools::opt::Instruction"* [ %493, %489 ], [ %472, %478 ]
  %482 = icmp eq %"class.spvtools::opt::Instruction"* %481, null
  br i1 %482, label %496, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %481, i64 0, i32 0, i32 1
  %485 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %484, align 8
  %486 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %481, i64 0, i32 2
  %487 = load i32, i32* %486, align 8
  %488 = icmp eq i32 %487, 245
  br i1 %488, label %489, label %496

489:                                              ; preds = %483
  %490 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %485, i64 0, i32 0, i32 3
  %491 = load i8, i8* %490, align 8, !range !2
  %492 = icmp eq i8 %491, 0
  %493 = select i1 %492, %"class.spvtools::opt::Instruction"* %485, %"class.spvtools::opt::Instruction"* null
  %494 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %468, align 8
  %495 = call zeroext i1 %494(%"union.std::__1::__function::__policy_storage"* nonnull %479, %"class.spvtools::opt::Instruction"* nonnull %481) #11
  br i1 %495, label %480, label %496

496:                                              ; preds = %480, %483, %489
  %497 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %469, align 8
  br label %498

498:                                              ; preds = %496, %450
  %499 = phi %"struct.std::__1::__function::__policy"* [ %497, %496 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %450 ]
  %500 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %499, i64 0, i32 1
  %501 = load void (i8*)*, void (i8*)** %500, align 8
  %502 = icmp eq void (i8*)* %501, null
  br i1 %502, label %506, label %503

503:                                              ; preds = %498
  %504 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  call void %501(i8* %505) #11
  br label %506

506:                                              ; preds = %498, %503
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %466) #11
  %507 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %456, align 8
  %508 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %507, i64 0, i32 1
  %509 = load void (i8*)*, void (i8*)** %508, align 8
  %510 = icmp eq void (i8*)* %509, null
  br i1 %510, label %513, label %511

511:                                              ; preds = %506
  %512 = load i8*, i8** %465, align 8
  call void %509(i8* %512) #11
  br label %513

513:                                              ; preds = %506, %511
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %454) #11
  %514 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %81, align 8
  %515 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %516 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* %515) #11
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %514, %"class.spvtools::opt::BasicBlock"* %516) #11
  %517 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %73, align 8
  %518 = icmp eq %"class.spvtools::opt::BasicBlock"** %517, null
  br i1 %518, label %523, label %519

519:                                              ; preds = %513
  %520 = ptrtoint %"class.spvtools::opt::BasicBlock"** %517 to i64
  %521 = bitcast %"class.spvtools::opt::BasicBlock"*** %74 to i64*
  store i64 %520, i64* %521, align 8
  %522 = bitcast %"class.spvtools::opt::BasicBlock"** %517 to i8*
  call void @_ZdlPv(i8* %522) #10
  br label %523

523:                                              ; preds = %513, %519
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  ret void

524:                                              ; preds = %333, %655
  %525 = phi i32 [ 0, %333 ], [ %656, %655 ]
  %526 = phi i32* [ %328, %333 ], [ %657, %655 ]
  %527 = load i32, i32* %526, align 4
  %528 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %75, align 8
  %529 = zext i32 %527 to i64
  %530 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %528, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %531 = load i64, i64* %530, align 8
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %581, label %533

533:                                              ; preds = %524
  %534 = call i64 @llvm.ctpop.i64(i64 %531) #11, !range !3
  %535 = icmp ugt i64 %534, 1
  br i1 %535, label %539, label %536

536:                                              ; preds = %533
  %537 = add i64 %531, 4294967295
  %538 = and i64 %537, %529
  br label %543

539:                                              ; preds = %533
  %540 = icmp ugt i64 %531, %529
  br i1 %540, label %543, label %541

541:                                              ; preds = %539
  %542 = urem i64 %529, %531
  br label %543

543:                                              ; preds = %541, %539, %536
  %544 = phi i64 [ %538, %536 ], [ %542, %541 ], [ %529, %539 ]
  %545 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %528, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %545, align 8
  %547 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %546, i64 %544
  %548 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %547, align 8
  %549 = icmp eq %"struct.std::__1::__hash_node_base.922"* %548, null
  br i1 %549, label %581, label %550

550:                                              ; preds = %543
  %551 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %548, i64 0, i32 0
  %552 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %551, align 8
  %553 = icmp eq %"struct.std::__1::__hash_node_base.922"* %552, null
  br i1 %553, label %581, label %554

554:                                              ; preds = %550
  %555 = add i64 %531, -1
  br label %556

556:                                              ; preds = %577, %554
  %557 = phi %"struct.std::__1::__hash_node_base.922"* [ %552, %554 ], [ %579, %577 ]
  %558 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %557, i64 1
  %559 = bitcast %"struct.std::__1::__hash_node_base.922"* %558 to i64*
  %560 = load i64, i64* %559, align 8
  %561 = icmp eq i64 %560, %529
  br i1 %561, label %572, label %562

562:                                              ; preds = %556
  br i1 %535, label %565, label %563

563:                                              ; preds = %562
  %564 = and i64 %560, %555
  br label %569

565:                                              ; preds = %562
  %566 = icmp ult i64 %560, %531
  br i1 %566, label %569, label %567

567:                                              ; preds = %565
  %568 = urem i64 %560, %531
  br label %569

569:                                              ; preds = %567, %565, %563
  %570 = phi i64 [ %564, %563 ], [ %568, %567 ], [ %560, %565 ]
  %571 = icmp eq i64 %570, %544
  br i1 %571, label %577, label %581

572:                                              ; preds = %556
  %573 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %557, i64 2
  %574 = bitcast %"struct.std::__1::__hash_node_base.922"* %573 to i32*
  %575 = load i32, i32* %574, align 4
  %576 = icmp eq i32 %575, %527
  br i1 %576, label %655, label %577

577:                                              ; preds = %572, %569
  %578 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %557, i64 0, i32 0
  %579 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %578, align 8
  %580 = icmp eq %"struct.std::__1::__hash_node_base.922"* %579, null
  br i1 %580, label %581, label %556

581:                                              ; preds = %569, %577, %543, %524, %550
  %582 = load i64, i64* %334, align 8
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %631, label %584

584:                                              ; preds = %581
  %585 = call i64 @llvm.ctpop.i64(i64 %582) #11, !range !3
  %586 = icmp ugt i64 %585, 1
  br i1 %586, label %590, label %587

587:                                              ; preds = %584
  %588 = add i64 %582, 4294967295
  %589 = and i64 %588, %529
  br label %594

590:                                              ; preds = %584
  %591 = icmp ugt i64 %582, %529
  br i1 %591, label %594, label %592

592:                                              ; preds = %590
  %593 = urem i64 %529, %582
  br label %594

594:                                              ; preds = %592, %590, %587
  %595 = phi i64 [ %589, %587 ], [ %593, %592 ], [ %529, %590 ]
  %596 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %335, align 8
  %597 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %596, i64 %595
  %598 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %597, align 8
  %599 = icmp eq %"struct.std::__1::__hash_node_base.333"* %598, null
  br i1 %599, label %631, label %600

600:                                              ; preds = %594
  %601 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %598, i64 0, i32 0
  %602 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %601, align 8
  %603 = icmp eq %"struct.std::__1::__hash_node_base.333"* %602, null
  br i1 %603, label %631, label %604

604:                                              ; preds = %600
  %605 = add i64 %582, -1
  br label %606

606:                                              ; preds = %627, %604
  %607 = phi %"struct.std::__1::__hash_node_base.333"* [ %602, %604 ], [ %629, %627 ]
  %608 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %607, i64 1
  %609 = bitcast %"struct.std::__1::__hash_node_base.333"* %608 to i64*
  %610 = load i64, i64* %609, align 8
  %611 = icmp eq i64 %610, %529
  br i1 %611, label %622, label %612

612:                                              ; preds = %606
  br i1 %586, label %615, label %613

613:                                              ; preds = %612
  %614 = and i64 %610, %605
  br label %619

615:                                              ; preds = %612
  %616 = icmp ult i64 %610, %582
  br i1 %616, label %619, label %617

617:                                              ; preds = %615
  %618 = urem i64 %610, %582
  br label %619

619:                                              ; preds = %617, %615, %613
  %620 = phi i64 [ %614, %613 ], [ %618, %617 ], [ %610, %615 ]
  %621 = icmp eq i64 %620, %595
  br i1 %621, label %627, label %631

622:                                              ; preds = %606
  %623 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %607, i64 2
  %624 = bitcast %"struct.std::__1::__hash_node_base.333"* %623 to i32*
  %625 = load i32, i32* %624, align 4
  %626 = icmp eq i32 %625, %527
  br i1 %626, label %632, label %627

627:                                              ; preds = %622, %619
  %628 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %607, i64 0, i32 0
  %629 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %628, align 8
  %630 = icmp eq %"struct.std::__1::__hash_node_base.333"* %629, null
  br i1 %630, label %631, label %606

631:                                              ; preds = %600, %594, %581, %627, %619
  call void @abort() #12
  unreachable

632:                                              ; preds = %622
  %633 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %607, i64 3
  %634 = bitcast %"struct.std::__1::__hash_node_base.333"* %633 to %"class.spvtools::opt::BasicBlock"**
  %635 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %634, align 8
  %636 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %635, i64 0, i32 1, i32 0, i32 0, i32 0
  %637 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %636, align 8
  %638 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %637, i64 0, i32 4
  %639 = load i8, i8* %638, align 1, !range !2
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %646, label %641

641:                                              ; preds = %632
  %642 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %637, i64 0, i32 3
  %643 = load i8, i8* %642, align 4, !range !2
  %644 = zext i8 %643 to i32
  %645 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %637, i32 %644) #11
  br label %646

646:                                              ; preds = %632, %641
  %647 = phi i32 [ %645, %641 ], [ 0, %632 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %336) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS8_9LoopUtils17LoopCloningResultEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %338, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %339, align 8
  store i64 %337, i64* %340, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %635, %"class.std::__1::function.1007"* nonnull dereferenceable(32) %9) #11
  %648 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %339, align 8
  %649 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %648, i64 0, i32 1
  %650 = load void (i8*)*, void (i8*)** %649, align 8
  %651 = icmp eq void (i8*)* %650, null
  br i1 %651, label %654, label %652

652:                                              ; preds = %646
  %653 = load i8*, i8** %341, align 8
  call void %650(i8* %653) #11
  br label %654

654:                                              ; preds = %646, %652
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %336) #11
  br label %655

655:                                              ; preds = %572, %654
  %656 = phi i32 [ %647, %654 ], [ %525, %572 ]
  %657 = getelementptr inbounds i32, i32* %526, i64 1
  %658 = icmp eq i32* %657, %331
  br i1 %658, label %342, label %524
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"*, %"class.std::__1::vector.1000"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::LoopUtils"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"class.std::__1::vector.1000"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1007"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11LoopPeeling32InsertCanonicalInductionVariableEPNS0_9LoopUtils17LoopCloningResultE(%"class.spvtools::opt::LoopPeeling"* nocapture, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 7
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  br i1 %8, label %114, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %41

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 104) #10
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DefUseManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = getelementptr inbounds i8, i8* %19, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 96
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %20, %"class.spvtools::opt::Module"* %18) #11
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %29 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %36, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %32) #11
  br label %37

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %12, align 8
  %39 = or i32 %38, 1
  store i32 %39, i32* %12, align 8
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  br label %41

41:                                               ; preds = %9, %37
  %42 = phi %"class.spvtools::opt::Instruction"* [ %7, %9 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %44 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %43, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 4
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 3
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = zext i8 %50 to i32
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %42, i32 %51) #11
  br label %53

53:                                               ; preds = %41, %48
  %54 = phi i32 [ %52, %48 ], [ 0, %41 ]
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %107, label %59

59:                                               ; preds = %53
  %60 = tail call i64 @llvm.ctpop.i64(i64 %57) #11, !range !3
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = add i64 %57, 4294967295
  %64 = and i64 %63, %55
  br label %69

65:                                               ; preds = %59
  %66 = icmp ugt i64 %57, %55
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %55, %57
  br label %69

69:                                               ; preds = %67, %65, %62
  %70 = phi i64 [ %64, %62 ], [ %68, %67 ], [ %55, %65 ]
  %71 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %70
  %74 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.254"* %74, null
  br i1 %75, label %107, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %74, i64 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.254"* %78, null
  br i1 %79, label %107, label %80

80:                                               ; preds = %76
  %81 = add i64 %57, -1
  br label %82

82:                                               ; preds = %103, %80
  %83 = phi %"struct.std::__1::__hash_node_base.254"* [ %78, %80 ], [ %105, %103 ]
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %83, i64 1
  %85 = bitcast %"struct.std::__1::__hash_node_base.254"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, %55
  br i1 %87, label %98, label %88

88:                                               ; preds = %82
  br i1 %61, label %91, label %89

89:                                               ; preds = %88
  %90 = and i64 %86, %81
  br label %95

91:                                               ; preds = %88
  %92 = icmp ult i64 %86, %57
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %86, %57
  br label %95

95:                                               ; preds = %93, %91, %89
  %96 = phi i64 [ %90, %89 ], [ %94, %93 ], [ %86, %91 ]
  %97 = icmp eq i64 %96, %70
  br i1 %97, label %103, label %107

98:                                               ; preds = %82
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %83, i64 2
  %100 = bitcast %"struct.std::__1::__hash_node_base.254"* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, %54
  br i1 %102, label %108, label %103

103:                                              ; preds = %98, %95
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %83, i64 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.254"* %105, null
  br i1 %106, label %107, label %82

107:                                              ; preds = %103, %95, %76, %69, %53
  tail call void @abort() #12
  unreachable

108:                                              ; preds = %98
  %109 = bitcast %"struct.std::__1::__hash_node_base.254"* %99 to %"struct.std::__1::pair.1305"*
  %110 = getelementptr inbounds %"struct.std::__1::pair.1305", %"struct.std::__1::pair.1305"* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %44, i32 %111) #11
  %113 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 8
  store %"class.spvtools::opt::Instruction"* %112, %"class.spvtools::opt::Instruction"** %113, align 8
  br label %353

114:                                              ; preds = %2
  %115 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 5
  %116 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %115, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 5
  %118 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %118, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %120 = bitcast %"class.spvtools::opt::Instruction"** %119 to i64*
  %121 = load i64, i64* %120, align 8, !noalias !9
  %122 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %118) #11
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %114
  %125 = inttoptr i64 %121 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %126 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %125, i64 0, i32 2
  %127 = bitcast %"class.spvtools::opt::Instruction"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  br label %129

129:                                              ; preds = %114, %124
  %130 = phi i64 [ %121, %114 ], [ %128, %124 ]
  %131 = bitcast %"class.spvtools::opt::InstructionBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %131) #11
  %132 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 0
  %133 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 1
  %134 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 3
  %135 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %136 = bitcast %"class.spvtools::opt::InstructionBuilder"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 32, i1 false)
  %137 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %135, align 8
  %138 = inttoptr i64 %130 to %"class.spvtools::opt::Instruction"*
  %139 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %137, %"class.spvtools::opt::Instruction"* %138) #11
  store %"class.spvtools::opt::IRContext"* %137, %"class.spvtools::opt::IRContext"** %132, align 8
  store %"class.spvtools::opt::BasicBlock"* %139, %"class.spvtools::opt::BasicBlock"** %133, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 2
  %141 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %140 to i64*
  store i64 %130, i64* %141, align 8
  store i32 3, i32* %134, align 8
  %142 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 4
  %143 = load %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::analysis::Integer"** %142, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %143, i64 0, i32 2
  %145 = load i8, i8* %144, align 8, !range !2
  %146 = icmp ne i8 %145, 0
  %147 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 1, i1 zeroext %146)
  %148 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %147, i64 0, i32 3
  %149 = load i8, i8* %148, align 4, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %129
  %152 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %147, i32 0) #11
  br label %153

153:                                              ; preds = %129, %151
  %154 = phi i32 [ %152, %151 ], [ 0, %129 ]
  %155 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %147, i64 0, i32 4
  %156 = load i8, i8* %155, align 1, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %168, label %158

158:                                              ; preds = %153
  %159 = load i8, i8* %148, align 4, !range !2
  %160 = zext i8 %159 to i32
  %161 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %147, i32 %160) #11
  %162 = load i8, i8* %155, align 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %168, label %164

164:                                              ; preds = %158
  %165 = load i8, i8* %148, align 4, !range !2
  %166 = zext i8 %165 to i32
  %167 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %147, i32 %166) #11
  br label %168

168:                                              ; preds = %153, %158, %164
  %169 = phi i32 [ %161, %164 ], [ %161, %158 ], [ 0, %153 ]
  %170 = phi i32 [ %167, %164 ], [ 0, %158 ], [ 0, %153 ]
  %171 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddIAddEjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 %154, i32 %169, i32 %170)
  %172 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %115, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %172, i64 0, i32 1
  %174 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %173, align 8
  %175 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %174, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %176 = bitcast %"class.spvtools::opt::Instruction"** %175 to i64*
  %177 = load i64, i64* %176, align 8, !noalias !12
  %178 = inttoptr i64 %177 to %"class.spvtools::opt::Instruction"*
  %179 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %132, align 8
  %180 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %179, %"class.spvtools::opt::Instruction"* %178) #11
  store %"class.spvtools::opt::BasicBlock"* %180, %"class.spvtools::opt::BasicBlock"** %133, align 8
  store i64 %177, i64* %141, align 8
  %181 = load i8, i8* %148, align 4, !range !2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %168
  %184 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %147, i32 0) #11
  br label %185

185:                                              ; preds = %168, %183
  %186 = phi i32 [ %184, %183 ], [ 0, %168 ]
  %187 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #11
  %188 = load %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::analysis::Integer"** %142, align 8
  %189 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %188, i64 0, i32 2
  %190 = load i8, i8* %189, align 8, !range !2
  %191 = icmp ne i8 %190, 0
  %192 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 0, i1 zeroext %191)
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 4
  %194 = load i8, i8* %193, align 1, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %201, label %196

196:                                              ; preds = %185
  %197 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 3
  %198 = load i8, i8* %197, align 4, !range !2
  %199 = zext i8 %198 to i32
  %200 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %192, i32 %199) #11
  br label %201

201:                                              ; preds = %185, %196
  %202 = phi i32 [ %200, %196 ], [ 0, %185 ]
  %203 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %115, align 8
  %204 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %203, i64 0, i32 4
  %205 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %204, align 8
  %206 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %205, i64 0, i32 1, i32 0, i32 0, i32 0
  %207 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %206, align 8
  %208 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %207, i64 0, i32 4
  %209 = load i8, i8* %208, align 1, !range !2
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %216, label %211

211:                                              ; preds = %201
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %207, i64 0, i32 3
  %213 = load i8, i8* %212, align 4, !range !2
  %214 = zext i8 %213 to i32
  %215 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %207, i32 %214) #11
  br label %216

216:                                              ; preds = %201, %211
  %217 = phi i32 [ %215, %211 ], [ 0, %201 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 4
  %219 = load i8, i8* %218, align 1, !range !2
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 3
  %223 = load i8, i8* %222, align 4, !range !2
  %224 = zext i8 %223 to i32
  %225 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %171, i32 %224) #11
  br label %226

226:                                              ; preds = %216, %221
  %227 = phi i32 [ %225, %221 ], [ 0, %216 ]
  %228 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %115, align 8
  %229 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %228, i64 0, i32 5
  %230 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %229, align 8
  %231 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %230, i64 0, i32 1, i32 0, i32 0, i32 0
  %232 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %231, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 4
  %234 = load i8, i8* %233, align 1, !range !2
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %226
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 3
  %238 = load i8, i8* %237, align 4, !range !2
  %239 = zext i8 %238 to i32
  %240 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %232, i32 %239) #11
  br label %241

241:                                              ; preds = %226, %236
  %242 = phi i32 [ %240, %236 ], [ 0, %226 ]
  %243 = call i8* @_Znwm(i64 16) #10
  %244 = bitcast i8* %243 to i32*
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %246 = bitcast %"class.std::__1::vector.3"* %4 to i8**
  store i8* %243, i8** %246, align 8
  %247 = getelementptr inbounds i8, i8* %243, i64 16
  %248 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %249 = bitcast i32** %248 to i8**
  store i8* %247, i8** %249, align 8
  %250 = bitcast i32** %245 to i64*
  store i32 %202, i32* %244, align 4
  %251 = getelementptr inbounds i8, i8* %243, i64 4
  %252 = bitcast i8* %251 to i32*
  store i32 %217, i32* %252, align 4
  %253 = getelementptr inbounds i8, i8* %243, i64 8
  %254 = bitcast i8* %253 to i32*
  store i32 %227, i32* %254, align 4
  %255 = getelementptr inbounds i8, i8* %243, i64 12
  %256 = bitcast i8* %255 to i32*
  store i32 %242, i32* %256, align 4
  %257 = ptrtoint i8* %247 to i64
  store i64 %257, i64* %250, align 8
  %258 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 %186, i32 245, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4, i32 0) #11
  %259 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 8
  store %"class.spvtools::opt::Instruction"* %258, %"class.spvtools::opt::Instruction"** %259, align 8
  %260 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %261 = load i32*, i32** %260, align 8
  %262 = icmp eq i32* %261, null
  br i1 %262, label %267, label %263

263:                                              ; preds = %241
  %264 = ptrtoint i32* %261 to i64
  store i64 %264, i64* %250, align 8
  %265 = bitcast i32* %261 to i8*
  call void @_ZdlPv(i8* %265) #10
  %266 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %259, align 8
  br label %267

267:                                              ; preds = %241, %263
  %268 = phi %"class.spvtools::opt::Instruction"* [ %258, %241 ], [ %266, %263 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #11
  %269 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %269) #11
  %270 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %268, i64 0, i32 4
  %271 = load i8, i8* %270, align 1, !range !2
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %278, label %273

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %268, i64 0, i32 3
  %275 = load i8, i8* %274, align 4, !range !2
  %276 = zext i8 %275 to i32
  %277 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %268, i32 %276) #11
  br label %278

278:                                              ; preds = %267, %273
  %279 = phi i32 [ %277, %273 ], [ 0, %267 ]
  %280 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %280, align 8
  %281 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %282 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %283 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %284 = bitcast i32** %282 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %283, %"struct.std::__1::aligned_storage<4, 4>::type"** %284, align 8
  %285 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %286 = bitcast %"class.std::__1::unique_ptr.0"* %285 to i64*
  store i64 0, i64* %286, align 8
  %287 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %283 to i32*
  store i64 1, i64* %281, align 8
  store i32 %279, i32* %287, align 8
  %288 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 3
  %289 = load i8, i8* %288, align 4, !range !2
  %290 = icmp eq i8 %289, 0
  %291 = load i8, i8* %218, align 1, !range !2
  %292 = icmp eq i8 %291, 0
  %293 = select i1 %292, i64 1, i64 2
  %294 = xor i1 %292, true
  %295 = zext i1 %294 to i64
  %296 = select i1 %290, i64 %295, i64 %293
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 6, i32 0, i32 0
  %298 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %297, align 8
  %299 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 %296, i32 1
  %300 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %299, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %280, align 8
  %301 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %302 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %301, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %301, align 8
  %303 = icmp eq %"class.std::__1::vector.3"* %302, null
  br i1 %303, label %315, label %304

304:                                              ; preds = %278
  %305 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %302, i64 0, i32 0, i32 0
  %306 = load i32*, i32** %305, align 8
  %307 = icmp eq i32* %306, null
  br i1 %307, label %313, label %308

308:                                              ; preds = %304
  %309 = ptrtoint i32* %306 to i64
  %310 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %302, i64 0, i32 0, i32 1
  %311 = bitcast i32** %310 to i64*
  store i64 %309, i64* %311, align 8
  %312 = bitcast i32* %306 to i8*
  call void @_ZdlPv(i8* %312) #10
  br label %313

313:                                              ; preds = %308, %304
  %314 = bitcast %"class.std::__1::vector.3"* %302 to i8*
  call void @_ZdlPv(i8* %314) #10
  br label %315

315:                                              ; preds = %278, %313
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %269) #11
  %316 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %135, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %316, i64 0, i32 11
  %318 = load i32, i32* %317, align 8
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %345

321:                                              ; preds = %315
  %322 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %316, i64 0, i32 4, i32 0, i32 0, i32 0
  %323 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %322, align 8
  %324 = call i8* @_Znwm(i64 104) #10
  %325 = bitcast i8* %324 to %"class.spvtools::opt::analysis::DefUseManager"*
  %326 = getelementptr inbounds i8, i8* %324, i64 32
  %327 = bitcast i8* %326 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %324, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %327, align 4
  %328 = getelementptr inbounds i8, i8* %324, i64 48
  %329 = getelementptr inbounds i8, i8* %324, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %328, i8 0, i64 16, i1 false) #11
  %330 = bitcast i8* %329 to i8**
  store i8* %328, i8** %330, align 8
  %331 = getelementptr inbounds i8, i8* %324, i64 64
  %332 = getelementptr inbounds i8, i8* %324, i64 96
  %333 = bitcast i8* %332 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %333, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %325, %"class.spvtools::opt::Module"* %323) #11
  %334 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %316, i64 0, i32 6
  %335 = ptrtoint i8* %324 to i64
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %334, i64 0, i32 0, i32 0, i32 0
  %337 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %336, align 8
  %338 = bitcast %"class.std::__1::unique_ptr.62"* %334 to i64*
  store i64 %335, i64* %338, align 8
  %339 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %337, null
  br i1 %339, label %342, label %340

340:                                              ; preds = %321
  %341 = bitcast %"class.std::__1::unique_ptr.62"* %334 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %341, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %337) #11
  br label %342

342:                                              ; preds = %340, %321
  %343 = load i32, i32* %317, align 8
  %344 = or i32 %343, 1
  store i32 %344, i32* %317, align 8
  br label %345

345:                                              ; preds = %315, %342
  %346 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %316, i64 0, i32 6, i32 0, i32 0, i32 0
  %347 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %346, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %347, %"class.spvtools::opt::Instruction"* %171) #11
  %348 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 6
  %349 = load i8, i8* %348, align 8, !range !2
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %352, label %351

351:                                              ; preds = %345
  store %"class.spvtools::opt::Instruction"* %171, %"class.spvtools::opt::Instruction"** %259, align 8
  br label %352

352:                                              ; preds = %345, %351
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %131) #11
  br label %353

353:                                              ; preds = %352, %108
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i16
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 240) #10
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %23, %"class.std::__1::function"* dereferenceable(32) %21, %"class.spvtools::opt::IRContext"* %15) #11
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.480"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27) #11
  %31 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %30, %20
  %33 = load i32, i32* %16, align 8
  %34 = or i32 %33, 32768
  store i32 %34, i32* %16, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %39 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %37, %"class.spvtools::opt::analysis::Type"* nonnull %38) #11
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = call i8* @_Znwm(i64 240) #10
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #11
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #11
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %35, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %39) #11
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 16384
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %60
  %70 = call i8* @_Znwm(i64 136) #10
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %71, %"class.spvtools::opt::IRContext"* %64) #11
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.400"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %75) #11
  %79 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %78, %69
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 16384
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = call i8* @_Znwm(i64 4) #10
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 4
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast i32** %89 to i64*
  store i32 %1, i32* %88, align 4
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %85, %"class.spvtools::opt::analysis::Type"* %63, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #11
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %83
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %94, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %83, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 136) #10
  %111 = bitcast i8* %110 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %111, %"class.spvtools::opt::IRContext"* %104) #11
  %112 = ptrtoint i8* %110 to i64
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.400"* %113 to i64*
  store i64 %112, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %115) #11
  %119 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %115 to i8*
  call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %105, align 8
  %122 = or i32 %121, 16384
  store i32 %122, i32* %105, align 8
  br label %123

123:                                              ; preds = %103, %120
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %125, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, %128
  br i1 %134, label %151, label %135

135:                                              ; preds = %130, %146
  %136 = phi %"class.std::__1::vector.3"* [ %137, %146 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #10
  br label %146

146:                                              ; preds = %141, %135
  %147 = icmp eq %"class.std::__1::vector.3"* %137, %128
  br i1 %147, label %148, label %135

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %130
  %152 = phi i8* [ %150, %148 ], [ %131, %130 ]
  store %"class.std::__1::vector.3"* %128, %"class.std::__1::vector.3"** %132, align 8
  call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret %"class.spvtools::opt::Instruction"* %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddIAddEjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %11, align 8
  %12 = tail call i8* @_Znwm(i64 112) #10
  %13 = bitcast i8* %12 to %"class.spvtools::opt::Instruction"*
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %17) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5, i32 0, i32 2
  %22 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %22, i64 0, i32 2
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %27, i64 37
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5, i32 0, i32 1, i32 0
  %30 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5, i32 0, i32 0
  tail call void %30(%"union.std::__1::__function::__policy_storage"* %31, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %27) #11
  tail call void @_ZdlPv(i8* nonnull %27) #10
  br label %32

32:                                               ; preds = %4, %20, %26
  %33 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %34) #11
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %54 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %59 = bitcast i32** %57 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %58, %"struct.std::__1::aligned_storage<4, 4>::type"** %59, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %61 = bitcast %"class.std::__1::unique_ptr.0"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %58 to i32*
  store i64 1, i64* %56, align 8
  store i32 %3, i32* %62, align 8
  %63 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %64, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 2
  %68 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 3, i64 0
  %69 = bitcast i32** %67 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %68, %"struct.std::__1::aligned_storage<4, 4>::type"** %69, align 8
  %70 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4
  %71 = bitcast %"class.std::__1::unique_ptr.0"* %70 to i64*
  store i64 0, i64* %71, align 8
  %72 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %73 = call i8* @_Znwm(i64 96) #10
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %73, i8** %75, align 8
  %76 = getelementptr inbounds i8, i8* %73, i64 96
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast %"struct.spvtools::opt::Operand"** %77 to i8**
  store i8* %76, i8** %78, align 8
  %79 = bitcast i8* %73 to i32*
  %80 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %79, align 8
  %82 = getelementptr inbounds i8, i8* %73, i64 8
  %83 = bitcast i8* %82 to %"class.spvtools::utils::SmallVector"*
  %84 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %85 = bitcast i8* %82 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %73, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %73, i64 24
  %89 = getelementptr inbounds i8, i8* %73, i64 32
  %90 = bitcast i8* %88 to i8**
  store i8* %89, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %73, i64 40
  %92 = bitcast i8* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %83, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %84) #11
  %94 = getelementptr inbounds i8, i8* %73, i64 48
  %95 = bitcast i8* %94 to i32*
  %96 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  %97 = load i32, i32* %96, align 8
  store i32 %97, i32* %95, align 8
  %98 = getelementptr inbounds i8, i8* %73, i64 56
  %99 = bitcast i8* %98 to %"class.spvtools::utils::SmallVector"*
  %100 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %101 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %73, i64 64
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %73, i64 72
  %105 = getelementptr inbounds i8, i8* %73, i64 80
  %106 = bitcast i8* %104 to i8**
  store i8* %105, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %73, i64 88
  %108 = bitcast i8* %107 to i64*
  store i64 0, i64* %108, align 8
  %109 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %99, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %100) #11
  %110 = getelementptr inbounds i8, i8* %73, i64 96
  %111 = bitcast %"struct.spvtools::opt::Operand"** %74 to i64*
  %112 = ptrtoint i8* %110 to i64
  store i64 %112, i64* %111, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %13, %"class.spvtools::opt::IRContext"* %15, i32 128, i32 %1, i32 %18, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %113 = ptrtoint i8* %12 to i64
  %114 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %116 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %115, align 8
  %117 = icmp eq %"struct.spvtools::opt::Operand"* %116, null
  br i1 %117, label %146, label %118

118:                                              ; preds = %32
  %119 = bitcast %"struct.spvtools::opt::Operand"* %116 to i8*
  %120 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %74, align 8
  %121 = icmp eq %"struct.spvtools::opt::Operand"* %120, %116
  br i1 %121, label %144, label %122

122:                                              ; preds = %118, %140
  %123 = phi %"struct.spvtools::opt::Operand"* [ %124, %140 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 -1
  %125 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %123, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %127 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %126, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %126, align 8
  %128 = icmp eq %"class.std::__1::vector.3"* %127, null
  br i1 %128, label %140, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %127, i64 0, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = icmp eq i32* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = ptrtoint i32* %131 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %127, i64 0, i32 0, i32 1
  %136 = bitcast i32** %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = bitcast i32* %131 to i8*
  call void @_ZdlPv(i8* %137) #10
  br label %138

138:                                              ; preds = %133, %129
  %139 = bitcast %"class.std::__1::vector.3"* %127 to i8*
  call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %138, %122
  %141 = icmp eq %"struct.spvtools::opt::Operand"* %124, %116
  br i1 %141, label %142, label %122

142:                                              ; preds = %140
  %143 = load i8*, i8** %75, align 8
  br label %144

144:                                              ; preds = %142, %118
  %145 = phi i8* [ %143, %142 ], [ %119, %118 ]
  store %"struct.spvtools::opt::Operand"* %116, %"struct.spvtools::opt::Operand"** %74, align 8
  call void @_ZdlPv(i8* %145) #10
  br label %146

146:                                              ; preds = %32, %144
  %147 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %149 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %148, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %148, align 8
  %150 = icmp eq %"class.std::__1::vector.3"* %149, null
  br i1 %150, label %162, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %149, i64 0, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = icmp eq i32* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %151
  %156 = ptrtoint i32* %153 to i64
  %157 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %149, i64 0, i32 0, i32 1
  %158 = bitcast i32** %157 to i64*
  store i64 %156, i64* %158, align 8
  %159 = bitcast i32* %153 to i8*
  call void @_ZdlPv(i8* %159) #10
  br label %160

160:                                              ; preds = %155, %151
  %161 = bitcast %"class.std::__1::vector.3"* %149 to i8*
  call void @_ZdlPv(i8* %161) #10
  br label %162

162:                                              ; preds = %146, %160
  %163 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %164, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %164, align 8
  %166 = icmp eq %"class.std::__1::vector.3"* %165, null
  br i1 %166, label %214, label %203

167:                                              ; preds = %214
  %168 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %216, i64 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = icmp eq i32* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %167
  %172 = ptrtoint i32* %169 to i64
  %173 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %216, i64 0, i32 0, i32 1
  %174 = bitcast i32** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast i32* %169 to i8*
  call void @_ZdlPv(i8* %175) #10
  br label %176

176:                                              ; preds = %171, %167
  %177 = bitcast %"class.std::__1::vector.3"* %216 to i8*
  call void @_ZdlPv(i8* %177) #10
  br label %178

178:                                              ; preds = %214, %176
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %179 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %180 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %179, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %179, align 8
  %181 = icmp eq %"class.std::__1::vector.3"* %180, null
  br i1 %181, label %193, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 0
  %184 = load i32*, i32** %183, align 8
  %185 = icmp eq i32* %184, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %182
  %187 = ptrtoint i32* %184 to i64
  %188 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 1
  %189 = bitcast i32** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = bitcast i32* %184 to i8*
  call void @_ZdlPv(i8* %190) #10
  br label %191

191:                                              ; preds = %186, %182
  %192 = bitcast %"class.std::__1::vector.3"* %180 to i8*
  call void @_ZdlPv(i8* %192) #10
  br label %193

193:                                              ; preds = %178, %191
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  %194 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5)
  %195 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %11, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %11, align 8
  %196 = icmp eq %"class.spvtools::opt::Instruction"* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = bitcast %"class.spvtools::opt::Instruction"* %195 to void (%"class.spvtools::opt::Instruction"*)***
  %199 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %199, i64 1
  %201 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %200, align 8
  call void %201(%"class.spvtools::opt::Instruction"* nonnull %195) #11
  br label %202

202:                                              ; preds = %193, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %194

203:                                              ; preds = %162
  %204 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 0
  %205 = load i32*, i32** %204, align 8
  %206 = icmp eq i32* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %203
  %208 = ptrtoint i32* %205 to i64
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 1
  %210 = bitcast i32** %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast i32* %205 to i8*
  call void @_ZdlPv(i8* %211) #10
  br label %212

212:                                              ; preds = %207, %203
  %213 = bitcast %"class.std::__1::vector.3"* %165 to i8*
  call void @_ZdlPv(i8* %213) #10
  br label %214

214:                                              ; preds = %212, %162
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %215 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %216 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %215, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %215, align 8
  %217 = icmp eq %"class.std::__1::vector.3"* %216, null
  br i1 %217, label %178, label %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS0_4LoopEPNS0_11InstructionEPNSt3__113unordered_setIS6_NS7_4hashIS6_EENS7_8equal_toIS6_EENS7_9allocatorIS6_EEEE(%"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_set.1022"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function.1207", align 8
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = alloca %"class.std::__1::function.1007", align 8
  store %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %38

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i8* @_Znwm(i64 104) #10
  %18 = bitcast i8* %17 to %"class.spvtools::opt::analysis::DefUseManager"*
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = getelementptr inbounds i8, i8* %17, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #11
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 64
  %25 = getelementptr inbounds i8, i8* %17, i64 96
  %26 = bitcast i8* %25 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %26, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %18, %"class.spvtools::opt::Module"* %16) #11
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6
  %28 = ptrtoint i8* %17 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %27 to i64*
  store i64 %28, i64* %31, align 8
  %32 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %14
  %34 = bitcast %"class.std::__1::unique_ptr.62"* %27 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %34, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %30) #11
  br label %35

35:                                               ; preds = %33, %14
  %36 = load i32, i32* %10, align 8
  %37 = or i32 %36, 1
  store i32 %37, i32* %10, align 8
  br label %38

38:                                               ; preds = %4, %35
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6, i32 0, i32 0, i32 0
  %40 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::unordered_set.1022", %"class.std::__1::unordered_set.1022"* %3, i64 0, i32 0
  %43 = call { %"struct.std::__1::__hash_node_base.1027"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1023"* %42, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6) #11
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %45 = bitcast %"class.std::__1::function.1007"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %7, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS8_4LoopEPNS8_11InstructionEPNS_13unordered_setISE_NS_4hashISE_EENS_8equal_toISE_EENS_9allocatorISE_EEEEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %46, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %47, align 8
  %48 = call i8* @_Znwm(i64 32) #10, !noalias !19
  %49 = bitcast i8* %48 to i64*
  store i64 %41, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"** %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to %"class.std::__1::unordered_set.1022"**
  store %"class.std::__1::unordered_set.1022"* %3, %"class.std::__1::unordered_set.1022"** %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 24
  %55 = bitcast i8* %54 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %56, align 8
  %57 = bitcast %"class.std::__1::function.1207"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #11
  %58 = ptrtoint %"class.std::__1::function.1007"* %7 to i64
  %59 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %5, i64 0, i32 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %59, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %60, align 8
  %61 = bitcast %"class.std::__1::function.1207"* %5 to i64*
  store i64 %58, i64* %61, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 6, i32 0, i32 0
  %63 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 6, i32 0, i32 1
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %64, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %63, %65
  br i1 %66, label %89, label %67

67:                                               ; preds = %38
  %68 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %5, i64 0, i32 0, i32 0
  br label %69

69:                                               ; preds = %84, %67
  %70 = phi %"struct.spvtools::opt::Operand"* [ %63, %67 ], [ %85, %84 ]
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %72) #11
  br i1 %73, label %74, label %84

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %75, align 8
  %77 = icmp eq %"class.std::__1::vector.3"* %76, null
  %78 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %76, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 0, i32 1, i32 2
  %80 = select i1 %77, i32** %79, i32** %78
  %81 = load i32*, i32** %80, align 8
  %82 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %59, align 8
  %83 = call zeroext i1 %82(%"union.std::__1::__function::__policy_storage"* nonnull %68, i32* %81) #11
  br i1 %83, label %84, label %87

84:                                               ; preds = %74, %69
  %85 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %70, i64 1
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %85, %65
  br i1 %86, label %87, label %69

87:                                               ; preds = %84, %74
  %88 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %60, align 8
  br label %89

89:                                               ; preds = %87, %38
  %90 = phi %"struct.std::__1::__function::__policy"* [ %88, %87 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %38 ]
  %91 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %90, i64 0, i32 1
  %92 = load void (i8*)*, void (i8*)** %91, align 8
  %93 = icmp eq void (i8*)* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %5, i64 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void %92(i8* %96) #11
  br label %97

97:                                               ; preds = %89, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #11
  %98 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %47, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %98, i64 0, i32 1
  %100 = load void (i8*)*, void (i8*)** %99, align 8
  %101 = icmp eq void (i8*)* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = load i8*, i8** %56, align 8
  call void %100(i8* %103) #11
  br label %104

104:                                              ; preds = %97, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt11LoopPeeling30IsConditionCheckSideEffectFreeEv(%"class.spvtools::opt::LoopPeeling"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::unordered_set.917", align 8
  %4 = alloca %"class.std::__1::function.1049", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 400) #10
  %15 = bitcast i8* %14 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %15, %"class.spvtools::opt::Module"* %13) #11
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 15
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.273"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::CFG"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %19) #11
  %23 = bitcast %"class.spvtools::opt::CFG"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %11
  %25 = load i32, i32* %7, align 8
  %26 = or i32 %25, 16
  store i32 %26, i32* %7, align 8
  br label %27

27:                                               ; preds = %1, %24
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 15, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %275

33:                                               ; preds = %27
  %34 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #11
  store i32 -1431655766, i32* %2, align 4
  %35 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 2
  %36 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %36, i64 0, i32 3
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %37, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 3
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = zext i8 %46 to i32
  %48 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %40, i32 %47) #11
  br label %49

49:                                               ; preds = %33, %44
  %50 = phi i32 [ %48, %44 ], [ 0, %33 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %103, label %55

55:                                               ; preds = %49
  %56 = tail call i64 @llvm.ctpop.i64(i64 %53) #11, !range !3
  %57 = icmp ugt i64 %56, 1
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = add i64 %53, 4294967295
  %60 = and i64 %59, %51
  br label %65

61:                                               ; preds = %55
  %62 = icmp ugt i64 %53, %51
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %51, %53
  br label %65

65:                                               ; preds = %63, %61, %58
  %66 = phi i64 [ %60, %58 ], [ %64, %63 ], [ %51, %61 ]
  %67 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %68, i64 %66
  %70 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.309"* %70, null
  br i1 %71, label %103, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %70, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.309"* %74, null
  br i1 %75, label %103, label %76

76:                                               ; preds = %72
  %77 = add i64 %53, -1
  br label %78

78:                                               ; preds = %99, %76
  %79 = phi %"struct.std::__1::__hash_node_base.309"* [ %74, %76 ], [ %101, %99 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %79, i64 1
  %81 = bitcast %"struct.std::__1::__hash_node_base.309"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %51
  br i1 %83, label %94, label %84

84:                                               ; preds = %78
  br i1 %57, label %87, label %85

85:                                               ; preds = %84
  %86 = and i64 %82, %77
  br label %91

87:                                               ; preds = %84
  %88 = icmp ult i64 %82, %53
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %82, %53
  br label %91

91:                                               ; preds = %89, %87, %85
  %92 = phi i64 [ %86, %85 ], [ %90, %89 ], [ %82, %87 ]
  %93 = icmp eq i64 %92, %66
  br i1 %93, label %99, label %103

94:                                               ; preds = %78
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %79, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base.309"* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %50
  br i1 %98, label %104, label %99

99:                                               ; preds = %94, %91
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %79, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.309"* %101, null
  br i1 %102, label %103, label %78

103:                                              ; preds = %99, %91, %72, %65, %49
  tail call void @abort() #12
  unreachable

104:                                              ; preds = %94
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %79, i64 3
  %106 = bitcast %"struct.std::__1::__hash_node_base.309"* %105 to i32**
  %107 = load i32*, i32** %106, align 8
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %2, align 4
  %109 = bitcast %"class.std::__1::unordered_set.917"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 4, i64 0
  %113 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 3
  %114 = bitcast %"class.std::__1::__compressed_pair.936"* %113 to i32*
  %115 = bitcast i8* %112 to i32*
  store i32 -1431655766, i32* %115, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0
  %117 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* nonnull %116, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %2) #11
  %118 = load i32, i32* %2, align 4
  %119 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %35, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %119, i64 0, i32 1
  %121 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %121, i64 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 4
  %125 = load i8, i8* %124, align 1, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %104
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 3
  %129 = load i8, i8* %128, align 4, !range !2
  %130 = zext i8 %129 to i32
  %131 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %123, i32 %130) #11
  br label %132

132:                                              ; preds = %104, %127
  %133 = phi i32 [ %131, %127 ], [ 0, %104 ]
  call fastcc void @_ZN8spvtools3optL15GetBlocksInPathEjjPNSt3__113unordered_setIjNS1_4hashIjEENS1_8equal_toIjEENS1_9allocatorIjEEEERKNS0_3CFGE(i32 %118, i32 %133, %"class.std::__1::unordered_set.917"* nonnull %3, %"class.spvtools::opt::CFG"* dereferenceable(400) %29)
  %134 = bitcast %"struct.std::__1::__hash_node_base.922"** %111 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = icmp eq i64 %135, 0
  %137 = inttoptr i64 %135 to %"struct.std::__1::__hash_node_base.922"*
  br i1 %136, label %258, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.std::__1::function.1049"* %4 to i8*
  %142 = ptrtoint %"class.spvtools::opt::LoopPeeling"* %0 to i64
  %143 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 1, i32 0
  %144 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 2
  %145 = bitcast %"class.std::__1::function.1049"* %4 to i64*
  %146 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0, i32 0
  br label %148

148:                                              ; preds = %138, %251
  %149 = phi i64 [ %135, %138 ], [ %253, %251 ]
  %150 = inttoptr i64 %149 to %"struct.std::__1::__hash_node.1159"*
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node.1159", %"struct.std::__1::__hash_node.1159"* %150, i64 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = load i64, i64* %139, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %203, label %156

156:                                              ; preds = %148
  %157 = call i64 @llvm.ctpop.i64(i64 %154) #11, !range !3
  %158 = icmp ugt i64 %157, 1
  br i1 %158, label %162, label %159

159:                                              ; preds = %156
  %160 = add i64 %154, 4294967295
  %161 = and i64 %160, %153
  br label %166

162:                                              ; preds = %156
  %163 = icmp ugt i64 %154, %153
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = urem i64 %153, %154
  br label %166

166:                                              ; preds = %164, %162, %159
  %167 = phi i64 [ %161, %159 ], [ %165, %164 ], [ %153, %162 ]
  %168 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %140, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %168, i64 %167
  %170 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.333"* %170, null
  br i1 %171, label %203, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %170, i64 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.333"* %174, null
  br i1 %175, label %203, label %176

176:                                              ; preds = %172
  %177 = add i64 %154, -1
  br label %178

178:                                              ; preds = %199, %176
  %179 = phi %"struct.std::__1::__hash_node_base.333"* [ %174, %176 ], [ %201, %199 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 1
  %181 = bitcast %"struct.std::__1::__hash_node_base.333"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, %153
  br i1 %183, label %194, label %184

184:                                              ; preds = %178
  br i1 %158, label %187, label %185

185:                                              ; preds = %184
  %186 = and i64 %182, %177
  br label %191

187:                                              ; preds = %184
  %188 = icmp ult i64 %182, %154
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = urem i64 %182, %154
  br label %191

191:                                              ; preds = %189, %187, %185
  %192 = phi i64 [ %186, %185 ], [ %190, %189 ], [ %182, %187 ]
  %193 = icmp eq i64 %192, %167
  br i1 %193, label %199, label %203

194:                                              ; preds = %178
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 2
  %196 = bitcast %"struct.std::__1::__hash_node_base.333"* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, %152
  br i1 %198, label %204, label %199

199:                                              ; preds = %194, %191
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 0, i32 0
  %201 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base.333"* %201, null
  br i1 %202, label %203, label %178

203:                                              ; preds = %172, %166, %148, %199, %191
  call void @abort() #12
  unreachable

204:                                              ; preds = %194
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 3
  %206 = bitcast %"struct.std::__1::__hash_node_base.333"* %205 to %"class.spvtools::opt::BasicBlock"**
  %207 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %206, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_11LoopPeeling30IsConditionCheckSideEffectFreeEvE3$_4S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %143, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt11LoopPeeling30IsConditionCheckSideEffectFreeEvE3$_4FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %144, align 8
  store i64 %142, i64* %145, align 8
  %208 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %207, i64 0, i32 1, i32 0, i32 0, i32 0
  %209 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %208, align 8
  %210 = icmp eq %"class.spvtools::opt::Instruction"* %209, null
  br i1 %210, label %222, label %211

211:                                              ; preds = %204
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %209, i64 0, i32 2
  %213 = load i32, i32* %212, align 8
  %214 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %213) #11
  br i1 %214, label %222, label %215

215:                                              ; preds = %211
  %216 = load i32, i32* %212, align 8
  %217 = add i32 %216, -246
  %218 = icmp ult i32 %217, 3
  br i1 %218, label %222, label %219

219:                                              ; preds = %215
  %220 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %221 = call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %220, %"class.spvtools::opt::Instruction"* nonnull %209) #11
  br i1 %221, label %222, label %242

222:                                              ; preds = %215, %211, %219, %204
  %223 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %207, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %224 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %223, align 8
  %225 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %224, i64 0, i32 0, i32 3
  %226 = load i8, i8* %225, align 8, !range !2
  %227 = icmp ne i8 %226, 0
  %228 = icmp eq %"class.spvtools::opt::Instruction"* %224, null
  %229 = or i1 %228, %227
  br i1 %229, label %242, label %230

230:                                              ; preds = %222, %233
  %231 = phi %"class.spvtools::opt::Instruction"* [ %239, %233 ], [ %224, %222 ]
  %232 = icmp eq %"class.spvtools::opt::Instruction"* %231, null
  br i1 %232, label %242, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 0, i32 1
  %235 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %234, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %235, i64 0, i32 0, i32 3
  %237 = load i8, i8* %236, align 8, !range !2
  %238 = icmp eq i8 %237, 0
  %239 = select i1 %238, %"class.spvtools::opt::Instruction"* %235, %"class.spvtools::opt::Instruction"* null
  %240 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %143, align 8
  %241 = call zeroext i1 %240(%"union.std::__1::__function::__policy_storage"* nonnull %146, %"class.spvtools::opt::Instruction"* nonnull %231) #11
  br i1 %241, label %230, label %242

242:                                              ; preds = %230, %233, %219, %222
  %243 = phi i1 [ false, %219 ], [ true, %222 ], [ false, %233 ], [ true, %230 ]
  %244 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %144, align 8
  %245 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %244, i64 0, i32 1
  %246 = load void (i8*)*, void (i8*)** %245, align 8
  %247 = icmp eq void (i8*)* %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %242
  %249 = load i8*, i8** %147, align 8
  call void %246(i8* %249) #11
  br label %250

250:                                              ; preds = %242, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #11
  br i1 %243, label %251, label %255

251:                                              ; preds = %250
  %252 = inttoptr i64 %149 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %148

255:                                              ; preds = %250, %251
  %256 = phi i32 [ 0, %251 ], [ 1, %250 ]
  %257 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %111, align 8
  br label %258

258:                                              ; preds = %255, %132
  %259 = phi %"struct.std::__1::__hash_node_base.922"* [ %257, %255 ], [ %137, %132 ]
  %260 = phi i32 [ %256, %255 ], [ 0, %132 ]
  %261 = icmp eq %"struct.std::__1::__hash_node_base.922"* %259, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %258, %262
  %263 = phi %"struct.std::__1::__hash_node_base.922"* [ %265, %262 ], [ %259, %258 ]
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %263, i64 0, i32 0
  %265 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %264, align 8
  %266 = bitcast %"struct.std::__1::__hash_node_base.922"* %263 to i8*
  call void @_ZdlPv(i8* %266) #10
  %267 = icmp eq %"struct.std::__1::__hash_node_base.922"* %265, null
  br i1 %267, label %268, label %262

268:                                              ; preds = %262, %258
  %269 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %110, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %110, align 8
  %270 = icmp eq %"struct.std::__1::__hash_node_base.922"** %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %268
  %272 = bitcast %"struct.std::__1::__hash_node_base.922"** %269 to i8*
  call void @_ZdlPv(i8* %272) #10
  br label %273

273:                                              ; preds = %268, %271
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #11
  %274 = icmp eq i32 %260, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %27, %273
  br label %276

276:                                              ; preds = %273, %275
  %277 = phi i1 [ true, %275 ], [ false, %273 ]
  ret i1 %277
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3optL15GetBlocksInPathEjjPNSt3__113unordered_setIjNS1_4hashIjEENS1_8equal_toIjEENS1_9allocatorIjEEEERKNS0_3CFGE(i32, i32, %"class.std::__1::unordered_set.917"*, %"class.spvtools::opt::CFG"* nocapture readonly dereferenceable(400)) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = zext i32 %0 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %58, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #11, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.309"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.309"* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.309"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.309"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %58

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.309"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %0
  br i1 %53, label %59, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.309"* %56, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %54, %46, %27, %20, %4
  tail call void @abort() #12
  unreachable

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %34, i64 3
  %61 = bitcast %"struct.std::__1::__hash_node_base.309"* %60 to i32**
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %34, i64 4
  %64 = bitcast %"struct.std::__1::__hash_node_base.309"* %63 to i32**
  %65 = load i32*, i32** %64, align 8
  %66 = icmp eq i32* %62, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %59
  %68 = bitcast i32* %5 to i8*
  %69 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0
  br label %71

70:                                               ; preds = %82, %59
  ret void

71:                                               ; preds = %67, %82
  %72 = phi i32* [ %62, %67 ], [ %83, %82 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #11
  store i32 -1431655766, i32* %5, align 4
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %5, align 4
  %74 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %69, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #11
  %75 = extractvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %74, 1
  %76 = and i8 %75, 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %71
  %79 = load i32, i32* %5, align 4
  %80 = icmp eq i32 %79, %1
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call fastcc void @_ZN8spvtools3optL15GetBlocksInPathEjjPNSt3__113unordered_setIjNS1_4hashIjEENS1_8equal_toIjEENS1_9allocatorIjEEEERKNS0_3CFGE(i32 %79, i32 %1, %"class.std::__1::unordered_set.917"* %2, %"class.spvtools::opt::CFG"* dereferenceable(400) %3)
  br label %82

82:                                               ; preds = %78, %71, %81
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #11
  %83 = getelementptr inbounds i32, i32* %72, i64 1
  %84 = icmp eq i32* %83, %65
  br i1 %84, label %70, label %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEv(%"class.spvtools::opt::LoopPeeling"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.1049", align 8
  %3 = alloca %"class.std::__1::function.1049", align 8
  %4 = alloca %"class.std::__1::function.1049", align 8
  %5 = alloca %"class.std::__1::function.1015", align 8
  %6 = alloca %"class.std::__1::function.1015", align 8
  %7 = alloca %"class.std::__1::function.1015", align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i8* @_Znwm(i64 400) #10
  %18 = bitcast i8* %17 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %18, %"class.spvtools::opt::Module"* %16) #11
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 15
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.273"* %20 to i64*
  store i64 %19, i64* %23, align 8
  %24 = icmp eq %"class.spvtools::opt::CFG"* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %14
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %22) #11
  %26 = bitcast %"class.spvtools::opt::CFG"* %22 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %25, %14
  %28 = load i32, i32* %10, align 8
  %29 = or i32 %28, 16
  store i32 %29, i32* %10, align 8
  br label %30

30:                                               ; preds = %1, %27
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 15, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 2
  %34 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %34, i64 0, i32 1
  %36 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %35, align 8
  %37 = bitcast %"class.std::__1::function.1015"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #11
  %38 = ptrtoint %"class.spvtools::opt::LoopPeeling"* %0 to i64
  %39 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %5, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling22GetIteratingExitValuesEvE3$_5S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_5FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.1015"* %5 to i64*
  store i64 %38, i64* %41, align 8
  %42 = bitcast %"class.std::__1::function.1049"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #11
  %43 = ptrtoint %"class.std::__1::function.1015"* %5 to i64
  %44 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %44, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %45, align 8
  %46 = bitcast %"class.std::__1::function.1049"* %4 to i64*
  store i64 %43, i64* %46, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %36, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %48 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 3
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp ne i8 %50, 0
  %52 = icmp eq %"class.spvtools::opt::Instruction"* %48, null
  %53 = or i1 %52, %51
  br i1 %53, label %74, label %54

54:                                               ; preds = %30
  %55 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %65, %54
  %57 = phi %"class.spvtools::opt::Instruction"* [ %69, %65 ], [ %48, %54 ]
  %58 = icmp eq %"class.spvtools::opt::Instruction"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 0, i32 1
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 245
  br i1 %64, label %65, label %72

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = select i1 %68, %"class.spvtools::opt::Instruction"* %61, %"class.spvtools::opt::Instruction"* null
  %70 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %44, align 8
  %71 = call zeroext i1 %70(%"union.std::__1::__function::__policy_storage"* nonnull %55, %"class.spvtools::opt::Instruction"* nonnull %57) #11
  br i1 %71, label %56, label %72

72:                                               ; preds = %56, %59, %65
  %73 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  br label %74

74:                                               ; preds = %72, %30
  %75 = phi %"struct.std::__1::__function::__policy"* [ %73, %72 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %30 ]
  %76 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %75, i64 0, i32 1
  %77 = load void (i8*)*, void (i8*)** %76, align 8
  %78 = icmp eq void (i8*)* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %4, i64 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void %77(i8* %81) #11
  br label %82

82:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #11
  %83 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %83, i64 0, i32 1
  %85 = load void (i8*)*, void (i8*)** %84, align 8
  %86 = icmp eq void (i8*)* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %5, i64 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void %85(i8* %89) #11
  br label %90

90:                                               ; preds = %82, %87
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #11
  %91 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %33, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %91, i64 0, i32 3
  %93 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %92, align 8
  %94 = icmp eq %"class.spvtools::opt::BasicBlock"* %93, null
  br i1 %94, label %550, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %93, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %103 = load i8, i8* %102, align 4, !range !2
  %104 = zext i8 %103 to i32
  %105 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %97, i32 %104) #11
  br label %106

106:                                              ; preds = %95, %101
  %107 = phi i32 [ %105, %101 ], [ 0, %95 ]
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %32, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %160, label %112

112:                                              ; preds = %106
  %113 = call i64 @llvm.ctpop.i64(i64 %110) #11, !range !3
  %114 = icmp ugt i64 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = add i64 %110, 4294967295
  %117 = and i64 %116, %108
  br label %122

118:                                              ; preds = %112
  %119 = icmp ugt i64 %110, %108
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %108, %110
  br label %122

122:                                              ; preds = %120, %118, %115
  %123 = phi i64 [ %117, %115 ], [ %121, %120 ], [ %108, %118 ]
  %124 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %32, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %125, i64 %123
  %127 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.309"* %127, null
  br i1 %128, label %160, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %127, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.309"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = add i64 %110, -1
  br label %135

135:                                              ; preds = %156, %133
  %136 = phi %"struct.std::__1::__hash_node_base.309"* [ %131, %133 ], [ %158, %156 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.309"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, %108
  br i1 %140, label %151, label %141

141:                                              ; preds = %135
  br i1 %114, label %144, label %142

142:                                              ; preds = %141
  %143 = and i64 %139, %134
  br label %148

144:                                              ; preds = %141
  %145 = icmp ult i64 %139, %110
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = urem i64 %139, %110
  br label %148

148:                                              ; preds = %146, %144, %142
  %149 = phi i64 [ %143, %142 ], [ %147, %146 ], [ %139, %144 ]
  %150 = icmp eq i64 %149, %123
  br i1 %150, label %156, label %160

151:                                              ; preds = %135
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 2
  %153 = bitcast %"struct.std::__1::__hash_node_base.309"* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, %107
  br i1 %155, label %161, label %156

156:                                              ; preds = %151, %148
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 0, i32 0
  %158 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %157, align 8
  %159 = icmp eq %"struct.std::__1::__hash_node_base.309"* %158, null
  br i1 %159, label %160, label %135

160:                                              ; preds = %156, %148, %129, %122, %106
  call void @abort() #12
  unreachable

161:                                              ; preds = %151
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 3
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 4
  %164 = bitcast %"struct.std::__1::__hash_node_base.309"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"struct.std::__1::__hash_node_base.309"* %162 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %165, %167
  %169 = icmp eq i64 %168, 4
  br i1 %169, label %170, label %550

170:                                              ; preds = %161
  %171 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 11
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %200

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %177, align 8
  %179 = call i8* @_Znwm(i64 104) #10
  %180 = bitcast i8* %179 to %"class.spvtools::opt::analysis::DefUseManager"*
  %181 = getelementptr inbounds i8, i8* %179, i64 32
  %182 = bitcast i8* %181 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %182, align 4
  %183 = getelementptr inbounds i8, i8* %179, i64 48
  %184 = getelementptr inbounds i8, i8* %179, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 16, i1 false) #11
  %185 = bitcast i8* %184 to i8**
  store i8* %183, i8** %185, align 8
  %186 = getelementptr inbounds i8, i8* %179, i64 64
  %187 = getelementptr inbounds i8, i8* %179, i64 96
  %188 = bitcast i8* %187 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %188, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %180, %"class.spvtools::opt::Module"* %178) #11
  %189 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 6
  %190 = ptrtoint i8* %179 to i64
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %191, align 8
  %193 = bitcast %"class.std::__1::unique_ptr.62"* %189 to i64*
  store i64 %190, i64* %193, align 8
  %194 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %192, null
  br i1 %194, label %197, label %195

195:                                              ; preds = %176
  %196 = bitcast %"class.std::__1::unique_ptr.62"* %189 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %196, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %192) #11
  br label %197

197:                                              ; preds = %195, %176
  %198 = load i32, i32* %172, align 8
  %199 = or i32 %198, 1
  store i32 %199, i32* %172, align 8
  br label %200

200:                                              ; preds = %170, %197
  %201 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 6, i32 0, i32 0, i32 0
  %202 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %33, align 8
  %205 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %204, i64 0, i32 3
  %206 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %205, align 8
  %207 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %206, i64 0, i32 1, i32 0, i32 0, i32 0
  %208 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %207, align 8
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %208, i64 0, i32 4
  %210 = load i8, i8* %209, align 1, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %217, label %212

212:                                              ; preds = %200
  %213 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %208, i64 0, i32 3
  %214 = load i8, i8* %213, align 4, !range !2
  %215 = zext i8 %214 to i32
  %216 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %208, i32 %215) #11
  br label %217

217:                                              ; preds = %200, %212
  %218 = phi i32 [ %216, %212 ], [ 0, %200 ]
  %219 = zext i32 %218 to i64
  %220 = load i64, i64* %109, align 8
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %269, label %222

222:                                              ; preds = %217
  %223 = call i64 @llvm.ctpop.i64(i64 %220) #11, !range !3
  %224 = icmp ugt i64 %223, 1
  br i1 %224, label %228, label %225

225:                                              ; preds = %222
  %226 = add i64 %220, 4294967295
  %227 = and i64 %226, %219
  br label %232

228:                                              ; preds = %222
  %229 = icmp ugt i64 %220, %219
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = urem i64 %219, %220
  br label %232

232:                                              ; preds = %230, %228, %225
  %233 = phi i64 [ %227, %225 ], [ %231, %230 ], [ %219, %228 ]
  %234 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %124, align 8
  %235 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %234, i64 %233
  %236 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %235, align 8
  %237 = icmp eq %"struct.std::__1::__hash_node_base.309"* %236, null
  br i1 %237, label %269, label %238

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %236, i64 0, i32 0
  %240 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %239, align 8
  %241 = icmp eq %"struct.std::__1::__hash_node_base.309"* %240, null
  br i1 %241, label %269, label %242

242:                                              ; preds = %238
  %243 = add i64 %220, -1
  br label %244

244:                                              ; preds = %265, %242
  %245 = phi %"struct.std::__1::__hash_node_base.309"* [ %240, %242 ], [ %267, %265 ]
  %246 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %245, i64 1
  %247 = bitcast %"struct.std::__1::__hash_node_base.309"* %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = icmp eq i64 %248, %219
  br i1 %249, label %260, label %250

250:                                              ; preds = %244
  br i1 %224, label %253, label %251

251:                                              ; preds = %250
  %252 = and i64 %248, %243
  br label %257

253:                                              ; preds = %250
  %254 = icmp ult i64 %248, %220
  br i1 %254, label %257, label %255

255:                                              ; preds = %253
  %256 = urem i64 %248, %220
  br label %257

257:                                              ; preds = %255, %253, %251
  %258 = phi i64 [ %252, %251 ], [ %256, %255 ], [ %248, %253 ]
  %259 = icmp eq i64 %258, %233
  br i1 %259, label %265, label %269

260:                                              ; preds = %244
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %245, i64 2
  %262 = bitcast %"struct.std::__1::__hash_node_base.309"* %261 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %263, %218
  br i1 %264, label %270, label %265

265:                                              ; preds = %260, %257
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %245, i64 0, i32 0
  %267 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %266, align 8
  %268 = icmp eq %"struct.std::__1::__hash_node_base.309"* %267, null
  br i1 %268, label %269, label %244

269:                                              ; preds = %265, %257, %238, %232, %217
  call void @abort() #12
  unreachable

270:                                              ; preds = %260
  %271 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %245, i64 3
  %272 = bitcast %"struct.std::__1::__hash_node_base.309"* %271 to i32**
  %273 = load i32*, i32** %272, align 8
  %274 = load i32, i32* %273, align 4
  %275 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %33, align 8
  %276 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %275, i64 0, i32 1
  %277 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %276, align 8
  %278 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %277, i64 0, i32 1, i32 0, i32 0, i32 0
  %279 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %278, align 8
  %280 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %279, i64 0, i32 4
  %281 = load i8, i8* %280, align 1, !range !2
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %289, label %283

283:                                              ; preds = %270
  %284 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %279, i64 0, i32 3
  %285 = load i8, i8* %284, align 4, !range !2
  %286 = zext i8 %285 to i32
  %287 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %279, i32 %286) #11
  %288 = load i64, i64* %109, align 8
  br label %289

289:                                              ; preds = %270, %283
  %290 = phi i64 [ %288, %283 ], [ %220, %270 ]
  %291 = phi i32 [ %287, %283 ], [ 0, %270 ]
  %292 = zext i32 %291 to i64
  %293 = icmp eq i64 %290, 0
  br i1 %293, label %341, label %294

294:                                              ; preds = %289
  %295 = call i64 @llvm.ctpop.i64(i64 %290) #11, !range !3
  %296 = icmp ugt i64 %295, 1
  br i1 %296, label %300, label %297

297:                                              ; preds = %294
  %298 = add i64 %290, 4294967295
  %299 = and i64 %298, %292
  br label %304

300:                                              ; preds = %294
  %301 = icmp ugt i64 %290, %292
  br i1 %301, label %304, label %302

302:                                              ; preds = %300
  %303 = urem i64 %292, %290
  br label %304

304:                                              ; preds = %302, %300, %297
  %305 = phi i64 [ %299, %297 ], [ %303, %302 ], [ %292, %300 ]
  %306 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %124, align 8
  %307 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %306, i64 %305
  %308 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %307, align 8
  %309 = icmp eq %"struct.std::__1::__hash_node_base.309"* %308, null
  br i1 %309, label %341, label %310

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %308, i64 0, i32 0
  %312 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %311, align 8
  %313 = icmp eq %"struct.std::__1::__hash_node_base.309"* %312, null
  br i1 %313, label %341, label %314

314:                                              ; preds = %310
  %315 = add i64 %290, -1
  br label %316

316:                                              ; preds = %337, %314
  %317 = phi %"struct.std::__1::__hash_node_base.309"* [ %312, %314 ], [ %339, %337 ]
  %318 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 1
  %319 = bitcast %"struct.std::__1::__hash_node_base.309"* %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = icmp eq i64 %320, %292
  br i1 %321, label %332, label %322

322:                                              ; preds = %316
  br i1 %296, label %325, label %323

323:                                              ; preds = %322
  %324 = and i64 %320, %315
  br label %329

325:                                              ; preds = %322
  %326 = icmp ult i64 %320, %290
  br i1 %326, label %329, label %327

327:                                              ; preds = %325
  %328 = urem i64 %320, %290
  br label %329

329:                                              ; preds = %327, %325, %323
  %330 = phi i64 [ %324, %323 ], [ %328, %327 ], [ %320, %325 ]
  %331 = icmp eq i64 %330, %305
  br i1 %331, label %337, label %341

332:                                              ; preds = %316
  %333 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 2
  %334 = bitcast %"struct.std::__1::__hash_node_base.309"* %333 to i32*
  %335 = load i32, i32* %334, align 4
  %336 = icmp eq i32 %335, %291
  br i1 %336, label %342, label %337

337:                                              ; preds = %332, %329
  %338 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 0, i32 0
  %339 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %338, align 8
  %340 = icmp eq %"struct.std::__1::__hash_node_base.309"* %339, null
  br i1 %340, label %341, label %316

341:                                              ; preds = %337, %329, %310, %304, %289
  call void @abort() #12
  unreachable

342:                                              ; preds = %332
  %343 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 3
  %344 = bitcast %"struct.std::__1::__hash_node_base.309"* %343 to i32**
  %345 = load i32*, i32** %344, align 8
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 4
  %347 = bitcast %"struct.std::__1::__hash_node_base.309"* %346 to i32**
  %348 = load i32*, i32** %347, align 8
  %349 = icmp eq i32* %345, %348
  br i1 %349, label %359, label %350

350:                                              ; preds = %342, %354
  %351 = phi i32* [ %355, %354 ], [ %345, %342 ]
  %352 = load i32, i32* %351, align 4
  %353 = icmp eq i32 %352, %274
  br i1 %353, label %359, label %354

354:                                              ; preds = %350
  %355 = getelementptr inbounds i32, i32* %351, i64 1
  %356 = icmp eq i32* %355, %348
  br i1 %356, label %357, label %350

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 6
  store i8 0, i8* %358, align 8
  br label %426

359:                                              ; preds = %350, %342
  %360 = phi i32* [ %345, %342 ], [ %351, %350 ]
  %361 = icmp ne i32* %360, %348
  %362 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 6
  %363 = zext i1 %361 to i8
  store i8 %363, i8* %362, align 8
  br i1 %361, label %364, label %426

364:                                              ; preds = %359
  %365 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %33, align 8
  %366 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %365, i64 0, i32 1
  %367 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %366, align 8
  %368 = bitcast %"class.std::__1::function.1015"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %368) #11
  %369 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %6, i64 0, i32 0, i32 1, i32 0
  %370 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling22GetIteratingExitValuesEvE3$_6S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %369, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %370, align 8
  %371 = call i8* @_Znwm(i64 24) #10, !noalias !24
  %372 = bitcast i8* %371 to i32*
  store i32 %274, i32* %372, align 8
  %373 = getelementptr inbounds i8, i8* %371, i64 8
  %374 = bitcast i8* %373 to i64*
  store i64 %203, i64* %374, align 8
  %375 = getelementptr inbounds i8, i8* %371, i64 16
  %376 = bitcast i8* %375 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %376, align 8
  %377 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %371, i8** %377, align 8
  %378 = bitcast %"class.std::__1::function.1049"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %378) #11
  %379 = ptrtoint %"class.std::__1::function.1015"* %6 to i64
  %380 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %2, i64 0, i32 0, i32 1, i32 0
  %381 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %2, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %380, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %381, align 8
  %382 = bitcast %"class.std::__1::function.1049"* %2 to i64*
  store i64 %379, i64* %382, align 8
  %383 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %367, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %384 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %383, align 8
  %385 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %384, i64 0, i32 0, i32 3
  %386 = load i8, i8* %385, align 8, !range !2
  %387 = icmp ne i8 %386, 0
  %388 = icmp eq %"class.spvtools::opt::Instruction"* %384, null
  %389 = or i1 %388, %387
  br i1 %389, label %410, label %390

390:                                              ; preds = %364
  %391 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %2, i64 0, i32 0, i32 0
  br label %392

392:                                              ; preds = %401, %390
  %393 = phi %"class.spvtools::opt::Instruction"* [ %405, %401 ], [ %384, %390 ]
  %394 = icmp eq %"class.spvtools::opt::Instruction"* %393, null
  br i1 %394, label %408, label %395

395:                                              ; preds = %392
  %396 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %393, i64 0, i32 0, i32 1
  %397 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %396, align 8
  %398 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %393, i64 0, i32 2
  %399 = load i32, i32* %398, align 8
  %400 = icmp eq i32 %399, 245
  br i1 %400, label %401, label %408

401:                                              ; preds = %395
  %402 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %397, i64 0, i32 0, i32 3
  %403 = load i8, i8* %402, align 8, !range !2
  %404 = icmp eq i8 %403, 0
  %405 = select i1 %404, %"class.spvtools::opt::Instruction"* %397, %"class.spvtools::opt::Instruction"* null
  %406 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %380, align 8
  %407 = call zeroext i1 %406(%"union.std::__1::__function::__policy_storage"* nonnull %391, %"class.spvtools::opt::Instruction"* nonnull %393) #11
  br i1 %407, label %392, label %408

408:                                              ; preds = %392, %395, %401
  %409 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %381, align 8
  br label %410

410:                                              ; preds = %408, %364
  %411 = phi %"struct.std::__1::__function::__policy"* [ %409, %408 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %364 ]
  %412 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %411, i64 0, i32 1
  %413 = load void (i8*)*, void (i8*)** %412, align 8
  %414 = icmp eq void (i8*)* %413, null
  br i1 %414, label %418, label %415

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %2, i64 0, i32 0, i32 0, i32 0
  %417 = load i8*, i8** %416, align 8
  call void %413(i8* %417) #11
  br label %418

418:                                              ; preds = %410, %415
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %378) #11
  %419 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %370, align 8
  %420 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %419, i64 0, i32 1
  %421 = load void (i8*)*, void (i8*)** %420, align 8
  %422 = icmp eq void (i8*)* %421, null
  br i1 %422, label %425, label %423

423:                                              ; preds = %418
  %424 = load i8*, i8** %377, align 8
  call void %421(i8* %424) #11
  br label %425

425:                                              ; preds = %418, %423
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %368) #11
  br label %550

426:                                              ; preds = %357, %359
  %427 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %428 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 3
  %429 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %428, align 8
  %430 = call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %427, %"class.spvtools::opt::Function"* %429) #11
  %431 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %430, i64 0, i32 0, i32 0
  %432 = zext i32 %274 to i64
  %433 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %32, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %434 = load i64, i64* %433, align 8
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %484, label %436

436:                                              ; preds = %426
  %437 = call i64 @llvm.ctpop.i64(i64 %434) #11, !range !3
  %438 = icmp ugt i64 %437, 1
  br i1 %438, label %442, label %439

439:                                              ; preds = %436
  %440 = add i64 %434, 4294967295
  %441 = and i64 %440, %432
  br label %446

442:                                              ; preds = %436
  %443 = icmp ugt i64 %434, %432
  br i1 %443, label %446, label %444

444:                                              ; preds = %442
  %445 = urem i64 %432, %434
  br label %446

446:                                              ; preds = %444, %442, %439
  %447 = phi i64 [ %441, %439 ], [ %445, %444 ], [ %432, %442 ]
  %448 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %32, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %448, align 8
  %450 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %449, i64 %447
  %451 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %450, align 8
  %452 = icmp eq %"struct.std::__1::__hash_node_base.333"* %451, null
  br i1 %452, label %484, label %453

453:                                              ; preds = %446
  %454 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %451, i64 0, i32 0
  %455 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %454, align 8
  %456 = icmp eq %"struct.std::__1::__hash_node_base.333"* %455, null
  br i1 %456, label %484, label %457

457:                                              ; preds = %453
  %458 = add i64 %434, -1
  br label %459

459:                                              ; preds = %480, %457
  %460 = phi %"struct.std::__1::__hash_node_base.333"* [ %455, %457 ], [ %482, %480 ]
  %461 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %460, i64 1
  %462 = bitcast %"struct.std::__1::__hash_node_base.333"* %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = icmp eq i64 %463, %432
  br i1 %464, label %475, label %465

465:                                              ; preds = %459
  br i1 %438, label %468, label %466

466:                                              ; preds = %465
  %467 = and i64 %463, %458
  br label %472

468:                                              ; preds = %465
  %469 = icmp ult i64 %463, %434
  br i1 %469, label %472, label %470

470:                                              ; preds = %468
  %471 = urem i64 %463, %434
  br label %472

472:                                              ; preds = %470, %468, %466
  %473 = phi i64 [ %467, %466 ], [ %471, %470 ], [ %463, %468 ]
  %474 = icmp eq i64 %473, %447
  br i1 %474, label %480, label %484

475:                                              ; preds = %459
  %476 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %460, i64 2
  %477 = bitcast %"struct.std::__1::__hash_node_base.333"* %476 to i32*
  %478 = load i32, i32* %477, align 4
  %479 = icmp eq i32 %478, %274
  br i1 %479, label %485, label %480

480:                                              ; preds = %475, %472
  %481 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %460, i64 0, i32 0
  %482 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %481, align 8
  %483 = icmp eq %"struct.std::__1::__hash_node_base.333"* %482, null
  br i1 %483, label %484, label %459

484:                                              ; preds = %480, %472, %453, %446, %426
  call void @abort() #12
  unreachable

485:                                              ; preds = %475
  %486 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %460, i64 3
  %487 = bitcast %"struct.std::__1::__hash_node_base.333"* %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %33, align 8
  %490 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %489, i64 0, i32 1
  %491 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %490, align 8
  %492 = bitcast %"class.std::__1::function.1015"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %492) #11
  %493 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 1, i32 0
  %494 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling22GetIteratingExitValuesEvE3$_7S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %493, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %494, align 8
  %495 = call i8* @_Znwm(i64 24) #10, !noalias !29
  %496 = bitcast i8* %495 to %"class.spvtools::opt::DominatorTree"**
  store %"class.spvtools::opt::DominatorTree"* %431, %"class.spvtools::opt::DominatorTree"** %496, align 8
  %497 = getelementptr inbounds i8, i8* %495, i64 8
  %498 = bitcast i8* %497 to i64*
  store i64 %488, i64* %498, align 8
  %499 = getelementptr inbounds i8, i8* %495, i64 16
  %500 = bitcast i8* %499 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %500, align 8
  %501 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %495, i8** %501, align 8
  %502 = bitcast %"class.std::__1::function.1049"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %502) #11
  %503 = ptrtoint %"class.std::__1::function.1015"* %7 to i64
  %504 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 1, i32 0
  %505 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %504, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %505, align 8
  %506 = bitcast %"class.std::__1::function.1049"* %3 to i64*
  store i64 %503, i64* %506, align 8
  %507 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %491, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %508 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %507, align 8
  %509 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %508, i64 0, i32 0, i32 3
  %510 = load i8, i8* %509, align 8, !range !2
  %511 = icmp ne i8 %510, 0
  %512 = icmp eq %"class.spvtools::opt::Instruction"* %508, null
  %513 = or i1 %512, %511
  br i1 %513, label %534, label %514

514:                                              ; preds = %485
  %515 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0
  br label %516

516:                                              ; preds = %525, %514
  %517 = phi %"class.spvtools::opt::Instruction"* [ %529, %525 ], [ %508, %514 ]
  %518 = icmp eq %"class.spvtools::opt::Instruction"* %517, null
  br i1 %518, label %532, label %519

519:                                              ; preds = %516
  %520 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %517, i64 0, i32 0, i32 1
  %521 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %520, align 8
  %522 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %517, i64 0, i32 2
  %523 = load i32, i32* %522, align 8
  %524 = icmp eq i32 %523, 245
  br i1 %524, label %525, label %532

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %521, i64 0, i32 0, i32 3
  %527 = load i8, i8* %526, align 8, !range !2
  %528 = icmp eq i8 %527, 0
  %529 = select i1 %528, %"class.spvtools::opt::Instruction"* %521, %"class.spvtools::opt::Instruction"* null
  %530 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %504, align 8
  %531 = call zeroext i1 %530(%"union.std::__1::__function::__policy_storage"* nonnull %515, %"class.spvtools::opt::Instruction"* nonnull %517) #11
  br i1 %531, label %516, label %532

532:                                              ; preds = %516, %519, %525
  %533 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %505, align 8
  br label %534

534:                                              ; preds = %532, %485
  %535 = phi %"struct.std::__1::__function::__policy"* [ %533, %532 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %485 ]
  %536 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %535, i64 0, i32 1
  %537 = load void (i8*)*, void (i8*)** %536, align 8
  %538 = icmp eq void (i8*)* %537, null
  br i1 %538, label %542, label %539

539:                                              ; preds = %534
  %540 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0, i32 0
  %541 = load i8*, i8** %540, align 8
  call void %537(i8* %541) #11
  br label %542

542:                                              ; preds = %534, %539
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %502) #11
  %543 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %494, align 8
  %544 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %543, i64 0, i32 1
  %545 = load void (i8*)*, void (i8*)** %544, align 8
  %546 = icmp eq void (i8*)* %545, null
  br i1 %546, label %549, label %547

547:                                              ; preds = %542
  %548 = load i8*, i8** %501, align 8
  call void %545(i8* %548) #11
  br label %549

549:                                              ; preds = %542, %547
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %492) #11
  br label %550

550:                                              ; preds = %425, %549, %161, %90
  ret void
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11LoopPeeling16FixExitConditionERKNSt3__18functionIFjPNS0_11InstructionEEEE(%"class.spvtools::opt::LoopPeeling"* nocapture readonly, %"class.std::__1::function.1075"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 400) #10
  %16 = bitcast i8* %15 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %16, %"class.spvtools::opt::Module"* %14) #11
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.273"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::CFG"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %20) #11
  %24 = bitcast %"class.spvtools::opt::CFG"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %12
  %26 = load i32, i32* %8, align 8
  %27 = or i32 %26, 16
  store i32 %27, i32* %8, align 8
  br label %28

28:                                               ; preds = %2, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 5
  %32 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %32, i64 0, i32 3
  %34 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %36, i32 %43) #11
  br label %45

45:                                               ; preds = %28, %40
  %46 = phi i32 [ %44, %40 ], [ 0, %28 ]
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %99, label %51

51:                                               ; preds = %45
  %52 = tail call i64 @llvm.ctpop.i64(i64 %49) #11, !range !3
  %53 = icmp ugt i64 %52, 1
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = add i64 %49, 4294967295
  %56 = and i64 %55, %47
  br label %61

57:                                               ; preds = %51
  %58 = icmp ugt i64 %49, %47
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %47, %49
  br label %61

61:                                               ; preds = %59, %57, %54
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %47, %57 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %64, i64 %62
  %66 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.309"* %66, null
  br i1 %67, label %99, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %66, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.309"* %70, null
  br i1 %71, label %99, label %72

72:                                               ; preds = %68
  %73 = add i64 %49, -1
  br label %74

74:                                               ; preds = %95, %72
  %75 = phi %"struct.std::__1::__hash_node_base.309"* [ %70, %72 ], [ %97, %95 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %75, i64 1
  %77 = bitcast %"struct.std::__1::__hash_node_base.309"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %47
  br i1 %79, label %90, label %80

80:                                               ; preds = %74
  br i1 %53, label %83, label %81

81:                                               ; preds = %80
  %82 = and i64 %78, %73
  br label %87

83:                                               ; preds = %80
  %84 = icmp ult i64 %78, %49
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %78, %49
  br label %87

87:                                               ; preds = %85, %83, %81
  %88 = phi i64 [ %82, %81 ], [ %86, %85 ], [ %78, %83 ]
  %89 = icmp eq i64 %88, %62
  br i1 %89, label %95, label %99

90:                                               ; preds = %74
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %75, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base.309"* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %46
  br i1 %94, label %100, label %95

95:                                               ; preds = %90, %87
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %75, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.309"* %97, null
  br i1 %98, label %99, label %74

99:                                               ; preds = %95, %87, %68, %61, %45
  tail call void @abort() #12
  unreachable

100:                                              ; preds = %90
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %75, i64 3
  %102 = bitcast %"struct.std::__1::__hash_node_base.309"* %101 to i32**
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %75, i64 4
  %105 = bitcast %"struct.std::__1::__hash_node_base.309"* %104 to i32**
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %103, %106
  br i1 %107, label %167, label %108

108:                                              ; preds = %100
  %109 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %109, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  %113 = tail call i64 @llvm.ctpop.i64(i64 %111) #11, !range !3
  %114 = icmp ugt i64 %113, 1
  %115 = add i64 %111, 4294967295
  %116 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %109, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = add i64 %111, -1
  br label %118

118:                                              ; preds = %108, %164
  %119 = phi i32* [ %103, %108 ], [ %165, %164 ]
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  br i1 %112, label %164, label %122

122:                                              ; preds = %118
  br i1 %114, label %125, label %123

123:                                              ; preds = %122
  %124 = and i64 %115, %121
  br label %129

125:                                              ; preds = %122
  %126 = icmp ugt i64 %111, %121
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %121, %111
  br label %129

129:                                              ; preds = %127, %125, %123
  %130 = phi i64 [ %124, %123 ], [ %128, %127 ], [ %121, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %116, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %131, i64 %130
  %133 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.922"* %133, null
  br i1 %134, label %164, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %133, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.922"* %137, null
  br i1 %138, label %164, label %139

139:                                              ; preds = %135, %160
  %140 = phi %"struct.std::__1::__hash_node_base.922"* [ %162, %160 ], [ %137, %135 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.922"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, %121
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  br i1 %114, label %148, label %146

146:                                              ; preds = %145
  %147 = and i64 %143, %117
  br label %152

148:                                              ; preds = %145
  %149 = icmp ult i64 %143, %111
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %143, %111
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %143, %148 ]
  %154 = icmp eq i64 %153, %130
  br i1 %154, label %160, label %164

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 2
  %157 = bitcast %"struct.std::__1::__hash_node_base.922"* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %120
  br i1 %159, label %167, label %160

160:                                              ; preds = %155, %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.922"* %162, null
  br i1 %163, label %164, label %139

164:                                              ; preds = %152, %160, %129, %118, %135
  %165 = getelementptr inbounds i32, i32* %119, i64 1
  %166 = icmp eq i32* %165, %106
  br i1 %166, label %167, label %118

167:                                              ; preds = %164, %155, %100
  %168 = phi i32 [ 0, %100 ], [ %120, %155 ], [ 0, %164 ]
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %221, label %173

173:                                              ; preds = %167
  %174 = tail call i64 @llvm.ctpop.i64(i64 %171) #11, !range !3
  %175 = icmp ugt i64 %174, 1
  br i1 %175, label %179, label %176

176:                                              ; preds = %173
  %177 = add i64 %171, 4294967295
  %178 = and i64 %177, %169
  br label %183

179:                                              ; preds = %173
  %180 = icmp ugt i64 %171, %169
  br i1 %180, label %183, label %181

181:                                              ; preds = %179
  %182 = urem i64 %169, %171
  br label %183

183:                                              ; preds = %181, %179, %176
  %184 = phi i64 [ %178, %176 ], [ %182, %181 ], [ %169, %179 ]
  %185 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %185, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %186, i64 %184
  %188 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.333"* %188, null
  br i1 %189, label %221, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %188, i64 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.333"* %192, null
  br i1 %193, label %221, label %194

194:                                              ; preds = %190
  %195 = add i64 %171, -1
  br label %196

196:                                              ; preds = %217, %194
  %197 = phi %"struct.std::__1::__hash_node_base.333"* [ %192, %194 ], [ %219, %217 ]
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %197, i64 1
  %199 = bitcast %"struct.std::__1::__hash_node_base.333"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = icmp eq i64 %200, %169
  br i1 %201, label %212, label %202

202:                                              ; preds = %196
  br i1 %175, label %205, label %203

203:                                              ; preds = %202
  %204 = and i64 %200, %195
  br label %209

205:                                              ; preds = %202
  %206 = icmp ult i64 %200, %171
  br i1 %206, label %209, label %207

207:                                              ; preds = %205
  %208 = urem i64 %200, %171
  br label %209

209:                                              ; preds = %207, %205, %203
  %210 = phi i64 [ %204, %203 ], [ %208, %207 ], [ %200, %205 ]
  %211 = icmp eq i64 %210, %184
  br i1 %211, label %217, label %221

212:                                              ; preds = %196
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %197, i64 2
  %214 = bitcast %"struct.std::__1::__hash_node_base.333"* %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, %168
  br i1 %216, label %222, label %217

217:                                              ; preds = %212, %209
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %197, i64 0, i32 0
  %219 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %218, align 8
  %220 = icmp eq %"struct.std::__1::__hash_node_base.333"* %219, null
  br i1 %220, label %221, label %196

221:                                              ; preds = %217, %209, %190, %183, %167
  tail call void @abort() #12
  unreachable

222:                                              ; preds = %212
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %197, i64 3
  %224 = bitcast %"struct.std::__1::__hash_node_base.333"* %223 to %"class.spvtools::opt::BasicBlock"**
  %225 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %224, align 8
  %226 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %225, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %227 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %226, align 8, !noalias !34
  %228 = ptrtoint %"class.spvtools::opt::Instruction"* %227 to i64
  %229 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %225) #11
  %230 = icmp eq %"class.spvtools::opt::Instruction"* %229, null
  br i1 %230, label %235, label %231

231:                                              ; preds = %222
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 0, i32 2
  %233 = bitcast %"class.spvtools::opt::Instruction"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  br label %235

235:                                              ; preds = %222, %231
  %236 = phi i64 [ %228, %222 ], [ %234, %231 ]
  %237 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %237) #11
  %238 = inttoptr i64 %236 to %"class.spvtools::opt::Instruction"*
  %239 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %1, i64 0, i32 0, i32 1, i32 0
  %240 = load i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %239, align 8
  %241 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %1, i64 0, i32 0, i32 0
  %242 = tail call i32 %240(%"union.std::__1::__function::__policy_storage"* %241, %"class.spvtools::opt::Instruction"* %238) #11
  %243 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %243, align 8
  %244 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %245 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %246 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %247 = bitcast i32** %245 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %246, %"struct.std::__1::aligned_storage<4, 4>::type"** %247, align 8
  %248 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %249 = bitcast %"class.std::__1::unique_ptr.0"* %248 to i64*
  store i64 0, i64* %249, align 8
  %250 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %246 to i32*
  store i64 1, i64* %244, align 8
  store i32 %242, i32* %250, align 8
  %251 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 3
  %252 = load i8, i8* %251, align 4, !range !2
  %253 = icmp eq i8 %252, 0
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 4
  %255 = load i8, i8* %254, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  %257 = select i1 %256, i64 1, i64 2
  %258 = xor i1 %256, true
  %259 = zext i1 %258 to i64
  %260 = select i1 %253, i64 %259, i64 %257
  %261 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 6, i32 0, i32 0
  %262 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %261, align 8
  %263 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %262, i64 %260, i32 1
  %264 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %263, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %243, align 8
  %265 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %266 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %265, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %265, align 8
  %267 = icmp eq %"class.std::__1::vector.3"* %266, null
  br i1 %267, label %279, label %268

268:                                              ; preds = %235
  %269 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %266, i64 0, i32 0, i32 0
  %270 = load i32*, i32** %269, align 8
  %271 = icmp eq i32* %270, null
  br i1 %271, label %277, label %272

272:                                              ; preds = %268
  %273 = ptrtoint i32* %270 to i64
  %274 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %266, i64 0, i32 0, i32 1
  %275 = bitcast i32** %274 to i64*
  store i64 %273, i64* %275, align 8
  %276 = bitcast i32* %270 to i8*
  call void @_ZdlPv(i8* %276) #10
  br label %277

277:                                              ; preds = %272, %268
  %278 = bitcast %"class.std::__1::vector.3"* %266 to i8*
  call void @_ZdlPv(i8* %278) #10
  br label %279

279:                                              ; preds = %235, %277
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %237) #11
  %280 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  %281 = load i8, i8* %251, align 4, !range !2
  %282 = icmp eq i8 %281, 0
  %283 = load i8, i8* %254, align 1, !range !2
  %284 = icmp eq i8 %283, 0
  %285 = select i1 %284, i32 1, i32 2
  %286 = xor i1 %284, true
  %287 = zext i1 %286 to i32
  %288 = select i1 %282, i32 %287, i32 %285
  %289 = add nuw nsw i32 %288, 1
  %290 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %227, i32 %289) #11
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %280, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %293 = load i64, i64* %292, align 8
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %343, label %295

295:                                              ; preds = %279
  %296 = call i64 @llvm.ctpop.i64(i64 %293) #11, !range !3
  %297 = icmp ugt i64 %296, 1
  br i1 %297, label %301, label %298

298:                                              ; preds = %295
  %299 = add i64 %293, 4294967295
  %300 = and i64 %299, %291
  br label %305

301:                                              ; preds = %295
  %302 = icmp ugt i64 %293, %291
  br i1 %302, label %305, label %303

303:                                              ; preds = %301
  %304 = urem i64 %291, %293
  br label %305

305:                                              ; preds = %303, %301, %298
  %306 = phi i64 [ %300, %298 ], [ %304, %303 ], [ %291, %301 ]
  %307 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %280, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %307, align 8
  %309 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %308, i64 %306
  %310 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %309, align 8
  %311 = icmp eq %"struct.std::__1::__hash_node_base.922"* %310, null
  br i1 %311, label %343, label %312

312:                                              ; preds = %305
  %313 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %310, i64 0, i32 0
  %314 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %313, align 8
  %315 = icmp eq %"struct.std::__1::__hash_node_base.922"* %314, null
  br i1 %315, label %343, label %316

316:                                              ; preds = %312
  %317 = add i64 %293, -1
  br label %318

318:                                              ; preds = %339, %316
  %319 = phi %"struct.std::__1::__hash_node_base.922"* [ %314, %316 ], [ %341, %339 ]
  %320 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %319, i64 1
  %321 = bitcast %"struct.std::__1::__hash_node_base.922"* %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = icmp eq i64 %322, %291
  br i1 %323, label %334, label %324

324:                                              ; preds = %318
  br i1 %297, label %327, label %325

325:                                              ; preds = %324
  %326 = and i64 %322, %317
  br label %331

327:                                              ; preds = %324
  %328 = icmp ult i64 %322, %293
  br i1 %328, label %331, label %329

329:                                              ; preds = %327
  %330 = urem i64 %322, %293
  br label %331

331:                                              ; preds = %329, %327, %325
  %332 = phi i64 [ %326, %325 ], [ %330, %329 ], [ %322, %327 ]
  %333 = icmp eq i64 %332, %306
  br i1 %333, label %339, label %343

334:                                              ; preds = %318
  %335 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %319, i64 2
  %336 = bitcast %"struct.std::__1::__hash_node_base.922"* %335 to i32*
  %337 = load i32, i32* %336, align 4
  %338 = icmp eq i32 %337, %290
  br i1 %338, label %343, label %339

339:                                              ; preds = %334, %331
  %340 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %319, i64 0, i32 0
  %341 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %340, align 8
  %342 = icmp eq %"struct.std::__1::__hash_node_base.922"* %341, null
  br i1 %342, label %343, label %318

343:                                              ; preds = %331, %334, %339, %279, %305, %312
  %344 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %305 ], [ null, %279 ], [ null, %312 ], [ %319, %334 ], [ null, %339 ], [ null, %331 ]
  %345 = icmp eq %"struct.std::__1::__hash_node_base.922"* %344, null
  %346 = select i1 %345, i32 2, i32 1
  %347 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %347) #11
  %348 = load i8, i8* %251, align 4, !range !2
  %349 = icmp eq i8 %348, 0
  %350 = load i8, i8* %254, align 1, !range !2
  %351 = icmp eq i8 %350, 0
  %352 = select i1 %351, i32 1, i32 2
  %353 = xor i1 %351, true
  %354 = zext i1 %353 to i32
  %355 = select i1 %349, i32 %354, i32 %352
  %356 = add nuw nsw i32 %355, %346
  %357 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %227, i32 %356) #11
  %358 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %358, align 8
  %359 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %360 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %361 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %362 = bitcast i32** %360 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %361, %"struct.std::__1::aligned_storage<4, 4>::type"** %362, align 8
  %363 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %364 = bitcast %"class.std::__1::unique_ptr.0"* %363 to i64*
  store i64 0, i64* %364, align 8
  %365 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %361 to i32*
  store i64 1, i64* %359, align 8
  store i32 %357, i32* %365, align 8
  %366 = load i8, i8* %251, align 4, !range !2
  %367 = icmp eq i8 %366, 0
  %368 = load i8, i8* %254, align 1, !range !2
  %369 = icmp eq i8 %368, 0
  %370 = select i1 %369, i64 1, i64 2
  %371 = xor i1 %369, true
  %372 = zext i1 %371 to i64
  %373 = select i1 %367, i64 %372, i64 %370
  %374 = add nuw nsw i64 %373, 1
  %375 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %261, align 8
  %376 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %375, i64 %374, i32 1
  %377 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %376, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %358, align 8
  %378 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %379 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %378, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %378, align 8
  %380 = icmp eq %"class.std::__1::vector.3"* %379, null
  br i1 %380, label %392, label %381

381:                                              ; preds = %343
  %382 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %379, i64 0, i32 0, i32 0
  %383 = load i32*, i32** %382, align 8
  %384 = icmp eq i32* %383, null
  br i1 %384, label %390, label %385

385:                                              ; preds = %381
  %386 = ptrtoint i32* %383 to i64
  %387 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %379, i64 0, i32 0, i32 1
  %388 = bitcast i32** %387 to i64*
  store i64 %386, i64* %388, align 8
  %389 = bitcast i32* %383 to i8*
  call void @_ZdlPv(i8* %389) #10
  br label %390

390:                                              ; preds = %385, %381
  %391 = bitcast %"class.std::__1::vector.3"* %379 to i8*
  call void @_ZdlPv(i8* %391) #10
  br label %392

392:                                              ; preds = %343, %390
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %347) #11
  %393 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #11
  %394 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  %395 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %394, i64 0, i32 3
  %396 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %395, align 8
  %397 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %396, i64 0, i32 1, i32 0, i32 0, i32 0
  %398 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %397, align 8
  %399 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %398, i64 0, i32 4
  %400 = load i8, i8* %399, align 1, !range !2
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %407, label %402

402:                                              ; preds = %392
  %403 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %398, i64 0, i32 3
  %404 = load i8, i8* %403, align 4, !range !2
  %405 = zext i8 %404 to i32
  %406 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %398, i32 %405) #11
  br label %407

407:                                              ; preds = %392, %402
  %408 = phi i32 [ %406, %402 ], [ 0, %392 ]
  %409 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %409, align 8
  %410 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %411 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %412 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %413 = bitcast i32** %411 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %412, %"struct.std::__1::aligned_storage<4, 4>::type"** %413, align 8
  %414 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %415 = bitcast %"class.std::__1::unique_ptr.0"* %414 to i64*
  store i64 0, i64* %415, align 8
  %416 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %412 to i32*
  store i64 1, i64* %410, align 8
  store i32 %408, i32* %416, align 8
  %417 = load i8, i8* %251, align 4, !range !2
  %418 = icmp eq i8 %417, 0
  %419 = load i8, i8* %254, align 1, !range !2
  %420 = icmp eq i8 %419, 0
  %421 = select i1 %420, i64 1, i64 2
  %422 = xor i1 %420, true
  %423 = zext i1 %422 to i64
  %424 = select i1 %418, i64 %423, i64 %421
  %425 = add nuw nsw i64 %424, 2
  %426 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %261, align 8
  %427 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %426, i64 %425, i32 1
  %428 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %427, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %409, align 8
  %429 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %430 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %429, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %429, align 8
  %431 = icmp eq %"class.std::__1::vector.3"* %430, null
  br i1 %431, label %443, label %432

432:                                              ; preds = %407
  %433 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %430, i64 0, i32 0, i32 0
  %434 = load i32*, i32** %433, align 8
  %435 = icmp eq i32* %434, null
  br i1 %435, label %441, label %436

436:                                              ; preds = %432
  %437 = ptrtoint i32* %434 to i64
  %438 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %430, i64 0, i32 0, i32 1
  %439 = bitcast i32** %438 to i64*
  store i64 %437, i64* %439, align 8
  %440 = bitcast i32* %434 to i8*
  call void @_ZdlPv(i8* %440) #10
  br label %441

441:                                              ; preds = %436, %432
  %442 = bitcast %"class.std::__1::vector.3"* %430 to i8*
  call void @_ZdlPv(i8* %442) #10
  br label %443

443:                                              ; preds = %407, %441
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #11
  %444 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %445 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %444, i64 0, i32 11
  %446 = load i32, i32* %445, align 8
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %473

449:                                              ; preds = %443
  %450 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %444, i64 0, i32 4, i32 0, i32 0, i32 0
  %451 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %450, align 8
  %452 = call i8* @_Znwm(i64 104) #10
  %453 = bitcast i8* %452 to %"class.spvtools::opt::analysis::DefUseManager"*
  %454 = getelementptr inbounds i8, i8* %452, i64 32
  %455 = bitcast i8* %454 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %455, align 4
  %456 = getelementptr inbounds i8, i8* %452, i64 48
  %457 = getelementptr inbounds i8, i8* %452, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %456, i8 0, i64 16, i1 false) #11
  %458 = bitcast i8* %457 to i8**
  store i8* %456, i8** %458, align 8
  %459 = getelementptr inbounds i8, i8* %452, i64 64
  %460 = getelementptr inbounds i8, i8* %452, i64 96
  %461 = bitcast i8* %460 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %459, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %461, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %453, %"class.spvtools::opt::Module"* %451) #11
  %462 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %444, i64 0, i32 6
  %463 = ptrtoint i8* %452 to i64
  %464 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %462, i64 0, i32 0, i32 0, i32 0
  %465 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %464, align 8
  %466 = bitcast %"class.std::__1::unique_ptr.62"* %462 to i64*
  store i64 %463, i64* %466, align 8
  %467 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %465, null
  br i1 %467, label %470, label %468

468:                                              ; preds = %449
  %469 = bitcast %"class.std::__1::unique_ptr.62"* %462 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %469, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %465) #11
  br label %470

470:                                              ; preds = %468, %449
  %471 = load i32, i32* %445, align 8
  %472 = or i32 %471, 1
  store i32 %472, i32* %445, align 8
  br label %473

473:                                              ; preds = %443, %470
  %474 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %444, i64 0, i32 6, i32 0, i32 0, i32 0
  %475 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %474, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %475, %"class.spvtools::opt::Instruction"* %227) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeeling"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1164", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::function.1049", align 8
  %7 = alloca %"class.std::__1::tuple.1164", align 8
  %8 = alloca %"class.std::__1::tuple.1167", align 1
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::function.1207", align 8
  %11 = alloca %"class.std::__1::unique_ptr.40", align 8
  %12 = alloca %"class.std::__1::tuple.1191", align 8
  %13 = alloca %"class.std::__1::tuple.1167", align 1
  %14 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %15 = alloca %"class.std::__1::tuple.1164", align 8
  %16 = alloca %"class.std::__1::tuple.1167", align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::__1::unique_ptr.40", align 8
  %20 = alloca %"class.std::__1::vector", align 8
  %21 = alloca %"class.std::__1::function.1007", align 8
  %22 = alloca %"class.std::__1::function.1015", align 8
  %23 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %25 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 11
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %57

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %31, align 8
  %33 = tail call i8* @_Znwm(i64 104) #10
  %34 = bitcast i8* %33 to %"class.spvtools::opt::analysis::DefUseManager"*
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = getelementptr inbounds i8, i8* %33, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #11
  %39 = bitcast i8* %38 to i8**
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %33, i64 64
  %41 = getelementptr inbounds i8, i8* %33, i64 96
  %42 = bitcast i8* %41 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %42, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %34, %"class.spvtools::opt::Module"* %32) #11
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 6
  %44 = ptrtoint i8* %33 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %43, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.62"* %43 to i64*
  store i64 %44, i64* %47, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %46, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %30
  %50 = bitcast %"class.std::__1::unique_ptr.62"* %43 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %50, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %46) #11
  br label %51

51:                                               ; preds = %49, %30
  %52 = load i32, i32* %26, align 8
  %53 = or i32 %52, 1
  store i32 %53, i32* %26, align 8
  %54 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %54, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  br label %57

57:                                               ; preds = %2, %51
  %58 = phi i32 [ %27, %2 ], [ %56, %51 ]
  %59 = phi %"class.spvtools::opt::IRContext"* [ %25, %2 ], [ %54, %51 ]
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 6, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %59, i64 0, i32 11
  %63 = and i32 %58, 16
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %81

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %66, align 8
  %68 = tail call i8* @_Znwm(i64 400) #10
  %69 = bitcast i8* %68 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %69, %"class.spvtools::opt::Module"* %67) #11
  %70 = ptrtoint i8* %68 to i64
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %59, i64 0, i32 15
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %72, align 8
  %74 = bitcast %"class.std::__1::unique_ptr.273"* %71 to i64*
  store i64 %70, i64* %74, align 8
  %75 = icmp eq %"class.spvtools::opt::CFG"* %73, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %65
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %73) #11
  %77 = bitcast %"class.spvtools::opt::CFG"* %73 to i8*
  tail call void @_ZdlPv(i8* %77) #10
  br label %78

78:                                               ; preds = %76, %65
  %79 = load i32, i32* %62, align 8
  %80 = or i32 %79, 16
  store i32 %80, i32* %62, align 8
  br label %81

81:                                               ; preds = %57, %78
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %59, i64 0, i32 15, i32 0, i32 0, i32 0
  %83 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %82, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %85, align 8
  %86 = tail call i8* @_Znwm(i64 112) #10
  %87 = bitcast i8* %86 to %"class.spvtools::opt::Instruction"*
  %88 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %88, i64 0, i32 4, i32 0, i32 0, i32 0
  %90 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %89, align 8
  %91 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %90) #11
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %88, i64 0, i32 5, i32 0, i32 2
  %95 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %95, i64 0, i32 2
  %97 = load i8, i8* %96, align 8, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %93
  %100 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %100, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %101 = getelementptr inbounds i8, i8* %100, i64 37
  store i8 0, i8* %101, align 1
  %102 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %88, i64 0, i32 5, i32 0, i32 1, i32 0
  %103 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %102, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %88, i64 0, i32 5, i32 0, i32 0
  tail call void %103(%"union.std::__1::__function::__policy_storage"* %104, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %100) #11
  tail call void @_ZdlPv(i8* nonnull %100) #10
  br label %105

105:                                              ; preds = %99, %93, %81
  %106 = bitcast %"class.std::__1::vector"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %87, %"class.spvtools::opt::IRContext"* %88, i32 248, i32 0, i32 %91, %"class.std::__1::vector"* nonnull dereferenceable(24) %20) #11
  %107 = ptrtoint i8* %86 to i64
  %108 = call i8* @_Znwm(i64 136) #10
  %109 = bitcast i8* %108 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %109, align 8
  %110 = getelementptr inbounds i8, i8* %108, i64 8
  %111 = bitcast i8* %110 to i64*
  store i64 %107, i64* %111, align 8
  %112 = getelementptr inbounds i8, i8* %108, i64 16
  %113 = bitcast i8* %112 to i32 (...)***
  %114 = getelementptr inbounds i8, i8* %108, i64 24
  %115 = bitcast i8* %114 to i32 (...)***
  %116 = getelementptr inbounds i8, i8* %108, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %117 = getelementptr inbounds i8, i8* %108, i64 56
  %118 = getelementptr inbounds i8, i8* %108, i64 72
  %119 = bitcast i8* %118 to i32*
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds i8, i8* %108, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 56, i1 false) #11
  %121 = bitcast i8* %116 to i8**
  store i8* %114, i8** %121, align 8
  %122 = getelementptr inbounds i8, i8* %108, i64 40
  %123 = bitcast i8* %122 to i8**
  store i8* %114, i8** %123, align 8
  %124 = getelementptr inbounds i8, i8* %108, i64 48
  store i8 1, i8* %124, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.40"* %19 to i8**
  store i8* %108, i8** %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %127 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %126, align 8
  %128 = icmp eq %"struct.spvtools::opt::Operand"* %127, null
  br i1 %128, label %159, label %129

129:                                              ; preds = %105
  %130 = bitcast %"struct.spvtools::opt::Operand"* %127 to i8*
  %131 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 1
  %132 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %131, align 8
  %133 = icmp eq %"struct.spvtools::opt::Operand"* %132, %127
  br i1 %133, label %157, label %134

134:                                              ; preds = %129, %152
  %135 = phi %"struct.spvtools::opt::Operand"* [ %136, %152 ], [ %132, %129 ]
  %136 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %135, i64 -1
  %137 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %135, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %138 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %135, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %139 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %138, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %138, align 8
  %140 = icmp eq %"class.std::__1::vector.3"* %139, null
  br i1 %140, label %152, label %141

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %139, i64 0, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = icmp eq i32* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %141
  %146 = ptrtoint i32* %143 to i64
  %147 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %139, i64 0, i32 0, i32 1
  %148 = bitcast i32** %147 to i64*
  store i64 %146, i64* %148, align 8
  %149 = bitcast i32* %143 to i8*
  call void @_ZdlPv(i8* %149) #10
  br label %150

150:                                              ; preds = %145, %141
  %151 = bitcast %"class.std::__1::vector.3"* %139 to i8*
  call void @_ZdlPv(i8* %151) #10
  br label %152

152:                                              ; preds = %150, %134
  %153 = icmp eq %"struct.spvtools::opt::Operand"* %136, %127
  br i1 %153, label %154, label %134

154:                                              ; preds = %152
  %155 = bitcast %"class.std::__1::vector"* %20 to i8**
  %156 = load i8*, i8** %155, align 8
  br label %157

157:                                              ; preds = %154, %129
  %158 = phi i8* [ %156, %154 ], [ %130, %129 ]
  store %"struct.spvtools::opt::Operand"* %127, %"struct.spvtools::opt::Operand"** %131, align 8
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %105, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  %160 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 1
  %161 = load %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::LoopDescriptor"** %160, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %163 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %162, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 4
  %165 = load i8, i8* %164, align 1, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %172, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 3
  %169 = load i8, i8* %168, align 4, !range !2
  %170 = zext i8 %169 to i32
  %171 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %163, i32 %170) #11
  br label %172

172:                                              ; preds = %167, %159
  %173 = phi i32 [ %171, %167 ], [ 0, %159 ]
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %277, label %178

178:                                              ; preds = %172
  %179 = call i64 @llvm.ctpop.i64(i64 %176) #11, !range !3
  %180 = icmp ugt i64 %179, 1
  br i1 %180, label %184, label %181

181:                                              ; preds = %178
  %182 = add i64 %176, 4294967295
  %183 = and i64 %182, %174
  br label %188

184:                                              ; preds = %178
  %185 = icmp ugt i64 %176, %174
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = urem i64 %174, %176
  br label %188

188:                                              ; preds = %186, %184, %181
  %189 = phi i64 [ %183, %181 ], [ %187, %186 ], [ %174, %184 ]
  %190 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %190, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %191, i64 %189
  %193 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.944"* %193, null
  br i1 %194, label %277, label %195

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %193, i64 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.944"* %197, null
  br i1 %198, label %277, label %199

199:                                              ; preds = %195
  %200 = add i64 %176, -1
  br label %201

201:                                              ; preds = %222, %199
  %202 = phi %"struct.std::__1::__hash_node_base.944"* [ %197, %199 ], [ %224, %222 ]
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %202, i64 1
  %204 = bitcast %"struct.std::__1::__hash_node_base.944"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, %174
  br i1 %206, label %217, label %207

207:                                              ; preds = %201
  br i1 %180, label %210, label %208

208:                                              ; preds = %207
  %209 = and i64 %205, %200
  br label %214

210:                                              ; preds = %207
  %211 = icmp ult i64 %205, %176
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = urem i64 %205, %176
  br label %214

214:                                              ; preds = %212, %210, %208
  %215 = phi i64 [ %209, %208 ], [ %213, %212 ], [ %205, %210 ]
  %216 = icmp eq i64 %215, %189
  br i1 %216, label %222, label %277

217:                                              ; preds = %201
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %202, i64 2
  %219 = bitcast %"struct.std::__1::__hash_node_base.944"* %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, %173
  br i1 %221, label %226, label %222

222:                                              ; preds = %217, %214
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %202, i64 0, i32 0
  %224 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %223, align 8
  %225 = icmp eq %"struct.std::__1::__hash_node_base.944"* %224, null
  br i1 %225, label %277, label %201

226:                                              ; preds = %217
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %202, i64 3
  %228 = bitcast %"struct.std::__1::__hash_node_base.944"* %227 to %"class.spvtools::opt::Loop"**
  %229 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %228, align 8
  %230 = icmp eq %"class.spvtools::opt::Loop"* %229, null
  br i1 %230, label %277, label %231

231:                                              ; preds = %226
  %232 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %232, i64 0, i32 1, i32 0, i32 0, i32 0
  %234 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %235 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %234, i64 0, i32 4
  %236 = load i8, i8* %235, align 1, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %243, label %238

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %234, i64 0, i32 3
  %240 = load i8, i8* %239, align 4, !range !2
  %241 = zext i8 %240 to i32
  %242 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %234, i32 %241) #11
  br label %243

243:                                              ; preds = %238, %231
  %244 = phi i32 [ %242, %238 ], [ 0, %231 ]
  %245 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %245) #11
  store i32 %244, i32* %18, align 4
  br label %246

246:                                              ; preds = %243, %246
  %247 = phi %"class.spvtools::opt::Loop"* [ %251, %246 ], [ %229, %243 ]
  %248 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %247, i64 0, i32 8, i32 0
  %249 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %248, i32* nonnull dereferenceable(4) %18, i32* nonnull dereferenceable(4) %18) #11
  %250 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %247, i64 0, i32 6
  %251 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %250, align 8
  %252 = icmp eq %"class.spvtools::opt::Loop"* %251, null
  br i1 %252, label %253, label %246

253:                                              ; preds = %246
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %245) #11
  %254 = load %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::LoopDescriptor"** %160, align 8
  %255 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %256 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %255, i64 0, i32 1, i32 0, i32 0, i32 0
  %257 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %256, align 8
  %258 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %257, i64 0, i32 4
  %259 = load i8, i8* %258, align 1, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %266, label %261

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %257, i64 0, i32 3
  %263 = load i8, i8* %262, align 4, !range !2
  %264 = zext i8 %263 to i32
  %265 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %257, i32 %264) #11
  br label %266

266:                                              ; preds = %253, %261
  %267 = phi i32 [ %265, %261 ], [ 0, %253 ]
  %268 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %268)
  store i32 %267, i32* %17, align 4
  %269 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %254, i64 0, i32 2, i32 0
  %270 = bitcast %"class.std::__1::tuple.1164"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #11
  %271 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %15, i64 0, i32 0, i32 0, i32 0
  store i32* %17, i32** %271, align 8
  %272 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %272) #11
  %273 = call { %"struct.std::__1::__hash_node_base.944"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.940"* %269, i32* nonnull dereferenceable(4) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1164"* nonnull dereferenceable(8) %15, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %16) #11
  %274 = extractvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } %273, 0
  %275 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %274, i64 3
  %276 = bitcast %"struct.std::__1::__hash_node_base.944"* %275 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %272) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #11
  store %"class.spvtools::opt::Loop"* %229, %"class.spvtools::opt::Loop"** %276, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %268)
  br label %277

277:                                              ; preds = %214, %222, %195, %172, %188, %226, %266
  %278 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %279 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %280 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %279, i64 0, i32 1, i32 0, i32 0, i32 0
  %281 = bitcast %"class.spvtools::opt::Instruction"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283)
  %284 = bitcast %"class.spvtools::opt::Instruction"** %14 to i64*
  store i64 %282, i64* %284, align 8
  %285 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %278, i64 0, i32 11
  %286 = load i32, i32* %285, align 8
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = inttoptr i64 %282 to %"class.spvtools::opt::Instruction"*
  br i1 %288, label %302, label %290

290:                                              ; preds = %277
  %291 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %278, i64 0, i32 9, i32 0
  %292 = bitcast %"class.std::__1::tuple.1191"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #11
  %293 = getelementptr inbounds %"class.std::__1::tuple.1191", %"class.std::__1::tuple.1191"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %14, %"class.spvtools::opt::Instruction"*** %293, align 8
  %294 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %294) #11
  %295 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %291, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1191"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %13) #11
  %296 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %295, 0
  %297 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %296, i64 3
  %298 = bitcast %"struct.std::__1::__hash_node_base.178"* %297 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %294) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #11
  store %"class.spvtools::opt::BasicBlock"* %279, %"class.spvtools::opt::BasicBlock"** %298, align 8
  %299 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %299, i64 0, i32 1, i32 0, i32 0, i32 0
  %301 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %300, align 8
  br label %302

302:                                              ; preds = %277, %290
  %303 = phi %"class.spvtools::opt::Instruction"* [ %289, %277 ], [ %301, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283)
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %61, %"class.spvtools::opt::Instruction"* %303) #11
  %304 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %162, align 8
  %305 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %304, i64 0, i32 4
  %306 = load i8, i8* %305, align 1, !range !2
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %313, label %308

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %304, i64 0, i32 3
  %310 = load i8, i8* %309, align 4, !range !2
  %311 = zext i8 %310 to i32
  %312 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %304, i32 %311) #11
  br label %313

313:                                              ; preds = %302, %308
  %314 = phi i32 [ %312, %308 ], [ 0, %302 ]
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %83, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %317 = load i64, i64* %316, align 8
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %367, label %319

319:                                              ; preds = %313
  %320 = call i64 @llvm.ctpop.i64(i64 %317) #11, !range !3
  %321 = icmp ugt i64 %320, 1
  br i1 %321, label %325, label %322

322:                                              ; preds = %319
  %323 = add i64 %317, 4294967295
  %324 = and i64 %323, %315
  br label %329

325:                                              ; preds = %319
  %326 = icmp ugt i64 %317, %315
  br i1 %326, label %329, label %327

327:                                              ; preds = %325
  %328 = urem i64 %315, %317
  br label %329

329:                                              ; preds = %327, %325, %322
  %330 = phi i64 [ %324, %322 ], [ %328, %327 ], [ %315, %325 ]
  %331 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %83, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %331, align 8
  %333 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %332, i64 %330
  %334 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %333, align 8
  %335 = icmp eq %"struct.std::__1::__hash_node_base.309"* %334, null
  br i1 %335, label %367, label %336

336:                                              ; preds = %329
  %337 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %334, i64 0, i32 0
  %338 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %337, align 8
  %339 = icmp eq %"struct.std::__1::__hash_node_base.309"* %338, null
  br i1 %339, label %367, label %340

340:                                              ; preds = %336
  %341 = add i64 %317, -1
  br label %342

342:                                              ; preds = %363, %340
  %343 = phi %"struct.std::__1::__hash_node_base.309"* [ %338, %340 ], [ %365, %363 ]
  %344 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %343, i64 1
  %345 = bitcast %"struct.std::__1::__hash_node_base.309"* %344 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = icmp eq i64 %346, %315
  br i1 %347, label %358, label %348

348:                                              ; preds = %342
  br i1 %321, label %351, label %349

349:                                              ; preds = %348
  %350 = and i64 %346, %341
  br label %355

351:                                              ; preds = %348
  %352 = icmp ult i64 %346, %317
  br i1 %352, label %355, label %353

353:                                              ; preds = %351
  %354 = urem i64 %346, %317
  br label %355

355:                                              ; preds = %353, %351, %349
  %356 = phi i64 [ %350, %349 ], [ %354, %353 ], [ %346, %351 ]
  %357 = icmp eq i64 %356, %330
  br i1 %357, label %363, label %367

358:                                              ; preds = %342
  %359 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %343, i64 2
  %360 = bitcast %"struct.std::__1::__hash_node_base.309"* %359 to i32*
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, %314
  br i1 %362, label %368, label %363

363:                                              ; preds = %358, %355
  %364 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %343, i64 0, i32 0
  %365 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %364, align 8
  %366 = icmp eq %"struct.std::__1::__hash_node_base.309"* %365, null
  br i1 %366, label %367, label %342

367:                                              ; preds = %363, %355, %336, %329, %313
  call void @abort() #12
  unreachable

368:                                              ; preds = %358
  %369 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %343, i64 3
  %370 = bitcast %"struct.std::__1::__hash_node_base.309"* %369 to i32**
  %371 = load i32*, i32** %370, align 8
  %372 = load i32, i32* %371, align 4
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %83, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %375 = load i64, i64* %374, align 8
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %425, label %377

377:                                              ; preds = %368
  %378 = call i64 @llvm.ctpop.i64(i64 %375) #11, !range !3
  %379 = icmp ugt i64 %378, 1
  br i1 %379, label %383, label %380

380:                                              ; preds = %377
  %381 = add i64 %375, 4294967295
  %382 = and i64 %381, %373
  br label %387

383:                                              ; preds = %377
  %384 = icmp ugt i64 %375, %373
  br i1 %384, label %387, label %385

385:                                              ; preds = %383
  %386 = urem i64 %373, %375
  br label %387

387:                                              ; preds = %385, %383, %380
  %388 = phi i64 [ %382, %380 ], [ %386, %385 ], [ %373, %383 ]
  %389 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %83, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %389, align 8
  %391 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %390, i64 %388
  %392 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %391, align 8
  %393 = icmp eq %"struct.std::__1::__hash_node_base.333"* %392, null
  br i1 %393, label %425, label %394

394:                                              ; preds = %387
  %395 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %392, i64 0, i32 0
  %396 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %395, align 8
  %397 = icmp eq %"struct.std::__1::__hash_node_base.333"* %396, null
  br i1 %397, label %425, label %398

398:                                              ; preds = %394
  %399 = add i64 %375, -1
  br label %400

400:                                              ; preds = %421, %398
  %401 = phi %"struct.std::__1::__hash_node_base.333"* [ %396, %398 ], [ %423, %421 ]
  %402 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %401, i64 1
  %403 = bitcast %"struct.std::__1::__hash_node_base.333"* %402 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = icmp eq i64 %404, %373
  br i1 %405, label %416, label %406

406:                                              ; preds = %400
  br i1 %379, label %409, label %407

407:                                              ; preds = %406
  %408 = and i64 %404, %399
  br label %413

409:                                              ; preds = %406
  %410 = icmp ult i64 %404, %375
  br i1 %410, label %413, label %411

411:                                              ; preds = %409
  %412 = urem i64 %404, %375
  br label %413

413:                                              ; preds = %411, %409, %407
  %414 = phi i64 [ %408, %407 ], [ %412, %411 ], [ %404, %409 ]
  %415 = icmp eq i64 %414, %388
  br i1 %415, label %421, label %425

416:                                              ; preds = %400
  %417 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %401, i64 2
  %418 = bitcast %"struct.std::__1::__hash_node_base.333"* %417 to i32*
  %419 = load i32, i32* %418, align 4
  %420 = icmp eq i32 %419, %372
  br i1 %420, label %426, label %421

421:                                              ; preds = %416, %413
  %422 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %401, i64 0, i32 0
  %423 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %422, align 8
  %424 = icmp eq %"struct.std::__1::__hash_node_base.333"* %423, null
  br i1 %424, label %425, label %400

425:                                              ; preds = %421, %413, %394, %387, %368
  call void @abort() #12
  unreachable

426:                                              ; preds = %416
  %427 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %401, i64 3
  %428 = bitcast %"struct.std::__1::__hash_node_base.333"* %427 to %"class.spvtools::opt::BasicBlock"**
  %429 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %428, align 8
  %430 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %429, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %431 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %430, align 8, !noalias !35
  %432 = bitcast %"class.std::__1::function.1007"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %432) #11
  %433 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %21, i64 0, i32 0, i32 1, i32 0
  %434 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %21, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS8_10BasicBlockEE3$_8S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %433, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS5_10BasicBlockEE3$_8FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %434, align 8
  %435 = bitcast %"class.std::__1::function.1007"* %21 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %435, align 8
  %436 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %21, i64 0, i32 0, i32 0, i32 1
  %437 = bitcast [8 x i8]* %436 to %"class.std::__1::unique_ptr.40"**
  store %"class.std::__1::unique_ptr.40"* %19, %"class.std::__1::unique_ptr.40"** %437, align 8
  %438 = bitcast %"class.std::__1::function.1207"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %438) #11
  %439 = ptrtoint %"class.std::__1::function.1007"* %21 to i64
  %440 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %10, i64 0, i32 0, i32 1, i32 0
  %441 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %10, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %440, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %441, align 8
  %442 = bitcast %"class.std::__1::function.1207"* %10 to i64*
  store i64 %439, i64* %442, align 8
  %443 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %431, i64 0, i32 6, i32 0, i32 0
  %444 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %443, align 8
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %431, i64 0, i32 6, i32 0, i32 1
  %446 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %445, align 8
  %447 = icmp eq %"struct.spvtools::opt::Operand"* %444, %446
  br i1 %447, label %470, label %448

448:                                              ; preds = %426
  %449 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %10, i64 0, i32 0, i32 0
  br label %450

450:                                              ; preds = %465, %448
  %451 = phi %"struct.spvtools::opt::Operand"* [ %444, %448 ], [ %466, %465 ]
  %452 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %451, i64 0, i32 0
  %453 = load i32, i32* %452, align 8
  %454 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %453) #11
  br i1 %454, label %455, label %465

455:                                              ; preds = %450
  %456 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %451, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %457 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %456, align 8
  %458 = icmp eq %"class.std::__1::vector.3"* %457, null
  %459 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %457, i64 0, i32 0, i32 0
  %460 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %451, i64 0, i32 1, i32 2
  %461 = select i1 %458, i32** %460, i32** %459
  %462 = load i32*, i32** %461, align 8
  %463 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %440, align 8
  %464 = call zeroext i1 %463(%"union.std::__1::__function::__policy_storage"* nonnull %449, i32* %462) #11
  br i1 %464, label %465, label %468

465:                                              ; preds = %455, %450
  %466 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %451, i64 1
  %467 = icmp eq %"struct.spvtools::opt::Operand"* %466, %446
  br i1 %467, label %468, label %450

468:                                              ; preds = %465, %455
  %469 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %441, align 8
  br label %470

470:                                              ; preds = %468, %426
  %471 = phi %"struct.std::__1::__function::__policy"* [ %469, %468 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %426 ]
  %472 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %471, i64 0, i32 1
  %473 = load void (i8*)*, void (i8*)** %472, align 8
  %474 = icmp eq void (i8*)* %473, null
  br i1 %474, label %478, label %475

475:                                              ; preds = %470
  %476 = getelementptr inbounds %"class.std::__1::function.1207", %"class.std::__1::function.1207"* %10, i64 0, i32 0, i32 0, i32 0
  %477 = load i8*, i8** %476, align 8
  call void %473(i8* %477) #11
  br label %478

478:                                              ; preds = %470, %475
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %438) #11
  %479 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %434, align 8
  %480 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %479, i64 0, i32 1
  %481 = load void (i8*)*, void (i8*)** %480, align 8
  %482 = icmp eq void (i8*)* %481, null
  br i1 %482, label %486, label %483

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %21, i64 0, i32 0, i32 0, i32 0
  %485 = load i8*, i8** %484, align 8
  call void %481(i8* %485) #11
  br label %486

486:                                              ; preds = %478, %483
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %432) #11
  %487 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %429, i64 0, i32 1, i32 0, i32 0, i32 0
  %488 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %487, align 8
  %489 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %488, i64 0, i32 4
  %490 = load i8, i8* %489, align 1, !range !2
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %497, label %492

492:                                              ; preds = %486
  %493 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %488, i64 0, i32 3
  %494 = load i8, i8* %493, align 4, !range !2
  %495 = zext i8 %494 to i32
  %496 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %488, i32 %495) #11
  br label %497

497:                                              ; preds = %486, %492
  %498 = phi i32 [ %496, %492 ], [ 0, %486 ]
  %499 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %162, align 8
  %500 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %499, i64 0, i32 4
  %501 = load i8, i8* %500, align 1, !range !2
  %502 = icmp eq i8 %501, 0
  br i1 %502, label %508, label %503

503:                                              ; preds = %497
  %504 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %499, i64 0, i32 3
  %505 = load i8, i8* %504, align 4, !range !2
  %506 = zext i8 %505 to i32
  %507 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %499, i32 %506) #11
  br label %508

508:                                              ; preds = %497, %503
  %509 = phi i32 [ %507, %503 ], [ 0, %497 ]
  %510 = zext i32 %509 to i64
  %511 = load i64, i64* %316, align 8
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %590, label %513

513:                                              ; preds = %508
  %514 = call i64 @llvm.ctpop.i64(i64 %511) #11, !range !3
  %515 = icmp ugt i64 %514, 1
  br i1 %515, label %519, label %516

516:                                              ; preds = %513
  %517 = add i64 %511, 4294967295
  %518 = and i64 %517, %510
  br label %523

519:                                              ; preds = %513
  %520 = icmp ugt i64 %511, %510
  br i1 %520, label %523, label %521

521:                                              ; preds = %519
  %522 = urem i64 %510, %511
  br label %523

523:                                              ; preds = %521, %519, %516
  %524 = phi i64 [ %518, %516 ], [ %522, %521 ], [ %510, %519 ]
  %525 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %331, align 8
  %526 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %525, i64 %524
  %527 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %526, align 8
  %528 = icmp eq %"struct.std::__1::__hash_node_base.309"* %527, null
  br i1 %528, label %590, label %529

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %527, i64 0, i32 0
  %531 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %530, align 8
  %532 = icmp eq %"struct.std::__1::__hash_node_base.309"* %531, null
  br i1 %532, label %590, label %533

533:                                              ; preds = %529
  %534 = add i64 %511, -1
  br label %535

535:                                              ; preds = %556, %533
  %536 = phi %"struct.std::__1::__hash_node_base.309"* [ %531, %533 ], [ %558, %556 ]
  %537 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %536, i64 1
  %538 = bitcast %"struct.std::__1::__hash_node_base.309"* %537 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = icmp eq i64 %539, %510
  br i1 %540, label %551, label %541

541:                                              ; preds = %535
  br i1 %515, label %544, label %542

542:                                              ; preds = %541
  %543 = and i64 %539, %534
  br label %548

544:                                              ; preds = %541
  %545 = icmp ult i64 %539, %511
  br i1 %545, label %548, label %546

546:                                              ; preds = %544
  %547 = urem i64 %539, %511
  br label %548

548:                                              ; preds = %546, %544, %542
  %549 = phi i64 [ %543, %542 ], [ %547, %546 ], [ %539, %544 ]
  %550 = icmp eq i64 %549, %524
  br i1 %550, label %556, label %590

551:                                              ; preds = %535
  %552 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %536, i64 2
  %553 = bitcast %"struct.std::__1::__hash_node_base.309"* %552 to i32*
  %554 = load i32, i32* %553, align 4
  %555 = icmp eq i32 %554, %509
  br i1 %555, label %560, label %556

556:                                              ; preds = %551, %548
  %557 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %536, i64 0, i32 0
  %558 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %557, align 8
  %559 = icmp eq %"struct.std::__1::__hash_node_base.309"* %558, null
  br i1 %559, label %590, label %535

560:                                              ; preds = %551
  %561 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %536, i64 3
  %562 = bitcast %"struct.std::__1::__hash_node_base.309"* %561 to i32**
  %563 = load i32*, i32** %562, align 8
  %564 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %536, i64 4
  %565 = bitcast %"struct.std::__1::__hash_node_base.309"* %564 to i32**
  %566 = load i32*, i32** %565, align 8
  %567 = icmp eq i32* %563, %566
  %568 = ptrtoint i32* %566 to i64
  br i1 %567, label %576, label %569

569:                                              ; preds = %560, %573
  %570 = phi i32* [ %574, %573 ], [ %563, %560 ]
  %571 = load i32, i32* %570, align 4
  %572 = icmp eq i32 %571, %498
  br i1 %572, label %576, label %573

573:                                              ; preds = %569
  %574 = getelementptr inbounds i32, i32* %570, i64 1
  %575 = icmp eq i32* %574, %566
  br i1 %575, label %590, label %569

576:                                              ; preds = %569, %560
  %577 = phi i32* [ %563, %560 ], [ %570, %569 ]
  %578 = icmp eq i32* %577, %566
  br i1 %578, label %590, label %579

579:                                              ; preds = %576
  %580 = getelementptr inbounds i32, i32* %577, i64 1
  %581 = ptrtoint i32* %580 to i64
  %582 = sub i64 %568, %581
  %583 = ashr exact i64 %582, 2
  %584 = icmp eq i64 %582, 0
  br i1 %584, label %588, label %585

585:                                              ; preds = %579
  %586 = bitcast i32* %577 to i8*
  %587 = bitcast i32* %580 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %586, i8* align 4 %587, i64 %582, i1 false) #11
  br label %588

588:                                              ; preds = %585, %579
  %589 = getelementptr inbounds i32, i32* %577, i64 %583
  store i32* %589, i32** %565, align 8
  br label %590

590:                                              ; preds = %548, %556, %573, %508, %523, %529, %576, %588
  %591 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %487, align 8
  %592 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %591, i64 0, i32 4
  %593 = load i8, i8* %592, align 1, !range !2
  %594 = icmp eq i8 %593, 0
  br i1 %594, label %600, label %595

595:                                              ; preds = %590
  %596 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %591, i64 0, i32 3
  %597 = load i8, i8* %596, align 4, !range !2
  %598 = zext i8 %597 to i32
  %599 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %591, i32 %598) #11
  br label %600

600:                                              ; preds = %590, %595
  %601 = phi i32 [ %599, %595 ], [ 0, %590 ]
  %602 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %603 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %602, i64 0, i32 1, i32 0, i32 0, i32 0
  %604 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %603, align 8
  %605 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %604, i64 0, i32 4
  %606 = load i8, i8* %605, align 1, !range !2
  %607 = icmp eq i8 %606, 0
  br i1 %607, label %613, label %608

608:                                              ; preds = %600
  %609 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %604, i64 0, i32 3
  %610 = load i8, i8* %609, align 4, !range !2
  %611 = zext i8 %610 to i32
  %612 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %604, i32 %611) #11
  br label %613

613:                                              ; preds = %600, %608
  %614 = phi i32 [ %612, %608 ], [ 0, %600 ]
  %615 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %615)
  store i32 %614, i32* %9, align 4
  %616 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %83, i64 0, i32 4, i32 0
  %617 = bitcast %"class.std::__1::tuple.1164"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %617) #11
  %618 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %618, align 8
  %619 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %619) #11
  %620 = call { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"* %616, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1164"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %8) #11
  %621 = extractvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %620, 0
  %622 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %621, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %619) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %617) #11
  %623 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %621, i64 4
  %624 = bitcast %"struct.std::__1::__hash_node_base.309"* %623 to i32**
  %625 = load i32*, i32** %624, align 8
  %626 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %621, i64 5
  %627 = bitcast %"struct.std::__1::__hash_node_base.309"* %626 to i32**
  %628 = load i32*, i32** %627, align 8
  %629 = icmp eq i32* %625, %628
  %630 = ptrtoint i32* %628 to i64
  br i1 %629, label %635, label %631

631:                                              ; preds = %613
  store i32 %601, i32* %625, align 4
  %632 = getelementptr inbounds i32, i32* %625, i64 1
  %633 = ptrtoint i32* %632 to i64
  %634 = bitcast %"struct.std::__1::__hash_node_base.309"* %623 to i64*
  store i64 %633, i64* %634, align 8
  br label %691

635:                                              ; preds = %613
  %636 = ptrtoint i32* %625 to i64
  %637 = bitcast %"struct.std::__1::__hash_node_base.309"* %623 to i64*
  %638 = bitcast %"struct.std::__1::__hash_node_base.309"* %622 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = sub i64 %636, %639
  %641 = ashr exact i64 %640, 2
  %642 = add nsw i64 %641, 1
  %643 = icmp ugt i64 %642, 4611686018427387903
  br i1 %643, label %644, label %646

644:                                              ; preds = %635
  %645 = bitcast %"struct.std::__1::__hash_node_base.309"* %622 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %645) #12
  unreachable

646:                                              ; preds = %635
  %647 = bitcast %"struct.std::__1::__hash_node_base.309"* %626 to i64*
  %648 = sub i64 %630, %639
  %649 = ashr exact i64 %648, 2
  %650 = icmp ult i64 %649, 2305843009213693951
  br i1 %650, label %651, label %659

651:                                              ; preds = %646
  %652 = ashr exact i64 %648, 1
  %653 = icmp ult i64 %652, %642
  %654 = select i1 %653, i64 %642, i64 %652
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %664, label %656

656:                                              ; preds = %651
  %657 = icmp ugt i64 %654, 4611686018427387903
  br i1 %657, label %658, label %659

658:                                              ; preds = %656
  call void @abort() #12
  unreachable

659:                                              ; preds = %656, %646
  %660 = phi i64 [ %654, %656 ], [ 4611686018427387903, %646 ]
  %661 = shl i64 %660, 2
  %662 = call i8* @_Znwm(i64 %661) #10
  %663 = bitcast i8* %662 to i32*
  br label %664

664:                                              ; preds = %659, %651
  %665 = phi i64 [ %660, %659 ], [ 0, %651 ]
  %666 = phi i32* [ %663, %659 ], [ null, %651 ]
  %667 = getelementptr inbounds i32, i32* %666, i64 %641
  %668 = getelementptr inbounds i32, i32* %666, i64 %665
  %669 = ptrtoint i32* %668 to i64
  store i32 %601, i32* %667, align 4
  %670 = getelementptr inbounds i32, i32* %667, i64 1
  %671 = ptrtoint i32* %670 to i64
  %672 = bitcast %"struct.std::__1::__hash_node_base.309"* %622 to i32**
  %673 = load i32*, i32** %672, align 8
  %674 = load i64, i64* %637, align 8
  %675 = ptrtoint i32* %673 to i64
  %676 = sub i64 %674, %675
  %677 = ashr exact i64 %676, 2
  %678 = sub nsw i64 0, %677
  %679 = getelementptr inbounds i32, i32* %667, i64 %678
  %680 = ptrtoint i32* %679 to i64
  %681 = icmp sgt i64 %676, 0
  br i1 %681, label %682, label %686

682:                                              ; preds = %664
  %683 = bitcast i32* %679 to i8*
  %684 = bitcast i32* %673 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %683, i8* align 4 %684, i64 %676, i1 false) #11
  %685 = load i32*, i32** %672, align 8
  br label %686

686:                                              ; preds = %682, %664
  %687 = phi i32* [ %673, %664 ], [ %685, %682 ]
  store i64 %680, i64* %638, align 8
  store i64 %671, i64* %637, align 8
  store i64 %669, i64* %647, align 8
  %688 = icmp eq i32* %687, null
  br i1 %688, label %691, label %689

689:                                              ; preds = %686
  %690 = bitcast i32* %687 to i8*
  call void @_ZdlPv(i8* %690) #10
  br label %691

691:                                              ; preds = %631, %686, %689
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %615)
  %692 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %430, align 8, !noalias !38
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %61, %"class.spvtools::opt::Instruction"* %692) #11
  %693 = bitcast %"class.std::__1::function.1015"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %693) #11
  %694 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %22, i64 0, i32 0, i32 1, i32 0
  %695 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %22, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling17CreateBlockBeforeEPNS3_10BasicBlockEE3$_9S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %694, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS5_10BasicBlockEE3$_9FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %695, align 8
  %696 = bitcast %"class.std::__1::function.1015"* %22 to %"class.std::__1::unique_ptr.40"**
  store %"class.std::__1::unique_ptr.40"* %19, %"class.std::__1::unique_ptr.40"** %696, align 8
  %697 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %22, i64 0, i32 0, i32 0, i32 1
  %698 = bitcast [8 x i8]* %697 to %"class.spvtools::opt::analysis::DefUseManager"**
  store %"class.spvtools::opt::analysis::DefUseManager"* %61, %"class.spvtools::opt::analysis::DefUseManager"** %698, align 8
  %699 = bitcast %"class.std::__1::function.1049"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %699) #11
  %700 = ptrtoint %"class.std::__1::function.1015"* %22 to i64
  %701 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 1, i32 0
  %702 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %701, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %702, align 8
  %703 = bitcast %"class.std::__1::function.1049"* %6 to i64*
  store i64 %700, i64* %703, align 8
  %704 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %705 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %704, align 8
  %706 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %705, i64 0, i32 0, i32 3
  %707 = load i8, i8* %706, align 8, !range !2
  %708 = icmp ne i8 %707, 0
  %709 = icmp eq %"class.spvtools::opt::Instruction"* %705, null
  %710 = or i1 %709, %708
  br i1 %710, label %731, label %711

711:                                              ; preds = %691
  %712 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 0
  br label %713

713:                                              ; preds = %722, %711
  %714 = phi %"class.spvtools::opt::Instruction"* [ %726, %722 ], [ %705, %711 ]
  %715 = icmp eq %"class.spvtools::opt::Instruction"* %714, null
  br i1 %715, label %729, label %716

716:                                              ; preds = %713
  %717 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %714, i64 0, i32 0, i32 1
  %718 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %717, align 8
  %719 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %714, i64 0, i32 2
  %720 = load i32, i32* %719, align 8
  %721 = icmp eq i32 %720, 245
  br i1 %721, label %722, label %729

722:                                              ; preds = %716
  %723 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %718, i64 0, i32 0, i32 3
  %724 = load i8, i8* %723, align 8, !range !2
  %725 = icmp eq i8 %724, 0
  %726 = select i1 %725, %"class.spvtools::opt::Instruction"* %718, %"class.spvtools::opt::Instruction"* null
  %727 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %701, align 8
  %728 = call zeroext i1 %727(%"union.std::__1::__function::__policy_storage"* nonnull %712, %"class.spvtools::opt::Instruction"* nonnull %714) #11
  br i1 %728, label %713, label %729

729:                                              ; preds = %713, %716, %722
  %730 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %702, align 8
  br label %731

731:                                              ; preds = %729, %691
  %732 = phi %"struct.std::__1::__function::__policy"* [ %730, %729 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %691 ]
  %733 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %732, i64 0, i32 1
  %734 = load void (i8*)*, void (i8*)** %733, align 8
  %735 = icmp eq void (i8*)* %734, null
  br i1 %735, label %739, label %736

736:                                              ; preds = %731
  %737 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %6, i64 0, i32 0, i32 0, i32 0
  %738 = load i8*, i8** %737, align 8
  call void %734(i8* %738) #11
  br label %739

739:                                              ; preds = %731, %736
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %699) #11
  %740 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %695, align 8
  %741 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %740, i64 0, i32 1
  %742 = load void (i8*)*, void (i8*)** %741, align 8
  %743 = icmp eq void (i8*)* %742, null
  br i1 %743, label %747, label %744

744:                                              ; preds = %739
  %745 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %22, i64 0, i32 0, i32 0, i32 0
  %746 = load i8*, i8** %745, align 8
  call void %742(i8* %746) #11
  br label %747

747:                                              ; preds = %739, %744
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %693) #11
  %748 = bitcast %"class.spvtools::opt::InstructionBuilder"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %748) #11
  %749 = bitcast %"class.spvtools::opt::LoopPeeling"* %0 to i64*
  %750 = load i64, i64* %749, align 8
  %751 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %752 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %751, i64 0, i32 2, i32 0, i32 1
  %753 = ptrtoint %"class.spvtools::opt::Instruction"* %752 to i64
  %754 = bitcast %"class.spvtools::opt::InstructionBuilder"* %23 to i64*
  store i64 %750, i64* %754, align 8
  %755 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %23, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %751, %"class.spvtools::opt::BasicBlock"** %755, align 8
  %756 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %23, i64 0, i32 2
  %757 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %756 to i64*
  store i64 %753, i64* %757, align 8
  %758 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %23, i64 0, i32 3
  store i32 3, i32* %758, align 8
  %759 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %162, align 8
  %760 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %759, i64 0, i32 4
  %761 = load i8, i8* %760, align 1, !range !2
  %762 = icmp eq i8 %761, 0
  br i1 %762, label %768, label %763

763:                                              ; preds = %747
  %764 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %759, i64 0, i32 3
  %765 = load i8, i8* %764, align 4, !range !2
  %766 = zext i8 %765 to i32
  %767 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %759, i32 %766) #11
  br label %768

768:                                              ; preds = %747, %763
  %769 = phi i32 [ %767, %763 ], [ 0, %747 ]
  %770 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %23, i32 %769)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %748) #11
  %771 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %772 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %772) #11
  store i32 -1431655766, i32* %5, align 4
  %773 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %771, i64 0, i32 1, i32 0, i32 0, i32 0
  %774 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %773, align 8
  %775 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %774, i64 0, i32 4
  %776 = load i8, i8* %775, align 1, !range !2
  %777 = icmp eq i8 %776, 0
  br i1 %777, label %783, label %778

778:                                              ; preds = %768
  %779 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %774, i64 0, i32 3
  %780 = load i8, i8* %779, align 4, !range !2
  %781 = zext i8 %780 to i32
  %782 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %774, i32 %781) #11
  br label %783

783:                                              ; preds = %768, %778
  %784 = phi i32 [ %782, %778 ], [ 0, %768 ]
  store i32 %784, i32* %5, align 4
  %785 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %83, i64 0, i32 5, i32 0
  %786 = bitcast %"class.std::__1::tuple.1164"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %786) #11
  %787 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %787, align 8
  %788 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %788) #11
  %789 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %785, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1164"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %790 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %789, 0
  %791 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %790, i64 3
  %792 = bitcast %"struct.std::__1::__hash_node_base.333"* %791 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %788) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %786) #11
  store %"class.spvtools::opt::BasicBlock"* %771, %"class.spvtools::opt::BasicBlock"** %792, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %83, %"class.spvtools::opt::BasicBlock"* %771) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %772) #11
  %793 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 3
  %794 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %793, align 8
  %795 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %162, align 8
  %796 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %795, i64 0, i32 4
  %797 = load i8, i8* %796, align 1, !range !2
  %798 = icmp eq i8 %797, 0
  br i1 %798, label %804, label %799

799:                                              ; preds = %783
  %800 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %795, i64 0, i32 3
  %801 = load i8, i8* %800, align 4, !range !2
  %802 = zext i8 %801 to i32
  %803 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %795, i32 %802) #11
  br label %804

804:                                              ; preds = %783, %799
  %805 = phi i32 [ %803, %799 ], [ 0, %783 ]
  %806 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %794, i64 0, i32 3
  %807 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %806, i64 0, i32 0, i32 0
  %808 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %807, align 8
  %809 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %794, i64 0, i32 3, i32 0, i32 1
  %810 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %809, align 8
  %811 = icmp eq %"class.std::__1::unique_ptr.40"* %808, %810
  br i1 %811, label %832, label %812

812:                                              ; preds = %804, %829
  %813 = phi %"class.std::__1::unique_ptr.40"* [ %830, %829 ], [ %808, %804 ]
  %814 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %813, i64 0, i32 0, i32 0, i32 0
  %815 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %814, align 8
  %816 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %815, i64 0, i32 1, i32 0, i32 0, i32 0
  %817 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %816, align 8
  %818 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %817, i64 0, i32 4
  %819 = load i8, i8* %818, align 1, !range !2
  %820 = icmp eq i8 %819, 0
  br i1 %820, label %826, label %821

821:                                              ; preds = %812
  %822 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %817, i64 0, i32 3
  %823 = load i8, i8* %822, align 4, !range !2
  %824 = zext i8 %823 to i32
  %825 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %817, i32 %824) #11
  br label %826

826:                                              ; preds = %821, %812
  %827 = phi i32 [ %825, %821 ], [ 0, %812 ]
  %828 = icmp eq i32 %827, %805
  br i1 %828, label %832, label %829

829:                                              ; preds = %826
  %830 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %813, i64 1
  %831 = icmp eq %"class.std::__1::unique_ptr.40"* %830, %810
  br i1 %831, label %832, label %812

832:                                              ; preds = %826, %829, %804
  %833 = phi %"class.std::__1::unique_ptr.40"* [ %808, %804 ], [ %810, %829 ], [ %813, %826 ]
  %834 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %835 = bitcast %"class.spvtools::opt::Function"** %793 to i64*
  %836 = load i64, i64* %835, align 8
  %837 = ptrtoint %"class.spvtools::opt::BasicBlock"* %834 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %838 = bitcast %"class.spvtools::opt::BasicBlock"* %834 to i64*
  store i64 %836, i64* %838, align 8
  %839 = bitcast %"class.std::__1::unique_ptr.40"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %839) #11
  %840 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 0, i32 0, i32 0, i32 0
  %841 = bitcast %"class.std::__1::unique_ptr.40"* %11 to i64*
  store i64 %837, i64* %841, align 8
  %842 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %806, %"class.std::__1::unique_ptr.40"* %833, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %11) #11
  %843 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %840, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %840, align 8
  %844 = icmp eq %"class.spvtools::opt::BasicBlock"* %843, null
  br i1 %844, label %847, label %845

845:                                              ; preds = %832
  %846 = bitcast %"class.std::__1::unique_ptr.40"* %11 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %846, %"class.spvtools::opt::BasicBlock"* nonnull %843) #11
  br label %847

847:                                              ; preds = %832, %845
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %839) #11
  %848 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %85, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %849 = icmp eq %"class.spvtools::opt::BasicBlock"* %848, null
  br i1 %849, label %852, label %850

850:                                              ; preds = %847
  %851 = bitcast %"class.std::__1::unique_ptr.40"* %19 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %851, %"class.spvtools::opt::BasicBlock"* nonnull %848) #11
  br label %852

852:                                              ; preds = %847, %850
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  ret %"class.spvtools::opt::BasicBlock"* %834
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 112) #10
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  %14 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %33 = call i8* @_Znwm(i64 48) #10
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i8* %33 to i32*
  %40 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to %"class.spvtools::utils::SmallVector"*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = getelementptr inbounds i8, i8* %33, i64 32
  %50 = bitcast i8* %48 to i8**
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #11
  %54 = getelementptr inbounds i8, i8* %33, i64 48
  %55 = bitcast i8* %9 to %"class.spvtools::opt::Instruction"*
  %56 = bitcast %"struct.spvtools::opt::Operand"** %34 to i64*
  %57 = ptrtoint i8* %54 to i64
  store i64 %57, i64* %56, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %55, %"class.spvtools::opt::IRContext"* %11, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %58 = ptrtoint i8* %9 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %2
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #10
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #10
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %35, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %34, align 8
  call void @_ZdlPv(i8* %90) #10
  br label %91

91:                                               ; preds = %2, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #10
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %123 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %8, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.spvtools::opt::Instruction"* %124 to void (%"class.spvtools::opt::Instruction"*)***
  %128 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, i64 1
  %130 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %129, align 8
  call void %130(%"class.spvtools::opt::Instruction"* nonnull %124) #11
  br label %131

131:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %"class.spvtools::opt::Instruction"* %123
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt11LoopPeeling11ProtectLoopEPNS0_4LoopEPNS0_11InstructionEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeeling"* nocapture readonly, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %6 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* %1) #11
  tail call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::BasicBlock"* null) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %6, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8, !noalias !41
  %11 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %8, %"class.spvtools::opt::Instruction"* %10) #11
  %12 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 3
  %15 = bitcast %"class.spvtools::opt::LoopPeeling"* %0 to i64*
  %16 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = load i64, i64* %15, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %6, i64 0, i32 2, i32 0, i32 1
  %19 = ptrtoint %"class.spvtools::opt::Instruction"* %18 to i64
  %20 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i64*
  store i64 %17, i64* %20, align 8
  store %"class.spvtools::opt::BasicBlock"* %6, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %21 to i64*
  store i64 %19, i64* %22, align 8
  store i32 3, i32* %14, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = zext i8 %28 to i32
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %29) #11
  br label %31

31:                                               ; preds = %4, %26
  %32 = phi i32 [ %30, %26 ], [ 0, %4 ]
  %33 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %34 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %36, i32 %43) #11
  br label %45

45:                                               ; preds = %31, %40
  %46 = phi i32 [ %44, %40 ], [ 0, %31 ]
  %47 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %48, i32 %55) #11
  %57 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %47, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 4
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 3
  %63 = load i8, i8* %62, align 4, !range !2
  %64 = zext i8 %63 to i32
  %65 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %57, i32 %64) #11
  br label %66

66:                                               ; preds = %45, %52, %61
  %67 = phi i32 [ %56, %61 ], [ %56, %52 ], [ 0, %45 ]
  %68 = phi i32 [ %65, %61 ], [ 0, %52 ], [ 0, %45 ]
  %69 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %32, i32 %46, i32 %67, i32 %68, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  ret %"class.spvtools::opt::BasicBlock"* %6
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = icmp eq i32 %4, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %4, i32 %5)
  br label %16

16:                                               ; preds = %6, %14
  %17 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %18, align 8
  %19 = tail call i8* @_Znwm(i64 112) #10
  %20 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %23) #11
  %24 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %28 to i32*
  store i64 1, i64* %26, align 8
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %34, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %39 = bitcast i32** %37 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %38, %"struct.std::__1::aligned_storage<4, 4>::type"** %39, align 8
  %40 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %41 = bitcast %"class.std::__1::unique_ptr.0"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %34, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %43 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %48 = bitcast i32** %46 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %47, %"struct.std::__1::aligned_storage<4, 4>::type"** %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %50 = bitcast %"class.std::__1::unique_ptr.0"* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %47 to i32*
  store i64 1, i64* %45, align 8
  store i32 %2, i32* %51, align 8
  %52 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %53, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %57 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  %59 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.0"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %53, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %62 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %67 = bitcast i32** %65 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %66, %"struct.std::__1::aligned_storage<4, 4>::type"** %67, align 8
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %69 = bitcast %"class.std::__1::unique_ptr.0"* %68 to i64*
  store i64 0, i64* %69, align 8
  %70 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %66 to i32*
  store i64 1, i64* %64, align 8
  store i32 %3, i32* %70, align 8
  %71 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  store i32 1, i32* %71, align 8
  %72 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %72, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 2
  %76 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 3, i64 0
  %77 = bitcast i32** %75 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %76, %"struct.std::__1::aligned_storage<4, 4>::type"** %77, align 8
  %78 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4
  %79 = bitcast %"class.std::__1::unique_ptr.0"* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %72, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #11
  %81 = call i8* @_Znwm(i64 144) #10
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %81, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %81, i64 144
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.spvtools::opt::Operand"** %86 to i8**
  store i8* %85, i8** %87, align 8
  %88 = bitcast i8* %81 to i32*
  %89 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 8
  %92 = bitcast i8* %91 to %"class.spvtools::utils::SmallVector"*
  %93 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %94 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %81, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %81, i64 24
  %98 = getelementptr inbounds i8, i8* %81, i64 32
  %99 = bitcast i8* %97 to i8**
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %81, i64 40
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %93) #11
  %103 = getelementptr inbounds i8, i8* %81, i64 48
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds i8, i8* %81, i64 56
  %108 = bitcast i8* %107 to %"class.spvtools::utils::SmallVector"*
  %109 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %110 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %81, i64 64
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %81, i64 72
  %114 = getelementptr inbounds i8, i8* %81, i64 80
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %81, i64 88
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %109) #11
  %119 = getelementptr inbounds i8, i8* %81, i64 96
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  %122 = load i32, i32* %121, align 8
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds i8, i8* %81, i64 104
  %124 = bitcast i8* %123 to %"class.spvtools::utils::SmallVector"*
  %125 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %126 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %81, i64 112
  %128 = bitcast i8* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %81, i64 120
  %130 = getelementptr inbounds i8, i8* %81, i64 128
  %131 = bitcast i8* %129 to i8**
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds i8, i8* %81, i64 136
  %133 = bitcast i8* %132 to i64*
  store i64 0, i64* %133, align 8
  %134 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %124, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %125) #11
  %135 = getelementptr inbounds i8, i8* %81, i64 144
  %136 = bitcast i8* %19 to %"class.spvtools::opt::Instruction"*
  %137 = bitcast %"struct.spvtools::opt::Operand"** %82 to i64*
  %138 = ptrtoint i8* %135 to i64
  store i64 %138, i64* %137, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %136, %"class.spvtools::opt::IRContext"* %21, i32 250, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #11
  %139 = ptrtoint i8* %19 to i64
  %140 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %172, label %144

144:                                              ; preds = %16
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %82, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %170, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #10
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #10
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = load i8*, i8** %84, align 8
  br label %170

170:                                              ; preds = %168, %144
  %171 = phi i8* [ %169, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %82, align 8
  call void @_ZdlPv(i8* %171) #10
  br label %172

172:                                              ; preds = %16, %170
  %173 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %174 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %175 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %174, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %174, align 8
  %176 = icmp eq %"class.std::__1::vector.3"* %175, null
  br i1 %176, label %188, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = icmp eq i32* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = ptrtoint i32* %179 to i64
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 1
  %184 = bitcast i32** %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = bitcast i32* %179 to i8*
  call void @_ZdlPv(i8* %185) #10
  br label %186

186:                                              ; preds = %181, %177
  %187 = bitcast %"class.std::__1::vector.3"* %175 to i8*
  call void @_ZdlPv(i8* %187) #10
  br label %188

188:                                              ; preds = %172, %186
  %189 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %190 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %190, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %190, align 8
  %192 = icmp eq %"class.std::__1::vector.3"* %191, null
  br i1 %192, label %255, label %244

193:                                              ; preds = %271
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = ptrtoint i32* %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 1
  %200 = bitcast i32** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast i32* %195 to i8*
  call void @_ZdlPv(i8* %201) #10
  br label %202

202:                                              ; preds = %197, %193
  %203 = bitcast %"class.std::__1::vector.3"* %273 to i8*
  call void @_ZdlPv(i8* %203) #10
  br label %204

204:                                              ; preds = %271, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %205 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %207 = icmp eq %"class.std::__1::vector.3"* %206, null
  br i1 %207, label %219, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %216) #10
  br label %217

217:                                              ; preds = %212, %208
  %218 = bitcast %"class.std::__1::vector.3"* %206 to i8*
  call void @_ZdlPv(i8* %218) #10
  br label %219

219:                                              ; preds = %204, %217
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %220, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %220, align 8
  %222 = icmp eq %"class.std::__1::vector.3"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #10
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.3"* %221 to i8*
  call void @_ZdlPv(i8* %233) #10
  br label %234

234:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %235 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %18, align 8
  %237 = icmp eq %"class.spvtools::opt::Instruction"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.spvtools::opt::Instruction"* %236 to void (%"class.spvtools::opt::Instruction"*)***
  %240 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %240, i64 1
  %242 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %241, align 8
  call void %242(%"class.spvtools::opt::Instruction"* nonnull %236) #11
  br label %243

243:                                              ; preds = %234, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  ret %"class.spvtools::opt::Instruction"* %235

244:                                              ; preds = %188
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #10
  br label %253

253:                                              ; preds = %248, %244
  %254 = bitcast %"class.std::__1::vector.3"* %191 to i8*
  call void @_ZdlPv(i8* %254) #10
  br label %255

255:                                              ; preds = %253, %188
  %256 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  %257 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %258 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %257, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %257, align 8
  %259 = icmp eq %"class.std::__1::vector.3"* %258, null
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = ptrtoint i32* %262 to i64
  %266 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 1
  %267 = bitcast i32** %266 to i64*
  store i64 %265, i64* %267, align 8
  %268 = bitcast i32* %262 to i8*
  call void @_ZdlPv(i8* %268) #10
  br label %269

269:                                              ; preds = %264, %260
  %270 = bitcast %"class.std::__1::vector.3"* %258 to i8*
  call void @_ZdlPv(i8* %270) #10
  br label %271

271:                                              ; preds = %269, %255
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %272 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %273 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %272, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %272, align 8
  %274 = icmp eq %"class.std::__1::vector.3"* %273, null
  br i1 %274, label %204, label %193
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11LoopPeeling10PeelBeforeEj(%"class.spvtools::opt::LoopPeeling"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1049", align 8
  %4 = alloca %"struct.spvtools::opt::LoopUtils::LoopCloningResult", align 8
  %5 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %6 = alloca %"class.std::__1::function.1075", align 8
  %7 = alloca %"class.std::__1::function.1015", align 8
  %8 = bitcast %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* @__const._ZN8spvtools3opt11LoopPeeling9PeelAfterEj.clone_results to i8*), i64 160, i1 false)
  %9 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.996"* %9 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 1, i32 0, i32 3
  %13 = bitcast %"class.std::__1::__compressed_pair.269"* %12 to i32*
  %14 = bitcast %"class.std::__1::unordered_map.249"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 2, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.348"* %16 to i32*
  %18 = bitcast %"class.std::__1::unordered_map.328"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 3, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.348"* %20 to i32*
  %22 = bitcast %"class.std::__1::unordered_map.328"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 4
  %24 = bitcast %"class.std::__1::vector.38"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS0_9LoopUtils17LoopCloningResultE(%"class.spvtools::opt::LoopPeeling"* %0, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %4)
  call void @_ZN8spvtools3opt11LoopPeeling32InsertCanonicalInductionVariableEPNS0_9LoopUtils17LoopCloningResultE(%"class.spvtools::opt::LoopPeeling"* %0, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %4)
  %25 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 3
  %29 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %30 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %29, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 5
  %33 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %33, i64 0, i32 4
  %35 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %35, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %37 = bitcast %"class.spvtools::opt::Instruction"** %36 to i64*
  %38 = load i64, i64* %37, align 8, !noalias !44
  %39 = inttoptr i64 %38 to %"class.spvtools::opt::Instruction"*
  %40 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %31, %"class.spvtools::opt::Instruction"* %39) #11
  store %"class.spvtools::opt::IRContext"* %31, %"class.spvtools::opt::IRContext"** %26, align 8
  store %"class.spvtools::opt::BasicBlock"* %40, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 2
  %42 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %41 to i64*
  store i64 %38, i64* %42, align 8
  store i32 3, i32* %28, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 4
  %44 = load %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::analysis::Integer"** %43, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %44, i64 0, i32 2
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %1, i1 zeroext %47)
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = zext i8 %54 to i32
  %56 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %48, i32 %55) #11
  br label %57

57:                                               ; preds = %2, %52
  %58 = phi i32 [ %56, %52 ], [ 0, %2 ]
  %59 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 3
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 4
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 3
  %66 = load i8, i8* %65, align 4, !range !2
  %67 = zext i8 %66 to i32
  %68 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %60, i32 %67) #11
  br label %69

69:                                               ; preds = %57, %64
  %70 = phi i32 [ %68, %64 ], [ 0, %57 ]
  %71 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddLessThanEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %58, i32 %70)
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 3
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  %76 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %48, i32 0) #11
  br label %77

77:                                               ; preds = %69, %75
  %78 = phi i32 [ %76, %75 ], [ 0, %69 ]
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 4
  %80 = load i8, i8* %79, align 1, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = zext i8 %84 to i32
  %86 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %71, i32 %85) #11
  br label %87

87:                                               ; preds = %77, %82
  %88 = phi i32 [ %86, %82 ], [ 0, %77 ]
  %89 = load i8, i8* %49, align 1, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %72, align 4, !range !2
  %93 = zext i8 %92 to i32
  %94 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %48, i32 %93) #11
  br label %95

95:                                               ; preds = %87, %91
  %96 = phi i32 [ %94, %91 ], [ 0, %87 ]
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %103 = load i8, i8* %102, align 4, !range !2
  %104 = zext i8 %103 to i32
  %105 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %97, i32 %104) #11
  br label %106

106:                                              ; preds = %95, %101
  %107 = phi i32 [ %105, %101 ], [ 0, %95 ]
  %108 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddSelectEjjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %78, i32 %88, i32 %96, i32 %107)
  %109 = bitcast %"class.std::__1::function.1075"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 1, i32 0
  %111 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 2
  store i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFjPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling10PeelBeforeEjE4$_10S6_EEEEjPKNS0_16__policy_storageES5_", i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %110, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_10FjPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %111, align 8
  %112 = bitcast %"class.std::__1::function.1075"* %6 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* %108, %"class.spvtools::opt::Instruction"** %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 0, i32 1
  %114 = bitcast [8 x i8]* %113 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %114, align 8
  call void @_ZN8spvtools3opt11LoopPeeling16FixExitConditionERKNSt3__18functionIFjPNS0_11InstructionEEEE(%"class.spvtools::opt::LoopPeeling"* %0, %"class.std::__1::function.1075"* nonnull dereferenceable(32) %6)
  %115 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %111, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %115, i64 0, i32 1
  %117 = load void (i8*)*, void (i8*)** %116, align 8
  %118 = icmp eq void (i8*)* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void %117(i8* %121) #11
  br label %122

122:                                              ; preds = %106, %119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #11
  %123 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 2
  %124 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %123, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %124, i64 0, i32 3
  %126 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %125, align 8
  %127 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::BasicBlock"* %126)
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %124, %"class.spvtools::opt::BasicBlock"* %127) #11
  %128 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %123, align 8
  %129 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt11LoopPeeling11ProtectLoopEPNS0_4LoopEPNS0_11InstructionEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::Loop"* %128, %"class.spvtools::opt::Instruction"* %71, %"class.spvtools::opt::BasicBlock"* %126)
  %130 = bitcast %"class.std::__1::function.1015"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #11
  %131 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 1, i32 0
  %132 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling10PeelBeforeEjE4$_11S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %131, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %132, align 8
  %133 = call i8* @_Znwm(i64 24) #10, !noalias !47
  %134 = bitcast i8* %133 to %"struct.spvtools::opt::LoopUtils::LoopCloningResult"**
  store %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %134, align 8
  %135 = getelementptr inbounds i8, i8* %133, i64 8
  %136 = bitcast i8* %135 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %129, %"class.spvtools::opt::BasicBlock"** %136, align 8
  %137 = getelementptr inbounds i8, i8* %133, i64 16
  %138 = bitcast i8* %137 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %133, i8** %139, align 8
  %140 = bitcast %"class.std::__1::function.1049"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %140) #11
  %141 = ptrtoint %"class.std::__1::function.1015"* %7 to i64
  %142 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 1, i32 0
  %143 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %142, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %143, align 8
  %144 = bitcast %"class.std::__1::function.1049"* %3 to i64*
  store i64 %141, i64* %144, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %126, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %146 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 0, i32 0, i32 3
  %148 = load i8, i8* %147, align 8, !range !2
  %149 = icmp ne i8 %148, 0
  %150 = icmp eq %"class.spvtools::opt::Instruction"* %146, null
  %151 = or i1 %150, %149
  br i1 %151, label %172, label %152

152:                                              ; preds = %122
  %153 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0
  br label %154

154:                                              ; preds = %163, %152
  %155 = phi %"class.spvtools::opt::Instruction"* [ %167, %163 ], [ %146, %152 ]
  %156 = icmp eq %"class.spvtools::opt::Instruction"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 0, i32 1
  %159 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %158, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 2
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 245
  br i1 %162, label %163, label %170

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %159, i64 0, i32 0, i32 3
  %165 = load i8, i8* %164, align 8, !range !2
  %166 = icmp eq i8 %165, 0
  %167 = select i1 %166, %"class.spvtools::opt::Instruction"* %159, %"class.spvtools::opt::Instruction"* null
  %168 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %142, align 8
  %169 = call zeroext i1 %168(%"union.std::__1::__function::__policy_storage"* nonnull %153, %"class.spvtools::opt::Instruction"* nonnull %155) #11
  br i1 %169, label %154, label %170

170:                                              ; preds = %154, %157, %163
  %171 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %143, align 8
  br label %172

172:                                              ; preds = %170, %122
  %173 = phi %"struct.std::__1::__function::__policy"* [ %171, %170 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %122 ]
  %174 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %173, i64 0, i32 1
  %175 = load void (i8*)*, void (i8*)** %174, align 8
  %176 = icmp eq void (i8*)* %175, null
  br i1 %176, label %180, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  call void %175(i8* %179) #11
  br label %180

180:                                              ; preds = %172, %177
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %140) #11
  %181 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %132, align 8
  %182 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %181, i64 0, i32 1
  %183 = load void (i8*)*, void (i8*)** %182, align 8
  %184 = icmp eq void (i8*)* %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %180
  %186 = load i8*, i8** %139, align 8
  call void %183(i8* %186) #11
  br label %187

187:                                              ; preds = %180, %185
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #11
  %188 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %29, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %188, i32 83) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev(%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddLessThanEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #10
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #11
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1) #11
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = trunc i32 %40 to i16
  %42 = icmp slt i16 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 5
  %45 = tail call i8* @_Znwm(i64 240) #10
  %46 = bitcast i8* %45 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %46, %"class.std::__1::function"* dereferenceable(32) %44, %"class.spvtools::opt::IRContext"* %38) #11
  %47 = ptrtoint i8* %45 to i64
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 20
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %49, align 8
  %51 = bitcast %"class.std::__1::unique_ptr.480"* %48 to i64*
  store i64 %47, i64* %51, align 8
  %52 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %43
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %50) #11
  %54 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %50 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %43
  %56 = load i32, i32* %39, align 8
  %57 = or i32 %56, 32768
  store i32 %57, i32* %39, align 8
  br label %58

58:                                               ; preds = %34, %55
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 20, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %62 = load i8, i8* %61, align 4, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %58
  %65 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 0) #11
  br label %66

66:                                               ; preds = %58, %64
  %67 = phi i32 [ %65, %64 ], [ 0, %58 ]
  %68 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %60, i32 %67) #11
  %69 = bitcast %"class.spvtools::opt::analysis::Type"* %68 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %70 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %70, i64 10
  %72 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %71, align 8
  %73 = tail call %"class.spvtools::opt::analysis::Integer"* %72(%"class.spvtools::opt::analysis::Type"* %68) #11
  %74 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %73, i64 0, i32 2
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %66
  %78 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddSLessThanEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %1, i32 %2)
  br label %81

79:                                               ; preds = %66
  %80 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddULessThanEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %1, i32 %2)
  br label %81

81:                                               ; preds = %79, %77
  %82 = phi %"class.spvtools::opt::Instruction"* [ %78, %77 ], [ %80, %79 ]
  ret %"class.spvtools::opt::Instruction"* %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddSelectEjjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %13, align 8
  %14 = tail call i8* @_Znwm(i64 112) #10
  %15 = bitcast i8* %14 to %"class.spvtools::opt::Instruction"*
  %16 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %17 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %18, align 8
  %20 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %19) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 5, i32 0, i32 2
  %24 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %24, i64 0, i32 2
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %30 = getelementptr inbounds i8, i8* %29, i64 37
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 5, i32 0, i32 1, i32 0
  %32 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %17, i64 0, i32 5, i32 0, i32 0
  tail call void %32(%"union.std::__1::__function::__policy_storage"* %33, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %29) #11
  tail call void @_ZdlPv(i8* nonnull %29) #10
  br label %34

34:                                               ; preds = %5, %22, %28
  %35 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %36) #11
  %37 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %40 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.0"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %41 to i32*
  store i64 1, i64* %39, align 8
  store i32 %2, i32* %45, align 8
  %46 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 1, i32* %46, align 8
  %47 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %47, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %51 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %52 = bitcast i32** %50 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %51, %"struct.std::__1::aligned_storage<4, 4>::type"** %52, align 8
  %53 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %54 = bitcast %"class.std::__1::unique_ptr.0"* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %47, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %56 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %59 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %61 = bitcast i32** %59 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %60, %"struct.std::__1::aligned_storage<4, 4>::type"** %61, align 8
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %63 = bitcast %"class.std::__1::unique_ptr.0"* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %60 to i32*
  store i64 1, i64* %58, align 8
  store i32 %3, i32* %64, align 8
  %65 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  store i32 1, i32* %65, align 8
  %66 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %66, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 2
  %70 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %66, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %75 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %80 = bitcast i32** %78 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %79, %"struct.std::__1::aligned_storage<4, 4>::type"** %80, align 8
  %81 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %82 = bitcast %"class.std::__1::unique_ptr.0"* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %79 to i32*
  store i64 1, i64* %77, align 8
  store i32 %4, i32* %83, align 8
  %84 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 0
  store i32 1, i32* %84, align 8
  %85 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %85, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1, i32 2
  %89 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1, i32 3, i64 0
  %90 = bitcast i32** %88 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %89, %"struct.std::__1::aligned_storage<4, 4>::type"** %90, align 8
  %91 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1, i32 4
  %92 = bitcast %"class.std::__1::unique_ptr.0"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %85, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %94 = call i8* @_Znwm(i64 144) #10
  %95 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %96 = bitcast %"struct.spvtools::opt::Operand"** %95 to i8**
  store i8* %94, i8** %96, align 8
  %97 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %94, i8** %97, align 8
  %98 = getelementptr inbounds i8, i8* %94, i64 144
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast %"struct.spvtools::opt::Operand"** %99 to i8**
  store i8* %98, i8** %100, align 8
  %101 = bitcast i8* %94 to i32*
  %102 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %101, align 8
  %104 = getelementptr inbounds i8, i8* %94, i64 8
  %105 = bitcast i8* %104 to %"class.spvtools::utils::SmallVector"*
  %106 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %107 = bitcast i8* %104 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds i8, i8* %94, i64 16
  %109 = bitcast i8* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %94, i64 24
  %111 = getelementptr inbounds i8, i8* %94, i64 32
  %112 = bitcast i8* %110 to i8**
  store i8* %111, i8** %112, align 8
  %113 = getelementptr inbounds i8, i8* %94, i64 40
  %114 = bitcast i8* %113 to i64*
  store i64 0, i64* %114, align 8
  %115 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %105, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %106) #11
  %116 = getelementptr inbounds i8, i8* %94, i64 48
  %117 = bitcast i8* %116 to i32*
  %118 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 0
  %119 = load i32, i32* %118, align 8
  store i32 %119, i32* %117, align 8
  %120 = getelementptr inbounds i8, i8* %94, i64 56
  %121 = bitcast i8* %120 to %"class.spvtools::utils::SmallVector"*
  %122 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1
  %123 = bitcast i8* %120 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %124 = getelementptr inbounds i8, i8* %94, i64 64
  %125 = bitcast i8* %124 to i64*
  store i64 0, i64* %125, align 8
  %126 = getelementptr inbounds i8, i8* %94, i64 72
  %127 = getelementptr inbounds i8, i8* %94, i64 80
  %128 = bitcast i8* %126 to i8**
  store i8* %127, i8** %128, align 8
  %129 = getelementptr inbounds i8, i8* %94, i64 88
  %130 = bitcast i8* %129 to i64*
  store i64 0, i64* %130, align 8
  %131 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %121, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %122) #11
  %132 = getelementptr inbounds i8, i8* %94, i64 96
  %133 = bitcast i8* %132 to i32*
  %134 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 0
  %135 = load i32, i32* %134, align 8
  store i32 %135, i32* %133, align 8
  %136 = getelementptr inbounds i8, i8* %94, i64 104
  %137 = bitcast i8* %136 to %"class.spvtools::utils::SmallVector"*
  %138 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1
  %139 = bitcast i8* %136 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %140 = getelementptr inbounds i8, i8* %94, i64 112
  %141 = bitcast i8* %140 to i64*
  store i64 0, i64* %141, align 8
  %142 = getelementptr inbounds i8, i8* %94, i64 120
  %143 = getelementptr inbounds i8, i8* %94, i64 128
  %144 = bitcast i8* %142 to i8**
  store i8* %143, i8** %144, align 8
  %145 = getelementptr inbounds i8, i8* %94, i64 136
  %146 = bitcast i8* %145 to i64*
  store i64 0, i64* %146, align 8
  %147 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %137, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %138) #11
  %148 = getelementptr inbounds i8, i8* %94, i64 144
  %149 = bitcast %"struct.spvtools::opt::Operand"** %95 to i64*
  %150 = ptrtoint i8* %148 to i64
  store i64 %150, i64* %149, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %15, %"class.spvtools::opt::IRContext"* %17, i32 169, i32 %1, i32 %20, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #11
  %151 = ptrtoint i8* %14 to i64
  %152 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %154 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %153, align 8
  %155 = icmp eq %"struct.spvtools::opt::Operand"* %154, null
  br i1 %155, label %184, label %156

156:                                              ; preds = %34
  %157 = bitcast %"struct.spvtools::opt::Operand"* %154 to i8*
  %158 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %95, align 8
  %159 = icmp eq %"struct.spvtools::opt::Operand"* %158, %154
  br i1 %159, label %182, label %160

160:                                              ; preds = %156, %178
  %161 = phi %"struct.spvtools::opt::Operand"* [ %162, %178 ], [ %158, %156 ]
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %161, i64 -1
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %161, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %161, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %164, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %164, align 8
  %166 = icmp eq %"class.std::__1::vector.3"* %165, null
  br i1 %166, label %178, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = icmp eq i32* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %167
  %172 = ptrtoint i32* %169 to i64
  %173 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 1
  %174 = bitcast i32** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast i32* %169 to i8*
  call void @_ZdlPv(i8* %175) #10
  br label %176

176:                                              ; preds = %171, %167
  %177 = bitcast %"class.std::__1::vector.3"* %165 to i8*
  call void @_ZdlPv(i8* %177) #10
  br label %178

178:                                              ; preds = %176, %160
  %179 = icmp eq %"struct.spvtools::opt::Operand"* %162, %154
  br i1 %179, label %180, label %160

180:                                              ; preds = %178
  %181 = load i8*, i8** %97, align 8
  br label %182

182:                                              ; preds = %180, %156
  %183 = phi i8* [ %181, %180 ], [ %157, %156 ]
  store %"struct.spvtools::opt::Operand"* %154, %"struct.spvtools::opt::Operand"** %95, align 8
  call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %34, %182
  %185 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %185, align 8
  %186 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %187 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %186, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %186, align 8
  %188 = icmp eq %"class.std::__1::vector.3"* %187, null
  br i1 %188, label %200, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %187, i64 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = icmp eq i32* %191, null
  br i1 %192, label %198, label %193

193:                                              ; preds = %189
  %194 = ptrtoint i32* %191 to i64
  %195 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %187, i64 0, i32 0, i32 1
  %196 = bitcast i32** %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = bitcast i32* %191 to i8*
  call void @_ZdlPv(i8* %197) #10
  br label %198

198:                                              ; preds = %193, %189
  %199 = bitcast %"class.std::__1::vector.3"* %187 to i8*
  call void @_ZdlPv(i8* %199) #10
  br label %200

200:                                              ; preds = %184, %198
  %201 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %201, align 8
  %202 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %202, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %202, align 8
  %204 = icmp eq %"class.std::__1::vector.3"* %203, null
  br i1 %204, label %267, label %256

205:                                              ; preds = %283
  %206 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %285, i64 0, i32 0, i32 0
  %207 = load i32*, i32** %206, align 8
  %208 = icmp eq i32* %207, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = ptrtoint i32* %207 to i64
  %211 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %285, i64 0, i32 0, i32 1
  %212 = bitcast i32** %211 to i64*
  store i64 %210, i64* %212, align 8
  %213 = bitcast i32* %207 to i8*
  call void @_ZdlPv(i8* %213) #10
  br label %214

214:                                              ; preds = %209, %205
  %215 = bitcast %"class.std::__1::vector.3"* %285 to i8*
  call void @_ZdlPv(i8* %215) #10
  br label %216

216:                                              ; preds = %283, %214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %75) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %217 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %218 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %217, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %217, align 8
  %219 = icmp eq %"class.std::__1::vector.3"* %218, null
  br i1 %219, label %231, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %218, i64 0, i32 0, i32 0
  %222 = load i32*, i32** %221, align 8
  %223 = icmp eq i32* %222, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %220
  %225 = ptrtoint i32* %222 to i64
  %226 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %218, i64 0, i32 0, i32 1
  %227 = bitcast i32** %226 to i64*
  store i64 %225, i64* %227, align 8
  %228 = bitcast i32* %222 to i8*
  call void @_ZdlPv(i8* %228) #10
  br label %229

229:                                              ; preds = %224, %220
  %230 = bitcast %"class.std::__1::vector.3"* %218 to i8*
  call void @_ZdlPv(i8* %230) #10
  br label %231

231:                                              ; preds = %216, %229
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %232 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %233 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %232, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %232, align 8
  %234 = icmp eq %"class.std::__1::vector.3"* %233, null
  br i1 %234, label %246, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %233, i64 0, i32 0, i32 0
  %237 = load i32*, i32** %236, align 8
  %238 = icmp eq i32* %237, null
  br i1 %238, label %244, label %239

239:                                              ; preds = %235
  %240 = ptrtoint i32* %237 to i64
  %241 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %233, i64 0, i32 0, i32 1
  %242 = bitcast i32** %241 to i64*
  store i64 %240, i64* %242, align 8
  %243 = bitcast i32* %237 to i8*
  call void @_ZdlPv(i8* %243) #10
  br label %244

244:                                              ; preds = %239, %235
  %245 = bitcast %"class.std::__1::vector.3"* %233 to i8*
  call void @_ZdlPv(i8* %245) #10
  br label %246

246:                                              ; preds = %231, %244
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  %247 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %6)
  %248 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %13, align 8
  %249 = icmp eq %"class.spvtools::opt::Instruction"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %246
  %251 = bitcast %"class.spvtools::opt::Instruction"* %248 to void (%"class.spvtools::opt::Instruction"*)***
  %252 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %252, i64 1
  %254 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %253, align 8
  call void %254(%"class.spvtools::opt::Instruction"* nonnull %248) #11
  br label %255

255:                                              ; preds = %246, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  ret %"class.spvtools::opt::Instruction"* %247

256:                                              ; preds = %200
  %257 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %203, i64 0, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %265, label %260

260:                                              ; preds = %256
  %261 = ptrtoint i32* %258 to i64
  %262 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %203, i64 0, i32 0, i32 1
  %263 = bitcast i32** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = bitcast i32* %258 to i8*
  call void @_ZdlPv(i8* %264) #10
  br label %265

265:                                              ; preds = %260, %256
  %266 = bitcast %"class.std::__1::vector.3"* %203 to i8*
  call void @_ZdlPv(i8* %266) #10
  br label %267

267:                                              ; preds = %265, %200
  %268 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %268, align 8
  %269 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %270 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %269, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %269, align 8
  %271 = icmp eq %"class.std::__1::vector.3"* %270, null
  br i1 %271, label %283, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %270, i64 0, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = icmp eq i32* %274, null
  br i1 %275, label %281, label %276

276:                                              ; preds = %272
  %277 = ptrtoint i32* %274 to i64
  %278 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %270, i64 0, i32 0, i32 1
  %279 = bitcast i32** %278 to i64*
  store i64 %277, i64* %279, align 8
  %280 = bitcast i32* %274 to i8*
  call void @_ZdlPv(i8* %280) #10
  br label %281

281:                                              ; preds = %276, %272
  %282 = bitcast %"class.std::__1::vector.3"* %270 to i8*
  call void @_ZdlPv(i8* %282) #10
  br label %283

283:                                              ; preds = %281, %267
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %284 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %285 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %284, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %284, align 8
  %286 = icmp eq %"class.std::__1::vector.3"* %285, null
  br i1 %286, label %216, label %205
}

declare void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev(%"struct.spvtools::opt::LoopUtils::LoopCloningResult"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.40"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.40"* %4 to i8*
  %8 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.40"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr.40"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %14, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::BasicBlock"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::unique_ptr.40"* %13 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %18, %"class.spvtools::opt::BasicBlock"* nonnull %15) #11
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.40"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.38"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.40"* %4, %"class.std::__1::unique_ptr.40"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.333"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = bitcast %"struct.std::__1::__hash_node_base.333"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  %35 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %37, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.std::__1::__hash_node_base.333"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %36, %40
  %43 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.333"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42, %46
  %47 = phi %"struct.std::__1::__hash_node_base.333"* [ %49, %46 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %47, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %48, align 8
  %50 = bitcast %"struct.std::__1::__hash_node_base.333"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #10
  %51 = icmp eq %"struct.std::__1::__hash_node_base.333"* %49, null
  br i1 %51, label %52, label %46

52:                                               ; preds = %46, %42
  %53 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %53, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.333"** %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = bitcast %"struct.std::__1::__hash_node_base.333"** %54 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %52, %56
  %59 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.254"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %58, %62
  %63 = phi %"struct.std::__1::__hash_node_base.254"* [ %65, %62 ], [ %60, %58 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %63, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %64, align 8
  %66 = bitcast %"struct.std::__1::__hash_node_base.254"* %63 to i8*
  tail call void @_ZdlPv(i8* %66) #10
  %67 = icmp eq %"struct.std::__1::__hash_node_base.254"* %65, null
  br i1 %67, label %68, label %62

68:                                               ; preds = %62, %58
  %69 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %69, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.254"** %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = bitcast %"struct.std::__1::__hash_node_base.254"** %70 to i8*
  tail call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.981"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %74, %78
  %79 = phi %"struct.std::__1::__hash_node_base.981"* [ %81, %78 ], [ %76, %74 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %79, i64 0, i32 0
  %81 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %80, align 8
  %82 = bitcast %"struct.std::__1::__hash_node_base.981"* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #10
  %83 = icmp eq %"struct.std::__1::__hash_node_base.981"* %81, null
  br i1 %83, label %84, label %78

84:                                               ; preds = %78, %74
  %85 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %85, align 8
  store %"struct.std::__1::__hash_node_base.981"** null, %"struct.std::__1::__hash_node_base.981"*** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.981"** %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = bitcast %"struct.std::__1::__hash_node_base.981"** %86 to i8*
  tail call void @_ZdlPv(i8* %89) #10
  br label %90

90:                                               ; preds = %84, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11LoopPeeling9PeelAfterEj(%"class.spvtools::opt::LoopPeeling"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1049", align 8
  %4 = alloca %"struct.spvtools::opt::LoopUtils::LoopCloningResult", align 8
  %5 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %6 = alloca %"class.std::__1::function.1075", align 8
  %7 = alloca %"class.std::__1::function.1015", align 8
  %8 = bitcast %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* @__const._ZN8spvtools3opt11LoopPeeling9PeelAfterEj.clone_results to i8*), i64 160, i1 false)
  %9 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.996"* %9 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 1, i32 0, i32 3
  %13 = bitcast %"class.std::__1::__compressed_pair.269"* %12 to i32*
  %14 = bitcast %"class.std::__1::unordered_map.249"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 2, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.348"* %16 to i32*
  %18 = bitcast %"class.std::__1::unordered_map.328"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 3, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.348"* %20 to i32*
  %22 = bitcast %"class.std::__1::unordered_map.328"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 4
  %24 = bitcast %"class.std::__1::vector.38"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS0_9LoopUtils17LoopCloningResultE(%"class.spvtools::opt::LoopPeeling"* %0, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %4)
  call void @_ZN8spvtools3opt11LoopPeeling32InsertCanonicalInductionVariableEPNS0_9LoopUtils17LoopCloningResultE(%"class.spvtools::opt::LoopPeeling"* %0, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %4)
  %25 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 3
  %29 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %30 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %29, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 5
  %33 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %33, i64 0, i32 4
  %35 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %35, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %37 = bitcast %"class.spvtools::opt::Instruction"** %36 to i64*
  %38 = load i64, i64* %37, align 8, !noalias !52
  %39 = inttoptr i64 %38 to %"class.spvtools::opt::Instruction"*
  %40 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %31, %"class.spvtools::opt::Instruction"* %39) #11
  store %"class.spvtools::opt::IRContext"* %31, %"class.spvtools::opt::IRContext"** %26, align 8
  store %"class.spvtools::opt::BasicBlock"* %40, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 2
  %42 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %41 to i64*
  store i64 %38, i64* %42, align 8
  store i32 3, i32* %28, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 4
  %44 = load %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::analysis::Integer"** %43, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %44, i64 0, i32 2
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %1, i1 zeroext %47)
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = zext i8 %54 to i32
  %56 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %48, i32 %55) #11
  br label %57

57:                                               ; preds = %2, %52
  %58 = phi i32 [ %56, %52 ], [ 0, %2 ]
  %59 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 3
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 4
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 3
  %66 = load i8, i8* %65, align 4, !range !2
  %67 = zext i8 %66 to i32
  %68 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %60, i32 %67) #11
  br label %69

69:                                               ; preds = %57, %64
  %70 = phi i32 [ %68, %64 ], [ 0, %57 ]
  %71 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddLessThanEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %58, i32 %70)
  %72 = bitcast %"class.std::__1::function.1075"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 2
  store i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFjPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling9PeelAfterEjE4$_12S6_EEEEjPKNS0_16__policy_storageES5_", i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %73, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_12FjPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %74, align 8
  %75 = bitcast %"class.std::__1::function.1075"* %6 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* %48, %"class.spvtools::opt::Instruction"** %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 0, i32 1
  %77 = bitcast [8 x i8]* %76 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %77, align 8
  call void @_ZN8spvtools3opt11LoopPeeling16FixExitConditionERKNSt3__18functionIFjPNS0_11InstructionEEEE(%"class.spvtools::opt::LoopPeeling"* %0, %"class.std::__1::function.1075"* nonnull dereferenceable(32) %6)
  %78 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %74, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %78, i64 0, i32 1
  %80 = load void (i8*)*, void (i8*)** %79, align 8
  %81 = icmp eq void (i8*)* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %69
  %83 = getelementptr inbounds %"class.std::__1::function.1075", %"class.std::__1::function.1075"* %6, i64 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void %80(i8* %84) #11
  br label %85

85:                                               ; preds = %69, %82
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #11
  %86 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 2
  %88 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %87, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %88, i64 0, i32 4
  %90 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %89, align 8
  %91 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::BasicBlock"* %90)
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %86, %"class.spvtools::opt::BasicBlock"* %91) #11
  %92 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %32, align 8
  %93 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %87, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %93, i64 0, i32 4
  %95 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %94, align 8
  %96 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt11LoopPeeling11ProtectLoopEPNS0_4LoopEPNS0_11InstructionEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::Loop"* %92, %"class.spvtools::opt::Instruction"* %71, %"class.spvtools::opt::BasicBlock"* %95)
  %97 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %87, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %97, i64 0, i32 1
  %99 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %98, align 8
  %100 = bitcast %"class.std::__1::function.1015"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 1, i32 0
  %102 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling9PeelAfterEjE4$_13S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %101, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %102, align 8
  %103 = call i8* @_Znwm(i64 24) #10, !noalias !55
  %104 = bitcast i8* %103 to %"struct.spvtools::opt::LoopUtils::LoopCloningResult"**
  store %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %104, align 8
  %105 = getelementptr inbounds i8, i8* %103, i64 8
  %106 = bitcast i8* %105 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %96, %"class.spvtools::opt::BasicBlock"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %103, i64 16
  %108 = bitcast i8* %107 to %"class.spvtools::opt::LoopPeeling"**
  store %"class.spvtools::opt::LoopPeeling"* %0, %"class.spvtools::opt::LoopPeeling"** %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %103, i8** %109, align 8
  %110 = bitcast %"class.std::__1::function.1049"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #11
  %111 = ptrtoint %"class.std::__1::function.1015"* %7 to i64
  %112 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %112, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %113, align 8
  %114 = bitcast %"class.std::__1::function.1049"* %3 to i64*
  store i64 %111, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %99, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %116 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %115, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %116, i64 0, i32 0, i32 3
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp ne i8 %118, 0
  %120 = icmp eq %"class.spvtools::opt::Instruction"* %116, null
  %121 = or i1 %120, %119
  br i1 %121, label %142, label %122

122:                                              ; preds = %85
  %123 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0
  br label %124

124:                                              ; preds = %133, %122
  %125 = phi %"class.spvtools::opt::Instruction"* [ %137, %133 ], [ %116, %122 ]
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 0, i32 1
  %129 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %128, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 2
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 245
  br i1 %132, label %133, label %140

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 3
  %135 = load i8, i8* %134, align 8, !range !2
  %136 = icmp eq i8 %135, 0
  %137 = select i1 %136, %"class.spvtools::opt::Instruction"* %129, %"class.spvtools::opt::Instruction"* null
  %138 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %112, align 8
  %139 = call zeroext i1 %138(%"union.std::__1::__function::__policy_storage"* nonnull %123, %"class.spvtools::opt::Instruction"* nonnull %125) #11
  br i1 %139, label %124, label %140

140:                                              ; preds = %124, %127, %133
  %141 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %113, align 8
  br label %142

142:                                              ; preds = %140, %85
  %143 = phi %"struct.std::__1::__function::__policy"* [ %141, %140 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %85 ]
  %144 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %143, i64 0, i32 1
  %145 = load void (i8*)*, void (i8*)** %144, align 8
  %146 = icmp eq void (i8*)* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %3, i64 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void %145(i8* %149) #11
  br label %150

150:                                              ; preds = %142, %147
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #11
  %151 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %102, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %151, i64 0, i32 1
  %153 = load void (i8*)*, void (i8*)** %152, align 8
  %154 = icmp eq void (i8*)* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %150
  %156 = load i8*, i8** %109, align 8
  call void %153(i8* %156) #11
  br label %157

157:                                              ; preds = %150, %155
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %158 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %29, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %158, i32 83) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN8spvtools3opt9LoopUtils17LoopCloningResultD2Ev(%"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt15LoopPeelingPass7ProcessEv(%"class.spvtools::opt::LoopPeelingPass"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.28"* %7, %9
  br i1 %10, label %13, label %15

11:                                               ; preds = %15
  %12 = select i1 %21, i32 16, i32 17
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi i32 [ 17, %1 ], [ %12, %11 ]
  ret i32 %14

15:                                               ; preds = %1, %15
  %16 = phi i1 [ %21, %15 ], [ false, %1 ]
  %17 = phi %"class.std::__1::unique_ptr.28"* [ %22, %15 ], [ %7, %1 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %18, align 8
  %20 = tail call zeroext i1 @_ZN8spvtools3opt15LoopPeelingPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::LoopPeelingPass"* %0, %"class.spvtools::opt::Function"* %19)
  %21 = or i1 %16, %20
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %17, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr.28"* %22, %9
  br i1 %23, label %11, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15LoopPeelingPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::LoopPeelingPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::LoopUtils", align 8
  %4 = alloca %"class.spvtools::opt::LoopUtils", align 8
  %5 = alloca %"class.std::__1::vector.910", align 16
  %6 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator", align 8
  %7 = alloca %"class.spvtools::opt::ScalarEvolutionAnalysis", align 8
  %8 = alloca %"struct.spvtools::opt::CodeMetrics", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %10, %"class.spvtools::opt::Function"* %1) #11
  %12 = bitcast %"class.std::__1::vector.910"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %5, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %5, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 24, i1 false) #11
  %16 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %11, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.spvtools::opt::Loop"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.spvtools::opt::LoopDescriptor"* %11 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = bitcast %"class.spvtools::opt::Loop"*** %15 to i64*
  %24 = bitcast %"class.std::__1::vector.910"* %5 to i64*
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %2
  %27 = icmp ugt i64 %22, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %26
  %30 = tail call i8* @_Znwm(i64 %21) #10
  %31 = bitcast i8* %30 to %"class.spvtools::opt::Loop"**
  %32 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, i64 %22
  %33 = ptrtoint %"class.spvtools::opt::Loop"** %32 to i64
  %34 = insertelement <2 x i8*> undef, i8* %30, i32 0
  %35 = shufflevector <2 x i8*> %34, <2 x i8*> undef, <2 x i32> zeroinitializer
  %36 = ptrtoint <2 x i8*> %35 to <2 x i64>
  %37 = bitcast %"class.std::__1::vector.910"* %5 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 16
  store i64 %33, i64* %23, align 16
  br label %38

38:                                               ; preds = %29, %2
  %39 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %11, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 0
  store %"class.spvtools::opt::Loop"* %40, %"class.spvtools::opt::Loop"** %41, align 8, !alias.scope !60
  %42 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1
  %43 = bitcast %"class.std::__1::stack"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 48, i1 false) #11, !alias.scope !60
  %44 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %11, i64 0, i32 1, i32 7, i32 0, i32 0
  %45 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %44, align 8, !noalias !60
  %46 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %11, i64 0, i32 1, i32 7, i32 0, i32 1
  %47 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %46, align 8, !noalias !60
  %48 = icmp eq %"class.spvtools::opt::Loop"** %45, %47
  br i1 %48, label %120, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = bitcast %"struct.std::__1::pair.1096"*** %50 to i64*
  %52 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"struct.std::__1::pair.1096"*** %52 to i64*
  %54 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0
  %57 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %6 to i64*
  br label %58

58:                                               ; preds = %111, %49
  %59 = phi i64 [ 0, %49 ], [ %114, %111 ]
  %60 = phi i64 [ 0, %49 ], [ %113, %111 ]
  %61 = phi i64 [ 0, %49 ], [ %112, %111 ]
  %62 = phi i64 [ 0, %49 ], [ %99, %111 ]
  %63 = phi %"class.spvtools::opt::Loop"** [ %45, %49 ], [ %107, %111 ]
  %64 = phi %"class.spvtools::opt::Loop"* [ %40, %49 ], [ %105, %111 ]
  %65 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %63, i64 1
  %66 = sub i64 %61, %60
  %67 = icmp eq i64 %66, 0
  %68 = shl i64 %66, 5
  %69 = add i64 %68, -1
  %70 = select i1 %67, i64 0, i64 %69
  %71 = add i64 %62, %59
  %72 = icmp eq i64 %70, %71
  %73 = inttoptr i64 %60 to %"struct.std::__1::pair.1096"**
  %74 = inttoptr i64 %61 to %"struct.std::__1::pair.1096"**
  br i1 %72, label %75, label %81

75:                                               ; preds = %58
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %56) #11
  %76 = load i64, i64* %55, align 8, !alias.scope !60
  %77 = load i64, i64* %54, align 8, !alias.scope !60
  %78 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %52, align 8, !alias.scope !60
  %79 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %50, align 8, !alias.scope !60
  %80 = add i64 %77, %76
  br label %81

81:                                               ; preds = %75, %58
  %82 = phi i64 [ %80, %75 ], [ %71, %58 ]
  %83 = phi %"struct.std::__1::pair.1096"** [ %79, %75 ], [ %74, %58 ]
  %84 = phi %"struct.std::__1::pair.1096"** [ %78, %75 ], [ %73, %58 ]
  %85 = icmp eq %"struct.std::__1::pair.1096"** %83, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %81
  %87 = lshr i64 %82, 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %84, i64 %87
  %89 = load %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %88, align 8
  %90 = and i64 %82, 255
  %91 = getelementptr inbounds %"struct.std::__1::pair.1096", %"struct.std::__1::pair.1096"* %89, i64 %90
  %92 = bitcast %"struct.std::__1::pair.1096"* %91 to i8*
  br label %93

93:                                               ; preds = %86, %81
  %94 = phi i8* [ %92, %86 ], [ null, %81 ]
  %95 = bitcast i8* %94 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %64, %"class.spvtools::opt::Loop"** %95, align 8
  %96 = getelementptr inbounds i8, i8* %94, i64 8
  %97 = bitcast i8* %96 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %65, %"class.spvtools::opt::Loop"*** %97, align 8
  %98 = load i64, i64* %55, align 8, !alias.scope !60
  %99 = add i64 %98, 1
  store i64 %99, i64* %55, align 8, !alias.scope !60
  %100 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %41, align 8, !alias.scope !60
  %101 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %100, i64 0, i32 7, i32 0, i32 0
  %102 = bitcast %"class.spvtools::opt::Loop"*** %101 to i64**
  %103 = load i64*, i64** %102, align 8
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %57, align 8, !alias.scope !60
  %105 = inttoptr i64 %104 to %"class.spvtools::opt::Loop"*
  %106 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %105, i64 0, i32 7, i32 0, i32 0
  %107 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %106, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %105, i64 0, i32 7, i32 0, i32 1
  %109 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Loop"** %107, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %93
  %112 = load i64, i64* %51, align 8, !alias.scope !60
  %113 = load i64, i64* %53, align 8, !alias.scope !60
  %114 = load i64, i64* %54, align 8, !alias.scope !60
  br label %58

115:                                              ; preds = %93
  %116 = inttoptr i64 %104 to %"class.spvtools::opt::Loop"*
  %117 = icmp eq %"class.spvtools::opt::Loop"* %40, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  %119 = bitcast %"class.spvtools::opt::Loop"*** %14 to i64*
  br label %242

120:                                              ; preds = %297, %38, %115
  %121 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %122 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = lshr i64 %124, 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %122, i64 %125
  %127 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %128 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %127, align 8
  %129 = icmp eq %"struct.std::__1::pair.1096"** %128, %122
  %130 = ptrtoint %"struct.std::__1::pair.1096"** %128 to i64
  %131 = ptrtoint %"struct.std::__1::pair.1096"** %122 to i64
  br i1 %129, label %132, label %134

132:                                              ; preds = %120
  %133 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %147

134:                                              ; preds = %120
  %135 = load %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %126, align 8
  %136 = and i64 %124, 255
  %137 = getelementptr inbounds %"struct.std::__1::pair.1096", %"struct.std::__1::pair.1096"* %135, i64 %136
  %138 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, %124
  %141 = lshr i64 %140, 8
  %142 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %122, i64 %141
  %143 = load %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %142, align 8
  %144 = and i64 %140, 255
  %145 = getelementptr inbounds %"struct.std::__1::pair.1096", %"struct.std::__1::pair.1096"* %143, i64 %144
  %146 = icmp eq %"struct.std::__1::pair.1096"* %145, %137
  br i1 %146, label %147, label %153

147:                                              ; preds = %166, %134, %132
  %148 = phi i64* [ %133, %132 ], [ %138, %134 ], [ %138, %166 ]
  store i64 0, i64* %148, align 8
  %149 = bitcast %"struct.std::__1::pair.1096"*** %127 to i64*
  %150 = sub i64 %130, %131
  %151 = ashr exact i64 %150, 3
  %152 = icmp ugt i64 %151, 2
  br i1 %152, label %171, label %184

153:                                              ; preds = %134, %166
  %154 = phi %"struct.std::__1::pair.1096"* [ %169, %166 ], [ %137, %134 ]
  %155 = phi %"struct.std::__1::pair.1096"** [ %168, %166 ], [ %126, %134 ]
  %156 = getelementptr inbounds %"struct.std::__1::pair.1096", %"struct.std::__1::pair.1096"* %154, i64 1
  %157 = ptrtoint %"struct.std::__1::pair.1096"* %156 to i64
  %158 = bitcast %"struct.std::__1::pair.1096"** %155 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = sub i64 %157, %159
  %161 = icmp eq i64 %160, 4096
  br i1 %161, label %162, label %166

162:                                              ; preds = %153
  %163 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %155, i64 1
  %164 = bitcast %"struct.std::__1::pair.1096"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  br label %166

166:                                              ; preds = %162, %153
  %167 = phi i64 [ %165, %162 ], [ %157, %153 ]
  %168 = phi %"struct.std::__1::pair.1096"** [ %163, %162 ], [ %155, %153 ]
  %169 = inttoptr i64 %167 to %"struct.std::__1::pair.1096"*
  %170 = icmp eq %"struct.std::__1::pair.1096"* %145, %169
  br i1 %170, label %147, label %153

171:                                              ; preds = %147, %171
  %172 = phi %"struct.std::__1::pair.1096"** [ %176, %171 ], [ %122, %147 ]
  %173 = bitcast %"struct.std::__1::pair.1096"** %172 to i8**
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #10
  %175 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %121, align 8
  %176 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %175, i64 1
  store %"struct.std::__1::pair.1096"** %176, %"struct.std::__1::pair.1096"*** %121, align 8
  %177 = load i64, i64* %149, align 8
  %178 = ptrtoint %"struct.std::__1::pair.1096"** %176 to i64
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 3
  %181 = icmp ugt i64 %180, 2
  br i1 %181, label %171, label %182

182:                                              ; preds = %171
  %183 = inttoptr i64 %177 to %"struct.std::__1::pair.1096"**
  br label %184

184:                                              ; preds = %182, %147
  %185 = phi %"struct.std::__1::pair.1096"** [ %128, %147 ], [ %183, %182 ]
  %186 = phi %"struct.std::__1::pair.1096"** [ %122, %147 ], [ %176, %182 ]
  %187 = phi i64 [ %151, %147 ], [ %180, %182 ]
  switch i64 %187, label %191 [
    i64 1, label %189
    i64 2, label %188
  ]

188:                                              ; preds = %184
  br label %189

189:                                              ; preds = %184, %188
  %190 = phi i64 [ 256, %188 ], [ 128, %184 ]
  store i64 %190, i64* %123, align 8
  br label %191

191:                                              ; preds = %189, %184
  %192 = icmp eq %"struct.std::__1::pair.1096"** %186, %185
  br i1 %192, label %211, label %193

193:                                              ; preds = %191, %193
  %194 = phi %"struct.std::__1::pair.1096"** [ %197, %193 ], [ %186, %191 ]
  %195 = bitcast %"struct.std::__1::pair.1096"** %194 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #10
  %197 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %194, i64 1
  %198 = icmp eq %"struct.std::__1::pair.1096"** %197, %185
  br i1 %198, label %199, label %193

199:                                              ; preds = %193
  %200 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %121, align 8
  %201 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %127, align 8
  %202 = icmp eq %"struct.std::__1::pair.1096"** %201, %200
  br i1 %202, label %211, label %203

203:                                              ; preds = %199
  %204 = ptrtoint %"struct.std::__1::pair.1096"** %200 to i64
  %205 = getelementptr %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %201, i64 -1
  %206 = ptrtoint %"struct.std::__1::pair.1096"** %205 to i64
  %207 = sub i64 %206, %204
  %208 = lshr i64 %207, 3
  %209 = xor i64 %208, -1
  %210 = getelementptr %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %201, i64 %209
  store %"struct.std::__1::pair.1096"** %210, %"struct.std::__1::pair.1096"*** %127, align 8
  br label %211

211:                                              ; preds = %203, %199, %191
  %212 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %212, align 8
  %214 = icmp eq %"struct.std::__1::pair.1096"** %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %211
  %216 = bitcast %"struct.std::__1::pair.1096"** %213 to i8*
  call void @_ZdlPv(i8* %216) #10
  br label %217

217:                                              ; preds = %211, %215
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #11
  %218 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %218) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %218, i8* align 8 bitcast (%"class.spvtools::opt::ScalarEvolutionAnalysis"* @__const._ZN8spvtools3opt15LoopPeelingPass15ProcessFunctionEPNS0_8FunctionE.scev_analysis to i8*), i64 104, i1 false)
  %219 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  call void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* nonnull %7, %"class.spvtools::opt::IRContext"* %219) #11
  %220 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %13, align 16
  %221 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %14, align 8
  %222 = icmp eq %"class.spvtools::opt::Loop"** %220, %221
  br i1 %222, label %300, label %223

223:                                              ; preds = %217
  %224 = bitcast %"struct.spvtools::opt::CodeMetrics"* %8 to i8*
  %225 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %8, i64 0, i32 0, i32 0, i32 4, i64 0
  %228 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %8, i64 0, i32 0, i32 0, i32 3
  %229 = bitcast %"class.std::__1::__compressed_pair.1127"* %228 to i32*
  %230 = bitcast %"class.spvtools::opt::LoopUtils"* %3 to i8*
  %231 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 0
  %232 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 1
  %233 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 2
  %234 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 3
  %235 = bitcast %"class.spvtools::opt::Function"** %234 to i64*
  %236 = bitcast %"class.spvtools::opt::LoopUtils"* %4 to i8*
  %237 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %4, i64 0, i32 0
  %238 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %4, i64 0, i32 1
  %239 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %4, i64 0, i32 2
  %240 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %4, i64 0, i32 3
  %241 = bitcast %"class.spvtools::opt::Function"** %240 to i64*
  br label %344

242:                                              ; preds = %118, %297
  %243 = phi %"class.spvtools::opt::Loop"* [ %116, %118 ], [ %298, %297 ]
  %244 = ptrtoint %"class.spvtools::opt::Loop"* %243 to i64
  %245 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %14, align 8
  %246 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %15, align 16
  %247 = icmp ult %"class.spvtools::opt::Loop"** %245, %246
  %248 = ptrtoint %"class.spvtools::opt::Loop"** %246 to i64
  br i1 %247, label %249, label %253

249:                                              ; preds = %242
  %250 = bitcast %"class.spvtools::opt::Loop"** %245 to i64*
  store i64 %244, i64* %250, align 8
  %251 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %245, i64 1
  %252 = ptrtoint %"class.spvtools::opt::Loop"** %251 to i64
  store i64 %252, i64* %119, align 8
  br label %297

253:                                              ; preds = %242
  %254 = ptrtoint %"class.spvtools::opt::Loop"** %245 to i64
  %255 = load i64, i64* %24, align 16
  %256 = sub i64 %254, %255
  %257 = ashr exact i64 %256, 3
  %258 = add nsw i64 %257, 1
  %259 = icmp ugt i64 %258, 2305843009213693951
  br i1 %259, label %260, label %262

260:                                              ; preds = %253
  %261 = bitcast %"class.std::__1::vector.910"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %261) #12
  unreachable

262:                                              ; preds = %253
  %263 = sub i64 %248, %255
  %264 = ashr exact i64 %263, 3
  %265 = icmp ult i64 %264, 1152921504606846975
  br i1 %265, label %266, label %274

266:                                              ; preds = %262
  %267 = ashr exact i64 %263, 2
  %268 = icmp ult i64 %267, %258
  %269 = select i1 %268, i64 %258, i64 %267
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %279, label %271

271:                                              ; preds = %266
  %272 = icmp ugt i64 %269, 2305843009213693951
  br i1 %272, label %273, label %274

273:                                              ; preds = %271
  call void @abort() #12
  unreachable

274:                                              ; preds = %271, %262
  %275 = phi i64 [ %269, %271 ], [ 2305843009213693951, %262 ]
  %276 = shl i64 %275, 3
  %277 = call i8* @_Znwm(i64 %276) #10
  %278 = bitcast i8* %277 to %"class.spvtools::opt::Loop"**
  br label %279

279:                                              ; preds = %274, %266
  %280 = phi i64 [ %275, %274 ], [ 0, %266 ]
  %281 = phi i8* [ %277, %274 ], [ null, %266 ]
  %282 = phi %"class.spvtools::opt::Loop"** [ %278, %274 ], [ null, %266 ]
  %283 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %282, i64 %257
  %284 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %282, i64 %280
  %285 = ptrtoint %"class.spvtools::opt::Loop"** %284 to i64
  %286 = bitcast %"class.spvtools::opt::Loop"** %283 to i64*
  store i64 %244, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %283, i64 1
  %288 = ptrtoint %"class.spvtools::opt::Loop"** %287 to i64
  %289 = ptrtoint %"class.spvtools::opt::Loop"** %282 to i64
  %290 = icmp sgt i64 %256, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %279
  %292 = inttoptr i64 %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %292, i64 %256, i1 false) #11
  br label %293

293:                                              ; preds = %291, %279
  store i64 %289, i64* %24, align 16
  store i64 %288, i64* %119, align 8
  store i64 %285, i64* %23, align 16
  %294 = icmp eq i64 %255, 0
  br i1 %294, label %297, label %295

295:                                              ; preds = %293
  %296 = inttoptr i64 %255 to i8*
  call void @_ZdlPv(i8* %296) #10
  br label %297

297:                                              ; preds = %249, %293, %295
  call void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"* nonnull %6) #11
  %298 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %41, align 8
  %299 = icmp eq %"class.spvtools::opt::Loop"* %298, %40
  br i1 %299, label %120, label %242

300:                                              ; preds = %398, %217
  %301 = phi i8 [ 0, %217 ], [ %384, %398 ]
  %302 = icmp ne i8 %301, 0
  %303 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %7, i64 0, i32 4, i32 0
  %304 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %7, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %305 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"class.std::__1::__tree_node.1326"**
  %306 = load %"class.std::__1::__tree_node.1326"*, %"class.std::__1::__tree_node.1326"** %305, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %303, %"class.std::__1::__tree_node.1326"* %306) #11
  %307 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %7, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %308 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %307, align 8
  %309 = icmp eq %"struct.std::__1::__hash_node_base.663"* %308, null
  br i1 %309, label %326, label %310

310:                                              ; preds = %300, %323
  %311 = phi %"struct.std::__1::__hash_node_base.663"* [ %313, %323 ], [ %308, %300 ]
  %312 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %311, i64 0, i32 0
  %313 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %312, align 8
  %314 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %311, i64 2
  %315 = bitcast %"struct.std::__1::__hash_node_base.663"* %314 to %"class.spvtools::opt::SENode"**
  %316 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %315, align 8
  store %"class.spvtools::opt::SENode"* null, %"class.spvtools::opt::SENode"** %315, align 8
  %317 = icmp eq %"class.spvtools::opt::SENode"* %316, null
  br i1 %317, label %323, label %318

318:                                              ; preds = %310
  %319 = bitcast %"class.spvtools::opt::SENode"* %316 to void (%"class.spvtools::opt::SENode"*)***
  %320 = load void (%"class.spvtools::opt::SENode"*)**, void (%"class.spvtools::opt::SENode"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %320, i64 2
  %322 = load void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %321, align 8
  call void %322(%"class.spvtools::opt::SENode"* nonnull %316) #11
  br label %323

323:                                              ; preds = %318, %310
  %324 = bitcast %"struct.std::__1::__hash_node_base.663"* %311 to i8*
  call void @_ZdlPv(i8* %324) #10
  %325 = icmp eq %"struct.std::__1::__hash_node_base.663"* %313, null
  br i1 %325, label %326, label %310

326:                                              ; preds = %323, %300
  %327 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load %"struct.std::__1::__hash_node_base.663"**, %"struct.std::__1::__hash_node_base.663"*** %327, align 8
  store %"struct.std::__1::__hash_node_base.663"** null, %"struct.std::__1::__hash_node_base.663"*** %327, align 8
  %329 = icmp eq %"struct.std::__1::__hash_node_base.663"** %328, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %326
  %331 = bitcast %"struct.std::__1::__hash_node_base.663"** %328 to i8*
  call void @_ZdlPv(i8* %331) #10
  br label %332

332:                                              ; preds = %326, %330
  %333 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %7, i64 0, i32 1, i32 0
  %334 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %335 = bitcast %"class.std::__1::__tree_end_node"* %334 to %"class.std::__1::__tree_node.1335"**
  %336 = load %"class.std::__1::__tree_node.1335"*, %"class.std::__1::__tree_node.1335"** %335, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %333, %"class.std::__1::__tree_node.1335"* %336) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %218) #11
  %337 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %13, align 16
  %338 = icmp eq %"class.spvtools::opt::Loop"** %337, null
  br i1 %338, label %343, label %339

339:                                              ; preds = %332
  %340 = ptrtoint %"class.spvtools::opt::Loop"** %337 to i64
  %341 = bitcast %"class.spvtools::opt::Loop"*** %14 to i64*
  store i64 %340, i64* %341, align 8
  %342 = bitcast %"class.spvtools::opt::Loop"** %337 to i8*
  call void @_ZdlPv(i8* %342) #10
  br label %343

343:                                              ; preds = %332, %339
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  ret i1 %302

344:                                              ; preds = %223, %398
  %345 = phi %"class.spvtools::opt::Loop"** [ %220, %223 ], [ %399, %398 ]
  %346 = phi i8 [ 0, %223 ], [ %384, %398 ]
  %347 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %345, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %224) #11
  call void @llvm.memset.p0i8.i64(i8* align 4 %227, i8 -86, i64 12, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %229, align 8
  call void @_ZN8spvtools3opt11CodeMetrics7AnalyzeERKNS0_4LoopE(%"struct.spvtools::opt::CodeMetrics"* nonnull %8, %"class.spvtools::opt::Loop"* dereferenceable(128) %347) #11
  %348 = call zeroext i1 @_ZNK8spvtools3opt4Loop7IsLCSSAEv(%"class.spvtools::opt::Loop"* %347) #11
  br i1 %348, label %359, label %349

349:                                              ; preds = %344
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %230) #11
  %350 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  store %"class.spvtools::opt::IRContext"* %350, %"class.spvtools::opt::IRContext"** %231, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %347, i64 0, i32 1
  %352 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %351, align 8
  %353 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %352, i64 0, i32 0
  %354 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %353, align 8
  %355 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %350, %"class.spvtools::opt::Function"* %354) #11
  store %"class.spvtools::opt::LoopDescriptor"* %355, %"class.spvtools::opt::LoopDescriptor"** %232, align 8
  store %"class.spvtools::opt::Loop"* %347, %"class.spvtools::opt::Loop"** %233, align 8
  %356 = bitcast %"class.spvtools::opt::BasicBlock"** %351 to i64**
  %357 = load i64*, i64** %356, align 8
  %358 = load i64, i64* %357, align 8
  store i64 %358, i64* %235, align 8
  call void @_ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv(%"class.spvtools::opt::LoopUtils"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %230) #11
  br label %359

359:                                              ; preds = %349, %344
  %360 = call { i8, %"class.spvtools::opt::Loop"* } @_ZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS0_4LoopEPNS0_11CodeMetricsE(%"class.spvtools::opt::LoopPeelingPass"* %0, %"class.spvtools::opt::Loop"* %347, %"struct.spvtools::opt::CodeMetrics"* nonnull %8) #11
  %361 = extractvalue { i8, %"class.spvtools::opt::Loop"* } %360, 0
  %362 = extractvalue { i8, %"class.spvtools::opt::Loop"* } %360, 1
  %363 = icmp eq i8 %361, 0
  %364 = select i1 %363, i8 %346, i8 1
  %365 = icmp eq %"class.spvtools::opt::Loop"* %362, null
  br i1 %365, label %383, label %366

366:                                              ; preds = %359
  %367 = call zeroext i1 @_ZNK8spvtools3opt4Loop7IsLCSSAEv(%"class.spvtools::opt::Loop"* %347) #11
  br i1 %367, label %378, label %368

368:                                              ; preds = %366
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #11
  %369 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  store %"class.spvtools::opt::IRContext"* %369, %"class.spvtools::opt::IRContext"** %237, align 8
  %370 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %347, i64 0, i32 1
  %371 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %370, align 8
  %372 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %371, i64 0, i32 0
  %373 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %372, align 8
  %374 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %369, %"class.spvtools::opt::Function"* %373) #11
  store %"class.spvtools::opt::LoopDescriptor"* %374, %"class.spvtools::opt::LoopDescriptor"** %238, align 8
  store %"class.spvtools::opt::Loop"* %347, %"class.spvtools::opt::Loop"** %239, align 8
  %375 = bitcast %"class.spvtools::opt::BasicBlock"** %370 to i64**
  %376 = load i64*, i64** %375, align 8
  %377 = load i64, i64* %376, align 8
  store i64 %377, i64* %241, align 8
  call void @_ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv(%"class.spvtools::opt::LoopUtils"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %236) #11
  br label %378

378:                                              ; preds = %368, %366
  %379 = call { i8, %"class.spvtools::opt::Loop"* } @_ZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS0_4LoopEPNS0_11CodeMetricsE(%"class.spvtools::opt::LoopPeelingPass"* %0, %"class.spvtools::opt::Loop"* %347, %"struct.spvtools::opt::CodeMetrics"* nonnull %8) #11
  %380 = extractvalue { i8, %"class.spvtools::opt::Loop"* } %379, 0
  %381 = icmp eq i8 %380, 0
  %382 = select i1 %381, i8 %364, i8 1
  br label %383

383:                                              ; preds = %378, %359
  %384 = phi i8 [ %364, %359 ], [ %382, %378 ]
  %385 = load %"struct.std::__1::__hash_node_base.1112"*, %"struct.std::__1::__hash_node_base.1112"** %226, align 8
  %386 = icmp eq %"struct.std::__1::__hash_node_base.1112"* %385, null
  br i1 %386, label %393, label %387

387:                                              ; preds = %383, %387
  %388 = phi %"struct.std::__1::__hash_node_base.1112"* [ %390, %387 ], [ %385, %383 ]
  %389 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1112", %"struct.std::__1::__hash_node_base.1112"* %388, i64 0, i32 0
  %390 = load %"struct.std::__1::__hash_node_base.1112"*, %"struct.std::__1::__hash_node_base.1112"** %389, align 8
  %391 = bitcast %"struct.std::__1::__hash_node_base.1112"* %388 to i8*
  call void @_ZdlPv(i8* %391) #10
  %392 = icmp eq %"struct.std::__1::__hash_node_base.1112"* %390, null
  br i1 %392, label %393, label %387

393:                                              ; preds = %387, %383
  %394 = load %"struct.std::__1::__hash_node_base.1112"**, %"struct.std::__1::__hash_node_base.1112"*** %225, align 8
  store %"struct.std::__1::__hash_node_base.1112"** null, %"struct.std::__1::__hash_node_base.1112"*** %225, align 8
  %395 = icmp eq %"struct.std::__1::__hash_node_base.1112"** %394, null
  br i1 %395, label %398, label %396

396:                                              ; preds = %393
  %397 = bitcast %"struct.std::__1::__hash_node_base.1112"** %394 to i8*
  call void @_ZdlPv(i8* %397) #10
  br label %398

398:                                              ; preds = %393, %396
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %224) #11
  %399 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %345, i64 1
  %400 = icmp eq %"class.spvtools::opt::Loop"** %399, %221
  br i1 %400, label %300, label %344
}

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

declare void @_ZN8spvtools3opt11CodeMetrics7AnalyzeERKNS0_4LoopE(%"struct.spvtools::opt::CodeMetrics"*, %"class.spvtools::opt::Loop"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %"class.spvtools::opt::Loop"* } @_ZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS0_4LoopEPNS0_11CodeMetricsE(%"class.spvtools::opt::LoopPeelingPass"*, %"class.spvtools::opt::Loop"*, %"struct.spvtools::opt::CodeMetrics"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spvtools::opt::Loop"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = alloca %"class.std::__1::function.1049", align 8
  %8 = alloca %"class.spvtools::opt::LoopPeeling", align 8
  %9 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %10 = alloca %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"** %4, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %34

20:                                               ; preds = %3
  %21 = tail call i8* @_Znwm(i64 104) #10
  %22 = bitcast i8* %21 to %"class.spvtools::opt::ScalarEvolutionAnalysis"*
  tail call void @_ZN8spvtools3opt23ScalarEvolutionAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* nonnull %22, %"class.spvtools::opt::IRContext"* %15) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 23
  %24 = ptrtoint i8* %21 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.638"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.638"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::ScalarEvolutionAnalysis"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::unique_ptr.638"* %23 to %"struct.std::__1::default_delete.692"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_(%"struct.std::__1::default_delete.692"* %30, %"class.spvtools::opt::ScalarEvolutionAnalysis"* nonnull %26) #11
  br label %31

31:                                               ; preds = %29, %20
  %32 = load i32, i32* %16, align 8
  %33 = or i32 %32, 256
  store i32 %33, i32* %16, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 23, i32 0, i32 0, i32 0
  %36 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %1) #11
  %39 = icmp eq %"class.spvtools::opt::BasicBlock"* %38, null
  br i1 %39, label %369, label %40

40:                                               ; preds = %34
  %41 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop21FindConditionVariableEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::BasicBlock"* nonnull %38) #11
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  br i1 %42, label %369, label %43

43:                                               ; preds = %40
  %44 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  store i64 0, i64* %5, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8, !noalias !65
  %47 = call zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Instruction"* nonnull %41, %"class.spvtools::opt::Instruction"* %46, i64* nonnull %5, i64* null, i64* null) #11
  %48 = xor i1 %47, true
  %49 = load i64, i64* %5, align 8
  %50 = icmp eq i64 %49, 0
  %51 = or i1 %50, %48
  br i1 %51, label %366, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %6, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %55 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %54, align 8
  %56 = bitcast %"class.std::__1::function.1049"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %7, i64 0, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %7, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopPeelingPass11ProcessLoopEPNS3_4LoopEPNS3_11CodeMetricsEE4$_15S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %57, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %58, align 8
  %59 = call i8* @_Znwm(i64 24) #10, !noalias !68
  %60 = bitcast i8* %59 to %"class.spvtools::opt::Instruction"***
  store %"class.spvtools::opt::Instruction"** %6, %"class.spvtools::opt::Instruction"*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %59, i64 8
  %62 = bitcast i8* %61 to i64*
  store i64 %37, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to %"class.spvtools::opt::LoopPeelingPass"**
  store %"class.spvtools::opt::LoopPeelingPass"* %0, %"class.spvtools::opt::LoopPeelingPass"** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %65, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %55, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 0, i32 3
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp ne i8 %69, 0
  %71 = icmp eq %"class.spvtools::opt::Instruction"* %67, null
  %72 = or i1 %71, %70
  br i1 %72, label %93, label %73

73:                                               ; preds = %52
  %74 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %7, i64 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %84, %73
  %76 = phi %"class.spvtools::opt::Instruction"* [ %88, %84 ], [ %67, %73 ]
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 0, i32 1
  %80 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %79, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 245
  br i1 %83, label %84, label %91

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  %88 = select i1 %87, %"class.spvtools::opt::Instruction"* %80, %"class.spvtools::opt::Instruction"* null
  %89 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %57, align 8
  %90 = call zeroext i1 %89(%"union.std::__1::__function::__policy_storage"* nonnull %74, %"class.spvtools::opt::Instruction"* nonnull %76) #11
  br i1 %90, label %75, label %91

91:                                               ; preds = %84, %78, %75
  %92 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %58, align 8
  br label %93

93:                                               ; preds = %91, %52
  %94 = phi %"struct.std::__1::__function::__policy"* [ %92, %91 ], [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %52 ]
  %95 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %94, i64 0, i32 1
  %96 = load void (i8*)*, void (i8*)** %95, align 8
  %97 = icmp eq void (i8*)* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = load i8*, i8** %65, align 8
  call void %96(i8* %99) #11
  br label %100

100:                                              ; preds = %93, %98
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #11
  %101 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %102 = icmp eq %"class.spvtools::opt::Instruction"* %101, null
  br i1 %102, label %145, label %103

103:                                              ; preds = %100
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = trunc i32 %106 to i16
  %108 = icmp slt i16 %107, 0
  br i1 %108, label %125, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 5
  %111 = call i8* @_Znwm(i64 240) #10
  %112 = bitcast i8* %111 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %112, %"class.std::__1::function"* dereferenceable(32) %110, %"class.spvtools::opt::IRContext"* %104) #11
  %113 = ptrtoint i8* %111 to i64
  %114 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 20
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %115, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.480"* %114 to i64*
  store i64 %113, i64* %117, align 8
  %118 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %116, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %116) #11
  %120 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %116 to i8*
  call void @_ZdlPv(i8* %120) #10
  br label %121

121:                                              ; preds = %119, %109
  %122 = load i32, i32* %105, align 8
  %123 = or i32 %122, 32768
  store i32 %123, i32* %105, align 8
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  br label %125

125:                                              ; preds = %103, %121
  %126 = phi %"class.spvtools::opt::Instruction"* [ %101, %103 ], [ %124, %121 ]
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 20, i32 0, i32 0, i32 0
  %128 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 3
  %130 = load i8, i8* %129, align 4, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %125
  %133 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %126, i32 0) #11
  br label %134

134:                                              ; preds = %125, %132
  %135 = phi i32 [ %133, %132 ], [ 0, %125 ]
  %136 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %128, i32 %135) #11
  %137 = bitcast %"class.spvtools::opt::analysis::Type"* %136 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %138 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %137, align 8
  %139 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %138, i64 10
  %140 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %139, align 8
  %141 = call %"class.spvtools::opt::analysis::Integer"* %140(%"class.spvtools::opt::analysis::Type"* %136) #11
  %142 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %141, i64 0, i32 2
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp ne i8 %143, 0
  br label %145

145:                                              ; preds = %100, %134
  %146 = phi i1 [ %144, %134 ], [ false, %100 ]
  %147 = bitcast %"class.spvtools::opt::LoopPeeling"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %147) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %147, i8* align 8 bitcast ({ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::Loop"*, i8, [7 x i8], %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_map" }* @__const._ZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS0_4LoopEPNS0_11CodeMetricsE.peeler to i8*), i64 136, i1 false)
  %148 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %4, align 8
  %149 = bitcast %"class.spvtools::opt::InstructionBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %149) #11
  %150 = bitcast %"class.spvtools::opt::IRContext"** %14 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %148, i64 0, i32 1
  %153 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %152, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %153, i64 0, i32 2, i32 0, i32 1
  %155 = ptrtoint %"class.spvtools::opt::Instruction"* %154 to i64
  %156 = bitcast %"class.spvtools::opt::InstructionBuilder"* %9 to i64*
  store i64 %151, i64* %156, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %9, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %153, %"class.spvtools::opt::BasicBlock"** %157, align 8
  %158 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %9, i64 0, i32 2
  %159 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %158 to i64*
  store i64 %155, i64* %159, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %9, i64 0, i32 3
  store i32 3, i32* %160, align 8
  %161 = load i64, i64* %5, align 8
  %162 = trunc i64 %161 to i32
  %163 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %9, i32 %162, i1 zeroext %146)
  %164 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  call void @_ZN8spvtools3opt11LoopPeelingC2EPNS0_4LoopEPNS0_11InstructionES5_(%"class.spvtools::opt::LoopPeeling"* nonnull %8, %"class.spvtools::opt::Loop"* %148, %"class.spvtools::opt::Instruction"* %163, %"class.spvtools::opt::Instruction"* %164)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %149) #11
  %165 = call zeroext i1 @_ZNK8spvtools3opt11LoopPeeling11CanPeelLoopEv(%"class.spvtools::opt::LoopPeeling"* nonnull %8)
  br i1 %165, label %166, label %347

166:                                              ; preds = %145
  %167 = bitcast %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #11
  %168 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %10, i64 0, i32 1
  %169 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %10, i64 0, i32 2
  %170 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %10, i64 0, i32 3
  %171 = load i64, i64* %5, align 8
  %172 = bitcast %"class.spvtools::opt::Loop"* %148 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %10 to i64*
  store i64 %173, i64* %174, align 8
  store %"class.spvtools::opt::Loop"* %148, %"class.spvtools::opt::Loop"** %168, align 8
  %175 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"** %169 to i64*
  store i64 %37, i64* %175, align 8
  store i64 %171, i64* %170, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %148, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %177 = bitcast %"struct.std::__1::__hash_node_base.922"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %166
  %181 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %193

182:                                              ; preds = %304, %166
  %183 = phi i32 [ 0, %166 ], [ %305, %304 ]
  %184 = phi i32 [ 0, %166 ], [ %306, %304 ]
  %185 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #11
  %186 = icmp eq i32 %184, 0
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = icmp ult i32 %184, %183
  %190 = select i1 %189, i32 %183, i32 %184
  store i32 %190, i32* %11, align 4
  %191 = select i1 %189, i32 2, i32 %188
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %344, label %310

193:                                              ; preds = %180, %304
  %194 = phi i64 [ %178, %180 ], [ %308, %304 ]
  %195 = phi i32 [ 0, %180 ], [ %306, %304 ]
  %196 = phi i32 [ 0, %180 ], [ %305, %304 ]
  %197 = inttoptr i64 %194 to %"struct.std::__1::__hash_node.1159"*
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node.1159", %"struct.std::__1::__hash_node.1159"* %197, i64 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %181, align 8
  %201 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %200, i64 0, i32 4
  %202 = load i8, i8* %201, align 1, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %209, label %204

204:                                              ; preds = %193
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %200, i64 0, i32 3
  %206 = load i8, i8* %205, align 4, !range !2
  %207 = zext i8 %206 to i32
  %208 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %200, i32 %207) #11
  br label %209

209:                                              ; preds = %193, %204
  %210 = phi i32 [ %208, %204 ], [ 0, %193 ]
  %211 = icmp eq i32 %199, %210
  br i1 %211, label %304, label %212

212:                                              ; preds = %209
  %213 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %214 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %213, i64 0, i32 11
  %215 = load i32, i32* %214, align 8
  %216 = and i32 %215, 16
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %234

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %213, i64 0, i32 4, i32 0, i32 0, i32 0
  %220 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %219, align 8
  %221 = call i8* @_Znwm(i64 400) #10
  %222 = bitcast i8* %221 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %222, %"class.spvtools::opt::Module"* %220) #11
  %223 = ptrtoint i8* %221 to i64
  %224 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %213, i64 0, i32 15
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %225, align 8
  %227 = bitcast %"class.std::__1::unique_ptr.273"* %224 to i64*
  store i64 %223, i64* %227, align 8
  %228 = icmp eq %"class.spvtools::opt::CFG"* %226, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %218
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %226) #11
  %230 = bitcast %"class.spvtools::opt::CFG"* %226 to i8*
  call void @_ZdlPv(i8* %230) #10
  br label %231

231:                                              ; preds = %229, %218
  %232 = load i32, i32* %214, align 8
  %233 = or i32 %232, 16
  store i32 %233, i32* %214, align 8
  br label %234

234:                                              ; preds = %212, %231
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %213, i64 0, i32 15, i32 0, i32 0, i32 0
  %236 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %235, align 8
  %237 = zext i32 %199 to i64
  %238 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %236, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %289, label %241

241:                                              ; preds = %234
  %242 = call i64 @llvm.ctpop.i64(i64 %239) #11, !range !3
  %243 = icmp ugt i64 %242, 1
  br i1 %243, label %247, label %244

244:                                              ; preds = %241
  %245 = add i64 %239, 4294967295
  %246 = and i64 %245, %237
  br label %251

247:                                              ; preds = %241
  %248 = icmp ugt i64 %239, %237
  br i1 %248, label %251, label %249

249:                                              ; preds = %247
  %250 = urem i64 %237, %239
  br label %251

251:                                              ; preds = %249, %247, %244
  %252 = phi i64 [ %246, %244 ], [ %250, %249 ], [ %237, %247 ]
  %253 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %236, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %253, align 8
  %255 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %254, i64 %252
  %256 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %255, align 8
  %257 = icmp eq %"struct.std::__1::__hash_node_base.333"* %256, null
  br i1 %257, label %289, label %258

258:                                              ; preds = %251
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %256, i64 0, i32 0
  %260 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %259, align 8
  %261 = icmp eq %"struct.std::__1::__hash_node_base.333"* %260, null
  br i1 %261, label %289, label %262

262:                                              ; preds = %258
  %263 = add i64 %239, -1
  br label %264

264:                                              ; preds = %285, %262
  %265 = phi %"struct.std::__1::__hash_node_base.333"* [ %260, %262 ], [ %287, %285 ]
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %265, i64 1
  %267 = bitcast %"struct.std::__1::__hash_node_base.333"* %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = icmp eq i64 %268, %237
  br i1 %269, label %280, label %270

270:                                              ; preds = %264
  br i1 %243, label %273, label %271

271:                                              ; preds = %270
  %272 = and i64 %268, %263
  br label %277

273:                                              ; preds = %270
  %274 = icmp ult i64 %268, %239
  br i1 %274, label %277, label %275

275:                                              ; preds = %273
  %276 = urem i64 %268, %239
  br label %277

277:                                              ; preds = %275, %273, %271
  %278 = phi i64 [ %272, %271 ], [ %276, %275 ], [ %268, %273 ]
  %279 = icmp eq i64 %278, %252
  br i1 %279, label %285, label %289

280:                                              ; preds = %264
  %281 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %265, i64 2
  %282 = bitcast %"struct.std::__1::__hash_node_base.333"* %281 to i32*
  %283 = load i32, i32* %282, align 4
  %284 = icmp eq i32 %283, %199
  br i1 %284, label %290, label %285

285:                                              ; preds = %280, %277
  %286 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %265, i64 0, i32 0
  %287 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %286, align 8
  %288 = icmp eq %"struct.std::__1::__hash_node_base.333"* %287, null
  br i1 %288, label %289, label %264

289:                                              ; preds = %258, %251, %234, %285, %277
  call void @abort() #12
  unreachable

290:                                              ; preds = %280
  %291 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %265, i64 3
  %292 = bitcast %"struct.std::__1::__hash_node_base.333"* %291 to %"class.spvtools::opt::BasicBlock"**
  %293 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %292, align 8
  %294 = call i64 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo14GetPeelingInfoEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nonnull %10, %"class.spvtools::opt::BasicBlock"* %293)
  %295 = trunc i64 %294 to i32
  %296 = lshr i64 %294, 32
  %297 = trunc i64 %296 to i32
  switch i32 %295, label %301 [
    i32 0, label %304
    i32 1, label %298
  ]

298:                                              ; preds = %290
  %299 = icmp ult i32 %195, %297
  %300 = select i1 %299, i32 %297, i32 %195
  br label %304

301:                                              ; preds = %290
  %302 = icmp ult i32 %196, %297
  %303 = select i1 %302, i32 %297, i32 %196
  br label %304

304:                                              ; preds = %290, %301, %298, %209
  %305 = phi i32 [ %196, %209 ], [ %303, %301 ], [ %196, %298 ], [ %196, %290 ]
  %306 = phi i32 [ %195, %209 ], [ %195, %301 ], [ %300, %298 ], [ %195, %290 ]
  %307 = inttoptr i64 %194 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %182, label %193

310:                                              ; preds = %182
  %311 = zext i32 %190 to i64
  %312 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %2, i64 0, i32 1
  %313 = load i64, i64* %312, align 8
  %314 = mul i64 %313, %311
  %315 = load i64, i64* @_ZN8spvtools3opt15LoopPeelingPass20code_grow_threshold_E, align 8
  %316 = icmp ugt i64 %314, %315
  br i1 %316, label %344, label %317

317:                                              ; preds = %310
  store i64 %314, i64* %312, align 8
  %318 = icmp eq i32 %191, 1
  br i1 %318, label %319, label %332

319:                                              ; preds = %317
  call void @_ZN8spvtools3opt11LoopPeeling10PeelBeforeEj(%"class.spvtools::opt::LoopPeeling"* nonnull %8, i32 %190)
  %320 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 1
  %321 = load %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"*, %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"** %320, align 8
  %322 = icmp eq %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"* %321, null
  br i1 %322, label %326, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats", %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"* %321, i64 0, i32 0
  %325 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %325) #11
  store i32 1, i32* %12, align 4
  call void @_ZNSt3__16vectorINS_5tupleIJPKN8spvtools3opt4LoopENS3_15LoopPeelingPass13PeelDirectionEjEEENS_9allocatorIS9_EEE12emplace_backIJRPS4_S8_RjEEEvDpOT_(%"class.std::__1::vector.1087"* %324, %"class.spvtools::opt::Loop"** nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %11)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %325) #11
  br label %326

326:                                              ; preds = %319, %323
  %327 = icmp eq i32 %183, 0
  br i1 %327, label %344, label %328

328:                                              ; preds = %326
  %329 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %8, i64 0, i32 2
  %330 = bitcast %"class.spvtools::opt::Loop"** %329 to i64*
  %331 = load i64, i64* %330, align 8
  br label %344

332:                                              ; preds = %317
  call void @_ZN8spvtools3opt11LoopPeeling9PeelAfterEj(%"class.spvtools::opt::LoopPeeling"* nonnull %8, i32 %190)
  %333 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 1
  %334 = load %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"*, %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"** %333, align 8
  %335 = icmp eq %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"* %334, null
  br i1 %335, label %339, label %336

336:                                              ; preds = %332
  %337 = getelementptr inbounds %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats", %"struct.spvtools::opt::LoopPeelingPass::LoopPeelingStats"* %334, i64 0, i32 0
  %338 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %338) #11
  store i32 2, i32* %13, align 4
  call void @_ZNSt3__16vectorINS_5tupleIJPKN8spvtools3opt4LoopENS3_15LoopPeelingPass13PeelDirectionEjEEENS_9allocatorIS9_EEE12emplace_backIJRPS4_S8_RjEEEvDpOT_(%"class.std::__1::vector.1087"* %337, %"class.spvtools::opt::Loop"** nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %11)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %338) #11
  br label %339

339:                                              ; preds = %332, %336
  br i1 %186, label %344, label %340

340:                                              ; preds = %339
  %341 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %8, i64 0, i32 5
  %342 = bitcast %"class.spvtools::opt::Loop"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  br label %344

344:                                              ; preds = %310, %182, %328, %340, %339, %326
  %345 = phi i8 [ 1, %326 ], [ 1, %339 ], [ 1, %340 ], [ 1, %328 ], [ 0, %182 ], [ 0, %310 ]
  %346 = phi i64 [ 0, %326 ], [ 0, %339 ], [ %343, %340 ], [ %331, %328 ], [ 0, %182 ], [ 0, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #11
  br label %347

347:                                              ; preds = %145, %344
  %348 = phi i8 [ %345, %344 ], [ 0, %145 ]
  %349 = phi i64 [ %346, %344 ], [ 0, %145 ]
  %350 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %8, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %351 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %350, align 8
  %352 = icmp eq %"struct.std::__1::__hash_node_base"* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %347, %353
  %354 = phi %"struct.std::__1::__hash_node_base"* [ %356, %353 ], [ %351, %347 ]
  %355 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %354, i64 0, i32 0
  %356 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %355, align 8
  %357 = bitcast %"struct.std::__1::__hash_node_base"* %354 to i8*
  call void @_ZdlPv(i8* %357) #10
  %358 = icmp eq %"struct.std::__1::__hash_node_base"* %356, null
  br i1 %358, label %359, label %353

359:                                              ; preds = %353, %347
  %360 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %8, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %360, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %360, align 8
  %362 = icmp eq %"struct.std::__1::__hash_node_base"** %361, null
  br i1 %362, label %365, label %363

363:                                              ; preds = %359
  %364 = bitcast %"struct.std::__1::__hash_node_base"** %361 to i8*
  call void @_ZdlPv(i8* %364) #10
  br label %365

365:                                              ; preds = %359, %363
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %147) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  br label %366

366:                                              ; preds = %43, %365
  %367 = phi i8 [ %348, %365 ], [ 0, %43 ]
  %368 = phi i64 [ %349, %365 ], [ 0, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  br label %369

369:                                              ; preds = %40, %34, %366
  %370 = phi i8 [ %367, %366 ], [ 0, %34 ], [ 0, %40 ]
  %371 = phi i64 [ %368, %366 ], [ 0, %34 ], [ 0, %40 ]
  %372 = insertvalue { i8, %"class.spvtools::opt::Loop"* } undef, i8 %370, 0
  %373 = inttoptr i64 %371 to %"class.spvtools::opt::Loop"*
  %374 = insertvalue { i8, %"class.spvtools::opt::Loop"* } %372, %"class.spvtools::opt::Loop"* %373, 1
  ret { i8, %"class.spvtools::opt::Loop"* } %374
}

declare %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop21FindConditionVariableEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i64*, i64*, i64*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11LoopPeelingC2EPNS0_4LoopEPNS0_11InstructionES5_(%"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 0
  %6 = bitcast %"class.spvtools::opt::Loop"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.spvtools::opt::LoopPeeling"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 0
  store %"class.spvtools::opt::IRContext"* %9, %"class.spvtools::opt::IRContext"** %10, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %13 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %13, i64 0, i32 0
  %15 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %14, align 8
  %16 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %9, %"class.spvtools::opt::Function"* %15) #11
  store %"class.spvtools::opt::LoopDescriptor"* %16, %"class.spvtools::opt::LoopDescriptor"** %11, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 2
  store %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 1, i32 3
  %19 = bitcast %"class.spvtools::opt::BasicBlock"** %12 to i64**
  %20 = load i64*, i64** %19, align 8
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Function"** %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 2
  store %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"** %23, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 3
  %25 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Instruction"* %2) #11
  %26 = select i1 %25, %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"* %2
  store %"class.spvtools::opt::Instruction"* %26, %"class.spvtools::opt::Instruction"** %24, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 4
  store %"class.spvtools::opt::analysis::Integer"* null, %"class.spvtools::opt::analysis::Integer"** %27, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 7
  store %"class.spvtools::opt::Instruction"* %3, %"class.spvtools::opt::Instruction"** %28, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 8
  %30 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 9, i32 0, i32 3
  %31 = bitcast %"class.std::__1::__compressed_pair.81"* %30 to i32*
  %32 = bitcast %"class.spvtools::opt::Instruction"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 40, i1 false)
  store i32 1065353216, i32* %31, align 4
  %33 = icmp eq %"class.spvtools::opt::Instruction"* %26, null
  br i1 %33, label %74, label %34

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  %39 = trunc i32 %38 to i16
  %40 = icmp slt i16 %39, 0
  br i1 %40, label %57, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 5
  %43 = tail call i8* @_Znwm(i64 240) #10
  %44 = bitcast i8* %43 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %44, %"class.std::__1::function"* dereferenceable(32) %42, %"class.spvtools::opt::IRContext"* %36) #11
  %45 = ptrtoint i8* %43 to i64
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 20
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %47, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.480"* %46 to i64*
  store i64 %45, i64* %49, align 8
  %50 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %48, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %41
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48) #11
  %52 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %48 to i8*
  tail call void @_ZdlPv(i8* %52) #10
  br label %53

53:                                               ; preds = %51, %41
  %54 = load i32, i32* %37, align 8
  %55 = or i32 %54, 32768
  store i32 %55, i32* %37, align 8
  %56 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  br label %57

57:                                               ; preds = %34, %53
  %58 = phi %"class.spvtools::opt::Instruction"* [ %26, %34 ], [ %56, %53 ]
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 20, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 3
  %62 = load i8, i8* %61, align 4, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %57
  %65 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %58, i32 0) #11
  br label %66

66:                                               ; preds = %57, %64
  %67 = phi i32 [ %65, %64 ], [ 0, %57 ]
  %68 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %60, i32 %67) #11
  %69 = bitcast %"class.spvtools::opt::analysis::Type"* %68 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %70 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %70, i64 10
  %72 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %71, align 8
  %73 = tail call %"class.spvtools::opt::analysis::Integer"* %72(%"class.spvtools::opt::analysis::Type"* %68) #11
  store %"class.spvtools::opt::analysis::Integer"* %73, %"class.spvtools::opt::analysis::Integer"** %27, align 8
  br label %74

74:                                               ; preds = %4, %66
  tail call void @_ZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEv(%"class.spvtools::opt::LoopPeeling"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt11LoopPeeling11CanPeelLoopEv(%"class.spvtools::opt::LoopPeeling"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %9, align 8
  %11 = tail call i8* @_Znwm(i64 400) #10
  %12 = bitcast i8* %11 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %12, %"class.spvtools::opt::Module"* %10) #11
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 15
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.273"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.spvtools::opt::CFG"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %8
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %16) #11
  %20 = bitcast %"class.spvtools::opt::CFG"* %16 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %19, %8
  %22 = load i32, i32* %4, align 8
  %23 = or i32 %22, 16
  store i32 %23, i32* %4, align 8
  br label %24

24:                                               ; preds = %1, %21
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 15, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 3
  %28 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %28, null
  br i1 %29, label %140, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 4
  %32 = load %"class.spvtools::opt::analysis::Integer"*, %"class.spvtools::opt::analysis::Integer"** %31, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::Integer"* %32, null
  br i1 %33, label %140, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 32
  br i1 %37, label %38, label %140

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 2
  %40 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %39, align 8
  %41 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop7IsLCSSAEv(%"class.spvtools::opt::Loop"* %40) #11
  br i1 %41, label %42, label %140

42:                                               ; preds = %38
  %43 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %39, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %43, i64 0, i32 3
  %45 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %44, align 8
  %46 = icmp eq %"class.spvtools::opt::BasicBlock"* %45, null
  br i1 %46, label %140, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %45, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %48, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 4
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 3
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = zext i8 %55 to i32
  %57 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %49, i32 %56) #11
  br label %58

58:                                               ; preds = %47, %53
  %59 = phi i32 [ %57, %53 ], [ 0, %47 ]
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %26, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %112, label %64

64:                                               ; preds = %58
  %65 = tail call i64 @llvm.ctpop.i64(i64 %62) #11, !range !3
  %66 = icmp ugt i64 %65, 1
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = add i64 %62, 4294967295
  %69 = and i64 %68, %60
  br label %74

70:                                               ; preds = %64
  %71 = icmp ugt i64 %62, %60
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = urem i64 %60, %62
  br label %74

74:                                               ; preds = %72, %70, %67
  %75 = phi i64 [ %69, %67 ], [ %73, %72 ], [ %60, %70 ]
  %76 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %26, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %77, i64 %75
  %79 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.309"* %79, null
  br i1 %80, label %112, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %79, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.309"* %83, null
  br i1 %84, label %112, label %85

85:                                               ; preds = %81
  %86 = add i64 %62, -1
  br label %87

87:                                               ; preds = %108, %85
  %88 = phi %"struct.std::__1::__hash_node_base.309"* [ %83, %85 ], [ %110, %108 ]
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %88, i64 1
  %90 = bitcast %"struct.std::__1::__hash_node_base.309"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, %60
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  br i1 %66, label %96, label %94

94:                                               ; preds = %93
  %95 = and i64 %91, %86
  br label %100

96:                                               ; preds = %93
  %97 = icmp ult i64 %91, %62
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %91, %62
  br label %100

100:                                              ; preds = %98, %96, %94
  %101 = phi i64 [ %95, %94 ], [ %99, %98 ], [ %91, %96 ]
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %108, label %112

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %88, i64 2
  %105 = bitcast %"struct.std::__1::__hash_node_base.309"* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, %59
  br i1 %107, label %113, label %108

108:                                              ; preds = %103, %100
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %88, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.309"* %110, null
  br i1 %111, label %112, label %87

112:                                              ; preds = %108, %100, %81, %74, %58
  tail call void @abort() #12
  unreachable

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %88, i64 3
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %88, i64 4
  %116 = bitcast %"struct.std::__1::__hash_node_base.309"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %114 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %117, %119
  %121 = icmp eq i64 %120, 4
  br i1 %121, label %122, label %140

122:                                              ; preds = %113
  %123 = tail call zeroext i1 @_ZNK8spvtools3opt11LoopPeeling30IsConditionCheckSideEffectFreeEv(%"class.spvtools::opt::LoopPeeling"* %0)
  br i1 %123, label %124, label %140

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %140, label %128

128:                                              ; preds = %124
  %129 = ptrtoint %"struct.std::__1::__hash_node_base"* %126 to i64
  br label %130

130:                                              ; preds = %136, %128
  %131 = phi i64 [ %138, %136 ], [ %129, %128 ]
  %132 = inttoptr i64 %131 to %"struct.std::__1::__hash_node.1153"*
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node.1153", %"struct.std::__1::__hash_node.1153"* %132, i64 0, i32 2, i32 0, i32 1
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %133, align 8
  %135 = icmp eq %"class.spvtools::opt::Instruction"* %134, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %130
  %137 = inttoptr i64 %131 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %130

140:                                              ; preds = %136, %130, %124, %122, %113, %42, %38, %34, %30, %24
  %141 = phi i1 [ false, %24 ], [ false, %30 ], [ false, %34 ], [ false, %38 ], [ false, %42 ], [ false, %113 ], [ false, %122 ], [ true, %124 ], [ false, %130 ], [ true, %136 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo14GetPeelingInfoEPNS0_10BasicBlockE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readonly, %"class.spvtools::opt::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8, !noalias !73
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 250
  br i1 %7, label %8, label %191

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 0
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %40

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #10
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #11
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %28 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #11
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  %39 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8, !noalias !76
  br label %40

40:                                               ; preds = %8, %36
  %41 = phi %"class.spvtools::opt::Instruction"* [ %4, %8 ], [ %39, %36 ]
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %42, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 3
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 4
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i32 1, i32 2
  %51 = xor i1 %49, true
  %52 = zext i1 %51 to i32
  %53 = select i1 %46, i32 %52, i32 %50
  %54 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %41, i32 %53) #11
  %55 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %54) #11
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %55, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, -170
  %59 = icmp ult i32 %58, 10
  br i1 %59, label %60, label %191

60:                                               ; preds = %40
  %61 = tail call i32 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo28GetFirstLoopInvariantOperandEPNS0_11InstructionE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, %"class.spvtools::opt::Instruction"* %55)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %191, label %63

63:                                               ; preds = %60
  %64 = tail call i32 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo31GetFirstNonLoopInvariantOperandEPNS0_11InstructionE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, %"class.spvtools::opt::Instruction"* %55)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %191, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 2
  %68 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %55, i64 0, i32 3
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %55, i64 0, i32 4
  %73 = load i8, i8* %72, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = select i1 %74, i32 1, i32 2
  %76 = xor i1 %74, true
  %77 = zext i1 %76 to i32
  %78 = select i1 %71, i32 %77, i32 %75
  %79 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %55, i32 %78) #11
  %80 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %79) #11
  %81 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %68, %"class.spvtools::opt::Instruction"* %80) #11
  %82 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %81, i64 0, i32 2
  %83 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %82, align 8
  %84 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %83, %"class.spvtools::opt::SENode"* %81) #11
  %85 = ptrtoint %"class.spvtools::opt::SENode"* %84 to i64
  %86 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"** %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.spvtools::opt::SENode"* %84 to i32 (%"class.spvtools::opt::SENode"*)***
  %89 = load i32 (%"class.spvtools::opt::SENode"*)**, i32 (%"class.spvtools::opt::SENode"*)*** %88, align 8
  %90 = load i32 (%"class.spvtools::opt::SENode"*)*, i32 (%"class.spvtools::opt::SENode"*)** %89, align 8
  %91 = tail call i32 %90(%"class.spvtools::opt::SENode"* %84) #11
  %92 = icmp eq i32 %91, 6
  br i1 %92, label %191, label %93

93:                                               ; preds = %66
  %94 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %67, align 8
  %95 = load i8, i8* %69, align 4, !range !2
  %96 = icmp eq i8 %95, 0
  %97 = load i8, i8* %72, align 1, !range !2
  %98 = icmp eq i8 %97, 0
  %99 = select i1 %98, i32 1, i32 2
  %100 = xor i1 %98, true
  %101 = zext i1 %100 to i32
  %102 = select i1 %96, i32 %101, i32 %99
  %103 = add nuw nsw i32 %102, 1
  %104 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %55, i32 %103) #11
  %105 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %43, i32 %104) #11
  %106 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %94, %"class.spvtools::opt::Instruction"* %105) #11
  %107 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %106, i64 0, i32 2
  %108 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %107, align 8
  %109 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %108, %"class.spvtools::opt::SENode"* %106) #11
  %110 = ptrtoint %"class.spvtools::opt::SENode"* %109 to i64
  %111 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"** %107 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.spvtools::opt::SENode"* %109 to i32 (%"class.spvtools::opt::SENode"*)***
  %114 = load i32 (%"class.spvtools::opt::SENode"*)**, i32 (%"class.spvtools::opt::SENode"*)*** %113, align 8
  %115 = load i32 (%"class.spvtools::opt::SENode"*)*, i32 (%"class.spvtools::opt::SENode"*)** %114, align 8
  %116 = tail call i32 %115(%"class.spvtools::opt::SENode"* %109) #11
  %117 = icmp eq i32 %116, 6
  br i1 %117, label %191, label %118

118:                                              ; preds = %93
  %119 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %67, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 1
  %121 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %120, align 8
  %122 = tail call zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis15IsLoopInvariantEPKNS0_4LoopEPKNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %119, %"class.spvtools::opt::Loop"* %121, %"class.spvtools::opt::SENode"* %84) #11
  %123 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %67, align 8
  %124 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %120, align 8
  %125 = tail call zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis15IsLoopInvariantEPKNS0_4LoopEPKNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %123, %"class.spvtools::opt::Loop"* %124, %"class.spvtools::opt::SENode"* %109) #11
  %126 = xor i1 %122, %125
  br i1 %126, label %127, label %191

127:                                              ; preds = %118
  br i1 %122, label %144, label %128

128:                                              ; preds = %127
  %129 = bitcast %"class.spvtools::opt::SENode"* %84 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %130 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %130, i64 6
  %132 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %131, align 8
  %133 = tail call %"class.spvtools::opt::SERecurrentNode"* %132(%"class.spvtools::opt::SENode"* %84) #11
  %134 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %133, null
  br i1 %134, label %191, label %135

135:                                              ; preds = %128
  %136 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %129, align 8
  %137 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %136, i64 6
  %138 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %137, align 8
  %139 = tail call %"class.spvtools::opt::SERecurrentNode"* %138(%"class.spvtools::opt::SENode"* %84) #11
  %140 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %139, i64 0, i32 3
  %141 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %140, align 8
  %142 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %120, align 8
  %143 = icmp eq %"class.spvtools::opt::Loop"* %141, %142
  br i1 %143, label %144, label %191

144:                                              ; preds = %135, %127
  br i1 %125, label %161, label %145

145:                                              ; preds = %144
  %146 = bitcast %"class.spvtools::opt::SENode"* %109 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %147 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %146, align 8
  %148 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %147, i64 6
  %149 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %148, align 8
  %150 = tail call %"class.spvtools::opt::SERecurrentNode"* %149(%"class.spvtools::opt::SENode"* %109) #11
  %151 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %150, null
  br i1 %151, label %191, label %152

152:                                              ; preds = %145
  %153 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %146, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %153, i64 6
  %155 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %154, align 8
  %156 = tail call %"class.spvtools::opt::SERecurrentNode"* %155(%"class.spvtools::opt::SENode"* %109) #11
  %157 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %156, i64 0, i32 3
  %158 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %157, align 8
  %159 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %120, align 8
  %160 = icmp eq %"class.spvtools::opt::Loop"* %158, %159
  br i1 %160, label %161, label %191

161:                                              ; preds = %152, %144
  %162 = load i32, i32* %56, align 8
  switch i32 %162, label %191 [
    i32 170, label %163
    i32 171, label %163
    i32 172, label %170
    i32 173, label %170
    i32 176, label %167
    i32 177, label %167
    i32 174, label %168
    i32 175, label %168
    i32 178, label %169
    i32 179, label %169
  ]

163:                                              ; preds = %161, %161
  %164 = inttoptr i64 %87 to %"class.spvtools::opt::ScalarEvolutionAnalysis"*
  %165 = inttoptr i64 %112 to %"class.spvtools::opt::ScalarEvolutionAnalysis"*
  %166 = tail call i64 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo14HandleEqualityENS0_11SExpressionES3_(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, %"class.spvtools::opt::SENode"* %84, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %164, %"class.spvtools::opt::SENode"* %109, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %165)
  br label %191

167:                                              ; preds = %161, %161
  br label %170

168:                                              ; preds = %161, %161
  br label %170

169:                                              ; preds = %161, %161
  br label %170

170:                                              ; preds = %161, %161, %169, %168, %167
  %171 = phi i32 [ 2, %169 ], [ 3, %168 ], [ 0, %167 ], [ 1, %161 ], [ 1, %161 ]
  br i1 %122, label %177, label %172

172:                                              ; preds = %170
  switch i32 %171, label %176 [
    i32 0, label %177
    i32 1, label %173
    i32 2, label %174
    i32 3, label %175
  ]

173:                                              ; preds = %172
  br label %177

174:                                              ; preds = %172
  br label %177

175:                                              ; preds = %172
  br label %177

176:                                              ; preds = %172
  unreachable

177:                                              ; preds = %172, %170, %173, %174, %175
  %178 = phi i64 [ %87, %170 ], [ %112, %175 ], [ %112, %174 ], [ %112, %173 ], [ %112, %172 ]
  %179 = phi i64 [ %85, %170 ], [ %110, %175 ], [ %110, %174 ], [ %110, %173 ], [ %110, %172 ]
  %180 = phi i64 [ %110, %170 ], [ %85, %175 ], [ %85, %174 ], [ %85, %173 ], [ %85, %172 ]
  %181 = phi i32 [ %171, %170 ], [ 2, %175 ], [ 3, %174 ], [ 0, %173 ], [ 1, %172 ]
  %182 = inttoptr i64 %179 to %"class.spvtools::opt::SENode"*
  %183 = inttoptr i64 %178 to %"class.spvtools::opt::ScalarEvolutionAnalysis"*
  %184 = inttoptr i64 %180 to %"class.spvtools::opt::SENode"*
  %185 = inttoptr i64 %180 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %186 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %185, align 8
  %187 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %186, i64 6
  %188 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %187, align 8
  %189 = tail call %"class.spvtools::opt::SERecurrentNode"* %188(%"class.spvtools::opt::SENode"* %184) #11
  %190 = tail call i64 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo16HandleInequalityENS1_11CmpOperatorENS0_11SExpressionEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i32 %181, %"class.spvtools::opt::SENode"* %182, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %183, %"class.spvtools::opt::SERecurrentNode"* %189)
  br label %191

191:                                              ; preds = %118, %66, %161, %145, %152, %128, %135, %93, %177, %163, %63, %60, %40, %2
  %192 = phi i64 [ 0, %2 ], [ 0, %40 ], [ 0, %60 ], [ 0, %63 ], [ 0, %66 ], [ %190, %177 ], [ %166, %163 ], [ 0, %93 ], [ 0, %118 ], [ 0, %135 ], [ 0, %128 ], [ 0, %152 ], [ 0, %145 ], [ 0, %161 ]
  ret i64 %192
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_5tupleIJPKN8spvtools3opt4LoopENS3_15LoopPeelingPass13PeelDirectionEjEEENS_9allocatorIS9_EEE12emplace_backIJRPS4_S8_RjEEEvDpOT_(%"class.std::__1::vector.1087"*, %"class.spvtools::opt::Loop"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.1087", %"class.std::__1::vector.1087"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1087", %"class.std::__1::vector.1087"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %7, align 8
  %9 = icmp ult %"class.std::__1::tuple"* %6, %8
  %10 = ptrtoint %"class.std::__1::tuple"* %8 to i64
  br i1 %9, label %11, label %22

11:                                               ; preds = %4
  %12 = bitcast %"class.spvtools::opt::Loop"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  %16 = load i32, i32* %2, align 4
  store i32 %16, i32* %15, align 4
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 2, i32 0
  %18 = load i32, i32* %3, align 4
  store i32 %18, i32* %17, align 4
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 1
  %20 = ptrtoint %"class.std::__1::tuple"* %19 to i64
  %21 = bitcast %"class.std::__1::tuple"** %5 to i64*
  store i64 %20, i64* %21, align 8
  br label %85

22:                                               ; preds = %4
  %23 = ptrtoint %"class.std::__1::tuple"* %6 to i64
  %24 = bitcast %"class.std::__1::tuple"** %5 to i64*
  %25 = bitcast %"class.std::__1::vector.1087"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 4
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 1152921504606846975
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.1087"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %22
  %34 = bitcast %"class.std::__1::tuple"** %7 to i64*
  %35 = sub i64 %10, %26
  %36 = ashr exact i64 %35, 4
  %37 = icmp ult i64 %36, 576460752303423487
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 3
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 1152921504606846975
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 1152921504606846975, %33 ]
  %48 = shl i64 %47, 4
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"class.std::__1::tuple"*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi %"class.std::__1::tuple"* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %53, i64 %28
  %55 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %53, i64 %52
  %56 = ptrtoint %"class.std::__1::tuple"* %55 to i64
  %57 = bitcast %"class.spvtools::opt::Loop"** %1 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::tuple"* %54 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %53, i64 %28, i32 0, i32 1, i32 0
  %61 = load i32, i32* %2, align 4
  store i32 %61, i32* %60, align 4
  %62 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %53, i64 %28, i32 0, i32 2, i32 0
  %63 = load i32, i32* %3, align 4
  store i32 %63, i32* %62, align 4
  %64 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %54, i64 1
  %65 = ptrtoint %"class.std::__1::tuple"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.1087", %"class.std::__1::vector.1087"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %66, align 8
  %68 = load i64, i64* %24, align 8
  %69 = ptrtoint %"class.std::__1::tuple"* %67 to i64
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 4
  %72 = sub nsw i64 0, %71
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %54, i64 %72
  %74 = ptrtoint %"class.std::__1::tuple"* %73 to i64
  %75 = icmp sgt i64 %70, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %51
  %77 = bitcast %"class.std::__1::tuple"* %73 to i8*
  %78 = bitcast %"class.std::__1::tuple"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %70, i1 false) #11
  %79 = load %"class.std::__1::tuple"*, %"class.std::__1::tuple"** %66, align 8
  br label %80

80:                                               ; preds = %76, %51
  %81 = phi %"class.std::__1::tuple"* [ %67, %51 ], [ %79, %76 ]
  store i64 %74, i64* %25, align 8
  store i64 %65, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %82 = icmp eq %"class.std::__1::tuple"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.std::__1::tuple"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #10
  br label %85

85:                                               ; preds = %83, %80, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo28GetFirstLoopInvariantOperandEPNS0_11InstructionE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %5 = bitcast %"struct.spvtools::opt::Operand"** %4 to i64*
  %6 = bitcast %"class.std::__1::vector"* %3 to i64*
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 1
  br label %11

11:                                               ; preds = %100, %2
  %12 = phi i32 [ 0, %2 ], [ %101, %100 ]
  %13 = load i64, i64* %5, align 8
  %14 = load i64, i64* %6, align 8
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 48
  %17 = load i8, i8* %7, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = load i8, i8* %8, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 1, i32 2
  %22 = xor i1 %20, true
  %23 = zext i1 %22 to i32
  %24 = select i1 %18, i32 %23, i32 %21
  %25 = trunc i64 %16 to i32
  %26 = sub i32 %25, %24
  %27 = icmp ult i32 %12, %26
  br i1 %27, label %28, label %113

28:                                               ; preds = %11
  %29 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %30 = add i32 %24, %12
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %30) #11
  %32 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %29, i32 %31)
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %32, null
  br i1 %33, label %100, label %34

34:                                               ; preds = %28
  %35 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %44) #11
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi i32 [ %45, %41 ], [ 0, %34 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %35, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %100, label %52

52:                                               ; preds = %46
  %53 = tail call i64 @llvm.ctpop.i64(i64 %50) #11, !range !3
  %54 = icmp ugt i64 %53, 1
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = add i64 %50, 4294967295
  %57 = and i64 %56, %48
  br label %62

58:                                               ; preds = %52
  %59 = icmp ugt i64 %50, %48
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %48, %50
  br label %62

62:                                               ; preds = %60, %58, %55
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %48, %58 ]
  %64 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %35, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %65, i64 %63
  %67 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.922"* %67, null
  br i1 %68, label %100, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %67, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.922"* %71, null
  br i1 %72, label %100, label %73

73:                                               ; preds = %69
  %74 = add i64 %50, -1
  br label %75

75:                                               ; preds = %96, %73
  %76 = phi %"struct.std::__1::__hash_node_base.922"* [ %71, %73 ], [ %98, %96 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %76, i64 1
  %78 = bitcast %"struct.std::__1::__hash_node_base.922"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, %48
  br i1 %80, label %91, label %81

81:                                               ; preds = %75
  br i1 %54, label %84, label %82

82:                                               ; preds = %81
  %83 = and i64 %79, %74
  br label %88

84:                                               ; preds = %81
  %85 = icmp ult i64 %79, %50
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = urem i64 %79, %50
  br label %88

88:                                               ; preds = %86, %84, %82
  %89 = phi i64 [ %83, %82 ], [ %87, %86 ], [ %79, %84 ]
  %90 = icmp eq i64 %89, %63
  br i1 %90, label %96, label %100

91:                                               ; preds = %75
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %76, i64 2
  %93 = bitcast %"struct.std::__1::__hash_node_base.922"* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, %47
  br i1 %95, label %102, label %96

96:                                               ; preds = %91, %88
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %76, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %100, label %75

100:                                              ; preds = %88, %96, %69, %46, %62, %28
  %101 = add i32 %12, 1
  br label %11

102:                                              ; preds = %91
  %103 = load i8, i8* %7, align 4, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = load i8, i8* %8, align 1, !range !2
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, i32 1, i32 2
  %108 = xor i1 %106, true
  %109 = zext i1 %108 to i32
  %110 = select i1 %104, i32 %109, i32 %107
  %111 = add i32 %110, %12
  %112 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %111) #11
  br label %113

113:                                              ; preds = %11, %102
  %114 = phi i32 [ %112, %102 ], [ 0, %11 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = tail call i8* @_Znwm(i64 104) #10
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::DefUseManager"*
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds i8, i8* %10, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 64
  %18 = getelementptr inbounds i8, i8* %10, i64 96
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %19, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %11, %"class.spvtools::opt::Module"* %9) #11
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %21 = ptrtoint i8* %10 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.62"* %20 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %20 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %27, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %23) #11
  br label %28

28:                                               ; preds = %26, %7
  %29 = load i32, i32* %3, align 8
  %30 = or i32 %29, 1
  store i32 %30, i32* %3, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %33, i32 %1) #11
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::Instruction"* %34)
  ret %"class.spvtools::opt::BasicBlock"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo31GetFirstNonLoopInvariantOperandEPNS0_11InstructionE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %5 = bitcast %"struct.spvtools::opt::Operand"** %4 to i64*
  %6 = bitcast %"class.std::__1::vector"* %3 to i64*
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 1
  br label %11

11:                                               ; preds = %100, %2
  %12 = phi i32 [ 0, %2 ], [ %101, %100 ]
  %13 = load i64, i64* %5, align 8
  %14 = load i64, i64* %6, align 8
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 48
  %17 = load i8, i8* %7, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = load i8, i8* %8, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 1, i32 2
  %22 = xor i1 %20, true
  %23 = zext i1 %22 to i32
  %24 = select i1 %18, i32 %23, i32 %21
  %25 = trunc i64 %16 to i32
  %26 = sub i32 %25, %24
  %27 = icmp ult i32 %12, %26
  br i1 %27, label %28, label %113

28:                                               ; preds = %11
  %29 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %30 = add i32 %24, %12
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %30) #11
  %32 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %29, i32 %31)
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %32, null
  br i1 %33, label %102, label %34

34:                                               ; preds = %28
  %35 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %44) #11
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi i32 [ %45, %41 ], [ 0, %34 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %35, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %102, label %52

52:                                               ; preds = %46
  %53 = tail call i64 @llvm.ctpop.i64(i64 %50) #11, !range !3
  %54 = icmp ugt i64 %53, 1
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = add i64 %50, 4294967295
  %57 = and i64 %56, %48
  br label %62

58:                                               ; preds = %52
  %59 = icmp ugt i64 %50, %48
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %48, %50
  br label %62

62:                                               ; preds = %60, %58, %55
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %48, %58 ]
  %64 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %35, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %65, i64 %63
  %67 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.922"* %67, null
  br i1 %68, label %102, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %67, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.922"* %71, null
  br i1 %72, label %102, label %73

73:                                               ; preds = %69
  %74 = add i64 %50, -1
  br label %75

75:                                               ; preds = %96, %73
  %76 = phi %"struct.std::__1::__hash_node_base.922"* [ %71, %73 ], [ %98, %96 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %76, i64 1
  %78 = bitcast %"struct.std::__1::__hash_node_base.922"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, %48
  br i1 %80, label %91, label %81

81:                                               ; preds = %75
  br i1 %54, label %84, label %82

82:                                               ; preds = %81
  %83 = and i64 %79, %74
  br label %88

84:                                               ; preds = %81
  %85 = icmp ult i64 %79, %50
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = urem i64 %79, %50
  br label %88

88:                                               ; preds = %86, %84, %82
  %89 = phi i64 [ %83, %82 ], [ %87, %86 ], [ %79, %84 ]
  %90 = icmp eq i64 %89, %63
  br i1 %90, label %96, label %102

91:                                               ; preds = %75
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %76, i64 2
  %93 = bitcast %"struct.std::__1::__hash_node_base.922"* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, %47
  br i1 %95, label %100, label %96

96:                                               ; preds = %91, %88
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %76, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %102, label %75

100:                                              ; preds = %91
  %101 = add i32 %12, 1
  br label %11

102:                                              ; preds = %69, %46, %62, %28, %88, %96
  %103 = load i8, i8* %7, align 4, !range !2
  %104 = icmp eq i8 %103, 0
  %105 = load i8, i8* %8, align 1, !range !2
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, i32 1, i32 2
  %108 = xor i1 %106, true
  %109 = zext i1 %108 to i32
  %110 = select i1 %104, i32 %109, i32 %107
  %111 = add i32 %110, %12
  %112 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %111) #11
  br label %113

113:                                              ; preds = %11, %102
  %114 = phi i32 [ %112, %102 ], [ 0, %11 ]
  ret i32 %114
}

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis15IsLoopInvariantEPKNS0_4LoopEPKNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo14HandleEqualityENS0_11SExpressionES3_(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readonly, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*) local_unnamed_addr #0 align 2 {
  %6 = bitcast %"class.spvtools::opt::SENode"* %1 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %7 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %7, i64 6
  %9 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %8, align 8
  %10 = tail call %"class.spvtools::opt::SERecurrentNode"* %9(%"class.spvtools::opt::SENode"* %1) #11
  %11 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %10, i64 0, i32 2
  %14 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %14, i64 0, i32 2
  %16 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %15, align 8
  %17 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %16, %"class.spvtools::opt::SENode"* %14) #11
  br label %18

18:                                               ; preds = %5, %12
  %19 = phi %"class.spvtools::opt::SENode"* [ %1, %5 ], [ %17, %12 ]
  %20 = bitcast %"class.spvtools::opt::SENode"* %3 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %21 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %21, i64 6
  %23 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %22, align 8
  %24 = tail call %"class.spvtools::opt::SERecurrentNode"* %23(%"class.spvtools::opt::SENode"* %3) #11
  %25 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %24, i64 0, i32 2
  %28 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %28, i64 0, i32 2
  %30 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %29, align 8
  %31 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %30, %"class.spvtools::opt::SENode"* %28) #11
  br label %32

32:                                               ; preds = %18, %26
  %33 = phi %"class.spvtools::opt::SENode"* [ %3, %18 ], [ %31, %26 ]
  %34 = icmp eq %"class.spvtools::opt::SENode"* %19, %33
  br i1 %34, label %104, label %35

35:                                               ; preds = %32
  %36 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %6, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %36, i64 6
  %38 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %37, align 8
  %39 = tail call %"class.spvtools::opt::SERecurrentNode"* %38(%"class.spvtools::opt::SENode"* %1) #11
  %40 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %39, null
  br i1 %40, label %66, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, -1
  %45 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %39, i64 0, i32 1
  %46 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %46, i64 0, i32 2
  %48 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %47, align 8
  %49 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %48, %"class.spvtools::opt::SENode"* %46) #11
  %50 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %47, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %39, i64 0, i32 2
  %52 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %52, i64 0, i32 2
  %54 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %53, align 8
  %55 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %54, %"class.spvtools::opt::SENode"* %52) #11
  %56 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %50, i64 %44) #11
  %57 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %50, %"class.spvtools::opt::SENode"* %49, %"class.spvtools::opt::SENode"* %56) #11
  %58 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %57, i64 0, i32 2
  %59 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %58, align 8
  %60 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %59, %"class.spvtools::opt::SENode"* %57) #11
  %61 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %58, align 8
  %62 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %61, %"class.spvtools::opt::SENode"* %60, %"class.spvtools::opt::SENode"* %55) #11
  %63 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %62, i64 0, i32 2
  %64 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %63, align 8
  %65 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %64, %"class.spvtools::opt::SENode"* %62) #11
  br label %66

66:                                               ; preds = %35, %41
  %67 = phi %"class.spvtools::opt::SENode"* [ %1, %35 ], [ %65, %41 ]
  %68 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %20, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %68, i64 6
  %70 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %69, align 8
  %71 = tail call %"class.spvtools::opt::SERecurrentNode"* %70(%"class.spvtools::opt::SENode"* %3) #11
  %72 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %71, null
  br i1 %72, label %98, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 3
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, -1
  %77 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %71, i64 0, i32 1
  %78 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %77, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %78, i64 0, i32 2
  %80 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %79, align 8
  %81 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %80, %"class.spvtools::opt::SENode"* %78) #11
  %82 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %79, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %71, i64 0, i32 2
  %84 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %83, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %84, i64 0, i32 2
  %86 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %85, align 8
  %87 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %86, %"class.spvtools::opt::SENode"* %84) #11
  %88 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %82, i64 %76) #11
  %89 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %82, %"class.spvtools::opt::SENode"* %81, %"class.spvtools::opt::SENode"* %88) #11
  %90 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %89, i64 0, i32 2
  %91 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %90, align 8
  %92 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %91, %"class.spvtools::opt::SENode"* %89) #11
  %93 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %90, align 8
  %94 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %93, %"class.spvtools::opt::SENode"* %92, %"class.spvtools::opt::SENode"* %87) #11
  %95 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %94, i64 0, i32 2
  %96 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %95, align 8
  %97 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %96, %"class.spvtools::opt::SENode"* %94) #11
  br label %98

98:                                               ; preds = %66, %73
  %99 = phi %"class.spvtools::opt::SENode"* [ %3, %66 ], [ %97, %73 ]
  %100 = icmp eq %"class.spvtools::opt::SENode"* %67, %99
  %101 = zext i1 %100 to i64
  %102 = shl nuw nsw i64 %101, 32
  %103 = select i1 %100, i64 2, i64 0
  br label %104

104:                                              ; preds = %98, %32
  %105 = phi i64 [ 1, %32 ], [ %103, %98 ]
  %106 = phi i64 [ 4294967296, %32 ], [ %102, %98 ]
  %107 = or i64 %106, %105
  ret i64 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo16HandleInequalityENS1_11CmpOperatorENS0_11SExpressionEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readonly, i32, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SERecurrentNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.1137", align 8
  %7 = alloca %"class.spvtools::opt::SExpression", align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %4, i64 0, i32 2
  %11 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %11, i64 0, i32 2
  %13 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %12, align 8
  %14 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %13, %"class.spvtools::opt::SENode"* %11) #11
  %15 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %12, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %4, i64 0, i32 1
  %17 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %17, i64 0, i32 2
  %19 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %18, align 8
  %20 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %19, %"class.spvtools::opt::SENode"* %17) #11
  %21 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %18, align 8
  %22 = bitcast %"struct.std::__1::pair.1137"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %6, i64 0, i32 0, i32 0
  %24 = bitcast %"class.spvtools::opt::SExpression"* %7 to i8*
  %25 = bitcast %"struct.std::__1::pair.1137"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %26 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %14) #11
  %27 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::SENode"* %26) #11
  %28 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %27, i64 0, i32 2
  %29 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %28, align 8
  %30 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %29, %"class.spvtools::opt::SENode"* %27) #11
  %31 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"** %28 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::SExpression", %"class.spvtools::opt::SExpression"* %7, i64 0, i32 0
  store %"class.spvtools::opt::SENode"* %30, %"class.spvtools::opt::SENode"** %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::SExpression", %"class.spvtools::opt::SExpression"* %7, i64 0, i32 1
  %35 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"** %34 to i64*
  store i64 %32, i64* %35, align 8
  call void @_ZNK8spvtools3opt11SExpressiondvES1_(%"struct.std::__1::pair.1137"* nonnull sret %6, %"class.spvtools::opt::SExpression"* nonnull %7, %"class.spvtools::opt::SENode"* %20, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %21) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  %36 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %23, align 8
  %37 = bitcast %"class.spvtools::opt::SENode"* %36 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %38 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %38, i64 4
  %40 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %39, align 8
  %41 = call %"class.spvtools::opt::SEConstantNode"* %40(%"class.spvtools::opt::SENode"* %36) #11
  %42 = icmp eq %"class.spvtools::opt::SEConstantNode"* %41, null
  br i1 %42, label %113, label %43

43:                                               ; preds = %5
  %44 = getelementptr inbounds %"struct.std::__1::pair.1137", %"struct.std::__1::pair.1137"* %6, i64 0, i32 1
  %45 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %23, align 8
  %46 = bitcast %"class.spvtools::opt::SENode"* %45 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %47 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %47, i64 4
  %49 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %48, align 8
  %50 = call %"class.spvtools::opt::SEConstantNode"* %49(%"class.spvtools::opt::SENode"* %45) #11
  %51 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %50, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = load i64, i64* %44, align 8
  %54 = icmp ne i64 %53, 0
  %55 = zext i1 %54 to i64
  %56 = add nsw i64 %52, %55
  %57 = icmp slt i64 %56, 1
  br i1 %57, label %113, label %58

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = icmp ugt i64 %60, %56
  br i1 %61, label %62, label %113

62:                                               ; preds = %58
  %63 = xor i1 %54, true
  %64 = or i32 %1, 1
  %65 = icmp eq i32 %64, 3
  %66 = and i1 %65, %63
  br i1 %66, label %67, label %98

67:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 -86, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  store i8 -86, i8* %9, align 1
  %68 = call zeroext i1 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo12EvalOperatorENS1_11CmpOperatorENS0_11SExpressionES4_Pb(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i32 %1, %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %14, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %15, i8* nonnull %8)
  br i1 %68, label %69, label %91

69:                                               ; preds = %67
  %70 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %16, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %70, i64 0, i32 2
  %72 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %71, align 8
  %73 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %72, %"class.spvtools::opt::SENode"* %70) #11
  %74 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %71, align 8
  %75 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %10, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %75, i64 0, i32 2
  %77 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %76, align 8
  %78 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %77, %"class.spvtools::opt::SENode"* %75) #11
  %79 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %74, i64 %56) #11
  %80 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %74, %"class.spvtools::opt::SENode"* %73, %"class.spvtools::opt::SENode"* %79) #11
  %81 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %80, i64 0, i32 2
  %82 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %81, align 8
  %83 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %82, %"class.spvtools::opt::SENode"* %80) #11
  %84 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %81, align 8
  %85 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %84, %"class.spvtools::opt::SENode"* %83, %"class.spvtools::opt::SENode"* %78) #11
  %86 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %85, i64 0, i32 2
  %87 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %86, align 8
  %88 = call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %87, %"class.spvtools::opt::SENode"* %85) #11
  %89 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %86, align 8
  %90 = call zeroext i1 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo12EvalOperatorENS1_11CmpOperatorENS0_11SExpressionES4_Pb(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i32 %1, %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %88, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %89, i8* nonnull %9)
  br i1 %90, label %92, label %91

91:                                               ; preds = %69, %67
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  br label %113

92:                                               ; preds = %69
  %93 = load i8, i8* %8, align 1, !range !2
  %94 = load i8, i8* %9, align 1, !range !2
  %95 = icmp eq i8 %93, %94
  %96 = zext i1 %95 to i64
  %97 = add nuw nsw i64 %56, %96
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  br label %98

98:                                               ; preds = %92, %62
  %99 = phi i64 [ %56, %62 ], [ %97, %92 ]
  %100 = icmp ugt i64 %99, 4294967294
  %101 = trunc i64 %99 to i32
  %102 = icmp eq i32 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %113, label %104

104:                                              ; preds = %98
  %105 = load i64, i64* %59, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %99, 4294967295
  %108 = icmp ugt i64 %106, %107
  %109 = sub i64 %105, %99
  %110 = select i1 %108, i64 1, i64 2
  %111 = select i1 %108, i64 %99, i64 %109
  %112 = shl i64 %111, 32
  br label %113

113:                                              ; preds = %104, %98, %91, %43, %58, %5
  %114 = phi i64 [ 0, %5 ], [ 0, %58 ], [ 0, %43 ], [ 0, %91 ], [ 0, %98 ], [ %110, %104 ]
  %115 = phi i64 [ 0, %5 ], [ 0, %58 ], [ 0, %43 ], [ 0, %91 ], [ 0, %98 ], [ %112, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %116 = or i64 %115, %114
  ret i64 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo24GetValueAtFirstIterationEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readnone, %"class.spvtools::opt::SERecurrentNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %1, i64 0, i32 2
  %4 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %4, i64 0, i32 2
  %6 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %5, align 8
  %7 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %6, %"class.spvtools::opt::SENode"* %4) #11
  %8 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %5, align 8
  %9 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } undef, %"class.spvtools::opt::SENode"* %7, 0
  %10 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } %9, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %8, 1
  ret { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo19GetValueAtIterationEPNS0_15SERecurrentNodeEl(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readnone, %"class.spvtools::opt::SERecurrentNode"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %1, i64 0, i32 1
  %5 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %5, i64 0, i32 2
  %7 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %6, align 8
  %8 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %7, %"class.spvtools::opt::SENode"* %5) #11
  %9 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %6, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %1, i64 0, i32 2
  %11 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %11, i64 0, i32 2
  %13 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %12, align 8
  %14 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %13, %"class.spvtools::opt::SENode"* %11) #11
  %15 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %9, i64 %2) #11
  %16 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %9, %"class.spvtools::opt::SENode"* %8, %"class.spvtools::opt::SENode"* %15) #11
  %17 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %16, i64 0, i32 2
  %18 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %17, align 8
  %19 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %18, %"class.spvtools::opt::SENode"* %16) #11
  %20 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %17, align 8
  %21 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %20, %"class.spvtools::opt::SENode"* %19, %"class.spvtools::opt::SENode"* %14) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %21, i64 0, i32 2
  %23 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %22, align 8
  %24 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %23, %"class.spvtools::opt::SENode"* %21) #11
  %25 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %22, align 8
  %26 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } undef, %"class.spvtools::opt::SENode"* %24, 0
  %27 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } %26, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %25, 1
  ret { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } %27
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo23GetValueAtLastIterationEPNS0_15SERecurrentNodeE(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readonly, %"class.spvtools::opt::SERecurrentNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  %6 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %1, i64 0, i32 1
  %7 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %7, i64 0, i32 2
  %9 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %8, align 8
  %10 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %9, %"class.spvtools::opt::SENode"* %7) #11
  %11 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %1, i64 0, i32 2
  %13 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %13, i64 0, i32 2
  %15 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %14, align 8
  %16 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %15, %"class.spvtools::opt::SENode"* %13) #11
  %17 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %11, i64 %5) #11
  %18 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %11, %"class.spvtools::opt::SENode"* %10, %"class.spvtools::opt::SENode"* %17) #11
  %19 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %18, i64 0, i32 2
  %20 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %19, align 8
  %21 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %20, %"class.spvtools::opt::SENode"* %18) #11
  %22 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %19, align 8
  %23 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %22, %"class.spvtools::opt::SENode"* %21, %"class.spvtools::opt::SENode"* %16) #11
  %24 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %23, i64 0, i32 2
  %25 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %24, align 8
  %26 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %25, %"class.spvtools::opt::SENode"* %23) #11
  %27 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %24, align 8
  %28 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } undef, %"class.spvtools::opt::SENode"* %26, 0
  %29 = insertvalue { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } %28, %"class.spvtools::opt::ScalarEvolutionAnalysis"* %27, 1
  ret { %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"* } %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt15LoopPeelingPass15LoopPeelingInfo12EvalOperatorENS1_11CmpOperatorENS0_11SExpressionES4_Pb(%"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* nocapture readonly, i32, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i8*) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %44 [
    i32 0, label %8
    i32 1, label %17
    i32 2, label %26
    i32 3, label %35
  ]

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 2
  %10 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %9, align 8
  %11 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %5, %"class.spvtools::opt::SENode"* %2) #11
  %12 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %5, %"class.spvtools::opt::SENode"* %4, %"class.spvtools::opt::SENode"* %11) #11
  %13 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %12, i64 0, i32 2
  %14 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %13, align 8
  %15 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %14, %"class.spvtools::opt::SENode"* %12) #11
  %16 = tail call zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis23IsAlwaysGreaterThanZeroEPNS0_6SENodeEPb(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %10, %"class.spvtools::opt::SENode"* %15, i8* %6) #11
  br label %44

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 2
  %19 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %18, align 8
  %20 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %4) #11
  %21 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::SENode"* %20) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %21, i64 0, i32 2
  %23 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %22, align 8
  %24 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %23, %"class.spvtools::opt::SENode"* %21) #11
  %25 = tail call zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis23IsAlwaysGreaterThanZeroEPNS0_6SENodeEPb(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %19, %"class.spvtools::opt::SENode"* %24, i8* %6) #11
  br label %44

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 2
  %28 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %27, align 8
  %29 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %5, %"class.spvtools::opt::SENode"* %2) #11
  %30 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %5, %"class.spvtools::opt::SENode"* %4, %"class.spvtools::opt::SENode"* %29) #11
  %31 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %30, i64 0, i32 2
  %32 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %31, align 8
  %33 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %32, %"class.spvtools::opt::SENode"* %30) #11
  %34 = tail call zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis28IsAlwaysGreaterOrEqualToZeroEPNS0_6SENodeEPb(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %28, %"class.spvtools::opt::SENode"* %33, i8* %6) #11
  br label %44

35:                                               ; preds = %7
  %36 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo", %"class.spvtools::opt::LoopPeelingPass::LoopPeelingInfo"* %0, i64 0, i32 2
  %37 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %36, align 8
  %38 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %4) #11
  %39 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %3, %"class.spvtools::opt::SENode"* %2, %"class.spvtools::opt::SENode"* %38) #11
  %40 = getelementptr inbounds %"class.spvtools::opt::SENode", %"class.spvtools::opt::SENode"* %39, i64 0, i32 2
  %41 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %40, align 8
  %42 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %41, %"class.spvtools::opt::SENode"* %39) #11
  %43 = tail call zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis28IsAlwaysGreaterOrEqualToZeroEPNS0_6SENodeEPb(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %37, %"class.spvtools::opt::SENode"* %42, i8* %6) #11
  br label %44

44:                                               ; preds = %7, %35, %26, %17, %8
  %45 = phi i1 [ %43, %35 ], [ %34, %26 ], [ %25, %17 ], [ %16, %8 ], [ false, %7 ]
  ret i1 %45
}

declare zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis23IsAlwaysGreaterThanZeroEPNS0_6SENodeEPb(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt23ScalarEvolutionAnalysis28IsAlwaysGreaterOrEqualToZeroEPNS0_6SENodeEPb(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, i8*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt11SExpressiondvES1_(%"struct.std::__1::pair.1137"* sret, %"class.spvtools::opt::SExpression"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15LoopPeelingPassD0Ev(%"class.spvtools::opt::LoopPeelingPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopPeelingPass", %"class.spvtools::opt::LoopPeelingPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::LoopPeelingPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt15LoopPeelingPass4nameEv(%"class.spvtools::opt::LoopPeelingPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #10
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #10
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #10
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1164"* dereferenceable(8), %"class.std::__1::tuple.1167"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.309"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.309"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.309"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.309"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.309"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #10, !noalias !79
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !79
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !79
  store i32 %62, i32* %61, align 8, !noalias !79
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11, !noalias !79
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !79
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"**
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %66, align 8, !noalias !79
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #11
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #11, !range !3
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.309"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.309"* %109, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.309"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #11, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.309"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.309"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } undef, %"struct.std::__1::__hash_node_base.309"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.309"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.305"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.309"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.309"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !82

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.309"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.309"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.309"* %36, %"struct.std::__1::__hash_node_base.309"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.309"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.309"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.309"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.309"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.309"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.309"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.309"* %82, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.309"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.309"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.309"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.309"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.309"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.309"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.309"* %80, %"struct.std::__1::__hash_node_base.309"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.309"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.309"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.309"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.309"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1015"**
  %4 = load %"class.std::__1::function.1015"*, %"class.std::__1::function.1015"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple.1191", align 8
  %3 = alloca %"class.std::__1::tuple.1167", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1049", align 8
  %6 = alloca %"class.std::__1::function.1015", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !84

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1015"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1015"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1049"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1015"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1049"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1049", %"class.std::__1::function.1049"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple.1191"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.1191", %"class.std::__1::tuple.1191"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #11
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1191"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %3) #11
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #11
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #11
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #11
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1015"**
  %4 = load %"class.std::__1::function.1015"*, %"class.std::__1::function.1015"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1015", %"class.std::__1::function.1015"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1191", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple.1191"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple.1191", %"class.std::__1::tuple.1191"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1191"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1191"* dereferenceable(8), %"class.std::__1::tuple.1167"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #10, !noalias !85
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1191"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !85
  %75 = load i64, i64* %74, align 8, !noalias !85
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !85
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !85
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !85
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !85
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !88

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1191", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple.1191"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple.1191", %"class.std::__1::tuple.1191"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1191"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #12
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #10
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.3"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %5
  %21 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  %30 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %26 to i32*
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.0"* %38 to i64*
  %40 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %105, %5
  %45 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %46, align 8
  %47 = call i8* @_Znwm(i64 112) #10
  %48 = bitcast i8* %47 to %"class.spvtools::opt::Instruction"*
  %49 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %49, align 8
  %51 = icmp eq i32 %4, 0
  br i1 %51, label %112, label %129

52:                                               ; preds = %20, %105
  %53 = phi i64 [ %18, %20 ], [ %108, %105 ]
  %54 = phi i64 [ 0, %20 ], [ %106, %105 ]
  %55 = inttoptr i64 %53 to i32*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  store i64 0, i64* %29, align 8
  store i64 1, i64* %24, align 8
  store i32 %57, i32* %30, align 8
  store i32 1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i64 0, i64* %34, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  store i64 0, i64* %39, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %32, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %59 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %61 = icmp ult %"struct.spvtools::opt::Operand"* %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 0
  %64 = load i32, i32* %31, align 8
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 1
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %32) #11
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 1
  %75 = ptrtoint %"struct.spvtools::opt::Operand"* %74 to i64
  store i64 %75, i64* %40, align 8
  br label %77

76:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #11
  br label %77

77:                                               ; preds = %62, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %78 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %42, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %42, align 8
  %79 = icmp eq %"class.std::__1::vector.3"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %84, %80
  %90 = bitcast %"class.std::__1::vector.3"* %78 to i8*
  call void @_ZdlPv(i8* %90) #10
  br label %91

91:                                               ; preds = %77, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %43, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %43, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %91, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #11
  %106 = add nuw i64 %54, 1
  %107 = load i64, i64* %15, align 8
  %108 = load i64, i64* %17, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %52, label %44

112:                                              ; preds = %44
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  %115 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %114) #11
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 2
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %125 = getelementptr inbounds i8, i8* %124, i64 37
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 1, i32 0
  %127 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 0
  call void %127(%"union.std::__1::__function::__policy_storage"* %128, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %124) #11
  call void @_ZdlPv(i8* nonnull %124) #10
  br label %129

129:                                              ; preds = %123, %117, %112, %44
  %130 = phi i32 [ %4, %44 ], [ %115, %112 ], [ 0, %117 ], [ 0, %123 ]
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %48, %"class.spvtools::opt::IRContext"* %50, i32 %2, i32 %1, i32 %130, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %131 = ptrtoint i8* %47 to i64
  %132 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  store i64 %131, i64* %132, align 8
  %133 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9)
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %46, align 8
  %135 = icmp eq %"class.spvtools::opt::Instruction"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %129
  %137 = bitcast %"class.spvtools::opt::Instruction"* %134 to void (%"class.spvtools::opt::Instruction"*)***
  %138 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %138, i64 1
  %140 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %139, align 8
  call void %140(%"class.spvtools::opt::Instruction"* nonnull %134) #11
  br label %141

141:                                              ; preds = %129, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %173, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %171, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #10
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #10
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::vector"* %6 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %144
  %172 = phi i8* [ %170, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %12, align 8
  call void @_ZdlPv(i8* %172) #10
  br label %173

173:                                              ; preds = %141, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %133
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1007"**
  %4 = load %"class.std::__1::function.1007"*, %"class.std::__1::function.1007"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #11
  ret i1 true
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.944"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.940"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1164"* dereferenceable(8), %"class.std::__1::tuple.1167"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.944"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.944"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.944"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.944"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.944"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #10, !noalias !89
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !89
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !89
  store i32 %62, i32* %61, align 8, !noalias !89
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %64, align 8, !noalias !89
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !89
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.944"**
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %67, align 8, !noalias !89
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.940"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.944"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.944"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.944"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.944"* %110, %"struct.std::__1::__hash_node_base.944"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.944"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.944"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.944"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.944"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.944"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.944"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.944"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } undef, %"struct.std::__1::__hash_node_base.944"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.944"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.940"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.940"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.940"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.940"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.940"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.944"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.944"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.946", %"class.std::__1::__bucket_list_deallocator.946"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !92

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.944"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.944"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.944"* %36, %"struct.std::__1::__hash_node_base.944"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.944"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.944"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.944"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.944"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.944"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.944"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.944"* %82, %"struct.std::__1::__hash_node_base.944"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.944"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.944"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.944"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.944"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.944"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.944"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.944"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.944"* %80, %"struct.std::__1::__hash_node_base.944"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.944"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.944"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.944"** null, %"struct.std::__1::__hash_node_base.944"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.944"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.944"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.946", %"class.std::__1::__bucket_list_deallocator.946"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1164"* dereferenceable(8), %"class.std::__1::tuple.1167"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #10, !noalias !93
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !93
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !93
  store i32 %62, i32* %61, align 8, !noalias !93
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !93
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !93
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !93
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.329"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !96

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.333"* %36, %"struct.std::__1::__hash_node_base.333"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.333"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.333"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.333"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.333"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.333"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.333"* %82, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.333"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.333"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.333"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.333"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.333"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.333"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.40"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.1248", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.40"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.40"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.40"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.40"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.40"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.40"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.spvtools::opt::BasicBlock"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.40"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.40"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.40"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !97

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.40"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.40"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.40"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.40"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.40"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.40"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::BasicBlock"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.std::__1::unique_ptr.40"* %70 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %79, %"class.spvtools::opt::BasicBlock"* nonnull %75) #11
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.40"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.40"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.40"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.40"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.40"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"class.spvtools::opt::BasicBlock"* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %1 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %143, %"class.spvtools::opt::BasicBlock"* nonnull %139) #11
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.1248"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.1248"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #12
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #12
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #10
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.40"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.40"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.40"* %191, %"class.std::__1::unique_ptr.40"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %189
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %149, align 8
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %190
  store %"class.std::__1::unique_ptr.40"* %193, %"class.std::__1::unique_ptr.40"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1248"* nonnull %5, %"class.std::__1::unique_ptr.40"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.40"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.40"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %"class.spvtools::opt::BasicBlock"** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.40"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.40"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.40"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.40"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %216, i64 -1
  store %"class.std::__1::unique_ptr.40"* %217, %"class.std::__1::unique_ptr.40"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !98

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.40"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.40"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.40"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.40"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.40"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.40"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.40"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -1
  store %"class.std::__1::unique_ptr.40"* %235, %"class.std::__1::unique_ptr.40"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.40"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -1
  store %"class.std::__1::unique_ptr.40"* %243, %"class.std::__1::unique_ptr.40"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.40"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.40"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -1
  store %"class.std::__1::unique_ptr.40"* %251, %"class.std::__1::unique_ptr.40"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.40"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.40"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %258, i64 -1
  store %"class.std::__1::unique_ptr.40"* %259, %"class.std::__1::unique_ptr.40"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.40"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.40"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.40"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.40"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.40"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %"class.spvtools::opt::BasicBlock"** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.40"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.40"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %289, i64 1
  store %"class.std::__1::unique_ptr.40"* %290, %"class.std::__1::unique_ptr.40"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !99

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.40"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.40"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.40"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.40"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %308, i64 1
  store %"class.std::__1::unique_ptr.40"* %309, %"class.std::__1::unique_ptr.40"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.40"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.40"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %315, i64 1
  store %"class.std::__1::unique_ptr.40"* %316, %"class.std::__1::unique_ptr.40"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.40"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.40"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %322, i64 1
  store %"class.std::__1::unique_ptr.40"* %323, %"class.std::__1::unique_ptr.40"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.40"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.40"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %329, i64 1
  store %"class.std::__1::unique_ptr.40"* %330, %"class.std::__1::unique_ptr.40"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.40"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.40"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.40"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.40"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.40"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer.1248"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.40"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.40"*
  %353 = icmp eq %"class.std::__1::unique_ptr.40"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.40"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %355, i64 -1
  store %"class.std::__1::unique_ptr.40"* %356, %"class.std::__1::unique_ptr.40"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %357, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %357, align 8
  %359 = icmp eq %"class.spvtools::opt::BasicBlock"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.std::__1::unique_ptr.40"* %356 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %361, %"class.spvtools::opt::BasicBlock"* nonnull %358) #11
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.40"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.40"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.40"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.40"* %368 to i8*
  call void @_ZdlPv(i8* %371) #10
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #11
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.40"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.40"* %374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1248"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.40"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.40"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1248", %"struct.std::__1::__split_buffer.1248"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.40"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.40"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.40"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.40"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.40"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.40"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.40"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::unique_ptr.40"* %25 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %35, %"class.spvtools::opt::BasicBlock"* nonnull %31) #11
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.40"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.40"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.40"* %44, %"class.std::__1::unique_ptr.40"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %43, i64 %21
  store %"class.std::__1::unique_ptr.40"* %45, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.40"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer.1248"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #12
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #10
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.40"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.40"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.40"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !100

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.40"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.40"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.40"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.40"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.40"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.40"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.40"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.40"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.40"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.40"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.40"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.40"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.40"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.40"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.40"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.40"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.40"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.40"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.40"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.40"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.std::__1::unique_ptr.40"* %167 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %172, %"class.spvtools::opt::BasicBlock"* nonnull %169) #11
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.40"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.40"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.40"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #10
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %185, i64 1
  store %"class.std::__1::unique_ptr.40"* %186, %"class.std::__1::unique_ptr.40"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #11
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #11
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #11
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %10, align 8
  %11 = tail call i8* @_Znwm(i64 112) #10
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #11
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 39, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %54 = call i8* @_Znwm(i64 96) #10
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 96
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.spvtools::opt::Operand"** %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = bitcast i8* %54 to i32*
  %61 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 8
  %64 = bitcast i8* %63 to %"class.spvtools::utils::SmallVector"*
  %65 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %66 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %54, i64 16
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %54, i64 24
  %70 = getelementptr inbounds i8, i8* %54, i64 32
  %71 = bitcast i8* %69 to i8**
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %54, i64 40
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %65) #11
  %75 = getelementptr inbounds i8, i8* %54, i64 48
  %76 = bitcast i8* %75 to i32*
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds i8, i8* %54, i64 56
  %80 = bitcast i8* %79 to %"class.spvtools::utils::SmallVector"*
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %82 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %54, i64 64
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %54, i64 72
  %86 = getelementptr inbounds i8, i8* %54, i64 80
  %87 = bitcast i8* %85 to i8**
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %54, i64 88
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %80, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %81) #11
  %91 = getelementptr inbounds i8, i8* %54, i64 96
  %92 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %93 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %94 = ptrtoint i8* %91 to i64
  store i64 %94, i64* %93, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %92, %"class.spvtools::opt::IRContext"* %13, i32 247, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %95 = ptrtoint i8* %11 to i64
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %98 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %97, align 8
  %99 = icmp eq %"struct.spvtools::opt::Operand"* %98, null
  br i1 %99, label %128, label %100

100:                                              ; preds = %3
  %101 = bitcast %"struct.spvtools::opt::Operand"* %98 to i8*
  %102 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %55, align 8
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %102, %98
  br i1 %103, label %126, label %104

104:                                              ; preds = %100, %122
  %105 = phi %"struct.spvtools::opt::Operand"* [ %106, %122 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %120, %104
  %123 = icmp eq %"struct.spvtools::opt::Operand"* %106, %98
  br i1 %123, label %124, label %104

124:                                              ; preds = %122
  %125 = load i8*, i8** %56, align 8
  br label %126

126:                                              ; preds = %124, %100
  %127 = phi i8* [ %125, %124 ], [ %101, %100 ]
  store %"struct.spvtools::opt::Operand"* %98, %"struct.spvtools::opt::Operand"** %55, align 8
  call void @_ZdlPv(i8* %127) #10
  br label %128

128:                                              ; preds = %3, %126
  %129 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %130 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %130, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %130, align 8
  %132 = icmp eq %"class.std::__1::vector.3"* %131, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint i32* %135 to i64
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %137, %133
  %143 = bitcast %"class.std::__1::vector.3"* %131 to i8*
  call void @_ZdlPv(i8* %143) #10
  br label %144

144:                                              ; preds = %128, %142
  %145 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %146, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %146, align 8
  %148 = icmp eq %"class.std::__1::vector.3"* %147, null
  br i1 %148, label %196, label %185

149:                                              ; preds = %196
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint i32* %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 1
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast i32* %151 to i8*
  call void @_ZdlPv(i8* %157) #10
  br label %158

158:                                              ; preds = %153, %149
  %159 = bitcast %"class.std::__1::vector.3"* %198 to i8*
  call void @_ZdlPv(i8* %159) #10
  br label %160

160:                                              ; preds = %196, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %161, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %161, align 8
  %163 = icmp eq %"class.std::__1::vector.3"* %162, null
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = icmp eq i32* %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = ptrtoint i32* %166 to i64
  %170 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 1
  %171 = bitcast i32** %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = bitcast i32* %166 to i8*
  call void @_ZdlPv(i8* %172) #10
  br label %173

173:                                              ; preds = %168, %164
  %174 = bitcast %"class.std::__1::vector.3"* %162 to i8*
  call void @_ZdlPv(i8* %174) #10
  br label %175

175:                                              ; preds = %160, %173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %176 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4)
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %10, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.spvtools::opt::Instruction"* %177 to void (%"class.spvtools::opt::Instruction"*)***
  %181 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %181, i64 1
  %183 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %182, align 8
  call void %183(%"class.spvtools::opt::Instruction"* nonnull %177) #11
  br label %184

184:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret %"class.spvtools::opt::Instruction"* %176

185:                                              ; preds = %144
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = icmp eq i32* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint i32* %187 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 1
  %192 = bitcast i32** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast i32* %187 to i8*
  call void @_ZdlPv(i8* %193) #10
  br label %194

194:                                              ; preds = %189, %185
  %195 = bitcast %"class.std::__1::vector.3"* %147 to i8*
  call void @_ZdlPv(i8* %195) #10
  br label %196

196:                                              ; preds = %194, %144
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %197, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %197, align 8
  %199 = icmp eq %"class.std::__1::vector.3"* %198, null
  br i1 %199, label %160, label %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddSLessThanEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Bool", align 8
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = bitcast %"class.spvtools::opt::analysis::Bool"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector.463"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 2
  store i32 1, i32* %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4BoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i16
  %20 = icmp slt i16 %19, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5
  %23 = tail call i8* @_Znwm(i64 240) #10
  %24 = bitcast i8* %23 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %24, %"class.std::__1::function"* dereferenceable(32) %22, %"class.spvtools::opt::IRContext"* %16) #11
  %25 = ptrtoint i8* %23 to i64
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 20
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.480"* %26 to i64*
  store i64 %25, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %21
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %28) #11
  %32 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %28 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %21
  %34 = load i32, i32* %17, align 8
  %35 = or i32 %34, 32768
  store i32 %35, i32* %17, align 8
  br label %36

36:                                               ; preds = %3, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 20, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %37, align 8
  %39 = bitcast %"class.spvtools::opt::analysis::Bool"* %4 to %"class.spvtools::opt::analysis::Type"*
  %40 = call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %38, %"class.spvtools::opt::analysis::Type"* nonnull %39) #11
  %41 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %42, align 8
  %43 = call i8* @_Znwm(i64 112) #10
  %44 = bitcast i8* %43 to %"class.spvtools::opt::Instruction"*
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %46, align 8
  %48 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %47) #11
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 2
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %58 = getelementptr inbounds i8, i8* %57, i64 37
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5, i32 0, i32 1, i32 0
  %60 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5, i32 0, i32 0
  call void %60(%"union.std::__1::__function::__policy_storage"* %61, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %57) #11
  call void @_ZdlPv(i8* nonnull %57) #10
  br label %62

62:                                               ; preds = %36, %50, %56
  %63 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %64) #11
  %65 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %69 to i32*
  store i64 1, i64* %67, align 8
  store i32 %1, i32* %73, align 8
  %74 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %74, align 8
  %75 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %75, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %79 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %80 = bitcast i32** %78 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %79, %"struct.std::__1::aligned_storage<4, 4>::type"** %80, align 8
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %82 = bitcast %"class.std::__1::unique_ptr.0"* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %75, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %84 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %89 = bitcast i32** %87 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %88, %"struct.std::__1::aligned_storage<4, 4>::type"** %89, align 8
  %90 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %91 = bitcast %"class.std::__1::unique_ptr.0"* %90 to i64*
  store i64 0, i64* %91, align 8
  %92 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %88 to i32*
  store i64 1, i64* %86, align 8
  store i32 %2, i32* %92, align 8
  %93 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  store i32 1, i32* %93, align 8
  %94 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %95 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %94, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %96 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 2
  %98 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 3, i64 0
  %99 = bitcast i32** %97 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %98, %"struct.std::__1::aligned_storage<4, 4>::type"** %99, align 8
  %100 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4
  %101 = bitcast %"class.std::__1::unique_ptr.0"* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %94, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %103 = call i8* @_Znwm(i64 96) #10
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.spvtools::opt::Operand"** %104 to i8**
  store i8* %103, i8** %105, align 8
  %106 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %103, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %103, i64 96
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %109 = bitcast %"struct.spvtools::opt::Operand"** %108 to i8**
  store i8* %107, i8** %109, align 8
  %110 = bitcast i8* %103 to i32*
  %111 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  store i32 %112, i32* %110, align 8
  %113 = getelementptr inbounds i8, i8* %103, i64 8
  %114 = bitcast i8* %113 to %"class.spvtools::utils::SmallVector"*
  %115 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %116 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds i8, i8* %103, i64 16
  %118 = bitcast i8* %117 to i64*
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds i8, i8* %103, i64 24
  %120 = getelementptr inbounds i8, i8* %103, i64 32
  %121 = bitcast i8* %119 to i8**
  store i8* %120, i8** %121, align 8
  %122 = getelementptr inbounds i8, i8* %103, i64 40
  %123 = bitcast i8* %122 to i64*
  store i64 0, i64* %123, align 8
  %124 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %114, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %115) #11
  %125 = getelementptr inbounds i8, i8* %103, i64 48
  %126 = bitcast i8* %125 to i32*
  %127 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  %128 = load i32, i32* %127, align 8
  store i32 %128, i32* %126, align 8
  %129 = getelementptr inbounds i8, i8* %103, i64 56
  %130 = bitcast i8* %129 to %"class.spvtools::utils::SmallVector"*
  %131 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %132 = bitcast i8* %129 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds i8, i8* %103, i64 64
  %134 = bitcast i8* %133 to i64*
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds i8, i8* %103, i64 72
  %136 = getelementptr inbounds i8, i8* %103, i64 80
  %137 = bitcast i8* %135 to i8**
  store i8* %136, i8** %137, align 8
  %138 = getelementptr inbounds i8, i8* %103, i64 88
  %139 = bitcast i8* %138 to i64*
  store i64 0, i64* %139, align 8
  %140 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %130, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %131) #11
  %141 = getelementptr inbounds i8, i8* %103, i64 96
  %142 = bitcast %"struct.spvtools::opt::Operand"** %104 to i64*
  %143 = ptrtoint i8* %141 to i64
  store i64 %143, i64* %142, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %44, %"class.spvtools::opt::IRContext"* %45, i32 177, i32 %40, i32 %48, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %144 = ptrtoint i8* %43 to i64
  %145 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %147 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %146, align 8
  %148 = icmp eq %"struct.spvtools::opt::Operand"* %147, null
  br i1 %148, label %177, label %149

149:                                              ; preds = %62
  %150 = bitcast %"struct.spvtools::opt::Operand"* %147 to i8*
  %151 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %104, align 8
  %152 = icmp eq %"struct.spvtools::opt::Operand"* %151, %147
  br i1 %152, label %175, label %153

153:                                              ; preds = %149, %171
  %154 = phi %"struct.spvtools::opt::Operand"* [ %155, %171 ], [ %151, %149 ]
  %155 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 -1
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %158 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %157, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %157, align 8
  %159 = icmp eq %"class.std::__1::vector.3"* %158, null
  br i1 %159, label %171, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %158, i64 0, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = icmp eq i32* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %160
  %165 = ptrtoint i32* %162 to i64
  %166 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %158, i64 0, i32 0, i32 1
  %167 = bitcast i32** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast i32* %162 to i8*
  call void @_ZdlPv(i8* %168) #10
  br label %169

169:                                              ; preds = %164, %160
  %170 = bitcast %"class.std::__1::vector.3"* %158 to i8*
  call void @_ZdlPv(i8* %170) #10
  br label %171

171:                                              ; preds = %169, %153
  %172 = icmp eq %"struct.spvtools::opt::Operand"* %155, %147
  br i1 %172, label %173, label %153

173:                                              ; preds = %171
  %174 = load i8*, i8** %106, align 8
  br label %175

175:                                              ; preds = %173, %149
  %176 = phi i8* [ %174, %173 ], [ %150, %149 ]
  store %"struct.spvtools::opt::Operand"* %147, %"struct.spvtools::opt::Operand"** %104, align 8
  call void @_ZdlPv(i8* %176) #10
  br label %177

177:                                              ; preds = %62, %175
  %178 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8
  %179 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %180 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %179, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %179, align 8
  %181 = icmp eq %"class.std::__1::vector.3"* %180, null
  br i1 %181, label %193, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 0
  %184 = load i32*, i32** %183, align 8
  %185 = icmp eq i32* %184, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %182
  %187 = ptrtoint i32* %184 to i64
  %188 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 1
  %189 = bitcast i32** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = bitcast i32* %184 to i8*
  call void @_ZdlPv(i8* %190) #10
  br label %191

191:                                              ; preds = %186, %182
  %192 = bitcast %"class.std::__1::vector.3"* %180 to i8*
  call void @_ZdlPv(i8* %192) #10
  br label %193

193:                                              ; preds = %177, %191
  %194 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %195 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %196 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %195, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %195, align 8
  %197 = icmp eq %"class.std::__1::vector.3"* %196, null
  br i1 %197, label %272, label %261

198:                                              ; preds = %272
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %274, i64 0, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = icmp eq i32* %200, null
  br i1 %201, label %207, label %202

202:                                              ; preds = %198
  %203 = ptrtoint i32* %200 to i64
  %204 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %274, i64 0, i32 0, i32 1
  %205 = bitcast i32** %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = bitcast i32* %200 to i8*
  call void @_ZdlPv(i8* %206) #10
  br label %207

207:                                              ; preds = %202, %198
  %208 = bitcast %"class.std::__1::vector.3"* %274 to i8*
  call void @_ZdlPv(i8* %208) #10
  br label %209

209:                                              ; preds = %272, %207
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %210 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %211 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %210, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %210, align 8
  %212 = icmp eq %"class.std::__1::vector.3"* %211, null
  br i1 %212, label %224, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %211, i64 0, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = ptrtoint i32* %215 to i64
  %219 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %211, i64 0, i32 0, i32 1
  %220 = bitcast i32** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast i32* %215 to i8*
  call void @_ZdlPv(i8* %221) #10
  br label %222

222:                                              ; preds = %217, %213
  %223 = bitcast %"class.std::__1::vector.3"* %211 to i8*
  call void @_ZdlPv(i8* %223) #10
  br label %224

224:                                              ; preds = %209, %222
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  %225 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5)
  %226 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %42, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %42, align 8
  %227 = icmp eq %"class.spvtools::opt::Instruction"* %226, null
  br i1 %227, label %233, label %228

228:                                              ; preds = %224
  %229 = bitcast %"class.spvtools::opt::Instruction"* %226 to void (%"class.spvtools::opt::Instruction"*)***
  %230 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %230, i64 1
  %232 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %231, align 8
  call void %232(%"class.spvtools::opt::Instruction"* nonnull %226) #11
  br label %233

233:                                              ; preds = %224, %228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %234 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %12, i64 0, i32 0, i32 0
  %235 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %234, align 8
  %236 = icmp eq %"class.std::__1::vector.3"* %235, null
  br i1 %236, label %260, label %237

237:                                              ; preds = %233
  %238 = bitcast %"class.std::__1::vector.3"* %235 to i8*
  %239 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %240 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %239, align 8
  %241 = icmp eq %"class.std::__1::vector.3"* %240, %235
  br i1 %241, label %258, label %242

242:                                              ; preds = %237, %253
  %243 = phi %"class.std::__1::vector.3"* [ %244, %253 ], [ %240, %237 ]
  %244 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 -1
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %244, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %242
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 -1, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #10
  br label %253

253:                                              ; preds = %248, %242
  %254 = icmp eq %"class.std::__1::vector.3"* %244, %235
  br i1 %254, label %255, label %242

255:                                              ; preds = %253
  %256 = bitcast %"class.std::__1::vector.463"* %12 to i8**
  %257 = load i8*, i8** %256, align 8
  br label %258

258:                                              ; preds = %255, %237
  %259 = phi i8* [ %257, %255 ], [ %238, %237 ]
  store %"class.std::__1::vector.3"* %235, %"class.std::__1::vector.3"** %239, align 8
  call void @_ZdlPv(i8* %259) #10
  br label %260

260:                                              ; preds = %233, %258
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %225

261:                                              ; preds = %193
  %262 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %196, i64 0, i32 0, i32 0
  %263 = load i32*, i32** %262, align 8
  %264 = icmp eq i32* %263, null
  br i1 %264, label %270, label %265

265:                                              ; preds = %261
  %266 = ptrtoint i32* %263 to i64
  %267 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %196, i64 0, i32 0, i32 1
  %268 = bitcast i32** %267 to i64*
  store i64 %266, i64* %268, align 8
  %269 = bitcast i32* %263 to i8*
  call void @_ZdlPv(i8* %269) #10
  br label %270

270:                                              ; preds = %265, %261
  %271 = bitcast %"class.std::__1::vector.3"* %196 to i8*
  call void @_ZdlPv(i8* %271) #10
  br label %272

272:                                              ; preds = %270, %193
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %273 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %274 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %273, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %273, align 8
  %275 = icmp eq %"class.std::__1::vector.3"* %274, null
  br i1 %275, label %209, label %198
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder12AddULessThanEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Bool", align 8
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = bitcast %"class.spvtools::opt::analysis::Bool"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector.463"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 2
  store i32 1, i32* %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4BoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i16
  %20 = icmp slt i16 %19, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5
  %23 = tail call i8* @_Znwm(i64 240) #10
  %24 = bitcast i8* %23 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %24, %"class.std::__1::function"* dereferenceable(32) %22, %"class.spvtools::opt::IRContext"* %16) #11
  %25 = ptrtoint i8* %23 to i64
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 20
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.480"* %26 to i64*
  store i64 %25, i64* %29, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %21
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %28) #11
  %32 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %28 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %21
  %34 = load i32, i32* %17, align 8
  %35 = or i32 %34, 32768
  store i32 %35, i32* %17, align 8
  br label %36

36:                                               ; preds = %3, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 20, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %37, align 8
  %39 = bitcast %"class.spvtools::opt::analysis::Bool"* %4 to %"class.spvtools::opt::analysis::Type"*
  %40 = call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %38, %"class.spvtools::opt::analysis::Type"* nonnull %39) #11
  %41 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %42, align 8
  %43 = call i8* @_Znwm(i64 112) #10
  %44 = bitcast i8* %43 to %"class.spvtools::opt::Instruction"*
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %46, align 8
  %48 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %47) #11
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 2
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %58 = getelementptr inbounds i8, i8* %57, i64 37
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5, i32 0, i32 1, i32 0
  %60 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5, i32 0, i32 0
  call void %60(%"union.std::__1::__function::__policy_storage"* %61, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %57) #11
  call void @_ZdlPv(i8* nonnull %57) #10
  br label %62

62:                                               ; preds = %36, %50, %56
  %63 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %64) #11
  %65 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %69 to i32*
  store i64 1, i64* %67, align 8
  store i32 %1, i32* %73, align 8
  %74 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %74, align 8
  %75 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %75, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %79 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %80 = bitcast i32** %78 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %79, %"struct.std::__1::aligned_storage<4, 4>::type"** %80, align 8
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %82 = bitcast %"class.std::__1::unique_ptr.0"* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %75, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %84 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %89 = bitcast i32** %87 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %88, %"struct.std::__1::aligned_storage<4, 4>::type"** %89, align 8
  %90 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %91 = bitcast %"class.std::__1::unique_ptr.0"* %90 to i64*
  store i64 0, i64* %91, align 8
  %92 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %88 to i32*
  store i64 1, i64* %86, align 8
  store i32 %2, i32* %92, align 8
  %93 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  store i32 1, i32* %93, align 8
  %94 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %95 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %94, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %96 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 2
  %98 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 3, i64 0
  %99 = bitcast i32** %97 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %98, %"struct.std::__1::aligned_storage<4, 4>::type"** %99, align 8
  %100 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4
  %101 = bitcast %"class.std::__1::unique_ptr.0"* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %94, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %103 = call i8* @_Znwm(i64 96) #10
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.spvtools::opt::Operand"** %104 to i8**
  store i8* %103, i8** %105, align 8
  %106 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %103, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %103, i64 96
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %109 = bitcast %"struct.spvtools::opt::Operand"** %108 to i8**
  store i8* %107, i8** %109, align 8
  %110 = bitcast i8* %103 to i32*
  %111 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  store i32 %112, i32* %110, align 8
  %113 = getelementptr inbounds i8, i8* %103, i64 8
  %114 = bitcast i8* %113 to %"class.spvtools::utils::SmallVector"*
  %115 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %116 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds i8, i8* %103, i64 16
  %118 = bitcast i8* %117 to i64*
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds i8, i8* %103, i64 24
  %120 = getelementptr inbounds i8, i8* %103, i64 32
  %121 = bitcast i8* %119 to i8**
  store i8* %120, i8** %121, align 8
  %122 = getelementptr inbounds i8, i8* %103, i64 40
  %123 = bitcast i8* %122 to i64*
  store i64 0, i64* %123, align 8
  %124 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %114, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %115) #11
  %125 = getelementptr inbounds i8, i8* %103, i64 48
  %126 = bitcast i8* %125 to i32*
  %127 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  %128 = load i32, i32* %127, align 8
  store i32 %128, i32* %126, align 8
  %129 = getelementptr inbounds i8, i8* %103, i64 56
  %130 = bitcast i8* %129 to %"class.spvtools::utils::SmallVector"*
  %131 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %132 = bitcast i8* %129 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds i8, i8* %103, i64 64
  %134 = bitcast i8* %133 to i64*
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds i8, i8* %103, i64 72
  %136 = getelementptr inbounds i8, i8* %103, i64 80
  %137 = bitcast i8* %135 to i8**
  store i8* %136, i8** %137, align 8
  %138 = getelementptr inbounds i8, i8* %103, i64 88
  %139 = bitcast i8* %138 to i64*
  store i64 0, i64* %139, align 8
  %140 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %130, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %131) #11
  %141 = getelementptr inbounds i8, i8* %103, i64 96
  %142 = bitcast %"struct.spvtools::opt::Operand"** %104 to i64*
  %143 = ptrtoint i8* %141 to i64
  store i64 %143, i64* %142, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %44, %"class.spvtools::opt::IRContext"* %45, i32 176, i32 %40, i32 %48, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %144 = ptrtoint i8* %43 to i64
  %145 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %147 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %146, align 8
  %148 = icmp eq %"struct.spvtools::opt::Operand"* %147, null
  br i1 %148, label %177, label %149

149:                                              ; preds = %62
  %150 = bitcast %"struct.spvtools::opt::Operand"* %147 to i8*
  %151 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %104, align 8
  %152 = icmp eq %"struct.spvtools::opt::Operand"* %151, %147
  br i1 %152, label %175, label %153

153:                                              ; preds = %149, %171
  %154 = phi %"struct.spvtools::opt::Operand"* [ %155, %171 ], [ %151, %149 ]
  %155 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 -1
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %158 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %157, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %157, align 8
  %159 = icmp eq %"class.std::__1::vector.3"* %158, null
  br i1 %159, label %171, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %158, i64 0, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = icmp eq i32* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %160
  %165 = ptrtoint i32* %162 to i64
  %166 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %158, i64 0, i32 0, i32 1
  %167 = bitcast i32** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast i32* %162 to i8*
  call void @_ZdlPv(i8* %168) #10
  br label %169

169:                                              ; preds = %164, %160
  %170 = bitcast %"class.std::__1::vector.3"* %158 to i8*
  call void @_ZdlPv(i8* %170) #10
  br label %171

171:                                              ; preds = %169, %153
  %172 = icmp eq %"struct.spvtools::opt::Operand"* %155, %147
  br i1 %172, label %173, label %153

173:                                              ; preds = %171
  %174 = load i8*, i8** %106, align 8
  br label %175

175:                                              ; preds = %173, %149
  %176 = phi i8* [ %174, %173 ], [ %150, %149 ]
  store %"struct.spvtools::opt::Operand"* %147, %"struct.spvtools::opt::Operand"** %104, align 8
  call void @_ZdlPv(i8* %176) #10
  br label %177

177:                                              ; preds = %62, %175
  %178 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8
  %179 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %180 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %179, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %179, align 8
  %181 = icmp eq %"class.std::__1::vector.3"* %180, null
  br i1 %181, label %193, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 0
  %184 = load i32*, i32** %183, align 8
  %185 = icmp eq i32* %184, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %182
  %187 = ptrtoint i32* %184 to i64
  %188 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %180, i64 0, i32 0, i32 1
  %189 = bitcast i32** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = bitcast i32* %184 to i8*
  call void @_ZdlPv(i8* %190) #10
  br label %191

191:                                              ; preds = %186, %182
  %192 = bitcast %"class.std::__1::vector.3"* %180 to i8*
  call void @_ZdlPv(i8* %192) #10
  br label %193

193:                                              ; preds = %177, %191
  %194 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %195 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %196 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %195, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %195, align 8
  %197 = icmp eq %"class.std::__1::vector.3"* %196, null
  br i1 %197, label %272, label %261

198:                                              ; preds = %272
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %274, i64 0, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = icmp eq i32* %200, null
  br i1 %201, label %207, label %202

202:                                              ; preds = %198
  %203 = ptrtoint i32* %200 to i64
  %204 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %274, i64 0, i32 0, i32 1
  %205 = bitcast i32** %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = bitcast i32* %200 to i8*
  call void @_ZdlPv(i8* %206) #10
  br label %207

207:                                              ; preds = %202, %198
  %208 = bitcast %"class.std::__1::vector.3"* %274 to i8*
  call void @_ZdlPv(i8* %208) #10
  br label %209

209:                                              ; preds = %272, %207
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %210 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %211 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %210, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %210, align 8
  %212 = icmp eq %"class.std::__1::vector.3"* %211, null
  br i1 %212, label %224, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %211, i64 0, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = ptrtoint i32* %215 to i64
  %219 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %211, i64 0, i32 0, i32 1
  %220 = bitcast i32** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast i32* %215 to i8*
  call void @_ZdlPv(i8* %221) #10
  br label %222

222:                                              ; preds = %217, %213
  %223 = bitcast %"class.std::__1::vector.3"* %211 to i8*
  call void @_ZdlPv(i8* %223) #10
  br label %224

224:                                              ; preds = %209, %222
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  %225 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5)
  %226 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %42, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %42, align 8
  %227 = icmp eq %"class.spvtools::opt::Instruction"* %226, null
  br i1 %227, label %233, label %228

228:                                              ; preds = %224
  %229 = bitcast %"class.spvtools::opt::Instruction"* %226 to void (%"class.spvtools::opt::Instruction"*)***
  %230 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %230, i64 1
  %232 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %231, align 8
  call void %232(%"class.spvtools::opt::Instruction"* nonnull %226) #11
  br label %233

233:                                              ; preds = %224, %228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %234 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %12, i64 0, i32 0, i32 0
  %235 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %234, align 8
  %236 = icmp eq %"class.std::__1::vector.3"* %235, null
  br i1 %236, label %260, label %237

237:                                              ; preds = %233
  %238 = bitcast %"class.std::__1::vector.3"* %235 to i8*
  %239 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %240 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %239, align 8
  %241 = icmp eq %"class.std::__1::vector.3"* %240, %235
  br i1 %241, label %258, label %242

242:                                              ; preds = %237, %253
  %243 = phi %"class.std::__1::vector.3"* [ %244, %253 ], [ %240, %237 ]
  %244 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 -1
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %244, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %242
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %243, i64 -1, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #10
  br label %253

253:                                              ; preds = %248, %242
  %254 = icmp eq %"class.std::__1::vector.3"* %244, %235
  br i1 %254, label %255, label %242

255:                                              ; preds = %253
  %256 = bitcast %"class.std::__1::vector.463"* %12 to i8**
  %257 = load i8*, i8** %256, align 8
  br label %258

258:                                              ; preds = %255, %237
  %259 = phi i8* [ %257, %255 ], [ %238, %237 ]
  store %"class.std::__1::vector.3"* %235, %"class.std::__1::vector.3"** %239, align 8
  call void @_ZdlPv(i8* %259) #10
  br label %260

260:                                              ; preds = %233, %258
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %225

261:                                              ; preds = %193
  %262 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %196, i64 0, i32 0, i32 0
  %263 = load i32*, i32** %262, align 8
  %264 = icmp eq i32* %263, null
  br i1 %264, label %270, label %265

265:                                              ; preds = %261
  %266 = ptrtoint i32* %263 to i64
  %267 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %196, i64 0, i32 0, i32 1
  %268 = bitcast i32** %267 to i64*
  store i64 %266, i64* %268, align 8
  %269 = bitcast i32* %263 to i8*
  call void @_ZdlPv(i8* %269) #10
  br label %270

270:                                              ; preds = %265, %261
  %271 = bitcast %"class.std::__1::vector.3"* %196 to i8*
  call void @_ZdlPv(i8* %271) #10
  br label %272

272:                                              ; preds = %270, %193
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %273 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %274 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %273, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %273, align 8
  %275 = icmp eq %"class.std::__1::vector.3"* %274, null
  br i1 %275, label %209, label %198
}

declare i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4BoolD0Ev(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.spvtools::opt::analysis::Bool"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE(%"class.spvtools::opt::analysis::Bool"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1251"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.spvtools::opt::analysis::Type"* %1 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %5 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %5, i64 9
  %7 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %6, align 8
  %8 = tail call %"class.spvtools::opt::analysis::Bool"* %7(%"class.spvtools::opt::analysis::Type"* %1) #11
  %9 = icmp eq %"class.spvtools::opt::analysis::Bool"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.spvtools::opt::analysis::Bool"* %0 to %"class.spvtools::opt::analysis::Type"*
  %12 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis4Type18HasSameDecorationsEPKS2_(%"class.spvtools::opt::analysis::Type"* %11, %"class.spvtools::opt::analysis::Type"* %1) #11
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i1 [ false, %3 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Bool3strEv(%"class.std::__1::basic_string"* noalias sret, %"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 4, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819242338, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE(%"class.spvtools::opt::analysis::Bool"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1261"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Bool6AsBoolEv(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Bool6AsBoolEv(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare zeroext i1 @_ZNK8spvtools3opt8analysis4Type18HasSameDecorationsEPKS2_(%"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.1096"*, align 8
  %3 = alloca %"struct.std::__1::pair.1096"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1309", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.1096"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %11, i64 1
  store %"struct.std::__1::pair.1096"** %14, %"struct.std::__1::pair.1096"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.1096"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.1096"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.1096"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.1096"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.1096"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.1096"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.1096"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.1096"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.1096"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.1096"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %33, i64 %36
  store %"struct.std::__1::pair.1096"** %44, %"struct.std::__1::pair.1096"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %43, i64 %32
  store %"struct.std::__1::pair.1096"** %45, %"struct.std::__1::pair.1096"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.1096"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.1096"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #10
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.1096"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.1096"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.1096"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.1096"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.1096"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.1096"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.1096"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.1096"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.1096"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !101

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.1096"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.1096"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.1096"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.1096"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.1096"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.1096"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.1096"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1096"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.1096"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1096"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.1096"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1096"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.1096"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1096"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.1096"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1096"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.1096"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.1096"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.1096"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.1096"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.1096"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.1096"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.1096"** %70 to i64
  %146 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.1096"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.1096"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.1096"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.1096"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.1096"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  %156 = bitcast %"struct.std::__1::pair.1096"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %160, i64 1
  store %"struct.std::__1::pair.1096"** %161, %"struct.std::__1::pair.1096"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.1096"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.1096"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.1096"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.1096"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.1096"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.1096"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #10
  %187 = bitcast %"struct.std::__1::pair.1096"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1096"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.1096"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #10
  %191 = bitcast %"struct.std::__1::pair.1096"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1096"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.1096"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %192, i64 1
  store %"struct.std::__1::pair.1096"** %195, %"struct.std::__1::pair.1096"*** %167, align 8
  %196 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %164, align 8
  %197 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.1096"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.1096"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.1096"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.1096"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.1096"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.1096"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.1096"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.1096"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.1096"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.1096"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %212, i64 %215
  store %"struct.std::__1::pair.1096"** %223, %"struct.std::__1::pair.1096"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %222, i64 %211
  store %"struct.std::__1::pair.1096"** %224, %"struct.std::__1::pair.1096"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.1096"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #10
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.1096"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.1096"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.1096"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.1096"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.1096"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.1096"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.1096"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.1096"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.1096"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !102

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.1096"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.1096"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.1096"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.1096"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.1096"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.1096"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.1096"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.1096"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.1096"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.1096"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.1096"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.1096"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.1096"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.1096"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.1096"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.1096"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.1096"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.1096"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.1096"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.1096"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.1096"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.1096"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.1096"** %247 to i64
  %323 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.1096"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.1096"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.1096"** %325 to i8*
  call void @_ZdlPv(i8* %330) #10
  %331 = bitcast %"struct.std::__1::pair.1096"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %335, i64 1
  store %"struct.std::__1::pair.1096"** %336, %"struct.std::__1::pair.1096"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1309"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1309"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1096"** null, %"struct.std::__1::pair.1096"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1100"** %342 to %"class.std::__1::__compressed_pair.1097"**
  store %"class.std::__1::__compressed_pair.1097"* %346, %"class.std::__1::__compressed_pair.1097"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #10
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.1096"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1309"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %354, i64 %171
  store %"struct.std::__1::pair.1096"** %356, %"struct.std::__1::pair.1096"*** %340, align 8
  store %"struct.std::__1::pair.1096"** %356, %"struct.std::__1::pair.1096"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %354, i64 %345
  store %"struct.std::__1::pair.1096"** %357, %"struct.std::__1::pair.1096"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #10
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.1096"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.1096"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.1096"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %356, i64 %370
  store %"struct.std::__1::pair.1096"** %371, %"struct.std::__1::pair.1096"*** %340, align 8
  store %"struct.std::__1::pair.1096"** %371, %"struct.std::__1::pair.1096"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.1096"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1309"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.1096"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #10
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.1096"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.1096"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.1096"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.1096"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.1096"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #10
  %394 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %164, align 8
  %395 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.1096"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.1096"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.1096"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.1096"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.1096"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.1096"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %406, i64 1
  store %"struct.std::__1::pair.1096"** %408, %"struct.std::__1::pair.1096"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.1096"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.1096"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1309"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.1096"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.1096"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.1096"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.1096"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1309"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.1096"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.1096"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.1096"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.1096"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.1096"**
  %442 = icmp eq %"struct.std::__1::pair.1096"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1096"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %441, i64 %448
  store %"struct.std::__1::pair.1096"** %449, %"struct.std::__1::pair.1096"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #10
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.1096"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1309"* nonnull %4, %"struct.std::__1::pair.1096"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.1096"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1096"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1096"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1096"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.1096"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.1096"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.1096"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.1096"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1096"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.1096"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.1096"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.1096"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %23, i64 %26
  store %"struct.std::__1::pair.1096"** %34, %"struct.std::__1::pair.1096"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %33, i64 %22
  store %"struct.std::__1::pair.1096"** %35, %"struct.std::__1::pair.1096"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.1096"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.1096"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.1096"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.1096"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.1096"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.1096"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1096"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.1096"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.1096"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.1096"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.1096"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !103

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.1096"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.1096"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.1096"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.1096"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.1096"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.1096"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.1096"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.1096"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.1096"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.1096"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.1096"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1096"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.1096"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1096"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.1096"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1096"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.1096"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1096"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.1096"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1096"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.1096"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.1096"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.1096"** %60 to i64
  %136 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.1096"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.1096"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.1096"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.1096"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.1096"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast %"struct.std::__1::pair.1096"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.1096"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %152, i64 1
  store %"struct.std::__1::pair.1096"** %153, %"struct.std::__1::pair.1096"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1096"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1096"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1096"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1096"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1096"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1096"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1096"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1096"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1096"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1096"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1096"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1096"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1096"** %36, %"struct.std::__1::pair.1096"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %35, i64 %22
  store %"struct.std::__1::pair.1096"** %37, %"struct.std::__1::pair.1096"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1096"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1096"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1096"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1096"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1096"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1096"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1096"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1096"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1096"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !104

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1096"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1096"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1096"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1096"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1096"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1096"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1096"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1096"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1096"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1096"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1096"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1096"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1096"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1096"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1096"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1096"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1096"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1096"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1096"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1096"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1096"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1096"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1096"** %61 to i64
  %137 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1096"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1096"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1096"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1096"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1096"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1096"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1096"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1096"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %153, i64 -1
  store %"struct.std::__1::pair.1096"** %154, %"struct.std::__1::pair.1096"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1309"*, %"struct.std::__1::pair.1096"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1096"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1096"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1309", %"struct.std::__1::__split_buffer.1309"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1096"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1096"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1096"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1096"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1096"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1096"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1096"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1096"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1096"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1096"** %36, %"struct.std::__1::pair.1096"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %35, i64 %22
  store %"struct.std::__1::pair.1096"** %37, %"struct.std::__1::pair.1096"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1309"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1096"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1096"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1096"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1096"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1096"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1096"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1096"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1096"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1096"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !105

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1096"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1096"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1096"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1096"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1096"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1096"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1096"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1096"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1096"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1096"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1096"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1096"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1096"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1096"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1096"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1096"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1096"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1096"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1096"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1096"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1096"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1096"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1096"** %61 to i64
  %137 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1096"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1096"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1096"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1096"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1096"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1096"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1096"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1096"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %153, i64 -1
  store %"struct.std::__1::pair.1096"** %154, %"struct.std::__1::pair.1096"*** %3, align 8
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt4Loop7IsLCSSAEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv(%"class.spvtools::opt::LoopUtils"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"*, %"class.std::__1::__tree_node.1326"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1326"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1326"* %1 to %"class.std::__1::__tree_node.1326"**
  %6 = load %"class.std::__1::__tree_node.1326"*, %"class.std::__1::__tree_node.1326"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %0, %"class.std::__1::__tree_node.1326"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1326", %"class.std::__1::__tree_node.1326"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1326"**
  %9 = load %"class.std::__1::__tree_node.1326"*, %"class.std::__1::__tree_node.1326"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %0, %"class.std::__1::__tree_node.1326"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1326"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"*, %"class.std::__1::__tree_node.1335"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1335"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1335"* %1 to %"class.std::__1::__tree_node.1335"**
  %6 = load %"class.std::__1::__tree_node.1335"*, %"class.std::__1::__tree_node.1335"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %0, %"class.std::__1::__tree_node.1335"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1335", %"class.std::__1::__tree_node.1335"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1335"**
  %9 = load %"class.std::__1::__tree_node.1335"*, %"class.std::__1::__tree_node.1335"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %0, %"class.std::__1::__tree_node.1335"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1335"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_(%"struct.std::__1::default_delete.692"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 4, i32 0
  %6 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.1326"**
  %8 = load %"class.std::__1::__tree_node.1326"*, %"class.std::__1::__tree_node.1326"** %7, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.681"* %5, %"class.std::__1::__tree_node.1326"* %8) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.663"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %4, %25
  %13 = phi %"struct.std::__1::__hash_node_base.663"* [ %15, %25 ], [ %10, %4 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.663"*, %"struct.std::__1::__hash_node_base.663"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.663", %"struct.std::__1::__hash_node_base.663"* %13, i64 2
  %17 = bitcast %"struct.std::__1::__hash_node_base.663"* %16 to %"class.spvtools::opt::SENode"**
  %18 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %17, align 8
  store %"class.spvtools::opt::SENode"* null, %"class.spvtools::opt::SENode"** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::SENode"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.spvtools::opt::SENode"* %18 to void (%"class.spvtools::opt::SENode"*)***
  %22 = load void (%"class.spvtools::opt::SENode"*)**, void (%"class.spvtools::opt::SENode"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %22, i64 2
  %24 = load void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %23, align 8
  tail call void %24(%"class.spvtools::opt::SENode"* nonnull %18) #11
  br label %25

25:                                               ; preds = %20, %12
  %26 = bitcast %"struct.std::__1::__hash_node_base.663"* %13 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  %27 = icmp eq %"struct.std::__1::__hash_node_base.663"* %15, null
  br i1 %27, label %28, label %12

28:                                               ; preds = %25, %4
  %29 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.663"**, %"struct.std::__1::__hash_node_base.663"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.663"** null, %"struct.std::__1::__hash_node_base.663"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.663"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.663"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node.1335"**
  %38 = load %"class.std::__1::__tree_node.1335"*, %"class.std::__1::__tree_node.1335"** %37, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.642"* %35, %"class.std::__1::__tree_node.1335"* %38) #11
  %39 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1 to i8*
  tail call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %34, %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #11
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #10
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #10
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #10
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18SimplifyExpressionEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #2

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis13CreateAddNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #2

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateNegationEPNS0_6SENodeE(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #10, !noalias !106
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !106
  store i32 %58, i32* %57, align 4, !noalias !106
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !106
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"**
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8, !noalias !106
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.922"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.922"* %104, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.922"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.922"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } undef, %"struct.std::__1::__hash_node_base.922"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.922"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.918"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.922"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.922"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !109

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.922"* %36, %"struct.std::__1::__hash_node_base.922"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.922"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.922"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.922"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.922"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.922"* %82, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.922"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.922"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.922"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.922"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.922"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.922"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.922"* %80, %"struct.std::__1::__hash_node_base.922"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.922"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.922"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.922"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.922"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1365"**
  %49 = load %"class.std::__1::__tree_node.1365"*, %"class.std::__1::__tree_node.1365"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node.1365"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node.1365"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1365"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1365"* %1 to %"class.std::__1::__tree_node.1365"**
  %6 = load %"class.std::__1::__tree_node.1365"*, %"class.std::__1::__tree_node.1365"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1365"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1365", %"class.std::__1::__tree_node.1365"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1365"**
  %9 = load %"class.std::__1::__tree_node.1365"*, %"class.std::__1::__tree_node.1365"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1365"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1365"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::unique_ptr.40"* %2 to i64
  %6 = ptrtoint %"class.std::__1::unique_ptr.40"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.std::__1::unique_ptr.40"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %559

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.40"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr.40"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::unique_ptr.40"** %16 to i64*
  br i1 %21, label %246, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %116

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::unique_ptr.40"* %28, %3
  br i1 %29, label %111, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %3, i64 %31, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.spvtools::opt::BasicBlock"** %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"class.std::__1::unique_ptr.40"* [ %48, %39 ], [ %17, %30 ]
  %41 = phi %"class.std::__1::unique_ptr.40"* [ %47, %39 ], [ %28, %30 ]
  %42 = phi i64 [ %49, %39 ], [ %37, %30 ]
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %40 to i64*
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.40"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %44, align 8
  store i64 %46, i64* %43, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %41, i64 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %40, i64 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !110

51:                                               ; preds = %39, %30
  %52 = phi %"class.std::__1::unique_ptr.40"* [ undef, %30 ], [ %48, %39 ]
  %53 = phi %"class.std::__1::unique_ptr.40"* [ %17, %30 ], [ %48, %39 ]
  %54 = phi %"class.std::__1::unique_ptr.40"* [ %28, %30 ], [ %47, %39 ]
  %55 = icmp ult i64 %34, 56
  br i1 %55, label %108, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %106, %56 ], [ %53, %51 ]
  %58 = phi %"class.std::__1::unique_ptr.40"* [ %105, %56 ], [ %54, %51 ]
  %59 = bitcast %"class.std::__1::unique_ptr.40"* %57 to i64*
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr.40"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %60, align 8
  store i64 %62, i64* %59, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 1
  %65 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %66, align 8
  store i64 %68, i64* %65, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 2
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 2
  %71 = bitcast %"class.std::__1::unique_ptr.40"* %70 to i64*
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr.40"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %72, align 8
  store i64 %74, i64* %71, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 3
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 3
  %77 = bitcast %"class.std::__1::unique_ptr.40"* %76 to i64*
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr.40"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8
  store i64 %80, i64* %77, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 4
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 4
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %82 to i64*
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.40"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %84, align 8
  store i64 %86, i64* %83, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 5
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 5
  %89 = bitcast %"class.std::__1::unique_ptr.40"* %88 to i64*
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr.40"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %90, align 8
  store i64 %92, i64* %89, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 6
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 6
  %95 = bitcast %"class.std::__1::unique_ptr.40"* %94 to i64*
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr.40"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %96, align 8
  store i64 %98, i64* %95, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 7
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 7
  %101 = bitcast %"class.std::__1::unique_ptr.40"* %100 to i64*
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.40"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  store i64 %104, i64* %101, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 8
  %107 = icmp eq %"class.std::__1::unique_ptr.40"* %105, %3
  br i1 %107, label %108, label %56

108:                                              ; preds = %56, %51
  %109 = phi %"class.std::__1::unique_ptr.40"* [ %52, %51 ], [ %106, %56 ]
  %110 = ptrtoint %"class.std::__1::unique_ptr.40"* %109 to i64
  br label %111

111:                                              ; preds = %108, %27
  %112 = phi i64 [ %18, %27 ], [ %110, %108 ]
  store i64 %112, i64* %22, align 8
  %113 = icmp sgt i64 %24, 0
  br i1 %113, label %114, label %559

114:                                              ; preds = %111
  %115 = inttoptr i64 %112 to %"class.std::__1::unique_ptr.40"*
  br label %116

116:                                              ; preds = %114, %23
  %117 = phi i64 [ %112, %114 ], [ %18, %23 ]
  %118 = phi %"class.std::__1::unique_ptr.40"* [ %115, %114 ], [ %17, %23 ]
  %119 = phi %"class.std::__1::unique_ptr.40"* [ %28, %114 ], [ %3, %23 ]
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %10
  %121 = ptrtoint %"class.std::__1::unique_ptr.40"* %120 to i64
  %122 = sub i64 %117, %121
  %123 = ashr exact i64 %122, 3
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %123
  %125 = icmp ult %"class.std::__1::unique_ptr.40"* %124, %17
  br i1 %125, label %126, label %157

126:                                              ; preds = %116
  %127 = sub nsw i64 0, %123
  %128 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %17, i64 %127, i32 0, i32 0, i32 0
  %129 = bitcast %"class.spvtools::opt::BasicBlock"** %128 to i8*
  %130 = xor i64 %6, -1
  %131 = getelementptr i8, i8* %129, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %126, %137
  %138 = phi %"class.std::__1::unique_ptr.40"* [ %146, %137 ], [ %118, %126 ]
  %139 = phi %"class.std::__1::unique_ptr.40"* [ %145, %137 ], [ %124, %126 ]
  %140 = phi i64 [ %147, %137 ], [ %135, %126 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr.40"* %139 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.40"* %138 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 1
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 1
  %147 = add i64 %140, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %137, !llvm.loop !111

149:                                              ; preds = %137, %126
  %150 = phi %"class.std::__1::unique_ptr.40"* [ %118, %126 ], [ %146, %137 ]
  %151 = phi %"class.std::__1::unique_ptr.40"* [ %124, %126 ], [ %145, %137 ]
  %152 = phi %"class.std::__1::unique_ptr.40"* [ undef, %126 ], [ %146, %137 ]
  %153 = icmp ult i8* %131, inttoptr (i64 56 to i8*)
  br i1 %153, label %154, label %176

154:                                              ; preds = %176, %149
  %155 = phi %"class.std::__1::unique_ptr.40"* [ %152, %149 ], [ %226, %176 ]
  %156 = ptrtoint %"class.std::__1::unique_ptr.40"* %155 to i64
  br label %157

157:                                              ; preds = %154, %116
  %158 = phi i64 [ %156, %154 ], [ %117, %116 ]
  store i64 %158, i64* %22, align 8
  %159 = icmp eq i64 %122, 0
  br i1 %159, label %228, label %160

160:                                              ; preds = %157, %174
  %161 = phi %"class.std::__1::unique_ptr.40"* [ %164, %174 ], [ %118, %157 ]
  %162 = phi %"class.std::__1::unique_ptr.40"* [ %163, %174 ], [ %124, %157 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %162, i64 -1
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %161, i64 -1
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %163, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr.40"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %165, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %164, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = bitcast %"class.std::__1::unique_ptr.40"* %164 to i64*
  store i64 %167, i64* %170, align 8
  %171 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %160
  %173 = bitcast %"class.std::__1::unique_ptr.40"* %164 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %173, %"class.spvtools::opt::BasicBlock"* nonnull %169) #11
  br label %174

174:                                              ; preds = %172, %160
  %175 = icmp eq %"class.std::__1::unique_ptr.40"* %163, %1
  br i1 %175, label %228, label %160

176:                                              ; preds = %149, %176
  %177 = phi %"class.std::__1::unique_ptr.40"* [ %226, %176 ], [ %150, %149 ]
  %178 = phi %"class.std::__1::unique_ptr.40"* [ %225, %176 ], [ %151, %149 ]
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::unique_ptr.40"* %178 to i64*
  %181 = load i64, i64* %180, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %179, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.40"* %177 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 1
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 1
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::unique_ptr.40"* %183 to i64*
  %187 = load i64, i64* %186, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %185, align 8
  %188 = bitcast %"class.std::__1::unique_ptr.40"* %184 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 2
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 2
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = bitcast %"class.std::__1::unique_ptr.40"* %189 to i64*
  %193 = load i64, i64* %192, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %191, align 8
  %194 = bitcast %"class.std::__1::unique_ptr.40"* %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 3
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 3
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %195, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::unique_ptr.40"* %195 to i64*
  %199 = load i64, i64* %198, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %197, align 8
  %200 = bitcast %"class.std::__1::unique_ptr.40"* %196 to i64*
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 4
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 4
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %201, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast %"class.std::__1::unique_ptr.40"* %201 to i64*
  %205 = load i64, i64* %204, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %203, align 8
  %206 = bitcast %"class.std::__1::unique_ptr.40"* %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 5
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 5
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %207, i64 0, i32 0, i32 0, i32 0
  %210 = bitcast %"class.std::__1::unique_ptr.40"* %207 to i64*
  %211 = load i64, i64* %210, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %209, align 8
  %212 = bitcast %"class.std::__1::unique_ptr.40"* %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 6
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 6
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %213, i64 0, i32 0, i32 0, i32 0
  %216 = bitcast %"class.std::__1::unique_ptr.40"* %213 to i64*
  %217 = load i64, i64* %216, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %215, align 8
  %218 = bitcast %"class.std::__1::unique_ptr.40"* %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 7
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 7
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %219, i64 0, i32 0, i32 0, i32 0
  %222 = bitcast %"class.std::__1::unique_ptr.40"* %219 to i64*
  %223 = load i64, i64* %222, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %221, align 8
  %224 = bitcast %"class.std::__1::unique_ptr.40"* %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %178, i64 8
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 8
  %227 = icmp ult %"class.std::__1::unique_ptr.40"* %225, %17
  br i1 %227, label %176, label %154

228:                                              ; preds = %174, %157
  %229 = icmp eq %"class.std::__1::unique_ptr.40"* %119, %2
  br i1 %229, label %559, label %230

230:                                              ; preds = %228, %242
  %231 = phi %"class.std::__1::unique_ptr.40"* [ %244, %242 ], [ %1, %228 ]
  %232 = phi %"class.std::__1::unique_ptr.40"* [ %243, %242 ], [ %2, %228 ]
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %232, i64 0, i32 0, i32 0, i32 0
  %234 = bitcast %"class.std::__1::unique_ptr.40"* %232 to i64*
  %235 = load i64, i64* %234, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %233, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %231, i64 0, i32 0, i32 0, i32 0
  %237 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %236, align 8
  %238 = bitcast %"class.std::__1::unique_ptr.40"* %231 to i64*
  store i64 %235, i64* %238, align 8
  %239 = icmp eq %"class.spvtools::opt::BasicBlock"* %237, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %230
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %231 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %241, %"class.spvtools::opt::BasicBlock"* nonnull %237) #11
  br label %242

242:                                              ; preds = %240, %230
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %232, i64 1
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %231, i64 1
  %245 = icmp eq %"class.std::__1::unique_ptr.40"* %243, %119
  br i1 %245, label %559, label %230

246:                                              ; preds = %12
  %247 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %18, %248
  %250 = ashr exact i64 %249, 3
  %251 = add nsw i64 %250, %10
  %252 = icmp ugt i64 %251, 2305843009213693951
  br i1 %252, label %253, label %255

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %254) #12
  unreachable

255:                                              ; preds = %246
  %256 = sub i64 %15, %248
  %257 = ashr exact i64 %256, 3
  %258 = icmp ult i64 %257, 1152921504606846975
  br i1 %258, label %262, label %259

259:                                              ; preds = %255
  %260 = sub i64 %6, %248
  %261 = ashr exact i64 %260, 3
  br label %272

262:                                              ; preds = %255
  %263 = ashr exact i64 %256, 2
  %264 = icmp ult i64 %263, %251
  %265 = select i1 %264, i64 %251, i64 %263
  %266 = sub i64 %6, %248
  %267 = ashr exact i64 %266, 3
  %268 = icmp eq i64 %265, 0
  br i1 %268, label %278, label %269

269:                                              ; preds = %262
  %270 = icmp ugt i64 %265, 2305843009213693951
  br i1 %270, label %271, label %272

271:                                              ; preds = %269
  tail call void @abort() #12
  unreachable

272:                                              ; preds = %259, %269
  %273 = phi i64 [ 2305843009213693951, %259 ], [ %265, %269 ]
  %274 = phi i64 [ %261, %259 ], [ %267, %269 ]
  %275 = shl i64 %273, 3
  %276 = tail call i8* @_Znwm(i64 %275) #10
  %277 = bitcast i8* %276 to %"class.std::__1::unique_ptr.40"*
  br label %278

278:                                              ; preds = %272, %262
  %279 = phi i64 [ %274, %272 ], [ %267, %262 ]
  %280 = phi i64 [ %273, %272 ], [ 0, %262 ]
  %281 = phi %"class.std::__1::unique_ptr.40"* [ %277, %272 ], [ null, %262 ]
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %281, i64 %279
  %283 = ptrtoint %"class.std::__1::unique_ptr.40"* %282 to i64
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %281, i64 %280
  %285 = ptrtoint %"class.std::__1::unique_ptr.40"* %284 to i64
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %282, i64 %10
  %287 = add i64 %9, -8
  %288 = lshr i64 %287, 3
  %289 = add nuw nsw i64 %288, 1
  %290 = and i64 %289, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %308, label %292

292:                                              ; preds = %278, %292
  %293 = phi %"class.std::__1::unique_ptr.40"* [ %301, %292 ], [ %282, %278 ]
  %294 = phi i64 [ %302, %292 ], [ %283, %278 ]
  %295 = phi %"class.std::__1::unique_ptr.40"* [ %303, %292 ], [ %2, %278 ]
  %296 = phi i64 [ %304, %292 ], [ %290, %278 ]
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %295, i64 0, i32 0, i32 0, i32 0
  %298 = bitcast %"class.std::__1::unique_ptr.40"* %295 to i64*
  %299 = load i64, i64* %298, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %297, align 8
  %300 = inttoptr i64 %294 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %293, i64 1
  %302 = ptrtoint %"class.std::__1::unique_ptr.40"* %301 to i64
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %295, i64 1
  %304 = add i64 %296, -1
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %292, !llvm.loop !112

306:                                              ; preds = %292
  %307 = ptrtoint %"class.std::__1::unique_ptr.40"* %301 to i64
  br label %308

308:                                              ; preds = %278, %306
  %309 = phi %"class.std::__1::unique_ptr.40"* [ %282, %278 ], [ %301, %306 ]
  %310 = phi i64 [ %283, %278 ], [ %307, %306 ]
  %311 = phi %"class.std::__1::unique_ptr.40"* [ %2, %278 ], [ %303, %306 ]
  %312 = icmp ult i64 %287, 56
  br i1 %312, label %367, label %313

313:                                              ; preds = %308, %313
  %314 = phi %"class.std::__1::unique_ptr.40"* [ %363, %313 ], [ %309, %308 ]
  %315 = phi i64 [ %364, %313 ], [ %310, %308 ]
  %316 = phi %"class.std::__1::unique_ptr.40"* [ %365, %313 ], [ %311, %308 ]
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 0, i32 0, i32 0, i32 0
  %318 = bitcast %"class.std::__1::unique_ptr.40"* %316 to i64*
  %319 = load i64, i64* %318, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %317, align 8
  %320 = inttoptr i64 %315 to i64*
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 1
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 1
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %322, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr.40"* %322 to i64*
  %325 = load i64, i64* %324, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %323, align 8
  %326 = bitcast %"class.std::__1::unique_ptr.40"* %321 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 2
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 2
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = bitcast %"class.std::__1::unique_ptr.40"* %328 to i64*
  %331 = load i64, i64* %330, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %329, align 8
  %332 = bitcast %"class.std::__1::unique_ptr.40"* %327 to i64*
  store i64 %331, i64* %332, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 3
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 3
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %334, i64 0, i32 0, i32 0, i32 0
  %336 = bitcast %"class.std::__1::unique_ptr.40"* %334 to i64*
  %337 = load i64, i64* %336, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %335, align 8
  %338 = bitcast %"class.std::__1::unique_ptr.40"* %333 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 4
  %340 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 4
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %340, i64 0, i32 0, i32 0, i32 0
  %342 = bitcast %"class.std::__1::unique_ptr.40"* %340 to i64*
  %343 = load i64, i64* %342, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %341, align 8
  %344 = bitcast %"class.std::__1::unique_ptr.40"* %339 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 5
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 5
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %346, i64 0, i32 0, i32 0, i32 0
  %348 = bitcast %"class.std::__1::unique_ptr.40"* %346 to i64*
  %349 = load i64, i64* %348, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %347, align 8
  %350 = bitcast %"class.std::__1::unique_ptr.40"* %345 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 6
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 6
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %352, i64 0, i32 0, i32 0, i32 0
  %354 = bitcast %"class.std::__1::unique_ptr.40"* %352 to i64*
  %355 = load i64, i64* %354, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %353, align 8
  %356 = bitcast %"class.std::__1::unique_ptr.40"* %351 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 7
  %358 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 7
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %358, i64 0, i32 0, i32 0, i32 0
  %360 = bitcast %"class.std::__1::unique_ptr.40"* %358 to i64*
  %361 = load i64, i64* %360, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %359, align 8
  %362 = bitcast %"class.std::__1::unique_ptr.40"* %357 to i64*
  store i64 %361, i64* %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 8
  %364 = ptrtoint %"class.std::__1::unique_ptr.40"* %363 to i64
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %316, i64 8
  %366 = icmp eq %"class.std::__1::unique_ptr.40"* %286, %363
  br i1 %366, label %367, label %313

367:                                              ; preds = %313, %308
  %368 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %369 = icmp eq %"class.std::__1::unique_ptr.40"* %368, %1
  br i1 %369, label %451, label %370

370:                                              ; preds = %367
  %371 = ptrtoint %"class.std::__1::unique_ptr.40"* %368 to i64
  %372 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 -1, i32 0, i32 0, i32 0
  %373 = ptrtoint %"class.spvtools::opt::BasicBlock"** %372 to i64
  %374 = sub i64 %373, %371
  %375 = lshr i64 %374, 3
  %376 = add nuw nsw i64 %375, 1
  %377 = and i64 %376, 7
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %391, label %379

379:                                              ; preds = %370, %379
  %380 = phi %"class.std::__1::unique_ptr.40"* [ %383, %379 ], [ %282, %370 ]
  %381 = phi %"class.std::__1::unique_ptr.40"* [ %384, %379 ], [ %1, %370 ]
  %382 = phi i64 [ %389, %379 ], [ %377, %370 ]
  %383 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %380, i64 -1
  %384 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %381, i64 -1
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %384, i64 0, i32 0, i32 0, i32 0
  %386 = bitcast %"class.std::__1::unique_ptr.40"* %384 to i64*
  %387 = load i64, i64* %386, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %385, align 8
  %388 = bitcast %"class.std::__1::unique_ptr.40"* %383 to i64*
  store i64 %387, i64* %388, align 8
  %389 = add i64 %382, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %379, !llvm.loop !113

391:                                              ; preds = %379, %370
  %392 = phi %"class.std::__1::unique_ptr.40"* [ undef, %370 ], [ %383, %379 ]
  %393 = phi %"class.std::__1::unique_ptr.40"* [ %282, %370 ], [ %383, %379 ]
  %394 = phi %"class.std::__1::unique_ptr.40"* [ %1, %370 ], [ %384, %379 ]
  %395 = icmp ult i64 %374, 56
  br i1 %395, label %448, label %396

396:                                              ; preds = %391, %396
  %397 = phi %"class.std::__1::unique_ptr.40"* [ %441, %396 ], [ %393, %391 ]
  %398 = phi %"class.std::__1::unique_ptr.40"* [ %442, %396 ], [ %394, %391 ]
  %399 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -1
  %400 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = bitcast %"class.std::__1::unique_ptr.40"* %400 to i64*
  %403 = load i64, i64* %402, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %401, align 8
  %404 = bitcast %"class.std::__1::unique_ptr.40"* %399 to i64*
  store i64 %403, i64* %404, align 8
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -2
  %406 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -2
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %406, i64 0, i32 0, i32 0, i32 0
  %408 = bitcast %"class.std::__1::unique_ptr.40"* %406 to i64*
  %409 = load i64, i64* %408, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %407, align 8
  %410 = bitcast %"class.std::__1::unique_ptr.40"* %405 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -3
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -3
  %413 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %412, i64 0, i32 0, i32 0, i32 0
  %414 = bitcast %"class.std::__1::unique_ptr.40"* %412 to i64*
  %415 = load i64, i64* %414, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %413, align 8
  %416 = bitcast %"class.std::__1::unique_ptr.40"* %411 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -4
  %418 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -4
  %419 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %418, i64 0, i32 0, i32 0, i32 0
  %420 = bitcast %"class.std::__1::unique_ptr.40"* %418 to i64*
  %421 = load i64, i64* %420, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %419, align 8
  %422 = bitcast %"class.std::__1::unique_ptr.40"* %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -5
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -5
  %425 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %424, i64 0, i32 0, i32 0, i32 0
  %426 = bitcast %"class.std::__1::unique_ptr.40"* %424 to i64*
  %427 = load i64, i64* %426, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %425, align 8
  %428 = bitcast %"class.std::__1::unique_ptr.40"* %423 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -6
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -6
  %431 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %430, i64 0, i32 0, i32 0, i32 0
  %432 = bitcast %"class.std::__1::unique_ptr.40"* %430 to i64*
  %433 = load i64, i64* %432, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %431, align 8
  %434 = bitcast %"class.std::__1::unique_ptr.40"* %429 to i64*
  store i64 %433, i64* %434, align 8
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -7
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -7
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %436, i64 0, i32 0, i32 0, i32 0
  %438 = bitcast %"class.std::__1::unique_ptr.40"* %436 to i64*
  %439 = load i64, i64* %438, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %437, align 8
  %440 = bitcast %"class.std::__1::unique_ptr.40"* %435 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %397, i64 -8
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %398, i64 -8
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %442, i64 0, i32 0, i32 0, i32 0
  %444 = bitcast %"class.std::__1::unique_ptr.40"* %442 to i64*
  %445 = load i64, i64* %444, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %443, align 8
  %446 = bitcast %"class.std::__1::unique_ptr.40"* %441 to i64*
  store i64 %445, i64* %446, align 8
  %447 = icmp eq %"class.std::__1::unique_ptr.40"* %442, %368
  br i1 %447, label %448, label %396

448:                                              ; preds = %396, %391
  %449 = phi %"class.std::__1::unique_ptr.40"* [ %392, %391 ], [ %441, %396 ]
  %450 = ptrtoint %"class.std::__1::unique_ptr.40"* %449 to i64
  br label %451

451:                                              ; preds = %448, %367
  %452 = phi i64 [ %283, %367 ], [ %450, %448 ]
  %453 = phi %"class.std::__1::unique_ptr.40"* [ %282, %367 ], [ %449, %448 ]
  %454 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %16, align 8
  %455 = icmp eq %"class.std::__1::unique_ptr.40"* %454, %1
  br i1 %455, label %481, label %456

456:                                              ; preds = %451
  %457 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %454, i64 -1, i32 0, i32 0, i32 0
  %458 = ptrtoint %"class.spvtools::opt::BasicBlock"** %457 to i64
  %459 = sub i64 %458, %6
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %476, label %464

464:                                              ; preds = %456, %464
  %465 = phi %"class.std::__1::unique_ptr.40"* [ %473, %464 ], [ %286, %456 ]
  %466 = phi %"class.std::__1::unique_ptr.40"* [ %472, %464 ], [ %1, %456 ]
  %467 = phi i64 [ %474, %464 ], [ %462, %456 ]
  %468 = bitcast %"class.std::__1::unique_ptr.40"* %465 to i64*
  %469 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %466, i64 0, i32 0, i32 0, i32 0
  %470 = bitcast %"class.std::__1::unique_ptr.40"* %466 to i64*
  %471 = load i64, i64* %470, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %469, align 8
  store i64 %471, i64* %468, align 8
  %472 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %466, i64 1
  %473 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %465, i64 1
  %474 = add i64 %467, -1
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %476, label %464, !llvm.loop !114

476:                                              ; preds = %464, %456
  %477 = phi %"class.std::__1::unique_ptr.40"* [ undef, %456 ], [ %473, %464 ]
  %478 = phi %"class.std::__1::unique_ptr.40"* [ %286, %456 ], [ %473, %464 ]
  %479 = phi %"class.std::__1::unique_ptr.40"* [ %1, %456 ], [ %472, %464 ]
  %480 = icmp ult i64 %459, 56
  br i1 %480, label %535, label %483

481:                                              ; preds = %451
  %482 = ptrtoint %"class.std::__1::unique_ptr.40"* %453 to i64
  br label %538

483:                                              ; preds = %476, %483
  %484 = phi %"class.std::__1::unique_ptr.40"* [ %533, %483 ], [ %478, %476 ]
  %485 = phi %"class.std::__1::unique_ptr.40"* [ %532, %483 ], [ %479, %476 ]
  %486 = bitcast %"class.std::__1::unique_ptr.40"* %484 to i64*
  %487 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 0, i32 0, i32 0, i32 0
  %488 = bitcast %"class.std::__1::unique_ptr.40"* %485 to i64*
  %489 = load i64, i64* %488, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %487, align 8
  store i64 %489, i64* %486, align 8
  %490 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 1
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 1
  %492 = bitcast %"class.std::__1::unique_ptr.40"* %491 to i64*
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %490, i64 0, i32 0, i32 0, i32 0
  %494 = bitcast %"class.std::__1::unique_ptr.40"* %490 to i64*
  %495 = load i64, i64* %494, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %493, align 8
  store i64 %495, i64* %492, align 8
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 2
  %497 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 2
  %498 = bitcast %"class.std::__1::unique_ptr.40"* %497 to i64*
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %496, i64 0, i32 0, i32 0, i32 0
  %500 = bitcast %"class.std::__1::unique_ptr.40"* %496 to i64*
  %501 = load i64, i64* %500, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %499, align 8
  store i64 %501, i64* %498, align 8
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 3
  %503 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 3
  %504 = bitcast %"class.std::__1::unique_ptr.40"* %503 to i64*
  %505 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %502, i64 0, i32 0, i32 0, i32 0
  %506 = bitcast %"class.std::__1::unique_ptr.40"* %502 to i64*
  %507 = load i64, i64* %506, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %505, align 8
  store i64 %507, i64* %504, align 8
  %508 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 4
  %509 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 4
  %510 = bitcast %"class.std::__1::unique_ptr.40"* %509 to i64*
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %508, i64 0, i32 0, i32 0, i32 0
  %512 = bitcast %"class.std::__1::unique_ptr.40"* %508 to i64*
  %513 = load i64, i64* %512, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %511, align 8
  store i64 %513, i64* %510, align 8
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 5
  %515 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 5
  %516 = bitcast %"class.std::__1::unique_ptr.40"* %515 to i64*
  %517 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %514, i64 0, i32 0, i32 0, i32 0
  %518 = bitcast %"class.std::__1::unique_ptr.40"* %514 to i64*
  %519 = load i64, i64* %518, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %517, align 8
  store i64 %519, i64* %516, align 8
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 6
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 6
  %522 = bitcast %"class.std::__1::unique_ptr.40"* %521 to i64*
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %520, i64 0, i32 0, i32 0, i32 0
  %524 = bitcast %"class.std::__1::unique_ptr.40"* %520 to i64*
  %525 = load i64, i64* %524, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %523, align 8
  store i64 %525, i64* %522, align 8
  %526 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 7
  %527 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 7
  %528 = bitcast %"class.std::__1::unique_ptr.40"* %527 to i64*
  %529 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %526, i64 0, i32 0, i32 0, i32 0
  %530 = bitcast %"class.std::__1::unique_ptr.40"* %526 to i64*
  %531 = load i64, i64* %530, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %529, align 8
  store i64 %531, i64* %528, align 8
  %532 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %485, i64 8
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %484, i64 8
  %534 = icmp eq %"class.std::__1::unique_ptr.40"* %532, %454
  br i1 %534, label %535, label %483

535:                                              ; preds = %483, %476
  %536 = phi %"class.std::__1::unique_ptr.40"* [ %477, %476 ], [ %533, %483 ]
  %537 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %16, align 8
  br label %538

538:                                              ; preds = %535, %481
  %539 = phi %"class.std::__1::unique_ptr.40"* [ %1, %481 ], [ %537, %535 ]
  %540 = phi %"class.std::__1::unique_ptr.40"* [ %286, %481 ], [ %536, %535 ]
  %541 = phi i64 [ %482, %481 ], [ %452, %535 ]
  %542 = ptrtoint %"class.std::__1::unique_ptr.40"* %540 to i64
  %543 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  store i64 %541, i64* %247, align 8
  store i64 %542, i64* %22, align 8
  store i64 %285, i64* %14, align 8
  %544 = icmp eq %"class.std::__1::unique_ptr.40"* %539, %543
  br i1 %544, label %555, label %545

545:                                              ; preds = %538, %553
  %546 = phi %"class.std::__1::unique_ptr.40"* [ %547, %553 ], [ %539, %538 ]
  %547 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %546, i64 -1
  %548 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %547, i64 0, i32 0, i32 0, i32 0
  %549 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %548, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %548, align 8
  %550 = icmp eq %"class.spvtools::opt::BasicBlock"* %549, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %545
  %552 = bitcast %"class.std::__1::unique_ptr.40"* %547 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %552, %"class.spvtools::opt::BasicBlock"* nonnull %549) #11
  br label %553

553:                                              ; preds = %551, %545
  %554 = icmp eq %"class.std::__1::unique_ptr.40"* %547, %543
  br i1 %554, label %555, label %545

555:                                              ; preds = %553, %538
  %556 = icmp eq %"class.std::__1::unique_ptr.40"* %543, null
  br i1 %556, label %559, label %557

557:                                              ; preds = %555
  %558 = bitcast %"class.std::__1::unique_ptr.40"* %543 to i8*
  tail call void @_ZdlPv(i8* %558) #10
  br label %559

559:                                              ; preds = %242, %557, %555, %111, %228, %4
  %560 = phi %"class.std::__1::unique_ptr.40"* [ %1, %4 ], [ %1, %228 ], [ %1, %111 ], [ %282, %555 ], [ %282, %557 ], [ %1, %242 ]
  ret %"class.std::__1::unique_ptr.40"* %560
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS8_9LoopUtils17LoopCloningResultEE3$_0S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = zext i8 %12 to i32
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %6, i32 %13) #11
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i32 [ %14, %10 ], [ 0, %2 ]
  store i32 %16, i32* %1, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS8_9LoopUtils17LoopCloningResultEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopPeeling"**
  %4 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %4, i64 0, i32 2
  %7 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %7, i64 0, i32 3
  %9 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = zext i8 %17 to i32
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %11, i32 %18) #11
  br label %20

20:                                               ; preds = %15, %2
  %21 = phi i32 [ %19, %15 ], [ 0, %2 ]
  %22 = icmp eq i32 %5, %21
  br i1 %22, label %23, label %39

23:                                               ; preds = %20
  %24 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %6, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %24, i64 0, i32 1
  %26 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 4
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 3
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = zext i8 %34 to i32
  %36 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %28, i32 %35) #11
  br label %37

37:                                               ; preds = %32, %23
  %38 = phi i32 [ %36, %32 ], [ 0, %23 ]
  store i32 %38, i32* %1, align 4
  br label %39

39:                                               ; preds = %20, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling23DuplicateAndConnectLoopEPNS3_9LoopUtils17LoopCloningResultEE3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1383"**
  %6 = load %"class.std::__1::__function::__default_alloc_func.1383"*, %"class.std::__1::__function::__default_alloc_func.1383"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1383", %"class.std::__1::__function::__default_alloc_func.1383"* %6, i64 0, i32 0, i32 3
  %8 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %11 = bitcast %"struct.spvtools::opt::Operand"** %10 to i64*
  %12 = bitcast %"class.std::__1::vector"* %9 to i64*
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %15 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %8, i64 0, i32 2
  br label %16

16:                                               ; preds = %304, %2
  %17 = phi i32 [ 0, %2 ], [ %305, %304 ]
  %18 = load i64, i64* %11, align 8
  %19 = load i64, i64* %12, align 8
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 48
  %22 = load i8, i8* %13, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = load i8, i8* %14, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 1, i32 2
  %27 = xor i1 %25, true
  %28 = zext i1 %27 to i32
  %29 = select i1 %23, i32 %28, i32 %26
  %30 = trunc i64 %21 to i32
  %31 = sub i32 %30, %29
  %32 = icmp ult i32 %17, %31
  br i1 %32, label %33, label %306

33:                                               ; preds = %16
  %34 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %15, align 8
  %35 = or i32 %17, 1
  %36 = add i32 %29, %35
  %37 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %36) #11
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %34, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %90, label %42

42:                                               ; preds = %33
  %43 = tail call i64 @llvm.ctpop.i64(i64 %40) #11, !range !3
  %44 = icmp ugt i64 %43, 1
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = add i64 %40, 4294967295
  %47 = and i64 %46, %38
  br label %52

48:                                               ; preds = %42
  %49 = icmp ugt i64 %40, %38
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = urem i64 %38, %40
  br label %52

52:                                               ; preds = %50, %48, %45
  %53 = phi i64 [ %47, %45 ], [ %51, %50 ], [ %38, %48 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %34, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %55, i64 %53
  %57 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.922"* %57, null
  br i1 %58, label %90, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %57, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.922"* %61, null
  br i1 %62, label %90, label %63

63:                                               ; preds = %59
  %64 = add i64 %40, -1
  br label %65

65:                                               ; preds = %86, %63
  %66 = phi %"struct.std::__1::__hash_node_base.922"* [ %61, %63 ], [ %88, %86 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %66, i64 1
  %68 = bitcast %"struct.std::__1::__hash_node_base.922"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, %38
  br i1 %70, label %81, label %71

71:                                               ; preds = %65
  br i1 %44, label %74, label %72

72:                                               ; preds = %71
  %73 = and i64 %69, %64
  br label %78

74:                                               ; preds = %71
  %75 = icmp ult i64 %69, %40
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = urem i64 %69, %40
  br label %78

78:                                               ; preds = %76, %74, %72
  %79 = phi i64 [ %73, %72 ], [ %77, %76 ], [ %69, %74 ]
  %80 = icmp eq i64 %79, %53
  br i1 %80, label %86, label %90

81:                                               ; preds = %65
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %66, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base.922"* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, %37
  br i1 %85, label %304, label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %66, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.922"* %88, null
  br i1 %89, label %90, label %65

90:                                               ; preds = %59, %52, %33, %86, %78
  %91 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1383", %"class.std::__1::__function::__default_alloc_func.1383"* %6, i64 0, i32 0, i32 2
  %93 = load %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %92, align 8
  %94 = load i8, i8* %14, align 1, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %90
  %97 = load i8, i8* %13, align 4, !range !2
  %98 = zext i8 %97 to i32
  %99 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %98) #11
  br label %100

100:                                              ; preds = %96, %90
  %101 = phi i32 [ %99, %96 ], [ 0, %90 ]
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %8, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %154, label %106

106:                                              ; preds = %100
  %107 = tail call i64 @llvm.ctpop.i64(i64 %104) #11, !range !3
  %108 = icmp ugt i64 %107, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %106
  %110 = add i64 %104, 4294967295
  %111 = and i64 %110, %102
  br label %116

112:                                              ; preds = %106
  %113 = icmp ugt i64 %104, %102
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %102, %104
  br label %116

116:                                              ; preds = %114, %112, %109
  %117 = phi i64 [ %111, %109 ], [ %115, %114 ], [ %102, %112 ]
  %118 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %8, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %154, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %121, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base"* %125, null
  br i1 %126, label %154, label %127

127:                                              ; preds = %123
  %128 = add i64 %104, -1
  br label %129

129:                                              ; preds = %150, %127
  %130 = phi %"struct.std::__1::__hash_node_base"* [ %125, %127 ], [ %152, %150 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = icmp eq i64 %133, %102
  br i1 %134, label %145, label %135

135:                                              ; preds = %129
  br i1 %108, label %138, label %136

136:                                              ; preds = %135
  %137 = and i64 %133, %128
  br label %142

138:                                              ; preds = %135
  %139 = icmp ult i64 %133, %104
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = urem i64 %133, %104
  br label %142

142:                                              ; preds = %140, %138, %136
  %143 = phi i64 [ %137, %136 ], [ %141, %140 ], [ %133, %138 ]
  %144 = icmp eq i64 %143, %117
  br i1 %144, label %150, label %154

145:                                              ; preds = %129
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, %101
  br i1 %149, label %155, label %150

150:                                              ; preds = %145, %142
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %154, label %129

154:                                              ; preds = %150, %142, %123, %116, %100
  tail call void @abort() #12
  unreachable

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 3
  %157 = bitcast %"struct.std::__1::__hash_node_base"* %156 to %"class.spvtools::opt::Instruction"**
  %158 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %157, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 4
  %160 = load i8, i8* %159, align 1, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 3
  %164 = load i8, i8* %163, align 4, !range !2
  %165 = zext i8 %164 to i32
  %166 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %158, i32 %165) #11
  br label %167

167:                                              ; preds = %162, %155
  %168 = phi i32 [ %166, %162 ], [ 0, %155 ]
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %93, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %221, label %173

173:                                              ; preds = %167
  %174 = tail call i64 @llvm.ctpop.i64(i64 %171) #11, !range !3
  %175 = icmp ugt i64 %174, 1
  br i1 %175, label %179, label %176

176:                                              ; preds = %173
  %177 = add i64 %171, 4294967295
  %178 = and i64 %177, %169
  br label %183

179:                                              ; preds = %173
  %180 = icmp ugt i64 %171, %169
  br i1 %180, label %183, label %181

181:                                              ; preds = %179
  %182 = urem i64 %169, %171
  br label %183

183:                                              ; preds = %181, %179, %176
  %184 = phi i64 [ %178, %176 ], [ %182, %181 ], [ %169, %179 ]
  %185 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %93, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %185, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %186, i64 %184
  %188 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.254"* %188, null
  br i1 %189, label %221, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %188, i64 0, i32 0
  %192 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %191, align 8
  %193 = icmp eq %"struct.std::__1::__hash_node_base.254"* %192, null
  br i1 %193, label %221, label %194

194:                                              ; preds = %190
  %195 = add i64 %171, -1
  br label %196

196:                                              ; preds = %217, %194
  %197 = phi %"struct.std::__1::__hash_node_base.254"* [ %192, %194 ], [ %219, %217 ]
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %197, i64 1
  %199 = bitcast %"struct.std::__1::__hash_node_base.254"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = icmp eq i64 %200, %169
  br i1 %201, label %212, label %202

202:                                              ; preds = %196
  br i1 %175, label %205, label %203

203:                                              ; preds = %202
  %204 = and i64 %200, %195
  br label %209

205:                                              ; preds = %202
  %206 = icmp ult i64 %200, %171
  br i1 %206, label %209, label %207

207:                                              ; preds = %205
  %208 = urem i64 %200, %171
  br label %209

209:                                              ; preds = %207, %205, %203
  %210 = phi i64 [ %204, %203 ], [ %208, %207 ], [ %200, %205 ]
  %211 = icmp eq i64 %210, %184
  br i1 %211, label %217, label %221

212:                                              ; preds = %196
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %197, i64 2
  %214 = bitcast %"struct.std::__1::__hash_node_base.254"* %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, %168
  br i1 %216, label %222, label %217

217:                                              ; preds = %212, %209
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %197, i64 0, i32 0
  %219 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %218, align 8
  %220 = icmp eq %"struct.std::__1::__hash_node_base.254"* %219, null
  br i1 %220, label %221, label %196

221:                                              ; preds = %217, %209, %190, %183, %167
  tail call void @abort() #12
  unreachable

222:                                              ; preds = %212
  %223 = bitcast %"struct.std::__1::__hash_node_base.254"* %213 to %"struct.std::__1::pair.1305"*
  %224 = getelementptr inbounds %"struct.std::__1::pair.1305", %"struct.std::__1::pair.1305"* %223, i64 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %227 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %228 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %229 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %230 = bitcast i32** %228 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %229, %"struct.std::__1::aligned_storage<4, 4>::type"** %230, align 8
  %231 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %232 = bitcast %"class.std::__1::unique_ptr.0"* %231 to i64*
  store i64 0, i64* %232, align 8
  %233 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %229 to i32*
  store i64 1, i64* %227, align 8
  store i32 %225, i32* %233, align 8
  %234 = load i8, i8* %13, align 4, !range !2
  %235 = icmp eq i8 %234, 0
  %236 = load i8, i8* %14, align 1, !range !2
  %237 = icmp eq i8 %236, 0
  %238 = select i1 %237, i32 1, i32 2
  %239 = xor i1 %237, true
  %240 = zext i1 %239 to i32
  %241 = select i1 %235, i32 %240, i32 %238
  %242 = add i32 %241, %17
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %245 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %244, align 8
  %246 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %245, i64 %243, i32 1
  %247 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %246, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8
  %248 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %249 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %248, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %248, align 8
  %250 = icmp eq %"class.std::__1::vector.3"* %249, null
  br i1 %250, label %262, label %251

251:                                              ; preds = %222
  %252 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %249, i64 0, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = icmp eq i32* %253, null
  br i1 %254, label %260, label %255

255:                                              ; preds = %251
  %256 = ptrtoint i32* %253 to i64
  %257 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %249, i64 0, i32 0, i32 1
  %258 = bitcast i32** %257 to i64*
  store i64 %256, i64* %258, align 8
  %259 = bitcast i32* %253 to i8*
  call void @_ZdlPv(i8* %259) #10
  br label %260

260:                                              ; preds = %255, %251
  %261 = bitcast %"class.std::__1::vector.3"* %249 to i8*
  call void @_ZdlPv(i8* %261) #10
  br label %262

262:                                              ; preds = %260, %222
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %91) #11
  %263 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %263) #11
  %264 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1383", %"class.std::__1::__function::__default_alloc_func.1383"* %6, i64 0, i32 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  %267 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %268 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %269 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %270 = bitcast i32** %268 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %269, %"struct.std::__1::aligned_storage<4, 4>::type"** %270, align 8
  %271 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %272 = bitcast %"class.std::__1::unique_ptr.0"* %271 to i64*
  store i64 0, i64* %272, align 8
  %273 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %269 to i32*
  store i64 1, i64* %267, align 8
  store i32 %265, i32* %273, align 8
  %274 = load i8, i8* %13, align 4, !range !2
  %275 = icmp eq i8 %274, 0
  %276 = load i8, i8* %14, align 1, !range !2
  %277 = icmp eq i8 %276, 0
  %278 = select i1 %277, i32 1, i32 2
  %279 = xor i1 %277, true
  %280 = zext i1 %279 to i32
  %281 = select i1 %275, i32 %280, i32 %278
  %282 = add i32 %281, %35
  %283 = zext i32 %282 to i64
  %284 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %244, align 8
  %285 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %284, i64 %283, i32 1
  %286 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %285, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %266, align 8
  %287 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %288 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %287, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %287, align 8
  %289 = icmp eq %"class.std::__1::vector.3"* %288, null
  br i1 %289, label %301, label %290

290:                                              ; preds = %262
  %291 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %288, i64 0, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = icmp eq i32* %292, null
  br i1 %293, label %299, label %294

294:                                              ; preds = %290
  %295 = ptrtoint i32* %292 to i64
  %296 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %288, i64 0, i32 0, i32 1
  %297 = bitcast i32** %296 to i64*
  store i64 %295, i64* %297, align 8
  %298 = bitcast i32* %292 to i8*
  call void @_ZdlPv(i8* %298) #10
  br label %299

299:                                              ; preds = %294, %290
  %300 = bitcast %"class.std::__1::vector.3"* %288 to i8*
  call void @_ZdlPv(i8* %300) #10
  br label %301

301:                                              ; preds = %299, %262
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %263) #11
  %302 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1383", %"class.std::__1::__function::__default_alloc_func.1383"* %6, i64 0, i32 0, i32 1
  %303 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %302, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %303, %"class.spvtools::opt::Instruction"* %1) #11
  br label %306

304:                                              ; preds = %81
  %305 = add i32 %17, 2
  br label %16

306:                                              ; preds = %16, %301
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #10, !noalias !115
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1027"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1023"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"class.spvtools::opt::Instruction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.1027"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1027"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.1027"* %62 to %"class.spvtools::opt::Instruction"**
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #10, !noalias !120
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !120
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !120
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !120
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1027"**
  store %"struct.std::__1::__hash_node_base.1027"* null, %"struct.std::__1::__hash_node_base.1027"** %75, align 8, !noalias !120
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.1023"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.1027"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.1027"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.1027"* %118, %"struct.std::__1::__hash_node_base.1027"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.1027"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.1027"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.1027"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.1027"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1027"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.1027"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.1027"*, i8 } undef, %"struct.std::__1::__hash_node_base.1027"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.1027"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.1027"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.1023"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1023"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1023"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1023"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1023"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1027"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1027"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1029", %"class.std::__1::__bucket_list_deallocator.1029"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1027"* null, %"struct.std::__1::__hash_node_base.1027"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !123

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1027"* null, %"struct.std::__1::__hash_node_base.1027"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1027"* null, %"struct.std::__1::__hash_node_base.1027"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1027"* null, %"struct.std::__1::__hash_node_base.1027"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1027"* null, %"struct.std::__1::__hash_node_base.1027"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1027"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1027"* %36, %"struct.std::__1::__hash_node_base.1027"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1027"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1027"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1027"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1027"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1027"* %82, %"struct.std::__1::__hash_node_base.1027"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1027"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1027"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1027"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1027"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1027"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1027"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1027"* %80, %"struct.std::__1::__hash_node_base.1027"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1027"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1023", %"class.std::__1::__hash_table.1023"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1027"** null, %"struct.std::__1::__hash_node_base.1027"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1027"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1027"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1029", %"class.std::__1::__bucket_list_deallocator.1029"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS8_4LoopEPNS8_11InstructionEPNS_13unordered_setISE_NS_4hashISE_EENS_8equal_toISE_EENS_9allocatorISE_EEEEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1397"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1397"*, %"class.std::__1::__function::__default_alloc_func.1397"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1397", %"class.std::__1::__function::__default_alloc_func.1397"* %4, i64 0, i32 0, i32 3
  %6 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1397", %"class.std::__1::__function::__default_alloc_func.1397"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %7, align 8
  %9 = load i32, i32* %1, align 4
  %10 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %8, i32 %9) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 248
  br i1 %13, label %89, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1397", %"class.std::__1::__function::__default_alloc_func.1397"* %4, i64 0, i32 0, i32 2
  %16 = load %"class.std::__1::unordered_set.1022"*, %"class.std::__1::unordered_set.1022"** %15, align 8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"* %10 to i64
  %18 = lshr i64 %17, 32
  %19 = shl i64 %17, 3
  %20 = and i64 %19, 4294967288
  %21 = add nuw nsw i64 %20, 8
  %22 = xor i64 %21, %18
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %23, %18
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, -7070675565921424023
  %28 = lshr i64 %27, 47
  %29 = xor i64 %28, %27
  %30 = mul i64 %29, -7070675565921424023
  %31 = getelementptr inbounds %"class.std::__1::unordered_set.1022", %"class.std::__1::unordered_set.1022"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %82, label %34

34:                                               ; preds = %14
  %35 = tail call i64 @llvm.ctpop.i64(i64 %32) #11, !range !3
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = add i64 %32, -1
  %39 = and i64 %38, %30
  br label %44

40:                                               ; preds = %34
  %41 = icmp ult i64 %30, %32
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %30, %32
  br label %44

44:                                               ; preds = %42, %40, %37
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %30, %40 ]
  %46 = getelementptr inbounds %"class.std::__1::unordered_set.1022", %"class.std::__1::unordered_set.1022"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %47, i64 %45
  %49 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %49, null
  br i1 %50, label %82, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %49, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %53, null
  br i1 %54, label %82, label %55

55:                                               ; preds = %51
  %56 = add i64 %32, -1
  br label %57

57:                                               ; preds = %78, %55
  %58 = phi %"struct.std::__1::__hash_node_base.1027"* [ %53, %55 ], [ %80, %78 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %58, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1027"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %30, %61
  br i1 %62, label %73, label %63

63:                                               ; preds = %57
  br i1 %36, label %66, label %64

64:                                               ; preds = %63
  %65 = and i64 %61, %56
  br label %70

66:                                               ; preds = %63
  %67 = icmp ult i64 %61, %32
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %61, %32
  br label %70

70:                                               ; preds = %68, %66, %64
  %71 = phi i64 [ %65, %64 ], [ %69, %68 ], [ %61, %66 ]
  %72 = icmp eq i64 %71, %45
  br i1 %72, label %78, label %82

73:                                               ; preds = %57
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %58, i64 2
  %75 = bitcast %"struct.std::__1::__hash_node_base.1027"* %74 to %"class.spvtools::opt::Instruction"**
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, align 8
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %76, %10
  br i1 %77, label %89, label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %58, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %80, null
  br i1 %81, label %82, label %57

82:                                               ; preds = %78, %70, %51, %44, %14
  %83 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1397", %"class.std::__1::__function::__default_alloc_func.1397"* %4, i64 0, i32 0, i32 1
  %84 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %83, align 8
  %85 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %84, %"class.spvtools::opt::Instruction"* %10) #11
  br i1 %85, label %86, label %89

86:                                               ; preds = %82
  %87 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %83, align 8
  %88 = load %"class.std::__1::unordered_set.1022"*, %"class.std::__1::unordered_set.1022"** %15, align 8
  tail call void @_ZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS0_4LoopEPNS0_11InstructionEPNSt3__113unordered_setIS6_NS7_4hashIS6_EENS7_8equal_toIS6_EENS7_9allocatorIS6_EEEE(%"class.spvtools::opt::LoopPeeling"* %6, %"class.spvtools::opt::Loop"* %87, %"class.spvtools::opt::Instruction"* %10, %"class.std::__1::unordered_set.1022"* %88) #11
  br label %89

89:                                               ; preds = %73, %2, %82, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #10, !noalias !124
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_11LoopPeeling30IsConditionCheckSideEffectFreeEvE3$_4S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopPeeling"**
  %4 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %6) #11
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = load i32, i32* %5, align 8
  %10 = add i32 %9, -246
  %11 = icmp ult i32 %10, 3
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %4, i64 0, i32 0
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %14, %"class.spvtools::opt::Instruction"* %1) #11
  br label %16

16:                                               ; preds = %2, %8, %12
  %17 = phi i1 [ %15, %12 ], [ true, %2 ], [ true, %8 ]
  ret i1 %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1403", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca %"class.std::__1::tuple.1164", align 8
  %6 = alloca %"class.std::__1::tuple.1167", align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"* %0) #11
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 12
  br i1 %17, label %81, label %18

18:                                               ; preds = %14
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #11
  store i32 0, i32* %7, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %21 = bitcast %"class.std::__1::tuple.1403"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::tuple.1403", %"class.std::__1::tuple.1403"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  %24 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %20, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1403"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %27 = load i32, i32* %15, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base.230"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %164, label %33

33:                                               ; preds = %18
  %34 = call i64 @llvm.ctpop.i64(i64 %31) #11, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = add i64 %31, 4294967295
  %38 = and i64 %37, %28
  br label %43

39:                                               ; preds = %33
  %40 = icmp ugt i64 %31, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %28, %31
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %28, %39 ]
  %45 = bitcast %"struct.std::__1::__hash_node_base.230"* %26 to %"struct.std::__1::__hash_node_base.922"***
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %44
  %48 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.922"* %48, null
  br i1 %49, label %164, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %48, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.922"* %52, null
  br i1 %53, label %164, label %54

54:                                               ; preds = %50
  %55 = add i64 %31, -1
  br label %56

56:                                               ; preds = %77, %54
  %57 = phi %"struct.std::__1::__hash_node_base.922"* [ %52, %54 ], [ %79, %77 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %28
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %35, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %55
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %31
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %31
  br label %69

69:                                               ; preds = %67, %65, %63
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %44
  br i1 %71, label %77, label %164

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.922"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %27
  br i1 %76, label %164, label %77

77:                                               ; preds = %72, %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %57, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.922"* %79, null
  br i1 %80, label %164, label %56

81:                                               ; preds = %14
  %82 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, i32 1, i32 2
  %90 = xor i1 %88, true
  %91 = zext i1 %90 to i32
  %92 = select i1 %85, i32 %91, i32 %89
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %92) #11
  store i32 %93, i32* %8, align 4
  %94 = load i8, i8* %83, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %86, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %95, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %102) #11
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %105 = bitcast %"class.std::__1::tuple.1164"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  %106 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #11
  %108 = call { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"* %104, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1164"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %6) #11
  %109 = extractvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %109, i64 4
  %113 = bitcast %"struct.std::__1::__hash_node_base.230"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %164, label %116

116:                                              ; preds = %81
  %117 = call i64 @llvm.ctpop.i64(i64 %114) #11, !range !3
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = add i64 %114, 4294967295
  %121 = and i64 %120, %111
  br label %126

122:                                              ; preds = %116
  %123 = icmp ugt i64 %114, %111
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %111, %114
  br label %126

126:                                              ; preds = %124, %122, %119
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %111, %122 ]
  %128 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to %"struct.std::__1::__hash_node_base.922"***
  %129 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %129, i64 %127
  %131 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.922"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %131, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.922"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133
  %138 = add i64 %114, -1
  br label %139

139:                                              ; preds = %160, %137
  %140 = phi %"struct.std::__1::__hash_node_base.922"* [ %135, %137 ], [ %162, %160 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.922"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, %111
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  br i1 %118, label %148, label %146

146:                                              ; preds = %145
  %147 = and i64 %143, %138
  br label %152

148:                                              ; preds = %145
  %149 = icmp ult i64 %143, %114
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %143, %114
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %143, %148 ]
  %154 = icmp eq i64 %153, %127
  br i1 %154, label %160, label %164

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 2
  %157 = bitcast %"struct.std::__1::__hash_node_base.922"* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %103
  br i1 %159, label %164, label %160

160:                                              ; preds = %155, %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.922"* %162, null
  br i1 %163, label %164, label %139

164:                                              ; preds = %77, %72, %69, %160, %155, %152, %133, %126, %81, %50, %43, %18
  %165 = phi i8* [ %19, %18 ], [ %19, %43 ], [ %19, %50 ], [ %82, %81 ], [ %82, %126 ], [ %82, %133 ], [ %82, %152 ], [ %82, %155 ], [ %82, %160 ], [ %19, %69 ], [ %19, %72 ], [ %19, %77 ]
  %166 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %18 ], [ null, %43 ], [ null, %50 ], [ null, %81 ], [ null, %126 ], [ null, %133 ], [ null, %160 ], [ %140, %155 ], [ null, %152 ], [ null, %77 ], [ %57, %72 ], [ null, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #11
  %167 = icmp ne %"struct.std::__1::__hash_node_base.922"* %166, null
  ret i1 %167
}

declare zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1403"* dereferenceable(8), %"class.std::__1::tuple.1167"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #10, !noalias !129
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1403", %"class.std::__1::tuple.1403"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !129
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !129
  store i32 %62, i32* %61, align 8, !noalias !129
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #11, !noalias !129
  store i32 1065353216, i32* %65, align 4, !noalias !129
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !129
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !129
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #11
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #11, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #11, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.226"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.226"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.230"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.230"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !132

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.230"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.230"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.230"* %36, %"struct.std::__1::__hash_node_base.230"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.230"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.230"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.230"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.230"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.230"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.230"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.230"* %82, %"struct.std::__1::__hash_node_base.230"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.230"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.230"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.230"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.230"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.230"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.230"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.230"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.230"* %80, %"struct.std::__1::__hash_node_base.230"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.230"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.230"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.230"** null, %"struct.std::__1::__hash_node_base.230"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.230"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.230"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.232", %"class.std::__1::__bucket_list_deallocator.232"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.230"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.226"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1164"* dereferenceable(8), %"class.std::__1::tuple.1167"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.230"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.230"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.230"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.230"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.230"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #10, !noalias !133
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !133
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !133
  store i32 %62, i32* %61, align 8, !noalias !133
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #11, !noalias !133
  store i32 1065353216, i32* %65, align 4, !noalias !133
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !133
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"**
  store %"struct.std::__1::__hash_node_base.230"* null, %"struct.std::__1::__hash_node_base.230"** %68, align 8, !noalias !133
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #11
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.226"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #11, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.230"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.226", %"class.std::__1::__hash_table.226"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.230"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.230"* %111, %"struct.std::__1::__hash_node_base.230"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.230"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230", %"struct.std::__1::__hash_node_base.230"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.230"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #11, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.230"**, %"struct.std::__1::__hash_node_base.230"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.230"*, %"struct.std::__1::__hash_node_base.230"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.230"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.230"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.230"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.230"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } undef, %"struct.std::__1::__hash_node_base.230"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.230"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.230"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling22GetIteratingExitValuesEvE3$_5S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1403", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca i32, align 4
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LoopPeeling"**
  %7 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %6, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %15) #11
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  store i32 %18, i32* %5, align 4
  %19 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %7, i64 0, i32 9, i32 0
  %20 = bitcast %"class.std::__1::tuple.1403"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__1::tuple.1403", %"class.std::__1::tuple.1403"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #11
  %23 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %19, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1403"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %24 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %23, 0
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %25 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1403"* dereferenceable(8), %"class.std::__1::tuple.1167"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #10, !noalias !136
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1403", %"class.std::__1::tuple.1403"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !136
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !136
  store i32 %62, i32* %61, align 8, !noalias !136
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8, !noalias !136
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !136
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !136
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !139

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling22GetIteratingExitValuesEvE3$_6S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1403", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca i32, align 4
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1427"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1427"*, %"class.std::__1::__function::__default_alloc_func.1427"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1427", %"class.std::__1::__function::__default_alloc_func.1427"* %7, i64 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %12 = bitcast %"struct.spvtools::opt::Operand"** %11 to i64*
  %13 = bitcast %"class.std::__1::vector"* %10 to i64*
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %16 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1427", %"class.std::__1::__function::__default_alloc_func.1427"* %7, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1427", %"class.std::__1::__function::__default_alloc_func.1427"* %7, i64 0, i32 0, i32 1
  %18 = bitcast i32* %5 to i8*
  %19 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %9, i64 0, i32 9, i32 0
  %20 = bitcast %"class.std::__1::tuple.1403"* %3 to i8*
  %21 = getelementptr inbounds %"class.std::__1::tuple.1403", %"class.std::__1::tuple.1403"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  br label %23

23:                                               ; preds = %71, %2
  %24 = phi i32 [ 0, %2 ], [ %72, %71 ]
  %25 = load i64, i64* %12, align 8
  %26 = load i64, i64* %13, align 8
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 48
  %29 = load i8, i8* %14, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = load i8, i8* %15, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i32 1, i32 2
  %34 = xor i1 %32, true
  %35 = zext i1 %34 to i32
  %36 = select i1 %30, i32 %35, i32 %33
  %37 = trunc i64 %28 to i32
  %38 = sub i32 %37, %36
  %39 = icmp ult i32 %24, %38
  br i1 %39, label %40, label %73

40:                                               ; preds = %23
  %41 = load i32, i32* %16, align 8
  %42 = or i32 %24, 1
  %43 = add i32 %36, %42
  %44 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %43) #11
  %45 = icmp eq i32 %41, %44
  br i1 %45, label %46, label %71

46:                                               ; preds = %40
  %47 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %17, align 8
  %48 = load i8, i8* %14, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = load i8, i8* %15, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = select i1 %51, i32 1, i32 2
  %53 = xor i1 %51, true
  %54 = zext i1 %53 to i32
  %55 = select i1 %49, i32 %54, i32 %52
  %56 = add i32 %55, %24
  %57 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %56) #11
  %58 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %47, i32 %57) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #11
  %59 = load i8, i8* %15, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %46
  %62 = load i8, i8* %14, align 4, !range !2
  %63 = zext i8 %62 to i32
  %64 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %63) #11
  br label %65

65:                                               ; preds = %61, %46
  %66 = phi i32 [ %64, %61 ], [ 0, %46 ]
  store i32 %66, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  store i32* %5, i32** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #11
  %67 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %19, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1403"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %68 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %67, 0
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 3
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  store %"class.spvtools::opt::Instruction"* %58, %"class.spvtools::opt::Instruction"** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #11
  br label %71

71:                                               ; preds = %65, %40
  %72 = add i32 %24, 2
  br label %23

73:                                               ; preds = %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !140
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling22GetIteratingExitValuesEvE3$_7S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1403", align 8
  %4 = alloca %"class.std::__1::tuple.1167", align 1
  %5 = alloca %"class.std::__1::unordered_set.1022", align 8
  %6 = alloca i32, align 4
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1429"**
  %8 = load %"class.std::__1::__function::__default_alloc_func.1429"*, %"class.std::__1::__function::__default_alloc_func.1429"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1429", %"class.std::__1::__function::__default_alloc_func.1429"* %8, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %9, align 8
  %11 = bitcast %"class.std::__1::unordered_set.1022"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unordered_set.1022", %"class.std::__1::unordered_set.1022"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::unordered_set.1022", %"class.std::__1::unordered_set.1022"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::unordered_set.1022", %"class.std::__1::unordered_set.1022"* %5, i64 0, i32 0, i32 4, i64 0
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.1022", %"class.std::__1::unordered_set.1022"* %5, i64 0, i32 0, i32 3
  %16 = bitcast %"class.std::__1::__compressed_pair.1041"* %15 to i32*
  %17 = bitcast i8* %14 to i32*
  store i32 -1431655766, i32* %17, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %10, i64 0, i32 2
  %19 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %18, align 8
  call void @_ZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS0_4LoopEPNS0_11InstructionEPNSt3__113unordered_setIS6_NS7_4hashIS6_EENS7_8equal_toIS6_EENS7_9allocatorIS6_EEEE(%"class.spvtools::opt::LoopPeeling"* %10, %"class.spvtools::opt::Loop"* %19, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::unordered_set.1022"* nonnull %5) #11
  %20 = bitcast %"struct.std::__1::__hash_node_base.1027"** %13 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1429", %"class.std::__1::__function::__default_alloc_func.1429"* %8, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %10, i64 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1429", %"class.std::__1::__function::__default_alloc_func.1429"* %8, i64 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %39, %23
  %28 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %29 = inttoptr i64 %28 to %"struct.std::__1::__hash_node.1390"*
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node.1390", %"struct.std::__1::__hash_node.1390"* %29, i64 0, i32 2
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %31, %1
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = load %"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::DominatorTree"** %24, align 8
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %36 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %35, %"class.spvtools::opt::Instruction"* %31) #11
  %37 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %38 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEPKNS0_10BasicBlockES4_(%"class.spvtools::opt::DominatorTree"* %34, %"class.spvtools::opt::BasicBlock"* %36, %"class.spvtools::opt::BasicBlock"* %37) #11
  br i1 %38, label %63, label %39

39:                                               ; preds = %33, %27
  %40 = inttoptr i64 %28 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %27

43:                                               ; preds = %39, %2
  %44 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = zext i8 %50 to i32
  %52 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %51) #11
  br label %53

53:                                               ; preds = %48, %43
  %54 = phi i32 [ %52, %48 ], [ 0, %43 ]
  store i32 %54, i32* %6, align 4
  %55 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %10, i64 0, i32 9, i32 0
  %56 = bitcast %"class.std::__1::tuple.1403"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.std::__1::tuple.1403", %"class.std::__1::tuple.1403"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %6, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::tuple.1167", %"class.std::__1::tuple.1167"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #11
  %59 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %55, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1403"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1167"* nonnull dereferenceable(1) %4) #11
  %60 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %59, 0
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 3
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #11
  br label %63

63:                                               ; preds = %33, %53
  %64 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %13, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %63, %66
  %67 = phi %"struct.std::__1::__hash_node_base.1027"* [ %69, %66 ], [ %64, %63 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1027", %"struct.std::__1::__hash_node_base.1027"* %67, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.1027"*, %"struct.std::__1::__hash_node_base.1027"** %68, align 8
  %70 = bitcast %"struct.std::__1::__hash_node_base.1027"* %67 to i8*
  call void @_ZdlPv(i8* %70) #10
  %71 = icmp eq %"struct.std::__1::__hash_node_base.1027"* %69, null
  br i1 %71, label %72, label %66

72:                                               ; preds = %66, %63
  %73 = load %"struct.std::__1::__hash_node_base.1027"**, %"struct.std::__1::__hash_node_base.1027"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.1027"** null, %"struct.std::__1::__hash_node_base.1027"*** %12, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base.1027"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"struct.std::__1::__hash_node_base.1027"** %73 to i8*
  call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEPKNS0_10BasicBlockES4_(%"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !145
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling17CreateBlockBeforeEPNS8_10BasicBlockEE3$_8S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %5 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #11
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ %15, %11 ], [ 0, %2 ]
  %18 = icmp eq i32 %3, %17
  br i1 %18, label %19, label %37

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to %"class.std::__1::unique_ptr.40"**
  %22 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = zext i8 %32 to i32
  %34 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %26, i32 %33) #11
  br label %35

35:                                               ; preds = %30, %19
  %36 = phi i32 [ %34, %30 ], [ 0, %19 ]
  store i32 %36, i32* %1, align 4
  br label %37

37:                                               ; preds = %16, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling17CreateBlockBeforeEPNS3_10BasicBlockEE3$_9S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unique_ptr.40"**
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = zext i8 %16 to i32
  %18 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %10, i32 %17) #11
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi i32 [ %18, %14 ], [ 0, %2 ]
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %25 = bitcast i32** %23 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %24, %"struct.std::__1::aligned_storage<4, 4>::type"** %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %27 = bitcast %"class.std::__1::unique_ptr.0"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %24 to i32*
  store i64 1, i64* %22, align 8
  store i32 %20, i32* %28, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i64 1, i64 2
  %36 = xor i1 %34, true
  %37 = zext i1 %36 to i64
  %38 = select i1 %31, i64 %37, i64 %35
  %39 = add nuw nsw i64 %38, 1
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %41 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %40, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 %39, i32 1
  %43 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %42, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %44, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %44, align 8
  %46 = icmp eq %"class.std::__1::vector.3"* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %19
  %48 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  call void @_ZdlPv(i8* %55) #10
  br label %56

56:                                               ; preds = %51, %47
  %57 = bitcast %"class.std::__1::vector.3"* %45 to i8*
  call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %19, %56
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  %59 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %60 = bitcast [8 x i8]* %59 to %"class.spvtools::opt::analysis::DefUseManager"**
  %61 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %60, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %61, %"class.spvtools::opt::Instruction"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @"_ZNSt3__110__function16__policy_invokerIFjPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling10PeelBeforeEjE4$_10S6_EEEEjPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to %"class.spvtools::opt::LoopPeeling"**
  %6 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %5, align 8
  %7 = bitcast %"class.spvtools::opt::InstructionBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %6, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %9, %"class.spvtools::opt::Instruction"* %1) #11
  %11 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 0
  store %"class.spvtools::opt::IRContext"* %9, %"class.spvtools::opt::IRContext"** %12, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %10, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 2
  %15 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 3
  store i32 3, i32* %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %6, i64 0, i32 8
  %18 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 0, i32 4
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 0, i32 3
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = zext i8 %24 to i32
  %26 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %18, i32 %25) #11
  br label %27

27:                                               ; preds = %22, %2
  %28 = phi i32 [ %26, %22 ], [ 0, %2 ]
  %29 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Instruction"**
  %30 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %30, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %30, i64 0, i32 3
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = zext i8 %36 to i32
  %38 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %30, i32 %37) #11
  br label %39

39:                                               ; preds = %34, %27
  %40 = phi i32 [ %38, %34 ], [ 0, %27 ]
  %41 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddLessThanEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 %28, i32 %40) #11
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 4
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 3
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = zext i8 %47 to i32
  %49 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %41, i32 %48) #11
  br label %50

50:                                               ; preds = %39, %45
  %51 = phi i32 [ %49, %45 ], [ 0, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling10PeelBeforeEjE4$_11S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"struct.spvtools::opt::Operand", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1437"**
  %8 = load %"class.std::__1::__function::__default_alloc_func.1437"*, %"class.std::__1::__function::__default_alloc_func.1437"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1437", %"class.std::__1::__function::__default_alloc_func.1437"* %8, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i32 1, i32 2
  %18 = xor i1 %16, true
  %19 = zext i1 %18 to i32
  %20 = select i1 %13, i32 %19, i32 %17
  %21 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %20) #11
  %22 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1437", %"class.std::__1::__function::__default_alloc_func.1437"* %8, i64 0, i32 0, i32 0
  %23 = load %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %22, align 8
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %80, label %28

28:                                               ; preds = %2
  %29 = tail call i64 @llvm.ctpop.i64(i64 %26) #11, !range !3
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i64 %26, 4294967295
  %33 = and i64 %32, %24
  br label %38

34:                                               ; preds = %28
  %35 = icmp ugt i64 %26, %24
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %24, %26
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %24, %34 ]
  %40 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.254"* %43, null
  br i1 %44, label %80, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %43, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.254"* %47, null
  br i1 %48, label %80, label %49

49:                                               ; preds = %45
  %50 = add i64 %26, -1
  br label %51

51:                                               ; preds = %72, %49
  %52 = phi %"struct.std::__1::__hash_node_base.254"* [ %47, %49 ], [ %74, %72 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %52, i64 1
  %54 = bitcast %"struct.std::__1::__hash_node_base.254"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %24
  br i1 %56, label %67, label %57

57:                                               ; preds = %51
  br i1 %30, label %60, label %58

58:                                               ; preds = %57
  %59 = and i64 %55, %50
  br label %64

60:                                               ; preds = %57
  %61 = icmp ult i64 %55, %26
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %55, %26
  br label %64

64:                                               ; preds = %62, %60, %58
  %65 = phi i64 [ %59, %58 ], [ %63, %62 ], [ %55, %60 ]
  %66 = icmp eq i64 %65, %39
  br i1 %66, label %72, label %80

67:                                               ; preds = %51
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %52, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.254"* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %21
  br i1 %71, label %76, label %72

72:                                               ; preds = %67, %64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %52, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.254"* %74, null
  br i1 %75, label %80, label %51

76:                                               ; preds = %67
  %77 = bitcast %"struct.std::__1::__hash_node_base.254"* %68 to %"struct.std::__1::pair.1305"*
  %78 = getelementptr inbounds %"struct.std::__1::pair.1305", %"struct.std::__1::pair.1305"* %77, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  br label %80

80:                                               ; preds = %72, %64, %76, %45, %38, %2
  %81 = phi i32 [ %79, %76 ], [ %21, %38 ], [ %21, %2 ], [ %21, %45 ], [ %21, %64 ], [ %21, %72 ]
  %82 = bitcast %"struct.spvtools::opt::Operand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %82) #11
  %83 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83) #11
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %88 = bitcast i32** %86 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %87, %"struct.std::__1::aligned_storage<4, 4>::type"** %88, align 8
  %89 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %90 = bitcast %"class.std::__1::unique_ptr.0"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %87 to i32*
  store i64 1, i64* %85, align 8
  store i32 %81, i32* %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 0
  store i32 1, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %93, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 1
  store i64 0, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 2
  %97 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 3, i64 0
  %98 = bitcast i32** %96 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %97, %"struct.std::__1::aligned_storage<4, 4>::type"** %98, align 8
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4
  %100 = bitcast %"class.std::__1::unique_ptr.0"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %93, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %103 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %102, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %105 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %104, align 8
  %106 = icmp ult %"struct.spvtools::opt::Operand"* %103, %105
  br i1 %106, label %107, label %122

107:                                              ; preds = %80
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %103, i64 0, i32 0
  %109 = load i32, i32* %92, align 8
  store i32 %109, i32* %108, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %103, i64 0, i32 1
  %111 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %110, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %103, i64 0, i32 1, i32 1
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %103, i64 0, i32 1, i32 2
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %103, i64 0, i32 1, i32 3, i64 0
  %115 = bitcast i32** %113 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %114, %"struct.std::__1::aligned_storage<4, 4>::type"** %115, align 8
  %116 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %103, i64 0, i32 1, i32 4
  %117 = bitcast %"class.std::__1::unique_ptr.0"* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %93) #11
  %119 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %103, i64 1
  %120 = ptrtoint %"struct.spvtools::opt::Operand"* %119 to i64
  %121 = bitcast %"struct.spvtools::opt::Operand"** %102 to i64*
  store i64 %120, i64* %121, align 8
  br label %124

122:                                              ; preds = %80
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %123, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %3) #11
  br label %124

124:                                              ; preds = %122, %107
  %125 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %127 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %126, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %126, align 8
  %128 = icmp eq %"class.std::__1::vector.3"* %127, null
  br i1 %128, label %140, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %127, i64 0, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = icmp eq i32* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = ptrtoint i32* %131 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %127, i64 0, i32 0, i32 1
  %136 = bitcast i32** %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = bitcast i32* %131 to i8*
  call void @_ZdlPv(i8* %137) #10
  br label %138

138:                                              ; preds = %133, %129
  %139 = bitcast %"class.std::__1::vector.3"* %127 to i8*
  call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %138, %124
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %141, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %141, align 8
  %143 = icmp eq %"class.std::__1::vector.3"* %142, null
  br i1 %143, label %155, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %142, i64 0, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = ptrtoint i32* %146 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %142, i64 0, i32 0, i32 1
  %151 = bitcast i32** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = bitcast i32* %146 to i8*
  call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %148, %144
  %154 = bitcast %"class.std::__1::vector.3"* %142 to i8*
  call void @_ZdlPv(i8* %154) #10
  br label %155

155:                                              ; preds = %153, %140
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %82) #11
  %156 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %156) #11
  %157 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1437", %"class.std::__1::__function::__default_alloc_func.1437"* %8, i64 0, i32 0, i32 1
  %159 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %158, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %159, i64 0, i32 1, i32 0, i32 0, i32 0
  %161 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %160, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %161, i64 0, i32 4
  %163 = load i8, i8* %162, align 1, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %170, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %161, i64 0, i32 3
  %167 = load i8, i8* %166, align 4, !range !2
  %168 = zext i8 %167 to i32
  %169 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %161, i32 %168) #11
  br label %170

170:                                              ; preds = %165, %155
  %171 = phi i32 [ %169, %165 ], [ 0, %155 ]
  %172 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %173 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %174 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %175 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %176 = bitcast i32** %174 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %175, %"struct.std::__1::aligned_storage<4, 4>::type"** %176, align 8
  %177 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %178 = bitcast %"class.std::__1::unique_ptr.0"* %177 to i64*
  store i64 0, i64* %178, align 8
  %179 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %175 to i32*
  store i64 1, i64* %173, align 8
  store i32 %171, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  store i32 1, i32* %180, align 8
  %181 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %182 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %181, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  store i64 0, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %186 = bitcast i32** %184 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %185, %"struct.std::__1::aligned_storage<4, 4>::type"** %186, align 8
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %188 = bitcast %"class.std::__1::unique_ptr.0"* %187 to i64*
  store i64 0, i64* %188, align 8
  %189 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %181, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %190 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %102, align 8
  %191 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %104, align 8
  %192 = icmp ult %"struct.spvtools::opt::Operand"* %190, %191
  br i1 %192, label %193, label %208

193:                                              ; preds = %170
  %194 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 0, i32 0
  %195 = load i32, i32* %180, align 8
  store i32 %195, i32* %194, align 8
  %196 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 0, i32 1
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %196, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %197, align 8
  %198 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 0, i32 1, i32 1
  store i64 0, i64* %198, align 8
  %199 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 0, i32 1, i32 2
  %200 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 0, i32 1, i32 3, i64 0
  %201 = bitcast i32** %199 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %200, %"struct.std::__1::aligned_storage<4, 4>::type"** %201, align 8
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 0, i32 1, i32 4
  %203 = bitcast %"class.std::__1::unique_ptr.0"* %202 to i64*
  store i64 0, i64* %203, align 8
  %204 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %196, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %181) #11
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 1
  %206 = ptrtoint %"struct.spvtools::opt::Operand"* %205 to i64
  %207 = bitcast %"struct.spvtools::opt::Operand"** %102 to i64*
  store i64 %206, i64* %207, align 8
  br label %210

208:                                              ; preds = %170
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %209, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #11
  br label %210

210:                                              ; preds = %208, %193
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %211, align 8
  %212 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %213 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %212, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %212, align 8
  %214 = icmp eq %"class.std::__1::vector.3"* %213, null
  br i1 %214, label %226, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %213, i64 0, i32 0, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = icmp eq i32* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %215
  %220 = ptrtoint i32* %217 to i64
  %221 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %213, i64 0, i32 0, i32 1
  %222 = bitcast i32** %221 to i64*
  store i64 %220, i64* %222, align 8
  %223 = bitcast i32* %217 to i8*
  call void @_ZdlPv(i8* %223) #10
  br label %224

224:                                              ; preds = %219, %215
  %225 = bitcast %"class.std::__1::vector.3"* %213 to i8*
  call void @_ZdlPv(i8* %225) #10
  br label %226

226:                                              ; preds = %224, %210
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %227 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %228 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %227, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %227, align 8
  %229 = icmp eq %"class.std::__1::vector.3"* %228, null
  br i1 %229, label %241, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 0
  %232 = load i32*, i32** %231, align 8
  %233 = icmp eq i32* %232, null
  br i1 %233, label %239, label %234

234:                                              ; preds = %230
  %235 = ptrtoint i32* %232 to i64
  %236 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 1
  %237 = bitcast i32** %236 to i64*
  store i64 %235, i64* %237, align 8
  %238 = bitcast i32* %232 to i8*
  call void @_ZdlPv(i8* %238) #10
  br label %239

239:                                              ; preds = %234, %230
  %240 = bitcast %"class.std::__1::vector.3"* %228 to i8*
  call void @_ZdlPv(i8* %240) #10
  br label %241

241:                                              ; preds = %239, %226
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %157) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %156) #11
  %242 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %10, i64 0, i32 0
  %243 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %242, align 8
  %244 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %243, i64 0, i32 11
  %245 = load i32, i32* %244, align 8
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %272

248:                                              ; preds = %241
  %249 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %243, i64 0, i32 4, i32 0, i32 0, i32 0
  %250 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %249, align 8
  %251 = call i8* @_Znwm(i64 104) #10
  %252 = bitcast i8* %251 to %"class.spvtools::opt::analysis::DefUseManager"*
  %253 = getelementptr inbounds i8, i8* %251, i64 32
  %254 = bitcast i8* %253 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %254, align 4
  %255 = getelementptr inbounds i8, i8* %251, i64 48
  %256 = getelementptr inbounds i8, i8* %251, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %255, i8 0, i64 16, i1 false) #11
  %257 = bitcast i8* %256 to i8**
  store i8* %255, i8** %257, align 8
  %258 = getelementptr inbounds i8, i8* %251, i64 64
  %259 = getelementptr inbounds i8, i8* %251, i64 96
  %260 = bitcast i8* %259 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %260, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %252, %"class.spvtools::opt::Module"* %250) #11
  %261 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %243, i64 0, i32 6
  %262 = ptrtoint i8* %251 to i64
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %261, i64 0, i32 0, i32 0, i32 0
  %264 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %263, align 8
  %265 = bitcast %"class.std::__1::unique_ptr.62"* %261 to i64*
  store i64 %262, i64* %265, align 8
  %266 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %264, null
  br i1 %266, label %269, label %267

267:                                              ; preds = %248
  %268 = bitcast %"class.std::__1::unique_ptr.62"* %261 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %268, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %264) #11
  br label %269

269:                                              ; preds = %267, %248
  %270 = load i32, i32* %244, align 8
  %271 = or i32 %270, 1
  store i32 %271, i32* %244, align 8
  br label %272

272:                                              ; preds = %241, %269
  %273 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %243, i64 0, i32 6, i32 0, i32 0, i32 0
  %274 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %273, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %274, %"class.spvtools::opt::Instruction"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !150
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @"_ZNSt3__110__function16__policy_invokerIFjPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling9PeelAfterEjE4$_12S6_EEEEjPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to %"class.spvtools::opt::LoopPeeling"**
  %6 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %5, align 8
  %7 = bitcast %"class.spvtools::opt::InstructionBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 3
  %11 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false) #11
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %12, %"class.spvtools::opt::Instruction"* %1) #11
  %14 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  store %"class.spvtools::opt::IRContext"* %12, %"class.spvtools::opt::IRContext"** %8, align 8
  store %"class.spvtools::opt::BasicBlock"* %13, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 2
  %16 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %15 to i64*
  store i64 %14, i64* %16, align 8
  store i32 3, i32* %10, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %6, i64 0, i32 8
  %18 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %18, i32 0) #11
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  br label %25

25:                                               ; preds = %22, %2
  %26 = phi %"class.spvtools::opt::Instruction"* [ %24, %22 ], [ %18, %2 ]
  %27 = phi i32 [ %23, %22 ], [ 0, %2 ]
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 4
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = zext i8 %33 to i32
  %35 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %26, i32 %34) #11
  br label %36

36:                                               ; preds = %31, %25
  %37 = phi i32 [ %35, %31 ], [ 0, %25 ]
  %38 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Instruction"**
  %39 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 4
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = zext i8 %45 to i32
  %47 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %39, i32 %46) #11
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi i32 [ %47, %43 ], [ 0, %36 ]
  %50 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddIAddEjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 %27, i32 %37, i32 %49) #11
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %50, i64 0, i32 4
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %50, i64 0, i32 3
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = zext i8 %56 to i32
  %58 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %50, i32 %57) #11
  br label %59

59:                                               ; preds = %54, %48
  %60 = phi i32 [ %58, %54 ], [ 0, %48 ]
  %61 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %6, i64 0, i32 3
  %62 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 0, i32 4
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 0, i32 3
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = zext i8 %68 to i32
  %70 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %62, i32 %69) #11
  br label %71

71:                                               ; preds = %66, %59
  %72 = phi i32 [ %70, %66 ], [ 0, %59 ]
  %73 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder11AddLessThanEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 %60, i32 %72) #11
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 4
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 3
  %79 = load i8, i8* %78, align 4, !range !2
  %80 = zext i8 %79 to i32
  %81 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %73, i32 %80) #11
  br label %82

82:                                               ; preds = %71, %77
  %83 = phi i32 [ %81, %77 ], [ 0, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11LoopPeeling9PeelAfterEjE4$_13S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1441"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1441"*, %"class.std::__1::__function::__default_alloc_func.1441"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1441", %"class.std::__1::__function::__default_alloc_func.1441"* %7, i64 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::LoopPeeling"*, %"class.spvtools::opt::LoopPeeling"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %9, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 104) #10
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::DefUseManager"*
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = getelementptr inbounds i8, i8* %19, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %19, i64 64
  %27 = getelementptr inbounds i8, i8* %19, i64 96
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %20, %"class.spvtools::opt::Module"* %18) #11
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %29 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = bitcast %"class.std::__1::unique_ptr.62"* %29 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %36, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %32) #11
  br label %37

37:                                               ; preds = %35, %16
  %38 = load i32, i32* %12, align 8
  %39 = or i32 %38, 1
  store i32 %39, i32* %12, align 8
  br label %40

40:                                               ; preds = %37, %2
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 6, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1441", %"class.std::__1::__function::__default_alloc_func.1441"* %7, i64 0, i32 0, i32 0
  %44 = load %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %43, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = zext i8 %50 to i32
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %51) #11
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i32 [ %52, %48 ], [ 0, %40 ]
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %107, label %59

59:                                               ; preds = %53
  %60 = tail call i64 @llvm.ctpop.i64(i64 %57) #11, !range !3
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = add i64 %57, 4294967295
  %64 = and i64 %63, %55
  br label %69

65:                                               ; preds = %59
  %66 = icmp ugt i64 %57, %55
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %55, %57
  br label %69

69:                                               ; preds = %67, %65, %62
  %70 = phi i64 [ %64, %62 ], [ %68, %67 ], [ %55, %65 ]
  %71 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %70
  %74 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.254"* %74, null
  br i1 %75, label %107, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %74, i64 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base.254"* %78, null
  br i1 %79, label %107, label %80

80:                                               ; preds = %76
  %81 = add i64 %57, -1
  br label %82

82:                                               ; preds = %103, %80
  %83 = phi %"struct.std::__1::__hash_node_base.254"* [ %78, %80 ], [ %105, %103 ]
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %83, i64 1
  %85 = bitcast %"struct.std::__1::__hash_node_base.254"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, %55
  br i1 %87, label %98, label %88

88:                                               ; preds = %82
  br i1 %61, label %91, label %89

89:                                               ; preds = %88
  %90 = and i64 %86, %81
  br label %95

91:                                               ; preds = %88
  %92 = icmp ult i64 %86, %57
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %86, %57
  br label %95

95:                                               ; preds = %93, %91, %89
  %96 = phi i64 [ %90, %89 ], [ %94, %93 ], [ %86, %91 ]
  %97 = icmp eq i64 %96, %70
  br i1 %97, label %103, label %107

98:                                               ; preds = %82
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %83, i64 2
  %100 = bitcast %"struct.std::__1::__hash_node_base.254"* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, %54
  br i1 %102, label %108, label %103

103:                                              ; preds = %98, %95
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %83, i64 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.254"* %105, null
  br i1 %106, label %107, label %82

107:                                              ; preds = %103, %95, %76, %69, %53
  tail call void @abort() #12
  unreachable

108:                                              ; preds = %98
  %109 = bitcast %"struct.std::__1::__hash_node_base.254"* %99 to %"struct.std::__1::pair.1305"*
  %110 = getelementptr inbounds %"struct.std::__1::pair.1305", %"struct.std::__1::pair.1305"* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %42, i32 %111) #11
  %113 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %9, i64 0, i32 5
  %114 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %113, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 3
  %116 = load i8, i8* %115, align 4, !range !2
  %117 = icmp eq i8 %116, 0
  %118 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %112, i64 0, i32 4
  %119 = load i8, i8* %118, align 1, !range !2
  %120 = icmp eq i8 %119, 0
  %121 = select i1 %120, i32 1, i32 2
  %122 = xor i1 %120, true
  %123 = zext i1 %122 to i32
  %124 = select i1 %117, i32 %123, i32 %121
  %125 = add nuw nsw i32 %124, 1
  %126 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %112, i32 %125) #11
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %114, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %179, label %131

131:                                              ; preds = %108
  %132 = tail call i64 @llvm.ctpop.i64(i64 %129) #11, !range !3
  %133 = icmp ugt i64 %132, 1
  br i1 %133, label %137, label %134

134:                                              ; preds = %131
  %135 = add i64 %129, 4294967295
  %136 = and i64 %135, %127
  br label %141

137:                                              ; preds = %131
  %138 = icmp ugt i64 %129, %127
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = urem i64 %127, %129
  br label %141

141:                                              ; preds = %139, %137, %134
  %142 = phi i64 [ %136, %134 ], [ %140, %139 ], [ %127, %137 ]
  %143 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %114, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %143, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %144, i64 %142
  %146 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %145, align 8
  %147 = icmp eq %"struct.std::__1::__hash_node_base.922"* %146, null
  br i1 %147, label %179, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %146, i64 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.922"* %150, null
  br i1 %151, label %179, label %152

152:                                              ; preds = %148
  %153 = add i64 %129, -1
  br label %154

154:                                              ; preds = %175, %152
  %155 = phi %"struct.std::__1::__hash_node_base.922"* [ %150, %152 ], [ %177, %175 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %155, i64 1
  %157 = bitcast %"struct.std::__1::__hash_node_base.922"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = icmp eq i64 %158, %127
  br i1 %159, label %170, label %160

160:                                              ; preds = %154
  br i1 %133, label %163, label %161

161:                                              ; preds = %160
  %162 = and i64 %158, %153
  br label %167

163:                                              ; preds = %160
  %164 = icmp ult i64 %158, %129
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = urem i64 %158, %129
  br label %167

167:                                              ; preds = %165, %163, %161
  %168 = phi i64 [ %162, %161 ], [ %166, %165 ], [ %158, %163 ]
  %169 = icmp eq i64 %168, %142
  br i1 %169, label %175, label %179

170:                                              ; preds = %154
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %155, i64 2
  %172 = bitcast %"struct.std::__1::__hash_node_base.922"* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, %126
  br i1 %174, label %179, label %175

175:                                              ; preds = %170, %167
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %155, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.922"* %177, null
  br i1 %178, label %179, label %154

179:                                              ; preds = %175, %170, %167, %148, %141, %108
  %180 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %141 ], [ null, %108 ], [ null, %148 ], [ null, %167 ], [ null, %175 ], [ %155, %170 ]
  %181 = icmp eq %"struct.std::__1::__hash_node_base.922"* %180, null
  %182 = select i1 %181, i32 0, i32 2
  %183 = load i8, i8* %115, align 4, !range !2
  %184 = icmp eq i8 %183, 0
  %185 = load i8, i8* %118, align 1, !range !2
  %186 = icmp eq i8 %185, 0
  %187 = select i1 %186, i32 1, i32 2
  %188 = xor i1 %186, true
  %189 = zext i1 %188 to i32
  %190 = select i1 %184, i32 %189, i32 %187
  %191 = add nuw nsw i32 %190, %182
  %192 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %112, i32 %191) #11
  %193 = bitcast %"class.spvtools::opt::InstructionBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %193) #11
  %194 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::LoopPeeling", %"class.spvtools::opt::LoopPeeling"* %9, i64 0, i32 2
  %196 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %195, align 8
  %197 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %196, i64 0, i32 4
  %198 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %197, align 8
  %199 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %198, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %200 = bitcast %"class.spvtools::opt::Instruction"** %199 to i64*
  %201 = load i64, i64* %200, align 8, !noalias !155
  %202 = inttoptr i64 %201 to %"class.spvtools::opt::Instruction"*
  %203 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %194, %"class.spvtools::opt::Instruction"* %202) #11
  %204 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 0
  store %"class.spvtools::opt::IRContext"* %194, %"class.spvtools::opt::IRContext"** %204, align 8
  %205 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %203, %"class.spvtools::opt::BasicBlock"** %205, align 8
  %206 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 2
  %207 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %206 to i64*
  store i64 %201, i64* %207, align 8
  %208 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %3, i64 0, i32 3
  store i32 3, i32* %208, align 8
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %210 = load i8, i8* %209, align 4, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %179
  %213 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  %214 = load i8, i8* %209, align 4, !range !2
  %215 = icmp eq i8 %214, 0
  br label %216

216:                                              ; preds = %212, %179
  %217 = phi i1 [ %215, %212 ], [ true, %179 ]
  %218 = phi i32 [ %213, %212 ], [ 0, %179 ]
  %219 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #11
  %220 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %195, align 8
  %221 = load i8, i8* %45, align 1, !range !2
  %222 = icmp eq i8 %221, 0
  %223 = select i1 %222, i32 1, i32 2
  %224 = xor i1 %222, true
  %225 = zext i1 %224 to i32
  %226 = select i1 %217, i32 %225, i32 %223
  %227 = add nuw nsw i32 %226, 1
  %228 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %227) #11
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %220, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %281, label %233

233:                                              ; preds = %216
  %234 = tail call i64 @llvm.ctpop.i64(i64 %231) #11, !range !3
  %235 = icmp ugt i64 %234, 1
  br i1 %235, label %239, label %236

236:                                              ; preds = %233
  %237 = add i64 %231, 4294967295
  %238 = and i64 %237, %229
  br label %243

239:                                              ; preds = %233
  %240 = icmp ugt i64 %231, %229
  br i1 %240, label %243, label %241

241:                                              ; preds = %239
  %242 = urem i64 %229, %231
  br label %243

243:                                              ; preds = %241, %239, %236
  %244 = phi i64 [ %238, %236 ], [ %242, %241 ], [ %229, %239 ]
  %245 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %220, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %245, align 8
  %247 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %246, i64 %244
  %248 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %247, align 8
  %249 = icmp eq %"struct.std::__1::__hash_node_base.922"* %248, null
  br i1 %249, label %281, label %250

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %248, i64 0, i32 0
  %252 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %251, align 8
  %253 = icmp eq %"struct.std::__1::__hash_node_base.922"* %252, null
  br i1 %253, label %281, label %254

254:                                              ; preds = %250
  %255 = add i64 %231, -1
  br label %256

256:                                              ; preds = %277, %254
  %257 = phi %"struct.std::__1::__hash_node_base.922"* [ %252, %254 ], [ %279, %277 ]
  %258 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %257, i64 1
  %259 = bitcast %"struct.std::__1::__hash_node_base.922"* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = icmp eq i64 %260, %229
  br i1 %261, label %272, label %262

262:                                              ; preds = %256
  br i1 %235, label %265, label %263

263:                                              ; preds = %262
  %264 = and i64 %260, %255
  br label %269

265:                                              ; preds = %262
  %266 = icmp ult i64 %260, %231
  br i1 %266, label %269, label %267

267:                                              ; preds = %265
  %268 = urem i64 %260, %231
  br label %269

269:                                              ; preds = %267, %265, %263
  %270 = phi i64 [ %264, %263 ], [ %268, %267 ], [ %260, %265 ]
  %271 = icmp eq i64 %270, %244
  br i1 %271, label %277, label %281

272:                                              ; preds = %256
  %273 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %257, i64 2
  %274 = bitcast %"struct.std::__1::__hash_node_base.922"* %273 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, %228
  br i1 %276, label %281, label %277

277:                                              ; preds = %272, %269
  %278 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %257, i64 0, i32 0
  %279 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %278, align 8
  %280 = icmp eq %"struct.std::__1::__hash_node_base.922"* %279, null
  br i1 %280, label %281, label %256

281:                                              ; preds = %277, %272, %269, %250, %243, %216
  %282 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %243 ], [ null, %216 ], [ null, %250 ], [ null, %269 ], [ null, %277 ], [ %257, %272 ]
  %283 = icmp eq %"struct.std::__1::__hash_node_base.922"* %282, null
  %284 = select i1 %283, i32 0, i32 2
  %285 = load i8, i8* %209, align 4, !range !2
  %286 = icmp eq i8 %285, 0
  %287 = load i8, i8* %45, align 1, !range !2
  %288 = icmp eq i8 %287, 0
  %289 = select i1 %288, i32 1, i32 2
  %290 = xor i1 %288, true
  %291 = zext i1 %290 to i32
  %292 = select i1 %286, i32 %291, i32 %289
  %293 = add nuw nsw i32 %292, %284
  %294 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %293) #11
  %295 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %113, align 8
  %296 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %295, i64 0, i32 3
  %297 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %296, align 8
  %298 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %297, i64 0, i32 1, i32 0, i32 0, i32 0
  %299 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %298, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %299, i64 0, i32 4
  %301 = load i8, i8* %300, align 1, !range !2
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %308, label %303

303:                                              ; preds = %281
  %304 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %299, i64 0, i32 3
  %305 = load i8, i8* %304, align 4, !range !2
  %306 = zext i8 %305 to i32
  %307 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %299, i32 %306) #11
  br label %308

308:                                              ; preds = %303, %281
  %309 = phi i32 [ %307, %303 ], [ 0, %281 ]
  %310 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1441", %"class.std::__1::__function::__default_alloc_func.1441"* %7, i64 0, i32 0, i32 1
  %311 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %310, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %311, i64 0, i32 1, i32 0, i32 0, i32 0
  %313 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %312, align 8
  %314 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %313, i64 0, i32 4
  %315 = load i8, i8* %314, align 1, !range !2
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %322, label %317

317:                                              ; preds = %308
  %318 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %313, i64 0, i32 3
  %319 = load i8, i8* %318, align 4, !range !2
  %320 = zext i8 %319 to i32
  %321 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %313, i32 %320) #11
  br label %322

322:                                              ; preds = %317, %308
  %323 = phi i32 [ %321, %317 ], [ 0, %308 ]
  %324 = tail call i8* @_Znwm(i64 16) #10
  %325 = bitcast i8* %324 to i32*
  %326 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %327 = bitcast %"class.std::__1::vector.3"* %4 to i8**
  store i8* %324, i8** %327, align 8
  %328 = getelementptr inbounds i8, i8* %324, i64 16
  %329 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %330 = bitcast i32** %329 to i8**
  store i8* %328, i8** %330, align 8
  %331 = bitcast i32** %326 to i64*
  store i32 %294, i32* %325, align 4
  %332 = getelementptr inbounds i8, i8* %324, i64 4
  %333 = bitcast i8* %332 to i32*
  store i32 %309, i32* %333, align 4
  %334 = getelementptr inbounds i8, i8* %324, i64 8
  %335 = bitcast i8* %334 to i32*
  store i32 %192, i32* %335, align 4
  %336 = getelementptr inbounds i8, i8* %324, i64 12
  %337 = bitcast i8* %336 to i32*
  store i32 %323, i32* %337, align 4
  %338 = ptrtoint i8* %328 to i64
  store i64 %338, i64* %331, align 8
  %339 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %3, i32 %218, i32 245, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4, i32 0) #11
  %340 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %341 = load i32*, i32** %340, align 8
  %342 = icmp eq i32* %341, null
  br i1 %342, label %346, label %343

343:                                              ; preds = %322
  %344 = ptrtoint i32* %341 to i64
  store i64 %344, i64* %331, align 8
  %345 = bitcast i32* %341 to i8*
  call void @_ZdlPv(i8* %345) #10
  br label %346

346:                                              ; preds = %343, %322
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %193) #11
  %347 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %195, align 8
  %348 = load i8, i8* %209, align 4, !range !2
  %349 = icmp eq i8 %348, 0
  %350 = load i8, i8* %45, align 1, !range !2
  %351 = icmp eq i8 %350, 0
  %352 = select i1 %351, i32 1, i32 2
  %353 = xor i1 %351, true
  %354 = zext i1 %353 to i32
  %355 = select i1 %349, i32 %354, i32 %352
  %356 = add nuw nsw i32 %355, 1
  %357 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %356) #11
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %347, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %360 = load i64, i64* %359, align 8
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %410, label %362

362:                                              ; preds = %346
  %363 = call i64 @llvm.ctpop.i64(i64 %360) #11, !range !3
  %364 = icmp ugt i64 %363, 1
  br i1 %364, label %368, label %365

365:                                              ; preds = %362
  %366 = add i64 %360, 4294967295
  %367 = and i64 %366, %358
  br label %372

368:                                              ; preds = %362
  %369 = icmp ugt i64 %360, %358
  br i1 %369, label %372, label %370

370:                                              ; preds = %368
  %371 = urem i64 %358, %360
  br label %372

372:                                              ; preds = %370, %368, %365
  %373 = phi i64 [ %367, %365 ], [ %371, %370 ], [ %358, %368 ]
  %374 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %347, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %374, align 8
  %376 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %375, i64 %373
  %377 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %376, align 8
  %378 = icmp eq %"struct.std::__1::__hash_node_base.922"* %377, null
  br i1 %378, label %410, label %379

379:                                              ; preds = %372
  %380 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %377, i64 0, i32 0
  %381 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %380, align 8
  %382 = icmp eq %"struct.std::__1::__hash_node_base.922"* %381, null
  br i1 %382, label %410, label %383

383:                                              ; preds = %379
  %384 = add i64 %360, -1
  br label %385

385:                                              ; preds = %406, %383
  %386 = phi %"struct.std::__1::__hash_node_base.922"* [ %381, %383 ], [ %408, %406 ]
  %387 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %386, i64 1
  %388 = bitcast %"struct.std::__1::__hash_node_base.922"* %387 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = icmp eq i64 %389, %358
  br i1 %390, label %401, label %391

391:                                              ; preds = %385
  br i1 %364, label %394, label %392

392:                                              ; preds = %391
  %393 = and i64 %389, %384
  br label %398

394:                                              ; preds = %391
  %395 = icmp ult i64 %389, %360
  br i1 %395, label %398, label %396

396:                                              ; preds = %394
  %397 = urem i64 %389, %360
  br label %398

398:                                              ; preds = %396, %394, %392
  %399 = phi i64 [ %393, %392 ], [ %397, %396 ], [ %389, %394 ]
  %400 = icmp eq i64 %399, %373
  br i1 %400, label %406, label %410

401:                                              ; preds = %385
  %402 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %386, i64 2
  %403 = bitcast %"struct.std::__1::__hash_node_base.922"* %402 to i32*
  %404 = load i32, i32* %403, align 4
  %405 = icmp eq i32 %404, %357
  br i1 %405, label %410, label %406

406:                                              ; preds = %401, %398
  %407 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %386, i64 0, i32 0
  %408 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %407, align 8
  %409 = icmp eq %"struct.std::__1::__hash_node_base.922"* %408, null
  br i1 %409, label %410, label %385

410:                                              ; preds = %406, %401, %398, %379, %372, %346
  %411 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %372 ], [ null, %346 ], [ null, %379 ], [ null, %398 ], [ null, %406 ], [ %386, %401 ]
  %412 = icmp eq %"struct.std::__1::__hash_node_base.922"* %411, null
  %413 = select i1 %412, i64 0, i64 2
  %414 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %414) #11
  %415 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %339, i64 0, i32 4
  %416 = load i8, i8* %415, align 1, !range !2
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %423, label %418

418:                                              ; preds = %410
  %419 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %339, i64 0, i32 3
  %420 = load i8, i8* %419, align 4, !range !2
  %421 = zext i8 %420 to i32
  %422 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %339, i32 %421) #11
  br label %423

423:                                              ; preds = %418, %410
  %424 = phi i32 [ %422, %418 ], [ 0, %410 ]
  %425 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %425, align 8
  %426 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %427 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %428 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %429 = bitcast i32** %427 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %428, %"struct.std::__1::aligned_storage<4, 4>::type"** %429, align 8
  %430 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %431 = bitcast %"class.std::__1::unique_ptr.0"* %430 to i64*
  store i64 0, i64* %431, align 8
  %432 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %428 to i32*
  store i64 1, i64* %426, align 8
  store i32 %424, i32* %432, align 8
  %433 = load i8, i8* %209, align 4, !range !2
  %434 = icmp eq i8 %433, 0
  %435 = load i8, i8* %45, align 1, !range !2
  %436 = icmp eq i8 %435, 0
  %437 = select i1 %436, i64 1, i64 2
  %438 = xor i1 %436, true
  %439 = zext i1 %438 to i64
  %440 = select i1 %434, i64 %439, i64 %437
  %441 = add nuw nsw i64 %440, %413
  %442 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %443 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %442, align 8
  %444 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %443, i64 %441, i32 1
  %445 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %444, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %425, align 8
  %446 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %447 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %446, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %446, align 8
  %448 = icmp eq %"class.std::__1::vector.3"* %447, null
  br i1 %448, label %460, label %449

449:                                              ; preds = %423
  %450 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %447, i64 0, i32 0, i32 0
  %451 = load i32*, i32** %450, align 8
  %452 = icmp eq i32* %451, null
  br i1 %452, label %458, label %453

453:                                              ; preds = %449
  %454 = ptrtoint i32* %451 to i64
  %455 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %447, i64 0, i32 0, i32 1
  %456 = bitcast i32** %455 to i64*
  store i64 %454, i64* %456, align 8
  %457 = bitcast i32* %451 to i8*
  call void @_ZdlPv(i8* %457) #10
  br label %458

458:                                              ; preds = %453, %449
  %459 = bitcast %"class.std::__1::vector.3"* %447 to i8*
  call void @_ZdlPv(i8* %459) #10
  br label %460

460:                                              ; preds = %423, %458
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %414) #11
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %42, %"class.spvtools::opt::Instruction"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !158
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Loop"* %3, null
  br i1 %4, label %122, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %2, align 8
  br label %122

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1096", %"struct.std::__1::pair.1096"* %19, i64 %20, i32 0
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 7, i32 0, i32 1
  %24 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.1096", %"struct.std::__1::pair.1096"* %19, i64 %20, i32 1, i32 0
  %26 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %27 = icmp eq %"class.spvtools::opt::Loop"** %26, %24
  br i1 %27, label %28, label %51

28:                                               ; preds = %10
  %29 = ptrtoint %"struct.std::__1::pair.1096"** %16 to i64
  %30 = ptrtoint %"class.spvtools::opt::Loop"* %22 to i64
  %31 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %30, i64* %31, align 8
  store i64 %13, i64* %6, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast %"struct.std::__1::pair.1096"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %29
  %36 = icmp eq i64 %35, 0
  %37 = shl i64 %35, 5
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = sub i64 1, %7
  %41 = sub i64 %40, %12
  %42 = add i64 %41, %39
  %43 = icmp ult i64 %42, 512
  br i1 %43, label %122, label %44

44:                                               ; preds = %28
  %45 = inttoptr i64 %34 to %"struct.std::__1::pair.1096"**
  %46 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %45, i64 -1
  %47 = bitcast %"struct.std::__1::pair.1096"** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #10
  %49 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %32, align 8
  %50 = getelementptr %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %49, i64 -1
  store %"struct.std::__1::pair.1096"** %50, %"struct.std::__1::pair.1096"*** %32, align 8
  br label %122

51:                                               ; preds = %10
  %52 = bitcast %"class.spvtools::opt::Loop"** %26 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %55, i64 1
  store %"class.spvtools::opt::Loop"** %56, %"class.spvtools::opt::Loop"*** %25, align 8
  %57 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 1
  %61 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::Loop"** %59, %61
  br i1 %62, label %122, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %65 = bitcast %"struct.std::__1::pair.1096"*** %64 to i64*
  %66 = bitcast %"struct.std::__1::pair.1096"*** %15 to i64*
  %67 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0
  %68 = load i64, i64* %6, align 8
  br label %69

69:                                               ; preds = %104, %63
  %70 = phi i64 [ %68, %63 ], [ %110, %104 ]
  %71 = phi %"class.spvtools::opt::Loop"** [ %59, %63 ], [ %118, %104 ]
  %72 = phi %"class.spvtools::opt::Loop"* [ %57, %63 ], [ %116, %104 ]
  %73 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %71, i64 1
  %74 = load i64, i64* %65, align 8
  %75 = load i64, i64* %66, align 8
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 0
  %78 = shl i64 %76, 5
  %79 = add i64 %78, -1
  %80 = select i1 %77, i64 0, i64 %79
  %81 = load i64, i64* %11, align 8
  %82 = add i64 %81, %70
  %83 = icmp eq i64 %80, %82
  %84 = inttoptr i64 %75 to %"struct.std::__1::pair.1096"**
  %85 = inttoptr i64 %74 to %"struct.std::__1::pair.1096"**
  br i1 %83, label %86, label %92

86:                                               ; preds = %69
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %67) #11
  %87 = load i64, i64* %6, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %15, align 8
  %90 = load %"struct.std::__1::pair.1096"**, %"struct.std::__1::pair.1096"*** %64, align 8
  %91 = add i64 %88, %87
  br label %92

92:                                               ; preds = %86, %69
  %93 = phi i64 [ %91, %86 ], [ %82, %69 ]
  %94 = phi %"struct.std::__1::pair.1096"** [ %90, %86 ], [ %85, %69 ]
  %95 = phi %"struct.std::__1::pair.1096"** [ %89, %86 ], [ %84, %69 ]
  %96 = icmp eq %"struct.std::__1::pair.1096"** %94, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = lshr i64 %93, 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %95, i64 %98
  %100 = load %"struct.std::__1::pair.1096"*, %"struct.std::__1::pair.1096"** %99, align 8
  %101 = and i64 %93, 255
  %102 = getelementptr inbounds %"struct.std::__1::pair.1096", %"struct.std::__1::pair.1096"* %100, i64 %101
  %103 = bitcast %"struct.std::__1::pair.1096"* %102 to i8*
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i8* [ %103, %97 ], [ null, %92 ]
  %106 = bitcast i8* %105 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %72, %"class.spvtools::opt::Loop"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %73, %"class.spvtools::opt::Loop"*** %108, align 8
  %109 = load i64, i64* %6, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %6, align 8
  %111 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %111, i64 0, i32 7, i32 0, i32 0
  %113 = bitcast %"class.spvtools::opt::Loop"*** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %54, align 8
  %116 = inttoptr i64 %115 to %"class.spvtools::opt::Loop"*
  %117 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 0
  %118 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 1
  %120 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %119, align 8
  %121 = icmp eq %"class.spvtools::opt::Loop"** %118, %120
  br i1 %121, label %122, label %69

122:                                              ; preds = %104, %51, %44, %28, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15LoopPeelingPass11ProcessLoopEPNS3_4LoopEPNS3_11CodeMetricsEE4$_15S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1448"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1448"*, %"class.std::__1::__function::__default_alloc_func.1448"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1448", %"class.std::__1::__function::__default_alloc_func.1448"* %4, i64 0, i32 0, i32 2
  %6 = bitcast %"class.spvtools::opt::LoopPeelingPass"** %5 to %"class.spvtools::opt::Pass"**
  %7 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1448", %"class.std::__1::__function::__default_alloc_func.1448"* %4, i64 0, i32 0, i32 1
  %9 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %8, align 8
  %10 = tail call %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18AnalyzeInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ScalarEvolutionAnalysis"* %9, %"class.spvtools::opt::Instruction"* %1) #11
  %11 = bitcast %"class.spvtools::opt::SENode"* %10 to %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)***
  %12 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %12, i64 6
  %14 = load %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SERecurrentNode"* (%"class.spvtools::opt::SENode"*)** %13, align 8
  %15 = tail call %"class.spvtools::opt::SERecurrentNode"* %14(%"class.spvtools::opt::SENode"* %10) #11
  %16 = icmp eq %"class.spvtools::opt::SERecurrentNode"* %15, null
  br i1 %16, label %85, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %15, i64 0, i32 2
  %19 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %18, align 8
  %20 = bitcast %"class.spvtools::opt::SENode"* %19 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %21 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %21, i64 5
  %23 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %22, align 8
  %24 = tail call %"class.spvtools::opt::SEConstantNode"* %23(%"class.spvtools::opt::SENode"* %19) #11
  %25 = getelementptr inbounds %"class.spvtools::opt::SERecurrentNode", %"class.spvtools::opt::SERecurrentNode"* %15, i64 0, i32 1
  %26 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %25, align 8
  %27 = bitcast %"class.spvtools::opt::SENode"* %26 to %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)***
  %28 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)**, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %28, i64 5
  %30 = load %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)*, %"class.spvtools::opt::SEConstantNode"* (%"class.spvtools::opt::SENode"*)** %29, align 8
  %31 = tail call %"class.spvtools::opt::SEConstantNode"* %30(%"class.spvtools::opt::SENode"* %26) #11
  %32 = icmp ne %"class.spvtools::opt::SEConstantNode"* %24, null
  %33 = icmp ne %"class.spvtools::opt::SEConstantNode"* %31, null
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %85

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %24, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %85

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.spvtools::opt::SEConstantNode", %"class.spvtools::opt::SEConstantNode"* %31, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 1
  br i1 %42, label %43, label %85

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %7, i64 0, i32 2
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 11
  %47 = load i32, i32* %46, align 8
  %48 = trunc i32 %47 to i16
  %49 = icmp slt i16 %48, 0
  br i1 %49, label %65, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5
  %52 = tail call i8* @_Znwm(i64 240) #10
  %53 = bitcast i8* %52 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %53, %"class.std::__1::function"* dereferenceable(32) %51, %"class.spvtools::opt::IRContext"* %45) #11
  %54 = ptrtoint i8* %52 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.480"* %55 to i64*
  store i64 %54, i64* %58, align 8
  %59 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %50
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %57) #11
  %61 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %57 to i8*
  tail call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %60, %50
  %63 = load i32, i32* %46, align 8
  %64 = or i32 %63, 32768
  store i32 %64, i32* %46, align 8
  br label %65

65:                                               ; preds = %62, %43
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %66, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i32 [ %72, %71 ], [ 0, %65 ]
  %75 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %67, i32 %74) #11
  %76 = bitcast %"class.spvtools::opt::analysis::Type"* %75 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %77 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %77, i64 10
  %79 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %78, align 8
  %80 = tail call %"class.spvtools::opt::analysis::Integer"* %79(%"class.spvtools::opt::analysis::Type"* %75) #11
  %81 = icmp eq %"class.spvtools::opt::analysis::Integer"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1448", %"class.std::__1::__function::__default_alloc_func.1448"* %4, i64 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %83, align 8
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %84, align 8
  br label %85

85:                                               ; preds = %2, %17, %35, %39, %73, %82
  %86 = phi i1 [ false, %82 ], [ true, %2 ], [ true, %73 ], [ true, %39 ], [ true, %35 ], [ true, %17 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !163
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis14CreateConstantEl(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, i64) local_unnamed_addr #2

declare %"class.spvtools::opt::SENode"* @_ZN8spvtools3opt23ScalarEvolutionAnalysis18CreateMultiplyNodeEPNS0_6SENodeES3_(%"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!11 = distinct !{!11, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!12 = !{!13, !15, !17}
!13 = distinct !{!13, !14, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!14 = distinct !{!14, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!15 = distinct !{!15, !16, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!17 = distinct !{!17, !18, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!22 = distinct !{!22, !23, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!27 = distinct !{!27, !28, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!32 = distinct !{!32, !33, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!34 = !{}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!37 = distinct !{!37, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!40 = distinct !{!40, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!43 = distinct !{!43, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!46 = distinct !{!46, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!50 = distinct !{!50, !51, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!54 = distinct !{!54, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!58 = distinct !{!58, !59, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!60 = !{!61, !63}
!61 = distinct !{!61, !62, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_: argument 0"}
!62 = distinct !{!62, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_"}
!63 = distinct !{!63, !64, !"_ZN8spvtools3opt14LoopDescriptor5beginEv: argument 0"}
!64 = distinct !{!64, !"_ZN8spvtools3opt14LoopDescriptor5beginEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!67 = distinct !{!67, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!68 = !{!69, !71}
!69 = distinct !{!69, !70, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!71 = distinct !{!71, !72, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!75 = distinct !{!75, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!78 = distinct !{!78, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_: argument 0"}
!81 = distinct !{!81, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_"}
!82 = distinct !{!82, !83}
!83 = !{!"llvm.loop.unroll.disable"}
!84 = distinct !{!84, !83}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!87 = distinct !{!87, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!88 = distinct !{!88, !83}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!91 = distinct !{!91, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!92 = distinct !{!92, !83}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!95 = distinct !{!95, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!96 = distinct !{!96, !83}
!97 = distinct !{!97, !83}
!98 = distinct !{!98, !83}
!99 = distinct !{!99, !83}
!100 = distinct !{!100, !83}
!101 = distinct !{!101, !83}
!102 = distinct !{!102, !83}
!103 = distinct !{!103, !83}
!104 = distinct !{!104, !83}
!105 = distinct !{!105, !83}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!108 = distinct !{!108, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!109 = distinct !{!109, !83}
!110 = distinct !{!110, !83}
!111 = distinct !{!111, !83}
!112 = distinct !{!112, !83}
!113 = distinct !{!113, !83}
!114 = distinct !{!114, !83}
!115 = !{!116, !118}
!116 = distinct !{!116, !117, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!117 = distinct !{!117, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!118 = distinct !{!118, !119, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!119 = distinct !{!119, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling23DuplicateAndConnectLoopEPNS5_9LoopUtils17LoopCloningResultEE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!122 = distinct !{!122, !"_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!123 = distinct !{!123, !83}
!124 = !{!125, !127}
!125 = distinct !{!125, !126, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!126 = distinct !{!126, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!127 = distinct !{!127, !128, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!128 = distinct !{!128, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling27GetIteratorUpdateOperationsEPKNS5_4LoopEPNS5_11InstructionEPNS_13unordered_setISB_NS_4hashISB_EENS_8equal_toISB_EENS_9allocatorISB_EEEEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!131 = distinct !{!131, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_"}
!132 = distinct !{!132, !83}
!133 = !{!134}
!134 = distinct !{!134, !135, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_: argument 0"}
!135 = distinct !{!135, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_"}
!136 = !{!137}
!137 = distinct !{!137, !138, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!138 = distinct !{!138, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!139 = distinct !{!139, !83}
!140 = !{!141, !143}
!141 = distinct !{!141, !142, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!142 = distinct !{!142, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!143 = distinct !{!143, !144, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!144 = distinct !{!144, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_6FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!145 = !{!146, !148}
!146 = distinct !{!146, !147, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!147 = distinct !{!147, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!148 = distinct !{!148, !149, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!149 = distinct !{!149, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling22GetIteratingExitValuesEvE3$_7FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!150 = !{!151, !153}
!151 = distinct !{!151, !152, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!152 = distinct !{!152, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!153 = distinct !{!153, !154, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!154 = distinct !{!154, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling10PeelBeforeEjE4$_11FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!157 = distinct !{!157, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!158 = !{!159, !161}
!159 = distinct !{!159, !160, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!160 = distinct !{!160, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!161 = distinct !{!161, !162, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!162 = distinct !{!162, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt11LoopPeeling9PeelAfterEjE4$_13FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!163 = !{!164, !166}
!164 = distinct !{!164, !165, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!165 = distinct !{!165, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!166 = distinct !{!166, !167, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!167 = distinct !{!167, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS5_4LoopEPNS5_11CodeMetricsEE4$_15FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
