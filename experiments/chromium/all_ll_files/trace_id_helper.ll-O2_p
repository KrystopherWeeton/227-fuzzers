; ModuleID = '../../base/trace_event/trace_id_helper.cc'
source_filename = "../../base/trace_event/trace_id_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_ZZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue = internal global i64 0, align 8
@_ZGVZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue = internal global i64 0, align 8
@_ZZN4base11trace_event20GetNextGlobalTraceIdEvE7counter = internal global { { { i32 } } } zeroinitializer, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base11trace_event20GetNextGlobalTraceIdEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @_ZN4base10RandUint64Ev() #4
  store i64 %7, i64* @_ZZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue, align 8
  %8 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (i64* @_ZZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue) #4
  br label %9

9:                                                ; preds = %3, %6, %0
  %10 = load i64, i64* @_ZZN4base11trace_event20GetNextGlobalTraceIdEvE22kPerProcessRandomValue, align 8
  %11 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN4base11trace_event20GetNextGlobalTraceIdEvE7counter, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %12 = sext i32 %11 to i64
  %13 = xor i64 %10, %12
  ret i64 %13
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

declare i64 @_ZN4base10RandUint64Ev() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
