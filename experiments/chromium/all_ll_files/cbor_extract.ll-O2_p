; ModuleID = '../../device/fido/cbor_extract.cc'
source_filename = "../../device/fido/cbor_extract.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.device::cbor_extract::StepOrByte" = type { %union.anon }
%union.anon = type { i8 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { %"class.cbor::Value", %"class.cbor::Value" }
%"class.cbor::Value" = type { i32, %union.anon.2 }
%union.anon.2 = type { %"class.std::__1::vector.3" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i8*, i8*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.device::cbor_extract::(anonymous namespace)::Extractor" = type { %"class.base::span", %"class.base::span.0", i64 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::span.0" = type { %"struct.base::internal::ExtentStorage", %"struct.device::cbor_extract::StepOrByte"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.cbor::Value::Less" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.13 }
%struct.anon.13 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.cbor::Value"*, %"class.cbor::Value"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.cbor::Value"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZNK4cbor5Value4LessclERKS0_S3_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"public-key\00", align 1
@_ZZN6device12cbor_extract12_GLOBAL__N_19Extractor13ValuesFromMapERKN4base8flat_mapIN4cbor5ValueES6_NS6_4LessENSt3__16vectorINS8_4pairIS6_S6_EENS8_9allocatorISB_EEEEEEE18kExpectedCBORTypes = internal unnamed_addr constant [7 x i8] c"\04\08\80\03 \10\FF", align 1
@_ZN6device12cbor_extract12_GLOBAL__N_15kTrueE = internal constant i8 1, align 1
@_ZN6device12cbor_extract12_GLOBAL__N_16kFalseE = internal constant i8 0, align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device12cbor_extract8internal7ExtractEN4base4spanIPKvLm18446744073709551615EEENS3_IKNS0_10StepOrByteIvEELm18446744073709551615EEERKNS2_8flat_mapIN4cbor5ValueESD_NSD_4LessENSt3__16vectorINSF_4pairISD_SD_EENSF_9allocatorISI_EEEEEE(i64, i8**, i64, %"struct.device::cbor_extract::StepOrByte"*, %"class.base::flat_map"* dereferenceable(24)) local_unnamed_addr #0 {
  %6 = alloca %"class.device::cbor_extract::(anonymous namespace)::Extractor", align 8
  %7 = bitcast %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %6, i64 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %6, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %6, i64 0, i32 2
  store i64 %0, i64* %8, align 8
  store i8** %1, i8*** %9, align 8
  store i64 %2, i64* %10, align 8
  store %"struct.device::cbor_extract::StepOrByte"* %3, %"struct.device::cbor_extract::StepOrByte"** %11, align 8
  store i64 0, i64* %12, align 8
  %13 = call fastcc zeroext i1 @_ZN6device12cbor_extract12_GLOBAL__N_19Extractor13ValuesFromMapERKN4base8flat_mapIN4cbor5ValueES6_NS6_4LessENSt3__16vectorINS8_4pairIS6_S6_EENS8_9allocatorISB_EEEEEE(%"class.device::cbor_extract::(anonymous namespace)::Extractor"* nonnull %6, %"class.base::flat_map"* dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #10
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN6device12cbor_extract12_GLOBAL__N_19Extractor13ValuesFromMapERKN4base8flat_mapIN4cbor5ValueES6_NS6_4LessENSt3__16vectorINS8_4pairIS6_S6_EENS8_9allocatorISB_EEEEEE(%"class.device::cbor_extract::(anonymous namespace)::Extractor"* nocapture, %"class.base::flat_map"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.cbor::Value", align 8
  %5 = alloca %"class.cbor::Value", align 8
  %6 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %0, i64 0, i32 1, i32 1
  %7 = load %"struct.device::cbor_extract::StepOrByte"*, %"struct.device::cbor_extract::StepOrByte"** %6, align 8
  %8 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"struct.device::cbor_extract::StepOrByte", %"struct.device::cbor_extract::StepOrByte"* %7, i64 %9, i32 0, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = lshr i8 %12, 1
  %14 = and i8 %13, 7
  %15 = icmp eq i8 %14, 7
  br i1 %15, label %222, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.cbor::Value"* %5 to i8*
  %18 = bitcast %"class.base::flat_map"* %1 to %"struct.cbor::Value::Less"*
  %19 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair"** %20 to i64*
  %22 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast %"class.cbor::Value"* %4 to i8*
  %29 = getelementptr inbounds %"class.device::cbor_extract::(anonymous namespace)::Extractor", %"class.device::cbor_extract::(anonymous namespace)::Extractor"* %0, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %31

31:                                               ; preds = %16, %213
  %32 = phi i8 [ %14, %16 ], [ %220, %213 ]
  %33 = phi i8 [ %12, %16 ], [ %218, %213 ]
  %34 = phi i64 [ %10, %16 ], [ %216, %213 ]
  %35 = phi i64 [ %9, %16 ], [ %215, %213 ]
  %36 = phi %"struct.device::cbor_extract::StepOrByte"* [ %7, %16 ], [ %214, %213 ]
  %37 = zext i8 %32 to i32
  %38 = add i64 %35, 2
  store i64 %38, i64* %8, align 8
  %39 = getelementptr inbounds %"struct.device::cbor_extract::StepOrByte", %"struct.device::cbor_extract::StepOrByte"* %36, i64 %34, i32 0, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 127
  br i1 %41, label %42, label %116

42:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %43 = getelementptr inbounds %"struct.device::cbor_extract::StepOrByte", %"struct.device::cbor_extract::StepOrByte"* %36, i64 %38, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  %44 = call i64 @strlen(i8* %43) #10
  %45 = icmp ugt i64 %44, -17
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %47) #11
  unreachable

48:                                               ; preds = %42
  %49 = icmp ult i64 %44, 23
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = add nuw i64 %44, 16
  %52 = and i64 %51, -16
  %53 = call i8* @_Znwm(i64 %52) #12
  store i8* %53, i8** %23, align 8
  %54 = or i64 %52, -9223372036854775808
  store i64 %54, i64* %25, align 8
  store i64 %44, i64* %24, align 8
  br label %58

55:                                               ; preds = %48
  %56 = trunc i64 %44 to i8
  store i8 %56, i8* %27, align 1
  %57 = icmp eq i64 %44, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55, %50
  %59 = phi i8* [ %53, %50 ], [ %22, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 %43, i64 %44, i1 false) #10
  br label %60

60:                                               ; preds = %55, %58
  %61 = phi i8* [ %22, %55 ], [ %59, %58 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %44
  store i8 0, i8* %62, align 1
  %63 = load i8, i8* %27, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i64, i64* %24, align 8
  %66 = zext i8 %63 to i64
  %67 = select i1 %64, i64 %65, i64 %66
  %68 = add i64 %67, 1
  %69 = add i64 %68, %38
  store i64 %69, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4cbor5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_4TypeE(%"class.cbor::Value"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 3) #10
  %70 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %71 = load i64, i64* %21, align 8
  %72 = ptrtoint %"struct.std::__1::pair"* %70 to i64
  %73 = sub i64 %71, %72
  %74 = icmp eq i64 %73, 0
  %75 = inttoptr i64 %71 to %"struct.std::__1::pair"*
  br i1 %74, label %94, label %76

76:                                               ; preds = %60
  %77 = ashr exact i64 %73, 6
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi %"struct.std::__1::pair"* [ %70, %76 ], [ %89, %78 ]
  %80 = phi i64 [ %77, %76 ], [ %88, %78 ]
  %81 = lshr i64 %80, 1
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 %81
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 0, i32 0
  %84 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %18, %"class.cbor::Value"* dereferenceable(32) %83, %"class.cbor::Value"* nonnull dereferenceable(32) %4) #10
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 1
  %86 = xor i64 %81, -1
  %87 = add i64 %80, %86
  %88 = select i1 %84, i64 %87, i64 %81
  %89 = select i1 %84, %"struct.std::__1::pair"* %85, %"struct.std::__1::pair"* %79
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %91, label %78

91:                                               ; preds = %78
  %92 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %93 = ptrtoint %"struct.std::__1::pair"* %89 to i64
  br label %94

94:                                               ; preds = %91, %60
  %95 = phi i64 [ %93, %91 ], [ %72, %60 ]
  %96 = phi %"struct.std::__1::pair"* [ %92, %91 ], [ %75, %60 ]
  %97 = phi %"struct.std::__1::pair"* [ %89, %91 ], [ %70, %60 ]
  %98 = icmp eq %"struct.std::__1::pair"* %97, %96
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0
  %101 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %18, %"class.cbor::Value"* nonnull dereferenceable(32) %4, %"class.cbor::Value"* dereferenceable(32) %100) #10
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 1
  %104 = ptrtoint %"struct.std::__1::pair"* %103 to i64
  br label %105

105:                                              ; preds = %102, %99, %94
  %106 = phi i64 [ %104, %102 ], [ %95, %94 ], [ %95, %99 ]
  %107 = inttoptr i64 %106 to %"struct.std::__1::pair"*
  %108 = icmp eq %"struct.std::__1::pair"* %97, %107
  %109 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %110 = select i1 %108, %"struct.std::__1::pair"* %109, %"struct.std::__1::pair"* %97
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  %111 = load i8, i8* %27, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %105
  %114 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %105, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  br label %159

116:                                              ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %117 = sext i8 %40 to i64
  call void @_ZN4cbor5ValueC1El(%"class.cbor::Value"* nonnull %5, i64 %117) #10
  %118 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %119 = load i64, i64* %21, align 8
  %120 = ptrtoint %"struct.std::__1::pair"* %118 to i64
  %121 = sub i64 %119, %120
  %122 = icmp eq i64 %121, 0
  %123 = inttoptr i64 %119 to %"struct.std::__1::pair"*
  br i1 %122, label %142, label %124

124:                                              ; preds = %116
  %125 = ashr exact i64 %121, 6
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi %"struct.std::__1::pair"* [ %118, %124 ], [ %137, %126 ]
  %128 = phi i64 [ %125, %124 ], [ %136, %126 ]
  %129 = lshr i64 %128, 1
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %129
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 0, i32 0
  %132 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %18, %"class.cbor::Value"* dereferenceable(32) %131, %"class.cbor::Value"* nonnull dereferenceable(32) %5) #10
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 1
  %134 = xor i64 %129, -1
  %135 = add i64 %128, %134
  %136 = select i1 %132, i64 %135, i64 %129
  %137 = select i1 %132, %"struct.std::__1::pair"* %133, %"struct.std::__1::pair"* %127
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %139, label %126

139:                                              ; preds = %126
  %140 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %141 = ptrtoint %"struct.std::__1::pair"* %137 to i64
  br label %142

142:                                              ; preds = %139, %116
  %143 = phi i64 [ %141, %139 ], [ %120, %116 ]
  %144 = phi %"struct.std::__1::pair"* [ %140, %139 ], [ %123, %116 ]
  %145 = phi %"struct.std::__1::pair"* [ %137, %139 ], [ %118, %116 ]
  %146 = icmp eq %"struct.std::__1::pair"* %145, %144
  br i1 %146, label %153, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %145, i64 0, i32 0
  %149 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %18, %"class.cbor::Value"* nonnull dereferenceable(32) %5, %"class.cbor::Value"* dereferenceable(32) %148) #10
  br i1 %149, label %153, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %145, i64 1
  %152 = ptrtoint %"struct.std::__1::pair"* %151 to i64
  br label %153

153:                                              ; preds = %150, %147, %142
  %154 = phi i64 [ %152, %150 ], [ %143, %142 ], [ %143, %147 ]
  %155 = inttoptr i64 %154 to %"struct.std::__1::pair"*
  %156 = icmp eq %"struct.std::__1::pair"* %145, %155
  %157 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %158 = select i1 %156, %"struct.std::__1::pair"* %157, %"struct.std::__1::pair"* %145
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  br label %159

159:                                              ; preds = %153, %115
  %160 = phi %"struct.std::__1::pair"* [ %110, %115 ], [ %158, %153 ]
  %161 = icmp eq i8 %32, 4
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = load i8**, i8*** %29, align 8
  %164 = lshr i8 %33, 4
  %165 = zext i8 %164 to i64
  %166 = getelementptr inbounds i8*, i8** %163, i64 %165
  br label %167

167:                                              ; preds = %159, %162
  %168 = phi i8** [ %166, %162 ], [ null, %159 ]
  %169 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %170 = icmp eq %"struct.std::__1::pair"* %160, %169
  br i1 %170, label %171, label %177

171:                                              ; preds = %167
  %172 = and i8 %33, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %222

174:                                              ; preds = %171
  %175 = icmp eq i8** %168, null
  br i1 %175, label %213, label %176

176:                                              ; preds = %174
  store i8* null, i8** %168, align 8
  br label %213

177:                                              ; preds = %167
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %160, i64 0, i32 1
  %179 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = icmp ugt i32 %180, 7
  br i1 %181, label %222, label %182

182:                                              ; preds = %177
  %183 = zext i8 %32 to i64
  %184 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZN6device12cbor_extract12_GLOBAL__N_19Extractor13ValuesFromMapERKN4base8flat_mapIN4cbor5ValueES6_NS6_4LessENSt3__16vectorINS8_4pairIS6_S6_EENS8_9allocatorISB_EEEEEEE18kExpectedCBORTypes, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = shl i32 1, %180
  %188 = and i32 %187, %186
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %222, label %190

190:                                              ; preds = %182
  switch i32 %37, label %212 [
    i32 0, label %191
    i32 1, label %194
    i32 2, label %197
    i32 3, label %201
    i32 4, label %204
    i32 5, label %207
    i32 6, label %210
    i32 7, label %222
  ]

191:                                              ; preds = %190
  %192 = call dereferenceable(24) %"class.std::__1::vector.3"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %178) #10
  %193 = bitcast i8** %168 to %"class.std::__1::vector.3"**
  store %"class.std::__1::vector.3"* %192, %"class.std::__1::vector.3"** %193, align 8
  br label %213

194:                                              ; preds = %190
  %195 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %178) #10
  %196 = bitcast i8** %168 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %195, %"class.std::__1::basic_string"** %196, align 8
  br label %213

197:                                              ; preds = %190
  %198 = call i32 @_ZNK4cbor5Value14GetSimpleValueEv(%"class.cbor::Value"* %178) #10
  switch i32 %198, label %222 [
    i32 21, label %199
    i32 20, label %200
  ]

199:                                              ; preds = %197
  store i8* @_ZN6device12cbor_extract12_GLOBAL__N_15kTrueE, i8** %168, align 8
  br label %213

200:                                              ; preds = %197
  store i8* @_ZN6device12cbor_extract12_GLOBAL__N_16kFalseE, i8** %168, align 8
  br label %213

201:                                              ; preds = %190
  %202 = call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %178) #10
  %203 = bitcast i8** %168 to i64**
  store i64* %202, i64** %203, align 8
  br label %213

204:                                              ; preds = %190
  %205 = call dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"* %178) #10
  %206 = call fastcc zeroext i1 @_ZN6device12cbor_extract12_GLOBAL__N_19Extractor13ValuesFromMapERKN4base8flat_mapIN4cbor5ValueES6_NS6_4LessENSt3__16vectorINS8_4pairIS6_S6_EENS8_9allocatorISB_EEEEEE(%"class.device::cbor_extract::(anonymous namespace)::Extractor"* %0, %"class.base::flat_map"* dereferenceable(24) %205)
  br i1 %206, label %213, label %222

207:                                              ; preds = %190
  %208 = call dereferenceable(24) %"class.std::__1::vector.17"* @_ZNK4cbor5Value8GetArrayEv(%"class.cbor::Value"* %178) #10
  %209 = bitcast i8** %168 to %"class.std::__1::vector.17"**
  store %"class.std::__1::vector.17"* %208, %"class.std::__1::vector.17"** %209, align 8
  br label %213

210:                                              ; preds = %190
  %211 = bitcast i8** %168 to %"class.cbor::Value"**
  store %"class.cbor::Value"* %178, %"class.cbor::Value"** %211, align 8
  br label %213

212:                                              ; preds = %190
  unreachable

213:                                              ; preds = %191, %194, %201, %207, %210, %200, %199, %204, %174, %176
  %214 = load %"struct.device::cbor_extract::StepOrByte"*, %"struct.device::cbor_extract::StepOrByte"** %6, align 8
  %215 = load i64, i64* %8, align 8
  %216 = add i64 %215, 1
  store i64 %216, i64* %8, align 8
  %217 = getelementptr inbounds %"struct.device::cbor_extract::StepOrByte", %"struct.device::cbor_extract::StepOrByte"* %214, i64 %215, i32 0, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = lshr i8 %218, 1
  %220 = and i8 %219, 7
  %221 = icmp eq i8 %220, 7
  br i1 %221, label %222, label %31

222:                                              ; preds = %190, %204, %197, %177, %182, %171, %213, %2
  %223 = phi i1 [ true, %2 ], [ true, %213 ], [ false, %171 ], [ false, %182 ], [ false, %177 ], [ false, %197 ], [ false, %204 ], [ false, %190 ]
  ret i1 %223
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device12cbor_extract21ForEachPublicKeyEntryERKNSt3__16vectorIN4cbor5ValueENS1_9allocatorIS4_EEEERKS4_N4base17RepeatingCallbackIFbSB_EEE(%"class.std::__1::vector.17"* nocapture readonly dereferenceable(24), %"class.cbor::Value"* dereferenceable(32), %"class.base::RepeatingCallback"* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca %"class.cbor::Value", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.cbor::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 3) #10
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  store i8 10, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10, i1 false) #10
  %11 = getelementptr inbounds i8, i8* %7, i64 10
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.cbor::Value"*, %"class.cbor::Value"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %15 = load %"class.cbor::Value"*, %"class.cbor::Value"** %14, align 8
  %16 = icmp eq %"class.cbor::Value"* %13, %15
  br i1 %16, label %168, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  br label %20

20:                                               ; preds = %17, %165
  %21 = phi %"class.cbor::Value"* [ %13, %17 ], [ %166, %165 ]
  %22 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 5
  br i1 %24, label %25, label %168

25:                                               ; preds = %20
  %26 = call dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"* %21) #10
  %27 = bitcast %"class.base::flat_map"* %26 to %"struct.cbor::Value::Less"*
  %28 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.std::__1::pair"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  %34 = sub i64 %32, %33
  %35 = icmp eq i64 %34, 0
  %36 = inttoptr i64 %32 to %"struct.std::__1::pair"*
  br i1 %35, label %55, label %37

37:                                               ; preds = %25
  %38 = ashr exact i64 %34, 6
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.std::__1::pair"* [ %29, %37 ], [ %50, %39 ]
  %41 = phi i64 [ %38, %37 ], [ %49, %39 ]
  %42 = lshr i64 %41, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 %42
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 0, i32 0
  %45 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %27, %"class.cbor::Value"* dereferenceable(32) %44, %"class.cbor::Value"* nonnull dereferenceable(32) %4) #10
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 1
  %47 = xor i64 %42, -1
  %48 = add i64 %41, %47
  %49 = select i1 %45, i64 %48, i64 %42
  %50 = select i1 %45, %"struct.std::__1::pair"* %46, %"struct.std::__1::pair"* %40
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %39

52:                                               ; preds = %39
  %53 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %54 = ptrtoint %"struct.std::__1::pair"* %50 to i64
  br label %55

55:                                               ; preds = %52, %25
  %56 = phi i64 [ %54, %52 ], [ %33, %25 ]
  %57 = phi %"struct.std::__1::pair"* [ %53, %52 ], [ %36, %25 ]
  %58 = phi %"struct.std::__1::pair"* [ %50, %52 ], [ %29, %25 ]
  %59 = icmp eq %"struct.std::__1::pair"* %58, %57
  br i1 %59, label %66, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 0, i32 0
  %62 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %27, %"class.cbor::Value"* nonnull dereferenceable(32) %4, %"class.cbor::Value"* dereferenceable(32) %61) #10
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 1
  %65 = ptrtoint %"struct.std::__1::pair"* %64 to i64
  br label %66

66:                                               ; preds = %63, %60, %55
  %67 = phi i64 [ %65, %63 ], [ %56, %55 ], [ %56, %60 ]
  %68 = inttoptr i64 %67 to %"struct.std::__1::pair"*
  %69 = icmp eq %"struct.std::__1::pair"* %58, %68
  %70 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %71 = select i1 %69, %"struct.std::__1::pair"* %70, %"struct.std::__1::pair"* %58
  %72 = icmp eq %"struct.std::__1::pair"* %71, %70
  br i1 %72, label %168, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 1
  %75 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %78, label %168

78:                                               ; preds = %73
  %79 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %74) #10
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %82 to i64
  %87 = select i1 %83, i64 %85, i64 %86
  %88 = icmp eq i64 %87, 10
  br i1 %88, label %89, label %165

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  br i1 %83, label %112, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %19, align 8
  %94 = trunc i64 %93 to i8
  %95 = ptrtoint i8* %91 to i64
  %96 = trunc i64 %95 to i8
  %97 = icmp eq i8 %94, %96
  br i1 %97, label %98, label %165

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  br label %100

100:                                              ; preds = %98, %107
  %101 = phi i64 [ %104, %107 ], [ %86, %98 ]
  %102 = phi i8* [ %105, %107 ], [ %99, %98 ]
  %103 = phi i8* [ %108, %107 ], [ %7, %98 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %165

112:                                              ; preds = %89
  %113 = call i32 @bcmp(i8* %91, i8* nonnull %7, i64 10) #10
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %165

115:                                              ; preds = %100, %112
  %116 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %117 = load i64, i64* %31, align 8
  %118 = ptrtoint %"struct.std::__1::pair"* %116 to i64
  %119 = sub i64 %117, %118
  %120 = icmp eq i64 %119, 0
  %121 = inttoptr i64 %117 to %"struct.std::__1::pair"*
  br i1 %120, label %140, label %122

122:                                              ; preds = %115
  %123 = ashr exact i64 %119, 6
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi %"struct.std::__1::pair"* [ %116, %122 ], [ %135, %124 ]
  %126 = phi i64 [ %123, %122 ], [ %134, %124 ]
  %127 = lshr i64 %126, 1
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 %127
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 0, i32 0
  %130 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %27, %"class.cbor::Value"* dereferenceable(32) %129, %"class.cbor::Value"* dereferenceable(32) %1) #10
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 1
  %132 = xor i64 %127, -1
  %133 = add i64 %126, %132
  %134 = select i1 %130, i64 %133, i64 %127
  %135 = select i1 %130, %"struct.std::__1::pair"* %131, %"struct.std::__1::pair"* %125
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %137, label %124

137:                                              ; preds = %124
  %138 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %139 = ptrtoint %"struct.std::__1::pair"* %135 to i64
  br label %140

140:                                              ; preds = %137, %115
  %141 = phi i64 [ %139, %137 ], [ %118, %115 ]
  %142 = phi %"struct.std::__1::pair"* [ %138, %137 ], [ %121, %115 ]
  %143 = phi %"struct.std::__1::pair"* [ %135, %137 ], [ %116, %115 ]
  %144 = icmp eq %"struct.std::__1::pair"* %143, %142
  br i1 %144, label %151, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 0, i32 0
  %147 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %27, %"class.cbor::Value"* dereferenceable(32) %1, %"class.cbor::Value"* dereferenceable(32) %146) #10
  br i1 %147, label %151, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 1
  %150 = ptrtoint %"struct.std::__1::pair"* %149 to i64
  br label %151

151:                                              ; preds = %148, %145, %140
  %152 = phi i64 [ %150, %148 ], [ %141, %140 ], [ %141, %145 ]
  %153 = inttoptr i64 %152 to %"struct.std::__1::pair"*
  %154 = icmp eq %"struct.std::__1::pair"* %143, %153
  %155 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %156 = select i1 %154, %"struct.std::__1::pair"* %155, %"struct.std::__1::pair"* %143
  %157 = icmp eq %"struct.std::__1::pair"* %156, %155
  br i1 %157, label %168, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %156, i64 0, i32 1
  %160 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %18, align 8
  %161 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %160, i64 0, i32 1
  %162 = bitcast void ()** %161 to i1 (%"class.base::internal::BindStateBase"*, %"class.cbor::Value"*)**
  %163 = load i1 (%"class.base::internal::BindStateBase"*, %"class.cbor::Value"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.cbor::Value"*)** %162, align 8
  %164 = call zeroext i1 %163(%"class.base::internal::BindStateBase"* %160, %"class.cbor::Value"* dereferenceable(32) %159) #10
  br i1 %164, label %165, label %168

165:                                              ; preds = %107, %92, %112, %158, %78
  %166 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %21, i64 1
  %167 = icmp eq %"class.cbor::Value"* %166, %15
  br i1 %167, label %168, label %20

168:                                              ; preds = %165, %151, %158, %66, %73, %20, %3
  %169 = phi i1 [ true, %3 ], [ true, %165 ], [ false, %151 ], [ false, %158 ], [ false, %66 ], [ false, %73 ], [ false, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret i1 %169
}

declare void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"*, i8*, i32) unnamed_addr #2

declare dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4cbor5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_4TypeE(%"class.cbor::Value"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #3

declare void @_ZN4cbor5ValueC1El(%"class.cbor::Value"*, i64) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.3"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare i32 @_ZNK4cbor5Value14GetSimpleValueEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.17"* @_ZNK4cbor5Value8GetArrayEv(%"class.cbor::Value"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"*, %"class.cbor::Value"* dereferenceable(32), %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = icmp slt i32 %5, %7
  br label %150

11:                                               ; preds = %3
  switch i32 %5, label %150 [
    i32 0, label %12
    i32 1, label %18
    i32 3, label %24
    i32 2, label %70
    i32 -2, label %110
  ]

12:                                               ; preds = %11
  %13 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %1) #10
  %14 = load i64, i64* %13, align 8
  %15 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %2) #10
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %14, %16
  br label %150

18:                                               ; preds = %11
  %19 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %1) #10
  %20 = load i64, i64* %19, align 8
  %21 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %2) #10
  %22 = load i64, i64* %21, align 8
  %23 = icmp sgt i64 %20, %22
  br label %150

24:                                               ; preds = %11
  %25 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %1) #10
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %2) #10
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp ult i64 %33, %42
  br i1 %43, label %150, label %44

44:                                               ; preds = %24
  %45 = icmp ult i64 %42, %33
  br i1 %45, label %150, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %27, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %30, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp ult i64 %42, %51
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %48, i8* %57, i8* %58
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %63 = select i1 %38, i8* %61, i8* %62
  %64 = tail call i32 @memcmp(i8* %59, i8* %63, i64 %53) #10
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %55, %46
  %67 = icmp ult i64 %51, %42
  br label %150

68:                                               ; preds = %55
  %69 = icmp slt i32 %64, 0
  br label %150

70:                                               ; preds = %11
  %71 = tail call dereferenceable(24) %"class.std::__1::vector.3"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %1) #10
  %72 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %71, i64 0, i32 0, i32 1
  %73 = bitcast i8** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector.3"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = tail call dereferenceable(24) %"class.std::__1::vector.3"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %2) #10
  %79 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 1
  %80 = bitcast i8** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector.3"* %78 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = icmp ult i64 %77, %84
  %86 = inttoptr i64 %83 to i8*
  %87 = inttoptr i64 %81 to i8*
  br i1 %85, label %150, label %88

88:                                               ; preds = %70
  %89 = icmp ult i64 %84, %77
  br i1 %89, label %150, label %90

90:                                               ; preds = %88
  %91 = load i8*, i8** %72, align 8
  %92 = icmp eq i8* %86, %87
  br i1 %92, label %150, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %71, i64 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %106, %93
  %97 = phi i8* [ %107, %106 ], [ %95, %93 ]
  %98 = phi i8* [ %108, %106 ], [ %86, %93 ]
  %99 = icmp eq i8* %97, %91
  br i1 %99, label %150, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %98, align 1
  %103 = icmp ult i8 %101, %102
  br i1 %103, label %150, label %104

104:                                              ; preds = %100
  %105 = icmp ult i8 %102, %101
  br i1 %105, label %150, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %97, i64 1
  %108 = getelementptr inbounds i8, i8* %98, i64 1
  %109 = icmp eq i8* %108, %87
  br i1 %109, label %150, label %96

110:                                              ; preds = %11
  %111 = tail call dereferenceable(24) %"class.std::__1::vector.3"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"* %1) #10
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %111, i64 0, i32 0, i32 1
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.3"* %111 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = tail call dereferenceable(24) %"class.std::__1::vector.3"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"* %2) #10
  %119 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 1
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector.3"* %118 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %121, %123
  %125 = icmp ult i64 %117, %124
  %126 = inttoptr i64 %123 to i8*
  %127 = inttoptr i64 %121 to i8*
  br i1 %125, label %150, label %128

128:                                              ; preds = %110
  %129 = icmp ult i64 %124, %117
  br i1 %129, label %150, label %130

130:                                              ; preds = %128
  %131 = load i8*, i8** %112, align 8
  %132 = icmp eq i8* %126, %127
  br i1 %132, label %150, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %111, i64 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %146, %133
  %137 = phi i8* [ %147, %146 ], [ %135, %133 ]
  %138 = phi i8* [ %148, %146 ], [ %126, %133 ]
  %139 = icmp eq i8* %137, %131
  br i1 %139, label %150, label %140

140:                                              ; preds = %136
  %141 = load i8, i8* %137, align 1
  %142 = load i8, i8* %138, align 1
  %143 = icmp ult i8 %141, %142
  br i1 %143, label %150, label %144

144:                                              ; preds = %140
  %145 = icmp ult i8 %142, %141
  br i1 %145, label %150, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds i8, i8* %137, i64 1
  %148 = getelementptr inbounds i8, i8* %138, i64 1
  %149 = icmp eq i8* %148, %127
  br i1 %149, label %150, label %136

150:                                              ; preds = %146, %144, %140, %136, %106, %104, %100, %96, %130, %128, %110, %90, %88, %70, %68, %66, %44, %24, %11, %18, %12, %9
  %151 = phi i1 [ %10, %9 ], [ %23, %18 ], [ %17, %12 ], [ false, %11 ], [ true, %24 ], [ false, %44 ], [ %67, %66 ], [ %69, %68 ], [ true, %70 ], [ false, %88 ], [ false, %90 ], [ true, %110 ], [ false, %128 ], [ false, %130 ], [ true, %100 ], [ true, %96 ], [ false, %106 ], [ false, %104 ], [ true, %140 ], [ true, %136 ], [ false, %146 ], [ false, %144 ]
  ret i1 %151
}

declare dereferenceable(24) %"class.std::__1::vector.3"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
