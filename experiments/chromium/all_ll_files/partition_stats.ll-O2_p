; ModuleID = '../../base/allocator/partition_allocator/partition_stats.cc'
source_filename = "../../base/allocator/partition_allocator/partition_stats.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::SimplePartitionStatsDumper" = type { %"class.base::PartitionStatsDumper", %"struct.base::PartitionMemoryStats" }
%"class.base::PartitionStatsDumper" = type { i32 (...)** }
%"struct.base::PartitionMemoryStats" = type { i64, i64, i64, i64, i64, i64, i8, %"struct.base::ThreadCacheStats", %"struct.base::ThreadCacheStats" }
%"struct.base::ThreadCacheStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [129 x i64], [129 x i64] }
%"struct.base::PartitionBucketMemoryStats" = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

$_ZN4base26SimplePartitionStatsDumper25PartitionsDumpBucketStatsEPKcPKNS_26PartitionBucketMemoryStatsE = comdat any

@_ZTVN4base26SimplePartitionStatsDumperE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SimplePartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)* @_ZN4base26SimplePartitionStatsDumper19PartitionDumpTotalsEPKcPKNS_20PartitionMemoryStatsE to i8*), i8* bitcast (void (%"class.base::SimplePartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)* @_ZN4base26SimplePartitionStatsDumper25PartitionsDumpBucketStatsEPKcPKNS_26PartitionBucketMemoryStatsE to i8*)] }, align 8

@_ZN4base26SimplePartitionStatsDumperC1Ev = hidden unnamed_addr alias void (%"class.base::SimplePartitionStatsDumper"*), void (%"class.base::SimplePartitionStatsDumper"*)* @_ZN4base26SimplePartitionStatsDumperC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26SimplePartitionStatsDumperC2Ev(%"class.base::SimplePartitionStatsDumper"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SimplePartitionStatsDumper", %"class.base::SimplePartitionStatsDumper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base26SimplePartitionStatsDumperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SimplePartitionStatsDumper", %"class.base::SimplePartitionStatsDumper"* %0, i64 0, i32 1
  %4 = bitcast %"struct.base::PartitionMemoryStats"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 4360, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26SimplePartitionStatsDumper19PartitionDumpTotalsEPKcPKNS_20PartitionMemoryStatsE(%"class.base::SimplePartitionStatsDumper"* nocapture, i8* nocapture readnone, %"struct.base::PartitionMemoryStats"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::SimplePartitionStatsDumper", %"class.base::SimplePartitionStatsDumper"* %0, i64 0, i32 1
  %5 = bitcast %"struct.base::PartitionMemoryStats"* %4 to i8*
  %6 = bitcast %"struct.base::PartitionMemoryStats"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 4360, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base26SimplePartitionStatsDumper25PartitionsDumpBucketStatsEPKcPKNS_26PartitionBucketMemoryStatsE(%"class.base::SimplePartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*) unnamed_addr #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
