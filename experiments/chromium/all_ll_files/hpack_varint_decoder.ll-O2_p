; ModuleID = '../../net/third_party/quiche/src/http2/hpack/varint/hpack_varint_decoder.cc'
source_filename = "../../net/third_party/quiche/src/http2/hpack/varint/hpack_varint_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::DecodeBuffer" = type { i8*, i8*, i8*, %"class.http2::DecodeBufferSubset"* }
%"class.http2::DecodeBufferSubset" = type { %"class.http2::DecodeBuffer", %"class.http2::DecodeBuffer"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }

@.str = private unnamed_addr constant [26 x i8] c"HpackVarintDecoder(value=\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c", offset=\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c")\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5http218HpackVarintDecoder5StartEhhPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* nocapture, i8 zeroext, i8 zeroext, %"class.http2::DecodeBuffer"*) local_unnamed_addr #0 align 2 {
  %5 = zext i8 %2 to i32
  %6 = shl nsw i32 -1, %5
  %7 = trunc i32 %6 to i8
  %8 = xor i8 %7, -1
  %9 = and i8 %8, %1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = icmp ult i8 %9, %8
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 1
  store i8 0, i8* %14, align 8
  %15 = tail call i32 @_ZN5http218HpackVarintDecoder6ResumeEPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* %0, %"class.http2::DecodeBuffer"* %3)
  br label %16

16:                                               ; preds = %4, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %4 ]
  ret i32 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5http218HpackVarintDecoder6ResumeEPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* nocapture, %"class.http2::DecodeBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = icmp ult i8 %4, 63
  %6 = getelementptr inbounds %"class.http2::DecodeBuffer", %"class.http2::DecodeBuffer"* %1, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.http2::DecodeBuffer", %"class.http2::DecodeBuffer"* %1, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp uge i8* %7, %9
  br i1 %5, label %11, label %31

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  br label %13

13:                                               ; preds = %11, %25
  %14 = phi i1 [ %10, %11 ], [ %30, %25 ]
  br i1 %14, label %51, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i8 @_ZN5http212DecodeBuffer11DecodeUInt8Ev(%"class.http2::DecodeBuffer"* %1) #6
  %17 = and i8 %16, 127
  %18 = zext i8 %17 to i64
  %19 = load i8, i8* %3, align 8
  %20 = zext i8 %19 to i64
  %21 = shl i64 %18, %20
  %22 = load i64, i64* %12, align 8
  %23 = add i64 %21, %22
  store i64 %23, i64* %12, align 8
  %24 = icmp sgt i8 %16, -1
  br i1 %24, label %51, label %25

25:                                               ; preds = %15
  %26 = add i8 %19, 7
  store i8 %26, i8* %3, align 8
  %27 = icmp ult i8 %26, 63
  %28 = load i8*, i8** %6, align 8
  %29 = load i8*, i8** %8, align 8
  %30 = icmp uge i8* %28, %29
  br i1 %27, label %13, label %31

31:                                               ; preds = %25, %2
  %32 = phi i1 [ %10, %2 ], [ %30, %25 ]
  br i1 %32, label %51, label %33

33:                                               ; preds = %31
  %34 = tail call zeroext i8 @_ZN5http212DecodeBuffer11DecodeUInt8Ev(%"class.http2::DecodeBuffer"* %1) #6
  %35 = icmp sgt i8 %34, -1
  br i1 %35, label %36, label %51

36:                                               ; preds = %33
  %37 = and i8 %34, 127
  %38 = zext i8 %37 to i64
  %39 = load i8, i8* %3, align 8
  %40 = zext i8 %39 to i64
  %41 = lshr i64 -1, %40
  %42 = icmp ult i64 %41, %38
  br i1 %42, label %51, label %43

43:                                               ; preds = %36
  %44 = shl i64 %38, %40
  %45 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = xor i64 %44, -1
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = add i64 %46, %44
  store i64 %50, i64* %45, align 8
  br label %51

51:                                               ; preds = %15, %13, %33, %36, %43, %49, %31
  %52 = phi i32 [ 1, %31 ], [ 0, %49 ], [ 2, %43 ], [ 2, %36 ], [ 2, %33 ], [ 0, %15 ], [ 1, %13 ]
  ret i32 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5http218HpackVarintDecoder13StartExtendedEhPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* nocapture, i8 zeroext, %"class.http2::DecodeBuffer"*) local_unnamed_addr #0 align 2 {
  %4 = zext i8 %1 to i32
  %5 = shl nsw i32 -1, %4
  %6 = xor i32 %5, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 8
  %10 = tail call i32 @_ZN5http218HpackVarintDecoder6ResumeEPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* %0, %"class.http2::DecodeBuffer"* %2)
  ret i32 %10
}

declare zeroext i8 @_ZN5http212DecodeBuffer11DecodeUInt8Ev(%"class.http2::DecodeBuffer"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5http218HpackVarintDecoder5valueEv(%"class.http2::HpackVarintDecoder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5http218HpackVarintDecoder9set_valueEm(%"class.http2::HpackVarintDecoder"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5http218HpackVarintDecoder11DebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.http2::HpackVarintDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [5 x %"class.absl::string_view"], align 16
  %4 = alloca %"class.absl::AlphaNum", align 16
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %10 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %8, i8* %9) #6
  %11 = ptrtoint i8* %10 to i64
  %12 = ptrtoint i8* %9 to i64
  %13 = sub i64 %11, %12
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %9, i8** %14, align 16
  %15 = icmp sgt i64 %13, -1
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %2
  call void @llvm.trap() #6
  unreachable

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %13, i64* %18, align 8
  %19 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %1, i64 0, i32 1
  %21 = load i8, i8* %20, align 8
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 1, i64 0
  %24 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %22, i8* %23) #6
  %25 = ptrtoint i8* %24 to i64
  %26 = ptrtoint i8* %23 to i64
  %27 = sub i64 %25, %26
  %28 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* %23, i8** %28, align 8
  %29 = icmp sgt i64 %27, -1
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %17
  call void @llvm.trap() #6
  unreachable

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 %27, i64* %32, align 8
  %33 = bitcast [5 x %"class.absl::string_view"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %33) #6, !noalias !3
  %34 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 0
  %35 = bitcast [5 x %"class.absl::string_view"]* %3 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([26 x i8]* @.str to i64), i64 25>, <2 x i64>* %35, align 16, !noalias !3
  %36 = bitcast %"class.absl::AlphaNum"* %4 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 16, !noalias !3
  %38 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 0
  %39 = bitcast i8** %38 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %39, align 16, !noalias !3
  %40 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 2, i32 0
  %41 = bitcast i8** %40 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([10 x i8]* @.str.1 to i64), i64 9>, <2 x i64>* %41, align 16, !noalias !3
  %42 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 0
  %43 = bitcast i8** %42 to i64*
  store i64 %26, i64* %43, align 16, !noalias !3
  %44 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 1
  store i64 %27, i64* %44, align 8, !noalias !3
  %45 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 4, i32 0
  %46 = bitcast i8** %45 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([2 x i8]* @.str.2 to i64), i64 1>, <2 x i64>* %46, align 16, !noalias !3
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret %0, %"class.absl::string_view"* nonnull %34, i64 5) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %33) #6, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5http218HpackVarintDecoder12StartForTestEhhPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* nocapture, i8 zeroext, i8 zeroext, %"class.http2::DecodeBuffer"*) local_unnamed_addr #0 align 2 {
  %5 = zext i8 %2 to i32
  %6 = shl nsw i32 -1, %5
  %7 = trunc i32 %6 to i8
  %8 = xor i8 %7, -1
  %9 = and i8 %8, %1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = icmp ult i8 %9, %8
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 1
  store i8 0, i8* %14, align 8
  %15 = tail call i32 @_ZN5http218HpackVarintDecoder6ResumeEPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* %0, %"class.http2::DecodeBuffer"* %3) #6
  br label %16

16:                                               ; preds = %4, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %4 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5http218HpackVarintDecoder20StartExtendedForTestEhPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* nocapture, i8 zeroext, %"class.http2::DecodeBuffer"*) local_unnamed_addr #0 align 2 {
  %4 = zext i8 %1 to i32
  %5 = shl nsw i32 -1, %4
  %6 = xor i32 %5, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.http2::HpackVarintDecoder", %"class.http2::HpackVarintDecoder"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 8
  %10 = tail call i32 @_ZN5http218HpackVarintDecoder6ResumeEPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* %0, %"class.http2::DecodeBuffer"* %2) #6
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5http218HpackVarintDecoder13ResumeForTestEPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* nocapture, %"class.http2::DecodeBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN5http218HpackVarintDecoder6ResumeEPNS_12DecodeBufferE(%"class.http2::HpackVarintDecoder"* %0, %"class.http2::DecodeBuffer"* %1)
  ret i32 %3
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32, i8*) local_unnamed_addr #2

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
