; ModuleID = '../../third_party/blink/renderer/core/html/forms/date_time_local_input_type.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/date_time_local_input_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::StepRange::StepDescription>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::StepRange::StepDescription>::InstanceStorage" = type { [16 x i8] }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DateTimeLocalInputType" = type { %"class.blink::BaseTemporalInputType" }
%"class.blink::BaseTemporalInputType" = type { %"class.blink::InputType" }
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.37", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.29", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.39", %"class.blink::Member.41", %"class.blink::Member.4", %"class.blink::Member.43", %"class.blink::Member.43", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::Member.66", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.71", %"class.blink::HeapVector.73" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.89", %"class.WTF::Vector.89", i8, i32, %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.104", %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.113", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.79", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.124", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.54", %"class.blink::Member.139", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::UserActionElementSet", %"class.blink::Member.148", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.155", i16, i8, %"class.blink::Member.162", %"class.blink::Member.164", %"class.blink::Member.166", %"class.blink::Member.168", %"class.blink::TextLinkColors", %"class.blink::Member.170", i8, [7 x i8], %"class.blink::HeapHashMap.172", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.54", %"class.WTF::Vector.179", %"class.blink::Member.184", %"class.blink::Member.186", i8, %"class.blink::Member.54", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.188", %"class.blink::HeapVector.190", %"class.std::__1::unique_ptr.198", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.204", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.216", %"class.WTF::Vector.218", i8, i8, %"class.std::__1::unique_ptr.223", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.229", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.237", i8, i32, %"class.blink::Member.239", %"class.blink::Member.241", %"class.blink::Member.243", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.245", %"class.WTF::HashMap.247", %"class.blink::Member.252", %"class.blink::Member.254", %"class.blink::Member.256", %"class.blink::Member.258", %"class.blink::Member.41", %"class.blink::Member.41", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.260", i8, i32, %"class.blink::Member.267", %"class.blink::Member.269", i32, %"class.blink::Member.271", %"class.blink::Member.273", %"class.blink::Member.275", %"class.std::__1::unique_ptr.277", i64, %"class.std::__1::unique_ptr.283", i32, i32, %"class.blink::Member.289", %"class.blink::Member.291", %"class.blink::Member.293", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.295", %"class.WTF::Vector.297", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.302", %"class.blink::Member.309", %"class.std::__1::unique_ptr.311", %"class.blink::Member.317", i8, i8, %"class.WTF::String", %"class.blink::Member.319", i8, [7 x i8], %"class.blink::HeapHashMap.321", %"class.blink::HeapObserverSet", %"class.blink::Member.335", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.337", i32, i8, i8, %"class.blink::WeakMember.339", %"class.blink::Member.340" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.82" }
%"class.blink::HeapHashMap.82" = type { %"class.WTF::HashMap.85" }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i32 }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.123 }
%class.scoped_refptr.123 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126" }
%"class.WTF::VectorBufferBase.126" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.141" }
%"class.blink::HeapHashMap.141" = type { %"class.WTF::HashMap.144" }
%"class.WTF::HashMap.144" = type { %"class.WTF::HashTable.145" }
%"class.WTF::HashTable.145" = type <{ %"struct.WTF::KeyValuePair.147"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.147" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.152" }
%"class.WTF::HashTable.152" = type <{ %"class.blink::WeakMember.154"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.154" = type opaque
%"class.blink::HeapHashSet.155" = type { %"class.WTF::HashSet.158" }
%"class.WTF::HashSet.158" = type { %"class.WTF::HashTable.159" }
%"class.WTF::HashTable.159" = type <{ %"class.blink::WeakMember.161"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.161" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.172" = type { %"class.WTF::HashMap.175" }
%"class.WTF::HashMap.175" = type { %"class.WTF::HashTable.176" }
%"class.WTF::HashTable.176" = type <{ %"struct.WTF::KeyValuePair.178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.178" = type opaque
%"class.WTF::Vector.179" = type { %"class.WTF::VectorBuffer.180" }
%"class.WTF::VectorBuffer.180" = type { %"class.WTF::VectorBufferBase.181" }
%"class.WTF::VectorBufferBase.181" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.190" = type { %"class.WTF::Vector.193" }
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.blink::Member.196"*, i32, i32 }
%"class.blink::Member.196" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.204" = type { %"class.WTF::HashSet.207" }
%"class.WTF::HashSet.207" = type { %"class.WTF::HashTable.208" }
%"class.WTF::HashTable.208" = type <{ %"class.blink::WeakMember.210"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.210" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.211", i32, [4 x i8] }>
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.218" = type { %"class.WTF::VectorBuffer.219" }
%"class.WTF::VectorBuffer.219" = type { %"class.WTF::VectorBufferBase.220" }
%"class.WTF::VectorBufferBase.220" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.54"*, i32, i32 }
%"class.blink::HeapVector.229" = type { %"class.WTF::Vector.232" }
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"class.blink::Member.235"*, i32, i32 }
%"class.blink::Member.235" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.41" }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.247" = type { %"class.WTF::HashTable.248" }
%"class.WTF::HashTable.248" = type <{ %"struct.WTF::KeyValuePair.251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.251" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.130, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.130 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.131" }>
%"class.base::RefCountedThreadSafe.131" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.132 }
%class.scoped_refptr.132 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.133", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.133" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.134" }
%"struct.std::__1::atomic.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.42" }
%"class.blink::HeapHashSet.260" = type { %"class.WTF::HashSet.263" }
%"class.WTF::HashSet.263" = type { %"class.WTF::HashTable.264" }
%"class.WTF::HashTable.264" = type <{ %"class.blink::Member.266"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.266" = type opaque
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.302" = type { %"class.WTF::HashMap.305" }
%"class.WTF::HashMap.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.321" = type { %"class.WTF::HashMap.324" }
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.327" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.328" }
%"class.blink::HeapHashSet.328" = type { %"class.WTF::HashSet.331" }
%"class.WTF::HashSet.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"class.blink::WeakMember.334"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.334" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.41", %"class.blink::HeapHashSet.344", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.351", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.344" = type { %"class.WTF::HashSet.347" }
%"class.WTF::HashSet.347" = type { %"class.WTF::HashTable.348" }
%"class.WTF::HashTable.348" = type <{ %"class.blink::Member.350"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.350" = type opaque
%"class.blink::HeapTaskRunnerTimer.351" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.352", { i64, i64 } }
%"class.blink::WeakMember.352" = type { %"class.blink::MemberBase.338" }
%"class.blink::WeakMember.339" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.54", i32, %"class.blink::HeapVector" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.68" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::HeapHashMap.70"* }
%"class.blink::HeapHashMap.70" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.73" = type { %"class.WTF::Vector.76" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::Member.79"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.27", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::InputType"* }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.absl::optional" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.353" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::TraceWrapperV8Reference.353" = type { %"class.v8::TracedReference.354" }
%"class.v8::TracedReference.354" = type { %"class.v8::BasicTracedReference.355" }
%"class.v8::BasicTracedReference.355" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::DateComponents" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::DateTimeFieldsState" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.blink::DateTimeEditElement::LayoutParameters" = type { %"class.WTF::String", %"class.WTF::String", %"class.blink::Locale"*, %"class.blink::StepRange", %"class.blink::DateComponents", %"class.blink::DateComponents", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.550" }
%"class.WTF::Vector.550" = type { %"class.WTF::VectorBuffer.551" }
%"class.WTF::VectorBuffer.551" = type { %"class.WTF::VectorBufferBase.552", [64 x i8] }
%"class.WTF::VectorBufferBase.552" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.358", i32, [4 x i8], %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.494", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.505", %"class.std::__1::unique_ptr.511", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.523", %"class.std::__1::unique_ptr.529", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.536", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.474", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.394" = type { %"struct.std::__1::__atomic_base.395" }
%"struct.std::__1::__atomic_base.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i64 }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::Worklist.405"* }
%"class.blink::Worklist.405" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::Worklist.412"* }
%"class.blink::Worklist.412" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::Worklist.419"* }
%"class.blink::Worklist.419" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::Worklist.426"* }
%"class.blink::Worklist.426" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::Worklist.433"* }
%"class.blink::Worklist.433" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::Worklist.440"* }
%"class.blink::Worklist.440" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::Worklist.447"* }
%"class.blink::Worklist.447" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.454", %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.468", [4 x i8] }>
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456", %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { i64 }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { float }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.477", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.486" }
%"class.WTF::Vector.486" = type { %"class.WTF::VectorBuffer.487" }
%"class.WTF::VectorBuffer.487" = type { %"class.WTF::VectorBufferBase.488" }
%"class.WTF::VectorBufferBase.488" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { %"struct.std::__1::pair.504"*, i32, i32 }
%"struct.std::__1::pair.504" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.517" }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.405"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.412"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.419"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.426"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.433"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.540" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.536" = type { %"struct.std::__1::__atomic_base.537" }
%"struct.std::__1::__atomic_base.537" = type { %"struct.std::__1::__cxx_atomic_impl.538" }
%"struct.std::__1::__cxx_atomic_impl.538" = type { %"struct.std::__1::__cxx_atomic_base_impl.539" }
%"struct.std::__1::__cxx_atomic_base_impl.539" = type { i8 }
%"class.blink::FormData" = type opaque
%"class.blink::FileList" = type opaque
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::DragData" = type opaque
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }

$_ZN5blink22DateTimeLocalInputTypeD0Ev = comdat any

@_ZN5blink16input_type_names14kDatetimeLocalE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 16
@_ZGVZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description = internal global i64 0, align 8
@.str = private unnamed_addr constant [139 x i8] c"The specified value %s does not conform to the required format.  The format is \22yyyy-MM-ddThh:mm\22 followed by optional \22:ss\22 or \22:ss.SSS\22.\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"%04u-%02u-%02uT%02u:%02u:%02u.%03u\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"%04u-%02u-%02uT%02u:%02u:%02u\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"%04u-%02u-%02uT%02u:%02u\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"yyyy-MM-dd'T'HH:mm:ss\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"yyyy-MM-dd'T'HH:mm\00", align 1
@_ZN5blink10html_names8kMinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kMaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink22DateTimeLocalInputTypeE = hidden unnamed_addr constant { [97 x i8*] } { [97 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::DateTimeLocalInputType"*)* @_ZN5blink22DateTimeLocalInputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Visitor"*)* @_ZNK5blink9InputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::InputTypeView"* (%"class.blink::BaseTemporalInputType"*)* @_ZN5blink21BaseTemporalInputType10CreateViewEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::DateTimeLocalInputType"*)* @_ZNK5blink22DateTimeLocalInputType15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsInteractiveContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12IsTextButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsTextFieldEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsFormDataAppendableEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FormData"*)* @_ZNK5blink9InputType16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType21ResultForDialogSubmitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24ValueInFilenameValueModeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12DefaultLabelEv to i8*), i8* bitcast (i32 (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType12GetValueModeEv to i8*), i8* bitcast (double (%"class.blink::DateTimeLocalInputType"*)* @_ZNK5blink22DateTimeLocalInputType11ValueAsDateEv to i8*), i8* bitcast (void (%"class.blink::DateTimeLocalInputType"*, %"class.absl::optional"*, %"class.blink::ExceptionState"*)* @_ZNK5blink22DateTimeLocalInputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE to i8*), i8* bitcast (double (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType13ValueAsDoubleEv to i8*), i8* bitcast (void (%"class.blink::BaseTemporalInputType"*, double, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink21BaseTemporalInputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZNK5blink9InputType14ReadingCheckedEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, i1)* @_ZN5blink9InputType21WillUpdateCheckednessEb to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType18SupportsValidationEv to i8*), i8* bitcast (i1 (%"class.blink::BaseTemporalInputType"*, %"class.WTF::String"*)* @_ZNK5blink21BaseTemporalInputType15TypeMismatchForERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsRequiredEv to i8*), i8* bitcast (i1 (%"class.blink::BaseTemporalInputType"*, %"class.WTF::String"*)* @_ZNK5blink21BaseTemporalInputType12ValueMissingERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType21DefaultValueForStepUpEv to i8*), i8* bitcast (void (%"class.blink::StepRange"*, %"class.blink::DateTimeLocalInputType"*, i32)* @_ZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType12BadInputTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink21BaseTemporalInputType17ValueNotEqualTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink21BaseTemporalInputType17RangeOverflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink21BaseTemporalInputType18RangeUnderflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink21BaseTemporalInputType16RangeInvalidTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16TypeMismatchTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16ValueMissingTextEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType17CanSetStringValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::DateTimeLocalInputType"*, %"class.WTF::String"*)* @_ZNK5blink22DateTimeLocalInputType13LocalizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType12VisibleValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*, %"class.WTF::String"*)* @_ZNK5blink21BaseTemporalInputType13SanitizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::DateTimeLocalInputType"*, %"class.WTF::String"*)* @_ZNK5blink22DateTimeLocalInputType20WarnIfValueIsInvalidERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20LayoutObjectIsNeededEv to i8*), i8* bitcast (void (%"class.blink::DateTimeLocalInputType"*)* @_ZN5blink22DateTimeLocalInputType10CountUsageEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27ShouldRespectAlignAttributeEv to i8*), i8* bitcast (%"class.blink::FileList"* (%"class.blink::InputType"*)* @_ZN5blink9InputType5FilesEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType8SetFilesEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::Vector.545"*)* @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)* @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZN5blink9InputType19DroppedFileSystemIdEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20CanSetSuggestedValueEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::String"*, i1, i32, i32)* @_ZN5blink9InputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (i1 (%"class.blink::BaseTemporalInputType"*)* @_ZN5blink21BaseTemporalInputType26ShouldRespectListAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType14IsEnumeratableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType11IsCheckableEv to i8*), i8* bitcast (i1 (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType11IsSteppableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MaxLengthEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MinLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19SupportsPlaceholderEv to i8*), i8* bitcast (i1 (%"class.blink::BaseTemporalInputType"*)* @_ZNK5blink21BaseTemporalInputType16SupportsReadOnlyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)* @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType24OnAttachWithLayoutObjectEv to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::BaseTemporalInputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)* @_ZNK5blink21BaseTemporalInputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"*)* @_ZNK5blink21BaseTemporalInputType9SerializeERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType26SupportsInputModeAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20SupportsSelectionAPIEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType6HeightEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType5WidthEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType19DispatchSearchEventEv to i8*), i8* bitcast (%"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)* @_ZN5blink9InputType21GetColorChooserClientEv to i8*), i8* bitcast (i1 (%"class.blink::DateTimeLocalInputType"*, double, %"class.blink::DateComponents"*)* @_ZNK5blink22DateTimeLocalInputType30SetMillisecondToDateComponentsEdPNS_14DateComponentsE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::DateTimeLocalInputType"*, %"class.blink::DateTimeFieldsState"*)* @_ZNK5blink22DateTimeLocalInputType25FormatDateTimeFieldsStateERKNS_19DateTimeFieldsStateE to i8*), i8* bitcast (void (%"class.blink::DateTimeLocalInputType"*, %"struct.blink::DateTimeEditElement::LayoutParameters"*, %"class.blink::DateComponents"*)* @_ZNK5blink22DateTimeLocalInputType21SetupLayoutParametersERNS_19DateTimeEditElement16LayoutParametersERKNS_14DateComponentsE to i8*), i8* bitcast (i1 (%"class.blink::DateTimeLocalInputType"*, i1, i1, i1, i1, i1, i1, i1, i1)* @_ZNK5blink22DateTimeLocalInputType13IsValidFormatEbbbbbbbb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::DateTimeLocalInputType"*)* @_ZNK5blink22DateTimeLocalInputType26AriaRoleForPickerIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::DateTimeLocalInputType"*, %"class.WTF::String"*, %"class.blink::DateComponents"*)* @_ZNK5blink22DateTimeLocalInputType29ParseToDateComponentsInternalERKN3WTF6StringEPNS_14DateComponentsE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::BaseTemporalInputType"*, %"class.absl::optional"*)* @_ZNK5blink21BaseTemporalInputType17SerializeWithDateERKN4absl8optionalIN4base4TimeEEE to i8*)] }, align 8
@_ZN5blink19DateTimeFieldsState11kEmptyValueE = external local_unnamed_addr constant i32, align 4
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22DateTimeLocalInputType10CountUsageEv(%"class.blink::DateTimeLocalInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"* %2, i32 30) #9
  ret void
}

declare void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink22DateTimeLocalInputType15FormControlTypeEv(%"class.blink::DateTimeLocalInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names14kDatetimeLocalE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden double @_ZNK5blink22DateTimeLocalInputType11ValueAsDateEv(%"class.blink::DateTimeLocalInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  ret double 0x7FF8000000000000
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22DateTimeLocalInputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::DateTimeLocalInputType"*, %"class.absl::optional"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"* %4, %"class.absl::optional"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  ret void
}

declare void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.absl::optional"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* noalias sret, %"class.blink::DateTimeLocalInputType"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.blink::Decimal", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %3
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  store <4 x i32> <i32 60, i32 0, i32 1000, i32 2>, <4 x i32>* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to <4 x i32>*), align 16
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description) #9
  br label %13

13:                                               ; preds = %9, %12, %3
  %14 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %1, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  call void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"* nonnull %4, i32 0) #9
  %16 = bitcast %"class.blink::Decimal"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  call void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* nonnull sret %5, double 0xC2CC4189166C0000) #9
  %17 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  call void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* nonnull sret %6, double 8.640000e+15) #9
  call void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionE(%"class.blink::StepRange"* sret %0, %"class.blink::InputType"* %14, i32 %2, %"class.blink::Decimal"* nonnull dereferenceable(24) %4, %"class.blink::Decimal"* nonnull dereferenceable(24) %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6, %"struct.blink::StepRange::StepDescription"* dereferenceable(16) bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink22DateTimeLocalInputType15CreateStepRangeENS_15AnyStepHandlingEE18s_step_description to %"struct.blink::StepRange::StepDescription"*)) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingERKNS_7DecimalES4_S4_RKNS_9StepRange15StepDescriptionE(%"class.blink::StepRange"* sret, %"class.blink::InputType"*, i32, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24), %"struct.blink::StepRange::StepDescription"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink7DecimalC1Ei(%"class.blink::Decimal"*, i32) unnamed_addr #1

declare void @_ZN5blink7Decimal10FromDoubleEd(%"class.blink::Decimal"* sret, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22DateTimeLocalInputType29ParseToDateComponentsInternalERKN3WTF6StringEPNS_14DateComponentsE(%"class.blink::DateTimeLocalInputType"* nocapture readnone, %"class.WTF::String"* dereferenceable(8), %"class.blink::DateComponents"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  store i32 -1431655766, i32* %4, align 4
  %6 = call zeroext i1 @_ZN5blink14DateComponents18ParseDateTimeLocalERKN3WTF6StringEjRj(%"class.blink::DateComponents"* %2, %"class.WTF::String"* dereferenceable(8) %1, i32 0, i32* nonnull dereferenceable(4) %4) #9
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %7 ]
  %17 = icmp eq i32 %8, %16
  br label %18

18:                                               ; preds = %15, %3
  %19 = phi i1 [ false, %3 ], [ %17, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  ret i1 %19
}

declare zeroext i1 @_ZN5blink14DateComponents18ParseDateTimeLocalERKN3WTF6StringEjRj(%"class.blink::DateComponents"*, %"class.WTF::String"* dereferenceable(8), i32, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22DateTimeLocalInputType30SetMillisecondToDateComponentsEdPNS_14DateComponentsE(%"class.blink::DateTimeLocalInputType"* nocapture readnone, double, %"class.blink::DateComponents"*) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN5blink14DateComponents41SetMillisecondsSinceEpochForDateTimeLocalEd(%"class.blink::DateComponents"* %2, double %1) #9
  ret i1 %4
}

declare zeroext i1 @_ZN5blink14DateComponents41SetMillisecondsSinceEpochForDateTimeLocalEd(%"class.blink::DateComponents"*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink22DateTimeLocalInputType13LocalizeValueERKN3WTF6StringE(%"class.blink::DateTimeLocalInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DateComponents", align 4
  %4 = alloca %"class.WTF::StringImpl"*, align 8
  %5 = bitcast %"class.blink::DateComponents"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 36, i1 false) #9
  %6 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0
  %7 = call zeroext i1 @_ZNK5blink21BaseTemporalInputType21ParseToDateComponentsERKN3WTF6StringEPNS_14DateComponentsE(%"class.blink::BaseTemporalInputType"* %6, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::DateComponents"* nonnull %3) #9
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %82, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %82

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #9
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  call void @llvm.trap() #9
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %82

29:                                               ; preds = %2
  %30 = call zeroext i1 @_ZNK5blink21BaseTemporalInputType21ShouldHaveSecondFieldERKNS_14DateComponentsE(%"class.blink::BaseTemporalInputType"* %6, %"class.blink::DateComponents"* nonnull dereferenceable(36) %3) #9
  %31 = select i1 %30, i32 2, i32 1
  %32 = bitcast %"class.WTF::StringImpl"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %35) #9
  %37 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale14FormatDateTimeERKNS_14DateComponentsENS0_10FormatTypeE(%"class.blink::Locale"* %36, %"class.blink::DateComponents"* nonnull dereferenceable(36) %3, i32 %31) #9
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %4, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  %43 = bitcast %"class.WTF::StringImpl"** %4 to %"class.WTF::String"*
  br i1 %42, label %44, label %45

44:                                               ; preds = %29, %39
  br label %45

45:                                               ; preds = %39, %44
  %46 = phi %"class.WTF::String"* [ %1, %44 ], [ %43, %39 ]
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #9
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  call void @llvm.trap() #9
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %45, %50, %65
  br i1 %38, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %81

81:                                               ; preds = %67, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  br label %82

82:                                               ; preds = %27, %12, %8, %81
  %83 = phi %"class.WTF::StringImpl"* [ %48, %81 ], [ null, %8 ], [ %10, %12 ], [ %10, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %5) #9
  ret %"class.WTF::StringImpl"* %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType21ParseToDateComponentsERKN3WTF6StringEPNS_14DateComponentsE(%"class.blink::BaseTemporalInputType"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::DateComponents"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType21ShouldHaveSecondFieldERKNS_14DateComponentsE(%"class.blink::BaseTemporalInputType"*, %"class.blink::DateComponents"* dereferenceable(36)) local_unnamed_addr #1

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale14FormatDateTimeERKNS_14DateComponentsENS0_10FormatTypeE(%"class.blink::Locale"*, %"class.blink::DateComponents"* dereferenceable(36), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22DateTimeLocalInputType20WarnIfValueIsInvalidERKN3WTF6StringE(%"class.blink::DateTimeLocalInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %4, align 8
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13SanitizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"* %5, %"class.WTF::String"* dereferenceable(8) %1) #9
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %6) #9
  %10 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #9
  br label %24

24:                                               ; preds = %2, %20, %23
  br i1 %9, label %26, label %25

25:                                               ; preds = %24
  tail call void @_ZNK5blink9InputType19AddWarningToConsoleEPKcRKN3WTF6StringE(%"class.blink::InputType"* %3, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str, i64 0, i64 0), %"class.WTF::String"* dereferenceable(8) %1) #9
  br label %26

26:                                               ; preds = %24, %25
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement13SanitizeValueERKN3WTF6StringE(%"class.blink::HTMLInputElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink9InputType19AddWarningToConsoleEPKcRKN3WTF6StringE(%"class.blink::InputType"*, i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink22DateTimeLocalInputType25FormatDateTimeFieldsStateERKNS_19DateTimeFieldsStateE(%"class.blink::DateTimeLocalInputType"* nocapture readnone, %"class.blink::DateTimeFieldsState"* dereferenceable(36)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = load i32, i32* @_ZN5blink19DateTimeFieldsState11kEmptyValueE, align 4
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %5
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %5
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %5
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, %5
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 8
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %49

27:                                               ; preds = %23, %19, %15, %11, %7, %2
  %28 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %77, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %77

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %77

49:                                               ; preds = %23
  %50 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 6
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %5
  %53 = icmp eq i32 %51, 0
  %54 = or i1 %52, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %49
  %56 = tail call i32 @_ZNK5blink19DateTimeFieldsState6Hour23Ev(%"class.blink::DateTimeFieldsState"* %1) #9
  %57 = load i32, i32* %20, align 4
  %58 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %5
  %61 = select i1 %60, i32 0, i32 %59
  %62 = load i32, i32* %50, align 4
  %63 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 %13, i32 %9, i32 %4, i32 %56, i32 %57, i32 %61, i32 %62) #9
  br label %77

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.blink::DateTimeFieldsState", %"class.blink::DateTimeFieldsState"* %1, i64 0, i32 5
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %5
  %68 = icmp eq i32 %66, 0
  %69 = or i1 %67, %68
  %70 = tail call i32 @_ZNK5blink19DateTimeFieldsState6Hour23Ev(%"class.blink::DateTimeFieldsState"* %1) #9
  %71 = load i32, i32* %20, align 4
  br i1 %69, label %75, label %72

72:                                               ; preds = %64
  %73 = load i32, i32* %65, align 4
  %74 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i32 %13, i32 %9, i32 %4, i32 %70, i32 %71, i32 %73) #9
  br label %77

75:                                               ; preds = %64
  %76 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i32 %13, i32 %9, i32 %4, i32 %70, i32 %71) #9
  br label %77

77:                                               ; preds = %47, %32, %27, %75, %72, %55
  %78 = phi %"class.WTF::StringImpl"* [ %76, %75 ], [ %74, %72 ], [ %63, %55 ], [ null, %27 ], [ %30, %32 ], [ %30, %47 ]
  ret %"class.WTF::StringImpl"* %78
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

declare i32 @_ZNK5blink19DateTimeFieldsState6Hour23Ev(%"class.blink::DateTimeFieldsState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22DateTimeLocalInputType21SetupLayoutParametersERNS_19DateTimeEditElement16LayoutParametersERKNS_14DateComponentsE(%"class.blink::DateTimeLocalInputType"*, %"struct.blink::DateTimeEditElement::LayoutParameters"* dereferenceable(240), %"class.blink::DateComponents"* dereferenceable(36)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink21BaseTemporalInputType21ShouldHaveSecondFieldERKNS_14DateComponentsE(%"class.blink::BaseTemporalInputType"* %6, %"class.blink::DateComponents"* dereferenceable(36) %2) #9
  %8 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 2
  %9 = load %"class.blink::Locale"*, %"class.blink::Locale"** %8, align 8
  %10 = bitcast %"class.blink::Locale"* %9 to %"class.WTF::StringImpl"* (%"class.blink::Locale"*)***
  %11 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)**, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*** %10, align 8
  br i1 %7, label %12, label %73

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %11, i64 5
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %13, align 8
  %15 = tail call %"class.WTF::StringImpl"* %14(%"class.blink::Locale"* %9) #9
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %17 = bitcast %"struct.blink::DateTimeEditElement::LayoutParameters"* %1 to i64*
  %18 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %16, i64* %17, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #9
  br label %34

34:                                               ; preds = %33, %30, %12
  %35 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21) #9
  %36 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %38 = bitcast %"class.WTF::String"* %4 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %40 = bitcast %"class.WTF::String"* %36 to i64*
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %57

57:                                               ; preds = %34, %53, %56
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %134, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %134

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %134

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %11, i64 6
  %75 = load %"class.WTF::StringImpl"* (%"class.blink::Locale"*)*, %"class.WTF::StringImpl"* (%"class.blink::Locale"*)** %74, align 8
  %76 = tail call %"class.WTF::StringImpl"* %75(%"class.blink::Locale"* %9) #9
  %77 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %78 = bitcast %"struct.blink::DateTimeEditElement::LayoutParameters"* %1 to i64*
  %79 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  store i64 %77, i64* %78, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #9
  br label %95

95:                                               ; preds = %94, %91, %73
  %96 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i64 18) #9
  %97 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 1
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %99 = bitcast %"class.WTF::String"* %5 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %101 = bitcast %"class.WTF::String"* %97 to i64*
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %95, %114, %117
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #9
  br label %134

134:                                              ; preds = %133, %130, %118, %72, %69, %57
  %135 = phi i8* [ %35, %57 ], [ %35, %69 ], [ %35, %72 ], [ %96, %118 ], [ %96, %130 ], [ %96, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #9
  %136 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %138 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %137, align 8
  %139 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMinAttrE, align 8
  %140 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %141 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %140, align 8
  %142 = icmp eq %"class.blink::ElementData"* %141, null
  br i1 %142, label %193, label %143

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %141, i64 0, i32 0, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %155, label %148

148:                                              ; preds = %143
  %149 = bitcast %"class.blink::ElementData"* %141 to %"class.blink::UniqueElementData"*
  %150 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %141, i64 1, i32 1
  %151 = bitcast %"class.blink::Member.18"* %150 to %"class.blink::Attribute"**
  %152 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %149, i64 0, i32 2, i32 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  br label %160

155:                                              ; preds = %143
  %156 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %141, i64 1
  %157 = bitcast %"class.blink::ElementData"* %156 to %"class.blink::Attribute"*
  %158 = lshr i32 %145, 1
  %159 = and i32 %158, 268435455
  br label %160

160:                                              ; preds = %155, %148
  %161 = phi %"class.blink::Attribute"* [ %157, %155 ], [ %152, %148 ]
  %162 = phi i32 [ %159, %155 ], [ %154, %148 ]
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %161, i64 %163
  %165 = icmp eq i32 %162, 0
  br i1 %165, label %193, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %139, i64 0, i32 0, i32 0
  %168 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %168, i64 0, i32 3, i32 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %168, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %171

171:                                              ; preds = %186, %166
  %172 = phi %"class.blink::Attribute"* [ %161, %166 ], [ %187, %186 ]
  %173 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %172, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %173, align 8
  %175 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %174, %168
  br i1 %175, label %189, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 3, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %178, %179
  br i1 %180, label %181, label %186

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 4, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %183, %184
  br i1 %185, label %189, label %186

186:                                              ; preds = %181, %176
  %187 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %172, i64 1
  %188 = icmp eq %"class.blink::Attribute"* %187, %164
  br i1 %188, label %193, label %171

189:                                              ; preds = %181, %171
  %190 = icmp eq %"class.blink::Attribute"* %172, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %172, i64 0, i32 1
  br label %195

193:                                              ; preds = %186, %189, %160, %134
  %194 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %195

195:                                              ; preds = %191, %193
  %196 = phi %"class.WTF::AtomicString"* [ %194, %193 ], [ %192, %191 ]
  %197 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %196, i64 0, i32 0
  %198 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 4
  %199 = call zeroext i1 @_ZNK5blink21BaseTemporalInputType21ParseToDateComponentsERKN3WTF6StringEPNS_14DateComponentsE(%"class.blink::BaseTemporalInputType"* %6, %"class.WTF::String"* dereferenceable(8) %197, %"class.blink::DateComponents"* %198) #9
  br i1 %199, label %202, label %200

200:                                              ; preds = %195
  %201 = bitcast %"class.blink::DateComponents"* %198 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 36, i1 false)
  br label %202

202:                                              ; preds = %200, %195
  %203 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %137, align 8
  %204 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kMaxAttrE, align 8
  %205 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %206 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %205, align 8
  %207 = icmp eq %"class.blink::ElementData"* %206, null
  br i1 %207, label %258, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %206, i64 0, i32 0, i32 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %220, label %213

213:                                              ; preds = %208
  %214 = bitcast %"class.blink::ElementData"* %206 to %"class.blink::UniqueElementData"*
  %215 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %206, i64 1, i32 1
  %216 = bitcast %"class.blink::Member.18"* %215 to %"class.blink::Attribute"**
  %217 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %216, align 8
  %218 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %214, i64 0, i32 2, i32 0, i32 0, i32 2
  %219 = load i32, i32* %218, align 4
  br label %225

220:                                              ; preds = %208
  %221 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %206, i64 1
  %222 = bitcast %"class.blink::ElementData"* %221 to %"class.blink::Attribute"*
  %223 = lshr i32 %210, 1
  %224 = and i32 %223, 268435455
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi %"class.blink::Attribute"* [ %222, %220 ], [ %217, %213 ]
  %227 = phi i32 [ %224, %220 ], [ %219, %213 ]
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %226, i64 %228
  %230 = icmp eq i32 %227, 0
  br i1 %230, label %258, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %204, i64 0, i32 0, i32 0
  %233 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %233, i64 0, i32 3, i32 0, i32 0, i32 0
  %235 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %233, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %236

236:                                              ; preds = %251, %231
  %237 = phi %"class.blink::Attribute"* [ %226, %231 ], [ %252, %251 ]
  %238 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %238, align 8
  %240 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %239, %233
  br i1 %240, label %254, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 3, i32 0, i32 0, i32 0
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %243, %244
  br i1 %245, label %246, label %251

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 4, i32 0, i32 0, i32 0
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %248, %249
  br i1 %250, label %254, label %251

251:                                              ; preds = %246, %241
  %252 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %237, i64 1
  %253 = icmp eq %"class.blink::Attribute"* %252, %229
  br i1 %253, label %258, label %236

254:                                              ; preds = %246, %236
  %255 = icmp eq %"class.blink::Attribute"* %237, null
  br i1 %255, label %258, label %256

256:                                              ; preds = %254
  %257 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %237, i64 0, i32 1
  br label %260

258:                                              ; preds = %251, %254, %225, %202
  %259 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %260

260:                                              ; preds = %256, %258
  %261 = phi %"class.WTF::AtomicString"* [ %259, %258 ], [ %257, %256 ]
  %262 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %261, i64 0, i32 0
  %263 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 5
  %264 = call zeroext i1 @_ZNK5blink21BaseTemporalInputType21ParseToDateComponentsERKN3WTF6StringEPNS_14DateComponentsE(%"class.blink::BaseTemporalInputType"* %6, %"class.WTF::String"* dereferenceable(8) %262, %"class.blink::DateComponents"* %263) #9
  br i1 %264, label %267, label %265

265:                                              ; preds = %260
  %266 = bitcast %"class.blink::DateComponents"* %263 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %266, i8 0, i64 36, i1 false)
  br label %267

267:                                              ; preds = %265, %260
  %268 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %136) #9
  %269 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %268, i32 24784) #9
  %270 = ptrtoint %"class.WTF::StringImpl"* %269 to i64
  %271 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 6
  %272 = bitcast %"class.WTF::String"* %271 to i64*
  %273 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %271, i64 0, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  store i64 %270, i64* %272, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %267
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #9
  br label %289

289:                                              ; preds = %288, %285, %267
  %290 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %136) #9
  %291 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %290, i32 24785) #9
  %292 = ptrtoint %"class.WTF::StringImpl"* %291 to i64
  %293 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 7
  %294 = bitcast %"class.WTF::String"* %293 to i64*
  %295 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %293, i64 0, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  store i64 %292, i64* %294, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %311, label %298

298:                                              ; preds = %289
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %307

305:                                              ; preds = %298
  %306 = add i32 %304, -1
  store i32 %306, i32* %303, align 4
  br label %307

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %306, %305 ], [ %304, %298 ]
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %307
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #9
  br label %311

311:                                              ; preds = %310, %307, %289
  %312 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %136) #9
  %313 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %312, i32 24786) #9
  %314 = ptrtoint %"class.WTF::StringImpl"* %313 to i64
  %315 = getelementptr inbounds %"struct.blink::DateTimeEditElement::LayoutParameters", %"struct.blink::DateTimeEditElement::LayoutParameters"* %1, i64 0, i32 8
  %316 = bitcast %"class.WTF::String"* %315 to i64*
  %317 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %315, i64 0, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  store i64 %314, i64* %316, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %311
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #9
  br label %333

333:                                              ; preds = %332, %329, %311
  ret void
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink22DateTimeLocalInputType13IsValidFormatEbbbbbbbb(%"class.blink::DateTimeLocalInputType"* nocapture readnone, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #2 align 2 {
  %10 = and i1 %1, %2
  %11 = and i1 %10, %4
  %12 = and i1 %11, %5
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = and i1 %6, %7
  ret i1 %14

15:                                               ; preds = %9
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink22DateTimeLocalInputType26AriaRoleForPickerIndicatorEv(%"class.blink::DateTimeLocalInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %2) #9
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %3, i32 24792) #9
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind
declare void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22DateTimeLocalInputTypeD0Ev(%"class.blink::DateTimeLocalInputType"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DateTimeLocalInputType", %"class.blink::DateTimeLocalInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %2) #9
  ret void
}

declare void @_ZNK5blink9InputType5TraceEPNS_7VisitorE(%"class.blink::InputType"*, %"class.blink::Visitor"*) unnamed_addr #1

declare %"class.blink::InputTypeView"* @_ZN5blink21BaseTemporalInputType10CreateViewEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsInteractiveContentEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12IsTextButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsTextFieldEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsFormDataAppendableEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType16AppendToFormDataERNS_8FormDataE(%"class.blink::InputType"*, %"class.blink::FormData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType21ResultForDialogSubmitEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType24ValueInFilenameValueModeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12DefaultLabelEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink21BaseTemporalInputType12GetValueModeEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare double @_ZNK5blink21BaseTemporalInputType13ValueAsDoubleEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare void @_ZNK5blink21BaseTemporalInputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::BaseTemporalInputType"*, double, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink9InputType14ReadingCheckedEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType21WillUpdateCheckednessEb(%"class.blink::InputType"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType18SupportsValidationEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType15TypeMismatchForERKN3WTF6StringE(%"class.blink::BaseTemporalInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType12TypeMismatchEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsRequiredEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType12ValueMissingERKN3WTF6StringE(%"class.blink::BaseTemporalInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink21BaseTemporalInputType21DefaultValueForStepUpEv(%"class.blink::Decimal"* sret, %"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType12BadInputTextEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType17ValueNotEqualTextERKNS_7DecimalE(%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType17RangeOverflowTextERKNS_7DecimalE(%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType18RangeUnderflowTextERKNS_7DecimalE(%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType16RangeInvalidTextERKNS_7DecimalES3_(%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16TypeMismatchTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16ValueMissingTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType17CanSetStringValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType12VisibleValueEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType13SanitizeValueERKN3WTF6StringE(%"class.blink::BaseTemporalInputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType25MayTriggerVirtualKeyboardEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType25MatchesDefaultPseudoClassEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20LayoutObjectIsNeededEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27ShouldRespectAlignAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::FileList"* @_ZN5blink9InputType5FilesEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType8SetFilesEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InputType"*, %"class.WTF::Vector.545"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::InputType"*, %"class.blink::DragData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9InputType19DroppedFileSystemIdEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20CanSetSuggestedValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink9InputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink21BaseTemporalInputType26ShouldRespectListAttributeEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType14IsEnumeratableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11IsCheckableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType11IsSteppableEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MaxLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MinLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19SupportsPlaceholderEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21BaseTemporalInputType16SupportsReadOnlyEv(%"class.blink::BaseTemporalInputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::InputType"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink9InputType24SubResourceAttributeNameEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE(%"class.blink::InputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN5blink9InputType24OnAttachWithLayoutObjectEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink21BaseTemporalInputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::BaseTemporalInputType"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType9SerializeERKNS_7DecimalE(%"class.blink::BaseTemporalInputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25ShouldAppearIndeterminateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType26SupportsInputModeAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20SupportsSelectionAPIEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType6HeightEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType5WidthEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType19DispatchSearchEventEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::ColorChooserClient"* @_ZN5blink9InputType21GetColorChooserClientEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21BaseTemporalInputType17SerializeWithDateERKN4absl8optionalIN4base4TimeEEE(%"class.blink::BaseTemporalInputType"*, %"class.absl::optional"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
