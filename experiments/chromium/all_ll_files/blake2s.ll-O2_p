; ModuleID = '../../third_party/unrar/src/blake2s.cpp'
source_filename = "../../third_party/unrar/src/blake2s.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.Blake2ThreadData = type { %struct.blake2s_state*, i8*, i64 }

@_ZL13blake2s_sigma = internal unnamed_addr constant [10 x [16 x i8]] [[16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", [16 x i8] c"\0E\0A\04\08\09\0F\0D\06\01\0C\00\02\0B\07\05\03", [16 x i8] c"\0B\08\0C\00\05\02\0F\0D\0A\0E\03\06\07\01\09\04", [16 x i8] c"\07\09\03\01\0D\0C\0B\0E\02\06\05\0A\04\00\0F\08", [16 x i8] c"\09\00\05\07\02\04\0A\0F\0E\01\0B\0C\06\08\03\0D", [16 x i8] c"\02\0C\06\0A\00\0B\08\03\04\0D\07\05\0F\0E\01\09", [16 x i8] c"\0C\05\01\0F\0E\0D\04\0A\00\07\06\03\09\02\08\0B", [16 x i8] c"\0D\0B\07\0E\0C\01\03\09\05\00\0F\04\08\06\02\0A", [16 x i8] c"\06\0F\0E\09\0B\03\00\08\0C\02\0D\07\01\04\0A\05", [16 x i8] c"\0A\02\08\04\07\06\01\05\0F\0B\09\0E\03\0C\0D\00"], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z13blake2sp_initP14blake2sp_state(%struct.blake2sp_state* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 2, i64 0
  %3 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 240, i1 false) #3
  %4 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1, i32 5
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 520, i1 false)
  %7 = load i32*, i32** %6, align 8
  store i32 1779033703, i32* %7, align 4
  %8 = load i32*, i32** %6, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 1
  store i32 -1150833019, i32* %9, align 4
  %10 = load i32*, i32** %6, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 2
  store i32 1013904242, i32* %11, align 4
  %12 = load i32*, i32** %6, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 3
  store i32 -1521486534, i32* %13, align 4
  %14 = load i32*, i32** %6, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 4
  store i32 1359893119, i32* %15, align 4
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 5
  store i32 -1694144372, i32* %17, align 4
  %18 = load i32*, i32** %6, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 6
  store i32 528734635, i32* %19, align 4
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 7
  store i32 1541459225, i32* %21, align 4
  %22 = load i32*, i32** %6, align 8
  %23 = load i32, i32* %22, align 4
  %24 = xor i32 %23, 34078752
  store i32 %24, i32* %22, align 4
  %25 = load i32*, i32** %6, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 3
  %27 = load i32, i32* %26, align 4
  %28 = xor i32 %27, 536936448
  store i32 %28, i32* %26, align 4
  br label %31

29:                                               ; preds = %31
  store i8 1, i8* %5, align 8
  %30 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 7, i32 6
  store i8 1, i8* %30, align 8
  ret void

31:                                               ; preds = %31, %1
  %32 = phi i64 [ 0, %1 ], [ %64, %31 ]
  %33 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %32, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 240, i1 false) #3
  %34 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %32, i32 5
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %32, i32 6
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %32, i32 2
  %37 = load i32*, i32** %36, align 8
  store i32 1779033703, i32* %37, align 4
  %38 = load i32*, i32** %36, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 1
  store i32 -1150833019, i32* %39, align 4
  %40 = load i32*, i32** %36, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 2
  store i32 1013904242, i32* %41, align 4
  %42 = load i32*, i32** %36, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 3
  store i32 -1521486534, i32* %43, align 4
  %44 = load i32*, i32** %36, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 4
  store i32 1359893119, i32* %45, align 4
  %46 = load i32*, i32** %36, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 5
  store i32 -1694144372, i32* %47, align 4
  %48 = load i32*, i32** %36, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 6
  store i32 528734635, i32* %49, align 4
  %50 = load i32*, i32** %36, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 7
  store i32 1541459225, i32* %51, align 4
  %52 = load i32*, i32** %36, align 8
  %53 = load i32, i32* %52, align 4
  %54 = xor i32 %53, 34078752
  store i32 %54, i32* %52, align 4
  %55 = load i32*, i32** %36, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = trunc i64 %32 to i32
  %59 = xor i32 %57, %58
  store i32 %59, i32* %56, align 4
  %60 = load i32*, i32** %36, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 3
  %62 = load i32, i32* %61, align 4
  %63 = xor i32 %62, 536870912
  store i32 %63, i32* %61, align 4
  %64 = add nuw nsw i64 %32, 1
  %65 = icmp eq i64 %64, 8
  br i1 %65, label %29, label %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16Blake2ThreadData6UpdateEv(%struct.Blake2ThreadData* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.Blake2ThreadData, %struct.Blake2ThreadData* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 511
  br i1 %4, label %5, label %53

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.Blake2ThreadData, %struct.Blake2ThreadData* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.Blake2ThreadData, %struct.Blake2ThreadData* %0, i64 0, i32 0
  br label %9

9:                                                ; preds = %5, %49
  %10 = phi i8* [ %7, %5 ], [ %50, %49 ]
  %11 = phi i64 [ %3, %5 ], [ %51, %49 ]
  %12 = load %struct.blake2s_state*, %struct.blake2s_state** %8, align 8
  %13 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %12, i64 0, i32 5
  %14 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %12, i64 0, i32 1
  %15 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %12, i64 0, i32 3
  %16 = load i64, i64* %13, align 8
  br label %17

17:                                               ; preds = %28, %9
  %18 = phi i64 [ %16, %9 ], [ %45, %28 ]
  %19 = phi i8* [ %10, %9 ], [ %47, %28 ]
  %20 = phi i64 [ 64, %9 ], [ %46, %28 ]
  %21 = sub i64 128, %18
  %22 = icmp ugt i64 %20, %21
  %23 = load i8*, i8** %14, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %18
  br i1 %22, label %28, label %25

25:                                               ; preds = %17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %19, i64 %20, i1 false) #3
  %26 = load i64, i64* %13, align 8
  %27 = add i64 %26, %20
  store i64 %27, i64* %13, align 8
  br label %49

28:                                               ; preds = %17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %19, i64 %21, i1 false) #3
  %29 = load i64, i64* %13, align 8
  %30 = add i64 %29, %21
  store i64 %30, i64* %13, align 8
  %31 = load i32*, i32** %15, align 8
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, 64
  store i32 %33, i32* %31, align 4
  %34 = load i32*, i32** %15, align 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %35, 64
  %37 = zext i1 %36 to i32
  %38 = getelementptr inbounds i32, i32* %34, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, %37
  store i32 %40, i32* %38, align 4
  %41 = load i8*, i8** %14, align 8
  tail call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %12, i8* %41) #3
  %42 = load i8*, i8** %14, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %43, i64 64, i1 false) #3
  %44 = load i64, i64* %13, align 8
  %45 = add i64 %44, -64
  store i64 %45, i64* %13, align 8
  %46 = sub i64 %20, %21
  %47 = getelementptr inbounds i8, i8* %19, i64 %21
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %49, label %17

49:                                               ; preds = %28, %25
  %50 = getelementptr inbounds i8, i8* %10, i64 512
  %51 = add i64 %11, -512
  %52 = icmp ugt i64 %51, 511
  br i1 %52, label %9, label %53

53:                                               ; preds = %49, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z12Blake2ThreadPv(i8* nocapture readonly) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 511
  br i1 %5, label %6, label %55

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %0 to %struct.blake2s_state**
  br label %11

11:                                               ; preds = %51, %6
  %12 = phi i8* [ %9, %6 ], [ %52, %51 ]
  %13 = phi i64 [ %4, %6 ], [ %53, %51 ]
  %14 = load %struct.blake2s_state*, %struct.blake2s_state** %10, align 8
  %15 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %14, i64 0, i32 5
  %16 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %14, i64 0, i32 1
  %17 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %14, i64 0, i32 3
  %18 = load i64, i64* %15, align 8
  br label %19

19:                                               ; preds = %30, %11
  %20 = phi i64 [ %18, %11 ], [ %47, %30 ]
  %21 = phi i8* [ %12, %11 ], [ %49, %30 ]
  %22 = phi i64 [ 64, %11 ], [ %48, %30 ]
  %23 = sub i64 128, %20
  %24 = icmp ugt i64 %22, %23
  %25 = load i8*, i8** %16, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %20
  br i1 %24, label %30, label %27

27:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %21, i64 %22, i1 false) #3
  %28 = load i64, i64* %15, align 8
  %29 = add i64 %28, %22
  store i64 %29, i64* %15, align 8
  br label %51

30:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %21, i64 %23, i1 false) #3
  %31 = load i64, i64* %15, align 8
  %32 = add i64 %31, %23
  store i64 %32, i64* %15, align 8
  %33 = load i32*, i32** %17, align 8
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, 64
  store i32 %35, i32* %33, align 4
  %36 = load i32*, i32** %17, align 8
  %37 = load i32, i32* %36, align 4
  %38 = icmp ult i32 %37, 64
  %39 = zext i1 %38 to i32
  %40 = getelementptr inbounds i32, i32* %36, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, %39
  store i32 %42, i32* %40, align 4
  %43 = load i8*, i8** %16, align 8
  tail call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %14, i8* %43) #3
  %44 = load i8*, i8** %16, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 64, i1 false) #3
  %46 = load i64, i64* %15, align 8
  %47 = add i64 %46, -64
  store i64 %47, i64* %15, align 8
  %48 = sub i64 %22, %23
  %49 = getelementptr inbounds i8, i8* %21, i64 %23
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %51, label %19

51:                                               ; preds = %30, %27
  %52 = getelementptr inbounds i8, i8* %12, i64 512
  %53 = add i64 %13, -512
  %54 = icmp ugt i64 %53, 511
  br i1 %54, label %11, label %55

55:                                               ; preds = %51, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z15blake2sp_updateP14blake2sp_statePKhm(%struct.blake2sp_state*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca [8 x %struct.Blake2ThreadData], align 16
  %5 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 512, %6
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %60, label %9

9:                                                ; preds = %3
  %10 = icmp ugt i64 %7, %2
  br i1 %10, label %60, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 2, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %1, i64 %7, i1 false)
  br label %16

13:                                               ; preds = %57
  %14 = getelementptr inbounds i8, i8* %1, i64 %7
  %15 = sub i64 %2, %7
  br label %60

16:                                               ; preds = %57, %11
  %17 = phi i64 [ 0, %11 ], [ %58, %57 ]
  %18 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %17
  %19 = shl i64 %17, 6
  %20 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 2, i64 %19
  %21 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %17, i32 5
  %22 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %17, i32 1
  %23 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %17, i32 3
  %24 = load i64, i64* %21, align 8
  br label %25

25:                                               ; preds = %36, %16
  %26 = phi i64 [ %24, %16 ], [ %53, %36 ]
  %27 = phi i8* [ %20, %16 ], [ %55, %36 ]
  %28 = phi i64 [ 64, %16 ], [ %54, %36 ]
  %29 = sub i64 128, %26
  %30 = icmp ugt i64 %28, %29
  %31 = load i8*, i8** %22, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %26
  br i1 %30, label %36, label %33

33:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %27, i64 %28, i1 false) #3
  %34 = load i64, i64* %21, align 8
  %35 = add i64 %34, %28
  store i64 %35, i64* %21, align 8
  br label %57

36:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %27, i64 %29, i1 false) #3
  %37 = load i64, i64* %21, align 8
  %38 = add i64 %37, %29
  store i64 %38, i64* %21, align 8
  %39 = load i32*, i32** %23, align 8
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 64
  store i32 %41, i32* %39, align 4
  %42 = load i32*, i32** %23, align 8
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %43, 64
  %45 = zext i1 %44 to i32
  %46 = getelementptr inbounds i32, i32* %42, i64 1
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  store i32 %48, i32* %46, align 4
  %49 = load i8*, i8** %22, align 8
  tail call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %18, i8* %49) #3
  %50 = load i8*, i8** %22, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %51, i64 64, i1 false) #3
  %52 = load i64, i64* %21, align 8
  %53 = add i64 %52, -64
  store i64 %53, i64* %21, align 8
  %54 = sub i64 %28, %29
  %55 = getelementptr inbounds i8, i8* %27, i64 %29
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %25

57:                                               ; preds = %36, %33
  %58 = add nuw nsw i64 %17, 1
  %59 = icmp eq i64 %58, 8
  br i1 %59, label %13, label %16

60:                                               ; preds = %9, %3, %13
  %61 = phi i8* [ %14, %13 ], [ %1, %9 ], [ %1, %3 ]
  %62 = phi i64 [ %15, %13 ], [ %2, %9 ], [ %2, %3 ]
  %63 = phi i64 [ 0, %13 ], [ %6, %9 ], [ 0, %3 ]
  %64 = bitcast [8 x %struct.Blake2ThreadData]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %64) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 -86, i64 192, i1 false)
  %65 = icmp ult i64 %62, 4096
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 5
  %68 = load i32, i32* %67, align 8
  br label %69

69:                                               ; preds = %60, %66
  %70 = phi i32 [ %68, %66 ], [ 1, %60 ]
  %71 = or i32 %70, 1
  %72 = icmp eq i32 %71, 7
  %73 = select i1 %72, i32 4, i32 %70
  %74 = icmp ne i32 %73, 0
  %75 = icmp ugt i32 %73, 1
  %76 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 4
  %77 = zext i32 %73 to i64
  %78 = icmp ugt i64 %62, 511
  br label %79

79:                                               ; preds = %69, %157
  %80 = phi i64 [ 0, %69 ], [ %87, %157 ]
  %81 = icmp ult i64 %80, 8
  %82 = and i1 %81, %74
  br i1 %82, label %90, label %86

83:                                               ; preds = %157
  %84 = and i64 %62, 511
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %163, label %159

86:                                               ; preds = %150, %79
  %87 = phi i64 [ %80, %79 ], [ %151, %150 ]
  %88 = load %class.ThreadPool*, %class.ThreadPool** %76, align 8
  %89 = icmp eq %class.ThreadPool* %88, null
  br i1 %89, label %157, label %156

90:                                               ; preds = %79, %150
  %91 = phi i64 [ %152, %150 ], [ 0, %79 ]
  %92 = phi i64 [ %151, %150 ], [ %80, %79 ]
  %93 = getelementptr inbounds [8 x %struct.Blake2ThreadData], [8 x %struct.Blake2ThreadData]* %4, i64 0, i64 %91
  %94 = getelementptr inbounds [8 x %struct.Blake2ThreadData], [8 x %struct.Blake2ThreadData]* %4, i64 0, i64 %91, i32 2
  store i64 %62, i64* %94, align 8
  %95 = shl i64 %92, 6
  %96 = getelementptr inbounds i8, i8* %61, i64 %95
  %97 = getelementptr inbounds [8 x %struct.Blake2ThreadData], [8 x %struct.Blake2ThreadData]* %4, i64 0, i64 %91, i32 1
  store i8* %96, i8** %97, align 8
  %98 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %92
  %99 = getelementptr inbounds %struct.Blake2ThreadData, %struct.Blake2ThreadData* %93, i64 0, i32 0
  store %struct.blake2s_state* %98, %struct.blake2s_state** %99, align 8
  br i1 %75, label %100, label %103

100:                                              ; preds = %90
  %101 = load %class.ThreadPool*, %class.ThreadPool** %76, align 8
  %102 = bitcast %struct.Blake2ThreadData* %93 to i8*
  call void @_ZN10ThreadPool7AddTaskEPFvPvES0_(%class.ThreadPool* %101, void (i8*)* nonnull @_Z12Blake2ThreadPv, i8* %102) #3
  br label %150

103:                                              ; preds = %90
  br i1 %78, label %104, label %150

104:                                              ; preds = %103, %147
  %105 = phi %struct.blake2s_state* [ %149, %147 ], [ %98, %103 ]
  %106 = phi i8* [ %148, %147 ], [ %96, %103 ]
  %107 = phi i64 [ %145, %147 ], [ %62, %103 ]
  %108 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %105, i64 0, i32 5
  %109 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %105, i64 0, i32 1
  %110 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %105, i64 0, i32 3
  %111 = load i64, i64* %108, align 8
  br label %112

112:                                              ; preds = %123, %104
  %113 = phi i64 [ %111, %104 ], [ %140, %123 ]
  %114 = phi i8* [ %106, %104 ], [ %142, %123 ]
  %115 = phi i64 [ 64, %104 ], [ %141, %123 ]
  %116 = sub i64 128, %113
  %117 = icmp ugt i64 %115, %116
  %118 = load i8*, i8** %109, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 %113
  br i1 %117, label %123, label %120

120:                                              ; preds = %112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %114, i64 %115, i1 false) #3
  %121 = load i64, i64* %108, align 8
  %122 = add i64 %121, %115
  store i64 %122, i64* %108, align 8
  br label %144

123:                                              ; preds = %112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %114, i64 %116, i1 false) #3
  %124 = load i64, i64* %108, align 8
  %125 = add i64 %124, %116
  store i64 %125, i64* %108, align 8
  %126 = load i32*, i32** %110, align 8
  %127 = load i32, i32* %126, align 4
  %128 = add i32 %127, 64
  store i32 %128, i32* %126, align 4
  %129 = load i32*, i32** %110, align 8
  %130 = load i32, i32* %129, align 4
  %131 = icmp ult i32 %130, 64
  %132 = zext i1 %131 to i32
  %133 = getelementptr inbounds i32, i32* %129, i64 1
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, %132
  store i32 %135, i32* %133, align 4
  %136 = load i8*, i8** %109, align 8
  call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %105, i8* %136) #3
  %137 = load i8*, i8** %109, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %137, i8* align 1 %138, i64 64, i1 false) #3
  %139 = load i64, i64* %108, align 8
  %140 = add i64 %139, -64
  store i64 %140, i64* %108, align 8
  %141 = sub i64 %115, %116
  %142 = getelementptr inbounds i8, i8* %114, i64 %116
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %144, label %112

144:                                              ; preds = %123, %120
  %145 = add i64 %107, -512
  %146 = icmp ugt i64 %145, 511
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = getelementptr inbounds i8, i8* %106, i64 512
  %149 = load %struct.blake2s_state*, %struct.blake2s_state** %99, align 8
  br label %104

150:                                              ; preds = %144, %103, %100
  %151 = add nuw nsw i64 %92, 1
  %152 = add nuw nsw i64 %91, 1
  %153 = icmp ult i64 %152, %77
  %154 = icmp ult i64 %151, 8
  %155 = and i1 %154, %153
  br i1 %155, label %90, label %86

156:                                              ; preds = %86
  call void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool* nonnull %88) #3
  br label %157

157:                                              ; preds = %86, %156
  %158 = icmp ult i64 %87, 8
  br i1 %158, label %79, label %83

159:                                              ; preds = %83
  %160 = sub i64 %62, %84
  %161 = getelementptr inbounds i8, i8* %61, i64 %160
  %162 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 2, i64 %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* align 1 %161, i64 %84, i1 false)
  br label %163

163:                                              ; preds = %83, %159
  %164 = add i64 %63, %84
  store i64 %164, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %64) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN10ThreadPool7AddTaskEPFvPvES0_(%class.ThreadPool*, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z14blake2sp_finalP14blake2sp_statePh(%struct.blake2sp_state* nocapture, i8* nocapture) local_unnamed_addr #0 {
  %3 = alloca [8 x [32 x i8]], align 16
  %4 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %3, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 256, i1 false)
  %5 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 3
  br label %12

6:                                                ; preds = %61
  %7 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1, i32 5
  %9 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 1, i32 3
  %11 = load i64, i64* %8, align 8
  br label %67

12:                                               ; preds = %61, %2
  %13 = phi i64 [ 0, %2 ], [ %64, %61 ]
  %14 = load i64, i64* %5, align 8
  %15 = shl i64 %13, 6
  %16 = icmp ugt i64 %14, %15
  br i1 %16, label %17, label %61

17:                                               ; preds = %12
  %18 = sub i64 %14, %15
  %19 = icmp ult i64 %18, 64
  %20 = select i1 %19, i64 %18, i64 64
  %21 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %13
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %61, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 2, i64 %15
  %25 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %13, i32 5
  %26 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %13, i32 1
  %27 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %13, i32 3
  %28 = load i64, i64* %25, align 8
  br label %29

29:                                               ; preds = %40, %23
  %30 = phi i64 [ %28, %23 ], [ %57, %40 ]
  %31 = phi i8* [ %24, %23 ], [ %59, %40 ]
  %32 = phi i64 [ %20, %23 ], [ %58, %40 ]
  %33 = sub i64 128, %30
  %34 = icmp ugt i64 %32, %33
  %35 = load i8*, i8** %26, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %30
  br i1 %34, label %40, label %37

37:                                               ; preds = %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %31, i64 %32, i1 false) #3
  %38 = load i64, i64* %25, align 8
  %39 = add i64 %38, %32
  store i64 %39, i64* %25, align 8
  br label %61

40:                                               ; preds = %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %31, i64 %33, i1 false) #3
  %41 = load i64, i64* %25, align 8
  %42 = add i64 %41, %33
  store i64 %42, i64* %25, align 8
  %43 = load i32*, i32** %27, align 8
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 64
  store i32 %45, i32* %43, align 4
  %46 = load i32*, i32** %27, align 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp ult i32 %47, 64
  %49 = zext i1 %48 to i32
  %50 = getelementptr inbounds i32, i32* %46, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, %49
  store i32 %52, i32* %50, align 4
  %53 = load i8*, i8** %26, align 8
  tail call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %21, i8* %53) #3
  %54 = load i8*, i8** %26, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 64, i1 false) #3
  %56 = load i64, i64* %25, align 8
  %57 = add i64 %56, -64
  store i64 %57, i64* %25, align 8
  %58 = sub i64 %32, %33
  %59 = getelementptr inbounds i8, i8* %31, i64 %33
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %29

61:                                               ; preds = %40, %37, %17, %12
  %62 = getelementptr inbounds %struct.blake2sp_state, %struct.blake2sp_state* %0, i64 0, i32 0, i64 %13
  %63 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %3, i64 0, i64 %13, i64 0
  call fastcc void @_ZL13blake2s_finalP13blake2s_statePh(%struct.blake2s_state* %62, i8* %63)
  %64 = add nuw nsw i64 %13, 1
  %65 = icmp eq i64 %64, 8
  br i1 %65, label %6, label %12

66:                                               ; preds = %103
  tail call fastcc void @_ZL13blake2s_finalP13blake2s_statePh(%struct.blake2s_state* %7, i8* %1)
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #3
  ret void

67:                                               ; preds = %103, %6
  %68 = phi i64 [ %11, %6 ], [ %104, %103 ]
  %69 = phi i64 [ 0, %6 ], [ %105, %103 ]
  %70 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %3, i64 0, i64 %69, i64 0
  br label %71

71:                                               ; preds = %82, %67
  %72 = phi i64 [ %68, %67 ], [ %99, %82 ]
  %73 = phi i8* [ %70, %67 ], [ %101, %82 ]
  %74 = phi i64 [ 32, %67 ], [ %100, %82 ]
  %75 = sub i64 128, %72
  %76 = icmp ugt i64 %74, %75
  %77 = load i8*, i8** %9, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %72
  br i1 %76, label %82, label %79

79:                                               ; preds = %71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %73, i64 %74, i1 false) #3
  %80 = load i64, i64* %8, align 8
  %81 = add i64 %80, %74
  store i64 %81, i64* %8, align 8
  br label %103

82:                                               ; preds = %71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %73, i64 %75, i1 false) #3
  %83 = load i64, i64* %8, align 8
  %84 = add i64 %83, %75
  store i64 %84, i64* %8, align 8
  %85 = load i32*, i32** %10, align 8
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 64
  store i32 %87, i32* %85, align 4
  %88 = load i32*, i32** %10, align 8
  %89 = load i32, i32* %88, align 4
  %90 = icmp ult i32 %89, 64
  %91 = zext i1 %90 to i32
  %92 = getelementptr inbounds i32, i32* %88, i64 1
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, %91
  store i32 %94, i32* %92, align 4
  %95 = load i8*, i8** %9, align 8
  tail call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %7, i8* %95) #3
  %96 = load i8*, i8** %9, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %97, i64 64, i1 false) #3
  %98 = load i64, i64* %8, align 8
  %99 = add i64 %98, -64
  store i64 %99, i64* %8, align 8
  %100 = sub i64 %74, %75
  %101 = getelementptr inbounds i8, i8* %73, i64 %75
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %103, label %71

103:                                              ; preds = %82, %79
  %104 = phi i64 [ %81, %79 ], [ %99, %82 ]
  %105 = add nuw nsw i64 %69, 1
  %106 = icmp eq i64 %105, 8
  br i1 %106, label %66, label %67
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL13blake2s_finalP13blake2s_statePh(%struct.blake2s_state* nocapture, i8* nocapture) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 64
  br i1 %5, label %6, label %25

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 3
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, 64
  store i32 %10, i32* %8, align 4
  %11 = load i32*, i32** %7, align 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %12, 64
  %14 = zext i1 %13 to i32
  %15 = getelementptr inbounds i32, i32* %11, i64 1
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %14
  store i32 %17, i32* %15, align 4
  %18 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  tail call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %0, i8* %19)
  %20 = load i64, i64* %3, align 8
  %21 = add i64 %20, -64
  store i64 %21, i64* %3, align 8
  %22 = load i8*, i8** %18, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 %21, i1 false)
  %24 = load i64, i64* %3, align 8
  br label %25

25:                                               ; preds = %6, %2
  %26 = phi i64 [ %24, %6 ], [ %4, %2 ]
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 3
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, %27
  store i32 %31, i32* %29, align 4
  %32 = load i32*, i32** %28, align 8
  %33 = load i32, i32* %32, align 4
  %34 = icmp ult i32 %33, %27
  %35 = zext i1 %34 to i32
  %36 = getelementptr inbounds i32, i32* %32, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, %35
  store i32 %38, i32* %36, align 4
  %39 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 6
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %25
  %43 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 4
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 1
  store i32 -1, i32* %45, align 4
  br label %46

46:                                               ; preds = %25, %42
  %47 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 4
  %48 = load i32*, i32** %47, align 8
  store i32 -1, i32* %48, align 4
  %49 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 1
  %50 = load i8*, i8** %49, align 8
  %51 = load i64, i64* %3, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = sub i64 128, %51
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %52, i8 0, i64 %53, i1 false)
  %54 = load i8*, i8** %49, align 8
  tail call fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* %0, i8* %54)
  %55 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 2
  %56 = load i32*, i32** %55, align 8
  %57 = load i32, i32* %56, align 4
  %58 = bitcast i8* %1 to i32*
  store i32 %57, i32* %58, align 4
  %59 = load i32*, i32** %55, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds i8, i8* %1, i64 4
  %63 = bitcast i8* %62 to i32*
  store i32 %61, i32* %63, align 4
  %64 = load i32*, i32** %55, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds i8, i8* %1, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 %66, i32* %68, align 4
  %69 = load i32*, i32** %55, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 3
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds i8, i8* %1, i64 12
  %73 = bitcast i8* %72 to i32*
  store i32 %71, i32* %73, align 4
  %74 = load i32*, i32** %55, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 4
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds i8, i8* %1, i64 16
  %78 = bitcast i8* %77 to i32*
  store i32 %76, i32* %78, align 4
  %79 = load i32*, i32** %55, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 5
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i8, i8* %1, i64 20
  %83 = bitcast i8* %82 to i32*
  store i32 %81, i32* %83, align 4
  %84 = load i32*, i32** %55, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 6
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds i8, i8* %1, i64 24
  %88 = bitcast i8* %87 to i32*
  store i32 %86, i32* %88, align 4
  %89 = load i32*, i32** %55, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 7
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds i8, i8* %1, i64 28
  %93 = bitcast i8* %92 to i32*
  store i32 %91, i32* %93, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL16blake2s_compressP13blake2s_statePKh(%struct.blake2s_state* nocapture readonly, i8* nocapture readonly) unnamed_addr #0 {
  %3 = alloca [16 x i32], align 16
  %4 = bitcast [16 x i32]* %3 to i8*
  %5 = alloca [16 x i32], align 16
  %6 = bitcast [16 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #3
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 4 %1, i64 64, i1 false)
  %7 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 2
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 0
  %10 = bitcast i32* %8 to <4 x i32>*
  %11 = load <4 x i32>, <4 x i32>* %10, align 4
  %12 = shufflevector <4 x i32> %11, <4 x i32> undef, <4 x i32> <i32 1, i32 2, i32 3, i32 0>
  %13 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 1
  %14 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 2
  %15 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 3
  %16 = bitcast [16 x i32]* %5 to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %16, align 16
  %17 = getelementptr inbounds i32, i32* %8, i64 4
  %18 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 4
  %19 = bitcast i32* %17 to <4 x i32>*
  %20 = load <4 x i32>, <4 x i32>* %19, align 4
  %21 = shufflevector <4 x i32> %20, <4 x i32> undef, <4 x i32> <i32 1, i32 2, i32 3, i32 0>
  %22 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 5
  %23 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %23, align 16
  %24 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 8
  %25 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 9
  %26 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 10
  %27 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 11
  %28 = bitcast i32* %24 to <4 x i32>*
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %28, align 16
  %29 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 3
  %30 = load i32*, i32** %29, align 8
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 12
  %33 = getelementptr inbounds i32, i32* %30, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.blake2s_state, %struct.blake2s_state* %0, i64 0, i32 4
  %36 = load i32*, i32** %35, align 8
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i32, i32* %36, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = insertelement <4 x i32> undef, i32 %34, i32 0
  %41 = insertelement <4 x i32> %40, i32 %37, i32 1
  %42 = insertelement <4 x i32> %41, i32 %39, i32 2
  %43 = insertelement <4 x i32> %42, i32 %31, i32 3
  %44 = xor <4 x i32> %43, <i32 -1694144372, i32 528734635, i32 1541459225, i32 1359893119>
  %45 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 13
  %46 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %47 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %47, align 16
  br label %112

48:                                               ; preds = %112
  %49 = extractelement <4 x i32> %255, i32 1
  store i32 %49, i32* %9, align 16
  %50 = extractelement <4 x i32> %255, i32 2
  store i32 %50, i32* %13, align 4
  %51 = extractelement <4 x i32> %255, i32 3
  store i32 %51, i32* %14, align 8
  %52 = extractelement <4 x i32> %255, i32 0
  store i32 %52, i32* %15, align 4
  %53 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> %264, <4 x i32>* %53, align 16
  %54 = shufflevector <4 x i32> %259, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %55 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> %54, <4 x i32>* %55, align 16
  %56 = shufflevector <4 x i32> %260, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %57 = bitcast i32* %24 to <4 x i32>*
  store <4 x i32> %56, <4 x i32>* %57, align 16
  %58 = load i32*, i32** %7, align 8
  %59 = load i32, i32* %58, align 4
  %60 = xor i32 %49, %59
  %61 = extractelement <4 x i32> %260, i32 3
  %62 = xor i32 %60, %61
  store i32 %62, i32* %58, align 4
  %63 = load i32*, i32** %7, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* %13, align 4
  %67 = xor i32 %66, %65
  %68 = load i32, i32* %25, align 4
  %69 = xor i32 %67, %68
  store i32 %69, i32* %64, align 4
  %70 = load i32*, i32** %7, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 2
  %72 = load i32, i32* %71, align 4
  %73 = load i32, i32* %14, align 8
  %74 = xor i32 %73, %72
  %75 = load i32, i32* %26, align 8
  %76 = xor i32 %74, %75
  store i32 %76, i32* %71, align 4
  %77 = load i32*, i32** %7, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 3
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %15, align 4
  %81 = xor i32 %80, %79
  %82 = load i32, i32* %27, align 4
  %83 = xor i32 %81, %82
  store i32 %83, i32* %78, align 4
  %84 = load i32*, i32** %7, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 4
  %86 = load i32, i32* %85, align 4
  %87 = load i32, i32* %18, align 16
  %88 = xor i32 %87, %86
  %89 = load i32, i32* %32, align 16
  %90 = xor i32 %88, %89
  store i32 %90, i32* %85, align 4
  %91 = load i32*, i32** %7, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 5
  %93 = load i32, i32* %92, align 4
  %94 = load i32, i32* %22, align 4
  %95 = xor i32 %94, %93
  %96 = load i32, i32* %45, align 4
  %97 = xor i32 %95, %96
  store i32 %97, i32* %92, align 4
  %98 = load i32*, i32** %7, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 6
  %100 = load i32, i32* %99, align 4
  %101 = extractelement <4 x i32> %264, i32 2
  %102 = xor i32 %101, %100
  %103 = extractelement <4 x i32> %259, i32 0
  %104 = xor i32 %102, %103
  store i32 %104, i32* %99, align 4
  %105 = load i32*, i32** %7, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 7
  %107 = load i32, i32* %106, align 4
  %108 = extractelement <4 x i32> %264, i32 3
  %109 = xor i32 %108, %107
  %110 = extractelement <4 x i32> %259, i32 1
  %111 = xor i32 %109, %110
  store i32 %111, i32* %106, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #3
  ret void

112:                                              ; preds = %112, %2
  %113 = phi i64 [ 0, %2 ], [ %265, %112 ]
  %114 = phi <4 x i32> [ %44, %2 ], [ %268, %112 ]
  %115 = phi <4 x i32> [ %21, %2 ], [ %267, %112 ]
  %116 = phi <4 x i32> [ %12, %2 ], [ %269, %112 ]
  %117 = phi <4 x i32> [ <i32 -1150833019, i32 1013904242, i32 -1521486534, i32 1779033703>, %2 ], [ %260, %112 ]
  %118 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 0
  %119 = load i8, i8* %118, align 16
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 2
  %124 = load i8, i8* %123, align 2
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 4
  %129 = load i8, i8* %128, align 4
  %130 = zext i8 %129 to i64
  %131 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = add <4 x i32> %115, %116
  %134 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 6
  %135 = load i8, i8* %134, align 2
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = insertelement <4 x i32> undef, i32 %127, i32 0
  %140 = insertelement <4 x i32> %139, i32 %132, i32 1
  %141 = insertelement <4 x i32> %140, i32 %138, i32 2
  %142 = insertelement <4 x i32> %141, i32 %122, i32 3
  %143 = add <4 x i32> %133, %142
  %144 = xor <4 x i32> %114, %143
  %145 = lshr <4 x i32> %144, <i32 16, i32 16, i32 16, i32 16>
  %146 = shl <4 x i32> %144, <i32 16, i32 16, i32 16, i32 16>
  %147 = or <4 x i32> %145, %146
  %148 = add <4 x i32> %147, %117
  %149 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 1
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i64
  %152 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = xor <4 x i32> %148, %115
  %155 = shufflevector <4 x i32> %154, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %156 = lshr <4 x i32> %155, <i32 12, i32 12, i32 12, i32 12>
  %157 = shl <4 x i32> %155, <i32 20, i32 20, i32 20, i32 20>
  %158 = or <4 x i32> %156, %157
  %159 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 3
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 5
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 7
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %175 = insertelement <4 x i32> undef, i32 %173, i32 0
  %176 = insertelement <4 x i32> %175, i32 %153, i32 1
  %177 = insertelement <4 x i32> %176, i32 %163, i32 2
  %178 = insertelement <4 x i32> %177, i32 %168, i32 3
  %179 = add <4 x i32> %178, %174
  %180 = shufflevector <4 x i32> %158, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %181 = add <4 x i32> %179, %180
  %182 = shufflevector <4 x i32> %147, <4 x i32> undef, <4 x i32> <i32 1, i32 2, i32 3, i32 0>
  %183 = shufflevector <4 x i32> %181, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %184 = xor <4 x i32> %183, %182
  %185 = lshr <4 x i32> %184, <i32 8, i32 8, i32 8, i32 8>
  %186 = shl <4 x i32> %184, <i32 24, i32 24, i32 24, i32 24>
  %187 = or <4 x i32> %185, %186
  %188 = shufflevector <4 x i32> %187, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %189 = add <4 x i32> %188, %148
  %190 = shufflevector <4 x i32> %189, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %191 = xor <4 x i32> %190, %158
  %192 = lshr <4 x i32> %191, <i32 7, i32 7, i32 7, i32 7>
  %193 = shl <4 x i32> %191, <i32 25, i32 25, i32 25, i32 25>
  %194 = or <4 x i32> %192, %193
  %195 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 8
  %196 = load i8, i8* %195, align 8
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 10
  %201 = load i8, i8* %200, align 2
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 12
  %206 = load i8, i8* %205, align 4
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = add <4 x i32> %181, %194
  %211 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 14
  %212 = load i8, i8* %211, align 2
  %213 = zext i8 %212 to i64
  %214 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = insertelement <4 x i32> undef, i32 %215, i32 0
  %217 = insertelement <4 x i32> %216, i32 %199, i32 1
  %218 = insertelement <4 x i32> %217, i32 %204, i32 2
  %219 = insertelement <4 x i32> %218, i32 %209, i32 3
  %220 = add <4 x i32> %210, %219
  %221 = xor <4 x i32> %220, %187
  %222 = lshr <4 x i32> %221, <i32 16, i32 16, i32 16, i32 16>
  %223 = shl <4 x i32> %221, <i32 16, i32 16, i32 16, i32 16>
  %224 = or <4 x i32> %222, %223
  %225 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 9
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i64
  %228 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 11
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 13
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i64
  %238 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = add <4 x i32> %224, %189
  %241 = xor <4 x i32> %240, %194
  %242 = lshr <4 x i32> %241, <i32 12, i32 12, i32 12, i32 12>
  %243 = shl <4 x i32> %241, <i32 20, i32 20, i32 20, i32 20>
  %244 = or <4 x i32> %242, %243
  %245 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @_ZL13blake2s_sigma, i64 0, i64 %113, i64 15
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i64
  %248 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = insertelement <4 x i32> undef, i32 %249, i32 0
  %251 = insertelement <4 x i32> %250, i32 %229, i32 1
  %252 = insertelement <4 x i32> %251, i32 %234, i32 2
  %253 = insertelement <4 x i32> %252, i32 %239, i32 3
  %254 = add <4 x i32> %253, %220
  %255 = add <4 x i32> %254, %244
  %256 = xor <4 x i32> %255, %224
  %257 = lshr <4 x i32> %256, <i32 8, i32 8, i32 8, i32 8>
  %258 = shl <4 x i32> %256, <i32 24, i32 24, i32 24, i32 24>
  %259 = or <4 x i32> %257, %258
  %260 = add <4 x i32> %259, %240
  %261 = xor <4 x i32> %260, %244
  %262 = lshr <4 x i32> %261, <i32 7, i32 7, i32 7, i32 7>
  %263 = shl <4 x i32> %261, <i32 25, i32 25, i32 25, i32 25>
  %264 = or <4 x i32> %262, %263
  %265 = add nuw nsw i64 %113, 1
  %266 = icmp eq i64 %265, 10
  %267 = shufflevector <4 x i32> %264, <4 x i32> undef, <4 x i32> <i32 1, i32 2, i32 3, i32 0>
  %268 = shufflevector <4 x i32> %259, <4 x i32> undef, <4 x i32> <i32 3, i32 0, i32 1, i32 2>
  %269 = shufflevector <4 x i32> %255, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  br i1 %266, label %48, label %112
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
