; ModuleID = '../../cc/trees/swap_promise_monitor.cc'
source_filename = "../../cc/trees/swap_promise_monitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::SwapPromiseMonitor" = type { i32 (...)**, %"class.cc::SwapPromiseManager"*, %"class.cc::LayerTreeHostImpl"* }
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector", %"class.std::__1::set" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.19", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set.51", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.120", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126", %"class.gfx::Vector2dF", %"class.std::__1::vector", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.410", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.467", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.479", %"class.std::__1::set.485", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.495", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.536", %"class.base::RepeatingCallback.338", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set", i8, i8, i8, i32, %"class.std::__1::unique_ptr.542", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.548", %"class.std::__1::vector.554", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.586", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.592", %"class.absl::optional.605", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.100", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.680", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.758", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.801", %"class.base::WeakPtrFactory.808" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.32", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.47", [4 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { float }
%"class.std::__1::set.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.60, %class.scoped_refptr.61, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.62", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.60 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.61 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.69", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.70" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i8 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.100", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.108" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.90"*, i64 }
%"class.std::__1::unique_ptr.90" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.108" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.115" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.115" = type { %"class.base::internal::VectorBuffer.116", i64, i64 }
%"class.base::internal::VectorBuffer.116" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeImpl" = type opaque
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.132", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.138", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.365", %"class.std::__1::vector.220", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.403", %"class.base::WeakPtrFactory.403" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.138" = type { %"class.std::__1::__hash_table.139" }
%"class.std::__1::__hash_table.139" = type <{ %"class.std::__1::unique_ptr.140", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.160", [4 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base.143"** }
%"struct.std::__1::__hash_node_base.143" = type { %"struct.std::__1::__hash_node_base.143"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator.145" }
%"class.std::__1::__bucket_list_deallocator.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.143" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.165, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.167", %"class.base::flat_map.197", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.207", %"class.std::__1::map.207", i8, %"class.std::__1::vector.216", %"class.base::WeakPtrFactory.232" }
%class.scoped_refptr.165 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.192" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.187", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.170, %"class.gfx::Rect", i32, %class.sk_sp.175, %class.sk_sp.183, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.184 }
%class.sk_sp.170 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.171", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { i8* }
%class.sk_sp.175 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.176" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.169, i32, i32 }
%class.sk_sp.169 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.70" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.178" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.183 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.184 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.185", [4 x i8] }>
%"class.base::RefCountedThreadSafe.185" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.186 }
%union.anon.186 = type { i64 }
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, %union.anon.191 }
%union.anon.191 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.197" = type { %"class.base::internal::flat_tree.198" }
%"class.base::internal::flat_tree.198" = type { %"class.std::__1::vector.199" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.std::__1::pair.201"*, %"struct.std::__1::pair.201"*, %"class.std::__1::__compressed_pair.202" }
%"struct.std::__1::pair.201" = type opaque
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::pair.201"* }
%"class.std::__1::map.207" = type { %"class.std::__1::__tree.208" }
%"class.std::__1::__tree.208" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.209", %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.227" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.218, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.104", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.104" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.218 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.220", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.219", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.219" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.232" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.233", i8, %class.scoped_refptr.165, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.243" }
%"class.base::flat_map.233" = type { %"class.base::internal::flat_tree.234" }
%"class.base::internal::flat_tree.234" = type { %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.std::__1::pair.237"*, %"struct.std::__1::pair.237"*, %"class.std::__1::__compressed_pair.238" }
%"struct.std::__1::pair.237" = type { i32, %"class.std::__1::unique_ptr.819" }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::pair.237"* }
%"class.base::WeakPtrFactory.243" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.244", %"class.base::internal::flat_tree.244", %"class.std::__1::vector.252", i32, %"class.absl::optional.259", %"class.std::__1::unordered_map.264", %"class.std::__1::unordered_map.288", %"class.base::flat_map.312", %"class.base::WeakPtrFactory.322" }
%"class.base::internal::flat_tree.244" = type { %"class.std::__1::vector.245" }
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { i32*, i32*, %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { i32* }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.254" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.259" = type { %"class.absl::optional_internal::optional_data.260" }
%"class.absl::optional_internal::optional_data.260" = type { %"class.absl::optional_internal::optional_data_base.261" }
%"class.absl::optional_internal::optional_data_base.261" = type { %"class.absl::optional_internal::optional_data_dtor_base.262" }
%"class.absl::optional_internal::optional_data_dtor_base.262" = type { i8, %union.anon.263 }
%union.anon.263 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.264" = type { %"class.std::__1::__hash_table.265" }
%"class.std::__1::__hash_table.265" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.284", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.269"** }
%"struct.std::__1::__hash_node_base.269" = type { %"struct.std::__1::__hash_node_base.269"* }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.std::__1::__bucket_list_deallocator.271" }
%"class.std::__1::__bucket_list_deallocator.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.269" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unordered_map.288" = type { %"class.std::__1::__hash_table.289" }
%"class.std::__1::__hash_table.289" = type <{ %"class.std::__1::unique_ptr.290", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.308", [4 x i8] }>
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.293"** }
%"struct.std::__1::__hash_node_base.293" = type { %"struct.std::__1::__hash_node_base.293"* }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::__bucket_list_deallocator.295" }
%"class.std::__1::__bucket_list_deallocator.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base.293" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::flat_map.312" = type { %"class.base::internal::flat_tree.313" }
%"class.base::internal::flat_tree.313" = type { %"class.std::__1::vector.314" }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { %"struct.std::__1::pair.316"*, %"struct.std::__1::pair.316"*, %"class.std::__1::__compressed_pair.317" }
%"struct.std::__1::pair.316" = type { i32, i32 }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::pair.316"* }
%"class.base::WeakPtrFactory.322" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.323", %"class.std::__1::vector.331" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.326" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.325, i16, i16, i32 }
%class.scoped_refptr.325 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.333" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.338", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.339" }
%"class.base::WeakPtrFactory.339" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.340" }
%"class.std::__1::__hash_table.340" = type <{ %"class.std::__1::unique_ptr.341", %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360", [4 x i8] }>
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343", %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.344"** }
%"struct.std::__1::__hash_node_base.344" = type { %"struct.std::__1::__hash_node_base.344"* }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.std::__1::__bucket_list_deallocator.346" }
%"class.std::__1::__bucket_list_deallocator.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::__hash_node_base.344" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unordered_map.365" = type { %"class.std::__1::__hash_table.366" }
%"class.std::__1::__hash_table.366" = type <{ %"class.std::__1::unique_ptr.367", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.385", [4 x i8] }>
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369", %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.std::__1::__hash_node_base.370"** }
%"struct.std::__1::__hash_node_base.370" = type { %"struct.std::__1::__hash_node_base.370"* }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.std::__1::__bucket_list_deallocator.372" }
%"class.std::__1::__bucket_list_deallocator.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.370" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %class.scoped_refptr.218*, %class.scoped_refptr.218*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %class.scoped_refptr.218* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.389" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.395", %"class.base::WeakPtrFactory.396" }
%"class.base::OnceCallback.395" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.396" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.397, i8, [7 x i8] }>
%class.scoped_refptr.397 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.398", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.398" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.399" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::WeakPtrFactory.403" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type opaque
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.426", %"class.absl::optional.426", %"class.absl::optional.426", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.445, %"class.absl::optional.446", %"class.std::__1::map.451" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.422" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.416"**, %"struct.std::__1::pair.416"**, %"struct.std::__1::pair.416"**, %"class.std::__1::__compressed_pair.417" }
%"struct.std::__1::pair.416" = type opaque
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::pair.416"** }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.426" = type { %"class.absl::optional_internal::optional_data.427" }
%"class.absl::optional_internal::optional_data.427" = type { %"class.absl::optional_internal::optional_data_base.428" }
%"class.absl::optional_internal::optional_data_base.428" = type { %"class.absl::optional_internal::optional_data_dtor_base.429" }
%"class.absl::optional_internal::optional_data_dtor_base.429" = type { i8, %union.anon.430 }
%union.anon.430 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.431", %"class.base::circular_deque.432", %"class.std::__1::map.434", %"class.absl::optional" }
%"class.base::RepeatingCallback.431" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.432" = type { %"class.base::internal::VectorBuffer.433", i64, i64 }
%"class.base::internal::VectorBuffer.433" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.434" = type { %"class.std::__1::__tree.435" }
%"class.std::__1::__tree.435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%struct.anon.445 = type { double, double }
%"class.absl::optional.446" = type { %"class.absl::optional_internal::optional_data.447" }
%"class.absl::optional_internal::optional_data.447" = type { %"class.absl::optional_internal::optional_data_base.448" }
%"class.absl::optional_internal::optional_data_base.448" = type { %"class.absl::optional_internal::optional_data_dtor_base.449" }
%"class.absl::optional_internal::optional_data_dtor_base.449" = type { i8, %union.anon.450 }
%union.anon.450 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.451" = type { %"class.std::__1::__tree.452" }
%"class.std::__1::__tree.452" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.463" }
%"class.base::RingBuffer.463" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.495" = type { %"class.std::__1::__hash_table.496" }
%"class.std::__1::__hash_table.496" = type <{ %"class.std::__1::unique_ptr.497", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.512", %"class.std::__1::__compressed_pair.515", [4 x i8] }>
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499", %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base.500"** }
%"struct.std::__1::__hash_node_base.500" = type { %"struct.std::__1::__hash_node_base.500"* }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.std::__1::__bucket_list_deallocator.502" }
%"class.std::__1::__bucket_list_deallocator.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.500" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.521" }
%"class.std::__1::vector.521" = type { %"class.std::__1::__vector_base.522" }
%"class.std::__1::__vector_base.522" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.528" }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"class.std::__1::unique_ptr.530"*, %"class.std::__1::unique_ptr.530"*, %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::unique_ptr.530" = type opaque
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.std::__1::unique_ptr.530"* }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.338" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.554" = type { %"class.std::__1::__vector_base.555" }
%"class.std::__1::__vector_base.555" = type { %"struct.std::__1::pair.556"*, %"struct.std::__1::pair.556"*, %"class.std::__1::__compressed_pair.557" }
%"struct.std::__1::pair.556" = type opaque
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::pair.556"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.562", %"class.base::internal::flat_tree.244", %"class.base::internal::flat_tree.244", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.562" = type { %"class.base::internal::flat_tree.563" }
%"class.base::internal::flat_tree.563" = type { %"class.std::__1::vector.564" }
%"class.std::__1::vector.564" = type { %"class.std::__1::__vector_base.565" }
%"class.std::__1::__vector_base.565" = type { %"struct.std::__1::pair.566"*, %"struct.std::__1::pair.566"*, %"class.std::__1::__compressed_pair.567" }
%"struct.std::__1::pair.566" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.176", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.825", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.825" = type { %"class.std::__1::vector.826" }
%"class.std::__1::vector.826" = type { %"class.std::__1::__vector_base.827" }
%"class.std::__1::__vector_base.827" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.828" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::pair.566"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.572", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.573" }
%"class.base::RepeatingCallback.572" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.573" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.577" }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.base::internal::flat_tree.592" = type { %"class.std::__1::vector.593" }
%"class.std::__1::vector.593" = type { %"class.std::__1::__vector_base.594" }
%"class.std::__1::__vector_base.594" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.600" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.595", %"class.viz::SurfaceId" }
%"class.absl::optional.595" = type { %"class.absl::optional_internal::optional_data.596" }
%"class.absl::optional_internal::optional_data.596" = type { %"class.absl::optional_internal::optional_data_base.597" }
%"class.absl::optional_internal::optional_data_base.597" = type { %"class.absl::optional_internal::optional_data_dtor_base.598" }
%"class.absl::optional_internal::optional_data_dtor_base.598" = type { i8, %union.anon.599 }
%union.anon.599 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.viz::SurfaceRange"* }
%"class.absl::optional.605" = type { %"class.absl::optional_internal::optional_data.606" }
%"class.absl::optional_internal::optional_data.606" = type { %"class.absl::optional_internal::optional_data_base.607" }
%"class.absl::optional_internal::optional_data_base.607" = type { %"class.absl::optional_internal::optional_data_dtor_base.608" }
%"class.absl::optional_internal::optional_data_dtor_base.608" = type { i8, [7 x i8], %union.anon.609 }
%union.anon.609 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.610", %"struct.viz::Selection", i8, %"class.absl::optional.615", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.620", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.610" = type { %"class.absl::optional_internal::optional_data.611" }
%"class.absl::optional_internal::optional_data.611" = type { %"class.absl::optional_internal::optional_data_base.612" }
%"class.absl::optional_internal::optional_data_base.612" = type { %"class.absl::optional_internal::optional_data_dtor_base.613" }
%"class.absl::optional_internal::optional_data_dtor_base.613" = type { i8, %union.anon.614 }
%union.anon.614 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.615" = type { %"class.absl::optional_internal::optional_data.616" }
%"class.absl::optional_internal::optional_data.616" = type { %"class.absl::optional_internal::optional_data_base.617" }
%"class.absl::optional_internal::optional_data_base.617" = type { %"class.absl::optional_internal::optional_data_dtor_base.618" }
%"class.absl::optional_internal::optional_data_dtor_base.618" = type { i8, %union.anon.619 }
%union.anon.619 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.620" = type { %"class.absl::optional_internal::optional_data.621" }
%"class.absl::optional_internal::optional_data.621" = type { %"class.absl::optional_internal::optional_data_base.622" }
%"class.absl::optional_internal::optional_data_base.622" = type { %"class.absl::optional_internal::optional_data_dtor_base.623" }
%"class.absl::optional_internal::optional_data_dtor_base.623" = type { i8, %union.anon.624 }
%union.anon.624 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.625" }
%"class.base::circular_deque.625" = type { %"class.base::internal::VectorBuffer.626", i64, i64 }
%"class.base::internal::VectorBuffer.626" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.627", %"class.std::__1::vector.627" }
%"class.std::__1::vector.627" = type { %"class.std::__1::__vector_base.628" }
%"class.std::__1::__vector_base.628" = type { %"class.base::OnceCallback.629"*, %"class.base::OnceCallback.629"*, %"class.std::__1::__compressed_pair.630" }
%"class.base::OnceCallback.629" = type opaque
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.base::OnceCallback.629"* }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.635", %"class.base::flat_map.641", %"class.base::flat_map.651", %"class.base::RepeatingCallback.661", %"class.std::__1::vector.662", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.670", i64, i64 }
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.641" = type { %"class.base::internal::flat_tree.642" }
%"class.base::internal::flat_tree.642" = type { %"class.std::__1::vector.643" }
%"class.std::__1::vector.643" = type { %"class.std::__1::__vector_base.644" }
%"class.std::__1::__vector_base.644" = type { %"struct.std::__1::pair.645"*, %"struct.std::__1::pair.645"*, %"class.std::__1::__compressed_pair.646" }
%"struct.std::__1::pair.645" = type opaque
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.std::__1::pair.645"* }
%"class.base::flat_map.651" = type { %"class.base::internal::flat_tree.652" }
%"class.base::internal::flat_tree.652" = type { %"class.std::__1::vector.653" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { %"struct.std::__1::pair.655"*, %"struct.std::__1::pair.655"*, %"class.std::__1::__compressed_pair.656" }
%"struct.std::__1::pair.655" = type opaque
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"struct.std::__1::pair.655"* }
%"class.base::RepeatingCallback.661" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.std::__1::unique_ptr.664"*, %"class.std::__1::unique_ptr.664"*, %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::unique_ptr.664" = type opaque
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::unique_ptr.664"* }
%"class.base::flat_map.670" = type { %"class.base::internal::flat_tree.671" }
%"class.base::internal::flat_tree.671" = type { %"class.std::__1::vector.672" }
%"class.std::__1::vector.672" = type { %"class.std::__1::__vector_base.673" }
%"class.std::__1::__vector_base.673" = type { %"struct.std::__1::pair.674"*, %"struct.std::__1::pair.674"*, %"class.std::__1::__compressed_pair.675" }
%"struct.std::__1::pair.674" = type opaque
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.std::__1::pair.674"* }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.686", %"class.base::internal::flat_tree.696" }
%"class.base::flat_map.686" = type { %"class.base::internal::flat_tree.687" }
%"class.base::internal::flat_tree.687" = type { %"class.std::__1::vector.688" }
%"class.std::__1::vector.688" = type { %"class.std::__1::__vector_base.689" }
%"class.std::__1::__vector_base.689" = type { %"struct.std::__1::pair.690"*, %"struct.std::__1::pair.690"*, %"class.std::__1::__compressed_pair.691" }
%"struct.std::__1::pair.690" = type opaque
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"struct.std::__1::pair.690"* }
%"class.base::internal::flat_tree.696" = type { %"class.std::__1::vector.697" }
%"class.std::__1::vector.697" = type { %"class.std::__1::__vector_base.698" }
%"class.std::__1::__vector_base.698" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.709" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.699", %"class.absl::optional.704", %"struct.cc::ElementId" }
%"class.absl::optional.699" = type { %"class.absl::optional_internal::optional_data.700" }
%"class.absl::optional_internal::optional_data.700" = type { %"class.absl::optional_internal::optional_data_base.701" }
%"class.absl::optional_internal::optional_data_base.701" = type { %"class.absl::optional_internal::optional_data_dtor_base.702" }
%"class.absl::optional_internal::optional_data_dtor_base.702" = type { i8, %union.anon.703 }
%union.anon.703 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.704" = type { %"class.absl::optional_internal::optional_data.705" }
%"class.absl::optional_internal::optional_data.705" = type { %"class.absl::optional_internal::optional_data_base.706" }
%"class.absl::optional_internal::optional_data_base.706" = type { %"class.absl::optional_internal::optional_data_dtor_base.707" }
%"class.absl::optional_internal::optional_data_dtor_base.707" = type { i8, %union.anon.708 }
%union.anon.708 = type { i32 }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.726" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.714", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.714" = type { %"class.std::__1::__deque_base.715" }
%"class.std::__1::__deque_base.715" = type { %"struct.std::__1::__split_buffer.716", i64, %"class.std::__1::__compressed_pair.722" }
%"struct.std::__1::__split_buffer.716" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.717" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::circular_deque.726" = type { %"class.base::internal::VectorBuffer.727", i64, i64 }
%"class.base::internal::VectorBuffer.727" = type { %"struct.std::__1::pair.728"*, i64 }
%"struct.std::__1::pair.728" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.729", %"class.std::__1::map.734", %"class.std::__1::map.734" }
%"class.absl::optional.729" = type { %"class.absl::optional_internal::optional_data.730" }
%"class.absl::optional_internal::optional_data.730" = type { %"class.absl::optional_internal::optional_data_base.731" }
%"class.absl::optional_internal::optional_data_base.731" = type { %"class.absl::optional_internal::optional_data_dtor_base.732" }
%"class.absl::optional_internal::optional_data_dtor_base.732" = type { i8, [3 x i8], %union.anon.733 }
%union.anon.733 = type { %"class.gfx::Transform" }
%"class.std::__1::map.734" = type { %"class.std::__1::__tree.735" }
%"class.std::__1::__tree.735" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.736", %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.743", %"class.std::__1::vector.750" }
%"class.std::__1::vector.743" = type { %"class.std::__1::__vector_base.744" }
%"class.std::__1::__vector_base.744" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.745" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %"class.std::__1::unique_ptr.752"*, %"class.std::__1::unique_ptr.752"*, %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.811", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.811" = type { %"class.absl::optional_internal::optional_data.812" }
%"class.absl::optional_internal::optional_data.812" = type { %"class.absl::optional_internal::optional_data_base.813" }
%"class.absl::optional_internal::optional_data_base.813" = type { %"class.absl::optional_internal::optional_data_dtor_base.814" }
%"class.absl::optional_internal::optional_data_dtor_base.814" = type { i8, %union.anon.815 }
%union.anon.815 = type { i32 }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.std::__1::unique_ptr.752"* }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.338", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.764" }
%"class.base::WeakPtrFactory.764" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.765", %"class.std::__1::map.772", i64 }
%"class.std::__1::list.765" = type { %"class.std::__1::__list_imp.766" }
%"class.std::__1::__list_imp.766" = type { %"struct.std::__1::__list_node_base.767", %"class.std::__1::__compressed_pair.768" }
%"struct.std::__1::__list_node_base.767" = type { %"struct.std::__1::__list_node_base.767"*, %"struct.std::__1::__list_node_base.767"* }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.772" = type { %"class.std::__1::__tree.773" }
%"class.std::__1::__tree.773" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.774", %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.783", %"class.base::internal::flat_tree.793", %"class.base::internal::flat_tree.793" }
%"class.base::flat_map.783" = type { %"class.base::internal::flat_tree.784" }
%"class.base::internal::flat_tree.784" = type { %"class.std::__1::vector.785" }
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.base::internal::flat_tree.793" = type { %"class.std::__1::vector.794" }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { i32*, i32*, %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { i32* }
%"class.base::WeakPtrFactory.808" = type { %"class.base::internal::WeakPtrFactoryBase" }

@_ZTVN2cc18SwapPromiseMonitorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::SwapPromiseMonitor"*)* @_ZN2cc18SwapPromiseMonitorD2Ev to i8*), i8* bitcast (void (%"class.cc::SwapPromiseMonitor"*)* @_ZN2cc18SwapPromiseMonitorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN2cc18SwapPromiseMonitorD1Ev = hidden unnamed_addr alias void (%"class.cc::SwapPromiseMonitor"*), void (%"class.cc::SwapPromiseMonitor"*)* @_ZN2cc18SwapPromiseMonitorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18SwapPromiseMonitorC2EPNS_18SwapPromiseManagerE(%"class.cc::SwapPromiseMonitor"*, %"class.cc::SwapPromiseManager"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2cc18SwapPromiseMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 1
  store %"class.cc::SwapPromiseManager"* %1, %"class.cc::SwapPromiseManager"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 2
  store %"class.cc::LayerTreeHostImpl"* null, %"class.cc::LayerTreeHostImpl"** %5, align 8
  tail call void @_ZN2cc18SwapPromiseManager24InsertSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::SwapPromiseManager"* %1, %"class.cc::SwapPromiseMonitor"* %0) #4
  ret void
}

declare void @_ZN2cc18SwapPromiseManager24InsertSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::SwapPromiseManager"*, %"class.cc::SwapPromiseMonitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18SwapPromiseMonitorC2EPNS_17LayerTreeHostImplE(%"class.cc::SwapPromiseMonitor"*, %"class.cc::LayerTreeHostImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2cc18SwapPromiseMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 1
  store %"class.cc::SwapPromiseManager"* null, %"class.cc::SwapPromiseManager"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 2
  store %"class.cc::LayerTreeHostImpl"* %1, %"class.cc::LayerTreeHostImpl"** %5, align 8
  tail call void @_ZN2cc17LayerTreeHostImpl24InsertSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::LayerTreeHostImpl"* %1, %"class.cc::SwapPromiseMonitor"* %0) #4
  ret void
}

declare void @_ZN2cc17LayerTreeHostImpl24InsertSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::LayerTreeHostImpl"*, %"class.cc::SwapPromiseMonitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18SwapPromiseMonitorD2Ev(%"class.cc::SwapPromiseMonitor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2cc18SwapPromiseMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 1
  %4 = load %"class.cc::SwapPromiseManager"*, %"class.cc::SwapPromiseManager"** %3, align 8
  %5 = icmp eq %"class.cc::SwapPromiseManager"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2cc18SwapPromiseManager24RemoveSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::SwapPromiseManager"* nonnull %4, %"class.cc::SwapPromiseMonitor"* %0) #4
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.cc::SwapPromiseMonitor", %"class.cc::SwapPromiseMonitor"* %0, i64 0, i32 2
  %9 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %8, align 8
  %10 = icmp eq %"class.cc::LayerTreeHostImpl"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN2cc17LayerTreeHostImpl24RemoveSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::LayerTreeHostImpl"* nonnull %9, %"class.cc::SwapPromiseMonitor"* %0) #4
  br label %12

12:                                               ; preds = %7, %11
  ret void
}

declare void @_ZN2cc18SwapPromiseManager24RemoveSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::SwapPromiseManager"*, %"class.cc::SwapPromiseMonitor"*) local_unnamed_addr #1

declare void @_ZN2cc17LayerTreeHostImpl24RemoveSwapPromiseMonitorEPNS_18SwapPromiseMonitorE(%"class.cc::LayerTreeHostImpl"*, %"class.cc::SwapPromiseMonitor"*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2cc18SwapPromiseMonitorD0Ev(%"class.cc::SwapPromiseMonitor"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #5
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
