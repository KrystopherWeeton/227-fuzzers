; ModuleID = '../../components/renderer_context_menu/context_menu_content_type.cc'
source_filename = "../../components/renderer_context_menu/context_menu_content_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ContextMenuContentType = type <{ i32 (...)**, %"struct.content::ContextMenuParams", %"class.content::WebContents"*, i8, [7 x i8] }>
%"struct.content::ContextMenuParams" = type { %"struct.blink::UntrustworthyContextMenuParams.base", %class.GURL, %class.GURL, %"class.std::__1::map" }
%"struct.blink::UntrustworthyContextMenuParams.base" = type <{ i32, i32, i32, [4 x i8], %class.GURL, %"class.std::__1::basic_string.4", %"class.absl::optional", %class.GURL, %class.GURL, i8, [3 x i8], i32, %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::vector", i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8], %class.GURL, %"class.std::__1::vector.34", i32, i32, %"class.gfx::Rect", i32, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.13 }
%union.anon.13 = type { %"struct.blink::Impression" }
%"struct.blink::Impression" = type { %"class.url::Origin", %"class.absl::optional.19", i64, %"class.absl::optional.24", i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.14" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.url::Origin" }
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::basic_string.4"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.42" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::mojom::CustomContextMenuItem"* }
%"class.blink::mojom::CustomContextMenuItem" = type { %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", i32, i32, i8, i8, i8, i8, %"class.std::__1::vector.34" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.mojo::StructPtr"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i64 }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.55", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTV22ContextMenuContentType = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ContextMenuContentType*)* @_ZN22ContextMenuContentTypeD2Ev to i8*), i8* bitcast (void (%class.ContextMenuContentType*)* @_ZN22ContextMenuContentTypeD0Ev to i8*), i8* bitcast (i1 (%class.ContextMenuContentType*, i32)* @_ZN22ContextMenuContentType13SupportsGroupEi to i8*)] }, align 8
@_ZN7content21kChromeDevToolsSchemeE = external constant [0 x i8], align 1

@_ZN22ContextMenuContentTypeC1EPN7content11WebContentsERKNS0_17ContextMenuParamsEb = hidden unnamed_addr alias void (%class.ContextMenuContentType*, %"class.content::WebContents"*, %"struct.content::ContextMenuParams"*, i1), void (%class.ContextMenuContentType*, %"class.content::WebContents"*, %"struct.content::ContextMenuParams"*, i1)* @_ZN22ContextMenuContentTypeC2EPN7content11WebContentsERKNS0_17ContextMenuParamsEb
@_ZN22ContextMenuContentTypeD1Ev = hidden unnamed_addr alias void (%class.ContextMenuContentType*), void (%class.ContextMenuContentType*)* @_ZN22ContextMenuContentTypeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ContextMenuContentTypeC2EPN7content11WebContentsERKNS0_17ContextMenuParamsEb(%class.ContextMenuContentType*, %"class.content::WebContents"*, %"struct.content::ContextMenuParams"* dereferenceable(1256), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV22ContextMenuContentType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1
  tail call void @_ZN7content17ContextMenuParamsC1ERKS0_(%"struct.content::ContextMenuParams"* %7, %"struct.content::ContextMenuParams"* dereferenceable(1256) %2) #6
  %8 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 2
  store %"class.content::WebContents"* %1, %"class.content::WebContents"** %8, align 8
  %9 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 3
  store i8 %5, i8* %9, align 8
  ret void
}

declare void @_ZN7content17ContextMenuParamsC1ERKS0_(%"struct.content::ContextMenuParams"*, %"struct.content::ContextMenuParams"* dereferenceable(1256)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ContextMenuContentTypeD2Ev(%class.ContextMenuContentType*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV22ContextMenuContentType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1
  tail call void @_ZN7content17ContextMenuParamsD1Ev(%"struct.content::ContextMenuParams"* %3) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content17ContextMenuParamsD1Ev(%"struct.content::ContextMenuParams"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ContextMenuContentTypeD0Ev(%class.ContextMenuContentType*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV22ContextMenuContentType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1
  tail call void @_ZN7content17ContextMenuParamsD1Ev(%"struct.content::ContextMenuParams"* %3) #6
  %4 = bitcast %class.ContextMenuContentType* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22ContextMenuContentType13SupportsGroupEi(%class.ContextMenuContentType*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 12
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %2
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp eq i64 %14, 0
  %16 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 3
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 30, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %20, align 8
  %22 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 30, i32 0, i32 1
  %23 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %22, align 8
  %24 = icmp eq %"class.mojo::StructPtr"* %21, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = icmp eq i32 %1, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %25
  br i1 %15, label %28, label %30

28:                                               ; preds = %27
  %29 = icmp eq i32 %1, 19
  br label %37

30:                                               ; preds = %27, %13, %19
  %31 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 1
  %32 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content21kChromeDevToolsSchemeE, i64 0, i64 0)) #6
  %33 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %31, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content21kChromeDevToolsSchemeE, i64 0, i64 0), i64 %32) #6
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  switch i32 %1, label %37 [
    i32 19, label %35
    i32 15, label %35
    i32 14, label %35
    i32 13, label %35
    i32 0, label %35
  ]

35:                                               ; preds = %34, %34, %34, %34, %34, %30
  %36 = tail call zeroext i1 @_ZN22ContextMenuContentType21SupportsGroupInternalEi(%class.ContextMenuContentType* %0, i32 %1)
  br label %37

37:                                               ; preds = %34, %25, %35, %28
  %38 = phi i1 [ %36, %35 ], [ %29, %28 ], [ true, %25 ], [ false, %34 ]
  ret i1 %38
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN22ContextMenuContentType21SupportsGroupInternalEi(%class.ContextMenuContentType* readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 7
  %5 = bitcast %class.GURL* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %2
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 12
  %18 = bitcast %"class.std::__1::basic_string.4"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  %23 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %27

25:                                               ; preds = %14
  %26 = zext i8 %20 to i64
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi i64 [ %24, %22 ], [ %26, %25 ]
  %29 = icmp eq i64 %28, 0
  %30 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 32
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2
  %33 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 35
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp ne i8 %34, 0
  switch i32 %1, label %190 [
    i32 0, label %36
    i32 1, label %46
    i32 2, label %75
    i32 3, label %133
    i32 4, label %135
    i32 5, label %138
    i32 7, label %142
    i32 8, label %146
    i32 9, label %150
    i32 10, label %154
    i32 11, label %158
    i32 12, label %162
    i32 13, label %166
    i32 14, label %170
    i32 23, label %191
    i32 15, label %176
    i32 16, label %179
    i32 17, label %184
    i32 18, label %185
    i32 19, label %186
    i32 20, label %187
    i32 21, label %188
    i32 22, label %189
  ]

36:                                               ; preds = %27
  %37 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 3
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %191, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 30, i32 0, i32 0
  %42 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %41, align 8
  %43 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 30, i32 0, i32 1
  %44 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %43, align 8
  %45 = icmp ne %"class.mojo::StructPtr"* %42, %44
  br label %191

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp ne i32 %48, 0
  %50 = xor i1 %16, true
  %51 = or i1 %49, %50
  br i1 %51, label %59, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 19
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %52
  %57 = xor i1 %35, true
  %58 = and i1 %29, %57
  br label %59

59:                                               ; preds = %56, %46, %52
  %60 = phi i1 [ false, %52 ], [ false, %46 ], [ %58, %56 ]
  %61 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 1
  %62 = bitcast %class.GURL* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  br label %71

69:                                               ; preds = %59
  %70 = zext i8 %64 to i64
  br label %71

71:                                               ; preds = %66, %69
  %72 = phi i64 [ %68, %66 ], [ %70, %69 ]
  %73 = icmp ne i64 %72, 0
  %74 = and i1 %60, %73
  ret i1 %74

75:                                               ; preds = %27
  br i1 %8, label %76, label %79

76:                                               ; preds = %75
  %77 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  br label %81

79:                                               ; preds = %75
  %80 = zext i8 %7 to i64
  br label %81

81:                                               ; preds = %79, %76
  %82 = phi i64 [ %78, %76 ], [ %80, %79 ]
  %83 = icmp ne i64 %82, 0
  br i1 %21, label %84, label %87

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  br label %89

87:                                               ; preds = %81
  %88 = zext i8 %20 to i64
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi i64 [ %86, %84 ], [ %88, %87 ]
  %91 = icmp eq i64 %90, 0
  %92 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp ne i32 %93, 0
  %95 = or i1 %83, %94
  br i1 %95, label %103, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 19
  %98 = load i8, i8* %97, align 1, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = xor i1 %35, true
  %102 = and i1 %91, %101
  br label %103

103:                                              ; preds = %89, %96, %100
  %104 = phi i1 [ false, %96 ], [ false, %89 ], [ %102, %100 ]
  %105 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 1
  %106 = bitcast %class.GURL* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  br label %115

113:                                              ; preds = %103
  %114 = zext i8 %108 to i64
  br label %115

115:                                              ; preds = %110, %113
  %116 = phi i64 [ %112, %110 ], [ %114, %113 ]
  %117 = icmp ne i64 %116, 0
  %118 = and i1 %104, %117
  br i1 %118, label %119, label %191

119:                                              ; preds = %115
  %120 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 2
  %121 = bitcast %class.GURL* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %119
  %126 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  br label %130

128:                                              ; preds = %119
  %129 = zext i8 %123 to i64
  br label %130

130:                                              ; preds = %125, %128
  %131 = phi i64 [ %127, %125 ], [ %129, %128 ]
  %132 = icmp ne i64 %131, 0
  br label %191

133:                                              ; preds = %27
  %134 = xor i1 %16, true
  br label %191

135:                                              ; preds = %27
  %136 = xor i1 %29, true
  %137 = and i1 %16, %136
  br label %191

138:                                              ; preds = %27
  %139 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 1
  br label %191

142:                                              ; preds = %27
  %143 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 1
  br label %191

146:                                              ; preds = %27
  %147 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, 2
  br label %191

150:                                              ; preds = %27
  %151 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 3
  br label %191

154:                                              ; preds = %27
  %155 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, 4
  br label %191

158:                                              ; preds = %27
  %159 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 6
  br label %191

162:                                              ; preds = %27
  %163 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 5
  br label %191

166:                                              ; preds = %27
  %167 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 19
  %168 = load i8, i8* %167, align 1, !range !2
  %169 = icmp ne i8 %168, 0
  br label %191

170:                                              ; preds = %27
  %171 = xor i1 %29, true
  %172 = getelementptr inbounds %class.ContextMenuContentType, %class.ContextMenuContentType* %0, i64 0, i32 1, i32 0, i32 19
  %173 = load i8, i8* %172, align 1, !range !2
  %174 = icmp eq i8 %173, 0
  %175 = and i1 %174, %171
  br label %191

176:                                              ; preds = %27
  %177 = or i1 %29, %32
  %178 = xor i1 %177, true
  br label %191

179:                                              ; preds = %27
  br i1 %29, label %180, label %191

180:                                              ; preds = %179
  %181 = getelementptr inbounds %"struct.content::ContextMenuParams", %"struct.content::ContextMenuParams"* %3, i64 0, i32 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 1
  br label %191

184:                                              ; preds = %27
  br label %191

185:                                              ; preds = %27
  br label %191

186:                                              ; preds = %27
  br label %191

187:                                              ; preds = %27
  br label %191

188:                                              ; preds = %27
  br label %191

189:                                              ; preds = %27
  br label %191

190:                                              ; preds = %27
  br label %191

191:                                              ; preds = %180, %179, %27, %115, %130, %40, %36, %190, %189, %188, %187, %186, %185, %184, %176, %170, %166, %162, %158, %154, %150, %146, %142, %138, %135, %133
  %192 = phi i1 [ false, %190 ], [ %32, %189 ], [ true, %188 ], [ false, %187 ], [ true, %186 ], [ false, %185 ], [ true, %184 ], [ %178, %176 ], [ %175, %170 ], [ %169, %166 ], [ %165, %162 ], [ %161, %158 ], [ %157, %154 ], [ %153, %150 ], [ %149, %146 ], [ %145, %142 ], [ %141, %138 ], [ %137, %135 ], [ %134, %133 ], [ false, %36 ], [ %45, %40 ], [ false, %115 ], [ %132, %130 ], [ %35, %27 ], [ true, %179 ], [ %183, %180 ]
  ret i1 %192
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
