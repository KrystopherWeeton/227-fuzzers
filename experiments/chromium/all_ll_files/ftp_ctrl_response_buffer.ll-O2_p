; ModuleID = '../../net/ftp/ftp_ctrl_response_buffer.cc'
source_filename = "../../net/ftp/ftp_ctrl_response_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::FtpCtrlResponse" = type { i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.net::FtpCtrlResponseBuffer" = type { %"class.std::__1::basic_string", %"class.std::__1::queue", i8, %"class.std::__1::basic_string", %"struct.net::FtpCtrlResponse", %"class.std::__1::queue.6", %"class.net::NetLogWithSource" }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, i64 }
%"struct.net::FtpCtrlResponseBuffer::ParsedLine" = type { i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::queue.6" = type { %"class.base::circular_deque.7" }
%"class.base::circular_deque.7" = type { %"class.base::internal::VectorBuffer.8", i64, i64 }
%"class.base::internal::VectorBuffer.8" = type { %"struct.net::FtpCtrlResponse"*, i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.11" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.18" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.28" }
%"union.absl::variant_internal::DestructibleUnionImpl.28" = type { %"union.absl::variant_internal::DestructibleUnionImpl.29" }
%"union.absl::variant_internal::DestructibleUnionImpl.29" = type { %"union.absl::variant_internal::DestructibleUnionImpl.30" }
%"union.absl::variant_internal::DestructibleUnionImpl.30" = type { %"union.absl::variant_internal::DestructibleUnionImpl.31" }
%"union.absl::variant_internal::DestructibleUnionImpl.31" = type { %"class.std::__1::basic_string" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE13DestructRangeIS3_Li0EEEvPS3_S6_ = comdat any

$_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN3net15FtpCtrlResponseEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeIS4_Li0EEEvPS4_S7_ = comdat any

$_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN3net21FtpCtrlResponseBuffer10ParsedLineEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE12emplace_backIJRKS2_EEERS2_DpOT_ = comdat any

$_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_ = comdat any

$_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_ = comdat any

$_ZNK4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm = comdat any

$_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE12emplace_backIJS3_EEERS3_DpOT_ = comdat any

$_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm = comdat any

@_ZN3net15FtpCtrlResponse18kInvalidStatusCodeE = hidden local_unnamed_addr constant i32 -1, align 4
@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"status_code\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"lines\00", align 1

@_ZN3net15FtpCtrlResponseC1Ev = hidden unnamed_addr alias void (%"struct.net::FtpCtrlResponse"*), void (%"struct.net::FtpCtrlResponse"*)* @_ZN3net15FtpCtrlResponseC2Ev
@_ZN3net15FtpCtrlResponseC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"*), void (%"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"*)* @_ZN3net15FtpCtrlResponseC2ERKS0_
@_ZN3net15FtpCtrlResponseD1Ev = hidden unnamed_addr alias void (%"struct.net::FtpCtrlResponse"*), void (%"struct.net::FtpCtrlResponse"*)* @_ZN3net15FtpCtrlResponseD2Ev
@_ZN3net21FtpCtrlResponseBufferC1ERKNS_16NetLogWithSourceE = hidden unnamed_addr alias void (%"class.net::FtpCtrlResponseBuffer"*, %"class.net::NetLogWithSource"*), void (%"class.net::FtpCtrlResponseBuffer"*, %"class.net::NetLogWithSource"*)* @_ZN3net21FtpCtrlResponseBufferC2ERKNS_16NetLogWithSourceE
@_ZN3net21FtpCtrlResponseBufferD1Ev = hidden unnamed_addr alias void (%"class.net::FtpCtrlResponseBuffer"*), void (%"class.net::FtpCtrlResponseBuffer"*)* @_ZN3net21FtpCtrlResponseBufferD2Ev
@_ZN3net21FtpCtrlResponseBuffer10ParsedLineC1Ev = hidden unnamed_addr alias void (%"struct.net::FtpCtrlResponseBuffer::ParsedLine"*), void (%"struct.net::FtpCtrlResponseBuffer::ParsedLine"*)* @_ZN3net21FtpCtrlResponseBuffer10ParsedLineC2Ev
@_ZN3net21FtpCtrlResponseBuffer10ParsedLineC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*), void (%"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*)* @_ZN3net21FtpCtrlResponseBuffer10ParsedLineC2ERKS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpCtrlResponseC2Ev(%"struct.net::FtpCtrlResponse"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpCtrlResponseC2ERKS0_(%"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 24
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %58, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %15, 768614336404564650
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #12
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #13
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %15
  %28 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %27, %"class.std::__1::basic_string"** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %32 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = icmp eq %"class.std::__1::basic_string"* %30, %31
  br i1 %34, label %56, label %35

35:                                               ; preds = %21, %50
  %36 = phi %"class.std::__1::basic_string"* [ %52, %50 ], [ %23, %21 ]
  %37 = phi %"class.std::__1::basic_string"* [ %51, %50 ], [ %30, %21 ]
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #11
  br label %50

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %36, i8* %47, i64 %49) #11
  br label %50

50:                                               ; preds = %45, %42
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 1
  %53 = icmp eq %"class.std::__1::basic_string"* %51, %31
  br i1 %53, label %54, label %35

54:                                               ; preds = %50
  %55 = ptrtoint %"class.std::__1::basic_string"* %52 to i64
  br label %56

56:                                               ; preds = %54, %21
  %57 = phi i64 [ %33, %21 ], [ %55, %54 ]
  store i64 %57, i64* %32, align 8
  br label %58

58:                                               ; preds = %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpCtrlResponseD2Ev(%"struct.net::FtpCtrlResponse"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21FtpCtrlResponseBufferC2ERKNS_16NetLogWithSourceE(%"class.net::FtpCtrlResponseBuffer"* nocapture, %"class.net::NetLogWithSource"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4, i32 0
  %6 = bitcast %"class.net::FtpCtrlResponseBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 57, i1 false)
  store i32 -1, i32* %5, align 8
  %7 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4, i32 1
  %8 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 6
  %9 = bitcast %"class.net::NetLogWithSource"* %8 to i8*
  %10 = bitcast %"class.net::NetLogWithSource"* %1 to i8*
  %11 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 56, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21FtpCtrlResponseBufferD2Ev(%"class.net::FtpCtrlResponseBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 6
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %2) #11
  %3 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::queue.6", %"class.std::__1::queue.6"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 5, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE13DestructRangeEmm(%"class.base::circular_deque.7"* %4, i64 %6, i64 %8) #11
  %9 = bitcast %"class.std::__1::queue.6"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #11
  %11 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %17 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.std::__1::basic_string"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.std::__1::basic_string"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %11 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1, i32 0, i32 2
  %52 = load i64, i64* %51, align 8
  tail call void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeEmm(%"class.base::circular_deque"* %48, i64 %50, i64 %52) #11
  %53 = bitcast %"class.std::__1::queue"* %47 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @free(i8* %54) #11
  %55 = bitcast %"class.net::FtpCtrlResponseBuffer"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %46
  %60 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %46, %59
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net21FtpCtrlResponseBuffer11ConsumeDataEPKci(%"class.net::FtpCtrlResponseBuffer"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.net::FtpCtrlResponseBuffer::ParsedLine", align 8
  %5 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 0
  %6 = sext i32 %2 to i64
  %7 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %5, i8* %1, i64 %6) #11
  tail call void @_ZN3net21FtpCtrlResponseBuffer26ExtractFullLinesFromBufferEv(%"class.net::FtpCtrlResponseBuffer"* %0)
  %8 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %253, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %8, i64 0, i32 0, i32 0
  %17 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4 to i64*
  %18 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 4
  %19 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %20 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 5
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %22 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %8, i64 0, i32 0
  %23 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 2
  %26 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 3
  %27 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 3
  %30 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4, i32 1
  %38 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %39 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"** %38 to i64*
  %46 = icmp eq %"class.std::__1::basic_string"* %29, %18
  %47 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %4, i64 0, i32 1
  %49 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 5, i32 0
  br label %50

50:                                               ; preds = %14, %118
  %51 = phi i64 [ %10, %14 ], [ %119, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %52 = call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %16, i64 %51) #11
  %53 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %17, align 8
  %55 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %52, i64 0, i32 4
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %50
  %61 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %61, i64 24, i1 false) #11
  br label %67

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %52, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %18, i8* %64, i64 %66) #11
  br label %67

67:                                               ; preds = %62, %60
  %68 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %52, i64 0, i32 5
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %74, i64 24, i1 false) #11
  br label %80

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %52, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %77, i64 %79) #11
  br label %80

80:                                               ; preds = %73, %75
  %81 = load i64, i64* %9, align 8
  %82 = call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %16, i64 %81) #11
  %83 = load i64, i64* %9, align 8
  %84 = add i64 %83, 1
  %85 = call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %16, i64 %84) #11
  call void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %16, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %82, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %85) #11
  %86 = load i64, i64* %9, align 8
  %87 = add i64 %86, 1
  %88 = load i64, i64* %23, align 8
  %89 = icmp eq i64 %87, %88
  %90 = select i1 %89, i64 0, i64 %87
  store i64 %90, i64* %9, align 8
  call void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %22) #11
  %91 = load i8, i8* %24, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  %93 = load i8, i8* %25, align 2, !range !2
  %94 = icmp ne i8 %93, 0
  br i1 %92, label %184, label %95

95:                                               ; preds = %80
  br i1 %94, label %96, label %100

96:                                               ; preds = %95
  %97 = load i32, i32* %26, align 4
  %98 = load i32, i32* %28, align 8
  %99 = icmp eq i32 %97, %98
  br i1 %99, label %122, label %100

100:                                              ; preds = %96, %95
  %101 = load i8, i8* %31, align 1
  %102 = icmp slt i8 %101, 0
  %103 = load i8*, i8** %32, align 8
  %104 = load i64, i64* %33, align 8
  %105 = zext i8 %101 to i64
  %106 = select i1 %102, i8* %103, i8* %21
  %107 = select i1 %102, i64 %104, i64 %105
  %108 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %29, i8* %106, i64 %107) #11
  %109 = load i8, i8* %31, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %100
  %112 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %112) #13
  br label %113

113:                                              ; preds = %111, %100
  %114 = load i8, i8* %35, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  %117 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %116, %113, %240, %237
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #11
  %119 = load i64, i64* %9, align 8
  %120 = load i64, i64* %11, align 8
  %121 = icmp eq i64 %119, %120
  br i1 %121, label %253, label %50

122:                                              ; preds = %96
  %123 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %124 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %125 = icmp eq %"class.std::__1::basic_string"* %123, %124
  br i1 %125, label %137, label %126

126:                                              ; preds = %122
  %127 = load i8, i8* %41, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  %130 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %42, i64 24, i1 false) #11
  br label %134

131:                                              ; preds = %126
  %132 = load i8*, i8** %43, align 8
  %133 = load i64, i64* %44, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %132, i64 %133) #11
  br label %134

134:                                              ; preds = %131, %129
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 1
  %136 = ptrtoint %"class.std::__1::basic_string"* %135 to i64
  store i64 %136, i64* %45, align 8
  br label %138

137:                                              ; preds = %122
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %37, %"class.std::__1::basic_string"* dereferenceable(24) %29) #11
  br label %138

138:                                              ; preds = %134, %137
  br i1 %46, label %157, label %139

139:                                              ; preds = %138
  %140 = load i8, i8* %41, align 1
  %141 = icmp slt i8 %140, 0
  %142 = load i8, i8* %35, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %141, label %150, label %144

144:                                              ; preds = %139
  br i1 %143, label %146, label %145

145:                                              ; preds = %144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %19, i64 24, i1 false) #11
  br label %157

146:                                              ; preds = %144
  %147 = load i8*, i8** %36, align 8
  %148 = load i64, i64* %47, align 8
  %149 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %147, i64 %148) #11
  br label %157

150:                                              ; preds = %139
  %151 = load i8*, i8** %36, align 8
  %152 = load i64, i64* %47, align 8
  %153 = zext i8 %142 to i64
  %154 = select i1 %143, i8* %151, i8* %19
  %155 = select i1 %143, i64 %152, i64 %153
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %154, i64 %155) #11
  br label %157

157:                                              ; preds = %138, %145, %146, %150
  %158 = load i8, i8* %48, align 1, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %232

160:                                              ; preds = %157
  %161 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %162 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %163 = icmp eq %"class.std::__1::basic_string"* %161, %162
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %41, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %164
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %42, i64 24, i1 false) #11
  br label %172

169:                                              ; preds = %164
  %170 = load i8*, i8** %43, align 8
  %171 = load i64, i64* %44, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %161, i8* %170, i64 %171) #11
  br label %172

172:                                              ; preds = %169, %167
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %174 = ptrtoint %"class.std::__1::basic_string"* %173 to i64
  store i64 %174, i64* %45, align 8
  br label %176

175:                                              ; preds = %160
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %37, %"class.std::__1::basic_string"* dereferenceable(24) %29) #11
  br label %176

176:                                              ; preds = %172, %175
  %177 = call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE12emplace_backIJRKS2_EEERS2_DpOT_(%"class.base::circular_deque.7"* %49, %"struct.net::FtpCtrlResponse"* dereferenceable(32) %27) #11
  store i32 -1, i32* %28, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %37, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null) #11
  %178 = load i8, i8* %41, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = load i8*, i8** %43, align 8
  store i8 0, i8* %181, align 1
  store i64 0, i64* %44, align 8
  br label %183

182:                                              ; preds = %176
  store i8 0, i8* %42, align 1
  store i8 0, i8* %41, align 1
  br label %183

183:                                              ; preds = %180, %182
  store i8 0, i8* %24, align 8
  br label %232

184:                                              ; preds = %80
  br i1 %94, label %185, label %242

185:                                              ; preds = %184
  %186 = load i32, i32* %26, align 4
  store i32 %186, i32* %28, align 8
  %187 = load i8, i8* %48, align 1, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %209, label %189

189:                                              ; preds = %185
  br i1 %46, label %208, label %190

190:                                              ; preds = %189
  %191 = load i8, i8* %41, align 1
  %192 = icmp slt i8 %191, 0
  %193 = load i8, i8* %35, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %192, label %201, label %195

195:                                              ; preds = %190
  br i1 %194, label %197, label %196

196:                                              ; preds = %195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %19, i64 24, i1 false) #11
  br label %208

197:                                              ; preds = %195
  %198 = load i8*, i8** %36, align 8
  %199 = load i64, i64* %47, align 8
  %200 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %198, i64 %199) #11
  br label %208

201:                                              ; preds = %190
  %202 = load i8*, i8** %36, align 8
  %203 = load i64, i64* %47, align 8
  %204 = zext i8 %193 to i64
  %205 = select i1 %194, i8* %202, i8* %19
  %206 = select i1 %194, i64 %203, i64 %204
  %207 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %205, i64 %206) #11
  br label %208

208:                                              ; preds = %189, %196, %197, %201
  store i8 1, i8* %24, align 8
  br label %232

209:                                              ; preds = %185
  %210 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %211 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %212 = icmp eq %"class.std::__1::basic_string"* %210, %211
  br i1 %212, label %224, label %213

213:                                              ; preds = %209
  %214 = load i8, i8* %35, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast %"class.std::__1::basic_string"* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %19, i64 24, i1 false) #11
  br label %221

218:                                              ; preds = %213
  %219 = load i8*, i8** %36, align 8
  %220 = load i64, i64* %47, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %210, i8* %219, i64 %220) #11
  br label %221

221:                                              ; preds = %218, %216
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 1
  %223 = ptrtoint %"class.std::__1::basic_string"* %222 to i64
  store i64 %223, i64* %45, align 8
  br label %225

224:                                              ; preds = %209
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %37, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %225

225:                                              ; preds = %221, %224
  %226 = call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE12emplace_backIJRKS2_EEERS2_DpOT_(%"class.base::circular_deque.7"* %49, %"struct.net::FtpCtrlResponse"* dereferenceable(32) %27) #11
  store i32 -1, i32* %28, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %37, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null) #11
  %227 = load i8, i8* %41, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %225
  %230 = load i8*, i8** %43, align 8
  store i8 0, i8* %230, align 1
  store i64 0, i64* %44, align 8
  br label %232

231:                                              ; preds = %225
  store i8 0, i8* %42, align 1
  store i8 0, i8* %41, align 1
  br label %232

232:                                              ; preds = %231, %229, %183, %208, %157
  %233 = load i8, i8* %31, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %232
  %236 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %236) #13
  br label %237

237:                                              ; preds = %235, %232
  %238 = load i8, i8* %35, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %118

240:                                              ; preds = %237
  %241 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %241) #13
  br label %118

242:                                              ; preds = %184
  %243 = load i8, i8* %31, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %242
  %246 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %246) #13
  br label %247

247:                                              ; preds = %245, %242
  %248 = load i8, i8* %35, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %247
  %251 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %251) #13
  br label %252

252:                                              ; preds = %247, %250
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #11
  br label %253

253:                                              ; preds = %118, %3, %252
  %254 = phi i32 [ -320, %252 ], [ 0, %3 ], [ 0, %118 ]
  ret i32 %254
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21FtpCtrlResponseBuffer26ExtractFullLinesFromBufferEv(%"class.net::FtpCtrlResponseBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::FtpCtrlResponseBuffer::ParsedLine", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 0
  %5 = bitcast %"class.net::FtpCtrlResponseBuffer"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.net::FtpCtrlResponseBuffer"* %0 to i8*
  %9 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %2, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %12 = bitcast %"class.net::FtpCtrlResponseBuffer"* %0 to %"class.std::__1::allocator"*
  %13 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %2, i64 0, i32 5
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %2, i64 0, i32 4
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %87, %1
  %26 = phi i32 [ 0, %1 ], [ %88, %87 ]
  %27 = phi i64 [ 0, %1 ], [ %89, %87 ]
  %28 = load i8, i8* %6, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = load i64, i64* %7, align 8
  br label %34

32:                                               ; preds = %25
  %33 = zext i8 %28 to i64
  br label %34

34:                                               ; preds = %30, %32
  %35 = phi i64 [ %31, %30 ], [ %33, %32 ]
  %36 = icmp ult i64 %27, %35
  br i1 %36, label %46, label %37

37:                                               ; preds = %34
  %38 = icmp eq i32 %26, -1
  br i1 %38, label %39, label %43

39:                                               ; preds = %37
  br i1 %29, label %40, label %42

40:                                               ; preds = %39
  %41 = load i8*, i8** %9, align 8
  store i8 0, i8* %41, align 1
  store i64 0, i64* %7, align 8
  br label %45

42:                                               ; preds = %39
  store i8 0, i8* %8, align 1
  store i8 0, i8* %6, align 1
  br label %45

43:                                               ; preds = %37
  %44 = sext i32 %26 to i64
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %4, i64 0, i64 %44) #11
  br label %45

45:                                               ; preds = %40, %42, %43
  ret void

46:                                               ; preds = %34
  %47 = icmp eq i64 %27, 0
  br i1 %47, label %87, label %48

48:                                               ; preds = %46
  %49 = add i64 %27, -1
  br i1 %29, label %50, label %52

50:                                               ; preds = %48
  %51 = load i8*, i8** %9, align 8
  br label %52

52:                                               ; preds = %48, %50
  %53 = phi i8* [ %51, %50 ], [ %8, %48 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %49
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 13
  br i1 %56, label %57, label %87

57:                                               ; preds = %52
  br i1 %29, label %58, label %60

58:                                               ; preds = %57
  %59 = load i8*, i8** %9, align 8
  br label %60

60:                                               ; preds = %57, %58
  %61 = phi i8* [ %59, %58 ], [ %8, %57 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %27
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 10
  br i1 %64, label %65, label %87

65:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %66 = sext i32 %26 to i64
  %67 = xor i64 %66, -1
  %68 = add i64 %27, %67
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %4, i64 %66, i64 %68, %"class.std::__1::allocator"* dereferenceable(1) %12) #11
  call void @_ZN3net21FtpCtrlResponseBuffer9ParseLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %69 = call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE12emplace_backIJS3_EEERS3_DpOT_(%"class.base::circular_deque"* %13, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* nonnull dereferenceable(56) %2) #11
  %70 = load i8, i8* %16, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %65
  %73 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %72, %65
  %75 = load i8, i8* %20, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %78) #13
  br label %79

79:                                               ; preds = %74, %77
  %80 = load i8, i8* %23, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #11
  %85 = trunc i64 %27 to i32
  %86 = add i32 %85, 1
  br label %87

87:                                               ; preds = %46, %52, %60, %84
  %88 = phi i32 [ %86, %84 ], [ %26, %60 ], [ %26, %52 ], [ %26, %46 ]
  %89 = add i64 %27, 1
  br label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21FtpCtrlResponseBuffer11PopResponseEv(%"struct.net::FtpCtrlResponse"* noalias sret, %"class.net::FtpCtrlResponseBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ListValue", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.base::DictionaryValue", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = bitcast %"struct.net::FtpCtrlResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %1, i64 0, i32 5
  %9 = getelementptr inbounds %"class.std::__1::queue.6", %"class.std::__1::queue.6"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %1, i64 0, i32 5, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %9, i64 %11) #11
  %13 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %12, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %12, i64 0, i32 1
  %18 = bitcast %"class.std::__1::vector"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11
  %19 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %12, i64 0, i32 1, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %17 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = sdiv exact i64 %24, 24
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %68, label %27

27:                                               ; preds = %2
  %28 = icmp ugt i64 %25, 768614336404564650
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector"* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #12
  unreachable

31:                                               ; preds = %27
  %32 = tail call i8* @_Znwm(i64 %24) #13
  %33 = bitcast i8* %32 to %"class.std::__1::basic_string"*
  %34 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i8**
  store i8* %32, i8** %35, align 8
  %36 = bitcast %"class.std::__1::vector"* %16 to i8**
  store i8* %32, i8** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %25
  %38 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %37, %"class.std::__1::basic_string"** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %42 = bitcast %"class.std::__1::basic_string"** %34 to i64*
  %43 = ptrtoint i8* %32 to i64
  %44 = icmp eq %"class.std::__1::basic_string"* %40, %41
  br i1 %44, label %66, label %45

45:                                               ; preds = %31, %60
  %46 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %33, %31 ]
  %47 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %40, %31 ]
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #11
  br label %60

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %46, i8* %57, i64 %59) #11
  br label %60

60:                                               ; preds = %55, %52
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %41
  br i1 %63, label %64, label %45

64:                                               ; preds = %60
  %65 = ptrtoint %"class.std::__1::basic_string"* %62 to i64
  br label %66

66:                                               ; preds = %64, %31
  %67 = phi i64 [ %43, %31 ], [ %65, %64 ]
  store i64 %67, i64* %42, align 8
  br label %68

68:                                               ; preds = %2, %66
  %69 = getelementptr inbounds %"class.std::__1::queue.6", %"class.std::__1::queue.6"* %8, i64 0, i32 0
  %70 = load i64, i64* %10, align 8
  %71 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %9, i64 %70) #11
  %72 = load i64, i64* %10, align 8
  %73 = add i64 %72, 1
  %74 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %9, i64 %73) #11
  tail call void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer.8"* %9, %"struct.net::FtpCtrlResponse"* %71, %"struct.net::FtpCtrlResponse"* %74) #11
  %75 = load i64, i64* %10, align 8
  %76 = add i64 %75, 1
  %77 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %76, %78
  %80 = select i1 %79, i64 0, i64 %76
  store i64 %80, i64* %10, align 8
  tail call void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.7"* %69) #11
  %81 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %1, i64 0, i32 6, i32 1
  %82 = load %"class.net::NetLog"*, %"class.net::NetLog"** %81, align 8
  %83 = getelementptr inbounds %"class.net::FtpCtrlResponseBuffer", %"class.net::FtpCtrlResponseBuffer"* %1, i64 0, i32 6, i32 0
  %84 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %82, i64 0, i32 3
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %121, label %87, !prof !3

87:                                               ; preds = %68
  %88 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #11
  %89 = bitcast %"class.base::ListValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %89) #11, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 32, i1 false) #11, !noalias !4
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %3) #11, !noalias !4
  %90 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1, i32 0, i32 0
  %91 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %90, align 8, !noalias !4
  %92 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %0, i64 0, i32 1, i32 0, i32 1
  %93 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %92, align 8, !noalias !4
  %94 = icmp eq %"class.std::__1::basic_string"* %91, %93
  br i1 %94, label %114, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %3, i64 0, i32 0
  %97 = bitcast %"class.base::Value"* %4 to i8*
  br label %98

98:                                               ; preds = %98, %95
  %99 = phi %"class.std::__1::basic_string"* [ %91, %95 ], [ %112, %98 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #11, !noalias !4
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  %107 = select i1 %103, i8* %105, i8* %106
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = zext i8 %102 to i64
  %111 = select i1 %103, i64 %109, i64 %110
  call void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull sret %4, i8* %107, i64 %111) #11
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %96, %"class.base::Value"* nonnull dereferenceable(32) %4) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #11, !noalias !4
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 1
  %113 = icmp eq %"class.std::__1::basic_string"* %112, %93
  br i1 %113, label %114, label %98

114:                                              ; preds = %98, %87
  %115 = bitcast %"class.base::DictionaryValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %115) #11, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 32, i1 false) #11, !noalias !4
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %5) #11, !noalias !4
  %116 = load i32, i32* %13, align 8, !noalias !4
  %117 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11, i32 %116) #11, !noalias !4
  %118 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %5, i64 0, i32 0
  %119 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %3, i64 0, i32 0
  %120 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %118, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %119) #11, !noalias !4
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %6, %"class.base::Value"* nonnull dereferenceable(32) %118) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %115) #11, !noalias !4
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %119) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %89) #11, !noalias !4
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %82, i32 390, %"struct.net::NetLogSource"* dereferenceable(16) %83, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %6) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #11
  br label %121

121:                                              ; preds = %68, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21FtpCtrlResponseBuffer10ParsedLineC2Ev(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 3
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21FtpCtrlResponseBuffer10ParsedLineC2ERKS1_(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1 to i64*
  %4 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 4
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #11
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %17, i64 %19) #11
  br label %20

20:                                               ; preds = %12, %15
  %21 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 5
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #11
  br label %35

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %32, i64 %34) #11
  br label %35

35:                                               ; preds = %27, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21FtpCtrlResponseBuffer9ParseLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 56, i1 false)
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 3
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #11
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp ugt i64 %18, 2
  br i1 %19, label %20, label %60

20:                                               ; preds = %2
  %21 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %14, i8* %23, i8* %24
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 3, i64* %27, align 8
  %28 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, i32 0, i32* %8, i32* null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br i1 %28, label %29, label %34

29:                                               ; preds = %20
  %30 = load i32, i32* %8, align 4
  %31 = add i32 %30, -100
  %32 = icmp ult i32 %31, 500
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %5, align 8
  br label %36

34:                                               ; preds = %20
  %35 = load i8, i8* %5, align 8
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8 [ %35, %34 ], [ %33, %29 ]
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %36
  %40 = load i8, i8* %12, align 1
  %41 = icmp slt i8 %40, 0
  %42 = load i64, i64* %15, align 8
  %43 = zext i8 %40 to i64
  %44 = select i1 %41, i64 %42, i64 %43
  %45 = icmp ugt i64 %44, 3
  br i1 %45, label %46, label %60

46:                                               ; preds = %39
  %47 = load i8*, i8** %22, align 8
  %48 = select i1 %41, i8* %47, i8* %24
  %49 = getelementptr inbounds i8, i8* %48, i64 3
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 32
  br i1 %51, label %52, label %53

52:                                               ; preds = %46
  store i8 1, i8* %7, align 2
  br label %63

53:                                               ; preds = %46
  %54 = load i8*, i8** %22, align 8
  %55 = select i1 %41, i8* %54, i8* %24
  %56 = getelementptr inbounds i8, i8* %55, i64 3
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 45
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  store i8 1, i8* %7, align 2
  store i8 1, i8* %6, align 1
  br label %63

60:                                               ; preds = %39, %36, %53, %2
  %61 = load i8, i8* %7, align 2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %59, %52, %60
  %64 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 4, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %65) #11
  %66 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %70, %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %64, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  br label %100

74:                                               ; preds = %60
  %75 = icmp eq %"class.std::__1::basic_string"* %9, %1
  br i1 %75, label %100, label %76

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i8, i8* %12, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %80, label %91, label %83

83:                                               ; preds = %76
  br i1 %82, label %86, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %85, i64 24, i1 false) #11
  br label %100

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = load i64, i64* %15, align 8
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %88, i64 %89) #11
  br label %100

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = load i64, i64* %15, align 8
  %95 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %96 = zext i8 %81 to i64
  %97 = select i1 %82, i8* %93, i8* %95
  %98 = select i1 %82, i64 %94, i64 %96
  %99 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %97, i64 %98) #11
  br label %100

100:                                              ; preds = %91, %86, %84, %74, %73
  %101 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, i64 0, i32 5
  %102 = icmp eq %"class.std::__1::basic_string"* %101, %1
  br i1 %102, label %128, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i8, i8* %12, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %107, label %119, label %110

110:                                              ; preds = %103
  br i1 %109, label %114, label %111

111:                                              ; preds = %110
  %112 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false) #11
  br label %128

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = load i64, i64* %15, align 8
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %101, i8* %116, i64 %117) #11
  br label %128

119:                                              ; preds = %103
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = load i64, i64* %15, align 8
  %123 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %124 = zext i8 %108 to i64
  %125 = select i1 %109, i8* %121, i8* %123
  %126 = select i1 %109, i64 %122, i64 %124
  %127 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %101, i8* %125, i64 %126) #11
  br label %128

128:                                              ; preds = %100, %111, %114, %119
  ret void
}

declare zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* dereferenceable(16), i32, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE13DestructRangeEmm(%"class.base::circular_deque.7"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer.8"* %7, %"struct.net::FtpCtrlResponse"* %8, %"struct.net::FtpCtrlResponse"* %12)
  %13 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.net::FtpCtrlResponse"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer.8"* %7, %"struct.net::FtpCtrlResponse"* %15, %"struct.net::FtpCtrlResponse"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer.8"*, %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.net::FtpCtrlResponse"*, align 8
  %6 = alloca %"struct.net::FtpCtrlResponse"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.net::FtpCtrlResponse"* %1, %"struct.net::FtpCtrlResponse"** %5, align 8
  store %"struct.net::FtpCtrlResponse"* %2, %"struct.net::FtpCtrlResponse"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.net::FtpCtrlResponse"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.net::FtpCtrlResponse"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3net15FtpCtrlResponseEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  %17 = bitcast %"struct.net::FtpCtrlResponse"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3net15FtpCtrlResponseEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %26 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %5, align 8
  %27 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %6, align 8
  %28 = icmp eq %"struct.net::FtpCtrlResponse"* %26, %27
  br i1 %28, label %65, label %29

29:                                               ; preds = %25, %60
  %30 = phi %"struct.net::FtpCtrlResponse"* [ %61, %60 ], [ %27, %25 ]
  %31 = phi %"struct.net::FtpCtrlResponse"* [ %63, %60 ], [ %26, %25 ]
  %32 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %31, i64 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %35 = icmp eq %"class.std::__1::basic_string"* %34, null
  br i1 %35, label %60, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %31, i64 0, i32 1, i32 0, i32 1
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %40 = icmp eq %"class.std::__1::basic_string"* %39, %34
  br i1 %40, label %56, label %41

41:                                               ; preds = %36, %51
  %42 = phi %"class.std::__1::basic_string"* [ %43, %51 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 -1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %48, %41
  %52 = icmp eq %"class.std::__1::basic_string"* %43, %34
  br i1 %52, label %53, label %41

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %32 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %36
  %57 = phi i8* [ %55, %53 ], [ %37, %36 ]
  store %"class.std::__1::basic_string"* %34, %"class.std::__1::basic_string"** %38, align 8
  call void @_ZdlPv(i8* %57) #13
  %58 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %5, align 8
  %59 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %6, align 8
  br label %60

60:                                               ; preds = %29, %56
  %61 = phi %"struct.net::FtpCtrlResponse"* [ %30, %29 ], [ %59, %56 ]
  %62 = phi %"struct.net::FtpCtrlResponse"* [ %31, %29 ], [ %58, %56 ]
  %63 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %62, i64 1
  store %"struct.net::FtpCtrlResponse"* %63, %"struct.net::FtpCtrlResponse"** %5, align 8
  %64 = icmp eq %"struct.net::FtpCtrlResponse"* %63, %61
  br i1 %64, label %65, label %29

65:                                               ; preds = %60, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %0, i64 0, i32 0
  %24 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %24, i64 %1
  ret %"struct.net::FtpCtrlResponse"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN3net15FtpCtrlResponseEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %8, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %12)
  %13 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"* %7, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %15, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, align 8
  %6 = alloca %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %5, align 8
  store %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %2, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3net21FtpCtrlResponseBuffer10ParsedLineEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3net21FtpCtrlResponseBuffer10ParsedLineEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %26 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %5, align 8
  %27 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %6, align 8
  %28 = icmp eq %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %26, %27
  br i1 %28, label %53, label %29

29:                                               ; preds = %25, %48
  %30 = phi %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* [ %50, %48 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %30, i64 0, i32 5
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %36, %29
  %40 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %30, i64 0, i32 4
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %39, %45
  %49 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %5, align 8
  %50 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %49, i64 1
  store %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %50, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %5, align 8
  %51 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %6, align 8
  %52 = icmp eq %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %50, %51
  br i1 %52, label %53, label %29

53:                                               ; preds = %48, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %24, i64 %1
  ret %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %25
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN3net21FtpCtrlResponseBuffer10ParsedLineEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #11
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #11
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #11
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #11
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #13
  %134 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #11
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #12
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #13
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #11
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #11
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 56) #11
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #11
  br i1 %31, label %32, label %33, !prof !9

32:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #11
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #11
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #11
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %11, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %12, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %19, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %20, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %24, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %25, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0 to i64
  %6 = icmp ult %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %2 to i64
  %9 = ptrtoint %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #11
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !9

16:                                               ; preds = %7
  tail call void @llvm.trap() #11
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0)) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %0, %1
  br i1 %24, label %76, label %25

25:                                               ; preds = %23, %72
  %26 = phi %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* [ %74, %72 ], [ %2, %23 ]
  %27 = phi %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* [ %73, %72 ], [ %0, %23 ]
  %28 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %27 to i64*
  %29 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %26 to i64*
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %26, i64 0, i32 4
  %32 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %27, i64 0, i32 4
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %25
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #11
  br label %45

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %27, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %42, i64 %44) #11
  br label %45

45:                                               ; preds = %40, %37
  %46 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %26, i64 0, i32 5
  %47 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %27, i64 0, i32 5
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #11
  br label %60

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %27, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %46, i8* %57, i64 %59) #11
  br label %60

60:                                               ; preds = %52, %55
  %61 = load i8, i8* %49, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %63, %60
  %67 = load i8, i8* %34, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %66, %69
  %73 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %27, i64 1
  %74 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %26, i64 1
  %75 = icmp eq %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %73, %1
  br i1 %75, label %76, label %25

76:                                               ; preds = %72, %23
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE12emplace_backIJRKS2_EEERS2_DpOT_(%"class.base::circular_deque.7"*, %"struct.net::FtpCtrlResponse"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.7"* %0, i64 1)
  %3 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %3, i64 %5)
  %7 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %6, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %1, i64 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %1, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 24
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %62, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 768614336404564650
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #12
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #13
  %27 = bitcast i8* %26 to %"class.std::__1::basic_string"*
  %28 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %6, i64 0, i32 1, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %19
  %32 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %6, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %31, %"class.std::__1::basic_string"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %36 = bitcast %"class.std::__1::basic_string"** %28 to i64*
  %37 = ptrtoint i8* %26 to i64
  %38 = icmp eq %"class.std::__1::basic_string"* %34, %35
  br i1 %38, label %60, label %39

39:                                               ; preds = %25, %54
  %40 = phi %"class.std::__1::basic_string"* [ %56, %54 ], [ %27, %25 ]
  %41 = phi %"class.std::__1::basic_string"* [ %55, %54 ], [ %34, %25 ]
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #11
  br label %54

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %40, i8* %51, i64 %53) #11
  br label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 1
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 1
  %57 = icmp eq %"class.std::__1::basic_string"* %55, %35
  br i1 %57, label %58, label %39

58:                                               ; preds = %54
  %59 = ptrtoint %"class.std::__1::basic_string"* %56 to i64
  br label %60

60:                                               ; preds = %58, %25
  %61 = phi i64 [ %37, %25 ], [ %59, %58 ]
  store i64 %61, i64* %36, align 8
  br label %62

62:                                               ; preds = %2, %60
  %63 = load i64, i64* %4, align 8
  %64 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, -1
  %67 = icmp eq i64 %63, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %62
  store i64 0, i64* %4, align 8
  br label %72

69:                                               ; preds = %62
  %70 = add i64 %63, 1
  store i64 %70, i64* %4, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %68, %69
  br label %73

73:                                               ; preds = %69, %72
  %74 = phi i64 [ %66, %72 ], [ %63, %69 ]
  %75 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZNK4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %3, i64 %74) #11
  ret %"struct.net::FtpCtrlResponse"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.7"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer.8"*
  %5 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 32) #11
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #11
  br i1 %37, label %38, label %39, !prof !9

38:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #11
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer.8"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer.8"* nonnull %4, i64* %5, i64* %7) #11
  %45 = bitcast %"class.base::circular_deque.7"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #11
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque.7"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer.8"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer.8"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %0, i64 %1)
  %12 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %3, i64 0, i32 0
  %14 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"struct.net::FtpCtrlResponse"* %11, %"struct.net::FtpCtrlResponse"* %12, %"struct.net::FtpCtrlResponse"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %0, i64 %1)
  %20 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %3, i64 0, i32 0
  %22 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"struct.net::FtpCtrlResponse"* %19, %"struct.net::FtpCtrlResponse"* %20, %"struct.net::FtpCtrlResponse"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %0, i64 0)
  %25 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %0, i64 %2)
  %26 = tail call dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"struct.net::FtpCtrlResponse"* %24, %"struct.net::FtpCtrlResponse"* %25, %"struct.net::FtpCtrlResponse"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3net15FtpCtrlResponseEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.net::FtpCtrlResponse"* %0 to i64
  %6 = icmp ult %"struct.net::FtpCtrlResponse"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.net::FtpCtrlResponse"* %2 to i64
  %9 = ptrtoint %"struct.net::FtpCtrlResponse"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #11
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !9

16:                                               ; preds = %7
  tail call void @llvm.trap() #11
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0)) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"struct.net::FtpCtrlResponse"* %0, %1
  br i1 %24, label %113, label %25

25:                                               ; preds = %23, %109
  %26 = phi %"struct.net::FtpCtrlResponse"* [ %111, %109 ], [ %2, %23 ]
  %27 = phi %"struct.net::FtpCtrlResponse"* [ %110, %109 ], [ %0, %23 ]
  %28 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %26, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %26, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %27, i64 0, i32 1
  %33 = bitcast %"class.std::__1::vector"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #11
  %34 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %27, i64 0, i32 1, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector"* %32 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = sdiv exact i64 %39, 24
  %41 = icmp eq i64 %39, 0
  %42 = inttoptr i64 %38 to %"class.std::__1::basic_string"*
  br i1 %41, label %85, label %43

43:                                               ; preds = %25
  %44 = icmp ugt i64 %40, 768614336404564650
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector"* %31 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #12
  unreachable

47:                                               ; preds = %43
  %48 = call i8* @_Znwm(i64 %39) #13
  %49 = bitcast i8* %48 to %"class.std::__1::basic_string"*
  %50 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %26, i64 0, i32 1, i32 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"** %50 to i8**
  store i8* %48, i8** %51, align 8
  %52 = bitcast %"class.std::__1::vector"* %31 to i8**
  store i8* %48, i8** %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 %40
  %54 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %53, %"class.std::__1::basic_string"** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %32, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %58 = bitcast %"class.std::__1::basic_string"** %50 to i64*
  %59 = ptrtoint i8* %48 to i64
  %60 = icmp eq %"class.std::__1::basic_string"* %56, %57
  br i1 %60, label %82, label %61

61:                                               ; preds = %47, %76
  %62 = phi %"class.std::__1::basic_string"* [ %78, %76 ], [ %49, %47 ]
  %63 = phi %"class.std::__1::basic_string"* [ %77, %76 ], [ %56, %47 ]
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #11
  br label %76

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %62, i8* %73, i64 %75) #11
  br label %76

76:                                               ; preds = %71, %68
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 1
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 1
  %79 = icmp eq %"class.std::__1::basic_string"* %77, %57
  br i1 %79, label %80, label %61

80:                                               ; preds = %76
  %81 = ptrtoint %"class.std::__1::basic_string"* %78 to i64
  br label %82

82:                                               ; preds = %80, %47
  %83 = phi i64 [ %59, %47 ], [ %81, %80 ]
  store i64 %83, i64* %58, align 8
  %84 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  br label %85

85:                                               ; preds = %25, %82
  %86 = phi %"class.std::__1::basic_string"* [ %42, %25 ], [ %84, %82 ]
  %87 = icmp eq %"class.std::__1::basic_string"* %86, null
  br i1 %87, label %109, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %90, %86
  br i1 %91, label %107, label %92

92:                                               ; preds = %88, %102
  %93 = phi %"class.std::__1::basic_string"* [ %94, %102 ], [ %90, %88 ]
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 -1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %99, %92
  %103 = icmp eq %"class.std::__1::basic_string"* %94, %86
  br i1 %103, label %104, label %92

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::vector"* %32 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %104, %88
  %108 = phi i8* [ %106, %104 ], [ %89, %88 ]
  store %"class.std::__1::basic_string"* %86, %"class.std::__1::basic_string"** %34, align 8
  call void @_ZdlPv(i8* %108) #13
  br label %109

109:                                              ; preds = %85, %107
  %110 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %27, i64 1
  %111 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %26, i64 1
  %112 = icmp eq %"struct.net::FtpCtrlResponse"* %110, %1
  br i1 %112, label %113, label %25

113:                                              ; preds = %109, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.net::FtpCtrlResponse"* @_ZNK4base8internal12VectorBufferIN3net15FtpCtrlResponseEEixEm(%"class.base::internal::VectorBuffer.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %0, i64 0, i32 0
  %24 = load %"struct.net::FtpCtrlResponse"*, %"struct.net::FtpCtrlResponse"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::FtpCtrlResponse", %"struct.net::FtpCtrlResponse"* %24, i64 %1
  ret %"struct.net::FtpCtrlResponse"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.7"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer.8"*
  %4 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 32) #11
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #11
  br i1 %31, label %32, label %33, !prof !9

32:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer.8", %"class.base::internal::VectorBuffer.8"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #11
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque.7", %"class.base::circular_deque.7"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net15FtpCtrlResponseEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer.8"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer.8"* nonnull %3, i64* %11, i64* %13) #11
  %39 = bitcast %"class.base::circular_deque.7"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #11
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque.7"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #3

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* sret, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"*, i8*, i64, i32) local_unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE12emplace_backIJS3_EEERS3_DpOT_(%"class.base::circular_deque"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 1)
  %3 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZN4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %5)
  %7 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1 to i64*
  %8 = bitcast %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %6 to i64*
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %6, i64 0, i32 4
  %11 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #11
  br label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %21, i64 %23) #11
  br label %24

24:                                               ; preds = %19, %16
  %25 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %6, i64 0, i32 5
  %26 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 5
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false) #11
  br label %39

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %36, i64 %38) #11
  br label %39

39:                                               ; preds = %31, %34
  %40 = load i64, i64* %4, align 8
  %41 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  %44 = icmp eq i64 %40, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %39
  store i64 0, i64* %4, align 8
  br label %49

46:                                               ; preds = %39
  %47 = add i64 %40, 1
  store i64 %47, i64* %4, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45, %46
  br label %50

50:                                               ; preds = %46, %49
  %51 = phi i64 [ %43, %49 ], [ %40, %46 ]
  %52 = tail call dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZNK4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %51) #11
  ret %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %52
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 56) #11
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #11
  br i1 %37, label %38, label %39, !prof !9

38:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #11
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3net21FtpCtrlResponseBuffer10ParsedLineEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #11
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #11
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* @_ZNK4base8internal12VectorBufferIN3net21FtpCtrlResponseBuffer10ParsedLineEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, %"struct.net::FtpCtrlResponseBuffer::ParsedLine"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::FtpCtrlResponseBuffer::ParsedLine", %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %24, i64 %1
  ret %"struct.net::FtpCtrlResponseBuffer::ParsedLine"* %25
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN3net12_GLOBAL__N_127NetLogFtpCtrlResponseParamsEPKNS_15FtpCtrlResponseE: argument 0"}
!6 = distinct !{!6, !"_ZN3net12_GLOBAL__N_127NetLogFtpCtrlResponseParamsEPKNS_15FtpCtrlResponseE"}
!7 = distinct !{!7, !8, !"_ZZN3net21FtpCtrlResponseBuffer11PopResponseEvENK3$_0clEv: argument 0"}
!8 = distinct !{!8, !"_ZZN3net21FtpCtrlResponseBuffer11PopResponseEvENK3$_0clEv"}
!9 = !{!"branch_weights", i32 1, i32 2000}
