; ModuleID = '../../third_party/dawn/src/dawn_native/ErrorScope.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/ErrorScope.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::ErrorScope" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.dawn_native::ErrorScopeStack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.dawn_native::ErrorScope"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN11dawn_native10ErrorScopeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZN11dawn_native10ErrorScopeC1EN4wgpu11ErrorFilterE = hidden unnamed_addr alias void (%"class.dawn_native::ErrorScope"*, i32), void (%"class.dawn_native::ErrorScope"*, i32)* @_ZN11dawn_native10ErrorScopeC2EN4wgpu11ErrorFilterE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native10ErrorScopeC2EN4wgpu11ErrorFilterE(%"class.dawn_native::ErrorScope"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 0, i8* %7, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  store i8 0, i8* %8, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native10ErrorScope12GetErrorTypeEv(%"class.dawn_native::ErrorScope"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK11dawn_native10ErrorScope15GetErrorMessageEv(%"class.dawn_native::ErrorScope"* readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i8* [ %9, %7 ], [ %11, %10 ]
  ret i8* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15ErrorScopeStack4PushEN4wgpu11ErrorFilterE(%"class.dawn_native::ErrorScopeStack"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.dawn_native::ErrorScope", align 8
  %4 = bitcast %"class.dawn_native::ErrorScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %3, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %3, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %3, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 0, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %11, align 8
  %13 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %13, align 8
  %15 = icmp ult %"class.dawn_native::ErrorScope"* %12, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %2
  %17 = bitcast %"class.dawn_native::ErrorScope"* %3 to i64*
  %18 = bitcast %"class.dawn_native::ErrorScope"* %12 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %10, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %22 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 1
  %23 = ptrtoint %"class.dawn_native::ErrorScope"* %22 to i64
  %24 = bitcast %"class.dawn_native::ErrorScope"** %11 to i64*
  store i64 %23, i64* %24, align 8
  br label %32

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN11dawn_native10ErrorScopeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %26, %"class.dawn_native::ErrorScope"* nonnull dereferenceable(32) %3) #11
  %27 = load i8, i8* %9, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %16, %25, %29
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15ErrorScopeStack3PopEv(%"class.dawn_native::ErrorScope"* noalias nocapture sret, %"class.dawn_native::ErrorScopeStack"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  %6 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %3, align 8
  %7 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %6, i64 -1
  %8 = bitcast %"class.dawn_native::ErrorScope"* %7 to i64*
  %9 = bitcast %"class.dawn_native::ErrorScope"* %0 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %6, i64 -1, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #11
  %15 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %3, align 8
  %16 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %15, i64 -1, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %2, %21
  %25 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %15, i64 -1
  store %"class.dawn_native::ErrorScope"* %25, %"class.dawn_native::ErrorScope"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native15ErrorScopeStack5EmptyEv(%"class.dawn_native::ErrorScopeStack"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %2, align 8
  %4 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %4, align 8
  %6 = icmp eq %"class.dawn_native::ErrorScope"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native15ErrorScopeStack11HandleErrorEN4wgpu9ErrorTypeEPKc(%"class.dawn_native::ErrorScopeStack"* nocapture readonly, i32, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %4, align 8
  %6 = getelementptr inbounds %"class.dawn_native::ErrorScopeStack", %"class.dawn_native::ErrorScopeStack"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %6, align 8
  %8 = icmp eq %"class.dawn_native::ErrorScope"* %5, %7
  br i1 %8, label %86, label %9

9:                                                ; preds = %3
  %10 = icmp eq i32 %1, 4
  br label %11

11:                                               ; preds = %9, %83
  %12 = phi %"class.dawn_native::ErrorScope"* [ %5, %9 ], [ %13, %83 ]
  %13 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 -1
  %14 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, %1
  br i1 %16, label %17, label %83

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 -1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %50

21:                                               ; preds = %17
  store i32 %1, i32* %18, align 4
  %22 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 -1, i32 2
  %23 = load i8, i8* %2, align 1
  %24 = tail call i1 @llvm.is.constant.i8(i8 %23) #11
  br i1 %24, label %25, label %48

25:                                               ; preds = %21
  %26 = tail call i64 @strlen(i8* %2) #11
  %27 = icmp ult i64 %26, 23
  br i1 %27, label %28, label %46

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br label %40

37:                                               ; preds = %28
  %38 = trunc i64 %26 to i8
  store i8 %38, i8* %30, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  br label %40

40:                                               ; preds = %37, %33
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = icmp eq i64 %26, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %2, i64 %26, i1 false) #11
  br label %44

44:                                               ; preds = %43, %40
  %45 = getelementptr inbounds i8, i8* %41, i64 %26
  store i8 0, i8* %45, align 1
  br label %50

46:                                               ; preds = %25
  %47 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %22, i8* %2, i64 %26) #11
  br label %50

48:                                               ; preds = %21
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %22, i8* %2) #11
  br label %50

50:                                               ; preds = %48, %46, %44, %17
  br i1 %10, label %51, label %86

51:                                               ; preds = %50
  %52 = load i32, i32* %18, align 4
  %53 = icmp eq i32 %52, 4
  br i1 %53, label %83, label %54

54:                                               ; preds = %51
  store i32 4, i32* %18, align 4
  %55 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 -1, i32 2
  %56 = load i8, i8* %2, align 1
  %57 = tail call i1 @llvm.is.constant.i8(i8 %56) #11
  br i1 %57, label %58, label %81

58:                                               ; preds = %54
  %59 = tail call i64 @strlen(i8* %2) #11
  %60 = icmp ult i64 %59, 23
  br i1 %60, label %61, label %79

61:                                               ; preds = %58
  %62 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %12, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  br label %73

70:                                               ; preds = %61
  %71 = trunc i64 %59 to i8
  store i8 %71, i8* %63, align 1
  %72 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  br label %73

73:                                               ; preds = %70, %66
  %74 = phi i8* [ %69, %66 ], [ %72, %70 ]
  %75 = icmp eq i64 %59, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %2, i64 %59, i1 false) #11
  br label %77

77:                                               ; preds = %76, %73
  %78 = getelementptr inbounds i8, i8* %74, i64 %59
  store i8 0, i8* %78, align 1
  br label %83

79:                                               ; preds = %58
  %80 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %55, i8* %2, i64 %59) #11
  br label %83

81:                                               ; preds = %54
  %82 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %55, i8* %2) #11
  br label %83

83:                                               ; preds = %81, %79, %77, %51, %11
  %84 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %6, align 8
  %85 = icmp eq %"class.dawn_native::ErrorScope"* %13, %84
  br i1 %85, label %86, label %11

86:                                               ; preds = %50, %83, %3
  %87 = phi i1 [ false, %3 ], [ false, %83 ], [ true, %50 ]
  ret i1 %87
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN11dawn_native10ErrorScopeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"class.dawn_native::ErrorScope"* dereferenceable(32)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.dawn_native::ErrorScope"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.dawn_native::ErrorScope"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.dawn_native::ErrorScope"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.dawn_native::ErrorScope"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %36, i64 %9
  %38 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %36, i64 %35
  %39 = ptrtoint %"class.dawn_native::ErrorScope"* %38 to i64
  %40 = bitcast %"class.dawn_native::ErrorScope"* %1 to i64*
  %41 = bitcast %"class.dawn_native::ErrorScope"* %37 to i64*
  %42 = load i64, i64* %40, align 8
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %36, i64 %9, i32 2
  %44 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %1, i64 0, i32 2
  %45 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %37, i64 1
  %48 = ptrtoint %"class.dawn_native::ErrorScope"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %50 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %49, align 8
  %51 = ptrtoint %"class.dawn_native::ErrorScope"* %50 to i64
  %52 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %3, align 8
  %53 = icmp eq %"class.dawn_native::ErrorScope"* %52, %50
  br i1 %53, label %101, label %54

54:                                               ; preds = %34
  %55 = getelementptr %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %52, i64 -1, i32 0
  %56 = ptrtoint i32* %55 to i64
  %57 = sub i64 %56, %51
  %58 = and i64 %57, 32
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %37, i64 -1
  %62 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %52, i64 -1
  %63 = bitcast %"class.dawn_native::ErrorScope"* %62 to i64*
  %64 = bitcast %"class.dawn_native::ErrorScope"* %61 to i64*
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %37, i64 -1, i32 2
  %67 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %52, i64 -1, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %69 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #11
  br label %70

70:                                               ; preds = %60, %54
  %71 = phi %"class.dawn_native::ErrorScope"* [ undef, %54 ], [ %61, %60 ]
  %72 = phi %"class.dawn_native::ErrorScope"* [ %37, %54 ], [ %61, %60 ]
  %73 = phi %"class.dawn_native::ErrorScope"* [ %52, %54 ], [ %62, %60 ]
  %74 = icmp ult i64 %57, 32
  br i1 %74, label %97, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.dawn_native::ErrorScope"* [ %87, %75 ], [ %72, %70 ]
  %77 = phi %"class.dawn_native::ErrorScope"* [ %88, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %76, i64 -1
  %79 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %77, i64 -1
  %80 = bitcast %"class.dawn_native::ErrorScope"* %79 to i64*
  %81 = bitcast %"class.dawn_native::ErrorScope"* %78 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %76, i64 -1, i32 2
  %84 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %77, i64 -1, i32 2
  %85 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #11
  %87 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %76, i64 -2
  %88 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %77, i64 -2
  %89 = bitcast %"class.dawn_native::ErrorScope"* %88 to i64*
  %90 = bitcast %"class.dawn_native::ErrorScope"* %87 to i64*
  %91 = load i64, i64* %89, align 8
  store i64 %91, i64* %90, align 8
  %92 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %76, i64 -2, i32 2
  %93 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %77, i64 -2, i32 2
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #11
  %96 = icmp eq %"class.dawn_native::ErrorScope"* %88, %50
  br i1 %96, label %97, label %75

97:                                               ; preds = %75, %70
  %98 = phi %"class.dawn_native::ErrorScope"* [ %71, %70 ], [ %87, %75 ]
  %99 = load i64, i64* %6, align 8
  %100 = load %"class.dawn_native::ErrorScope"*, %"class.dawn_native::ErrorScope"** %3, align 8
  br label %101

101:                                              ; preds = %34, %97
  %102 = phi %"class.dawn_native::ErrorScope"* [ %100, %97 ], [ %50, %34 ]
  %103 = phi %"class.dawn_native::ErrorScope"* [ %98, %97 ], [ %37, %34 ]
  %104 = phi i64 [ %99, %97 ], [ %51, %34 ]
  %105 = ptrtoint %"class.dawn_native::ErrorScope"* %103 to i64
  store i64 %105, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %106 = inttoptr i64 %104 to %"class.dawn_native::ErrorScope"*
  %107 = icmp eq %"class.dawn_native::ErrorScope"* %102, %106
  br i1 %107, label %121, label %108

108:                                              ; preds = %101, %119
  %109 = phi %"class.dawn_native::ErrorScope"* [ %110, %119 ], [ %102, %101 ]
  %110 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %109, i64 -1
  %111 = getelementptr inbounds %"class.dawn_native::ErrorScope", %"class.dawn_native::ErrorScope"* %109, i64 -1, i32 2
  %112 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %116, %108
  %120 = icmp eq %"class.dawn_native::ErrorScope"* %110, %106
  br i1 %120, label %121, label %108

121:                                              ; preds = %119, %101
  %122 = icmp eq i64 %104, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %121, %123
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
