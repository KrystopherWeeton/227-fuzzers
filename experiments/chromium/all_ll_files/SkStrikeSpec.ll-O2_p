; ModuleID = '../../third_party/skia/src/core/SkStrikeSpec.cpp'
source_filename = "../../third_party/skia/src/core/SkStrikeSpec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.6, %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.6 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.7 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.8 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkStrikeSpec = type <{ %class.SkAutoDescriptor, %class.sk_sp.8, %class.sk_sp.6, %class.sk_sp, float, [4 x i8] }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.SkSurfaceProps = type { i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkBulkGlyphMetrics = type { %class.SkAutoSTArray, %class.sk_sp.73 }
%class.SkAutoSTArray = type { i32, %class.SkGlyph**, [160 x i8] }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.47, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.47 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.48, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.49, %class.SkTDArray.50, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.48 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.49 = type { i8*, i32, i32 }
%class.SkTDArray.50 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.51 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.51 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.52", [3 x i8] }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.sk_sp.73 = type { %"class.SkStrikeCache::Strike"* }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.59", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.65, i64, i64, i32, i32 }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkTHashTable.65 = type { i32, i32, %class.SkAutoTArray.66 }
%class.SkAutoTArray.66 = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.32", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap, %"class.std::__1::vector", %class.SkArenaAlloc }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.6, %class.sk_sp.8, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.35, i8*, i8*, i8* }
%class.sk_sp.35 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkTHashMap = type { %class.SkTHashTable.39 }
%class.SkTHashTable.39 = type { i32, i32, %class.SkAutoTArray.40 }
%class.SkAutoTArray.40 = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.77" }
%"struct.std::__1::pair.77" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.SkBulkGlyphMetricsAndPaths = type { %class.SkAutoSTArray, %class.sk_sp.73 }
%class.SkBulkGlyphMetricsAndImages = type { %class.SkAutoSTArray.75, %class.sk_sp.73 }
%class.SkAutoSTArray.75 = type { i32, %class.SkGlyph**, [512 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkTLazy = type { [24 x i8], %class.SkFont* }
%class.SkString = type { %class.sk_sp.11 }
%class.sk_sp.11 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.12", %"class.std::__1::__tuple_leaf.13" }
%"class.std::__1::__tuple_leaf" = type { %class.SkStrikeSpec }
%"class.std::__1::__tuple_leaf.12" = type { float }
%"class.std::__1::__tuple_leaf.13" = type { float }
%class.GrSDFTControl = type <{ float, float, i8, [3 x i8] }>
%class.sk_sp.19 = type { %class.GrTextStrike* }
%class.GrTextStrike = type { %class.SkNVRefCnt, %class.SkTHashTable.20, %class.SkAutoDescriptor, %class.SkArenaAlloc }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTHashTable.20 = type { i32, i32, %class.SkAutoTArray.21 }
%class.SkAutoTArray.21 = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* }
%"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot" = type <{ %class.GrGlyph*, i32, [4 x i8] }>
%class.GrGlyph = type { %struct.SkPackedGlyphID, %"class.GrDrawOpAtlas::AtlasLocator" }
%"class.GrDrawOpAtlas::AtlasLocator" = type { %"class.GrDrawOpAtlas::PlotLocator", %"struct.std::__1::array" }
%"class.GrDrawOpAtlas::PlotLocator" = type { i64 }
%"struct.std::__1::array" = type { [4 x i16] }
%class.GrStrikeCache = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot" = type <{ %class.sk_sp.19, i32, [4 x i8] }>
%struct.SkScalerContextEffects = type { %class.SkPathEffect*, %class.SkMaskFilter* }
%"class.std::__1::tuple.82" = type { %"struct.std::__1::__tuple_impl.83" }
%"struct.std::__1::__tuple_impl.83" = type { %"class.std::__1::__tuple_leaf.84", %"class.std::__1::__tuple_leaf.85" }
%"class.std::__1::__tuple_leaf.84" = type { %class.SkSpan }
%class.SkSpan = type { %class.SkGlyph**, i64 }
%"class.std::__1::__tuple_leaf.85" = type { i64 }

$_ZN13GrStrikeCache14generateStrikeERK12SkDescriptor = comdat any

$_ZN12SkTHashTableI5sk_spI12GrTextStrikeE12SkDescriptorN13GrStrikeCache20DescriptorHashTraitsEE6resizeEi = comdat any

$_ZN12SkTHashTableI5sk_spI12GrTextStrikeE12SkDescriptorN13GrStrikeCache20DescriptorHashTraitsEE12uncheckedSetEOS2_ = comdat any

@__const._ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl.dfPaint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.6 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.7 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.8 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.9 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.10 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl.strikeSpec = private unnamed_addr constant %class.SkStrikeSpec <{ %class.SkAutoDescriptor { %class.SkDescriptor* inttoptr (i64 -6148914691236517206 to %class.SkDescriptor*), [120 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.sk_sp.8 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.6 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN12SkStrikeSpecC1ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf = hidden unnamed_addr alias void (%class.SkStrikeSpec*, %class.SkFont*, %class.SkPaint*, %class.SkSurfaceProps*, i32, %class.SkMatrix*, float), void (%class.SkStrikeSpec*, %class.SkFont*, %class.SkPaint*, %class.SkSurfaceProps*, i32, %class.SkMatrix*, float)* @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf
@_ZN18SkBulkGlyphMetricsC1ERK12SkStrikeSpec = hidden unnamed_addr alias void (%class.SkBulkGlyphMetrics*, %class.SkStrikeSpec*), void (%class.SkBulkGlyphMetrics*, %class.SkStrikeSpec*)* @_ZN18SkBulkGlyphMetricsC2ERK12SkStrikeSpec
@_ZN26SkBulkGlyphMetricsAndPathsC1ERK12SkStrikeSpec = hidden unnamed_addr alias void (%class.SkBulkGlyphMetricsAndPaths*, %class.SkStrikeSpec*), void (%class.SkBulkGlyphMetricsAndPaths*, %class.SkStrikeSpec*)* @_ZN26SkBulkGlyphMetricsAndPathsC2ERK12SkStrikeSpec
@_ZN26SkBulkGlyphMetricsAndPathsC1EO5sk_spIN13SkStrikeCache6StrikeEE = hidden unnamed_addr alias void (%class.SkBulkGlyphMetricsAndPaths*, %class.sk_sp.73*), void (%class.SkBulkGlyphMetricsAndPaths*, %class.sk_sp.73*)* @_ZN26SkBulkGlyphMetricsAndPathsC2EO5sk_spIN13SkStrikeCache6StrikeEE
@_ZN27SkBulkGlyphMetricsAndImagesC1ERK12SkStrikeSpec = hidden unnamed_addr alias void (%class.SkBulkGlyphMetricsAndImages*, %class.SkStrikeSpec*), void (%class.SkBulkGlyphMetricsAndImages*, %class.SkStrikeSpec*)* @_ZN27SkBulkGlyphMetricsAndImagesC2ERK12SkStrikeSpec
@_ZN27SkBulkGlyphMetricsAndImagesC1EO5sk_spIN13SkStrikeCache6StrikeEE = hidden unnamed_addr alias void (%class.SkBulkGlyphMetricsAndImages*, %class.sk_sp.73*), void (%class.SkBulkGlyphMetricsAndImages*, %class.sk_sp.73*)* @_ZN27SkBulkGlyphMetricsAndImagesC2EO5sk_spIN13SkStrikeCache6StrikeEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec8MakeMaskERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrix(%class.SkStrikeSpec* noalias sret, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec* %0, %class.SkFont* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkSurfaceProps* dereferenceable(8) %3, i32 %4, %class.SkMatrix* dereferenceable(40) %5, float 1.000000e+00)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec8MakePathERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlags(%class.SkStrikeSpec* noalias sret, %class.SkFont* nocapture readonly dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPaint, align 8
  %7 = alloca %class.SkFont, align 8
  %8 = bitcast %class.SkPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl.dfPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %6, %class.SkPaint* dereferenceable(72) %2) #9
  %9 = bitcast %class.SkFont* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %10, align 8
  %11 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %11, align 8
  %12 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %13, align 8
  %14 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 4
  %15 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %16 = bitcast i8* %14 to i32*
  store i32 -1431655766, i32* %16, align 4
  %17 = load %class.SkTypeface*, %class.SkTypeface** %15, align 8
  %18 = icmp eq %class.SkTypeface* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %5, %19
  store %class.SkTypeface* %17, %class.SkTypeface** %10, align 8
  %23 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %24 = bitcast float* %11 to i8*
  %25 = bitcast float* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 15, i1 false) #9
  %26 = call float @_ZN6SkFont15setupForAsPathsEP7SkPaint(%class.SkFont* nonnull %7, %class.SkPaint* nonnull %6) #9
  call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* nonnull %7, i1 zeroext false) #9
  %27 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  call void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec* %0, %class.SkFont* nonnull dereferenceable(24) %7, %class.SkPaint* nonnull dereferenceable(72) %6, %class.SkSurfaceProps* dereferenceable(8) %3, i32 %4, %class.SkMatrix* dereferenceable(40) %27, float %26)
  %28 = load %class.SkTypeface*, %class.SkTypeface** %10, align 8
  %29 = icmp eq %class.SkTypeface* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkTypeface* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkTypeface* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #9
  br label %40

40:                                               ; preds = %22, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare float @_ZN6SkFont15setupForAsPathsEP7SkPaint(%class.SkFont*, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN6SkFont11setSubpixelEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec18MakeSourceFallbackERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsf(%class.SkStrikeSpec* noalias sret, %class.SkFont* nocapture readonly dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, float) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkFont, align 8
  %8 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %9 = load float, float* %8, align 8
  %10 = fcmp ogt float %5, 2.540000e+02
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = fdiv float 2.540000e+02, %5
  %13 = fmul float %12, %9
  %14 = tail call float @llvm.floor.f32(float %13)
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi float [ %14, %11 ], [ %9, %6 ]
  %17 = bitcast %class.SkFont* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %18, align 8
  %19 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %19, align 8
  %20 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %20, align 4
  %21 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %21, align 8
  %22 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 4
  %23 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %24 = bitcast i8* %22 to i32*
  store i32 -1431655766, i32* %24, align 4
  %25 = load %class.SkTypeface*, %class.SkTypeface** %23, align 8
  %26 = icmp eq %class.SkTypeface* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %15, %27
  store %class.SkTypeface* %25, %class.SkTypeface** %18, align 8
  %31 = bitcast float* %19 to i8*
  %32 = bitcast float* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 15, i1 false) #9
  call void @_ZN6SkFont7setSizeEf(%class.SkFont* nonnull %7, float %16) #9
  call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* nonnull %7, i1 zeroext false) #9
  %33 = fdiv float %9, %16
  %34 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  call void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec* %0, %class.SkFont* nonnull dereferenceable(24) %7, %class.SkPaint* dereferenceable(72) %2, %class.SkSurfaceProps* dereferenceable(8) %3, i32 %4, %class.SkMatrix* dereferenceable(40) %34, float %33)
  %35 = load %class.SkTypeface*, %class.SkTypeface** %18, align 8
  %36 = icmp eq %class.SkTypeface* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkTypeface* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkTypeface* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #9
  br label %47

47:                                               ; preds = %30, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

declare void @_ZN6SkFont7setSizeEf(%class.SkFont*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec17MakeCanonicalizedERK6SkFontPK7SkPaint(%class.SkStrikeSpec* noalias sret, %class.SkFont* dereferenceable(24), %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = alloca %class.SkTLazy, align 8
  %6 = alloca %class.SkSurfaceProps, align 4
  %7 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl.dfPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #9
  %8 = icmp eq %class.SkPaint* %2, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %4, %class.SkPaint* nonnull dereferenceable(72) %2) #9
  br label %11

11:                                               ; preds = %3, %9
  %12 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9
  %13 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 0, i64 8
  %14 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %class.SkFont* null, %class.SkFont** %14, align 8
  %15 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %16 = call zeroext i1 @_ZN12SkStrikeSpec16ShouldDrawAsPathERK7SkPaintRK6SkFontRK8SkMatrix(%class.SkPaint* nonnull dereferenceable(72) %4, %class.SkFont* dereferenceable(24) %1, %class.SkMatrix* dereferenceable(40) %15)
  br i1 %16, label %17, label %65

17:                                               ; preds = %11
  %18 = load %class.SkFont*, %class.SkFont** %14, align 8
  %19 = icmp eq %class.SkFont* %18, null
  br i1 %19, label %49, label %20

20:                                               ; preds = %17
  %21 = icmp eq %class.SkFont* %18, %1
  br i1 %21, label %43, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %24 = load %class.SkTypeface*, %class.SkTypeface** %23, align 8
  %25 = icmp eq %class.SkTypeface* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  br label %29

29:                                               ; preds = %26, %22
  %30 = getelementptr inbounds %class.SkFont, %class.SkFont* %18, i64 0, i32 0, i32 0
  %31 = load %class.SkTypeface*, %class.SkTypeface** %30, align 8
  store %class.SkTypeface* %24, %class.SkTypeface** %30, align 8
  %32 = icmp eq %class.SkTypeface* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkTypeface* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.SkTypeface* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #9
  br label %43

43:                                               ; preds = %37, %33, %29, %20
  %44 = getelementptr inbounds %class.SkFont, %class.SkFont* %18, i64 0, i32 1
  %45 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %46 = bitcast float* %44 to i8*
  %47 = bitcast float* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 15, i1 false) #9
  %48 = load %class.SkFont*, %class.SkFont** %14, align 8
  br label %62

49:                                               ; preds = %17
  %50 = bitcast %class.SkTLazy* %5 to %class.SkTypeface**
  %51 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %52 = load %class.SkTypeface*, %class.SkTypeface** %51, align 8
  %53 = icmp eq %class.SkTypeface* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %54, %49
  store %class.SkTypeface* %52, %class.SkTypeface** %50, align 8
  %58 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %59 = bitcast float* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %59, i64 15, i1 false) #9
  %60 = bitcast %class.SkFont** %14 to %class.SkTLazy**
  store %class.SkTLazy* %5, %class.SkTLazy** %60, align 8
  %61 = bitcast %class.SkTLazy* %5 to %class.SkFont*
  br label %62

62:                                               ; preds = %43, %57
  %63 = phi %class.SkFont* [ %61, %57 ], [ %48, %43 ]
  %64 = call float @_ZN6SkFont15setupForAsPathsEP7SkPaint(%class.SkFont* %63, %class.SkPaint* null) #9
  call void @_ZN7SkPaint5resetEv(%class.SkPaint* nonnull %4) #9
  br label %65

65:                                               ; preds = %62, %11
  %66 = phi %class.SkFont* [ %63, %62 ], [ %1, %11 ]
  %67 = phi float [ %64, %62 ], [ 1.000000e+00, %11 ]
  %68 = bitcast %class.SkSurfaceProps* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %6) #9
  %69 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  call void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec* %0, %class.SkFont* dereferenceable(24) %66, %class.SkPaint* nonnull dereferenceable(72) %4, %class.SkSurfaceProps* nonnull dereferenceable(8) %6, i32 3, %class.SkMatrix* dereferenceable(40) %69, float %67)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  %70 = load %class.SkFont*, %class.SkFont** %14, align 8
  %71 = icmp eq %class.SkFont* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %class.SkFont, %class.SkFont* %70, i64 0, i32 0, i32 0
  %74 = load %class.SkTypeface*, %class.SkTypeface** %73, align 8
  %75 = icmp eq %class.SkTypeface* %74, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %74, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkTypeface* %74 to %class.SkRefCntBase*
  %82 = bitcast %class.SkTypeface* %74 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  call void %85(%class.SkRefCntBase* nonnull %81) #9
  br label %86

86:                                               ; preds = %80, %76, %72
  store %class.SkFont* null, %class.SkFont** %14, align 8
  br label %87

87:                                               ; preds = %65, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  ret void
}

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkStrikeSpec16ShouldDrawAsPathERK7SkPaintRK6SkFontRK8SkMatrix(%class.SkPaint* nocapture readonly dereferenceable(72), %class.SkFont* nocapture readonly dereferenceable(24), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 192
  %8 = icmp eq i32 %7, 64
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %11, 0.000000e+00
  br i1 %12, label %63, label %13

13:                                               ; preds = %9, %3
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 192
  %17 = icmp eq i32 %16, 128
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %2) #9
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %14, align 4
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ %15, %13 ]
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %63

25:                                               ; preds = %21
  %26 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #9
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %28 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %29 = load float, float* %28, align 8, !noalias !2
  %30 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 2
  %31 = load float, float* %30, align 4, !noalias !2
  %32 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 3
  %33 = load float, float* %32, align 8, !noalias !2
  %34 = fmul float %29, %31
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 0
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 1
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 3
  %38 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %38, align 16, !alias.scope !5
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %40, align 16, !alias.scope !5
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %41, align 16, !alias.scope !5
  store i32 16, i32* %27, align 4, !alias.scope !5
  %42 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %4, float %34, float %29) #9
  %43 = fcmp une float %33, 0.000000e+00
  br i1 %43, label %44, label %46

44:                                               ; preds = %25
  %45 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8postSkewEff(%class.SkMatrix* nonnull %4, float %33, float 0.000000e+00) #9
  br label %46

46:                                               ; preds = %25, %44
  %47 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %4, %class.SkMatrix* dereferenceable(40) %2) #9
  %48 = load float, float* %35, align 16
  %49 = fmul float %48, %48
  %50 = load float, float* %37, align 4
  store i32 128, i32* %27, align 4
  %51 = fmul float %50, %50
  %52 = fadd float %49, %51
  %53 = fcmp ogt float %52, 6.553600e+04
  br i1 %53, label %61, label %54

54:                                               ; preds = %46
  %55 = load float, float* %36, align 4
  %56 = fmul float %55, %55
  %57 = load float, float* %39, align 16
  store i32 128, i32* %27, align 4
  %58 = fmul float %57, %57
  %59 = fadd float %56, %58
  %60 = fcmp ogt float %59, 6.553600e+04
  br label %61

61:                                               ; preds = %54, %46
  %62 = phi i1 [ true, %46 ], [ %60, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #9
  br label %63

63:                                               ; preds = %21, %9, %61
  %64 = phi i1 [ %62, %61 ], [ true, %9 ], [ true, %21 ]
  ret i1 %64
}

declare void @_ZN7SkPaint5resetEv(%class.SkPaint*) local_unnamed_addr #2

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec16MakeWithNoDeviceERK6SkFontPK7SkPaint(%class.SkStrikeSpec* noalias sret, %class.SkFont* dereferenceable(24), %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = alloca %class.SkSurfaceProps, align 4
  %6 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl.dfPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #9
  %7 = icmp eq %class.SkPaint* %2, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %4, %class.SkPaint* nonnull dereferenceable(72) %2) #9
  br label %10

10:                                               ; preds = %3, %8
  %11 = bitcast %class.SkSurfaceProps* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %5) #9
  %12 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  call void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec* %0, %class.SkFont* dereferenceable(24) %1, %class.SkPaint* nonnull dereferenceable(72) %4, %class.SkSurfaceProps* nonnull dereferenceable(8) %5, i32 3, %class.SkMatrix* dereferenceable(40) %12, float 1.000000e+00)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec11MakeDefaultEv(%class.SkStrikeSpec* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkFont, align 8
  %3 = bitcast %class.SkFont* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %4, align 8
  %5 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %5, align 8
  %6 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %7 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %7, align 8
  %8 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 4
  %9 = bitcast i8* %8 to i32*
  store i32 -1431655766, i32* %9, align 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %2) #9
  call void @_ZN12SkStrikeSpec17MakeCanonicalizedERK6SkFontPK7SkPaint(%class.SkStrikeSpec* sret %0, %class.SkFont* nonnull dereferenceable(24) %2, %class.SkPaint* null)
  %10 = load %class.SkTypeface*, %class.SkTypeface** %4, align 8
  %11 = icmp eq %class.SkTypeface* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkTypeface* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkTypeface* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  call void %21(%class.SkRefCntBase* nonnull %17) #9
  br label %22

22:                                               ; preds = %1, %12, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  ret void
}

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkStrikeSpec4dumpEv(%class.SkString* noalias sret, %class.SkStrikeSpec* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkDescriptor*, %class.SkDescriptor** %3, align 8
  tail call void @_ZNK12SkDescriptor7dumpRecEv(%class.SkString* sret %0, %class.SkDescriptor* %4) #9
  ret void
}

declare void @_ZNK12SkDescriptor7dumpRecEv(%class.SkString* sret, %class.SkDescriptor*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec13MakePDFVectorERK10SkTypefacePi(%class.SkStrikeSpec* noalias sret, %class.SkTypeface* dereferenceable(48), i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkFont, align 8
  %5 = alloca %class.SkPaint, align 8
  %6 = alloca %class.SkSurfaceProps, align 4
  %7 = bitcast %class.SkFont* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %8, align 8
  %9 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %9, align 8
  %10 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %11, align 8
  %12 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 4
  %13 = bitcast i8* %12 to i32*
  store i32 -1431655766, i32* %13, align 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %4) #9
  call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* nonnull %4, i32 0) #9
  call void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont* nonnull %4, i32 0) #9
  %14 = icmp eq %class.SkTypeface* %1, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !10
  %18 = atomicrmw add i32* %16, i32 1 monotonic
  br label %19

19:                                               ; preds = %3, %15
  %20 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  store %class.SkTypeface* %1, %class.SkTypeface** %8, align 8
  %21 = icmp eq %class.SkTypeface* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %class.SkTypeface* %20 to %class.SkRefCntBase*
  %28 = bitcast %class.SkTypeface* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #9
  br label %32

32:                                               ; preds = %19, %22, %26
  br i1 %14, label %43, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkTypeface* %1 to %class.SkRefCntBase*
  %39 = bitcast %class.SkTypeface* %1 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #9
  br label %43

43:                                               ; preds = %32, %33, %37
  %44 = call i32 @_ZNK10SkTypeface13getUnitsPerEmEv(%class.SkTypeface* %1) #9
  %45 = icmp slt i32 %44, 1
  %46 = select i1 %45, i32 1024, i32 %44
  %47 = icmp eq i32* %2, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %43
  store i32 %46, i32* %2, align 4
  br label %49

49:                                               ; preds = %43, %48
  %50 = sitofp i32 %46 to float
  call void @_ZN6SkFont7setSizeEf(%class.SkFont* nonnull %4, float %50) #9
  %51 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %51) #9
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %5) #9
  %52 = bitcast %class.SkSurfaceProps* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %6, i32 0, i32 0) #9
  %53 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  call void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec* %0, %class.SkFont* nonnull dereferenceable(24) %4, %class.SkPaint* nonnull dereferenceable(72) %5, %class.SkSurfaceProps* nonnull dereferenceable(8) %6, i32 3, %class.SkMatrix* dereferenceable(40) %53, float 1.000000e+00)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %51) #9
  %54 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %55 = icmp eq %class.SkTypeface* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkTypeface* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkTypeface* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  call void %65(%class.SkRefCntBase* nonnull %61) #9
  br label %66

66:                                               ; preds = %49, %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

declare void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont*, i32) local_unnamed_addr #2

declare void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont*, i32) local_unnamed_addr #2

declare i32 @_ZNK10SkTypeface13getUnitsPerEmEv(%class.SkTypeface*) local_unnamed_addr #2

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl(%"class.std::__1::tuple"* noalias sret, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), %class.SkMatrix* dereferenceable(40), %class.GrSDFTControl* dereferenceable(12)) local_unnamed_addr #5 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.sk_sp.8, align 8
  %9 = alloca float, align 4
  %10 = alloca %class.SkFont, align 8
  %11 = alloca %class.SkStrikeSpec, align 8
  %12 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl.dfPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %7, %class.SkPaint* dereferenceable(72) %2) #9
  call void @_ZN15GrSDFMaskFilter4MakeEv(%class.sk_sp.8* nonnull sret %8) #9
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %7, %class.sk_sp.8* nonnull %8) #9
  %13 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %8, i64 0, i32 0
  %14 = load %class.SkMaskFilter*, %class.SkMaskFilter** %13, align 8
  %15 = icmp eq %class.SkMaskFilter* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkMaskFilter* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkMaskFilter* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #9
  br label %26

26:                                               ; preds = %20, %16, %6
  %27 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #9
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %28 = bitcast %class.SkFont* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %29, align 8
  %30 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %30, align 8
  %31 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %31, align 4
  %32 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %32, align 8
  %33 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 4
  %34 = bitcast i8* %33 to i32*
  store i32 -1431655766, i32* %34, align 4
  call void @_ZNK13GrSDFTControl10getSDFFontERK6SkFontRK8SkMatrixPf(%class.SkFont* nonnull sret %10, %class.GrSDFTControl* %5, %class.SkFont* dereferenceable(24) %1, %class.SkMatrix* dereferenceable(40) %4, float* nonnull %9) #9
  %35 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %36 = load float, float* %35, align 8
  %37 = call <2 x float> @_ZNK13GrSDFTControl21computeSDFMinMaxScaleEfRK8SkMatrix(%class.GrSDFTControl* %5, float %36, %class.SkMatrix* dereferenceable(40) %4) #9
  %38 = bitcast <2 x float> %37 to <2 x i32>
  %39 = extractelement <2 x i32> %38, i32 0
  %40 = extractelement <2 x i32> %38, i32 1
  %41 = bitcast %class.SkStrikeSpec* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %41) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN12SkStrikeSpec8MakeSDFTERK6SkFontRK7SkPaintRK14SkSurfacePropsRK8SkMatrixRK13GrSDFTControl.strikeSpec to i8*), i64 160, i1 false)
  %42 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %43 = load float, float* %9, align 4
  call void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec* nonnull %11, %class.SkFont* nonnull dereferenceable(24) %10, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkSurfaceProps* dereferenceable(8) %3, i32 0, %class.SkMatrix* dereferenceable(40) %42, float %43)
  %44 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorC1EOS_(%class.SkAutoDescriptor* %44, %class.SkAutoDescriptor* nonnull dereferenceable(128) %45) #9
  %46 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 1
  %48 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %47, i64 0, i32 0
  %49 = bitcast %class.sk_sp.8* %47 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8, !noalias !13
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %48, align 8, !noalias !13
  %51 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 2, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %51, align 8, !noalias !13
  %52 = bitcast %class.sk_sp.8* %46 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %52, align 8, !alias.scope !13
  %53 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %54 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 3
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %54, i64 0, i32 0
  %56 = bitcast %class.sk_sp* %54 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !13
  store %class.SkTypeface* null, %class.SkTypeface** %55, align 8, !noalias !13
  %58 = bitcast %class.sk_sp* %53 to i64*
  store i64 %57, i64* %58, align 8, !alias.scope !13
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %60 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %11, i64 0, i32 4
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 8, !noalias !13
  %63 = bitcast float* %59 to i32*
  store i32 %62, i32* %63, align 8, !alias.scope !13
  %64 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::__tuple_leaf.12"* %64 to i32*
  store i32 %39, i32* %65, align 4, !alias.scope !13
  %66 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 2
  %67 = bitcast %"class.std::__1::__tuple_leaf.13"* %66 to i32*
  store i32 %40, i32* %67, align 4, !alias.scope !13
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %41) #9
  %68 = load %class.SkTypeface*, %class.SkTypeface** %29, align 8
  %69 = icmp eq %class.SkTypeface* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %26
  %71 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkTypeface* %68 to %class.SkRefCntBase*
  %76 = bitcast %class.SkTypeface* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #9
  br label %80

80:                                               ; preds = %26, %70, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #9
  ret void
}

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.8*) local_unnamed_addr #2

declare void @_ZN15GrSDFMaskFilter4MakeEv(%class.sk_sp.8* sret) local_unnamed_addr #2

declare void @_ZNK13GrSDFTControl10getSDFFontERK6SkFontRK8SkMatrixPf(%class.SkFont* sret, %class.GrSDFTControl*, %class.SkFont* dereferenceable(24), %class.SkMatrix* dereferenceable(40), float*) local_unnamed_addr #2

declare <2 x float> @_ZNK13GrSDFTControl21computeSDFMinMaxScaleEfRK8SkMatrix(%class.GrSDFTControl*, float, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkStrikeSpec20findOrCreateGrStrikeEP13GrStrikeCache(%class.sk_sp.19* noalias sret, %class.SkStrikeSpec* nocapture readonly, %class.GrStrikeCache*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkDescriptor*, %class.SkDescriptor** %4, align 8
  %6 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4, !noalias !16
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 1, i32 %7
  %10 = getelementptr inbounds %class.GrStrikeCache, %class.GrStrikeCache* %2, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4, !noalias !16
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %56

13:                                               ; preds = %3
  %14 = add nsw i32 %11, -1
  %15 = and i32 %9, %14
  %16 = getelementptr inbounds %class.GrStrikeCache, %class.GrStrikeCache* %2, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %37, %13
  %18 = phi i32 [ %11, %13 ], [ %38, %37 ]
  %19 = phi i32 [ 0, %13 ], [ %43, %37 ]
  %20 = phi i32 [ %15, %13 ], [ %42, %37 ]
  %21 = sext i32 %20 to i64
  %22 = load %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %16, align 8, !noalias !16
  %23 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %22, i64 %21, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %56, label %26

26:                                               ; preds = %17
  %27 = icmp eq i32 %9, %24
  br i1 %27, label %28, label %37

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %22, i64 %21, i32 0
  %30 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %29, i64 0, i32 0
  %31 = load %class.GrTextStrike*, %class.GrTextStrike** %30, align 8
  %32 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %31, i64 0, i32 2, i32 0
  %33 = load %class.SkDescriptor*, %class.SkDescriptor** %32, align 8
  %34 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %5, %class.SkDescriptor* dereferenceable(12) %33) #9
  br i1 %34, label %45, label %35

35:                                               ; preds = %28
  %36 = load i32, i32* %10, align 4, !noalias !16
  br label %37

37:                                               ; preds = %35, %26
  %38 = phi i32 [ %36, %35 ], [ %18, %26 ]
  %39 = add nsw i32 %20, -1
  %40 = icmp slt i32 %20, 1
  %41 = select i1 %40, i32 %38, i32 0
  %42 = add nsw i32 %39, %41
  %43 = add nuw nsw i32 %19, 1
  %44 = icmp slt i32 %43, %38
  br i1 %44, label %17, label %56

45:                                               ; preds = %28
  %46 = icmp eq %class.sk_sp.19* %29, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %29, i64 0, i32 0
  %49 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %0, i64 0, i32 0
  %50 = load %class.GrTextStrike*, %class.GrTextStrike** %48, align 8
  %51 = icmp eq %class.GrTextStrike* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  br label %55

55:                                               ; preds = %52, %47
  store %class.GrTextStrike* %50, %class.GrTextStrike** %49, align 8, !alias.scope !16
  br label %57

56:                                               ; preds = %37, %17, %45, %3
  tail call void @_ZN13GrStrikeCache14generateStrikeERK12SkDescriptor(%class.sk_sp.19* sret %0, %class.GrStrikeCache* %2, %class.SkDescriptor* dereferenceable(12) %5) #9
  br label %57

57:                                               ; preds = %55, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkStrikeSpecC2ERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixf(%class.SkStrikeSpec*, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkMatrix* dereferenceable(40), float) unnamed_addr #0 align 2 {
  %8 = alloca %struct.SkScalerContextEffects, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 0
  tail call void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor* %10) #9
  %11 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 1
  %12 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %11, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 2
  %14 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %13, i64 0, i32 0
  %15 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 3
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 0, i32 0
  %17 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 4
  %18 = bitcast %class.sk_sp.8* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  store float %6, float* %17, align 8
  %19 = bitcast %struct.SkScalerContextEffects* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = getelementptr inbounds %struct.SkScalerContextEffects, %struct.SkScalerContextEffects* %8, i64 0, i32 0
  %21 = getelementptr inbounds %struct.SkScalerContextEffects, %struct.SkScalerContextEffects* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #9
  %22 = call %class.SkDescriptor* @_ZN15SkScalerContext36CreateDescriptorAndEffectsUsingPaintERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixP16SkAutoDescriptorP22SkScalerContextEffects(%class.SkFont* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkSurfaceProps* dereferenceable(8) %3, i32 %4, %class.SkMatrix* dereferenceable(40) %5, %class.SkAutoDescriptor* %10, %struct.SkScalerContextEffects* nonnull %8) #9
  %23 = load %class.SkMaskFilter*, %class.SkMaskFilter** %21, align 8
  %24 = icmp eq %class.SkMaskFilter* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %7
  %26 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic, !noalias !19
  br label %28

28:                                               ; preds = %7, %25
  %29 = ptrtoint %class.SkMaskFilter* %23 to i64
  %30 = load %class.SkMaskFilter*, %class.SkMaskFilter** %12, align 8
  %31 = bitcast %class.sk_sp.8* %11 to i64*
  store i64 %29, i64* %31, align 8
  %32 = icmp eq %class.SkMaskFilter* %30, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkMaskFilter* %30 to %class.SkRefCntBase*
  %39 = bitcast %class.SkMaskFilter* %30 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #9
  br label %43

43:                                               ; preds = %37, %33, %28
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %20, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic, !noalias !22
  br label %49

49:                                               ; preds = %43, %46
  %50 = ptrtoint %class.SkPathEffect* %44 to i64
  %51 = load %class.SkPathEffect*, %class.SkPathEffect** %14, align 8
  %52 = bitcast %class.sk_sp.6* %13 to i64*
  store i64 %50, i64* %52, align 8
  %53 = icmp eq %class.SkPathEffect* %51, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.SkPathEffect* %51 to %class.SkRefCntBase*
  %60 = bitcast %class.SkPathEffect* %51 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #9
  br label %64

64:                                               ; preds = %58, %54, %49
  %65 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #9
  call void @_ZNK6SkFont20refTypefaceOrDefaultEv(%class.sk_sp* nonnull sret %9, %class.SkFont* %1) #9
  %66 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %67 = bitcast %class.sk_sp* %9 to i64*
  %68 = load i64, i64* %67, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %66, align 8
  %69 = load %class.SkTypeface*, %class.SkTypeface** %16, align 8
  %70 = bitcast %class.sk_sp* %15 to i64*
  store i64 %68, i64* %70, align 8
  %71 = icmp eq %class.SkTypeface* %69, null
  br i1 %71, label %95, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %class.SkTypeface* %69 to %class.SkRefCntBase*
  %78 = bitcast %class.SkTypeface* %69 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8
  call void %81(%class.SkRefCntBase* nonnull %77) #9
  br label %82

82:                                               ; preds = %72, %76
  %83 = load %class.SkTypeface*, %class.SkTypeface** %66, align 8
  %84 = icmp eq %class.SkTypeface* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkTypeface* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkTypeface* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #9
  br label %95

95:                                               ; preds = %64, %82, %85, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  ret void
}

declare void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor*) unnamed_addr #2

declare %class.SkDescriptor* @_ZN15SkScalerContext36CreateDescriptorAndEffectsUsingPaintERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixP16SkAutoDescriptorP22SkScalerContextEffects(%class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkMatrix* dereferenceable(40), %class.SkAutoDescriptor*, %struct.SkScalerContextEffects*) local_unnamed_addr #2

declare void @_ZNK6SkFont20refTypefaceOrDefaultEv(%class.sk_sp* sret, %class.SkFont*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStrikeForGPU* @_ZNK12SkStrikeSpec24findOrCreateScopedStrikeEP28SkStrikeForGPUCacheInterface(%class.SkStrikeSpec* nocapture readonly, %class.SkStrikeForGPUCacheInterface*) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.SkScalerContextEffects*
  %5 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 1, i32 0
  %7 = bitcast %class.SkMaskFilter** %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = shufflevector <2 x i64> %8, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %9, <2 x i64>* %3, align 16
  %10 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 0, i32 0
  %11 = load %class.SkDescriptor*, %class.SkDescriptor** %10, align 8
  %12 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %0, i64 0, i32 3, i32 0
  %13 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  %14 = bitcast %class.SkStrikeForGPUCacheInterface* %1 to %class.SkStrikeForGPU* (%class.SkStrikeForGPUCacheInterface*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)***
  %15 = load %class.SkStrikeForGPU* (%class.SkStrikeForGPUCacheInterface*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)**, %class.SkStrikeForGPU* (%class.SkStrikeForGPUCacheInterface*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)*** %14, align 8
  %16 = getelementptr inbounds %class.SkStrikeForGPU* (%class.SkStrikeForGPUCacheInterface*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)*, %class.SkStrikeForGPU* (%class.SkStrikeForGPUCacheInterface*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)** %15, i64 2
  %17 = load %class.SkStrikeForGPU* (%class.SkStrikeForGPUCacheInterface*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)*, %class.SkStrikeForGPU* (%class.SkStrikeForGPUCacheInterface*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)** %16, align 8
  %18 = call %class.SkStrikeForGPU* %17(%class.SkStrikeForGPUCacheInterface* %1, %class.SkDescriptor* dereferenceable(12) %11, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %4, %class.SkTypeface* dereferenceable(48) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret %class.SkStrikeForGPU* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache(%class.sk_sp.73* noalias sret, %class.SkStrikeSpec* nocapture readonly, %class.SkStrikeCache*) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.SkScalerContextEffects*
  %6 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 1, i32 0
  %8 = bitcast %class.SkMaskFilter** %7 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = shufflevector <2 x i64> %9, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %10, <2 x i64>* %4, align 16
  %11 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0, i32 0
  %12 = load %class.SkDescriptor*, %class.SkDescriptor** %11, align 8
  %13 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 3, i32 0
  %14 = load %class.SkTypeface*, %class.SkTypeface** %13, align 8
  call void @_ZN13SkStrikeCache18findOrCreateStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.sk_sp.73* sret %0, %class.SkStrikeCache* %2, %class.SkDescriptor* dereferenceable(12) %12, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %5, %class.SkTypeface* dereferenceable(48) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

declare void @_ZN13SkStrikeCache18findOrCreateStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.sk_sp.73* sret, %class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12), %struct.SkScalerContextEffects* dereferenceable(16), %class.SkTypeface* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBulkGlyphMetricsC2ERK12SkStrikeSpec(%class.SkBulkGlyphMetrics*, %class.SkStrikeSpec* nocapture readonly dereferenceable(160)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.SkScalerContextEffects*
  %5 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %0, i64 0, i32 0, i32 1
  store %class.SkGlyph** null, %class.SkGlyph*** %5, align 8
  %6 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %0, i64 0, i32 1
  %8 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #9
  %9 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9, !noalias !25
  %10 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 1, i32 0
  %11 = bitcast %class.SkMaskFilter** %10 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8, !noalias !25
  %13 = shufflevector <2 x i64> %12, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %13, <2 x i64>* %3, align 16, !noalias !25
  %14 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0, i32 0
  %15 = load %class.SkDescriptor*, %class.SkDescriptor** %14, align 8, !noalias !25
  %16 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 3, i32 0
  %17 = load %class.SkTypeface*, %class.SkTypeface** %16, align 8, !noalias !25
  call void @_ZN13SkStrikeCache18findOrCreateStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.sk_sp.73* sret %7, %class.SkStrikeCache* %8, %class.SkDescriptor* dereferenceable(12) %15, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %4, %class.SkTypeface* dereferenceable(48) %17) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9, !noalias !25
  ret void
}

declare %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics*, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.82", align 8
  %5 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %0, i64 0, i32 0, i32 1
  %6 = load %class.SkGlyph**, %class.SkGlyph*** %5, align 8
  %7 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %6, i64 %9
  br label %11

11:                                               ; preds = %11, %3
  %12 = phi %class.SkGlyph** [ %10, %3 ], [ %14, %11 ]
  %13 = icmp ugt %class.SkGlyph** %12, %6
  %14 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %12, i64 -1
  br i1 %13, label %11, label %15

15:                                               ; preds = %11
  %16 = trunc i64 %2 to i32
  %17 = bitcast %class.SkGlyph** %6 to i8*
  %18 = icmp eq i32 %8, %16
  br i1 %18, label %39, label %19

19:                                               ; preds = %15
  %20 = icmp sgt i32 %8, 20
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @_Z7sk_freePv(i8* %17) #9
  br label %22

22:                                               ; preds = %21, %19
  %23 = icmp sgt i32 %16, 20
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = shl i64 %2, 32
  %26 = ashr exact i64 %25, 32
  %27 = tail call i8* @_Z15sk_malloc_throwmm(i64 %26, i64 8) #9
  %28 = bitcast %class.SkGlyph*** %5 to i8**
  store i8* %27, i8** %28, align 8
  %29 = bitcast i8* %27 to %class.SkGlyph**
  br label %37

30:                                               ; preds = %22
  %31 = icmp sgt i32 %16, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %0, i64 0, i32 0, i32 2, i64 0
  %34 = bitcast %class.SkGlyph*** %5 to i8**
  store i8* %33, i8** %34, align 8
  %35 = bitcast i8* %33 to %class.SkGlyph**
  br label %37

36:                                               ; preds = %30
  store %class.SkGlyph** null, %class.SkGlyph*** %5, align 8
  br label %37

37:                                               ; preds = %36, %32, %24
  %38 = phi %class.SkGlyph** [ null, %36 ], [ %35, %32 ], [ %29, %24 ]
  store i32 %16, i32* %7, align 8
  br label %39

39:                                               ; preds = %15, %37
  %40 = phi %class.SkGlyph** [ %6, %15 ], [ %38, %37 ]
  %41 = getelementptr inbounds %class.SkBulkGlyphMetrics, %class.SkBulkGlyphMetrics* %0, i64 0, i32 1, i32 0
  %42 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %41, align 8
  %43 = bitcast %"class.std::__1::tuple.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %42, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false) #9
  call void @_ZN13SkScalerCache7metricsE6SkSpanIKtEPPK7SkGlyph(%"class.std::__1::tuple.82"* nonnull sret %4, %class.SkScalerCache* %47, i16* %1, i64 %2, %class.SkGlyph** %40) #9
  %48 = load i64, i64* %46, align 8
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %42, i64 %48) #9
  %49 = load %class.SkGlyph**, %class.SkGlyph*** %44, align 8
  %50 = load i64, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #9
  %51 = insertvalue { %class.SkGlyph**, i64 } undef, %class.SkGlyph** %49, 0
  %52 = insertvalue { %class.SkGlyph**, i64 } %51, i64 %50, 1
  ret { %class.SkGlyph**, i64 } %52
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkGlyph* @_ZN18SkBulkGlyphMetrics5glyphEt(%class.SkBulkGlyphMetrics*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2
  %4 = call { %class.SkGlyph**, i64 } @_ZN18SkBulkGlyphMetrics6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetrics* %0, i16* nonnull %3, i64 1)
  %5 = extractvalue { %class.SkGlyph**, i64 } %4, 0
  %6 = load %class.SkGlyph*, %class.SkGlyph** %5, align 8
  ret %class.SkGlyph* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SkBulkGlyphMetricsAndPathsC2ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndPaths*, %class.SkStrikeSpec* nocapture readonly dereferenceable(160)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.SkScalerContextEffects*
  %5 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 0, i32 1
  store %class.SkGlyph** null, %class.SkGlyph*** %5, align 8
  %6 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 1
  %8 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #9
  %9 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9, !noalias !28
  %10 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 1, i32 0
  %11 = bitcast %class.SkMaskFilter** %10 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8, !noalias !28
  %13 = shufflevector <2 x i64> %12, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %13, <2 x i64>* %3, align 16, !noalias !28
  %14 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0, i32 0
  %15 = load %class.SkDescriptor*, %class.SkDescriptor** %14, align 8, !noalias !28
  %16 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 3, i32 0
  %17 = load %class.SkTypeface*, %class.SkTypeface** %16, align 8, !noalias !28
  call void @_ZN13SkStrikeCache18findOrCreateStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.sk_sp.73* sret %7, %class.SkStrikeCache* %8, %class.SkDescriptor* dereferenceable(12) %15, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %4, %class.SkTypeface* dereferenceable(48) %17) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9, !noalias !28
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN26SkBulkGlyphMetricsAndPathsC2EO5sk_spIN13SkStrikeCache6StrikeEE(%class.SkBulkGlyphMetricsAndPaths* nocapture, %class.sk_sp.73* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 0, i32 1
  store %class.SkGlyph** null, %class.SkGlyph*** %3, align 8
  %4 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.sk_sp.73, %class.sk_sp.73* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp.73* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %6, align 8
  %9 = bitcast %class.sk_sp.73* %5 to i64*
  store i64 %8, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %class.SkGlyph**, i64 } @_ZN26SkBulkGlyphMetricsAndPaths6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetricsAndPaths*, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.82", align 8
  %5 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 0, i32 1
  %6 = load %class.SkGlyph**, %class.SkGlyph*** %5, align 8
  %7 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %6, i64 %9
  br label %11

11:                                               ; preds = %11, %3
  %12 = phi %class.SkGlyph** [ %10, %3 ], [ %14, %11 ]
  %13 = icmp ugt %class.SkGlyph** %12, %6
  %14 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %12, i64 -1
  br i1 %13, label %11, label %15

15:                                               ; preds = %11
  %16 = trunc i64 %2 to i32
  %17 = bitcast %class.SkGlyph** %6 to i8*
  %18 = icmp eq i32 %8, %16
  br i1 %18, label %39, label %19

19:                                               ; preds = %15
  %20 = icmp sgt i32 %8, 20
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @_Z7sk_freePv(i8* %17) #9
  br label %22

22:                                               ; preds = %21, %19
  %23 = icmp sgt i32 %16, 20
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = shl i64 %2, 32
  %26 = ashr exact i64 %25, 32
  %27 = tail call i8* @_Z15sk_malloc_throwmm(i64 %26, i64 8) #9
  %28 = bitcast %class.SkGlyph*** %5 to i8**
  store i8* %27, i8** %28, align 8
  %29 = bitcast i8* %27 to %class.SkGlyph**
  br label %37

30:                                               ; preds = %22
  %31 = icmp sgt i32 %16, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 0, i32 2, i64 0
  %34 = bitcast %class.SkGlyph*** %5 to i8**
  store i8* %33, i8** %34, align 8
  %35 = bitcast i8* %33 to %class.SkGlyph**
  br label %37

36:                                               ; preds = %30
  store %class.SkGlyph** null, %class.SkGlyph*** %5, align 8
  br label %37

37:                                               ; preds = %36, %32, %24
  %38 = phi %class.SkGlyph** [ null, %36 ], [ %35, %32 ], [ %29, %24 ]
  store i32 %16, i32* %7, align 8
  br label %39

39:                                               ; preds = %15, %37
  %40 = phi %class.SkGlyph** [ %6, %15 ], [ %38, %37 ]
  %41 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 1, i32 0
  %42 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %41, align 8
  %43 = bitcast %"class.std::__1::tuple.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %42, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false) #9
  call void @_ZN13SkScalerCache12preparePathsE6SkSpanIKtEPPK7SkGlyph(%"class.std::__1::tuple.82"* nonnull sret %4, %class.SkScalerCache* %47, i16* %1, i64 %2, %class.SkGlyph** %40) #9
  %48 = load i64, i64* %46, align 8
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %42, i64 %48) #9
  %49 = load %class.SkGlyph**, %class.SkGlyph*** %44, align 8
  %50 = load i64, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #9
  %51 = insertvalue { %class.SkGlyph**, i64 } undef, %class.SkGlyph** %49, 0
  %52 = insertvalue { %class.SkGlyph**, i64 } %51, i64 %50, 1
  ret { %class.SkGlyph**, i64 } %52
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkGlyph* @_ZN26SkBulkGlyphMetricsAndPaths5glyphEt(%class.SkBulkGlyphMetricsAndPaths*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2
  %4 = call { %class.SkGlyph**, i64 } @_ZN26SkBulkGlyphMetricsAndPaths6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetricsAndPaths* %0, i16* nonnull %3, i64 1)
  %5 = extractvalue { %class.SkGlyph**, i64 } %4, 0
  %6 = load %class.SkGlyph*, %class.SkGlyph** %5, align 8
  ret %class.SkGlyph* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SkBulkGlyphMetricsAndPaths14findInterceptsEPKfffPK7SkGlyphPfPi(%class.SkBulkGlyphMetricsAndPaths* nocapture readonly, float*, float, float, %class.SkGlyph*, float*, i32*) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %0, i64 0, i32 1, i32 0
  %9 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %8, align 8
  %10 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %9, i64 0, i32 6
  tail call void @_ZN13SkScalerCache14findInterceptsEPKfffP7SkGlyphPfPi(%class.SkScalerCache* %10, float* %1, float %2, float %3, %class.SkGlyph* %4, float* %5, i32* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27SkBulkGlyphMetricsAndImagesC2ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndImages*, %class.SkStrikeSpec* nocapture readonly dereferenceable(160)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.SkScalerContextEffects*
  %5 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 0, i32 1
  store %class.SkGlyph** null, %class.SkGlyph*** %5, align 8
  %6 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 1
  %8 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #9
  %9 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9, !noalias !31
  %10 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 1, i32 0
  %11 = bitcast %class.SkMaskFilter** %10 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8, !noalias !31
  %13 = shufflevector <2 x i64> %12, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %13, <2 x i64>* %3, align 16, !noalias !31
  %14 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 0, i32 0
  %15 = load %class.SkDescriptor*, %class.SkDescriptor** %14, align 8, !noalias !31
  %16 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %1, i64 0, i32 3, i32 0
  %17 = load %class.SkTypeface*, %class.SkTypeface** %16, align 8, !noalias !31
  call void @_ZN13SkStrikeCache18findOrCreateStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.sk_sp.73* sret %7, %class.SkStrikeCache* %8, %class.SkDescriptor* dereferenceable(12) %15, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %4, %class.SkTypeface* dereferenceable(48) %17) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9, !noalias !31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN27SkBulkGlyphMetricsAndImagesC2EO5sk_spIN13SkStrikeCache6StrikeEE(%class.SkBulkGlyphMetricsAndImages* nocapture, %class.sk_sp.73* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 0, i32 1
  store %class.SkGlyph** null, %class.SkGlyph*** %3, align 8
  %4 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.sk_sp.73, %class.sk_sp.73* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp.73* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %6, align 8
  %9 = bitcast %class.sk_sp.73* %5 to i64*
  store i64 %8, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %class.SkGlyph**, i64 } @_ZN27SkBulkGlyphMetricsAndImages6glyphsE6SkSpanIK15SkPackedGlyphIDE(%class.SkBulkGlyphMetricsAndImages*, %struct.SkPackedGlyphID*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.82", align 8
  %5 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 0, i32 1
  %6 = load %class.SkGlyph**, %class.SkGlyph*** %5, align 8
  %7 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %6, i64 %9
  br label %11

11:                                               ; preds = %11, %3
  %12 = phi %class.SkGlyph** [ %10, %3 ], [ %14, %11 ]
  %13 = icmp ugt %class.SkGlyph** %12, %6
  %14 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %12, i64 -1
  br i1 %13, label %11, label %15

15:                                               ; preds = %11
  %16 = trunc i64 %2 to i32
  %17 = bitcast %class.SkGlyph** %6 to i8*
  %18 = icmp eq i32 %8, %16
  br i1 %18, label %39, label %19

19:                                               ; preds = %15
  %20 = icmp sgt i32 %8, 64
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @_Z7sk_freePv(i8* %17) #9
  br label %22

22:                                               ; preds = %21, %19
  %23 = icmp sgt i32 %16, 64
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = shl i64 %2, 32
  %26 = ashr exact i64 %25, 32
  %27 = tail call i8* @_Z15sk_malloc_throwmm(i64 %26, i64 8) #9
  %28 = bitcast %class.SkGlyph*** %5 to i8**
  store i8* %27, i8** %28, align 8
  %29 = bitcast i8* %27 to %class.SkGlyph**
  br label %37

30:                                               ; preds = %22
  %31 = icmp sgt i32 %16, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 0, i32 2, i64 0
  %34 = bitcast %class.SkGlyph*** %5 to i8**
  store i8* %33, i8** %34, align 8
  %35 = bitcast i8* %33 to %class.SkGlyph**
  br label %37

36:                                               ; preds = %30
  store %class.SkGlyph** null, %class.SkGlyph*** %5, align 8
  br label %37

37:                                               ; preds = %36, %32, %24
  %38 = phi %class.SkGlyph** [ null, %36 ], [ %35, %32 ], [ %29, %24 ]
  store i32 %16, i32* %7, align 8
  br label %39

39:                                               ; preds = %15, %37
  %40 = phi %class.SkGlyph** [ %6, %15 ], [ %38, %37 ]
  %41 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 1, i32 0
  %42 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %41, align 8
  %43 = bitcast %"class.std::__1::tuple.82"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::tuple.82", %"class.std::__1::tuple.82"* %4, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %42, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false) #9
  call void @_ZN13SkScalerCache13prepareImagesE6SkSpanIK15SkPackedGlyphIDEPPK7SkGlyph(%"class.std::__1::tuple.82"* nonnull sret %4, %class.SkScalerCache* %47, %struct.SkPackedGlyphID* %1, i64 %2, %class.SkGlyph** %40) #9
  %48 = load i64, i64* %46, align 8
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %42, i64 %48) #9
  %49 = load %class.SkGlyph**, %class.SkGlyph*** %44, align 8
  %50 = load i64, i64* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #9
  %51 = insertvalue { %class.SkGlyph**, i64 } undef, %class.SkGlyph** %49, 0
  %52 = insertvalue { %class.SkGlyph**, i64 } %51, i64 %50, 1
  ret { %class.SkGlyph**, i64 } %52
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkGlyph* @_ZN27SkBulkGlyphMetricsAndImages5glyphE15SkPackedGlyphID(%class.SkBulkGlyphMetricsAndImages*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkPackedGlyphID, align 4
  %4 = getelementptr inbounds %struct.SkPackedGlyphID, %struct.SkPackedGlyphID* %3, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = call { %class.SkGlyph**, i64 } @_ZN27SkBulkGlyphMetricsAndImages6glyphsE6SkSpanIK15SkPackedGlyphIDE(%class.SkBulkGlyphMetricsAndImages* %0, %struct.SkPackedGlyphID* nonnull %3, i64 1)
  %6 = extractvalue { %class.SkGlyph**, i64 } %5, 0
  %7 = load %class.SkGlyph*, %class.SkGlyph** %6, align 8
  ret %class.SkGlyph* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(12) %class.SkDescriptor* @_ZNK27SkBulkGlyphMetricsAndImages10descriptorEv(%class.SkBulkGlyphMetricsAndImages* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBulkGlyphMetricsAndImages, %class.SkBulkGlyphMetricsAndImages* %0, i64 0, i32 1, i32 0
  %3 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %2, align 8
  %4 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %3, i64 0, i32 6
  %5 = tail call dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache* %4) #9
  ret %class.SkDescriptor* %5
}

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8postSkewEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN16SkAutoDescriptorC1EOS_(%class.SkAutoDescriptor*, %class.SkAutoDescriptor* dereferenceable(128)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStrikeCache14generateStrikeERK12SkDescriptor(%class.sk_sp.19* noalias sret, %class.GrStrikeCache*, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.sk_sp.19, align 8
  %5 = tail call i8* @_Znwm(i64 184) #10, !noalias !34
  %6 = bitcast i8* %5 to %class.GrTextStrike*
  tail call void @_ZN12GrTextStrikeC1ERK12SkDescriptor(%class.GrTextStrike* nonnull %6, %class.SkDescriptor* dereferenceable(12) %2) #9, !noalias !34
  %7 = bitcast %class.sk_sp.19* %0 to i8**
  store i8* %5, i8** %7, align 8, !alias.scope !34
  %8 = getelementptr inbounds %class.GrStrikeCache, %class.GrStrikeCache* %1, i64 0, i32 0
  %9 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %4, i64 0, i32 0
  %10 = bitcast i8* %5 to i32*
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  %12 = bitcast %class.sk_sp.19* %4 to i8**
  store i8* %5, i8** %12, align 8
  %13 = getelementptr inbounds %class.GrStrikeCache, %class.GrStrikeCache* %1, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = shl nsw i32 %14, 2
  %16 = getelementptr inbounds %class.GrStrikeCache, %class.GrStrikeCache* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = mul nsw i32 %17, 3
  %19 = icmp slt i32 %15, %18
  br i1 %19, label %24, label %20

20:                                               ; preds = %3
  %21 = icmp sgt i32 %17, 0
  %22 = shl nsw i32 %17, 1
  %23 = select i1 %21, i32 %22, i32 4
  tail call void @_ZN12SkTHashTableI5sk_spI12GrTextStrikeE12SkDescriptorN13GrStrikeCache20DescriptorHashTraitsEE6resizeEi(%class.SkTHashTable* %8, i32 %23) #9
  br label %24

24:                                               ; preds = %3, %20
  %25 = call %class.sk_sp.19* @_ZN12SkTHashTableI5sk_spI12GrTextStrikeE12SkDescriptorN13GrStrikeCache20DescriptorHashTraitsEE12uncheckedSetEOS2_(%class.SkTHashTable* %8, %class.sk_sp.19* nonnull dereferenceable(8) %4) #9
  %26 = load %class.GrTextStrike*, %class.GrTextStrike** %9, align 8
  %27 = icmp eq %class.GrTextStrike* %26, null
  br i1 %27, label %46, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %26, i64 0, i32 0
  %30 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %46

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %29, i64 38
  %35 = bitcast %class.SkNVRefCnt* %34 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %35) #9
  %36 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %29, i64 6
  %37 = bitcast %class.SkNVRefCnt* %36 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %37) #9
  %38 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %29, i64 4
  %39 = bitcast %class.SkNVRefCnt* %38 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %40 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %39, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %39, align 8
  %41 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %33
  %43 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %40 to i8*
  call void @_ZdaPv(i8* %43) #10
  br label %44

44:                                               ; preds = %42, %33
  %45 = bitcast %class.GrTextStrike* %26 to i8*
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %24, %28, %44
  ret void
}

declare zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor*, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN12GrTextStrikeC1ERK12SkDescriptor(%class.GrTextStrike*, %class.SkDescriptor* dereferenceable(12)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableI5sk_spI12GrTextStrikeE12SkDescriptorN13GrStrikeCache20DescriptorHashTraitsEE6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkAutoTArray, align 8
  %4 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  store i32 %1, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %class.SkAutoTArray* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %8, align 8
  %11 = bitcast %class.SkAutoTArray* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = bitcast %class.SkAutoTArray* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %15, align 8
  store i64 0, i64* %9, align 8
  br label %105

16:                                               ; preds = %2
  %17 = sext i32 %1 to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %17, i64 16) #9
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = or i64 %20, 8
  %22 = select i1 %19, i64 -1, i64 %21
  %23 = tail call i8* @_Znam(i64 %22) #10
  %24 = bitcast i8* %23 to i64*
  store i64 %17, i64* %24, align 16
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"*
  %27 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %26, i64 %17
  %28 = shl nsw i64 %17, 4
  %29 = add nsw i64 %28, -16
  %30 = lshr exact i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %16, %34
  %35 = phi %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* [ %39, %34 ], [ %26, %16 ]
  %36 = phi i64 [ %40, %34 ], [ %32, %16 ]
  %37 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %35, i64 0, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %37, align 8
  %38 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %35, i64 0, i32 1
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %35, i64 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !37

42:                                               ; preds = %34, %16
  %43 = phi %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* [ %26, %16 ], [ %39, %34 ]
  %44 = icmp ult i64 %29, 112
  br i1 %44, label %65, label %45

45:                                               ; preds = %42, %45
  %46 = phi %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* [ %63, %45 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 0, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 0, i32 1
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 1, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 1, i32 1
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 2, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 2, i32 1
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 3, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 3, i32 1
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 4, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 4, i32 1
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 5, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %57, align 8
  %58 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 5, i32 1
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 6, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %59, align 8
  %60 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 6, i32 1
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 7, i32 0, i32 0
  store %class.GrTextStrike* null, %class.GrTextStrike** %61, align 8
  %62 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 7, i32 1
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %46, i64 8
  %64 = icmp eq %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %63, %27
  br i1 %64, label %65, label %45

65:                                               ; preds = %45, %42
  %66 = ptrtoint i8* %25 to i64
  %67 = load %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %8, align 8
  %68 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %68, align 8
  store i64 %66, i64* %9, align 8
  %69 = icmp eq %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %67, null
  br i1 %69, label %105, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %67, i64 -1, i32 1
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i32* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  tail call void @_ZdaPv(i8* %72) #10
  store %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %68, align 8
  br label %145

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %67, i64 %74
  br label %79

79:                                               ; preds = %103, %77
  %80 = phi %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* [ %81, %103 ], [ %78, %77 ]
  %81 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %80, i64 -1
  %82 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %81, i64 0, i32 0, i32 0
  %83 = load %class.GrTextStrike*, %class.GrTextStrike** %82, align 8
  %84 = icmp eq %class.GrTextStrike* %83, null
  br i1 %84, label %103, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %83, i64 0, i32 0
  %87 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %103

90:                                               ; preds = %85
  %91 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %86, i64 38
  %92 = bitcast %class.SkNVRefCnt* %91 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %92) #9
  %93 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %86, i64 6
  %94 = bitcast %class.SkNVRefCnt* %93 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %94) #9
  %95 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %86, i64 4
  %96 = bitcast %class.SkNVRefCnt* %95 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %97 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %96, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %96, align 8
  %98 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %90
  %100 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %97 to i8*
  tail call void @_ZdaPv(i8* %100) #10
  br label %101

101:                                              ; preds = %99, %90
  %102 = bitcast %class.GrTextStrike* %83 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %101, %85, %79
  %104 = icmp eq %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %81, %67
  br i1 %104, label %107, label %79

105:                                              ; preds = %65, %14
  %106 = phi %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** [ %15, %14 ], [ %68, %65 ]
  store %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %106, align 8
  br label %145

107:                                              ; preds = %103
  %108 = load %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %68, align 8
  tail call void @_ZdaPv(i8* %72) #10
  store %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* null, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %68, align 8
  %109 = icmp eq %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %108, null
  br i1 %109, label %145, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %108, i64 -1, i32 1
  %112 = bitcast i32* %111 to i8*
  %113 = bitcast i32* %111 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %144, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %108, i64 %114
  br label %118

118:                                              ; preds = %142, %116
  %119 = phi %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* [ %120, %142 ], [ %117, %116 ]
  %120 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %119, i64 -1
  %121 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %120, i64 0, i32 0, i32 0
  %122 = load %class.GrTextStrike*, %class.GrTextStrike** %121, align 8
  %123 = icmp eq %class.GrTextStrike* %122, null
  br i1 %123, label %142, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %122, i64 0, i32 0
  %126 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %142

129:                                              ; preds = %124
  %130 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %125, i64 38
  %131 = bitcast %class.SkNVRefCnt* %130 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %131) #9
  %132 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %125, i64 6
  %133 = bitcast %class.SkNVRefCnt* %132 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %133) #9
  %134 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %125, i64 4
  %135 = bitcast %class.SkNVRefCnt* %134 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %136 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %135, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %135, align 8
  %137 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %129
  %139 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %136 to i8*
  tail call void @_ZdaPv(i8* %139) #10
  br label %140

140:                                              ; preds = %138, %129
  %141 = bitcast %class.GrTextStrike* %122 to i8*
  tail call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %140, %124, %118
  %143 = icmp eq %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %120, %108
  br i1 %143, label %144, label %118

144:                                              ; preds = %142, %110
  tail call void @_ZdaPv(i8* %112) #10
  br label %145

145:                                              ; preds = %76, %105, %107, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  %146 = icmp sgt i32 %5, 0
  %147 = inttoptr i64 %10 to %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"*
  br i1 %146, label %148, label %150

148:                                              ; preds = %145
  %149 = zext i32 %5 to i64
  br label %188

150:                                              ; preds = %196, %145
  %151 = icmp eq i64 %10, 0
  br i1 %151, label %187, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %147, i64 -1, i32 1
  %154 = bitcast i32* %153 to i8*
  %155 = bitcast i32* %153 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %186, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %147, i64 %156
  br label %160

160:                                              ; preds = %184, %158
  %161 = phi %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* [ %162, %184 ], [ %159, %158 ]
  %162 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %161, i64 -1
  %163 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %162, i64 0, i32 0, i32 0
  %164 = load %class.GrTextStrike*, %class.GrTextStrike** %163, align 8
  %165 = icmp eq %class.GrTextStrike* %164, null
  br i1 %165, label %184, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %164, i64 0, i32 0
  %168 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 -1 acq_rel
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %184

171:                                              ; preds = %166
  %172 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %167, i64 38
  %173 = bitcast %class.SkNVRefCnt* %172 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %173) #9
  %174 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %167, i64 6
  %175 = bitcast %class.SkNVRefCnt* %174 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %175) #9
  %176 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %167, i64 4
  %177 = bitcast %class.SkNVRefCnt* %176 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %178 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %177, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %177, align 8
  %179 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %171
  %181 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %178 to i8*
  tail call void @_ZdaPv(i8* %181) #10
  br label %182

182:                                              ; preds = %180, %171
  %183 = bitcast %class.GrTextStrike* %164 to i8*
  tail call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %182, %166, %160
  %185 = icmp eq %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %162, %147
  br i1 %185, label %186, label %160

186:                                              ; preds = %184, %152
  tail call void @_ZdaPv(i8* %154) #10
  br label %187

187:                                              ; preds = %150, %186
  ret void

188:                                              ; preds = %196, %148
  %189 = phi i64 [ 0, %148 ], [ %197, %196 ]
  %190 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %147, i64 %189, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %147, i64 %189, i32 0
  %195 = tail call %class.sk_sp.19* @_ZN12SkTHashTableI5sk_spI12GrTextStrikeE12SkDescriptorN13GrStrikeCache20DescriptorHashTraitsEE12uncheckedSetEOS2_(%class.SkTHashTable* %0, %class.sk_sp.19* dereferenceable(8) %194)
  br label %196

196:                                              ; preds = %193, %188
  %197 = add nuw nsw i64 %189, 1
  %198 = icmp eq i64 %197, %149
  br i1 %198, label %150, label %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.sk_sp.19* @_ZN12SkTHashTableI5sk_spI12GrTextStrikeE12SkDescriptorN13GrStrikeCache20DescriptorHashTraitsEE12uncheckedSetEOS2_(%class.SkTHashTable*, %class.sk_sp.19* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.19, %class.sk_sp.19* %1, i64 0, i32 0
  %4 = load %class.GrTextStrike*, %class.GrTextStrike** %3, align 8
  %5 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %4, i64 0, i32 2, i32 0
  %6 = load %class.SkDescriptor*, %class.SkDescriptor** %5, align 8
  %7 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 1, i32 %8
  %11 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %99

14:                                               ; preds = %2
  %15 = add nsw i32 %12, -1
  %16 = and i32 %10, %15
  %17 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %14, %91
  %19 = phi i32 [ 0, %14 ], [ %97, %91 ]
  %20 = phi i32 [ %16, %14 ], [ %96, %91 ]
  %21 = sext i32 %20 to i64
  %22 = load %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"*, %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"** %17, align 8
  %23 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %22, i64 %21
  %24 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %22, i64 %21, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %57

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %23, i64 0, i32 0
  %29 = bitcast %class.sk_sp.19* %1 to i64*
  %30 = load i64, i64* %29, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %3, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %23, i64 0, i32 0, i32 0
  %32 = load %class.GrTextStrike*, %class.GrTextStrike** %31, align 8
  %33 = bitcast %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %23 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %class.GrTextStrike* %32, null
  br i1 %34, label %53, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %32, i64 0, i32 0
  %37 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %53

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %36, i64 38
  %42 = bitcast %class.SkNVRefCnt* %41 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %42) #9
  %43 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %36, i64 6
  %44 = bitcast %class.SkNVRefCnt* %43 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %44) #9
  %45 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %36, i64 4
  %46 = bitcast %class.SkNVRefCnt* %45 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %47 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %46, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %46, align 8
  %48 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %40
  %50 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %47 to i8*
  tail call void @_ZdaPv(i8* %50) #10
  br label %51

51:                                               ; preds = %49, %40
  %52 = bitcast %class.GrTextStrike* %32 to i8*
  tail call void @_ZdlPv(i8* %52) #10
  br label %53

53:                                               ; preds = %27, %35, %51
  store i32 %10, i32* %24, align 8
  %54 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %54, align 8
  br label %99

57:                                               ; preds = %18
  %58 = icmp eq i32 %10, %25
  br i1 %58, label %59, label %91

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %23, i64 0, i32 0, i32 0
  %61 = load %class.GrTextStrike*, %class.GrTextStrike** %60, align 8
  %62 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %61, i64 0, i32 2, i32 0
  %63 = load %class.SkDescriptor*, %class.SkDescriptor** %62, align 8
  %64 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %6, %class.SkDescriptor* dereferenceable(12) %63) #9
  br i1 %64, label %65, label %91

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %23, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot", %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %23, i64 0, i32 0
  %68 = bitcast %class.sk_sp.19* %1 to i64*
  %69 = load i64, i64* %68, align 8
  store %class.GrTextStrike* null, %class.GrTextStrike** %3, align 8
  %70 = load %class.GrTextStrike*, %class.GrTextStrike** %66, align 8
  %71 = bitcast %"struct.SkTHashTable<sk_sp<GrTextStrike>, SkDescriptor, GrStrikeCache::DescriptorHashTraits>::Slot"* %23 to i64*
  store i64 %69, i64* %71, align 8
  %72 = icmp eq %class.GrTextStrike* %70, null
  br i1 %72, label %99, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %70, i64 0, i32 0
  %75 = getelementptr inbounds %class.GrTextStrike, %class.GrTextStrike* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %99

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %74, i64 38
  %80 = bitcast %class.SkNVRefCnt* %79 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %80) #9
  %81 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %74, i64 6
  %82 = bitcast %class.SkNVRefCnt* %81 to %class.SkAutoDescriptor*
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %82) #9
  %83 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %74, i64 4
  %84 = bitcast %class.SkNVRefCnt* %83 to %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"**
  %85 = load %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"*, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %84, align 8
  store %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* null, %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"** %84, align 8
  %86 = icmp eq %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %78
  %88 = bitcast %"struct.SkTHashTable<GrGlyph *, SkPackedGlyphID, GrTextStrike::HashTraits>::Slot"* %85 to i8*
  tail call void @_ZdaPv(i8* %88) #10
  br label %89

89:                                               ; preds = %87, %78
  %90 = bitcast %class.GrTextStrike* %70 to i8*
  tail call void @_ZdlPv(i8* %90) #10
  br label %99

91:                                               ; preds = %59, %57
  %92 = add nsw i32 %20, -1
  %93 = icmp slt i32 %20, 1
  %94 = load i32, i32* %11, align 4
  %95 = select i1 %93, i32 %94, i32 0
  %96 = add nsw i32 %92, %95
  %97 = add nuw nsw i32 %19, 1
  %98 = icmp slt i32 %97, %94
  br i1 %98, label %18, label %99

99:                                               ; preds = %91, %2, %89, %73, %65, %53
  %100 = phi %class.sk_sp.19* [ %67, %89 ], [ %67, %73 ], [ %67, %65 ], [ %28, %53 ], [ null, %2 ], [ null, %91 ]
  ret %class.sk_sp.19* %100
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZN13SkScalerCache7metricsE6SkSpanIKtEPPK7SkGlyph(%"class.std::__1::tuple.82"* sret, %class.SkScalerCache*, i16*, i64, %class.SkGlyph**) local_unnamed_addr #2

declare void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"*, i64) local_unnamed_addr #2

declare void @_ZN13SkScalerCache12preparePathsE6SkSpanIKtEPPK7SkGlyph(%"class.std::__1::tuple.82"* sret, %class.SkScalerCache*, i16*, i64, %class.SkGlyph**) local_unnamed_addr #2

declare void @_ZN13SkScalerCache14findInterceptsEPKfffP7SkGlyphPfPi(%class.SkScalerCache*, float*, float, float, %class.SkGlyph*, float*, i32*) local_unnamed_addr #2

declare void @_ZN13SkScalerCache13prepareImagesE6SkSpanIK15SkPackedGlyphIDEPPK7SkGlyph(%"class.std::__1::tuple.82"* sret, %class.SkScalerCache*, %struct.SkPackedGlyphID*, i64, %class.SkGlyph**) local_unnamed_addr #2

declare dereferenceable(12) %class.SkDescriptor* @_ZNK13SkScalerCache13getDescriptorEv(%class.SkScalerCache*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN10SkFontPriv14MakeTextMatrixERK6SkFont: argument 0"}
!4 = distinct !{!4, !"_ZN10SkFontPriv14MakeTextMatrixERK6SkFont"}
!5 = !{!6, !8, !3}
!6 = distinct !{!6, !7, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!7 = distinct !{!7, !"_ZN8SkMatrix5ScaleEff"}
!8 = distinct !{!8, !9, !"_ZN10SkFontPriv14MakeTextMatrixEfff: argument 0"}
!9 = distinct !{!9, !"_ZN10SkFontPriv14MakeTextMatrixEfff"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPKS2_: argument 0"}
!12 = distinct !{!12, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPKS2_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__110make_tupleIJ12SkStrikeSpecRfS2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__110make_tupleIJ12SkStrikeSpecRfS2_EEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS5_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN13GrStrikeCache18findOrCreateStrikeERK12SkDescriptor: argument 0"}
!18 = distinct !{!18, !"_ZN13GrStrikeCache18findOrCreateStrikeERK12SkDescriptor"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_Z9sk_ref_spI12SkMaskFilterE5sk_spIT_EPS2_: argument 0"}
!21 = distinct !{!21, !"_Z9sk_ref_spI12SkMaskFilterE5sk_spIT_EPS2_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_Z9sk_ref_spI12SkPathEffectE5sk_spIT_EPS2_: argument 0"}
!24 = distinct !{!24, !"_Z9sk_ref_spI12SkPathEffectE5sk_spIT_EPS2_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache: argument 0"}
!27 = distinct !{!27, !"_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache: argument 0"}
!30 = distinct !{!30, !"_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache: argument 0"}
!33 = distinct !{!33, !"_ZNK12SkStrikeSpec18findOrCreateStrikeEP13SkStrikeCache"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_Z10sk_make_spI12GrTextStrikeJRK12SkDescriptorEE5sk_spIT_EDpOT0_: argument 0"}
!36 = distinct !{!36, !"_Z10sk_make_spI12GrTextStrikeJRK12SkDescriptorEE5sk_spIT_EDpOT0_"}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.unroll.disable"}
