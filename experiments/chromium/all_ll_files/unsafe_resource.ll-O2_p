; ModuleID = '../../components/security_interstitials/core/unsafe_resource.cc'
source_filename = "../../components/security_interstitials/core/unsafe_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.security_interstitials::UnsafeResource" = type <{ %class.GURL, %class.GURL, %class.GURL, %class.GURL, %"class.std::__1::vector", i8, i8, [2 x i8], i32, %"struct.safe_browsing::ThreatMetadata", i32, [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.24, %"class.base::RepeatingCallback.26", %"class.base::RepeatingCallback.27", i32, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.safe_browsing::ThreatMetadata" = type { i32, %"class.std::__1::set", %"class.base::flat_map", %"class.std::__1::basic_string" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.16" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::pair"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.24 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.26" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.27" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25", [4 x i8] }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.base::internal::BindState" = type <{ %"class.base::internal::BindStateBase", %"class.base::RepeatingCallback", %"class.std::__1::tuple", [6 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.28" }
%"class.std::__1::__tuple_leaf" = type { i8 }
%"class.std::__1::__tuple_leaf.28" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEE6CreateIRKS4_JRbS9_EEEPS5_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE = comdat any

@.str.1 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN22security_interstitials14UnsafeResourceC1Ev = hidden unnamed_addr alias void (%"struct.security_interstitials::UnsafeResource"*), void (%"struct.security_interstitials::UnsafeResource"*)* @_ZN22security_interstitials14UnsafeResourceC2Ev
@_ZN22security_interstitials14UnsafeResourceC1ERKS0_ = hidden unnamed_addr alias void (%"struct.security_interstitials::UnsafeResource"*, %"struct.security_interstitials::UnsafeResource"*), void (%"struct.security_interstitials::UnsafeResource"*, %"struct.security_interstitials::UnsafeResource"*)* @_ZN22security_interstitials14UnsafeResourceC2ERKS0_
@_ZN22security_interstitials14UnsafeResourceD1Ev = hidden unnamed_addr alias void (%"struct.security_interstitials::UnsafeResource"*), void (%"struct.security_interstitials::UnsafeResource"*)* @_ZN22security_interstitials14UnsafeResourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials14UnsafeResourceC2Ev(%"struct.security_interstitials::UnsafeResource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #8
  %3 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %3) #8
  %4 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %4) #8
  %5 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1Ev(%class.GURL* %5) #8
  %6 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 8
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 26, i1 false)
  store i32 1, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 9
  tail call void @_ZN13safe_browsing14ThreatMetadataC1Ev(%"struct.safe_browsing::ThreatMetadata"* %9) #8
  %10 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 10
  store i32 3, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 18
  %13 = bitcast %"class.base::internal::BindStateBase"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 36, i1 false)
  %14 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZN13safe_browsing14ThreatMetadataC1Ev(%"struct.safe_browsing::ThreatMetadata"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials14UnsafeResourceC2ERKS0_(%"struct.security_interstitials::UnsafeResource"*, %"struct.security_interstitials::UnsafeResource"* dereferenceable(672)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #8
  %5 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %6) #8
  %7 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %7, %class.GURL* dereferenceable(120) %8) #8
  %9 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 3
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %10) #8
  %11 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 4
  %13 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #8
  %14 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 4, i32 0, i32 1
  %15 = bitcast %class.GURL** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %12 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = sdiv exact i64 %19, 120
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %2
  %23 = icmp ugt i64 %20, 153722867280912930
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #9
  unreachable

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 %19) #10
  %28 = bitcast i8* %27 to %class.GURL*
  %29 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 4, i32 0, i32 1
  %30 = bitcast %class.GURL** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast %"class.std::__1::vector"* %11 to i8**
  store i8* %27, i8** %31, align 8
  %32 = getelementptr inbounds %class.GURL, %class.GURL* %28, i64 %20
  %33 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %32, %class.GURL** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %35 = load %class.GURL*, %class.GURL** %34, align 8
  %36 = load %class.GURL*, %class.GURL** %14, align 8
  %37 = bitcast %class.GURL** %29 to i64*
  %38 = ptrtoint i8* %27 to i64
  %39 = icmp eq %class.GURL* %35, %36
  br i1 %39, label %48, label %40

40:                                               ; preds = %26, %40
  %41 = phi %class.GURL* [ %44, %40 ], [ %28, %26 ]
  %42 = phi %class.GURL* [ %43, %40 ], [ %35, %26 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %41, %class.GURL* dereferenceable(120) %42) #8
  %43 = getelementptr inbounds %class.GURL, %class.GURL* %42, i64 1
  %44 = getelementptr inbounds %class.GURL, %class.GURL* %41, i64 1
  %45 = icmp eq %class.GURL* %43, %36
  br i1 %45, label %46, label %40

46:                                               ; preds = %40
  %47 = ptrtoint %class.GURL* %44 to i64
  br label %48

48:                                               ; preds = %46, %26
  %49 = phi i64 [ %38, %26 ], [ %47, %46 ]
  store i64 %49, i64* %37, align 8
  br label %50

50:                                               ; preds = %2, %48
  %51 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 5
  %52 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 5
  %53 = bitcast i8* %52 to i64*
  %54 = bitcast i8* %51 to i64*
  %55 = load i64, i64* %53, align 8
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 9
  %57 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 9
  tail call void @_ZN13safe_browsing14ThreatMetadataC1ERKS0_(%"struct.safe_browsing::ThreatMetadata"* %56, %"struct.safe_browsing::ThreatMetadata"* dereferenceable(80) %57) #8
  %58 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 10
  %59 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 10
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %58, align 8
  %61 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 12, i32 0
  %62 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 12, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %61, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %62) #8
  %63 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 13, i32 0
  %64 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %63, align 8
  %65 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 13, i32 0
  store %"class.base::SingleThreadTaskRunner"* %64, %"class.base::SingleThreadTaskRunner"** %65, align 8
  %66 = icmp eq %"class.base::SingleThreadTaskRunner"* %64, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  br label %70

70:                                               ; preds = %50, %67
  %71 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 14, i32 0
  %72 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 14, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %71, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %72) #8
  %73 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 15, i32 0
  %74 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 15, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %73, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %74) #8
  %75 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 16
  %76 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 16
  %77 = load i32, i32* %76, align 8
  store i32 %77, i32* %75, align 8
  %78 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 18
  %79 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 18
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %70
  %85 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #8
  br label %92

87:                                               ; preds = %70
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %78, i8* %89, i64 %91) #8
  br label %92

92:                                               ; preds = %84, %87
  %93 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 19
  %94 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %1, i64 0, i32 19
  %95 = load i8, i8* %94, align 8, !range !2
  store i8 %95, i8* %93, align 8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN13safe_browsing14ThreatMetadataC1ERKS0_(%"struct.safe_browsing::ThreatMetadata"*, %"struct.safe_browsing::ThreatMetadata"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials14UnsafeResourceD2Ev(%"struct.security_interstitials::UnsafeResource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 18
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 15, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #8
  %12 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 14, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %12) #8
  %13 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 13, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.25", %"class.base::RefCountedThreadSafe.25"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.25", %"class.base::RefCountedThreadSafe.25"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe.25"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #8
  br label %24

24:                                               ; preds = %10, %16, %21
  %25 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 12, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %25) #8
  %26 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 9
  tail call void @_ZN13safe_browsing14ThreatMetadataD1Ev(%"struct.safe_browsing::ThreatMetadata"* %26) #8
  %27 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 0
  %29 = load %class.GURL*, %class.GURL** %28, align 8
  %30 = icmp eq %class.GURL* %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %24
  %32 = bitcast %class.GURL* %29 to i8*
  %33 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 4, i32 0, i32 1
  %34 = load %class.GURL*, %class.GURL** %33, align 8
  %35 = icmp eq %class.GURL* %34, %29
  br i1 %35, label %43, label %36

36:                                               ; preds = %31, %36
  %37 = phi %class.GURL* [ %38, %36 ], [ %34, %31 ]
  %38 = getelementptr inbounds %class.GURL, %class.GURL* %37, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %38) #8
  %39 = icmp eq %class.GURL* %38, %29
  br i1 %39, label %40, label %36

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::vector"* %27 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi i8* [ %42, %40 ], [ %32, %31 ]
  store %class.GURL* %29, %class.GURL** %33, align 8
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %24, %43
  %46 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 3
  tail call void @_ZN4GURLD1Ev(%class.GURL* %46) #8
  %47 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %47) #8
  %48 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %48) #8
  %49 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %49) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN13safe_browsing14ThreatMetadataD1Ev(%"struct.safe_browsing::ThreatMetadata"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK22security_interstitials14UnsafeResource21IsMainPageLoadBlockedEv(%"struct.security_interstitials::UnsafeResource"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -6
  %9 = icmp ult i32 %8, 16
  br i1 %9, label %10, label %15

10:                                               ; preds = %5
  %11 = trunc i32 %8 to i16
  %12 = lshr i16 250, %11
  %13 = and i16 %12, 1
  %14 = icmp ne i16 %13, 0
  ret i1 %14

15:                                               ; preds = %5, %1
  %16 = phi i1 [ false, %1 ], [ true, %5 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK22security_interstitials14UnsafeResource16DispatchCallbackERKN4base8LocationEbb(%"struct.security_interstitials::UnsafeResource"*, %"class.base::Location"* dereferenceable(32), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %5, align 1
  %9 = zext i1 %3 to i8
  store i8 %9, i8* %6, align 1
  %10 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = icmp eq %"class.base::internal::BindStateBase"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"struct.security_interstitials::UnsafeResource", %"struct.security_interstitials::UnsafeResource"* %0, i64 0, i32 13, i32 0
  %16 = bitcast %"class.base::SingleThreadTaskRunner"** %15 to %"class.base::TaskRunner"**
  %17 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %16, align 8
  %18 = call %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEE6CreateIRKS4_JRbS9_EEEPS5_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::RepeatingCallback"* dereferenceable(8) %10, i8* nonnull dereferenceable(1) %5, i8* nonnull dereferenceable(1) %6) #8, !noalias !3
  %19 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %19, %"class.base::internal::BindStateBase"** %20, align 8, !alias.scope !3
  %21 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %17, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %7) #8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  br label %23

23:                                               ; preds = %4, %14
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState"* @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEE6CreateIRKS4_JRbS9_EEEPS5_PFvvEOT_DpOT0_(void ()*, %"class.base::RepeatingCallback"* dereferenceable(8), i8* dereferenceable(1), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_Znwm(i64 48) #10
  %7 = bitcast i8* %6 to %"struct.base::internal::BindState"*
  %8 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %8, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #8
  %9 = getelementptr inbounds i8, i8* %6, i64 32
  %10 = bitcast i8* %9 to %"class.base::internal::CallbackBaseCopyable"*
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %10, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %11) #8
  %12 = getelementptr inbounds i8, i8* %6, i64 40
  %13 = load i8, i8* %2, align 1, !range !2
  store i8 %13, i8* %12, align 1
  %14 = getelementptr inbounds i8, i8* %6, i64 41
  %15 = load i8, i8* %3, align 1, !range !2
  store i8 %15, i8* %14, align 1
  %16 = bitcast i8* %9 to %"class.base::internal::BindStateBase"**
  %17 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %16, align 8
  %18 = icmp eq %"class.base::internal::BindStateBase"* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %4, %19
  ret %"struct.base::internal::BindState"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  %7 = load i8, i8* %5, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = load i8, i8* %6, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = bitcast %"class.base::RepeatingCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  %17 = inttoptr i64 %14 to %"class.base::internal::BindStateBase"*
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, i1, i1)**
  %20 = load void (%"class.base::internal::BindStateBase"*, i1, i1)*, void (%"class.base::internal::BindStateBase"*, i1, i1)** %19, align 8
  tail call void %20(%"class.base::internal::BindStateBase"* %17, i1 zeroext %8, i1 zeroext %10) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_17RepeatingCallbackIFvbbEEEJbbEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #8
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #8
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackERKNS_17RepeatingCallbackIFvbbEEEJRbS8_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackERKNS_17RepeatingCallbackIFvbbEEEJRbS8_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIRKNS_17RepeatingCallbackIFvbbEEEJRbS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIRKNS_17RepeatingCallbackIFvbbEEEJRbS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
