; ModuleID = '../../third_party/blink/renderer/core/html/forms/html_select_menu_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/html_select_menu_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.209", i32, [4 x i8], %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.345", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.386", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.325", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__cxx_atomic_impl.248" }
%"struct.std::__1::__cxx_atomic_impl.248" = type { %"struct.std::__1::__cxx_atomic_base_impl.249" }
%"struct.std::__1::__cxx_atomic_base_impl.249" = type { i64 }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::Worklist.256"* }
%"class.blink::Worklist.256" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist.263"* }
%"class.blink::Worklist.263" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::Worklist.277"* }
%"class.blink::Worklist.277" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::Worklist.284"* }
%"class.blink::Worklist.284" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::Worklist.291"* }
%"class.blink::Worklist.291" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.305", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.319", [4 x i8] }>
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307", %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { i64 }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { float }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.328", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.337" }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.339" }
%"class.WTF::VectorBufferBase.339" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.353" }
%"class.WTF::VectorBuffer.353" = type { %"class.WTF::VectorBufferBase.354" }
%"class.WTF::VectorBufferBase.354" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.367" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.256"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.263"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.270"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.277"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.284"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.615" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.385 }
%class.scoped_refptr.385 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.386" = type { %"struct.std::__1::__atomic_base.387" }
%"struct.std::__1::__atomic_base.387" = type { %"struct.std::__1::__cxx_atomic_impl.388" }
%"struct.std::__1::__cxx_atomic_impl.388" = type { %"struct.std::__1::__cxx_atomic_base_impl.389" }
%"struct.std::__1::__cxx_atomic_base_impl.389" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.196", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.196" = type { %"class.base::RefCounted.197" }
%"class.base::RefCounted.197" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.200" }
%"class.blink::HeapHashMap.200" = type { %"class.WTF::HashMap.203" }
%"class.WTF::HashMap.203" = type { %"class.WTF::HashTable.204" }
%"class.WTF::HashTable.204" = type <{ %"struct.WTF::KeyValuePair.206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.206" = type { %"class.blink::WeakMember.207", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.161" }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.blink::HTMLSelectMenuElement::SelectMutationCallback" = type { %"class.blink::MutationObserver::Delegate", %"class.blink::Member", %"class.blink::Member.40" }
%"class.blink::MutationObserver::Delegate" = type { %"class.blink::NameClient" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLSelectMenuElement"* }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::MutationObserver"* }
%"class.blink::MutationObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", [3 x i8], %"class.blink::Member.48", %"class.blink::HeapVector", %"class.blink::HeapHashSet.58", i32, [4 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"class.blink::WeakMember.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.47" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::MutationObserver::Delegate"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.52" }
%"class.WTF::Vector.52" = type { %"class.WTF::VectorBuffer.53" }
%"class.WTF::VectorBuffer.53" = type { %"class.WTF::VectorBufferBase.54" }
%"class.WTF::VectorBufferBase.54" = type { %"class.blink::Member.55"*, i32, i32 }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::MutationRecord"* }
%"class.blink::MutationRecord" = type { %"class.blink::ScriptWrappable", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::HeapHashSet.58" = type { %"class.WTF::HashSet.61" }
%"class.WTF::HashSet.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"class.blink::WeakMember.64"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.64" = type opaque
%"class.blink::HTMLSelectMenuElement" = type { %"class.blink::HTMLElement", %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.27", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.31", %"class.blink::HeapLinkedHashSet", %"class.blink::Member.29" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.71", %"class.blink::Member.73", %"class.blink::Member.4", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::Member.96", %"class.blink::Member.98", %"class.blink::Member.100", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.105", %"class.blink::HeapVector.107" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.157", %"class.WTF::Vector.157", i8, i32, %"class.blink::Member.168", %"class.blink::Member.170", %"class.blink::Member.172", %"class.blink::Member.174", %"class.blink::Member.176", %"class.blink::Member.178", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.181", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.187", %"class.blink::Member.189", %"class.blink::Member.113", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.192", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.89", %"class.blink::Member.29", %"class.blink::Member.402", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::UserActionElementSet", %"class.blink::Member.407", double, double, i64, i64, %"class.blink::HeapHashSet.409", %"class.blink::HeapHashSet.416", i16, i8, %"class.blink::Member.423", %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::TextLinkColors", %"class.blink::Member.431", i8, [7 x i8], %"class.blink::HeapHashMap.433", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.29", %"class.WTF::Vector.440", %"class.blink::Member.445", %"class.blink::Member.447", i8, %"class.blink::Member.29", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.449", %"class.blink::HeapVector.451", %"class.std::__1::unique_ptr.459", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.465", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.478", %"class.WTF::Vector.480", i8, i8, %"class.std::__1::unique_ptr.485", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.89", %"class.blink::HeapVector.491", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.498", i8, i32, %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::Member.504", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.506", %"class.WTF::HashMap.508", %"class.blink::Member.513", %"class.blink::Member.515", %"class.blink::Member.517", %"class.blink::Member.519", %"class.blink::Member.73", %"class.blink::Member.73", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.521", i8, i32, %"class.blink::Member.528", %"class.blink::Member.530", i32, %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::Member.536", %"class.std::__1::unique_ptr.538", i64, %"class.std::__1::unique_ptr.544", i32, i32, %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::Member.554", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.556", %"class.WTF::Vector.558", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.563", %"class.blink::Member.570", %"class.std::__1::unique_ptr.572", %"class.blink::Member.578", i8, i8, %"class.WTF::String", %"class.blink::Member.580", i8, [7 x i8], %"class.blink::HeapHashMap.582", %"class.blink::HeapObserverSet.589", %"class.blink::Member.597", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.599", i32, i8, i8, %"class.blink::WeakMember.601", %"class.blink::Member.602" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.150" }
%"class.blink::HeapHashMap.150" = type { %"class.WTF::HashMap.153" }
%"class.WTF::HashMap.153" = type { %"class.WTF::HashTable.154" }
%"class.WTF::HashTable.154" = type <{ %"struct.WTF::KeyValuePair.156"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.156" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.161" }
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.620", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.653", i32, i8, [3 x i8], %"class.blink::HeapVector.655", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.663", %"class.blink::Member.665", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.674", %"class.blink::Member.680", %"class.blink::Member.682", i8, [7 x i8] }>
%"class.blink::Supplementable.620" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.621" }
%"class.blink::HeapHashMap.621" = type { %"class.WTF::HashMap.624" }
%"class.WTF::HashMap.624" = type { %"class.WTF::HashTable.625" }
%"class.WTF::HashTable.625" = type <{ %"struct.WTF::KeyValuePair.627"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.627" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.628" }
%"class.blink::Supplementable.628" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.629" }
%"class.blink::HeapHashMap.629" = type { %"class.WTF::HashMap.632" }
%"class.WTF::HashMap.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"struct.WTF::KeyValuePair.635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.635" = type { i8*, %"class.blink::Member.785" }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.787" }
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.636, %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.643", %"class.std::__1::unique_ptr.643", %"class.blink::Member.170", i32, [4 x i8], %"class.WTF::HashSet.649", i32, i32 }
%class.scoped_refptr.636 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.655" = type { %"class.WTF::Vector.658" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %"class.blink::Member.661"*, i32, i32 }
%"class.blink::Member.661" = type opaque
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.667", i32, i32 }
%"class.blink::HeapHashMap.667" = type { %"class.WTF::HashMap.670" }
%"class.WTF::HashMap.670" = type { %"class.WTF::HashTable.671" }
%"class.WTF::HashTable.671" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.174" = type { %"class.blink::MemberBase.175" }
%"class.blink::MemberBase.175" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.115", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.117, %"class.WTF::Vector.118", %"class.WTF::Vector.118", %"class.blink::Member.2", %"class.blink::Member.123", %"class.blink::HeapHashSet.127", %"class.blink::Member.73", %"class.WTF::HashSet.134", %"class.WTF::TextPosition", %"class.blink::Member.138", %"class.blink::HeapVector.140", %"class.blink::Member.147" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.117 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120" }
%"class.WTF::VectorBufferBase.120" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.125" }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.127" = type { %"class.WTF::HashSet.130" }
%"class.WTF::HashSet.130" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"class.blink::WeakMember.133"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.133" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet.134" = type { %"class.WTF::HashTable.135" }
%"class.WTF::HashTable.135" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.140" = type { %"class.WTF::Vector.143" }
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"class.blink::Member.123"*, i32, i32 }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.192" = type { %"class.WTF::VectorBuffer.193" }
%"class.WTF::VectorBuffer.193" = type { %"class.WTF::VectorBufferBase.194" }
%"class.WTF::VectorBufferBase.194" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.404" }
%"class.blink::HeapHashMap.404" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::Member.29", i32, [4 x i8] }>
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.409" = type { %"class.WTF::HashSet.412" }
%"class.WTF::HashSet.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"class.blink::WeakMember.415"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.415" = type opaque
%"class.blink::HeapHashSet.416" = type { %"class.WTF::HashSet.419" }
%"class.WTF::HashSet.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"class.blink::WeakMember.422"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.422" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.107" }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.433" = type { %"class.WTF::HashMap.436" }
%"class.WTF::HashMap.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.WTF::Vector.440" = type { %"class.WTF::VectorBuffer.441" }
%"class.WTF::VectorBuffer.441" = type { %"class.WTF::VectorBufferBase.442" }
%"class.WTF::VectorBufferBase.442" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.451" = type { %"class.WTF::Vector.454" }
%"class.WTF::Vector.454" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"class.blink::Member.457"*, i32, i32 }
%"class.blink::Member.457" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.465" = type { %"class.WTF::HashSet.468" }
%"class.WTF::HashSet.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ %"class.blink::WeakMember.471"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.471" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.472", i32, [4 x i8] }>
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474" }
%"class.WTF::VectorBufferBase.474" = type { %"struct.std::__1::pair.475"*, i32, i32 }
%"struct.std::__1::pair.475" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.89" = type { %"class.WTF::Vector.92" }
%"class.WTF::Vector.92" = type { %"class.WTF::VectorBuffer.93" }
%"class.WTF::VectorBuffer.93" = type { %"class.WTF::VectorBufferBase.94" }
%"class.WTF::VectorBufferBase.94" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::HeapVector.491" = type { %"class.WTF::Vector.494" }
%"class.WTF::Vector.494" = type { %"class.WTF::VectorBuffer.495" }
%"class.WTF::VectorBuffer.495" = type { %"class.WTF::VectorBufferBase.496" }
%"class.WTF::VectorBufferBase.496" = type { %"class.blink::Member.31"*, i32, i32 }
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.73" }
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.512"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.512" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.401", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.392, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.392 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.393" }>
%"class.base::RefCountedThreadSafe.393" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.394 }
%class.scoped_refptr.394 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.395", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.395" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.396" }
%"struct.std::__1::atomic.396" = type { %"struct.std::__1::__atomic_base.397" }
%"struct.std::__1::__atomic_base.397" = type { %"struct.std::__1::__atomic_base.398" }
%"struct.std::__1::__atomic_base.398" = type { %"struct.std::__1::__cxx_atomic_impl.399" }
%"struct.std::__1::__cxx_atomic_impl.399" = type { %"struct.std::__1::__cxx_atomic_base_impl.400" }
%"struct.std::__1::__cxx_atomic_base_impl.400" = type { i8 }
%"class.blink::WeakMember.401" = type { %"class.blink::MemberBase.74" }
%"class.blink::HeapHashSet.521" = type { %"class.WTF::HashSet.524" }
%"class.WTF::HashSet.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"class.blink::Member.527"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.527" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.563" = type { %"class.WTF::HashMap.566" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.582" = type { %"class.WTF::HashMap.585" }
%"class.WTF::HashMap.585" = type { %"class.WTF::HashTable.586" }
%"class.WTF::HashTable.586" = type <{ %"struct.WTF::KeyValuePair.588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.588" = type opaque
%"class.blink::HeapObserverSet.589" = type { i32, [4 x i8], %"class.blink::HeapHashSet.590" }
%"class.blink::HeapHashSet.590" = type { %"class.WTF::HashSet.593" }
%"class.WTF::HashSet.593" = type { %"class.WTF::HashTable.594" }
%"class.WTF::HashTable.594" = type <{ %"class.blink::WeakMember.596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.596" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.73", %"class.blink::HeapHashSet.606", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.613", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.606" = type { %"class.WTF::HashSet.609" }
%"class.WTF::HashSet.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"class.blink::Member.612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.612" = type opaque
%"class.blink::HeapTaskRunnerTimer.613" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.614", { i64, i64 } }
%"class.blink::WeakMember.614" = type { %"class.blink::MemberBase.600" }
%"class.blink::WeakMember.601" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.81" }
%"class.WTF::HashMap.81" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"struct.WTF::KeyValuePair.84"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.84" = type { %"class.WTF::AtomicString", %"class.blink::Member.85" }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.29", i32, %"class.blink::HeapVector.89" }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.102" }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapHashMap.104"* }
%"class.blink::HeapHashMap.104" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.107" = type { %"class.WTF::Vector.110" }
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"class.blink::Member.113"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* }
%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener" = type { %"class.blink::NativeEventListener", %"class.blink::Member" }
%"class.blink::NativeEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"* }
%"class.blink::HTMLSelectMenuElement::OptionPartEventListener" = type { %"class.blink::NativeEventListener", %"class.blink::Member" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::HTMLPopupElement"* }
%"class.blink::HTMLPopupElement" = type { %"class.blink::HTMLElement", i8, i8, i8, %"class.blink::WeakMember.65", %"class.blink::Member.66", i8, %"class.blink::WeakMember.68" }
%"class.blink::WeakMember.65" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::Element"* }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::WeakMember.68" = type { %"class.blink::MemberBase" }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.36", i32, i32 }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"class.blink::Member.29" }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.WTF::Vector.686" = type { %"class.WTF::VectorBuffer.687" }
%"class.WTF::VectorBuffer.687" = type { %"class.WTF::VectorBufferBase.688" }
%"class.WTF::VectorBufferBase.688" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.691" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.691" = type { %"class.v8::TracedReference.692" }
%"class.v8::TracedReference.692" = type { %"class.v8::BasicTracedReference.693" }
%"class.v8::BasicTracedReference.693" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::MutationObserverInit" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::Vector.686", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::StaticNodeTypeList" = type { %"class.blink::NodeList", %"class.blink::HeapVector.694" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapVector.694" = type { %"class.WTF::Vector.697" }
%"class.WTF::Vector.697" = type { %"class.WTF::VectorBuffer.698" }
%"class.WTF::VectorBuffer.698" = type { %"class.WTF::VectorBufferBase.699" }
%"class.WTF::VectorBufferBase.699" = type { %"class.blink::Member.2"*, i32, i32 }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.427", %"class.blink::Member.701", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.694", %"class.blink::HeapVector.694", i8, %"class.blink::HeapLinkedHashSet.703" }
%"class.blink::HeapLinkedHashSet.703" = type { %"class.WTF::LinkedHashSet.706" }
%"class.WTF::LinkedHashSet.706" = type { %"class.WTF::HashMap.707", %"class.WTF::VectorBackedLinkedList.711" }
%"class.WTF::HashMap.707" = type { %"class.WTF::HashTable.708" }
%"class.WTF::HashTable.708" = type <{ %"struct.WTF::KeyValuePair.710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.710" = type opaque
%"class.WTF::VectorBackedLinkedList.711" = type { %"class.WTF::Vector.712", i32, i32 }
%"class.WTF::Vector.712" = type { %"class.WTF::VectorBuffer.713" }
%"class.WTF::VectorBuffer.713" = type { %"class.WTF::VectorBufferBase.714" }
%"class.WTF::VectorBufferBase.714" = type { %"class.WTF::VectorBackedLinkedListNode.715"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.715" = type opaque
%"class.blink::HTMLButtonElement" = type <{ %"class.blink::HTMLFormControlElement.base", [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.717", %"class.blink::Member.719", %"class.blink::Member.721", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.725", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.737", %"class.WTF::Vector.739" }
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.728", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.740" }
%"class.WTF::VectorBuffer.740" = type { %"class.WTF::VectorBufferBase.741" }
%"class.WTF::VectorBufferBase.741" = type { i32*, i32, i32 }
%"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.744", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.746", %"class.blink::Member.746", %"class.blink::Member.748", %"class.blink::Member.750", %"class.base::TimeTicks" }
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::Event"* }
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.777" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.765" }
%"class.blink::HeapVector.765" = type { %"class.WTF::Vector.768" }
%"class.WTF::Vector.768" = type { %"class.WTF::VectorBuffer.769" }
%"class.WTF::VectorBuffer.769" = type { %"class.WTF::VectorBufferBase.770", [32 x i8] }
%"class.WTF::VectorBufferBase.770" = type { %"struct.std::__1::pair.771"*, i32, i32 }
%"struct.std::__1::pair.771" = type { %"class.WTF::AtomicString", %"class.blink::Member.772" }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::HeapVector.774"* }
%"class.blink::HeapVector.774" = type opaque
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.WTF::Vector.780"* }
%"class.WTF::Vector.780" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.756, %"class.blink::Member.757", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.756 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.759" }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.761", i8, [7 x i8] }>
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.694", %"class.WTF::String"* }
%"class.WTF::HashMap.784" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.806 }
%union.anon.806 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback11PartRemovedIN3WTF6StringEEEvRKT_PNS_7ElementE = comdat any

$_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback12PartInsertedIN3WTF12AtomicStringEEEvRKT_PNS_7ElementE = comdat any

$_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback11PartRemovedIN3WTF12AtomicStringEEEvRKT_PNS_7ElementE = comdat any

$_ZNK5blink13EventListener18NameInHeapSnapshotEv = comdat any

$_ZN5blink13EventListenerD2Ev = comdat any

$_ZN5blink21HTMLSelectMenuElement23ButtonPartEventListenerD0Ev = comdat any

$_ZNK5blink13EventListener14IsEventHandlerEv = comdat any

$_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv = comdat any

$_ZNK5blink13EventListener10ScriptBodyEv = comdat any

$_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE = comdat any

$_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE = comdat any

$_ZNK5blink21HTMLSelectMenuElement23ButtonPartEventListener5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink13EventListener22IsJSBasedEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener21IsNativeEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener20IsImageEventListenerEv = comdat any

$_ZN5blink21HTMLSelectMenuElement23OptionPartEventListenerD0Ev = comdat any

$_ZNK5blink21HTMLSelectMenuElement23OptionPartEventListener5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink16MutationObserver8Delegate18NameInHeapSnapshotEv = comdat any

$_ZN5blink16MutationObserver8DelegateD2Ev = comdat any

$_ZN5blink21HTMLSelectMenuElement22SelectMutationCallbackD0Ev = comdat any

$_ZN5blink7ElementD2Ev = comdat any

$_ZN5blink21HTMLSelectMenuElementD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink21HTMLSelectMenuElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_21HTMLSelectMenuElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16MutationObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEES0_EEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16MutationObserver8DelegateEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16MutationObserver8DelegateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16MutationObserver8DelegateEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16MutationObserver8DelegateEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLButtonElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLPopupElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA167_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA181_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA177_KcEEEPS1_DpOT_ = comdat any

$_ZNK3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_ = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE = comdat any

$_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement23ButtonPartEventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement23OptionPartEventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement22SelectMutationCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLPopupElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16MutationObserver8DelegateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16MutationObserver8DelegateEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink21HTMLSelectMenuElement22SelectMutationCallbackE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::MutationObserver::Delegate"*)* @_ZNK5blink16MutationObserver8Delegate18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MutationObserver::Delegate"*)* @_ZN5blink16MutationObserver8DelegateD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*)* @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallbackD0Ev to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*)* @_ZNK5blink21HTMLSelectMenuElement22SelectMutationCallback19GetExecutionContextEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::HeapVector"*, %"class.blink::MutationObserver"*)* @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback7DeliverERKNS_10HeapVectorINS_6MemberINS_14MutationRecordEEELj0EEERNS_16MutationObserverE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)* @_ZNK5blink21HTMLSelectMenuElement22SelectMutationCallback5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"part\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"attributes\00", align 1
@_ZN5blink10html_names9kPartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"childList\00", align 1
@_ZN5blink10html_names14kSelectmenuTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink21HTMLSelectMenuElementE = hidden unnamed_addr constant { [172 x i8*], [3 x i8*] } { [172 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7ElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement"*)* @_ZN5blink21HTMLSelectMenuElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Visitor"*)* @_ZNK5blink21HTMLSelectMenuElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLSelectMenuElement"*)* @_ZNK5blink21HTMLSelectMenuElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.784"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement"*, %"class.blink::ShadowRoot"*)* @_ZN5blink21HTMLSelectMenuElement25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)] }, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink21HTMLSelectMenuElement15kButtonPartNameE = hidden constant [7 x i8] c"button\00", align 1
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [200 x i8] c"\0A      display: inline-flex;\0A      align-items: center;\0A      background-color: #ffffff;\0A      padding: 0 0 0 3px;\0A      border: 1px solid #767676;\0A      border-radius: 2px;\0A      cursor: default;\0A  \00", align 1
@_ZN5blink16event_type_names6kClickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink21HTMLSelectMenuElement22kSelectedValuePartNameE = hidden constant [15 x i8] c"selected-value\00", align 1
@.str.4 = private unnamed_addr constant [590 x i8] c"\0A    background-image: url(\0A      'data:image/svg+xml,\5C\0A      <svg width=\2220\22 height=\2214\22 viewBox=\220 0 20 16\22 fill=\22none\22 xmlns=\22http://www.w3.org/2000/svg\22>\5C\0A        <path d=\22M4 6 L10 12 L 16 6\22 stroke=\22WindowText\22 stroke-width=\223\22 stroke-linejoin=\22round\22/>\5C\0A      </svg>');\0A    background-origin: content-box;\0A    background-repeat: no-repeat;\0A    background-size: contain;\0A    height: 1.0em;\0A    margin-inline-start: 4px;\0A    opacity: 1;\0A    outline: none;\0A    padding-bottom: 2px;\0A    padding-inline-start: 3px;\0A    padding-inline-end: 3px;\0A    padding-top: 2px;\0A    width: 1.2em;\0A    \00", align 1
@_ZN5blink21HTMLSelectMenuElement16kListboxPartNameE = hidden constant [8 x i8] c"listbox\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [167 x i8] c"A <selectmenu> must not contain an element labeled with part=\22button\22 that is also a descendant of the \22listbox\22 part. This <selectmenu> will not be fully functional.\00", align 1
@.str.7 = private unnamed_addr constant [181 x i8] c"Found non-<popup> element labeled as listbox under <selectmenu>, but only a <popup> can be used for the <selectmenu>'s listbox part. This <selectmenu> will not be fully functional.\00", align 1
@.str.8 = private unnamed_addr constant [181 x i8] c"To receive listbox part controller code, an element labeled as a listbox must not be a descendant of the <selectmenu>'s button part. This <selectmenu> will not be fully functional.\00", align 1
@.str.9 = private unnamed_addr constant [177 x i8] c"To receive option part controller code, an element labeled as an option must be a descendant of the <selectmenu>'s listbox part. This <selectmenu> will not be fully functional.\00", align 1
@_ZN5blink21HTMLSelectMenuElement15kOptionPartNameE = hidden constant [7 x i8] c"option\00", align 1
@_ZTVN5blink21HTMLSelectMenuElement23ButtonPartEventListenerE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventListener"*)* @_ZN5blink13EventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*)* @_ZN5blink21HTMLSelectMenuElement23ButtonPartEventListenerD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink21HTMLSelectMenuElement23ButtonPartEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*, %"class.blink::EventListener"*)* @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)* @_ZNK5blink21HTMLSelectMenuElement23ButtonPartEventListener5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener20IsImageEventListenerEv to i8*)] }, align 8
@_ZTVN5blink21HTMLSelectMenuElement23OptionPartEventListenerE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventListener"*)* @_ZN5blink13EventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*)* @_ZN5blink21HTMLSelectMenuElement23OptionPartEventListenerD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink21HTMLSelectMenuElement23OptionPartEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*, %"class.blink::EventListener"*)* @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)* @_ZNK5blink21HTMLSelectMenuElement23OptionPartEventListener5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener20IsImageEventListenerEv to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [14 x i8] c"EventListener\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.14 = private unnamed_addr constant [27 x i8] c"MutationObserver::Delegate\00", align 1
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@_ZN5blink21HTMLSelectMenuElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.19 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.22 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_7ElementEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [265 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<WTF::VectorBackedLinkedListNode<blink::Member<blink::Element>, blink::HeapAllocator>, WTF::VectorTraits<WTF::VectorBackedLinkedListNode<blink::Member<blink::Element>, blink::HeapAllocator> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MutationObserver8DelegateEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MutationObserver::Delegate]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16MutationObserver8DelegateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16MutationObserver8DelegateEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16MutationObserver8DelegateEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16MutationObserver8DelegateEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16MutationObserver8DelegateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventListener]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names9kPopupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@.str.24 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.26 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7ElementEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [428 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Element>, WTF::KeyValuePair<blink::Member<blink::Element>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Element>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Element> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator> >]\00", align 1
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink21HTMLSelectMenuElement22SelectMutationCallbackC1ERS0_ = hidden unnamed_addr alias void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::HTMLSelectMenuElement"*), void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::HTMLSelectMenuElement"*)* @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallbackC2ERS0_
@_ZN5blink21HTMLSelectMenuElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Document"*), void (%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Document"*)* @_ZN5blink21HTMLSelectMenuElementC2ERNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallbackC2ERS0_(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::HTMLSelectMenuElement"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.686", align 8
  %4 = alloca [1 x %"class.WTF::String"], align 8
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink21HTMLSelectMenuElement22SelectMutationCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::HTMLSelectMenuElement"* %1, %"class.blink::HTMLSelectMenuElement"** %8, align 8
  %9 = tail call %"class.blink::MutationObserver"* @_ZN5blink16MutationObserver6CreateEPNS0_8DelegateE(%"class.blink::MutationObserver::Delegate"* %6) #9
  %10 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::MutationObserver"* %9, %"class.blink::MutationObserver"** %10, align 8
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #9
  %12 = bitcast i8* %11 to %"class.blink::MutationObserverInit"*
  tail call void @_ZN5blink20MutationObserverInitC1Ev(%"class.blink::MutationObserverInit"* %12) #9
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds i8, i8* %11, i64 32
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 9
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 33
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %11, i64 10
  store i8 1, i8* %20, align 2
  %21 = bitcast %"class.WTF::Vector.686"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = bitcast [1 x %"class.WTF::String"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %4, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #9
  %24 = getelementptr inbounds %"class.WTF::Vector.686", %"class.WTF::Vector.686"* %3, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::Vector.686", %"class.WTF::Vector.686"* %3, i64 0, i32 0, i32 0, i32 1
  %26 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #9
  %27 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.686"* %3 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = lshr i64 %26, 3
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %25, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.686", %"class.WTF::Vector.686"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 1, i32* %32, align 4
  %33 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %4, i64 0, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = bitcast i8* %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #9
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  call void @llvm.trap() #9
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %2
  call void @_ZN5blink20MutationObserverInit18setAttributeFilterERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MutationObserverInit"* %12, %"class.WTF::Vector.686"* nonnull dereferenceable(16) %3) #9
  %55 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %56 = icmp eq %"class.WTF::String"* %55, null
  br i1 %56, label %90, label %57, !prof !3

57:                                               ; preds = %54
  %58 = bitcast %"class.WTF::String"* %55 to i8*
  %59 = load i32, i32* %32, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %88, label %61, !prof !2

61:                                               ; preds = %57
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 %62
  br label %64

64:                                               ; preds = %82, %61
  %65 = phi %"class.WTF::String"* [ %83, %82 ], [ %55, %61 ]
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #9
  br label %82

82:                                               ; preds = %81, %78, %64
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 1
  %84 = icmp eq %"class.WTF::String"* %83, %63
  br i1 %84, label %85, label %64

85:                                               ; preds = %82
  store i32 0, i32* %32, align 4
  %86 = bitcast %"class.WTF::Vector.686"* %3 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %57
  %89 = phi i8* [ %87, %85 ], [ %58, %57 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %90

90:                                               ; preds = %54, %88
  %91 = getelementptr inbounds [1 x %"class.WTF::String"], [1 x %"class.WTF::String"]* %4, i64 0, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #9
  br label %107

107:                                              ; preds = %90, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  %108 = getelementptr inbounds i8, i8* %11, i64 36
  store i8 1, i8* %108, align 4
  %109 = getelementptr inbounds i8, i8* %11, i64 13
  store i8 1, i8* %109, align 1
  %110 = getelementptr inbounds i8, i8* %11, i64 37
  store i8 1, i8* %110, align 1
  %111 = getelementptr inbounds i8, i8* %11, i64 14
  store i8 1, i8* %111, align 2
  %112 = load %"class.blink::MutationObserver"*, %"class.blink::MutationObserver"** %10, align 8
  %113 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %8, align 8
  %114 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %115) #9
  %116 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %117, align 8
  %118 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %118, align 2
  %119 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %120 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %121 = bitcast %"class.WTF::StringImpl"** %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #9
  %122 = bitcast i8** %119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %123 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  call void @_ZN5blink16MutationObserver7observeEPNS_4NodeEPKNS_20MutationObserverInitERNS_14ExceptionStateE(%"class.blink::MutationObserver"* %112, %"class.blink::Node"* %114, %"class.blink::MutationObserverInit"* %12, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %123) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %124 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 4
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %107
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %123) #9
  br label %128

128:                                              ; preds = %107, %127
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %129 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i64* %130, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 3
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %133, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %130, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #9
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #9
  br i1 %138, label %142, label %139

139:                                              ; preds = %132
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #9
  br label %142

142:                                              ; preds = %139, %132, %128
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #9
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %115) #9
  ret void
}

declare %"class.blink::MutationObserver"* @_ZN5blink16MutationObserver6CreateEPNS0_8DelegateE(%"class.blink::MutationObserver::Delegate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink20MutationObserverInit18setAttributeFilterERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MutationObserverInit"*, %"class.WTF::Vector.686"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink16MutationObserver7observeEPNS_4NodeEPKNS_20MutationObserverInitERNS_14ExceptionStateE(%"class.blink::MutationObserver"*, %"class.blink::Node"*, %"class.blink::MutationObserverInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink21HTMLSelectMenuElement22SelectMutationCallback19GetExecutionContextEv(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %4) #9
  ret %"class.blink::ExecutionContext"* %5
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21HTMLSelectMenuElement22SelectMutationCallback5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.40"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16MutationObserverEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback7DeliverERKNS_10HeapVectorINS_6MemberINS_14MutationRecordEEELj0EEERNS_16MutationObserverE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::HeapVector"* nocapture readonly dereferenceable(16), %"class.blink::MutationObserver"* nocapture readnone dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Member.55"*, %"class.blink::Member.55"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.WTF::StringView"* %6 to i8*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  %21 = bitcast %"class.WTF::StringView"* %6 to i64*
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %23 = bitcast %"class.WTF::StringView"* %7 to i8*
  %24 = bitcast %"class.WTF::StringView"* %7 to i64*
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %27 = bitcast %"class.WTF::StringView"* %4 to i8*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  %31 = bitcast %"class.WTF::StringView"* %4 to i64*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %5 to i8*
  %34 = bitcast %"class.WTF::StringView"* %5 to i64*
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPartAttrE, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::String"* %8 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  br label %42

41:                                               ; preds = %252, %3
  ret void

42:                                               ; preds = %16, %252
  %43 = phi %"class.blink::Member.55"* [ %10, %16 ], [ %253, %252 ]
  %44 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %46 = bitcast %"class.blink::MutationRecord"* %45 to %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)***
  %47 = load %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)**, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)** %47, i64 9
  %49 = load %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)** %48, align 8
  %50 = call dereferenceable(8) %"class.WTF::AtomicString"* %49(%"class.blink::MutationRecord"* %45) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %42
  store i8* null, i8** %19, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %55, i64* %21, align 8
  br label %61

56:                                               ; preds = %42
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %18, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %20, align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i64 [ %60, %56 ], [ %55, %54 ]
  %63 = phi i32 [ %58, %56 ], [ 0, %54 ]
  store i32 %63, i32* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  store i64 %62, i64* %24, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %25, align 8
  store i32 10, i32* %26, align 8
  %64 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %65 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %66 = bitcast %"class.blink::MutationRecord"* %65 to %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)***
  %67 = load %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)**, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*** %66, align 8
  br i1 %64, label %68, label %142

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)** %67, i64 15
  %70 = load %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)** %69, align 8
  %71 = call dereferenceable(8) %"class.WTF::AtomicString"* %70(%"class.blink::MutationRecord"* %65) #9
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %74, %76
  br i1 %77, label %78, label %252

78:                                               ; preds = %68
  %79 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %80 = bitcast %"class.blink::MutationRecord"* %79 to %"class.blink::Node"* (%"class.blink::MutationRecord"*)***
  %81 = load %"class.blink::Node"* (%"class.blink::MutationRecord"*)**, %"class.blink::Node"* (%"class.blink::MutationRecord"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::MutationRecord"*)*, %"class.blink::Node"* (%"class.blink::MutationRecord"*)** %81, i64 10
  %83 = load %"class.blink::Node"* (%"class.blink::MutationRecord"*)*, %"class.blink::Node"* (%"class.blink::MutationRecord"*)** %82, align 8
  %84 = call %"class.blink::Node"* %83(%"class.blink::MutationRecord"* %79) #9
  %85 = icmp eq %"class.blink::Node"* %84, null
  br i1 %85, label %252, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 12
  %90 = icmp eq i32 %89, 0
  %91 = bitcast %"class.blink::Node"* %84 to %"class.blink::Element"*
  br i1 %90, label %92, label %252

92:                                               ; preds = %86
  %93 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %94 = bitcast %"class.blink::MutationRecord"* %93 to %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)***
  %95 = load %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)**, %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)*** %94, align 8
  %96 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)*, %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)** %95, i64 17
  %97 = load %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)*, %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)** %96, align 8
  %98 = call %"class.WTF::StringImpl"* %97(%"class.blink::MutationRecord"* %93) #9
  %99 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %91, %"class.blink::QualifiedName"* dereferenceable(8) %37) #9
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"* %98) #9
  %103 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br i1 %102, label %252, label %118

117:                                              ; preds = %113, %92
  br i1 %102, label %252, label %118

118:                                              ; preds = %116, %117
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %119 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %120 = bitcast %"class.blink::MutationRecord"* %119 to %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)***
  %121 = load %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)**, %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)*** %120, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)*, %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)** %121, i64 17
  %123 = load %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)*, %"class.WTF::StringImpl"* (%"class.blink::MutationRecord"*)** %122, align 8
  %124 = call %"class.WTF::StringImpl"* %123(%"class.blink::MutationRecord"* %119) #9
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback11PartRemovedIN3WTF6StringEEEvRKT_PNS_7ElementE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::Element"* nonnull %91)
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #9
  br label %140

140:                                              ; preds = %118, %136, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  %141 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %91, %"class.blink::QualifiedName"* dereferenceable(8) %37) #9
  call void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback12PartInsertedIN3WTF12AtomicStringEEEvRKT_PNS_7ElementE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %141, %"class.blink::Element"* nonnull %91)
  br label %252

142:                                              ; preds = %61
  %143 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)** %67, i64 9
  %144 = load %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)*, %"class.WTF::AtomicString"* (%"class.blink::MutationRecord"*)** %143, align 8
  %145 = call dereferenceable(8) %"class.WTF::AtomicString"* %144(%"class.blink::MutationRecord"* %65) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %146 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  store i8* null, i8** %29, align 8
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %150, i64* %31, align 8
  br label %156

151:                                              ; preds = %142
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %28, align 8
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 1
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %30, align 8
  %155 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %156

156:                                              ; preds = %151, %149
  %157 = phi i64 [ %155, %151 ], [ %150, %149 ]
  %158 = phi i32 [ %153, %151 ], [ 0, %149 ]
  store i32 %158, i32* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  store i64 %157, i64* %34, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %35, align 8
  store i32 9, i32* %36, align 8
  %159 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  br i1 %159, label %160, label %252

160:                                              ; preds = %156
  %161 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %162 = bitcast %"class.blink::MutationRecord"* %161 to %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)***
  %163 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)**, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*** %162, align 8
  %164 = getelementptr inbounds %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %163, i64 11
  %165 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %164, align 8
  %166 = call %"class.blink::StaticNodeTypeList"* %165(%"class.blink::MutationRecord"* %161) #9
  %167 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %166, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %180

170:                                              ; preds = %205, %160
  %171 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %172 = bitcast %"class.blink::MutationRecord"* %171 to %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)***
  %173 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)**, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*** %172, align 8
  %174 = getelementptr inbounds %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %173, i64 12
  %175 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %174, align 8
  %176 = call %"class.blink::StaticNodeTypeList"* %175(%"class.blink::MutationRecord"* %171) #9
  %177 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %176, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %252, label %216

180:                                              ; preds = %160, %205
  %181 = phi i32 [ %206, %205 ], [ 0, %160 ]
  %182 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %183 = bitcast %"class.blink::MutationRecord"* %182 to %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)***
  %184 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)**, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*** %183, align 8
  %185 = getelementptr inbounds %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %184, i64 11
  %186 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %185, align 8
  %187 = call %"class.blink::StaticNodeTypeList"* %186(%"class.blink::MutationRecord"* %182) #9
  %188 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %187, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %189 = load i32, i32* %188, align 4
  %190 = icmp ugt i32 %189, %181
  br i1 %190, label %191, label %205

191:                                              ; preds = %180
  %192 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %187, i64 0, i32 1, i32 0
  %193 = call dereferenceable(8) %"class.blink::Member.2"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.697"* %192, i32 %181) #9
  %194 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %193, i64 0, i32 0, i32 0
  %195 = load %"class.blink::Node"*, %"class.blink::Node"** %194, align 8
  %196 = icmp eq %"class.blink::Node"* %195, null
  br i1 %196, label %205, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = and i32 %199, 12
  %201 = icmp eq i32 %200, 0
  %202 = bitcast %"class.blink::Node"* %195 to %"class.blink::Element"*
  br i1 %201, label %203, label %205

203:                                              ; preds = %197
  %204 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %202, %"class.blink::QualifiedName"* dereferenceable(8) %37) #9
  call void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback12PartInsertedIN3WTF12AtomicStringEEEvRKT_PNS_7ElementE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %204, %"class.blink::Element"* nonnull %202)
  br label %205

205:                                              ; preds = %197, %180, %191, %203
  %206 = add nuw i32 %181, 1
  %207 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %208 = bitcast %"class.blink::MutationRecord"* %207 to %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)***
  %209 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)**, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*** %208, align 8
  %210 = getelementptr inbounds %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %209, i64 11
  %211 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %210, align 8
  %212 = call %"class.blink::StaticNodeTypeList"* %211(%"class.blink::MutationRecord"* %207) #9
  %213 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = icmp ult i32 %206, %214
  br i1 %215, label %180, label %170

216:                                              ; preds = %170, %241
  %217 = phi i32 [ %242, %241 ], [ 0, %170 ]
  %218 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %219 = bitcast %"class.blink::MutationRecord"* %218 to %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)***
  %220 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)**, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*** %219, align 8
  %221 = getelementptr inbounds %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %220, i64 12
  %222 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %221, align 8
  %223 = call %"class.blink::StaticNodeTypeList"* %222(%"class.blink::MutationRecord"* %218) #9
  %224 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %223, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %225 = load i32, i32* %224, align 4
  %226 = icmp ugt i32 %225, %217
  br i1 %226, label %227, label %241

227:                                              ; preds = %216
  %228 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %223, i64 0, i32 1, i32 0
  %229 = call dereferenceable(8) %"class.blink::Member.2"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.697"* %228, i32 %217) #9
  %230 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %229, i64 0, i32 0, i32 0
  %231 = load %"class.blink::Node"*, %"class.blink::Node"** %230, align 8
  %232 = icmp eq %"class.blink::Node"* %231, null
  br i1 %232, label %241, label %233

233:                                              ; preds = %227
  %234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %231, i64 0, i32 1
  %235 = load i32, i32* %234, align 8
  %236 = and i32 %235, 12
  %237 = icmp eq i32 %236, 0
  %238 = bitcast %"class.blink::Node"* %231 to %"class.blink::Element"*
  br i1 %237, label %239, label %241

239:                                              ; preds = %233
  %240 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %238, %"class.blink::QualifiedName"* dereferenceable(8) %37) #9
  call void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback11PartRemovedIN3WTF12AtomicStringEEEvRKT_PNS_7ElementE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %240, %"class.blink::Element"* nonnull %238)
  br label %241

241:                                              ; preds = %233, %216, %227, %239
  %242 = add nuw i32 %217, 1
  %243 = load %"class.blink::MutationRecord"*, %"class.blink::MutationRecord"** %44, align 8
  %244 = bitcast %"class.blink::MutationRecord"* %243 to %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)***
  %245 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)**, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*** %244, align 8
  %246 = getelementptr inbounds %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %245, i64 12
  %247 = load %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)*, %"class.blink::StaticNodeTypeList"* (%"class.blink::MutationRecord"*)** %246, align 8
  %248 = call %"class.blink::StaticNodeTypeList"* %247(%"class.blink::MutationRecord"* %243) #9
  %249 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %248, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = icmp ult i32 %242, %250
  br i1 %251, label %216, label %252

252:                                              ; preds = %241, %170, %116, %117, %86, %78, %140, %156, %68
  %253 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %43, i64 1
  %254 = icmp eq %"class.blink::Member.55"* %253, %14
  br i1 %254, label %41, label %42
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback11PartRemovedIN3WTF6StringEEEvRKT_PNS_7ElementE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %28

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i64 [ %27, %20 ], [ %18, %16 ]
  %30 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %29, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kButtonPartNameE, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 6, i32* %35, align 8
  %36 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  br i1 %36, label %37, label %40

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %38, align 8
  call void @_ZN5blink21HTMLSelectMenuElement17ButtonPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %39, %"class.blink::Element"* %2)
  br label %144

40:                                               ; preds = %28
  %41 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %46, i64* %47, align 8
  br label %56

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %56

56:                                               ; preds = %48, %44
  %57 = phi i64 [ %55, %48 ], [ %46, %44 ]
  %58 = phi i32 [ %51, %48 ], [ 0, %44 ]
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %58, i32* %59, align 8
  %60 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  %61 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %57, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN5blink21HTMLSelectMenuElement22kSelectedValuePartNameE, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 14, i32* %63, align 8
  %64 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %66, align 8
  call void @_ZN5blink21HTMLSelectMenuElement24SelectedValuePartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %67, %"class.blink::Element"* %2)
  br label %144

68:                                               ; preds = %56
  %69 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #9
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %73, align 8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %74, i64* %75, align 8
  br label %84

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 1
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %82 = bitcast i8** %81 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %82, align 8
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %84

84:                                               ; preds = %76, %72
  %85 = phi i64 [ %83, %76 ], [ %74, %72 ]
  %86 = phi i32 [ %79, %76 ], [ 0, %72 ]
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %86, i32* %87, align 8
  %88 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #9
  %89 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %85, i64* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5blink21HTMLSelectMenuElement16kListboxPartNameE, i64 0, i64 0), i8** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 7, i32* %91, align 8
  %92 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #9
  br i1 %92, label %93, label %96

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %95 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %94, align 8
  call void @_ZN5blink21HTMLSelectMenuElement18ListboxPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %95, %"class.blink::Element"* %2)
  br label %144

96:                                               ; preds = %84
  %97 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #9
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %100, label %104

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %101, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %103 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %102, i64* %103, align 8
  br label %112

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %110 = bitcast i8** %109 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %110, align 8
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %112

112:                                              ; preds = %104, %100
  %113 = phi i64 [ %111, %104 ], [ %102, %100 ]
  %114 = phi i32 [ %107, %104 ], [ 0, %100 ]
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %114, i32* %115, align 8
  %116 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #9
  %117 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %113, i64* %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kOptionPartNameE, i64 0, i64 0), i8** %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %119, align 8
  %120 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #9
  br i1 %120, label %141, label %121

121:                                              ; preds = %112
  %122 = icmp eq %"class.blink::Element"* %2, null
  br i1 %122, label %144, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 48
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %144

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %130 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %131 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %129, i64 1, i32 2
  %134 = bitcast %"class.blink::Member.2"* %133 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %135 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 3, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %137, %139
  br i1 %140, label %141, label %144

141:                                              ; preds = %128, %112
  %142 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %143 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %142, align 8
  call void @_ZN5blink21HTMLSelectMenuElement17OptionPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %143, %"class.blink::Element"* %2)
  br label %144

144:                                              ; preds = %123, %121, %65, %128, %141, %93, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback12PartInsertedIN3WTF12AtomicStringEEEvRKT_PNS_7ElementE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %28

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i64 [ %27, %20 ], [ %18, %16 ]
  %30 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %29, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kButtonPartNameE, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 6, i32* %35, align 8
  %36 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  br i1 %36, label %37, label %40

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %38, align 8
  call void @_ZN5blink21HTMLSelectMenuElement18ButtonPartInsertedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %39, %"class.blink::Element"* %2)
  br label %152

40:                                               ; preds = %28
  %41 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %46, i64* %47, align 8
  br label %56

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %56

56:                                               ; preds = %48, %44
  %57 = phi i64 [ %55, %48 ], [ %46, %44 ]
  %58 = phi i32 [ %51, %48 ], [ 0, %44 ]
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %58, i32* %59, align 8
  %60 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  %61 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %57, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN5blink21HTMLSelectMenuElement22kSelectedValuePartNameE, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 14, i32* %63, align 8
  %64 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br i1 %64, label %65, label %76

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %67, i64 0, i32 5
  %69 = ptrtoint %"class.blink::Element"* %2 to i64
  %70 = bitcast %"class.blink::Member.29"* %68 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %152, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.blink::Element"* %2 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #9
  br label %152

76:                                               ; preds = %56
  %77 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #9
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %81, align 8
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %83 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %82, i64* %83, align 8
  br label %92

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %90 = bitcast i8** %89 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %90, align 8
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %92

92:                                               ; preds = %84, %80
  %93 = phi i64 [ %91, %84 ], [ %82, %80 ]
  %94 = phi i32 [ %87, %84 ], [ 0, %80 ]
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %94, i32* %95, align 8
  %96 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #9
  %97 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %93, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5blink21HTMLSelectMenuElement16kListboxPartNameE, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 7, i32* %99, align 8
  %100 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #9
  br i1 %100, label %101, label %104

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %102, align 8
  call void @_ZN5blink21HTMLSelectMenuElement19ListboxPartInsertedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %103, %"class.blink::Element"* %2)
  br label %152

104:                                              ; preds = %92
  %105 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #9
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %109, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %110, i64* %111, align 8
  br label %120

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 1
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %118 = bitcast i8** %117 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %118, align 8
  %119 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %120

120:                                              ; preds = %112, %108
  %121 = phi i64 [ %119, %112 ], [ %110, %108 ]
  %122 = phi i32 [ %115, %112 ], [ 0, %108 ]
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %122, i32* %123, align 8
  %124 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #9
  %125 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %121, i64* %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kOptionPartNameE, i64 0, i64 0), i8** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %127, align 8
  %128 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #9
  br i1 %128, label %149, label %129

129:                                              ; preds = %120
  %130 = icmp eq %"class.blink::Element"* %2, null
  br i1 %130, label %152, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, 48
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %152

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %138 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %139 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %137, i64 1, i32 2
  %142 = bitcast %"class.blink::Member.2"* %141 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %143 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %140, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %145, %147
  br i1 %148, label %149, label %152

149:                                              ; preds = %136, %120
  %150 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %151 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %150, align 8
  call void @_ZN5blink21HTMLSelectMenuElement18OptionPartInsertedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %151, %"class.blink::Element"* %2)
  br label %152

152:                                              ; preds = %131, %129, %73, %65, %136, %149, %101, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallback11PartRemovedIN3WTF12AtomicStringEEEvRKT_PNS_7ElementE(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %17, align 8
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %19 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %28

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i64 [ %27, %20 ], [ %18, %16 ]
  %30 = phi i32 [ %23, %20 ], [ 0, %16 ]
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %29, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kButtonPartNameE, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 6, i32* %35, align 8
  %36 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  br i1 %36, label %37, label %40

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %38, align 8
  call void @_ZN5blink21HTMLSelectMenuElement17ButtonPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %39, %"class.blink::Element"* %2)
  br label %144

40:                                               ; preds = %28
  %41 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %46, i64* %47, align 8
  br label %56

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %56

56:                                               ; preds = %48, %44
  %57 = phi i64 [ %55, %48 ], [ %46, %44 ]
  %58 = phi i32 [ %51, %48 ], [ 0, %44 ]
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %58, i32* %59, align 8
  %60 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  %61 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %57, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN5blink21HTMLSelectMenuElement22kSelectedValuePartNameE, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 14, i32* %63, align 8
  %64 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %66, align 8
  call void @_ZN5blink21HTMLSelectMenuElement24SelectedValuePartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %67, %"class.blink::Element"* %2)
  br label %144

68:                                               ; preds = %56
  %69 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #9
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %73, align 8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %74, i64* %75, align 8
  br label %84

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 1
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %82 = bitcast i8** %81 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %82, align 8
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %84

84:                                               ; preds = %76, %72
  %85 = phi i64 [ %83, %76 ], [ %74, %72 ]
  %86 = phi i32 [ %79, %76 ], [ 0, %72 ]
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %86, i32* %87, align 8
  %88 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #9
  %89 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %85, i64* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5blink21HTMLSelectMenuElement16kListboxPartNameE, i64 0, i64 0), i8** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 7, i32* %91, align 8
  %92 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #9
  br i1 %92, label %93, label %96

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %95 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %94, align 8
  call void @_ZN5blink21HTMLSelectMenuElement18ListboxPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %95, %"class.blink::Element"* %2)
  br label %144

96:                                               ; preds = %84
  %97 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #9
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %100, label %104

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %101, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %103 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %102, i64* %103, align 8
  br label %112

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %110 = bitcast i8** %109 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %110, align 8
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %112

112:                                              ; preds = %104, %100
  %113 = phi i64 [ %111, %104 ], [ %102, %100 ]
  %114 = phi i32 [ %107, %104 ], [ 0, %100 ]
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %114, i32* %115, align 8
  %116 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #9
  %117 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %113, i64* %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kOptionPartNameE, i64 0, i64 0), i8** %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %119, align 8
  %120 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #9
  br i1 %120, label %141, label %121

121:                                              ; preds = %112
  %122 = icmp eq %"class.blink::Element"* %2, null
  br i1 %122, label %144, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 48
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %144

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %130 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %131 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %129, i64 1, i32 2
  %134 = bitcast %"class.blink::Member.2"* %133 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %135 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 3, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %137, %139
  br i1 %140, label %141, label %144

141:                                              ; preds = %128, %112
  %142 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::SelectMutationCallback", %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %143 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %142, align 8
  call void @_ZN5blink21HTMLSelectMenuElement17OptionPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %143, %"class.blink::Element"* %2)
  br label %144

144:                                              ; preds = %123, %121, %65, %128, %141, %93, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElementC2ERNS_8DocumentE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kSelectmenuTagE to %"class.blink::QualifiedName"**), align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* %1, i32 1026) #9
  %6 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink21HTMLSelectMenuElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink21HTMLSelectMenuElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0, i32 1
  %11 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %3 to i8*
  %12 = bitcast %"class.WTF::VectorBackedLinkedList"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #9
  %13 = bitcast %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 68, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #9
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %10, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.36"* %14, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %15 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  store %"class.blink::Element"* null, %"class.blink::Element"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %17 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %18 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, i64 3
  %20 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %19, align 8
  call void %20(%"class.blink::UseCounter"* %16, i32 3811) #9
  %21 = call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %5) #9
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16MutationObserver8DelegateEEEPhm(i64 24) #9
  %23 = bitcast i8* %22 to %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*
  call void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallbackC2ERS0_(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %23, %"class.blink::HTMLSelectMenuElement"* dereferenceable(208) %0) #9
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = ptrtoint i8* %22 to i64
  %29 = bitcast %"class.blink::Member.27"* %9 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %2
  %33 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %34

34:                                               ; preds = %2, %32
  ret void
}

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  tail call void @_ZN5blink10ShadowRoot29EnableNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"* %1) #9
  %10 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = tail call %"class.blink::HTMLSlotElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %15 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %17 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kButtonPartNameE, i64 0, i64 0), i64 6) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %15, %"class.blink::QualifiedName"* dereferenceable(8) %16, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #9
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #9
  br label %34

34:                                               ; preds = %2, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %35 = call %"class.blink::HTMLButtonElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLButtonElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %36 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 4
  %37 = ptrtoint %"class.blink::HTMLButtonElement"* %35 to i64
  %38 = bitcast %"class.blink::Member.29"* %36 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.blink::HTMLButtonElement", %"class.blink::HTMLButtonElement"* %35, i64 0, i32 0, i32 0, i32 0
  br i1 %40, label %47, label %42

42:                                               ; preds = %34
  %43 = bitcast %"class.blink::HTMLButtonElement"* %35 to i8*
  %44 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #9
  %45 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %36, i64 0, i32 0, i32 0
  %46 = load %"class.blink::Element"*, %"class.blink::Element"** %45, align 8
  br label %47

47:                                               ; preds = %34, %42
  %48 = phi %"class.blink::Element"* [ %41, %34 ], [ %46, %42 ]
  %49 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %36, i64 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPartAttrE, align 8
  %51 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kButtonPartNameE, i64 0, i64 0), i64 6) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %48, %"class.blink::QualifiedName"* dereferenceable(8) %50, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #9
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #9
  br label %68

68:                                               ; preds = %47, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %69 = load %"class.blink::Element"*, %"class.blink::Element"** %49, align 8
  %70 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %71 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @.str.3, i64 0, i64 0), i64 199) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %69, %"class.blink::QualifiedName"* dereferenceable(8) %70, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %68, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  %89 = ptrtoint %"class.blink::HTMLSelectMenuElement"* %0 to i64
  %90 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64 40) #9
  %91 = getelementptr inbounds i8, i8* %90, i64 8
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 16
  store i8 0, i8* %92, align 8
  %93 = bitcast i8* %90 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink21HTMLSelectMenuElement23ButtonPartEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds i8, i8* %90, i64 32
  %95 = bitcast i8* %94 to i64*
  store i64 %89, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %90, i64 -4
  %97 = bitcast i8* %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = or i16 %98, 1
  store atomic i16 %99, i16* %97 release, align 2
  %100 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 1
  %101 = ptrtoint i8* %90 to i64
  %102 = bitcast %"class.blink::Member.23"* %100 to i64*
  store atomic i64 %101, i64* %102 monotonic, align 8
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  %105 = bitcast i8* %90 to %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*
  br i1 %104, label %110, label %106

106:                                              ; preds = %88
  %107 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #9
  %108 = getelementptr inbounds %"class.blink::Member.23", %"class.blink::Member.23"* %100, i64 0, i32 0, i32 0
  %109 = load %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"** %108, align 8
  br label %110

110:                                              ; preds = %88, %106
  %111 = phi %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* [ %105, %88 ], [ %109, %106 ]
  %112 = load %"class.blink::Element"*, %"class.blink::Element"** %49, align 8
  %113 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %115 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener", %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %111, i64 0, i32 0, i32 0
  %116 = call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %113, %"class.WTF::AtomicString"* dereferenceable(8) %114, %"class.blink::EventListener"* %115, i1 zeroext false) #9
  %117 = call %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %118 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 5
  %119 = ptrtoint %"class.blink::HTMLDivElement"* %117 to i64
  %120 = bitcast %"class.blink::Member.29"* %118 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %117, i64 0, i32 0, i32 0
  br i1 %122, label %129, label %124

124:                                              ; preds = %110
  %125 = bitcast %"class.blink::HTMLDivElement"* %117 to i8*
  %126 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %125) #9
  %127 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %118, i64 0, i32 0, i32 0
  %128 = load %"class.blink::Element"*, %"class.blink::Element"** %127, align 8
  br label %129

129:                                              ; preds = %110, %124
  %130 = phi %"class.blink::Element"* [ %123, %110 ], [ %128, %124 ]
  %131 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %118, i64 0, i32 0, i32 0
  %132 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN5blink21HTMLSelectMenuElement22kSelectedValuePartNameE, i64 0, i64 0), i64 14) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %130, %"class.blink::QualifiedName"* dereferenceable(8) %50, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #9
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #9
  br label %149

149:                                              ; preds = %129, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #9
  %150 = call %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %151 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %150, i64 0, i32 0, i32 0
  %152 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([590 x i8], [590 x i8]* @.str.4, i64 0, i64 0), i64 589) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %151, %"class.blink::QualifiedName"* dereferenceable(8) %70, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #9
  %153 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #9
  br label %169

169:                                              ; preds = %149, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #9
  %170 = call %"class.blink::HTMLSlotElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %171 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %170, i64 0, i32 0, i32 0
  %172 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5blink21HTMLSelectMenuElement16kListboxPartNameE, i64 0, i64 0), i64 7) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %171, %"class.blink::QualifiedName"* dereferenceable(8) %16, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #9
  %173 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #9
  br label %189

189:                                              ; preds = %169, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #9
  %190 = call %"class.blink::HTMLPopupElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLPopupElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %191 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6
  %192 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %192, align 8
  %194 = icmp eq %"class.blink::HTMLPopupElement"* %193, %190
  br i1 %194, label %212, label %195

195:                                              ; preds = %189
  %196 = icmp eq %"class.blink::HTMLPopupElement"* %193, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* nonnull %193, %"class.blink::HTMLSelectMenuElement"* null) #9
  %198 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %192, align 8
  call void @_ZN5blink16HTMLPopupElement34SetNeedsRepositioningForSelectMenuEb(%"class.blink::HTMLPopupElement"* %198, i1 zeroext false) #9
  br label %199

199:                                              ; preds = %197, %195
  %200 = ptrtoint %"class.blink::HTMLPopupElement"* %190 to i64
  %201 = bitcast %"class.blink::Member.31"* %191 to i64*
  store atomic i64 %200, i64* %201 monotonic, align 8
  %202 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %208, label %204

204:                                              ; preds = %199
  %205 = bitcast %"class.blink::HTMLPopupElement"* %190 to i8*
  %206 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %205) #9
  %207 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %192, align 8
  br label %208

208:                                              ; preds = %204, %199
  %209 = phi %"class.blink::HTMLPopupElement"* [ %190, %199 ], [ %207, %204 ]
  call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* %209, %"class.blink::HTMLSelectMenuElement"* %0) #9
  %210 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %211 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %210, align 8
  br label %212

212:                                              ; preds = %189, %208
  %213 = phi %"class.blink::HTMLPopupElement"* [ %190, %189 ], [ %211, %208 ]
  %214 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %215 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %213, i64 0, i32 0, i32 0
  %216 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5blink21HTMLSelectMenuElement16kListboxPartNameE, i64 0, i64 0), i64 7) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %215, %"class.blink::QualifiedName"* dereferenceable(8) %50, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %217 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #9
  br label %233

233:                                              ; preds = %212, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #9
  %234 = call %"class.blink::HTMLSlotElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %13) #9
  %235 = load %"class.blink::Element"*, %"class.blink::Element"** %49, align 8
  %236 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %235, i64 0, i32 0
  %237 = load %"class.blink::Element"*, %"class.blink::Element"** %131, align 8
  %238 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %237, i64 0, i32 0, i32 0
  %239 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %236, %"class.blink::Node"* %238) #9
  %240 = load %"class.blink::Element"*, %"class.blink::Element"** %49, align 8
  %241 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %240, i64 0, i32 0
  %242 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %243 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %241, %"class.blink::Node"* %242) #9
  %244 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %14, i64 0, i32 0, i32 0, i32 0
  %245 = load %"class.blink::Element"*, %"class.blink::Element"** %49, align 8
  %246 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %245, i64 0, i32 0, i32 0
  %247 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %244, %"class.blink::Node"* %246) #9
  %248 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %214, align 8
  %249 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %248, i64 0, i32 0, i32 0, i32 0, i32 0
  %250 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %234, i64 0, i32 0, i32 0, i32 0, i32 0
  %251 = call %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_(%"class.blink::Node"* %249, %"class.blink::Node"* %250) #9
  %252 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %170, i64 0, i32 0, i32 0, i32 0, i32 0
  %253 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %214, align 8
  %254 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %253, i64 0, i32 0, i32 0, i32 0, i32 0
  %255 = call %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_(%"class.blink::Node"* %252, %"class.blink::Node"* %254) #9
  %256 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1, i64 0, i32 0, i32 0
  %257 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %258 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %256, %"class.blink::Node"* %257) #9
  %259 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %256, %"class.blink::Node"* %252) #9
  %260 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64 40) #9
  %261 = getelementptr inbounds i8, i8* %260, i64 8
  store i8 0, i8* %261, align 8
  %262 = getelementptr inbounds i8, i8* %260, i64 16
  store i8 0, i8* %262, align 8
  %263 = bitcast i8* %260 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink21HTMLSelectMenuElement23OptionPartEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %263, align 8
  %264 = getelementptr inbounds i8, i8* %260, i64 32
  %265 = bitcast i8* %264 to i64*
  store i64 %89, i64* %265, align 8
  %266 = getelementptr inbounds i8, i8* %260, i64 -4
  %267 = bitcast i8* %266 to i16*
  %268 = load atomic i16, i16* %267 monotonic, align 2
  %269 = or i16 %268, 1
  store atomic i16 %269, i16* %267 release, align 2
  %270 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 2
  %271 = ptrtoint i8* %260 to i64
  %272 = bitcast %"class.blink::Member.25"* %270 to i64*
  store atomic i64 %271, i64* %272 monotonic, align 8
  %273 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %277, label %275

275:                                              ; preds = %233
  %276 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %260) #9
  br label %277

277:                                              ; preds = %233, %275
  ret void
}

declare void @_ZN5blink10ShadowRoot29EnableNameBasedSlotAssignmentEv(%"class.blink::ShadowRoot"*) local_unnamed_addr #1

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement14SetListboxPartEPNS_16HTMLPopupElementE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLPopupElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %4, align 8
  %6 = icmp eq %"class.blink::HTMLPopupElement"* %5, %1
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = icmp eq %"class.blink::HTMLPopupElement"* %5, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  tail call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* nonnull %5, %"class.blink::HTMLSelectMenuElement"* null) #9
  %10 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %4, align 8
  tail call void @_ZN5blink16HTMLPopupElement34SetNeedsRepositioningForSelectMenuEb(%"class.blink::HTMLPopupElement"* %10, i1 zeroext false) #9
  br label %11

11:                                               ; preds = %7, %9
  %12 = ptrtoint %"class.blink::HTMLPopupElement"* %1 to i64
  %13 = bitcast %"class.blink::Member.31"* %3 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::HTMLPopupElement"* %1 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #9
  %19 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %4, align 8
  br label %20

20:                                               ; preds = %11, %16
  %21 = phi %"class.blink::HTMLPopupElement"* [ %1, %11 ], [ %19, %16 ]
  tail call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* %21, %"class.blink::HTMLSelectMenuElement"* %0) #9
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21HTMLSelectMenuElement5valueEv(%"class.blink::HTMLSelectMenuElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  tail call void @_ZN5blink21HTMLSelectMenuElement27EnsureSelectedOptionIsValidEv(%"class.blink::HTMLSelectMenuElement"* %0) #9
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* nonnull %4) #9
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #9
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi %"class.WTF::StringImpl"* [ %7, %6 ], [ %11, %9 ]
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink21HTMLSelectMenuElement14SelectedOptionEv(%"class.blink::HTMLSelectMenuElement"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink21HTMLSelectMenuElement27EnsureSelectedOptionIsValidEv(%"class.blink::HTMLSelectMenuElement"* %0)
  %2 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  ret %"class.blink::Element"* %3
}

declare %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement8setValueERKN3WTF6StringEb(%"class.blink::HTMLSelectMenuElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0, i32 1, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %4, i32 0) #9, !noalias !4
  %6 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 4, !noalias !4
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %4, i32 %7) #9, !noalias !4
  %9 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %4, i32 0) #9, !noalias !7
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %8, %9
  br i1 %10, label %43, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %11, %38
  %14 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %8, %11 ], [ %41, %38 ]
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Element"*, %"class.blink::Element"** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* %16) #9
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %19 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"* %18) #9
  %20 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %34

34:                                               ; preds = %13, %30, %33
  br i1 %19, label %35, label %38

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Element"*, %"class.blink::Element"** %36, align 8
  tail call void @_ZN5blink21HTMLSelectMenuElement17SetSelectedOptionEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %0, %"class.blink::Element"* %37)
  br label %43

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %4, i32 %40) #9
  %42 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %41, %9
  br i1 %42, label %43, label %13

43:                                               ; preds = %38, %3, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement17SetSelectedOptionEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* nocapture, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = icmp eq %"class.blink::Element"* %6, %1
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %"class.blink::Element"* %1 to i64
  %10 = bitcast %"class.blink::Member.29"* %4 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Element"* %1 to i8*
  %15 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %14) #9
  br label %16

16:                                               ; preds = %8, %13
  %17 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::Element"*, %"class.blink::Element"** %17, align 8
  %19 = icmp eq %"class.blink::Element"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %18, i64 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  %24 = load %"class.blink::Element"*, %"class.blink::Element"** %23, align 8
  %25 = icmp eq %"class.blink::Element"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* nonnull %24) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  br label %30

29:                                               ; preds = %20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #9
  br label %30

30:                                               ; preds = %29, %26
  %31 = bitcast %"class.blink::Element"* %18 to void (%"class.blink::Node"*, %"class.WTF::String"*)***
  %32 = load void (%"class.blink::Node"*, %"class.WTF::String"*)**, void (%"class.blink::Node"*, %"class.WTF::String"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %32, i64 32
  %34 = load void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %33, align 8
  call void %34(%"class.blink::Node"* %21, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %51

51:                                               ; preds = %50, %47, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %52

52:                                               ; preds = %51, %16, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21HTMLSelectMenuElement6IsOpenEv(%"class.blink::HTMLSelectMenuElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLPopupElement"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"* nonnull %3) #9
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement4OpenEv(%"class.blink::HTMLSelectMenuElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLPopupElement"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"* nonnull %3) #9
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %2, align 8
  tail call void @_ZN5blink16HTMLPopupElement34SetNeedsRepositioningForSelectMenuEb(%"class.blink::HTMLPopupElement"* %8, i1 zeroext true) #9
  %9 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %2, align 8
  tail call void @_ZN5blink16HTMLPopupElement4showEv(%"class.blink::HTMLPopupElement"* %9) #9
  br label %10

10:                                               ; preds = %1, %7, %5
  ret void
}

declare void @_ZN5blink16HTMLPopupElement34SetNeedsRepositioningForSelectMenuEb(%"class.blink::HTMLPopupElement"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink16HTMLPopupElement4showEv(%"class.blink::HTMLPopupElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement5CloseEv(%"class.blink::HTMLSelectMenuElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLPopupElement"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"* nonnull %3) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %2, align 8
  tail call void @_ZN5blink16HTMLPopupElement4hideEv(%"class.blink::HTMLPopupElement"* %8) #9
  br label %9

9:                                                ; preds = %1, %7, %5
  ret void
}

declare void @_ZN5blink16HTMLPopupElement4hideEv(%"class.blink::HTMLPopupElement"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"*, %"class.blink::HTMLSelectMenuElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21HTMLSelectMenuElement17IsValidButtonPartEPKNS_7ElementEb(%"class.blink::HTMLSelectMenuElement"* nocapture readonly, %"class.blink::Element"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %6, %"class.blink::Node"* dereferenceable(64) %9) #9
  %11 = xor i1 %10, true
  %12 = xor i1 %2, true
  %13 = or i1 %12, %11
  br i1 %13, label %22, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store i32 6, i32* %4, align 4
  %20 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  store i32 2, i32* %5, align 4
  %21 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA167_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, [167 x i8]* nonnull dereferenceable(167) @.str.6) #9
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %18, %"class.blink::ConsoleMessage"* %21, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  br label %22

22:                                               ; preds = %3, %14
  ret i1 %11
}

declare zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21HTMLSelectMenuElement18IsValidListboxPartEPKNS_7ElementEb(%"class.blink::HTMLSelectMenuElement"* nocapture readonly, %"class.blink::Element"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = icmp eq %"class.blink::Element"* %1, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %3
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E, align 1, !range !10
  %11 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E, align 1
  %12 = or i8 %11, %10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 48
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kPopupTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.2"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %41, label %32

32:                                               ; preds = %14, %9, %3, %19
  br i1 %2, label %33, label %57

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #9
  store i32 6, i32* %4, align 4
  %39 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #9
  store i32 2, i32* %5, align 4
  %40 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA181_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, [181 x i8]* nonnull dereferenceable(181) @.str.7) #9
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %37, %"class.blink::ConsoleMessage"* %40, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #9
  br label %57

41:                                               ; preds = %19
  %42 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 4, i32 0, i32 0
  %43 = load %"class.blink::Element"*, %"class.blink::Element"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %43, i64 0, i32 0, i32 0
  %45 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %20, %"class.blink::Node"* dereferenceable(64) %44) #9
  %46 = xor i1 %45, true
  %47 = xor i1 %2, true
  %48 = or i1 %47, %46
  br i1 %48, label %57, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #9
  store i32 6, i32* %6, align 4
  %55 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #9
  store i32 2, i32* %7, align 4
  %56 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA181_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7, [181 x i8]* nonnull dereferenceable(181) @.str.8) #9
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %53, %"class.blink::ConsoleMessage"* %56, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #9
  br label %57

57:                                               ; preds = %41, %49, %32, %33
  %58 = phi i1 [ false, %33 ], [ false, %32 ], [ false, %49 ], [ %46, %41 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21HTMLSelectMenuElement17IsValidOptionPartEPKNS_7ElementEb(%"class.blink::HTMLSelectMenuElement"* nocapture readonly, %"class.blink::Element"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %6, %"class.blink::Node"* dereferenceable(64) %9) #9
  %11 = xor i1 %2, true
  %12 = or i1 %10, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #9
  store i32 6, i32* %4, align 4
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store i32 2, i32* %5, align 4
  %20 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA177_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, [177 x i8]* nonnull dereferenceable(177) @.str.9) #9
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %17, %"class.blink::ConsoleMessage"* %20, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #9
  br label %21

21:                                               ; preds = %3, %13
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement18ButtonPartInsertedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* nocapture, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %5, %"class.blink::Node"* dereferenceable(64) %8) #9
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #9
  store i32 6, i32* %3, align 4
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #9
  store i32 2, i32* %4, align 4
  %17 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA167_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4, [167 x i8]* nonnull dereferenceable(167) @.str.6) #9
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %14, %"class.blink::ConsoleMessage"* %17, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #9
  br label %49

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::Element"*, %"class.blink::Element"** %20, align 8
  %22 = icmp eq %"class.blink::Element"* %21, %1
  br i1 %22, label %49, label %23

23:                                               ; preds = %18
  %24 = icmp eq %"class.blink::Element"* %21, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %21, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener", %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %29, i64 0, i32 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %26, %"class.WTF::AtomicString"* dereferenceable(8) %27, %"class.blink::EventListener"* %30, i1 zeroext false) #9
  br label %32

32:                                               ; preds = %23, %25
  %33 = icmp eq %"class.blink::Element"* %1, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener", %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %38, i64 0, i32 0, i32 0
  %40 = tail call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %35, %"class.WTF::AtomicString"* dereferenceable(8) %36, %"class.blink::EventListener"* %39, i1 zeroext false) #9
  br label %41

41:                                               ; preds = %32, %34
  %42 = ptrtoint %"class.blink::Element"* %1 to i64
  %43 = bitcast %"class.blink::Member.29"* %19 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::Element"* %1 to i8*
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #9
  br label %49

49:                                               ; preds = %46, %41, %10, %18
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement17ButtonPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Element"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = icmp eq %"class.blink::Element"* %7, %1
  br i1 %8, label %9, label %91

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener", %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %13, i64 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %10, %"class.WTF::AtomicString"* dereferenceable(8) %11, %"class.blink::EventListener"* %14, i1 zeroext false) #9
  %16 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %16, i32 0) #9
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %82, label %19

19:                                               ; preds = %9
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPartAttrE, align 8
  %21 = bitcast %"class.WTF::StringView"* %3 to i8*
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  %25 = bitcast %"class.WTF::StringView"* %3 to i64*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %27 = bitcast %"class.WTF::StringView"* %4 to i8*
  %28 = bitcast %"class.WTF::StringView"* %4 to i64*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  br label %32

32:                                               ; preds = %62, %19
  %33 = phi %"class.blink::Node"* [ %17, %19 ], [ %63, %62 ]
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %59

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::Node"* %33 to %"class.blink::Element"*
  %40 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %39, %"class.blink::QualifiedName"* dereferenceable(8) %20) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  store i8* null, i8** %23, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %45, i64* %25, align 8
  br label %51

46:                                               ; preds = %38
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %22, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %24, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i64 [ %50, %46 ], [ %45, %44 ]
  %53 = phi i32 [ %48, %46 ], [ 0, %44 ]
  store i32 %53, i32* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  store i64 %52, i64* %28, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kButtonPartNameE, i64 0, i64 0), i8** %29, align 8
  store i32 6, i32* %30, align 8
  %54 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %31, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %33, %"class.blink::Node"* dereferenceable(64) %57) #9
  br i1 %58, label %59, label %76

59:                                               ; preds = %55, %32, %51
  %60 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %33, i32 0) #9
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %66, %59
  %63 = phi %"class.blink::Node"* [ %60, %59 ], [ %68, %66 ]
  br label %32

64:                                               ; preds = %59
  %65 = icmp eq %"class.blink::Node"* %33, %16
  br i1 %65, label %82, label %66

66:                                               ; preds = %64, %70
  %67 = phi %"class.blink::Node"* [ %72, %70 ], [ %33, %64 ]
  %68 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %67, i32 0) #9
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %62

70:                                               ; preds = %66
  %71 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %67) #9
  %72 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %71, i64 0, i32 0
  %73 = icmp eq %"class.blink::ContainerNode"* %71, null
  %74 = icmp eq %"class.blink::Node"* %72, %16
  %75 = or i1 %73, %74
  br i1 %75, label %82, label %66

76:                                               ; preds = %55
  %77 = bitcast %"class.blink::Node"* %33 to %"class.blink::Element"*
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 0
  %79 = load %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"** %12, align 8
  %80 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener", %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %79, i64 0, i32 0, i32 0
  %81 = call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %78, %"class.WTF::AtomicString"* dereferenceable(8) %11, %"class.blink::EventListener"* %80, i1 zeroext false) #9
  br label %82

82:                                               ; preds = %64, %70, %9, %76
  %83 = phi %"class.blink::Element"* [ %77, %76 ], [ null, %9 ], [ null, %70 ], [ null, %64 ]
  %84 = ptrtoint %"class.blink::Element"* %83 to i64
  %85 = bitcast %"class.blink::Member.29"* %5 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.blink::Element"* %83 to i8*
  %90 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %89) #9
  br label %91

91:                                               ; preds = %88, %82, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement25SelectedValuePartInsertedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* nocapture, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 5
  %4 = ptrtoint %"class.blink::Element"* %1 to i64
  %5 = bitcast %"class.blink::Member.29"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Element"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #9
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement24SelectedValuePartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Element"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = icmp eq %"class.blink::Element"* %7, %1
  br i1 %8, label %9, label %78

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %10, i32 0) #9
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %69, label %13

13:                                               ; preds = %9
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPartAttrE, align 8
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %21 = bitcast %"class.WTF::StringView"* %4 to i8*
  %22 = bitcast %"class.WTF::StringView"* %4 to i64*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %25

25:                                               ; preds = %53, %13
  %26 = phi %"class.blink::Node"* [ %11, %13 ], [ %54, %53 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 12
  %30 = icmp ne i32 %29, 0
  %31 = icmp eq %"class.blink::Node"* %26, null
  %32 = or i1 %31, %30
  br i1 %32, label %50, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::Node"* %26 to %"class.blink::Element"*
  %35 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %34, %"class.blink::QualifiedName"* dereferenceable(8) %14) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  store i8* null, i8** %17, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %40, i64* %19, align 8
  br label %46

41:                                               ; preds = %33
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %16, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %18, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %46

46:                                               ; preds = %41, %39
  %47 = phi i64 [ %45, %41 ], [ %40, %39 ]
  %48 = phi i32 [ %43, %41 ], [ 0, %39 ]
  store i32 %48, i32* %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  store i64 %47, i64* %22, align 8
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN5blink21HTMLSelectMenuElement22kSelectedValuePartNameE, i64 0, i64 0), i8** %23, align 8
  store i32 14, i32* %24, align 8
  %49 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  br i1 %49, label %67, label %50

50:                                               ; preds = %25, %46
  %51 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %26, i32 0) #9
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %57, %50
  %54 = phi %"class.blink::Node"* [ %51, %50 ], [ %59, %57 ]
  br label %25

55:                                               ; preds = %50
  %56 = icmp eq %"class.blink::Node"* %26, %10
  br i1 %56, label %69, label %57

57:                                               ; preds = %55, %61
  %58 = phi %"class.blink::Node"* [ %63, %61 ], [ %26, %55 ]
  %59 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %58, i32 0) #9
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %61, label %53

61:                                               ; preds = %57
  %62 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %58) #9
  %63 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %62, i64 0, i32 0
  %64 = icmp eq %"class.blink::ContainerNode"* %62, null
  %65 = icmp eq %"class.blink::Node"* %63, %10
  %66 = or i1 %64, %65
  br i1 %66, label %69, label %57

67:                                               ; preds = %46
  %68 = bitcast %"class.blink::Node"* %26 to %"class.blink::Element"*
  br label %69

69:                                               ; preds = %55, %61, %67, %9
  %70 = phi %"class.blink::Element"* [ null, %9 ], [ %68, %67 ], [ null, %61 ], [ null, %55 ]
  %71 = ptrtoint %"class.blink::Element"* %70 to i64
  %72 = bitcast %"class.blink::Member.29"* %5 to i64*
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.blink::Element"* %70 to i8*
  %77 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #9
  br label %78

78:                                               ; preds = %75, %69, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement19ListboxPartInsertedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink21HTMLSelectMenuElement18IsValidListboxPartEPKNS_7ElementEb(%"class.blink::HTMLSelectMenuElement"* %0, %"class.blink::Element"* %1, i1 zeroext true)
  br i1 %3, label %4, label %52

4:                                                ; preds = %2
  %5 = icmp eq %"class.blink::Element"* %1, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E, align 1, !range !10
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E, align 1
  %9 = or i8 %8, %7
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %31

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kPopupTagE, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %22 = bitcast %"class.blink::Member.2"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  %29 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLPopupElement"*
  %30 = select i1 %28, %"class.blink::HTMLPopupElement"* %29, %"class.blink::HTMLPopupElement"* null
  br label %31

31:                                               ; preds = %4, %6, %11, %16
  %32 = phi %"class.blink::HTMLPopupElement"* [ %30, %16 ], [ null, %11 ], [ null, %6 ], [ null, %4 ]
  %33 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %34, align 8
  %36 = icmp eq %"class.blink::HTMLPopupElement"* %35, %32
  br i1 %36, label %52, label %37

37:                                               ; preds = %31
  %38 = icmp eq %"class.blink::HTMLPopupElement"* %35, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* nonnull %35, %"class.blink::HTMLSelectMenuElement"* null) #9
  %40 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %34, align 8
  tail call void @_ZN5blink16HTMLPopupElement34SetNeedsRepositioningForSelectMenuEb(%"class.blink::HTMLPopupElement"* %40, i1 zeroext false) #9
  br label %41

41:                                               ; preds = %39, %37
  %42 = ptrtoint %"class.blink::HTMLPopupElement"* %32 to i64
  %43 = bitcast %"class.blink::Member.31"* %33 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::HTMLPopupElement"* %32 to i8*
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #9
  %49 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %34, align 8
  br label %50

50:                                               ; preds = %46, %41
  %51 = phi %"class.blink::HTMLPopupElement"* [ %32, %41 ], [ %49, %46 ]
  tail call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* %51, %"class.blink::HTMLSelectMenuElement"* %0) #9
  br label %52

52:                                               ; preds = %50, %31, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement18ListboxPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Element"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %6, i64 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::Element"* %7, %1
  br i1 %8, label %9, label %132

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %10, i32 0) #9
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %111, label %13

13:                                               ; preds = %9
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPartAttrE, align 8
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %21 = bitcast %"class.WTF::StringView"* %4 to i8*
  %22 = bitcast %"class.WTF::StringView"* %4 to i64*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kPopupTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 4, i32 0, i32 0
  br label %28

28:                                               ; preds = %77, %13
  %29 = phi %"class.blink::Node"* [ %11, %13 ], [ %78, %77 ]
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %74

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::Node"* %29 to %"class.blink::Element"*
  %36 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %35, %"class.blink::QualifiedName"* dereferenceable(8) %14) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  store i8* null, i8** %17, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %41, i64* %19, align 8
  br label %47

42:                                               ; preds = %34
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %16, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %18, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %47

47:                                               ; preds = %42, %40
  %48 = phi i64 [ %46, %42 ], [ %41, %40 ]
  %49 = phi i32 [ %44, %42 ], [ 0, %40 ]
  store i32 %49, i32* %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  store i64 %48, i64* %22, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN5blink21HTMLSelectMenuElement16kListboxPartNameE, i64 0, i64 0), i8** %23, align 8
  store i32 7, i32* %24, align 8
  %50 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  br i1 %50, label %51, label %74

51:                                               ; preds = %47
  %52 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E, align 1, !range !10
  %53 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E, align 1
  %54 = or i8 %53, %52
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %74, label %56

56:                                               ; preds = %51
  %57 = load i32, i32* %30, align 8
  %58 = and i32 %57, 48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %56
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1, i32 2
  %63 = bitcast %"class.blink::Member.2"* %62 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %66, %68
  br i1 %69, label %70, label %74

70:                                               ; preds = %60
  %71 = load %"class.blink::Element"*, %"class.blink::Element"** %27, align 8
  %72 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %71, i64 0, i32 0, i32 0
  %73 = call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %29, %"class.blink::Node"* dereferenceable(64) %72) #9
  br i1 %73, label %74, label %91

74:                                               ; preds = %70, %28, %47, %60, %56, %51
  %75 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %29, i32 0) #9
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %81, %74
  %78 = phi %"class.blink::Node"* [ %75, %74 ], [ %83, %81 ]
  br label %28

79:                                               ; preds = %74
  %80 = icmp eq %"class.blink::Node"* %29, %10
  br i1 %80, label %111, label %81

81:                                               ; preds = %79, %85
  %82 = phi %"class.blink::Node"* [ %87, %85 ], [ %29, %79 ]
  %83 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %82, i32 0) #9
  %84 = icmp eq %"class.blink::Node"* %83, null
  br i1 %84, label %85, label %77

85:                                               ; preds = %81
  %86 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %82) #9
  %87 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %86, i64 0, i32 0
  %88 = icmp eq %"class.blink::ContainerNode"* %86, null
  %89 = icmp eq %"class.blink::Node"* %87, %10
  %90 = or i1 %88, %89
  br i1 %90, label %111, label %81

91:                                               ; preds = %70
  %92 = bitcast %"class.blink::Member.2"* %62 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %93 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E, align 1, !range !10
  %94 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E, align 1
  %95 = or i8 %94, %93
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %111, label %97

97:                                               ; preds = %91
  %98 = load i32, i32* %30, align 8
  %99 = and i32 %98, 48
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %111

101:                                              ; preds = %97
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %105, %107
  %109 = bitcast %"class.blink::Node"* %29 to %"class.blink::HTMLPopupElement"*
  %110 = select i1 %108, %"class.blink::HTMLPopupElement"* %109, %"class.blink::HTMLPopupElement"* null
  br label %111

111:                                              ; preds = %79, %85, %9, %91, %97, %101
  %112 = phi %"class.blink::HTMLPopupElement"* [ %110, %101 ], [ null, %97 ], [ null, %91 ], [ null, %9 ], [ null, %85 ], [ null, %79 ]
  %113 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6
  %114 = getelementptr inbounds %"class.blink::Member.31", %"class.blink::Member.31"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %114, align 8
  %116 = icmp eq %"class.blink::HTMLPopupElement"* %115, %112
  br i1 %116, label %132, label %117

117:                                              ; preds = %111
  %118 = icmp eq %"class.blink::HTMLPopupElement"* %115, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* nonnull %115, %"class.blink::HTMLSelectMenuElement"* null) #9
  %120 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %114, align 8
  call void @_ZN5blink16HTMLPopupElement34SetNeedsRepositioningForSelectMenuEb(%"class.blink::HTMLPopupElement"* %120, i1 zeroext false) #9
  br label %121

121:                                              ; preds = %119, %117
  %122 = ptrtoint %"class.blink::HTMLPopupElement"* %112 to i64
  %123 = bitcast %"class.blink::Member.31"* %113 to i64*
  store atomic i64 %122, i64* %123 monotonic, align 8
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %121
  %127 = bitcast %"class.blink::HTMLPopupElement"* %112 to i8*
  %128 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %127) #9
  %129 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %114, align 8
  br label %130

130:                                              ; preds = %126, %121
  %131 = phi %"class.blink::HTMLPopupElement"* [ %112, %121 ], [ %129, %126 ]
  call void @_ZN5blink16HTMLPopupElement25SetOwnerSelectMenuElementEPNS_21HTMLSelectMenuElementE(%"class.blink::HTMLPopupElement"* %131, %"class.blink::HTMLSelectMenuElement"* %0) #9
  br label %132

132:                                              ; preds = %130, %111, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement18OptionPartInsertedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::Element"*, align 8
  store %"class.blink::Element"* %1, %"class.blink::Element"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %8, %"class.blink::Node"* dereferenceable(64) %11) #9
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 0
  br i1 %12, label %22, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store i32 6, i32* %5, align 4
  %20 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  store i32 2, i32* %6, align 4
  %21 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA177_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, [177 x i8]* nonnull dereferenceable(177) @.str.9) #9
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %18, %"class.blink::ConsoleMessage"* %21, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  br label %95

22:                                               ; preds = %2
  %23 = ptrtoint %"class.blink::Element"* %1 to i64
  %24 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0
  %25 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %24, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::Element"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = bitcast %"class.blink::Element"** %4 to i64*
  store i64 %23, i64* %27, align 8
  %28 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable"* %25, %"class.blink::Element"** nonnull dereferenceable(8) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br i1 %28, label %95, label %29

29:                                               ; preds = %22
  %30 = icmp eq %"class.blink::Element"* %1, null
  br i1 %30, label %53, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 48
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %53

36:                                               ; preds = %31
  %37 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %41 = bitcast %"class.blink::Member.2"* %40 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %36
  %49 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLOptionElement"*
  call void @_ZN5blink17HTMLOptionElement35OptionInsertedIntoSelectMenuElementEv(%"class.blink::HTMLOptionElement"* nonnull %49) #9
  %50 = bitcast %"class.blink::Element"** %7 to %"class.blink::EventTarget"**
  %51 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %50, align 8
  %52 = bitcast %"class.blink::EventTarget"* %51 to %"class.blink::Element"*
  br label %53

53:                                               ; preds = %36, %29, %31, %48
  %54 = phi %"class.blink::Element"* [ %1, %36 ], [ null, %29 ], [ %1, %31 ], [ %52, %48 ]
  %55 = phi %"class.blink::EventTarget"* [ %13, %36 ], [ %13, %29 ], [ %13, %31 ], [ %51, %48 ]
  %56 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::OptionPartEventListener", %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"* %58, i64 0, i32 0, i32 0
  %60 = call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %55, %"class.WTF::AtomicString"* dereferenceable(8) %56, %"class.blink::EventListener"* %59, i1 zeroext false) #9
  call void @_ZN5blink7Element11setTabIndexEi(%"class.blink::Element"* %54, i32 -1) #9
  %61 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61)
  %62 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0, i32 1
  %63 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %62, i64 0, i32 0
  %64 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %63, i32 0) #9, !noalias !11
  %65 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %64, %"class.WTF::VectorBackedLinkedListNode"** %65, align 8, !alias.scope !11
  %66 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %3, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %62, %"class.WTF::VectorBackedLinkedList"** %66, align 8, !alias.scope !11
  %67 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4, !noalias !14
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %24, i64 0, i32 0, i32 0, i32 0
  %71 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %70, align 8, !noalias !14
  %72 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8, !noalias !14
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %74
  br i1 %69, label %85, label %76

76:                                               ; preds = %53
  %77 = icmp eq i32 %73, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %76, %82
  %79 = phi %"struct.WTF::KeyValuePair"* [ %83, %82 ], [ %71, %76 ]
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !14
  switch i64 %81, label %85 [
    i64 -1, label %82
    i64 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, %75
  br i1 %84, label %85, label %78

85:                                               ; preds = %78, %82, %53, %76
  %86 = phi %"struct.WTF::KeyValuePair"* [ %75, %53 ], [ %71, %76 ], [ %79, %78 ], [ %75, %82 ]
  %87 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %3, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair"* %86, %"struct.WTF::KeyValuePair"** %87, align 8, !alias.scope !14
  %88 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %3, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair"* %75, %"struct.WTF::KeyValuePair"** %88, align 8, !alias.scope !14
  %89 = call { %"class.blink::Member.29"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"* %24, %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8 %3, %"class.blink::Element"** nonnull dereferenceable(8) %7, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61)
  %90 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  %91 = load %"class.blink::Element"*, %"class.blink::Element"** %90, align 8
  %92 = icmp eq %"class.blink::Element"* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %85
  %94 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  call void @_ZN5blink21HTMLSelectMenuElement17SetSelectedOptionEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %0, %"class.blink::Element"* %94)
  br label %95

95:                                               ; preds = %85, %14, %22, %93
  ret void
}

declare void @_ZN5blink17HTMLOptionElement35OptionInsertedIntoSelectMenuElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare void @_ZN5blink7Element11setTabIndexEi(%"class.blink::Element"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement17OptionPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0
  %6 = ptrtoint %"class.blink::Element"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %5, i64 0, i32 0, i32 0
  %8 = bitcast %"class.blink::Element"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = bitcast %"class.blink::Element"** %4 to i64*
  store i64 %6, i64* %9, align 8
  %10 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable"* %7, %"class.blink::Element"** nonnull dereferenceable(8) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br i1 %10, label %11, label %46

11:                                               ; preds = %2
  %12 = icmp eq %"class.blink::Element"* %1, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 48
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1, i32 2
  %24 = bitcast %"class.blink::Member.2"* %23 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %18
  %32 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLOptionElement"*
  call void @_ZN5blink17HTMLOptionElement34OptionRemovedFromSelectMenuElementEv(%"class.blink::HTMLOptionElement"* nonnull %32) #9
  br label %33

33:                                               ; preds = %18, %11, %13, %31
  %34 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::OptionPartEventListener", %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"* %37, i64 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %34, %"class.WTF::AtomicString"* dereferenceable(8) %35, %"class.blink::EventListener"* %38, i1 zeroext false) #9
  %40 = bitcast %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40)
  call void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* nonnull sret %3, %"class.WTF::LinkedHashSet"* %5, %"class.blink::Element"* %1) #9
  call void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE(%"class.WTF::LinkedHashSet"* %5, %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8 %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40)
  %41 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  %42 = load %"class.blink::Element"*, %"class.blink::Element"** %41, align 8
  %43 = icmp eq %"class.blink::Element"* %42, %1
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = call %"class.blink::Element"* @_ZNK5blink21HTMLSelectMenuElement15FirstOptionPartEv(%"class.blink::HTMLSelectMenuElement"* %0)
  call void @_ZN5blink21HTMLSelectMenuElement17SetSelectedOptionEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %0, %"class.blink::Element"* %45)
  br label %46

46:                                               ; preds = %2, %44, %33
  ret void
}

declare void @_ZN5blink17HTMLOptionElement34OptionRemovedFromSelectMenuElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink21HTMLSelectMenuElement15FirstOptionPartEv(%"class.blink::HTMLSelectMenuElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %4, i32 0) #9
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %82, label %7

7:                                                ; preds = %1
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPartAttrE, align 8
  %9 = bitcast %"class.WTF::StringView"* %2 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %12 = bitcast i8** %11 to %"class.WTF::StringImpl"**
  %13 = bitcast %"class.WTF::StringView"* %2 to i64*
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  %16 = bitcast %"class.WTF::StringView"* %3 to i64*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  br label %22

22:                                               ; preds = %66, %7
  %23 = phi %"class.blink::Node"* [ %5, %7 ], [ %67, %66 ]
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %63

28:                                               ; preds = %22
  %29 = bitcast %"class.blink::Node"* %23 to %"class.blink::Element"*
  %30 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %29, %"class.blink::QualifiedName"* dereferenceable(8) %8) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  store i8* null, i8** %11, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %35, i64* %13, align 8
  br label %41

36:                                               ; preds = %28
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %10, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %12, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

41:                                               ; preds = %36, %34
  %42 = phi i64 [ %40, %36 ], [ %35, %34 ]
  %43 = phi i32 [ %38, %36 ], [ 0, %34 ]
  store i32 %43, i32* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  store i64 %42, i64* %16, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kOptionPartNameE, i64 0, i64 0), i8** %17, align 8
  store i32 6, i32* %18, align 8
  %44 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  br i1 %44, label %59, label %45

45:                                               ; preds = %41
  %46 = load i32, i32* %24, align 8
  %47 = and i32 %46, 48
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %63

49:                                               ; preds = %45
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 2
  %52 = bitcast %"class.blink::Member.2"* %51 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %49, %41
  %60 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %21, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* nonnull dereferenceable(64) %23, %"class.blink::Node"* dereferenceable(64) %61) #9
  br i1 %62, label %80, label %63

63:                                               ; preds = %22, %49, %59, %45
  %64 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %23, i32 0) #9
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %70, %63
  %67 = phi %"class.blink::Node"* [ %64, %63 ], [ %72, %70 ]
  br label %22

68:                                               ; preds = %63
  %69 = icmp eq %"class.blink::Node"* %23, %4
  br i1 %69, label %82, label %70

70:                                               ; preds = %68, %74
  %71 = phi %"class.blink::Node"* [ %76, %74 ], [ %23, %68 ]
  %72 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %71, i32 0) #9
  %73 = icmp eq %"class.blink::Node"* %72, null
  br i1 %73, label %74, label %66

74:                                               ; preds = %70
  %75 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %71) #9
  %76 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %75, i64 0, i32 0
  %77 = icmp eq %"class.blink::ContainerNode"* %75, null
  %78 = icmp eq %"class.blink::Node"* %76, %4
  %79 = or i1 %77, %78
  br i1 %79, label %82, label %70

80:                                               ; preds = %59
  %81 = bitcast %"class.blink::Node"* %23 to %"class.blink::Element"*
  br label %82

82:                                               ; preds = %68, %74, %80, %1
  %83 = phi %"class.blink::Element"* [ null, %1 ], [ %81, %80 ], [ null, %74 ], [ null, %68 ]
  ret %"class.blink::Element"* %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement27EnsureSelectedOptionIsValidEv(%"class.blink::HTMLSelectMenuElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = icmp eq %"class.blink::Element"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %1
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPartAttrE, align 8
  %9 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %8) #9
  %10 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %26

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %26

26:                                               ; preds = %18, %14
  %27 = phi i64 [ %25, %18 ], [ %16, %14 ]
  %28 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %28, i32* %29, align 8
  %30 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  %31 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %27, i64* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink21HTMLSelectMenuElement15kOptionPartNameE, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %33, align 8
  %34 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  br i1 %34, label %56, label %36

36:                                               ; preds = %26
  %37 = icmp eq %"class.blink::Element"* %35, null
  br i1 %37, label %64, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %35, i64 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 48
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %64

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %35, i64 0, i32 0, i32 0
  %45 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %46 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 2
  %49 = bitcast %"class.blink::Member.2"* %48 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %52, %54
  br i1 %55, label %56, label %64

56:                                               ; preds = %26, %43
  %57 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %35, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::HTMLPopupElement", %"class.blink::HTMLPopupElement"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %57, %"class.blink::Node"* dereferenceable(64) %60) #9
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  br label %64

64:                                               ; preds = %62, %38, %36, %43
  %65 = phi %"class.blink::Element"* [ %63, %62 ], [ %35, %38 ], [ null, %36 ], [ %35, %43 ]
  call void @_ZN5blink21HTMLSelectMenuElement17OptionPartRemovedEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %0, %"class.blink::Element"* %65)
  br label %66

66:                                               ; preds = %1, %64, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement31UpdateSelectedValuePartContentsEv(%"class.blink::HTMLSelectMenuElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0
  %8 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8, i32 0, i32 0
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  %11 = icmp eq %"class.blink::Element"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* nonnull %10) #9
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  br label %16

15:                                               ; preds = %6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0) #9
  br label %16

16:                                               ; preds = %15, %12
  %17 = bitcast %"class.blink::Element"* %4 to void (%"class.blink::Node"*, %"class.WTF::String"*)***
  %18 = load void (%"class.blink::Node"*, %"class.WTF::String"*)**, void (%"class.blink::Node"*, %"class.WTF::String"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %18, i64 32
  %20 = load void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %19, align 8
  call void %20(%"class.blink::Node"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %2) #9
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #9
  br label %37

37:                                               ; preds = %16, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %38

38:                                               ; preds = %1, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement23ButtonPartEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* nocapture readonly, %"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::Event"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %5 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %29

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener", %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %13, align 8
  %15 = icmp eq %"class.blink::HTMLPopupElement"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %10
  %17 = tail call zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"* nonnull %14) #9
  br i1 %17, label %29, label %18

18:                                               ; preds = %16
  %19 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %11, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %19, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %19, i64 0, i32 6, i32 0, i32 0
  %23 = icmp eq %"class.blink::HTMLPopupElement"* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = tail call zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"* nonnull %21) #9
  br i1 %25, label %29, label %26

26:                                               ; preds = %24
  %27 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %22, align 8
  tail call void @_ZN5blink16HTMLPopupElement34SetNeedsRepositioningForSelectMenuEb(%"class.blink::HTMLPopupElement"* %27, i1 zeroext true) #9
  %28 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %22, align 8
  tail call void @_ZN5blink16HTMLPopupElement4showEv(%"class.blink::HTMLPopupElement"* %28) #9
  br label %29

29:                                               ; preds = %10, %26, %24, %18, %16, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21HTMLSelectMenuElement23OptionPartEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"* nocapture readonly, %"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::Event"*) unnamed_addr #0 align 2 {
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %5 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %10, label %32

10:                                               ; preds = %3
  %11 = tail call %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"* %2) #9
  %12 = bitcast %"class.blink::EventTarget"* %11 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %13 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %13, i64 11
  %15 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %14, align 8
  %16 = tail call %"class.blink::Node"* %15(%"class.blink::EventTarget"* %11) #9
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 12
  %22 = icmp eq i32 %21, 0
  %23 = bitcast %"class.blink::Node"* %16 to %"class.blink::Element"*
  %24 = select i1 %22, %"class.blink::Element"* %23, %"class.blink::Element"* null
  br label %25

25:                                               ; preds = %10, %18
  %26 = phi %"class.blink::Element"* [ %24, %18 ], [ null, %10 ]
  %27 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::OptionPartEventListener", %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %28 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %27, align 8
  tail call void @_ZN5blink21HTMLSelectMenuElement17SetSelectedOptionEPNS_7ElementE(%"class.blink::HTMLSelectMenuElement"* %28, %"class.blink::Element"* %26)
  %29 = load %"class.blink::HTMLSelectMenuElement"*, %"class.blink::HTMLSelectMenuElement"** %27, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %29, i64 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::HTMLPopupElement"*, %"class.blink::HTMLPopupElement"** %30, align 8
  tail call void @_ZN5blink16HTMLPopupElement4hideEv(%"class.blink::HTMLPopupElement"* %31) #9
  br label %32

32:                                               ; preds = %25, %3
  ret void
}

declare %"class.blink::EventTarget"* @_ZNK5blink5Event13currentTargetEv(%"class.blink::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21HTMLSelectMenuElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectMenuElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.23"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement23ButtonPartEventListenerEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.25"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement23OptionPartEventListenerEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.27"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement22SelectMutationCallbackEE5TraceEPNS_7VisitorEPKv) #9
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 4
  %37 = bitcast %"class.blink::Member.29"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 5
  %48 = bitcast %"class.blink::Member.29"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 6
  %59 = bitcast %"class.blink::Member.31"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLPopupElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %68

68:                                               ; preds = %57, %62
  %69 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7
  %70 = bitcast %"class.blink::HeapLinkedHashSet"* %69 to i64*
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = bitcast %"class.blink::HeapLinkedHashSet"* %69 to i8**
  %73 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %74 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %74, i64 11
  %76 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %75, align 8
  tail call void %76(%"class.blink::Visitor"* %1, i8** %72) #9
  %77 = icmp eq i64 %71, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %68
  %79 = inttoptr i64 %71 to i8*
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %79, i8* nonnull %79, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %84

84:                                               ; preds = %78, %68
  %85 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 7, i32 0, i32 1
  %86 = bitcast %"class.WTF::VectorBackedLinkedList"* %85 to i64*
  %87 = load atomic i64, i64* %86 monotonic, align 8
  %88 = icmp eq i64 %87, 0
  %89 = bitcast %"class.WTF::VectorBackedLinkedList"* %85 to i8**
  %90 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %73, align 8
  %91 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %90, i64 11
  %92 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %91, align 8
  tail call void %92(%"class.blink::Visitor"* %1, i8** %89) #9
  br i1 %88, label %99, label %93

93:                                               ; preds = %84
  %94 = inttoptr i64 %87 to i8*
  %95 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %96 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, i64 5
  %98 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %97, align 8
  tail call void %98(%"class.blink::Visitor"* %1, i8* nonnull %94, i8* nonnull %94, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %99

99:                                               ; preds = %84, %93
  %100 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 8
  %101 = bitcast %"class.blink::Member.29"* %100 to i64*
  %102 = load atomic i64, i64* %101 monotonic, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %99
  %105 = inttoptr i64 %102 to i8*
  %106 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %107 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, i64 5
  %109 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %108, align 8
  tail call void %109(%"class.blink::Visitor"* %1, i8* nonnull %105, i8* nonnull %105, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %110

110:                                              ; preds = %99, %104
  %111 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %111, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13EventListener18NameInHeapSnapshotEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13EventListenerD2Ev(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLSelectMenuElement23ButtonPartEventListenerD0Ev(%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener14IsEventHandlerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13EventListener10ScriptBodyEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE(%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE(%"class.blink::NativeEventListener"*, %"class.blink::EventListener"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NativeEventListener", %"class.blink::NativeEventListener"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::EventListener"* %3, %1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21HTMLSelectMenuElement23ButtonPartEventListener5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener", %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener22IsJSBasedEventListenerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener20IsImageEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLSelectMenuElement23OptionPartEventListenerD0Ev(%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21HTMLSelectMenuElement23OptionPartEventListener5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement::OptionPartEventListener", %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink16MutationObserver8Delegate18NameInHeapSnapshotEv(%"class.blink::MutationObserver::Delegate"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16MutationObserver8DelegateD2Ev(%"class.blink::MutationObserver::Delegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLSelectMenuElement22SelectMutationCallbackD0Ev(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*) unnamed_addr #3 comdat align 2 {
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7ElementD2Ev(%"class.blink::Element"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #9
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLSelectMenuElementD0Ev(%"class.blink::HTMLSelectMenuElement"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #9
  %5 = getelementptr inbounds %"class.blink::HTMLSelectMenuElement", %"class.blink::HTMLSelectMenuElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #9
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink21HTMLSelectMenuElement18GetWrapperTypeInfoEv(%"class.blink::HTMLSelectMenuElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink21HTMLSelectMenuElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZNK5blink13ContainerNode11BoundingBoxEv() unnamed_addr

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #9
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.784"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZN5blink20MutationObserverInitC1Ev(%"class.blink::MutationObserverInit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #5

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLSelectMenuElement"*
  tail call void @_ZNK5blink21HTMLSelectMenuElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSelectMenuElement"* %3, %"class.blink::Visitor"* %0)
  ret void
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16MutationObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MutationObserver"*
  tail call void @_ZNK5blink16MutationObserver5TraceEPNS_7VisitorE(%"class.blink::MutationObserver"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink16MutationObserver5TraceEPNS_7VisitorE(%"class.blink::MutationObserver"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.697"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.697", %"class.WTF::Vector.697"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.697", %"class.WTF::Vector.697"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %24, i64 %25
  ret %"class.blink::Member.2"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast i8* %0 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %1, i64 0, i32 2
  %8 = bitcast %"class.blink::Member.29"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %6 to i64*
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = bitcast i8* %0 to %"class.WTF::VectorBackedLinkedListNode"*
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #9
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #9
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !10
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %10 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"class.WTF::VectorBackedLinkedListNode"* %11
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.36"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.36"* %0, i32 %22) #9
  %23 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %26 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.36"* %0, i32 %37) #9
  %38 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 %44
  %46 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %45 to i8*
  %47 = tail call %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF15ConstructTraitsINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEENS_12VectorTraitsIS7_EES6_E25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %46, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEES0_EEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %26 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !10
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.36"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEES0_EEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.22, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([265 x i8], [265 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_6MemberINS1_7ElementEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.WTF::VectorBackedLinkedListNode"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %3, i64 %28, i32 2
  %30 = bitcast %"class.blink::Member.29"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_6MemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16MutationObserver8DelegateEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16MutationObserver8DelegateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16MutationObserver8DelegateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16MutationObserver8DelegateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MutationObserver8DelegateEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16MutationObserver8DelegateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MutationObserver::Delegate"*
  %4 = bitcast i8* %1 to void (%"class.blink::MutationObserver::Delegate"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MutationObserver::Delegate"*, %"class.blink::Visitor"*)**, void (%"class.blink::MutationObserver::Delegate"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MutationObserver::Delegate"*, %"class.blink::Visitor"*)*, void (%"class.blink::MutationObserver::Delegate"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::MutationObserver::Delegate"*, %"class.blink::Visitor"*)*, void (%"class.blink::MutationObserver::Delegate"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MutationObserver::Delegate"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16MutationObserver8DelegateEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::MutationObserver::Delegate"*
  %3 = bitcast i8* %0 to void (%"class.blink::MutationObserver::Delegate"*)***
  %4 = load void (%"class.blink::MutationObserver::Delegate"*)**, void (%"class.blink::MutationObserver::Delegate"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::MutationObserver::Delegate"*)*, void (%"class.blink::MutationObserver::Delegate"*)** %4, i64 1
  %6 = load void (%"class.blink::MutationObserver::Delegate"*)*, void (%"class.blink::MutationObserver::Delegate"*)** %5, align 8
  tail call void %6(%"class.blink::MutationObserver::Delegate"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16MutationObserver8DelegateEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLSlotElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSlotElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 200
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 200
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -200
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 100, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 200, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLSlotElement"*
  tail call void @_ZN5blink15HTMLSlotElementC1ERNS_8DocumentE(%"class.blink::HTMLSlotElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLSlotElement"* %51
}

declare void @_ZN5blink15HTMLSlotElementC1ERNS_8DocumentE(%"class.blink::HTMLSlotElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLButtonElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLButtonElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 216
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 216
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -216
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 108, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 216, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLButtonElement"*
  tail call void @_ZN5blink17HTMLButtonElementC1ERNS_8DocumentE(%"class.blink::HTMLButtonElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLButtonElement"* %51
}

declare void @_ZN5blink17HTMLButtonElementC1ERNS_8DocumentE(%"class.blink::HTMLButtonElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EventListener"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EventListener"*
  %3 = bitcast i8* %0 to void (%"class.blink::EventListener"*)***
  %4 = load void (%"class.blink::EventListener"*)**, void (%"class.blink::EventListener"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %4, i64 1
  %6 = load void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %5, align 8
  tail call void %6(%"class.blink::EventListener"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLDivElement"*
  tail call void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLDivElement"* %51
}

declare void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLPopupElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLPopupElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 152
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 152
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -152
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 76, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 152, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLPopupElement"*
  tail call void @_ZN5blink16HTMLPopupElementC1ERNS_8DocumentE(%"class.blink::HTMLPopupElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLPopupElement"* %51
}

declare void @_ZN5blink16HTMLPopupElementC1ERNS_8DocumentE(%"class.blink::HTMLPopupElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA167_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [167 x i8]* dereferenceable(167)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds [167 x i8], [167 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [167 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #10
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #9
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #9
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA181_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [181 x i8]* dereferenceable(181)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds [181 x i8], [181 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [181 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #10
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #9
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #9
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA177_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [177 x i8]* dereferenceable(177)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds [177 x i8], [177 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [177 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #10
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #9
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #9
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::Element"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::Element"*
  %38 = icmp eq %"class.blink::Element"* %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %59, %39
  %54 = phi i64 [ %33, %39 ], [ %63, %59 ]
  %55 = phi i64 [ 0, %39 ], [ %61, %59 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %54, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Element"*, %"class.blink::Element"** %56, align 8
  %58 = icmp eq %"class.blink::Element"* %57, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %52, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::Element"*, %"class.blink::Element"** %65, align 8
  %67 = icmp eq %"class.blink::Element"* %66, %37
  br i1 %67, label %68, label %53

68:                                               ; preds = %53, %59, %2, %6
  %69 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %34, %6 ], [ null, %53 ], [ %64, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair"* %69, null
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.29"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Element"** dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %18, %"class.blink::Element"** dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #9
  %20 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %27, %"class.WTF::VectorBackedLinkedList"* %29, %"class.blink::Element"** dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %34, i32 0) #9
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %44, i32 %43) #9
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %45, %"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %49, %"class.WTF::VectorBackedLinkedList"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #9
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #9
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::Member.29"*, i8 } undef, %"class.blink::Member.29"* %57, 0
  %72 = insertvalue { %"class.blink::Member.29"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::Member.29"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %7, i32 0) #9
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %13, i32 %12) #9
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %84

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = bitcast %"class.blink::Element"** %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::Member.29"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %82, label %33, !prof !2

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::Member.29"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %79, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #9
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #9
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 9
  %58 = load i8, i8* %57, align 1, !range !10
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %64, align 8
  %66 = load atomic i64, i64* %43 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %65, i64 0, i32 0, i32 0
  %70 = inttoptr i64 %66 to i8*
  %71 = bitcast %"class.blink::MarkingVisitor"* %65 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %69, i8* nonnull %70, i8* %70, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  %75 = load i64, i64* %61, align 8
  br label %76

76:                                               ; preds = %68, %60
  %77 = phi i64 [ %63, %60 ], [ %75, %68 ]
  %78 = add i64 %77, -1
  store i64 %78, i64* %61, align 8
  br label %79

79:                                               ; preds = %33, %53, %76
  %80 = load i32, i32* %21, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %21, align 4
  br label %83

82:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.36"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #9
  br label %83

83:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  br label %101

84:                                               ; preds = %4
  %85 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %13, i32 %18) #9
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %17, align 8
  %88 = bitcast %"class.blink::Element"** %3 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %85 to i64*
  %91 = shl i64 %10, 28
  %92 = zext i32 %16 to i64
  %93 = or i64 %91, %92
  store i64 %93, i64* %90, align 8
  %94 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %85, i64 0, i32 2
  %95 = bitcast %"class.blink::Member.29"* %94 to i64*
  store atomic i64 %89, i64* %95 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %84
  %99 = inttoptr i64 %89 to i8*
  %100 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %99) #9
  br label %101

101:                                              ; preds = %98, %84, %83
  %102 = phi i32 [ %22, %83 ], [ %18, %84 ], [ %18, %98 ]
  %103 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %13, i32 %16) #9
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %103, i64 0, i32 1
  store i32 %102, i32* %104, align 4
  %105 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %13, i32 %12) #9
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %105, i64 0, i32 0
  store i32 %102, i32* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %13, i32 %102) #9
  %111 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %110, 0
  %112 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %111, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %7, i32 0) #9
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %1, %3
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %14, i32 %12) #9
  br i1 %13, label %41, label %16

16:                                               ; preds = %5
  %17 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %3 to i64
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %4, i64 0, i32 0
  %19 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %18, i32 0) #9
  %20 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = lshr exact i64 %21, 4
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %14, i32 %23) #9
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %12
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %14, i32 %30) #9
  %34 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %14, i32 %32) #9
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %33, i64 0, i32 1
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %34, i64 0, i32 0
  store i32 %30, i32* %36, align 8
  %37 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %14, i32 %26) #9
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %37, i64 0, i32 1
  store i32 %12, i32* %38, align 4
  store i32 %12, i32* %25, align 8
  store i32 %26, i32* %29, align 8
  store i32 %23, i32* %31, align 4
  br label %39

39:                                               ; preds = %16, %28
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %14, i32 %12) #9
  br label %41

41:                                               ; preds = %39, %5
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %15, %5 ], [ %40, %39 ]
  %43 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %42, 0
  %44 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %43, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::Element"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Element"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Element"*, %"class.blink::Element"** %40, align 8
  %42 = icmp eq %"class.blink::Element"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Element"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Element"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Element"* %59, %43
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Element"* %59, inttoptr (i64 -1 to %"class.blink::Element"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Element"*, %"class.blink::Element"** %73, align 8
  %75 = icmp eq %"class.blink::Element"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Element"*, %"class.blink::Element"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Element"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Element"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Element"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #9
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #9
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !2

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #9
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !10
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %147

147:                                              ; preds = %58, %135, %145
  %148 = phi i8 [ 1, %135 ], [ 1, %145 ], [ 0, %58 ]
  %149 = phi %"struct.WTF::KeyValuePair"* [ %89, %135 ], [ %146, %145 ], [ %60, %58 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !10
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !10
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #9
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #9
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #9
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::Member.29"* dereferenceable(8) %67) #9
  %69 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.26, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([428 x i8], [428 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7ElementEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::Member.29"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.29"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %34, align 8
  %36 = icmp eq %"class.blink::Element"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Element"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Element"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Element"*, %"class.blink::Element"** %67, align 8
  %69 = icmp eq %"class.blink::Element"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Element"* %63, inttoptr (i64 -1 to %"class.blink::Element"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Element"*, %"class.blink::Element"** %79, align 8
  %81 = icmp eq %"class.blink::Element"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5eraseENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %4, i32 0) #9, !noalias !17
  %6 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %9, %5
  br i1 %10, label %53, label %11

11:                                               ; preds = %2
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #9
  br label %18

18:                                               ; preds = %11, %16
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 14
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %9, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Element"*, %"class.blink::Element"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %28 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %27, %"class.blink::Element"* %26) #9
  %29 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %28, 0
  %30 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %31 = load i32, i32* %7, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %32
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %29
  br i1 %34, label %36, label %35

35:                                               ; preds = %18
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"* %27, %"struct.WTF::KeyValuePair"* %29) #9
  br label %36

36:                                               ; preds = %18, %35
  %37 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %38 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %37, align 8
  %39 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %9, %"class.WTF::VectorBackedLinkedList"* %38)
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #9
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %36
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #9
  br label %46

46:                                               ; preds = %36, %44
  %47 = phi i8* [ %45, %44 ], [ %42, %36 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 14
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, -1
  store i64 %52, i64* %50, align 8
  br label %53

53:                                               ; preds = %2, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* noalias sret, %"class.WTF::LinkedHashSet"*, %"class.blink::Element"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %4, %"class.blink::Element"* %2) #9
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %6, %12
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 1
  br i1 %13, label %15, label %36

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %16, i32 0) #9, !noalias !20
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %17, %"class.WTF::VectorBackedLinkedListNode"** %18, align 8, !alias.scope !20
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %19, align 8, !alias.scope !20
  %20 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4, !noalias !23
  %22 = icmp eq i32 %21, 0
  %23 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8, !noalias !23
  %24 = load i32, i32* %9, align 8, !noalias !23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %25
  br i1 %22, label %59, label %27

27:                                               ; preds = %15
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair"* [ %34, %33 ], [ %23, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !23
  switch i64 %32, label %59 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %26
  br i1 %35, label %59, label %29

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %39, i32 %38) #9
  %41 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %40, %"class.WTF::VectorBackedLinkedListNode"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4, !noalias !26
  %45 = icmp eq i32 %44, 0
  %46 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8, !noalias !26
  %47 = load i32, i32* %9, align 8, !noalias !26
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %48
  br i1 %45, label %59, label %50

50:                                               ; preds = %36
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %50, %56
  %53 = phi %"struct.WTF::KeyValuePair"* [ %57, %56 ], [ %46, %50 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !26
  switch i64 %55, label %59 [
    i64 -1, label %56
    i64 0, label %56
  ]

56:                                               ; preds = %52, %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %53, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, %49
  br i1 %58, label %59, label %52

59:                                               ; preds = %56, %52, %33, %29, %50, %36, %27, %15
  %60 = phi %"struct.WTF::KeyValuePair"* [ %26, %15 ], [ %23, %27 ], [ %49, %36 ], [ %46, %50 ], [ %26, %33 ], [ %30, %29 ], [ %53, %52 ], [ %49, %56 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ %26, %15 ], [ %26, %27 ], [ %49, %36 ], [ %49, %50 ], [ %26, %29 ], [ %26, %33 ], [ %49, %52 ], [ %49, %56 ]
  %62 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"** %62, align 8, !alias.scope !29
  %63 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::Member<blink::Element>, WTF::HashTraits<blink::Member<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair"* %61, %"struct.WTF::KeyValuePair"** %63, align 8, !alias.scope !29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink6MemberINS1_7ElementEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %6 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %5, i32 0) #9
  %7 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %6 to i64
  %8 = sub i64 %4, %7
  %9 = lshr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %11, i32 %10) #9
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %11, i32 %16) #9
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %11, i32 %14) #9
  %19 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 1
  store i32 %14, i32* %19, align 4
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %18, i64 0, i32 0
  store i32 %16, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 2
  %22 = bitcast %"class.blink::Member.29"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #9
  br label %27

27:                                               ; preds = %3, %25
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %13, align 4
  store i32 -1, i32* %15, align 8
  store i32 %10, i32* %28, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.36"* %11, i32 %14) #9
  %34 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %33, 0
  %35 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %34, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  store i32 0, i32* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  %8 = and i32 %7, 2147483647
  %9 = and i32 %6, -2147483648
  %10 = or i32 %8, %9
  store i32 %10, i32* %5, align 8
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 4
  %14 = mul i32 %13, 6
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %14, %16
  %18 = icmp ugt i32 %16, 8
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %49

20:                                               ; preds = %2
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #9
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #9
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !10
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 16
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %49, label %38

38:                                               ; preds = %27, %34
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 13
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = load i32, i32* %15, align 8
  %44 = lshr i32 %43, 1
  %45 = zext i32 %44 to i64
  %46 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %45) #9
  %47 = bitcast %"class.blink::HeapHashTableBacking"* %46 to %"struct.WTF::KeyValuePair"*
  %48 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %47, i32 %44, %"struct.WTF::KeyValuePair"* null) #9
  br label %49

49:                                               ; preds = %34, %2, %42, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::Element"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Element"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %34, align 8
  %36 = icmp eq %"class.blink::Element"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Element"*, %"class.blink::Element"** %54, align 8
  %56 = icmp eq %"class.blink::Element"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Element"*, %"class.blink::Element"** %63, align 8
  %65 = icmp eq %"class.blink::Element"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement23ButtonPartEventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLSelectMenuElement::ButtonPartEventListener"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement23OptionPartEventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLSelectMenuElement::OptionPartEventListener"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21HTMLSelectMenuElement22SelectMutationCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLSelectMenuElement::SelectMutationCallback"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLPopupElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLPopupElement"*
  tail call void @_ZNK5blink16HTMLPopupElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPopupElement"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink16HTMLPopupElement5TraceEPNS_7VisitorE(%"class.blink::HTMLPopupElement"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!16 = distinct !{!16, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!25 = distinct !{!25, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!28 = distinct !{!28, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!29 = !{!24, !21, !27}
