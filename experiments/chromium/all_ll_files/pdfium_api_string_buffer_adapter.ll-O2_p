; ModuleID = '../../pdf/pdfium/pdfium_api_string_buffer_adapter.cc'
source_filename = "../../pdf/pdfium/pdfium_api_string_buffer_adapter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter" = type <{ %"class.std::__1::basic_string"*, i8*, i64, i8, i8, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1" = type <{ %"class.std::__1::basic_string.2"*, i8*, i64, i8, i8, [6 x i8] }>
%"class.std::__1::basic_string.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter" = type { %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.6 }
%struct.anon.6 = type { %"struct.std::__1::__padding.7", i8 }
%"struct.std::__1::__padding.7" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC5EPS8_mb = comdat any

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED5Ev = comdat any

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7GetDataEv = comdat any

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5CloseEm = comdat any

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEC5EPS8_mb = comdat any

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEED5Ev = comdat any

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE7GetDataEv = comdat any

$_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE5CloseEm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

@_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC1EPS8_mb = weak_odr hidden unnamed_addr alias void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*, %"class.std::__1::basic_string"*, i64, i1), void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*, %"class.std::__1::basic_string"*, i64, i1)* @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC2EPS8_mb
@_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*), void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*)* @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED2Ev
@_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEC1EPS8_mb = weak_odr hidden unnamed_addr alias void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*, %"class.std::__1::basic_string.2"*, i64, i1), void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*, %"class.std::__1::basic_string.2"*, i64, i1)* @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEC2EPS8_mb
@_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*), void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*)* @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEED2Ev
@_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapterC1EPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEmb = hidden unnamed_addr alias void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"*, %"class.std::__1::basic_string.2"*, i64, i1), void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"*, %"class.std::__1::basic_string.2"*, i64, i1)* @_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapterC2EPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEmb
@_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapterD1Ev = hidden unnamed_addr alias void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"*), void (%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"*)* @_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapterD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC2EPS8_mb(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*, %"class.std::__1::basic_string"*, i64, i1 zeroext) unnamed_addr #0 comdat($_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEC5EPS8_mb) align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %6, align 8
  %7 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 1
  %8 = add i64 %2, 1
  %9 = tail call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* %1, i64 %8) #9
  store i8* %9, i8** %7, align 8
  %10 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 2
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 3
  store i8 %5, i8* %11, align 8
  %12 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 4
  store i8 0, i8* %12, align 1
  ret void
}

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED2Ev(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*) unnamed_addr #0 comdat($_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED5Ev) align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7GetDataEv(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5CloseEm(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 4
  store i8 1, i8* %3, align 1
  %4 = icmp eq i64 %1, 0
  %5 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  br i1 %4, label %9, label %7

7:                                                ; preds = %2
  %8 = add i64 %1, -1
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %6, i64 %8, i8 signext 0) #9
  br label %20

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %17, align 8
  br label %20

18:                                               ; preds = %9
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  store i8 0, i8* %19, align 1
  store i8 0, i8* %11, align 1
  br label %20

20:                                               ; preds = %18, %14, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEC2EPS8_mb(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*, %"class.std::__1::basic_string.2"*, i64, i1 zeroext) unnamed_addr #0 comdat($_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEC5EPS8_mb) align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string.2"* %1, %"class.std::__1::basic_string.2"** %6, align 8
  %7 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 1
  %8 = add i64 %2, 1
  %9 = tail call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.2"* %1, i64 %8) #9
  %10 = bitcast i8** %7 to i16**
  store i16* %9, i16** %10, align 8
  %11 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 2
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 3
  store i8 %5, i8* %12, align 8
  %13 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 4
  store i8 0, i8* %13, align 1
  ret void
}

declare i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.2"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEED2Ev(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*) unnamed_addr #0 comdat($_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEED5Ev) align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE7GetDataEv(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE5CloseEm(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 4
  store i8 1, i8* %3, align 1
  %4 = icmp eq i64 %1, 0
  %5 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1", %"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::basic_string.2"*, %"class.std::__1::basic_string.2"** %5, align 8
  br i1 %4, label %75, label %7

7:                                                ; preds = %2
  %8 = add i64 %1, -1
  %9 = bitcast %"class.std::__1::basic_string.2"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %7
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = icmp ugt i64 %8, %19
  br i1 %20, label %21, label %65

21:                                               ; preds = %18
  %22 = sub i64 %8, %19
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %86, label %24

24:                                               ; preds = %21
  br i1 %12, label %25, label %32

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 9223372036854775807
  %29 = add nsw i64 %28, -1
  %30 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  br label %34

32:                                               ; preds = %24
  %33 = zext i8 %11 to i64
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i64 [ %29, %25 ], [ 10, %32 ]
  %36 = phi i64 [ %31, %25 ], [ %33, %32 ]
  %37 = sub i64 %35, %36
  %38 = icmp ult i64 %37, %22
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = add i64 %36, %22
  %41 = sub i64 %40, %35
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.2"* %6, i64 %35, i64 %41, i64 %36, i64 %36, i64 0, i64 0) #9
  %42 = load i8, i8* %10, align 1
  br label %43

43:                                               ; preds = %39, %34
  %44 = phi i8 [ %42, %39 ], [ %11, %34 ]
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i16*, i16** %47, align 8
  br label %51

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string.2"* %6 to i16*
  br label %51

51:                                               ; preds = %49, %46
  %52 = phi i16* [ %48, %46 ], [ %50, %49 ]
  %53 = getelementptr inbounds i16, i16* %52, i64 %36
  %54 = bitcast i16* %53 to i8*
  %55 = shl nuw i64 %22, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %54, i8 0, i64 %55, i1 false)
  %56 = add i64 %36, %22
  %57 = load i8, i8* %10, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %56, i64* %60, align 8
  br label %63

61:                                               ; preds = %51
  %62 = trunc i64 %56 to i8
  store i8 %62, i8* %10, align 1
  br label %63

63:                                               ; preds = %61, %59
  %64 = getelementptr inbounds i16, i16* %52, i64 %56
  store i16 0, i16* %64, align 2
  br label %86

65:                                               ; preds = %18
  br i1 %12, label %66, label %71

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = getelementptr inbounds i16, i16* %68, i64 %8
  store i16 0, i16* %69, align 2
  %70 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %70, align 8
  br label %86

71:                                               ; preds = %65
  %72 = bitcast %"class.std::__1::basic_string.2"* %6 to i16*
  %73 = getelementptr inbounds i16, i16* %72, i64 %8
  store i16 0, i16* %73, align 2
  %74 = trunc i64 %8 to i8
  store i8 %74, i8* %10, align 1
  br label %86

75:                                               ; preds = %2
  %76 = bitcast %"class.std::__1::basic_string.2"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i16*, i16** %81, align 8
  store i16 0, i16* %82, align 2
  %83 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %83, align 8
  br label %86

84:                                               ; preds = %75
  %85 = bitcast %"class.std::__1::basic_string.2"* %6 to i16*
  store i16 0, i16* %85, align 2
  store i8 0, i8* %77, align 1
  br label %86

86:                                               ; preds = %84, %80, %71, %66, %21, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapterC2EPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEmb(%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* nocapture, %"class.std::__1::basic_string.2"*, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = lshr i64 %2, 1
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string.2"* %1, %"class.std::__1::basic_string.2"** %7, align 8
  %8 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* %0, i64 0, i32 0, i32 1
  %9 = add nuw i64 %5, 1
  %10 = tail call i16* @_ZN4base9WriteIntoEPNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string.2"* %1, i64 %9) #9
  %11 = bitcast i8** %8 to i16**
  store i16* %10, i16** %11, align 8
  %12 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* %0, i64 0, i32 0, i32 2
  store i64 %5, i64* %12, align 8
  %13 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* %0, i64 0, i32 0, i32 3
  store i8 %6, i8* %13, align 8
  %14 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %14, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapterD2Ev(%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapter7GetDataEv(%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* %0, i64 0, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf8internal39PDFiumAPIStringBufferSizeInBytesAdapter5CloseEm(%"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter", %"class.chrome_pdf::internal::PDFiumAPIStringBufferSizeInBytesAdapter"* %0, i64 0, i32 0
  %4 = lshr i64 %1, 1
  tail call void @_ZN10chrome_pdf8internal28PDFiumAPIStringBufferAdapterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE5CloseEm(%"class.chrome_pdf::internal::PDFiumAPIStringBufferAdapter.1"* %3, i64 %4)
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.2"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.2"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #10
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.2"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #10
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #11
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !13
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !13
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !16, !noalias !13
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !16, !noalias !13
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !13
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !13
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !16, !noalias !13
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !16, !noalias !13
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !13
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !13
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !16, !noalias !13
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !16, !noalias !13
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !13
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !13
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !16, !noalias !13
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !16, !noalias !13
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !18

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !13
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !13
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !16, !noalias !13
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !16, !noalias !13
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !19

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !20

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !21

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #11
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.2"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
